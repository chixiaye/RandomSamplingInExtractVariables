{
  "id" : 168,
  "expression" : "reader",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/telegram/ui/NewContactActivity.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "reader",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 554,
      "startColumnNumber" : 27,
      "endLineNumber" : 554,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 554,
        "startColumnNumber" : 27,
        "endLineNumber" : 554,
        "endColumnNumber" : 44
      },
      "nodeContext" : "reader.readLine()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 554,
        "startColumnNumber" : 20,
        "endLineNumber" : 554,
        "endColumnNumber" : 44
      },
      "nodeContext" : "line=reader.readLine()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 554,
        "startColumnNumber" : 19,
        "endLineNumber" : 554,
        "endColumnNumber" : 45
      },
      "nodeContext" : "(line=reader.readLine())",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 554,
        "startColumnNumber" : 19,
        "endLineNumber" : 554,
        "endColumnNumber" : 53
      },
      "nodeContext" : "(line=reader.readLine()) != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 421,
        "startLineNumber" : 554,
        "startColumnNumber" : 12,
        "endLineNumber" : 563,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while ((line=reader.readLine()) != null) {\n  String[] args=line.split(\";\");\n  countriesArray.add(0,args[2]);\n  countriesMap.put(args[2],args[0]);\n  codesMap.put(args[0],args[2]);\n  if (args.length > 3) {\n    phoneFormatMap.put(args[0],args[3]);\n  }\n  languageMap.put(args[1],args[2]);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 76,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 635,
        "startLineNumber" : 551,
        "startColumnNumber" : 12,
        "endLineNumber" : 565,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  BufferedReader reader=new BufferedReader(new InputStreamReader(context.getResources().getAssets().open(\"countries.txt\")));\n  String line;\n  while ((line=reader.readLine()) != null) {\n    String[] args=line.split(\";\");\n    countriesArray.add(0,args[2]);\n    countriesMap.put(args[2],args[0]);\n    codesMap.put(args[0],args[2]);\n    if (args.length > 3) {\n      phoneFormatMap.put(args[0],args[3]);\n    }\n    languageMap.put(args[1],args[2]);\n  }\n  reader.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 551,
        "startColumnNumber" : 8,
        "endLineNumber" : 567,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  BufferedReader reader=new BufferedReader(new InputStreamReader(context.getResources().getAssets().open(\"countries.txt\")));\n  String line;\n  while ((line=reader.readLine()) != null) {\n    String[] args=line.split(\";\");\n    countriesArray.add(0,args[2]);\n    countriesMap.put(args[2],args[0]);\n    codesMap.put(args[0],args[2]);\n    if (args.length > 3) {\n      phoneFormatMap.put(args[0],args[3]);\n    }\n    languageMap.put(args[1],args[2]);\n  }\n  reader.close();\n}\n catch (Exception e) {\n  FileLog.e(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 117,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 25835,
        "startLineNumber" : 102,
        "startColumnNumber" : 44,
        "endLineNumber" : 619,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  actionBar.setBackButtonImage(R.drawable.ic_ab_back);\n  actionBar.setAllowOverlayTitle(true);\n  actionBar.setTitle(LocaleController.getString(\"AddContactTitle\",R.string.AddContactTitle));\n  actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick(){\n    @Override public void onItemClick(    int id){\n      if (id == -1) {\n        finishFragment();\n      }\n else       if (id == done_button) {\n        if (donePressed) {\n          return;\n        }\n        if (firstNameField.length() == 0) {\n          Vibrator v=(Vibrator)getParentActivity().getSystemService(Context.VIBRATOR_SERVICE);\n          if (v != null) {\n            v.vibrate(200);\n          }\n          AndroidUtilities.shakeView(firstNameField,2,0);\n          return;\n        }\n        if (codeField.length() == 0) {\n          Vibrator v=(Vibrator)getParentActivity().getSystemService(Context.VIBRATOR_SERVICE);\n          if (v != null) {\n            v.vibrate(200);\n          }\n          AndroidUtilities.shakeView(codeField,2,0);\n          return;\n        }\n        if (phoneField.length() == 0) {\n          Vibrator v=(Vibrator)getParentActivity().getSystemService(Context.VIBRATOR_SERVICE);\n          if (v != null) {\n            v.vibrate(200);\n          }\n          AndroidUtilities.shakeView(phoneField,2,0);\n          return;\n        }\n        donePressed=true;\n        showEditDoneProgress(true,true);\n        final TLRPC.TL_contacts_importContacts req=new TLRPC.TL_contacts_importContacts();\n        final TLRPC.TL_inputPhoneContact inputPhoneContact=new TLRPC.TL_inputPhoneContact();\n        inputPhoneContact.first_name=firstNameField.getText().toString();\n        inputPhoneContact.last_name=lastNameField.getText().toString();\n        inputPhoneContact.phone=\"+\" + codeField.getText().toString() + phoneField.getText().toString();\n        req.contacts.add(inputPhoneContact);\n        int reqId=ConnectionsManager.getInstance(currentAccount).sendRequest(req,(response,error) -> {\n          final TLRPC.TL_contacts_importedContacts res=(TLRPC.TL_contacts_importedContacts)response;\n          AndroidUtilities.runOnUIThread(() -> {\n            donePressed=false;\n            if (res != null) {\n              if (!res.users.isEmpty()) {\n                MessagesController.getInstance(currentAccount).putUsers(res.users,false);\n                MessagesController.openChatOrProfileWith(res.users.get(0),null,NewContactActivity.this,1,true);\n              }\n else {\n                if (getParentActivity() == null) {\n                  return;\n                }\n                showEditDoneProgress(false,true);\n                AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n                builder.setTitle(LocaleController.getString(\"ContactNotRegisteredTitle\",R.string.ContactNotRegisteredTitle));\n                builder.setMessage(LocaleController.formatString(\"ContactNotRegistered\",R.string.ContactNotRegistered,ContactsController.formatName(inputPhoneContact.first_name,inputPhoneContact.last_name)));\n                builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n                builder.setPositiveButton(LocaleController.getString(\"Invite\",R.string.Invite),(dialog,which) -> {\n                  try {\n                    Intent intent=new Intent(Intent.ACTION_VIEW,Uri.fromParts(\"sms\",inputPhoneContact.phone,null));\n                    intent.putExtra(\"sms_body\",ContactsController.getInstance(currentAccount).getInviteText(1));\n                    getParentActivity().startActivityForResult(intent,500);\n                  }\n catch (                  Exception e) {\n                    FileLog.e(e);\n                  }\n                }\n);\n                showDialog(builder.create());\n              }\n            }\n else {\n              showEditDoneProgress(false,true);\n              AlertsCreator.processError(currentAccount,error,NewContactActivity.this,req);\n            }\n          }\n);\n        }\n,ConnectionsManager.RequestFlagFailOnServerErrors);\n        ConnectionsManager.getInstance(currentAccount).bindRequestToGuid(reqId,classGuid);\n      }\n    }\n  }\n);\n  avatarDrawable=new AvatarDrawable();\n  avatarDrawable.setInfo(5,\"\",\"\");\n  ActionBarMenu menu=actionBar.createMenu();\n  editDoneItem=menu.addItemWithWidth(done_button,R.drawable.ic_done,AndroidUtilities.dp(56));\n  editDoneItem.setContentDescription(LocaleController.getString(\"Done\",R.string.Done));\n  editDoneItemProgress=new ContextProgressView(context,1);\n  editDoneItem.addView(editDoneItemProgress,LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,LayoutHelper.MATCH_PARENT));\n  editDoneItemProgress.setVisibility(View.INVISIBLE);\n  fragmentView=new ScrollView(context);\n  contentLayout=new LinearLayout(context);\n  contentLayout.setPadding(AndroidUtilities.dp(24),0,AndroidUtilities.dp(24),0);\n  contentLayout.setOrientation(LinearLayout.VERTICAL);\n  ((ScrollView)fragmentView).addView(contentLayout,LayoutHelper.createScroll(LayoutHelper.MATCH_PARENT,LayoutHelper.WRAP_CONTENT,Gravity.LEFT | Gravity.TOP));\n  contentLayout.setOnTouchListener((v,event) -> true);\n  FrameLayout frameLayout=new FrameLayout(context);\n  contentLayout.addView(frameLayout,LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT,LayoutHelper.WRAP_CONTENT,0,24,0,0));\n  avatarImage=new BackupImageView(context);\n  avatarImage.setImageDrawable(avatarDrawable);\n  frameLayout.addView(avatarImage,LayoutHelper.createFrame(60,60,Gravity.LEFT | Gravity.TOP,0,9,0,0));\n  boolean needInvalidateAvatar=false;\n  firstNameField=new EditTextBoldCursor(context);\n  firstNameField.setTextSize(TypedValue.COMPLEX_UNIT_DIP,18);\n  firstNameField.setHintTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteHintText));\n  firstNameField.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  firstNameField.setMaxLines(1);\n  firstNameField.setLines(1);\n  firstNameField.setSingleLine(true);\n  firstNameField.setBackgroundDrawable(Theme.createEditTextDrawable(context,false));\n  firstNameField.setGravity(Gravity.LEFT);\n  firstNameField.setInputType(InputType.TYPE_TEXT_FLAG_CAP_SENTENCES | InputType.TYPE_TEXT_FLAG_AUTO_CORRECT);\n  firstNameField.setImeOptions(EditorInfo.IME_ACTION_NEXT);\n  firstNameField.setHint(LocaleController.getString(\"FirstName\",R.string.FirstName));\n  firstNameField.setCursorColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  firstNameField.setCursorSize(AndroidUtilities.dp(20));\n  firstNameField.setCursorWidth(1.5f);\n  if (initialFirstName != null) {\n    firstNameField.setText(initialFirstName);\n    initialFirstName=null;\n    needInvalidateAvatar=true;\n  }\n  frameLayout.addView(firstNameField,LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,34,Gravity.LEFT | Gravity.TOP,84,0,0,0));\n  firstNameField.setOnEditorActionListener((textView,i,keyEvent) -> {\n    if (i == EditorInfo.IME_ACTION_NEXT) {\n      lastNameField.requestFocus();\n      lastNameField.setSelection(lastNameField.length());\n      return true;\n    }\n    return false;\n  }\n);\n  firstNameField.addTextChangedListener(new TextWatcher(){\n    @Override public void beforeTextChanged(    CharSequence charSequence,    int i,    int i1,    int i2){\n    }\n    @Override public void onTextChanged(    CharSequence charSequence,    int i,    int i1,    int i2){\n    }\n    @Override public void afterTextChanged(    Editable editable){\n      invalidateAvatar();\n    }\n  }\n);\n  lastNameField=new EditTextBoldCursor(context);\n  lastNameField.setTextSize(TypedValue.COMPLEX_UNIT_DIP,18);\n  lastNameField.setHintTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteHintText));\n  lastNameField.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  lastNameField.setBackgroundDrawable(Theme.createEditTextDrawable(context,false));\n  lastNameField.setMaxLines(1);\n  lastNameField.setLines(1);\n  lastNameField.setSingleLine(true);\n  lastNameField.setGravity(Gravity.LEFT);\n  lastNameField.setInputType(InputType.TYPE_TEXT_FLAG_CAP_SENTENCES | InputType.TYPE_TEXT_FLAG_AUTO_CORRECT);\n  lastNameField.setImeOptions(EditorInfo.IME_ACTION_NEXT);\n  lastNameField.setHint(LocaleController.getString(\"LastName\",R.string.LastName));\n  lastNameField.setCursorColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  lastNameField.setCursorSize(AndroidUtilities.dp(20));\n  lastNameField.setCursorWidth(1.5f);\n  if (initialLastName != null) {\n    lastNameField.setText(initialLastName);\n    initialLastName=null;\n    needInvalidateAvatar=true;\n  }\n  frameLayout.addView(lastNameField,LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,34,Gravity.LEFT | Gravity.TOP,84,44,0,0));\n  lastNameField.setOnEditorActionListener((textView,i,keyEvent) -> {\n    if (i == EditorInfo.IME_ACTION_NEXT) {\n      phoneField.requestFocus();\n      phoneField.setSelection(phoneField.length());\n      return true;\n    }\n    return false;\n  }\n);\n  lastNameField.addTextChangedListener(new TextWatcher(){\n    @Override public void beforeTextChanged(    CharSequence charSequence,    int i,    int i1,    int i2){\n    }\n    @Override public void onTextChanged(    CharSequence charSequence,    int i,    int i1,    int i2){\n    }\n    @Override public void afterTextChanged(    Editable editable){\n      invalidateAvatar();\n    }\n  }\n);\n  if (needInvalidateAvatar) {\n    invalidateAvatar();\n  }\n  countryButton=new TextView(context);\n  countryButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP,18);\n  countryButton.setPadding(0,AndroidUtilities.dp(4),0,AndroidUtilities.dp(4));\n  countryButton.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  countryButton.setMaxLines(1);\n  countryButton.setSingleLine(true);\n  countryButton.setEllipsize(TextUtils.TruncateAt.END);\n  countryButton.setGravity(Gravity.LEFT | Gravity.CENTER_HORIZONTAL);\n  countryButton.setBackground(Theme.getSelectorDrawable(true));\n  contentLayout.addView(countryButton,LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT,36,0,24,0,14));\n  countryButton.setOnClickListener(view -> {\n    CountrySelectActivity fragment=new CountrySelectActivity(true);\n    fragment.setCountrySelectActivityDelegate((name,shortName) -> {\n      selectCountry(name);\n      phoneField.requestFocus();\n      phoneField.setSelection(phoneField.length());\n    }\n);\n    presentFragment(fragment);\n  }\n);\n  lineView=new View(context);\n  lineView.setPadding(AndroidUtilities.dp(8),0,AndroidUtilities.dp(8),0);\n  lineView.setBackgroundColor(Theme.getColor(Theme.key_windowBackgroundWhiteGrayLine));\n  contentLayout.addView(lineView,LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT,1,0,-17.5f,0,0));\n  LinearLayout linearLayout2=new LinearLayout(context);\n  linearLayout2.setOrientation(HORIZONTAL);\n  contentLayout.addView(linearLayout2,LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT,LayoutHelper.WRAP_CONTENT,0,20,0,0));\n  textView=new TextView(context);\n  textView.setText(\"+\");\n  textView.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP,18);\n  textView.setImportantForAccessibility(View.IMPORTANT_FOR_ACCESSIBILITY_NO);\n  linearLayout2.addView(textView,LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT,LayoutHelper.WRAP_CONTENT));\n  codeField=new EditTextBoldCursor(context);\n  codeField.setInputType(InputType.TYPE_CLASS_PHONE);\n  codeField.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  codeField.setBackgroundDrawable(Theme.createEditTextDrawable(context,false));\n  codeField.setCursorColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  codeField.setCursorSize(AndroidUtilities.dp(20));\n  codeField.setCursorWidth(1.5f);\n  codeField.setPadding(AndroidUtilities.dp(10),0,0,0);\n  codeField.setTextSize(TypedValue.COMPLEX_UNIT_DIP,18);\n  codeField.setMaxLines(1);\n  codeField.setGravity(Gravity.LEFT | Gravity.CENTER_VERTICAL);\n  codeField.setImeOptions(EditorInfo.IME_ACTION_NEXT | EditorInfo.IME_FLAG_NO_EXTRACT_UI);\n  linearLayout2.addView(codeField,LayoutHelper.createLinear(55,36,-9,0,16,0));\n  codeField.addTextChangedListener(new TextWatcher(){\n    @Override public void beforeTextChanged(    CharSequence charSequence,    int i,    int i2,    int i3){\n    }\n    @Override public void onTextChanged(    CharSequence charSequence,    int i,    int i2,    int i3){\n    }\n    @Override public void afterTextChanged(    Editable editable){\n      if (ignoreOnTextChange) {\n        return;\n      }\n      ignoreOnTextChange=true;\n      String text=PhoneFormat.stripExceptNumbers(codeField.getText().toString());\n      codeField.setText(text);\n      if (text.length() == 0) {\n        countryButton.setText(LocaleController.getString(\"ChooseCountry\",R.string.ChooseCountry));\n        phoneField.setHintText(null);\n        countryState=1;\n      }\n else {\n        String country;\n        boolean ok=false;\n        String textToSet=null;\n        if (text.length() > 4) {\n          ignoreOnTextChange=true;\n          for (int a=4; a >= 1; a--) {\n            String sub=text.substring(0,a);\n            country=codesMap.get(sub);\n            if (country != null) {\n              ok=true;\n              textToSet=text.substring(a) + phoneField.getText().toString();\n              codeField.setText(text=sub);\n              break;\n            }\n          }\n          if (!ok) {\n            ignoreOnTextChange=true;\n            textToSet=text.substring(1) + phoneField.getText().toString();\n            codeField.setText(text=text.substring(0,1));\n          }\n        }\n        country=codesMap.get(text);\n        if (country != null) {\n          int index=countriesArray.indexOf(country);\n          if (index != -1) {\n            ignoreSelection=true;\n            countryButton.setText(countriesArray.get(index));\n            String hint=phoneFormatMap.get(text);\n            phoneField.setHintText(hint != null ? hint.replace('X','–') : null);\n            countryState=0;\n          }\n else {\n            countryButton.setText(LocaleController.getString(\"WrongCountry\",R.string.WrongCountry));\n            phoneField.setHintText(null);\n            countryState=2;\n          }\n        }\n else {\n          countryButton.setText(LocaleController.getString(\"WrongCountry\",R.string.WrongCountry));\n          phoneField.setHintText(null);\n          countryState=2;\n        }\n        if (!ok) {\n          codeField.setSelection(codeField.getText().length());\n        }\n        if (textToSet != null) {\n          if (initialPhoneNumber == null) {\n            phoneField.requestFocus();\n          }\n          phoneField.setText(textToSet);\n          phoneField.setSelection(phoneField.length());\n        }\n      }\n      ignoreOnTextChange=false;\n    }\n  }\n);\n  codeField.setOnEditorActionListener((textView,i,keyEvent) -> {\n    if (i == EditorInfo.IME_ACTION_NEXT) {\n      phoneField.requestFocus();\n      phoneField.setSelection(phoneField.length());\n      return true;\n    }\n    return false;\n  }\n);\n  phoneField=new HintEditText(context);\n  phoneField.setInputType(InputType.TYPE_CLASS_PHONE);\n  phoneField.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  phoneField.setHintTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteHintText));\n  phoneField.setBackgroundDrawable(Theme.createEditTextDrawable(context,false));\n  phoneField.setPadding(0,0,0,0);\n  phoneField.setCursorColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  phoneField.setCursorSize(AndroidUtilities.dp(20));\n  phoneField.setCursorWidth(1.5f);\n  phoneField.setTextSize(TypedValue.COMPLEX_UNIT_DIP,18);\n  phoneField.setMaxLines(1);\n  phoneField.setGravity(Gravity.LEFT | Gravity.CENTER_VERTICAL);\n  phoneField.setImeOptions(EditorInfo.IME_ACTION_DONE | EditorInfo.IME_FLAG_NO_EXTRACT_UI);\n  linearLayout2.addView(phoneField,LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,36));\n  phoneField.addTextChangedListener(new TextWatcher(){\n    private int characterAction=-1;\n    private int actionPosition;\n    @Override public void beforeTextChanged(    CharSequence s,    int start,    int count,    int after){\n      if (count == 0 && after == 1) {\n        characterAction=1;\n      }\n else       if (count == 1 && after == 0) {\n        if (s.charAt(start) == ' ' && start > 0) {\n          characterAction=3;\n          actionPosition=start - 1;\n        }\n else {\n          characterAction=2;\n        }\n      }\n else {\n        characterAction=-1;\n      }\n    }\n    @Override public void onTextChanged(    CharSequence s,    int start,    int before,    int count){\n    }\n    @Override public void afterTextChanged(    Editable s){\n      if (ignoreOnPhoneChange) {\n        return;\n      }\n      int start=phoneField.getSelectionStart();\n      String phoneChars=\"0123456789\";\n      String str=phoneField.getText().toString();\n      if (characterAction == 3) {\n        str=str.substring(0,actionPosition) + str.substring(actionPosition + 1);\n        start--;\n      }\n      StringBuilder builder=new StringBuilder(str.length());\n      for (int a=0; a < str.length(); a++) {\n        String ch=str.substring(a,a + 1);\n        if (phoneChars.contains(ch)) {\n          builder.append(ch);\n        }\n      }\n      ignoreOnPhoneChange=true;\n      String hint=phoneField.getHintText();\n      if (hint != null) {\n        for (int a=0; a < builder.length(); a++) {\n          if (a < hint.length()) {\n            if (hint.charAt(a) == ' ') {\n              builder.insert(a,' ');\n              a++;\n              if (start == a && characterAction != 2 && characterAction != 3) {\n                start++;\n              }\n            }\n          }\n else {\n            builder.insert(a,' ');\n            if (start == a + 1 && characterAction != 2 && characterAction != 3) {\n              start++;\n            }\n            break;\n          }\n        }\n      }\n      phoneField.setText(builder);\n      if (start >= 0) {\n        phoneField.setSelection(Math.min(start,phoneField.length()));\n      }\n      phoneField.onTextChange();\n      ignoreOnPhoneChange=false;\n    }\n  }\n);\n  phoneField.setOnEditorActionListener((textView,i,keyEvent) -> {\n    if (i == EditorInfo.IME_ACTION_DONE) {\n      editDoneItem.performClick();\n      return true;\n    }\n    return false;\n  }\n);\n  phoneField.setOnKeyListener((v,keyCode,event) -> {\n    if (keyCode == KeyEvent.KEYCODE_DEL && phoneField.length() == 0) {\n      codeField.requestFocus();\n      codeField.setSelection(codeField.length());\n      codeField.dispatchKeyEvent(event);\n      return true;\n    }\n    return false;\n  }\n);\n  HashMap<String,String> languageMap=new HashMap<>();\n  try {\n    BufferedReader reader=new BufferedReader(new InputStreamReader(context.getResources().getAssets().open(\"countries.txt\")));\n    String line;\n    while ((line=reader.readLine()) != null) {\n      String[] args=line.split(\";\");\n      countriesArray.add(0,args[2]);\n      countriesMap.put(args[2],args[0]);\n      codesMap.put(args[0],args[2]);\n      if (args.length > 3) {\n        phoneFormatMap.put(args[0],args[3]);\n      }\n      languageMap.put(args[1],args[2]);\n    }\n    reader.close();\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n  Collections.sort(countriesArray,String::compareTo);\n  if (!TextUtils.isEmpty(initialPhoneNumber)) {\n    TLRPC.User user=getUserConfig().getCurrentUser();\n    if (initialPhoneNumber.startsWith(\"+\")) {\n      codeField.setText(initialPhoneNumber.substring(1));\n    }\n else     if (initialPhoneNumberWithCountryCode || user == null || TextUtils.isEmpty(user.phone)) {\n      codeField.setText(initialPhoneNumber);\n    }\n else {\n      String phone=user.phone;\n      for (int a=4; a >= 1; a--) {\n        String sub=phone.substring(0,a);\n        String country=codesMap.get(sub);\n        if (country != null) {\n          codeField.setText(sub);\n          break;\n        }\n      }\n      phoneField.setText(initialPhoneNumber);\n    }\n    initialPhoneNumber=null;\n  }\n else {\n    String country=null;\n    try {\n      TelephonyManager telephonyManager=(TelephonyManager)ApplicationLoader.applicationContext.getSystemService(Context.TELEPHONY_SERVICE);\n      if (telephonyManager != null) {\n        country=telephonyManager.getSimCountryIso().toUpperCase();\n      }\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n    if (country != null) {\n      String countryName=languageMap.get(country);\n      if (countryName != null) {\n        int index=countriesArray.indexOf(countryName);\n        if (index != -1) {\n          codeField.setText(countriesMap.get(countryName));\n          countryState=0;\n        }\n      }\n    }\n    if (codeField.length() == 0) {\n      countryButton.setText(LocaleController.getString(\"ChooseCountry\",R.string.ChooseCountry));\n      phoneField.setHintText(null);\n      countryState=1;\n    }\n  }\n  return fragmentView;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 2984,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 25889,
        "startLineNumber" : 101,
        "startColumnNumber" : 4,
        "endLineNumber" : 619,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public View createView(Context context){\n  actionBar.setBackButtonImage(R.drawable.ic_ab_back);\n  actionBar.setAllowOverlayTitle(true);\n  actionBar.setTitle(LocaleController.getString(\"AddContactTitle\",R.string.AddContactTitle));\n  actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick(){\n    @Override public void onItemClick(    int id){\n      if (id == -1) {\n        finishFragment();\n      }\n else       if (id == done_button) {\n        if (donePressed) {\n          return;\n        }\n        if (firstNameField.length() == 0) {\n          Vibrator v=(Vibrator)getParentActivity().getSystemService(Context.VIBRATOR_SERVICE);\n          if (v != null) {\n            v.vibrate(200);\n          }\n          AndroidUtilities.shakeView(firstNameField,2,0);\n          return;\n        }\n        if (codeField.length() == 0) {\n          Vibrator v=(Vibrator)getParentActivity().getSystemService(Context.VIBRATOR_SERVICE);\n          if (v != null) {\n            v.vibrate(200);\n          }\n          AndroidUtilities.shakeView(codeField,2,0);\n          return;\n        }\n        if (phoneField.length() == 0) {\n          Vibrator v=(Vibrator)getParentActivity().getSystemService(Context.VIBRATOR_SERVICE);\n          if (v != null) {\n            v.vibrate(200);\n          }\n          AndroidUtilities.shakeView(phoneField,2,0);\n          return;\n        }\n        donePressed=true;\n        showEditDoneProgress(true,true);\n        final TLRPC.TL_contacts_importContacts req=new TLRPC.TL_contacts_importContacts();\n        final TLRPC.TL_inputPhoneContact inputPhoneContact=new TLRPC.TL_inputPhoneContact();\n        inputPhoneContact.first_name=firstNameField.getText().toString();\n        inputPhoneContact.last_name=lastNameField.getText().toString();\n        inputPhoneContact.phone=\"+\" + codeField.getText().toString() + phoneField.getText().toString();\n        req.contacts.add(inputPhoneContact);\n        int reqId=ConnectionsManager.getInstance(currentAccount).sendRequest(req,(response,error) -> {\n          final TLRPC.TL_contacts_importedContacts res=(TLRPC.TL_contacts_importedContacts)response;\n          AndroidUtilities.runOnUIThread(() -> {\n            donePressed=false;\n            if (res != null) {\n              if (!res.users.isEmpty()) {\n                MessagesController.getInstance(currentAccount).putUsers(res.users,false);\n                MessagesController.openChatOrProfileWith(res.users.get(0),null,NewContactActivity.this,1,true);\n              }\n else {\n                if (getParentActivity() == null) {\n                  return;\n                }\n                showEditDoneProgress(false,true);\n                AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n                builder.setTitle(LocaleController.getString(\"ContactNotRegisteredTitle\",R.string.ContactNotRegisteredTitle));\n                builder.setMessage(LocaleController.formatString(\"ContactNotRegistered\",R.string.ContactNotRegistered,ContactsController.formatName(inputPhoneContact.first_name,inputPhoneContact.last_name)));\n                builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n                builder.setPositiveButton(LocaleController.getString(\"Invite\",R.string.Invite),(dialog,which) -> {\n                  try {\n                    Intent intent=new Intent(Intent.ACTION_VIEW,Uri.fromParts(\"sms\",inputPhoneContact.phone,null));\n                    intent.putExtra(\"sms_body\",ContactsController.getInstance(currentAccount).getInviteText(1));\n                    getParentActivity().startActivityForResult(intent,500);\n                  }\n catch (                  Exception e) {\n                    FileLog.e(e);\n                  }\n                }\n);\n                showDialog(builder.create());\n              }\n            }\n else {\n              showEditDoneProgress(false,true);\n              AlertsCreator.processError(currentAccount,error,NewContactActivity.this,req);\n            }\n          }\n);\n        }\n,ConnectionsManager.RequestFlagFailOnServerErrors);\n        ConnectionsManager.getInstance(currentAccount).bindRequestToGuid(reqId,classGuid);\n      }\n    }\n  }\n);\n  avatarDrawable=new AvatarDrawable();\n  avatarDrawable.setInfo(5,\"\",\"\");\n  ActionBarMenu menu=actionBar.createMenu();\n  editDoneItem=menu.addItemWithWidth(done_button,R.drawable.ic_done,AndroidUtilities.dp(56));\n  editDoneItem.setContentDescription(LocaleController.getString(\"Done\",R.string.Done));\n  editDoneItemProgress=new ContextProgressView(context,1);\n  editDoneItem.addView(editDoneItemProgress,LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,LayoutHelper.MATCH_PARENT));\n  editDoneItemProgress.setVisibility(View.INVISIBLE);\n  fragmentView=new ScrollView(context);\n  contentLayout=new LinearLayout(context);\n  contentLayout.setPadding(AndroidUtilities.dp(24),0,AndroidUtilities.dp(24),0);\n  contentLayout.setOrientation(LinearLayout.VERTICAL);\n  ((ScrollView)fragmentView).addView(contentLayout,LayoutHelper.createScroll(LayoutHelper.MATCH_PARENT,LayoutHelper.WRAP_CONTENT,Gravity.LEFT | Gravity.TOP));\n  contentLayout.setOnTouchListener((v,event) -> true);\n  FrameLayout frameLayout=new FrameLayout(context);\n  contentLayout.addView(frameLayout,LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT,LayoutHelper.WRAP_CONTENT,0,24,0,0));\n  avatarImage=new BackupImageView(context);\n  avatarImage.setImageDrawable(avatarDrawable);\n  frameLayout.addView(avatarImage,LayoutHelper.createFrame(60,60,Gravity.LEFT | Gravity.TOP,0,9,0,0));\n  boolean needInvalidateAvatar=false;\n  firstNameField=new EditTextBoldCursor(context);\n  firstNameField.setTextSize(TypedValue.COMPLEX_UNIT_DIP,18);\n  firstNameField.setHintTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteHintText));\n  firstNameField.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  firstNameField.setMaxLines(1);\n  firstNameField.setLines(1);\n  firstNameField.setSingleLine(true);\n  firstNameField.setBackgroundDrawable(Theme.createEditTextDrawable(context,false));\n  firstNameField.setGravity(Gravity.LEFT);\n  firstNameField.setInputType(InputType.TYPE_TEXT_FLAG_CAP_SENTENCES | InputType.TYPE_TEXT_FLAG_AUTO_CORRECT);\n  firstNameField.setImeOptions(EditorInfo.IME_ACTION_NEXT);\n  firstNameField.setHint(LocaleController.getString(\"FirstName\",R.string.FirstName));\n  firstNameField.setCursorColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  firstNameField.setCursorSize(AndroidUtilities.dp(20));\n  firstNameField.setCursorWidth(1.5f);\n  if (initialFirstName != null) {\n    firstNameField.setText(initialFirstName);\n    initialFirstName=null;\n    needInvalidateAvatar=true;\n  }\n  frameLayout.addView(firstNameField,LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,34,Gravity.LEFT | Gravity.TOP,84,0,0,0));\n  firstNameField.setOnEditorActionListener((textView,i,keyEvent) -> {\n    if (i == EditorInfo.IME_ACTION_NEXT) {\n      lastNameField.requestFocus();\n      lastNameField.setSelection(lastNameField.length());\n      return true;\n    }\n    return false;\n  }\n);\n  firstNameField.addTextChangedListener(new TextWatcher(){\n    @Override public void beforeTextChanged(    CharSequence charSequence,    int i,    int i1,    int i2){\n    }\n    @Override public void onTextChanged(    CharSequence charSequence,    int i,    int i1,    int i2){\n    }\n    @Override public void afterTextChanged(    Editable editable){\n      invalidateAvatar();\n    }\n  }\n);\n  lastNameField=new EditTextBoldCursor(context);\n  lastNameField.setTextSize(TypedValue.COMPLEX_UNIT_DIP,18);\n  lastNameField.setHintTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteHintText));\n  lastNameField.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  lastNameField.setBackgroundDrawable(Theme.createEditTextDrawable(context,false));\n  lastNameField.setMaxLines(1);\n  lastNameField.setLines(1);\n  lastNameField.setSingleLine(true);\n  lastNameField.setGravity(Gravity.LEFT);\n  lastNameField.setInputType(InputType.TYPE_TEXT_FLAG_CAP_SENTENCES | InputType.TYPE_TEXT_FLAG_AUTO_CORRECT);\n  lastNameField.setImeOptions(EditorInfo.IME_ACTION_NEXT);\n  lastNameField.setHint(LocaleController.getString(\"LastName\",R.string.LastName));\n  lastNameField.setCursorColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  lastNameField.setCursorSize(AndroidUtilities.dp(20));\n  lastNameField.setCursorWidth(1.5f);\n  if (initialLastName != null) {\n    lastNameField.setText(initialLastName);\n    initialLastName=null;\n    needInvalidateAvatar=true;\n  }\n  frameLayout.addView(lastNameField,LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,34,Gravity.LEFT | Gravity.TOP,84,44,0,0));\n  lastNameField.setOnEditorActionListener((textView,i,keyEvent) -> {\n    if (i == EditorInfo.IME_ACTION_NEXT) {\n      phoneField.requestFocus();\n      phoneField.setSelection(phoneField.length());\n      return true;\n    }\n    return false;\n  }\n);\n  lastNameField.addTextChangedListener(new TextWatcher(){\n    @Override public void beforeTextChanged(    CharSequence charSequence,    int i,    int i1,    int i2){\n    }\n    @Override public void onTextChanged(    CharSequence charSequence,    int i,    int i1,    int i2){\n    }\n    @Override public void afterTextChanged(    Editable editable){\n      invalidateAvatar();\n    }\n  }\n);\n  if (needInvalidateAvatar) {\n    invalidateAvatar();\n  }\n  countryButton=new TextView(context);\n  countryButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP,18);\n  countryButton.setPadding(0,AndroidUtilities.dp(4),0,AndroidUtilities.dp(4));\n  countryButton.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  countryButton.setMaxLines(1);\n  countryButton.setSingleLine(true);\n  countryButton.setEllipsize(TextUtils.TruncateAt.END);\n  countryButton.setGravity(Gravity.LEFT | Gravity.CENTER_HORIZONTAL);\n  countryButton.setBackground(Theme.getSelectorDrawable(true));\n  contentLayout.addView(countryButton,LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT,36,0,24,0,14));\n  countryButton.setOnClickListener(view -> {\n    CountrySelectActivity fragment=new CountrySelectActivity(true);\n    fragment.setCountrySelectActivityDelegate((name,shortName) -> {\n      selectCountry(name);\n      phoneField.requestFocus();\n      phoneField.setSelection(phoneField.length());\n    }\n);\n    presentFragment(fragment);\n  }\n);\n  lineView=new View(context);\n  lineView.setPadding(AndroidUtilities.dp(8),0,AndroidUtilities.dp(8),0);\n  lineView.setBackgroundColor(Theme.getColor(Theme.key_windowBackgroundWhiteGrayLine));\n  contentLayout.addView(lineView,LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT,1,0,-17.5f,0,0));\n  LinearLayout linearLayout2=new LinearLayout(context);\n  linearLayout2.setOrientation(HORIZONTAL);\n  contentLayout.addView(linearLayout2,LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT,LayoutHelper.WRAP_CONTENT,0,20,0,0));\n  textView=new TextView(context);\n  textView.setText(\"+\");\n  textView.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP,18);\n  textView.setImportantForAccessibility(View.IMPORTANT_FOR_ACCESSIBILITY_NO);\n  linearLayout2.addView(textView,LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT,LayoutHelper.WRAP_CONTENT));\n  codeField=new EditTextBoldCursor(context);\n  codeField.setInputType(InputType.TYPE_CLASS_PHONE);\n  codeField.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  codeField.setBackgroundDrawable(Theme.createEditTextDrawable(context,false));\n  codeField.setCursorColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  codeField.setCursorSize(AndroidUtilities.dp(20));\n  codeField.setCursorWidth(1.5f);\n  codeField.setPadding(AndroidUtilities.dp(10),0,0,0);\n  codeField.setTextSize(TypedValue.COMPLEX_UNIT_DIP,18);\n  codeField.setMaxLines(1);\n  codeField.setGravity(Gravity.LEFT | Gravity.CENTER_VERTICAL);\n  codeField.setImeOptions(EditorInfo.IME_ACTION_NEXT | EditorInfo.IME_FLAG_NO_EXTRACT_UI);\n  linearLayout2.addView(codeField,LayoutHelper.createLinear(55,36,-9,0,16,0));\n  codeField.addTextChangedListener(new TextWatcher(){\n    @Override public void beforeTextChanged(    CharSequence charSequence,    int i,    int i2,    int i3){\n    }\n    @Override public void onTextChanged(    CharSequence charSequence,    int i,    int i2,    int i3){\n    }\n    @Override public void afterTextChanged(    Editable editable){\n      if (ignoreOnTextChange) {\n        return;\n      }\n      ignoreOnTextChange=true;\n      String text=PhoneFormat.stripExceptNumbers(codeField.getText().toString());\n      codeField.setText(text);\n      if (text.length() == 0) {\n        countryButton.setText(LocaleController.getString(\"ChooseCountry\",R.string.ChooseCountry));\n        phoneField.setHintText(null);\n        countryState=1;\n      }\n else {\n        String country;\n        boolean ok=false;\n        String textToSet=null;\n        if (text.length() > 4) {\n          ignoreOnTextChange=true;\n          for (int a=4; a >= 1; a--) {\n            String sub=text.substring(0,a);\n            country=codesMap.get(sub);\n            if (country != null) {\n              ok=true;\n              textToSet=text.substring(a) + phoneField.getText().toString();\n              codeField.setText(text=sub);\n              break;\n            }\n          }\n          if (!ok) {\n            ignoreOnTextChange=true;\n            textToSet=text.substring(1) + phoneField.getText().toString();\n            codeField.setText(text=text.substring(0,1));\n          }\n        }\n        country=codesMap.get(text);\n        if (country != null) {\n          int index=countriesArray.indexOf(country);\n          if (index != -1) {\n            ignoreSelection=true;\n            countryButton.setText(countriesArray.get(index));\n            String hint=phoneFormatMap.get(text);\n            phoneField.setHintText(hint != null ? hint.replace('X','–') : null);\n            countryState=0;\n          }\n else {\n            countryButton.setText(LocaleController.getString(\"WrongCountry\",R.string.WrongCountry));\n            phoneField.setHintText(null);\n            countryState=2;\n          }\n        }\n else {\n          countryButton.setText(LocaleController.getString(\"WrongCountry\",R.string.WrongCountry));\n          phoneField.setHintText(null);\n          countryState=2;\n        }\n        if (!ok) {\n          codeField.setSelection(codeField.getText().length());\n        }\n        if (textToSet != null) {\n          if (initialPhoneNumber == null) {\n            phoneField.requestFocus();\n          }\n          phoneField.setText(textToSet);\n          phoneField.setSelection(phoneField.length());\n        }\n      }\n      ignoreOnTextChange=false;\n    }\n  }\n);\n  codeField.setOnEditorActionListener((textView,i,keyEvent) -> {\n    if (i == EditorInfo.IME_ACTION_NEXT) {\n      phoneField.requestFocus();\n      phoneField.setSelection(phoneField.length());\n      return true;\n    }\n    return false;\n  }\n);\n  phoneField=new HintEditText(context);\n  phoneField.setInputType(InputType.TYPE_CLASS_PHONE);\n  phoneField.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  phoneField.setHintTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteHintText));\n  phoneField.setBackgroundDrawable(Theme.createEditTextDrawable(context,false));\n  phoneField.setPadding(0,0,0,0);\n  phoneField.setCursorColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  phoneField.setCursorSize(AndroidUtilities.dp(20));\n  phoneField.setCursorWidth(1.5f);\n  phoneField.setTextSize(TypedValue.COMPLEX_UNIT_DIP,18);\n  phoneField.setMaxLines(1);\n  phoneField.setGravity(Gravity.LEFT | Gravity.CENTER_VERTICAL);\n  phoneField.setImeOptions(EditorInfo.IME_ACTION_DONE | EditorInfo.IME_FLAG_NO_EXTRACT_UI);\n  linearLayout2.addView(phoneField,LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,36));\n  phoneField.addTextChangedListener(new TextWatcher(){\n    private int characterAction=-1;\n    private int actionPosition;\n    @Override public void beforeTextChanged(    CharSequence s,    int start,    int count,    int after){\n      if (count == 0 && after == 1) {\n        characterAction=1;\n      }\n else       if (count == 1 && after == 0) {\n        if (s.charAt(start) == ' ' && start > 0) {\n          characterAction=3;\n          actionPosition=start - 1;\n        }\n else {\n          characterAction=2;\n        }\n      }\n else {\n        characterAction=-1;\n      }\n    }\n    @Override public void onTextChanged(    CharSequence s,    int start,    int before,    int count){\n    }\n    @Override public void afterTextChanged(    Editable s){\n      if (ignoreOnPhoneChange) {\n        return;\n      }\n      int start=phoneField.getSelectionStart();\n      String phoneChars=\"0123456789\";\n      String str=phoneField.getText().toString();\n      if (characterAction == 3) {\n        str=str.substring(0,actionPosition) + str.substring(actionPosition + 1);\n        start--;\n      }\n      StringBuilder builder=new StringBuilder(str.length());\n      for (int a=0; a < str.length(); a++) {\n        String ch=str.substring(a,a + 1);\n        if (phoneChars.contains(ch)) {\n          builder.append(ch);\n        }\n      }\n      ignoreOnPhoneChange=true;\n      String hint=phoneField.getHintText();\n      if (hint != null) {\n        for (int a=0; a < builder.length(); a++) {\n          if (a < hint.length()) {\n            if (hint.charAt(a) == ' ') {\n              builder.insert(a,' ');\n              a++;\n              if (start == a && characterAction != 2 && characterAction != 3) {\n                start++;\n              }\n            }\n          }\n else {\n            builder.insert(a,' ');\n            if (start == a + 1 && characterAction != 2 && characterAction != 3) {\n              start++;\n            }\n            break;\n          }\n        }\n      }\n      phoneField.setText(builder);\n      if (start >= 0) {\n        phoneField.setSelection(Math.min(start,phoneField.length()));\n      }\n      phoneField.onTextChange();\n      ignoreOnPhoneChange=false;\n    }\n  }\n);\n  phoneField.setOnEditorActionListener((textView,i,keyEvent) -> {\n    if (i == EditorInfo.IME_ACTION_DONE) {\n      editDoneItem.performClick();\n      return true;\n    }\n    return false;\n  }\n);\n  phoneField.setOnKeyListener((v,keyCode,event) -> {\n    if (keyCode == KeyEvent.KEYCODE_DEL && phoneField.length() == 0) {\n      codeField.requestFocus();\n      codeField.setSelection(codeField.length());\n      codeField.dispatchKeyEvent(event);\n      return true;\n    }\n    return false;\n  }\n);\n  HashMap<String,String> languageMap=new HashMap<>();\n  try {\n    BufferedReader reader=new BufferedReader(new InputStreamReader(context.getResources().getAssets().open(\"countries.txt\")));\n    String line;\n    while ((line=reader.readLine()) != null) {\n      String[] args=line.split(\";\");\n      countriesArray.add(0,args[2]);\n      countriesMap.put(args[2],args[0]);\n      codesMap.put(args[0],args[2]);\n      if (args.length > 3) {\n        phoneFormatMap.put(args[0],args[3]);\n      }\n      languageMap.put(args[1],args[2]);\n    }\n    reader.close();\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n  Collections.sort(countriesArray,String::compareTo);\n  if (!TextUtils.isEmpty(initialPhoneNumber)) {\n    TLRPC.User user=getUserConfig().getCurrentUser();\n    if (initialPhoneNumber.startsWith(\"+\")) {\n      codeField.setText(initialPhoneNumber.substring(1));\n    }\n else     if (initialPhoneNumberWithCountryCode || user == null || TextUtils.isEmpty(user.phone)) {\n      codeField.setText(initialPhoneNumber);\n    }\n else {\n      String phone=user.phone;\n      for (int a=4; a >= 1; a--) {\n        String sub=phone.substring(0,a);\n        String country=codesMap.get(sub);\n        if (country != null) {\n          codeField.setText(sub);\n          break;\n        }\n      }\n      phoneField.setText(initialPhoneNumber);\n    }\n    initialPhoneNumber=null;\n  }\n else {\n    String country=null;\n    try {\n      TelephonyManager telephonyManager=(TelephonyManager)ApplicationLoader.applicationContext.getSystemService(Context.TELEPHONY_SERVICE);\n      if (telephonyManager != null) {\n        country=telephonyManager.getSimCountryIso().toUpperCase();\n      }\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n    if (country != null) {\n      String countryName=languageMap.get(country);\n      if (countryName != null) {\n        int index=countriesArray.indexOf(countryName);\n        if (index != -1) {\n          codeField.setText(countriesMap.get(countryName));\n          countryState=0;\n        }\n      }\n    }\n    if (codeField.length() == 0) {\n      countryButton.setText(LocaleController.getString(\"ChooseCountry\",R.string.ChooseCountry));\n      phoneField.setHintText(null);\n      countryState=1;\n    }\n  }\n  return fragmentView;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 2995,
      "astHeight" : 36
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 554,
        "startColumnNumber" : 19,
        "endLineNumber" : 554,
        "endColumnNumber" : 53
      },
      "nodeContext" : "(line=reader.readLine()) != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.io.BufferedReader"
  }, {
    "nodeContext" : "reader",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 564,
      "startColumnNumber" : 12,
      "endLineNumber" : 564,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 564,
        "startColumnNumber" : 12,
        "endLineNumber" : 564,
        "endColumnNumber" : 26
      },
      "nodeContext" : "reader.close()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 564,
        "startColumnNumber" : 12,
        "endLineNumber" : 564,
        "endColumnNumber" : 27
      },
      "nodeContext" : "reader.close();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 635,
        "startLineNumber" : 551,
        "startColumnNumber" : 12,
        "endLineNumber" : 565,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  BufferedReader reader=new BufferedReader(new InputStreamReader(context.getResources().getAssets().open(\"countries.txt\")));\n  String line;\n  while ((line=reader.readLine()) != null) {\n    String[] args=line.split(\";\");\n    countriesArray.add(0,args[2]);\n    countriesMap.put(args[2],args[0]);\n    codesMap.put(args[0],args[2]);\n    if (args.length > 3) {\n      phoneFormatMap.put(args[0],args[3]);\n    }\n    languageMap.put(args[1],args[2]);\n  }\n  reader.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 551,
        "startColumnNumber" : 8,
        "endLineNumber" : 567,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  BufferedReader reader=new BufferedReader(new InputStreamReader(context.getResources().getAssets().open(\"countries.txt\")));\n  String line;\n  while ((line=reader.readLine()) != null) {\n    String[] args=line.split(\";\");\n    countriesArray.add(0,args[2]);\n    countriesMap.put(args[2],args[0]);\n    codesMap.put(args[0],args[2]);\n    if (args.length > 3) {\n      phoneFormatMap.put(args[0],args[3]);\n    }\n    languageMap.put(args[1],args[2]);\n  }\n  reader.close();\n}\n catch (Exception e) {\n  FileLog.e(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 117,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 25835,
        "startLineNumber" : 102,
        "startColumnNumber" : 44,
        "endLineNumber" : 619,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  actionBar.setBackButtonImage(R.drawable.ic_ab_back);\n  actionBar.setAllowOverlayTitle(true);\n  actionBar.setTitle(LocaleController.getString(\"AddContactTitle\",R.string.AddContactTitle));\n  actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick(){\n    @Override public void onItemClick(    int id){\n      if (id == -1) {\n        finishFragment();\n      }\n else       if (id == done_button) {\n        if (donePressed) {\n          return;\n        }\n        if (firstNameField.length() == 0) {\n          Vibrator v=(Vibrator)getParentActivity().getSystemService(Context.VIBRATOR_SERVICE);\n          if (v != null) {\n            v.vibrate(200);\n          }\n          AndroidUtilities.shakeView(firstNameField,2,0);\n          return;\n        }\n        if (codeField.length() == 0) {\n          Vibrator v=(Vibrator)getParentActivity().getSystemService(Context.VIBRATOR_SERVICE);\n          if (v != null) {\n            v.vibrate(200);\n          }\n          AndroidUtilities.shakeView(codeField,2,0);\n          return;\n        }\n        if (phoneField.length() == 0) {\n          Vibrator v=(Vibrator)getParentActivity().getSystemService(Context.VIBRATOR_SERVICE);\n          if (v != null) {\n            v.vibrate(200);\n          }\n          AndroidUtilities.shakeView(phoneField,2,0);\n          return;\n        }\n        donePressed=true;\n        showEditDoneProgress(true,true);\n        final TLRPC.TL_contacts_importContacts req=new TLRPC.TL_contacts_importContacts();\n        final TLRPC.TL_inputPhoneContact inputPhoneContact=new TLRPC.TL_inputPhoneContact();\n        inputPhoneContact.first_name=firstNameField.getText().toString();\n        inputPhoneContact.last_name=lastNameField.getText().toString();\n        inputPhoneContact.phone=\"+\" + codeField.getText().toString() + phoneField.getText().toString();\n        req.contacts.add(inputPhoneContact);\n        int reqId=ConnectionsManager.getInstance(currentAccount).sendRequest(req,(response,error) -> {\n          final TLRPC.TL_contacts_importedContacts res=(TLRPC.TL_contacts_importedContacts)response;\n          AndroidUtilities.runOnUIThread(() -> {\n            donePressed=false;\n            if (res != null) {\n              if (!res.users.isEmpty()) {\n                MessagesController.getInstance(currentAccount).putUsers(res.users,false);\n                MessagesController.openChatOrProfileWith(res.users.get(0),null,NewContactActivity.this,1,true);\n              }\n else {\n                if (getParentActivity() == null) {\n                  return;\n                }\n                showEditDoneProgress(false,true);\n                AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n                builder.setTitle(LocaleController.getString(\"ContactNotRegisteredTitle\",R.string.ContactNotRegisteredTitle));\n                builder.setMessage(LocaleController.formatString(\"ContactNotRegistered\",R.string.ContactNotRegistered,ContactsController.formatName(inputPhoneContact.first_name,inputPhoneContact.last_name)));\n                builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n                builder.setPositiveButton(LocaleController.getString(\"Invite\",R.string.Invite),(dialog,which) -> {\n                  try {\n                    Intent intent=new Intent(Intent.ACTION_VIEW,Uri.fromParts(\"sms\",inputPhoneContact.phone,null));\n                    intent.putExtra(\"sms_body\",ContactsController.getInstance(currentAccount).getInviteText(1));\n                    getParentActivity().startActivityForResult(intent,500);\n                  }\n catch (                  Exception e) {\n                    FileLog.e(e);\n                  }\n                }\n);\n                showDialog(builder.create());\n              }\n            }\n else {\n              showEditDoneProgress(false,true);\n              AlertsCreator.processError(currentAccount,error,NewContactActivity.this,req);\n            }\n          }\n);\n        }\n,ConnectionsManager.RequestFlagFailOnServerErrors);\n        ConnectionsManager.getInstance(currentAccount).bindRequestToGuid(reqId,classGuid);\n      }\n    }\n  }\n);\n  avatarDrawable=new AvatarDrawable();\n  avatarDrawable.setInfo(5,\"\",\"\");\n  ActionBarMenu menu=actionBar.createMenu();\n  editDoneItem=menu.addItemWithWidth(done_button,R.drawable.ic_done,AndroidUtilities.dp(56));\n  editDoneItem.setContentDescription(LocaleController.getString(\"Done\",R.string.Done));\n  editDoneItemProgress=new ContextProgressView(context,1);\n  editDoneItem.addView(editDoneItemProgress,LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,LayoutHelper.MATCH_PARENT));\n  editDoneItemProgress.setVisibility(View.INVISIBLE);\n  fragmentView=new ScrollView(context);\n  contentLayout=new LinearLayout(context);\n  contentLayout.setPadding(AndroidUtilities.dp(24),0,AndroidUtilities.dp(24),0);\n  contentLayout.setOrientation(LinearLayout.VERTICAL);\n  ((ScrollView)fragmentView).addView(contentLayout,LayoutHelper.createScroll(LayoutHelper.MATCH_PARENT,LayoutHelper.WRAP_CONTENT,Gravity.LEFT | Gravity.TOP));\n  contentLayout.setOnTouchListener((v,event) -> true);\n  FrameLayout frameLayout=new FrameLayout(context);\n  contentLayout.addView(frameLayout,LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT,LayoutHelper.WRAP_CONTENT,0,24,0,0));\n  avatarImage=new BackupImageView(context);\n  avatarImage.setImageDrawable(avatarDrawable);\n  frameLayout.addView(avatarImage,LayoutHelper.createFrame(60,60,Gravity.LEFT | Gravity.TOP,0,9,0,0));\n  boolean needInvalidateAvatar=false;\n  firstNameField=new EditTextBoldCursor(context);\n  firstNameField.setTextSize(TypedValue.COMPLEX_UNIT_DIP,18);\n  firstNameField.setHintTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteHintText));\n  firstNameField.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  firstNameField.setMaxLines(1);\n  firstNameField.setLines(1);\n  firstNameField.setSingleLine(true);\n  firstNameField.setBackgroundDrawable(Theme.createEditTextDrawable(context,false));\n  firstNameField.setGravity(Gravity.LEFT);\n  firstNameField.setInputType(InputType.TYPE_TEXT_FLAG_CAP_SENTENCES | InputType.TYPE_TEXT_FLAG_AUTO_CORRECT);\n  firstNameField.setImeOptions(EditorInfo.IME_ACTION_NEXT);\n  firstNameField.setHint(LocaleController.getString(\"FirstName\",R.string.FirstName));\n  firstNameField.setCursorColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  firstNameField.setCursorSize(AndroidUtilities.dp(20));\n  firstNameField.setCursorWidth(1.5f);\n  if (initialFirstName != null) {\n    firstNameField.setText(initialFirstName);\n    initialFirstName=null;\n    needInvalidateAvatar=true;\n  }\n  frameLayout.addView(firstNameField,LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,34,Gravity.LEFT | Gravity.TOP,84,0,0,0));\n  firstNameField.setOnEditorActionListener((textView,i,keyEvent) -> {\n    if (i == EditorInfo.IME_ACTION_NEXT) {\n      lastNameField.requestFocus();\n      lastNameField.setSelection(lastNameField.length());\n      return true;\n    }\n    return false;\n  }\n);\n  firstNameField.addTextChangedListener(new TextWatcher(){\n    @Override public void beforeTextChanged(    CharSequence charSequence,    int i,    int i1,    int i2){\n    }\n    @Override public void onTextChanged(    CharSequence charSequence,    int i,    int i1,    int i2){\n    }\n    @Override public void afterTextChanged(    Editable editable){\n      invalidateAvatar();\n    }\n  }\n);\n  lastNameField=new EditTextBoldCursor(context);\n  lastNameField.setTextSize(TypedValue.COMPLEX_UNIT_DIP,18);\n  lastNameField.setHintTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteHintText));\n  lastNameField.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  lastNameField.setBackgroundDrawable(Theme.createEditTextDrawable(context,false));\n  lastNameField.setMaxLines(1);\n  lastNameField.setLines(1);\n  lastNameField.setSingleLine(true);\n  lastNameField.setGravity(Gravity.LEFT);\n  lastNameField.setInputType(InputType.TYPE_TEXT_FLAG_CAP_SENTENCES | InputType.TYPE_TEXT_FLAG_AUTO_CORRECT);\n  lastNameField.setImeOptions(EditorInfo.IME_ACTION_NEXT);\n  lastNameField.setHint(LocaleController.getString(\"LastName\",R.string.LastName));\n  lastNameField.setCursorColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  lastNameField.setCursorSize(AndroidUtilities.dp(20));\n  lastNameField.setCursorWidth(1.5f);\n  if (initialLastName != null) {\n    lastNameField.setText(initialLastName);\n    initialLastName=null;\n    needInvalidateAvatar=true;\n  }\n  frameLayout.addView(lastNameField,LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,34,Gravity.LEFT | Gravity.TOP,84,44,0,0));\n  lastNameField.setOnEditorActionListener((textView,i,keyEvent) -> {\n    if (i == EditorInfo.IME_ACTION_NEXT) {\n      phoneField.requestFocus();\n      phoneField.setSelection(phoneField.length());\n      return true;\n    }\n    return false;\n  }\n);\n  lastNameField.addTextChangedListener(new TextWatcher(){\n    @Override public void beforeTextChanged(    CharSequence charSequence,    int i,    int i1,    int i2){\n    }\n    @Override public void onTextChanged(    CharSequence charSequence,    int i,    int i1,    int i2){\n    }\n    @Override public void afterTextChanged(    Editable editable){\n      invalidateAvatar();\n    }\n  }\n);\n  if (needInvalidateAvatar) {\n    invalidateAvatar();\n  }\n  countryButton=new TextView(context);\n  countryButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP,18);\n  countryButton.setPadding(0,AndroidUtilities.dp(4),0,AndroidUtilities.dp(4));\n  countryButton.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  countryButton.setMaxLines(1);\n  countryButton.setSingleLine(true);\n  countryButton.setEllipsize(TextUtils.TruncateAt.END);\n  countryButton.setGravity(Gravity.LEFT | Gravity.CENTER_HORIZONTAL);\n  countryButton.setBackground(Theme.getSelectorDrawable(true));\n  contentLayout.addView(countryButton,LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT,36,0,24,0,14));\n  countryButton.setOnClickListener(view -> {\n    CountrySelectActivity fragment=new CountrySelectActivity(true);\n    fragment.setCountrySelectActivityDelegate((name,shortName) -> {\n      selectCountry(name);\n      phoneField.requestFocus();\n      phoneField.setSelection(phoneField.length());\n    }\n);\n    presentFragment(fragment);\n  }\n);\n  lineView=new View(context);\n  lineView.setPadding(AndroidUtilities.dp(8),0,AndroidUtilities.dp(8),0);\n  lineView.setBackgroundColor(Theme.getColor(Theme.key_windowBackgroundWhiteGrayLine));\n  contentLayout.addView(lineView,LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT,1,0,-17.5f,0,0));\n  LinearLayout linearLayout2=new LinearLayout(context);\n  linearLayout2.setOrientation(HORIZONTAL);\n  contentLayout.addView(linearLayout2,LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT,LayoutHelper.WRAP_CONTENT,0,20,0,0));\n  textView=new TextView(context);\n  textView.setText(\"+\");\n  textView.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP,18);\n  textView.setImportantForAccessibility(View.IMPORTANT_FOR_ACCESSIBILITY_NO);\n  linearLayout2.addView(textView,LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT,LayoutHelper.WRAP_CONTENT));\n  codeField=new EditTextBoldCursor(context);\n  codeField.setInputType(InputType.TYPE_CLASS_PHONE);\n  codeField.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  codeField.setBackgroundDrawable(Theme.createEditTextDrawable(context,false));\n  codeField.setCursorColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  codeField.setCursorSize(AndroidUtilities.dp(20));\n  codeField.setCursorWidth(1.5f);\n  codeField.setPadding(AndroidUtilities.dp(10),0,0,0);\n  codeField.setTextSize(TypedValue.COMPLEX_UNIT_DIP,18);\n  codeField.setMaxLines(1);\n  codeField.setGravity(Gravity.LEFT | Gravity.CENTER_VERTICAL);\n  codeField.setImeOptions(EditorInfo.IME_ACTION_NEXT | EditorInfo.IME_FLAG_NO_EXTRACT_UI);\n  linearLayout2.addView(codeField,LayoutHelper.createLinear(55,36,-9,0,16,0));\n  codeField.addTextChangedListener(new TextWatcher(){\n    @Override public void beforeTextChanged(    CharSequence charSequence,    int i,    int i2,    int i3){\n    }\n    @Override public void onTextChanged(    CharSequence charSequence,    int i,    int i2,    int i3){\n    }\n    @Override public void afterTextChanged(    Editable editable){\n      if (ignoreOnTextChange) {\n        return;\n      }\n      ignoreOnTextChange=true;\n      String text=PhoneFormat.stripExceptNumbers(codeField.getText().toString());\n      codeField.setText(text);\n      if (text.length() == 0) {\n        countryButton.setText(LocaleController.getString(\"ChooseCountry\",R.string.ChooseCountry));\n        phoneField.setHintText(null);\n        countryState=1;\n      }\n else {\n        String country;\n        boolean ok=false;\n        String textToSet=null;\n        if (text.length() > 4) {\n          ignoreOnTextChange=true;\n          for (int a=4; a >= 1; a--) {\n            String sub=text.substring(0,a);\n            country=codesMap.get(sub);\n            if (country != null) {\n              ok=true;\n              textToSet=text.substring(a) + phoneField.getText().toString();\n              codeField.setText(text=sub);\n              break;\n            }\n          }\n          if (!ok) {\n            ignoreOnTextChange=true;\n            textToSet=text.substring(1) + phoneField.getText().toString();\n            codeField.setText(text=text.substring(0,1));\n          }\n        }\n        country=codesMap.get(text);\n        if (country != null) {\n          int index=countriesArray.indexOf(country);\n          if (index != -1) {\n            ignoreSelection=true;\n            countryButton.setText(countriesArray.get(index));\n            String hint=phoneFormatMap.get(text);\n            phoneField.setHintText(hint != null ? hint.replace('X','–') : null);\n            countryState=0;\n          }\n else {\n            countryButton.setText(LocaleController.getString(\"WrongCountry\",R.string.WrongCountry));\n            phoneField.setHintText(null);\n            countryState=2;\n          }\n        }\n else {\n          countryButton.setText(LocaleController.getString(\"WrongCountry\",R.string.WrongCountry));\n          phoneField.setHintText(null);\n          countryState=2;\n        }\n        if (!ok) {\n          codeField.setSelection(codeField.getText().length());\n        }\n        if (textToSet != null) {\n          if (initialPhoneNumber == null) {\n            phoneField.requestFocus();\n          }\n          phoneField.setText(textToSet);\n          phoneField.setSelection(phoneField.length());\n        }\n      }\n      ignoreOnTextChange=false;\n    }\n  }\n);\n  codeField.setOnEditorActionListener((textView,i,keyEvent) -> {\n    if (i == EditorInfo.IME_ACTION_NEXT) {\n      phoneField.requestFocus();\n      phoneField.setSelection(phoneField.length());\n      return true;\n    }\n    return false;\n  }\n);\n  phoneField=new HintEditText(context);\n  phoneField.setInputType(InputType.TYPE_CLASS_PHONE);\n  phoneField.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  phoneField.setHintTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteHintText));\n  phoneField.setBackgroundDrawable(Theme.createEditTextDrawable(context,false));\n  phoneField.setPadding(0,0,0,0);\n  phoneField.setCursorColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  phoneField.setCursorSize(AndroidUtilities.dp(20));\n  phoneField.setCursorWidth(1.5f);\n  phoneField.setTextSize(TypedValue.COMPLEX_UNIT_DIP,18);\n  phoneField.setMaxLines(1);\n  phoneField.setGravity(Gravity.LEFT | Gravity.CENTER_VERTICAL);\n  phoneField.setImeOptions(EditorInfo.IME_ACTION_DONE | EditorInfo.IME_FLAG_NO_EXTRACT_UI);\n  linearLayout2.addView(phoneField,LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,36));\n  phoneField.addTextChangedListener(new TextWatcher(){\n    private int characterAction=-1;\n    private int actionPosition;\n    @Override public void beforeTextChanged(    CharSequence s,    int start,    int count,    int after){\n      if (count == 0 && after == 1) {\n        characterAction=1;\n      }\n else       if (count == 1 && after == 0) {\n        if (s.charAt(start) == ' ' && start > 0) {\n          characterAction=3;\n          actionPosition=start - 1;\n        }\n else {\n          characterAction=2;\n        }\n      }\n else {\n        characterAction=-1;\n      }\n    }\n    @Override public void onTextChanged(    CharSequence s,    int start,    int before,    int count){\n    }\n    @Override public void afterTextChanged(    Editable s){\n      if (ignoreOnPhoneChange) {\n        return;\n      }\n      int start=phoneField.getSelectionStart();\n      String phoneChars=\"0123456789\";\n      String str=phoneField.getText().toString();\n      if (characterAction == 3) {\n        str=str.substring(0,actionPosition) + str.substring(actionPosition + 1);\n        start--;\n      }\n      StringBuilder builder=new StringBuilder(str.length());\n      for (int a=0; a < str.length(); a++) {\n        String ch=str.substring(a,a + 1);\n        if (phoneChars.contains(ch)) {\n          builder.append(ch);\n        }\n      }\n      ignoreOnPhoneChange=true;\n      String hint=phoneField.getHintText();\n      if (hint != null) {\n        for (int a=0; a < builder.length(); a++) {\n          if (a < hint.length()) {\n            if (hint.charAt(a) == ' ') {\n              builder.insert(a,' ');\n              a++;\n              if (start == a && characterAction != 2 && characterAction != 3) {\n                start++;\n              }\n            }\n          }\n else {\n            builder.insert(a,' ');\n            if (start == a + 1 && characterAction != 2 && characterAction != 3) {\n              start++;\n            }\n            break;\n          }\n        }\n      }\n      phoneField.setText(builder);\n      if (start >= 0) {\n        phoneField.setSelection(Math.min(start,phoneField.length()));\n      }\n      phoneField.onTextChange();\n      ignoreOnPhoneChange=false;\n    }\n  }\n);\n  phoneField.setOnEditorActionListener((textView,i,keyEvent) -> {\n    if (i == EditorInfo.IME_ACTION_DONE) {\n      editDoneItem.performClick();\n      return true;\n    }\n    return false;\n  }\n);\n  phoneField.setOnKeyListener((v,keyCode,event) -> {\n    if (keyCode == KeyEvent.KEYCODE_DEL && phoneField.length() == 0) {\n      codeField.requestFocus();\n      codeField.setSelection(codeField.length());\n      codeField.dispatchKeyEvent(event);\n      return true;\n    }\n    return false;\n  }\n);\n  HashMap<String,String> languageMap=new HashMap<>();\n  try {\n    BufferedReader reader=new BufferedReader(new InputStreamReader(context.getResources().getAssets().open(\"countries.txt\")));\n    String line;\n    while ((line=reader.readLine()) != null) {\n      String[] args=line.split(\";\");\n      countriesArray.add(0,args[2]);\n      countriesMap.put(args[2],args[0]);\n      codesMap.put(args[0],args[2]);\n      if (args.length > 3) {\n        phoneFormatMap.put(args[0],args[3]);\n      }\n      languageMap.put(args[1],args[2]);\n    }\n    reader.close();\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n  Collections.sort(countriesArray,String::compareTo);\n  if (!TextUtils.isEmpty(initialPhoneNumber)) {\n    TLRPC.User user=getUserConfig().getCurrentUser();\n    if (initialPhoneNumber.startsWith(\"+\")) {\n      codeField.setText(initialPhoneNumber.substring(1));\n    }\n else     if (initialPhoneNumberWithCountryCode || user == null || TextUtils.isEmpty(user.phone)) {\n      codeField.setText(initialPhoneNumber);\n    }\n else {\n      String phone=user.phone;\n      for (int a=4; a >= 1; a--) {\n        String sub=phone.substring(0,a);\n        String country=codesMap.get(sub);\n        if (country != null) {\n          codeField.setText(sub);\n          break;\n        }\n      }\n      phoneField.setText(initialPhoneNumber);\n    }\n    initialPhoneNumber=null;\n  }\n else {\n    String country=null;\n    try {\n      TelephonyManager telephonyManager=(TelephonyManager)ApplicationLoader.applicationContext.getSystemService(Context.TELEPHONY_SERVICE);\n      if (telephonyManager != null) {\n        country=telephonyManager.getSimCountryIso().toUpperCase();\n      }\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n    if (country != null) {\n      String countryName=languageMap.get(country);\n      if (countryName != null) {\n        int index=countriesArray.indexOf(countryName);\n        if (index != -1) {\n          codeField.setText(countriesMap.get(countryName));\n          countryState=0;\n        }\n      }\n    }\n    if (codeField.length() == 0) {\n      countryButton.setText(LocaleController.getString(\"ChooseCountry\",R.string.ChooseCountry));\n      phoneField.setHintText(null);\n      countryState=1;\n    }\n  }\n  return fragmentView;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 2984,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 25889,
        "startLineNumber" : 101,
        "startColumnNumber" : 4,
        "endLineNumber" : 619,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public View createView(Context context){\n  actionBar.setBackButtonImage(R.drawable.ic_ab_back);\n  actionBar.setAllowOverlayTitle(true);\n  actionBar.setTitle(LocaleController.getString(\"AddContactTitle\",R.string.AddContactTitle));\n  actionBar.setActionBarMenuOnItemClick(new ActionBar.ActionBarMenuOnItemClick(){\n    @Override public void onItemClick(    int id){\n      if (id == -1) {\n        finishFragment();\n      }\n else       if (id == done_button) {\n        if (donePressed) {\n          return;\n        }\n        if (firstNameField.length() == 0) {\n          Vibrator v=(Vibrator)getParentActivity().getSystemService(Context.VIBRATOR_SERVICE);\n          if (v != null) {\n            v.vibrate(200);\n          }\n          AndroidUtilities.shakeView(firstNameField,2,0);\n          return;\n        }\n        if (codeField.length() == 0) {\n          Vibrator v=(Vibrator)getParentActivity().getSystemService(Context.VIBRATOR_SERVICE);\n          if (v != null) {\n            v.vibrate(200);\n          }\n          AndroidUtilities.shakeView(codeField,2,0);\n          return;\n        }\n        if (phoneField.length() == 0) {\n          Vibrator v=(Vibrator)getParentActivity().getSystemService(Context.VIBRATOR_SERVICE);\n          if (v != null) {\n            v.vibrate(200);\n          }\n          AndroidUtilities.shakeView(phoneField,2,0);\n          return;\n        }\n        donePressed=true;\n        showEditDoneProgress(true,true);\n        final TLRPC.TL_contacts_importContacts req=new TLRPC.TL_contacts_importContacts();\n        final TLRPC.TL_inputPhoneContact inputPhoneContact=new TLRPC.TL_inputPhoneContact();\n        inputPhoneContact.first_name=firstNameField.getText().toString();\n        inputPhoneContact.last_name=lastNameField.getText().toString();\n        inputPhoneContact.phone=\"+\" + codeField.getText().toString() + phoneField.getText().toString();\n        req.contacts.add(inputPhoneContact);\n        int reqId=ConnectionsManager.getInstance(currentAccount).sendRequest(req,(response,error) -> {\n          final TLRPC.TL_contacts_importedContacts res=(TLRPC.TL_contacts_importedContacts)response;\n          AndroidUtilities.runOnUIThread(() -> {\n            donePressed=false;\n            if (res != null) {\n              if (!res.users.isEmpty()) {\n                MessagesController.getInstance(currentAccount).putUsers(res.users,false);\n                MessagesController.openChatOrProfileWith(res.users.get(0),null,NewContactActivity.this,1,true);\n              }\n else {\n                if (getParentActivity() == null) {\n                  return;\n                }\n                showEditDoneProgress(false,true);\n                AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n                builder.setTitle(LocaleController.getString(\"ContactNotRegisteredTitle\",R.string.ContactNotRegisteredTitle));\n                builder.setMessage(LocaleController.formatString(\"ContactNotRegistered\",R.string.ContactNotRegistered,ContactsController.formatName(inputPhoneContact.first_name,inputPhoneContact.last_name)));\n                builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n                builder.setPositiveButton(LocaleController.getString(\"Invite\",R.string.Invite),(dialog,which) -> {\n                  try {\n                    Intent intent=new Intent(Intent.ACTION_VIEW,Uri.fromParts(\"sms\",inputPhoneContact.phone,null));\n                    intent.putExtra(\"sms_body\",ContactsController.getInstance(currentAccount).getInviteText(1));\n                    getParentActivity().startActivityForResult(intent,500);\n                  }\n catch (                  Exception e) {\n                    FileLog.e(e);\n                  }\n                }\n);\n                showDialog(builder.create());\n              }\n            }\n else {\n              showEditDoneProgress(false,true);\n              AlertsCreator.processError(currentAccount,error,NewContactActivity.this,req);\n            }\n          }\n);\n        }\n,ConnectionsManager.RequestFlagFailOnServerErrors);\n        ConnectionsManager.getInstance(currentAccount).bindRequestToGuid(reqId,classGuid);\n      }\n    }\n  }\n);\n  avatarDrawable=new AvatarDrawable();\n  avatarDrawable.setInfo(5,\"\",\"\");\n  ActionBarMenu menu=actionBar.createMenu();\n  editDoneItem=menu.addItemWithWidth(done_button,R.drawable.ic_done,AndroidUtilities.dp(56));\n  editDoneItem.setContentDescription(LocaleController.getString(\"Done\",R.string.Done));\n  editDoneItemProgress=new ContextProgressView(context,1);\n  editDoneItem.addView(editDoneItemProgress,LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,LayoutHelper.MATCH_PARENT));\n  editDoneItemProgress.setVisibility(View.INVISIBLE);\n  fragmentView=new ScrollView(context);\n  contentLayout=new LinearLayout(context);\n  contentLayout.setPadding(AndroidUtilities.dp(24),0,AndroidUtilities.dp(24),0);\n  contentLayout.setOrientation(LinearLayout.VERTICAL);\n  ((ScrollView)fragmentView).addView(contentLayout,LayoutHelper.createScroll(LayoutHelper.MATCH_PARENT,LayoutHelper.WRAP_CONTENT,Gravity.LEFT | Gravity.TOP));\n  contentLayout.setOnTouchListener((v,event) -> true);\n  FrameLayout frameLayout=new FrameLayout(context);\n  contentLayout.addView(frameLayout,LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT,LayoutHelper.WRAP_CONTENT,0,24,0,0));\n  avatarImage=new BackupImageView(context);\n  avatarImage.setImageDrawable(avatarDrawable);\n  frameLayout.addView(avatarImage,LayoutHelper.createFrame(60,60,Gravity.LEFT | Gravity.TOP,0,9,0,0));\n  boolean needInvalidateAvatar=false;\n  firstNameField=new EditTextBoldCursor(context);\n  firstNameField.setTextSize(TypedValue.COMPLEX_UNIT_DIP,18);\n  firstNameField.setHintTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteHintText));\n  firstNameField.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  firstNameField.setMaxLines(1);\n  firstNameField.setLines(1);\n  firstNameField.setSingleLine(true);\n  firstNameField.setBackgroundDrawable(Theme.createEditTextDrawable(context,false));\n  firstNameField.setGravity(Gravity.LEFT);\n  firstNameField.setInputType(InputType.TYPE_TEXT_FLAG_CAP_SENTENCES | InputType.TYPE_TEXT_FLAG_AUTO_CORRECT);\n  firstNameField.setImeOptions(EditorInfo.IME_ACTION_NEXT);\n  firstNameField.setHint(LocaleController.getString(\"FirstName\",R.string.FirstName));\n  firstNameField.setCursorColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  firstNameField.setCursorSize(AndroidUtilities.dp(20));\n  firstNameField.setCursorWidth(1.5f);\n  if (initialFirstName != null) {\n    firstNameField.setText(initialFirstName);\n    initialFirstName=null;\n    needInvalidateAvatar=true;\n  }\n  frameLayout.addView(firstNameField,LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,34,Gravity.LEFT | Gravity.TOP,84,0,0,0));\n  firstNameField.setOnEditorActionListener((textView,i,keyEvent) -> {\n    if (i == EditorInfo.IME_ACTION_NEXT) {\n      lastNameField.requestFocus();\n      lastNameField.setSelection(lastNameField.length());\n      return true;\n    }\n    return false;\n  }\n);\n  firstNameField.addTextChangedListener(new TextWatcher(){\n    @Override public void beforeTextChanged(    CharSequence charSequence,    int i,    int i1,    int i2){\n    }\n    @Override public void onTextChanged(    CharSequence charSequence,    int i,    int i1,    int i2){\n    }\n    @Override public void afterTextChanged(    Editable editable){\n      invalidateAvatar();\n    }\n  }\n);\n  lastNameField=new EditTextBoldCursor(context);\n  lastNameField.setTextSize(TypedValue.COMPLEX_UNIT_DIP,18);\n  lastNameField.setHintTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteHintText));\n  lastNameField.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  lastNameField.setBackgroundDrawable(Theme.createEditTextDrawable(context,false));\n  lastNameField.setMaxLines(1);\n  lastNameField.setLines(1);\n  lastNameField.setSingleLine(true);\n  lastNameField.setGravity(Gravity.LEFT);\n  lastNameField.setInputType(InputType.TYPE_TEXT_FLAG_CAP_SENTENCES | InputType.TYPE_TEXT_FLAG_AUTO_CORRECT);\n  lastNameField.setImeOptions(EditorInfo.IME_ACTION_NEXT);\n  lastNameField.setHint(LocaleController.getString(\"LastName\",R.string.LastName));\n  lastNameField.setCursorColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  lastNameField.setCursorSize(AndroidUtilities.dp(20));\n  lastNameField.setCursorWidth(1.5f);\n  if (initialLastName != null) {\n    lastNameField.setText(initialLastName);\n    initialLastName=null;\n    needInvalidateAvatar=true;\n  }\n  frameLayout.addView(lastNameField,LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,34,Gravity.LEFT | Gravity.TOP,84,44,0,0));\n  lastNameField.setOnEditorActionListener((textView,i,keyEvent) -> {\n    if (i == EditorInfo.IME_ACTION_NEXT) {\n      phoneField.requestFocus();\n      phoneField.setSelection(phoneField.length());\n      return true;\n    }\n    return false;\n  }\n);\n  lastNameField.addTextChangedListener(new TextWatcher(){\n    @Override public void beforeTextChanged(    CharSequence charSequence,    int i,    int i1,    int i2){\n    }\n    @Override public void onTextChanged(    CharSequence charSequence,    int i,    int i1,    int i2){\n    }\n    @Override public void afterTextChanged(    Editable editable){\n      invalidateAvatar();\n    }\n  }\n);\n  if (needInvalidateAvatar) {\n    invalidateAvatar();\n  }\n  countryButton=new TextView(context);\n  countryButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP,18);\n  countryButton.setPadding(0,AndroidUtilities.dp(4),0,AndroidUtilities.dp(4));\n  countryButton.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  countryButton.setMaxLines(1);\n  countryButton.setSingleLine(true);\n  countryButton.setEllipsize(TextUtils.TruncateAt.END);\n  countryButton.setGravity(Gravity.LEFT | Gravity.CENTER_HORIZONTAL);\n  countryButton.setBackground(Theme.getSelectorDrawable(true));\n  contentLayout.addView(countryButton,LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT,36,0,24,0,14));\n  countryButton.setOnClickListener(view -> {\n    CountrySelectActivity fragment=new CountrySelectActivity(true);\n    fragment.setCountrySelectActivityDelegate((name,shortName) -> {\n      selectCountry(name);\n      phoneField.requestFocus();\n      phoneField.setSelection(phoneField.length());\n    }\n);\n    presentFragment(fragment);\n  }\n);\n  lineView=new View(context);\n  lineView.setPadding(AndroidUtilities.dp(8),0,AndroidUtilities.dp(8),0);\n  lineView.setBackgroundColor(Theme.getColor(Theme.key_windowBackgroundWhiteGrayLine));\n  contentLayout.addView(lineView,LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT,1,0,-17.5f,0,0));\n  LinearLayout linearLayout2=new LinearLayout(context);\n  linearLayout2.setOrientation(HORIZONTAL);\n  contentLayout.addView(linearLayout2,LayoutHelper.createLinear(LayoutHelper.MATCH_PARENT,LayoutHelper.WRAP_CONTENT,0,20,0,0));\n  textView=new TextView(context);\n  textView.setText(\"+\");\n  textView.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  textView.setTextSize(TypedValue.COMPLEX_UNIT_DIP,18);\n  textView.setImportantForAccessibility(View.IMPORTANT_FOR_ACCESSIBILITY_NO);\n  linearLayout2.addView(textView,LayoutHelper.createLinear(LayoutHelper.WRAP_CONTENT,LayoutHelper.WRAP_CONTENT));\n  codeField=new EditTextBoldCursor(context);\n  codeField.setInputType(InputType.TYPE_CLASS_PHONE);\n  codeField.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  codeField.setBackgroundDrawable(Theme.createEditTextDrawable(context,false));\n  codeField.setCursorColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  codeField.setCursorSize(AndroidUtilities.dp(20));\n  codeField.setCursorWidth(1.5f);\n  codeField.setPadding(AndroidUtilities.dp(10),0,0,0);\n  codeField.setTextSize(TypedValue.COMPLEX_UNIT_DIP,18);\n  codeField.setMaxLines(1);\n  codeField.setGravity(Gravity.LEFT | Gravity.CENTER_VERTICAL);\n  codeField.setImeOptions(EditorInfo.IME_ACTION_NEXT | EditorInfo.IME_FLAG_NO_EXTRACT_UI);\n  linearLayout2.addView(codeField,LayoutHelper.createLinear(55,36,-9,0,16,0));\n  codeField.addTextChangedListener(new TextWatcher(){\n    @Override public void beforeTextChanged(    CharSequence charSequence,    int i,    int i2,    int i3){\n    }\n    @Override public void onTextChanged(    CharSequence charSequence,    int i,    int i2,    int i3){\n    }\n    @Override public void afterTextChanged(    Editable editable){\n      if (ignoreOnTextChange) {\n        return;\n      }\n      ignoreOnTextChange=true;\n      String text=PhoneFormat.stripExceptNumbers(codeField.getText().toString());\n      codeField.setText(text);\n      if (text.length() == 0) {\n        countryButton.setText(LocaleController.getString(\"ChooseCountry\",R.string.ChooseCountry));\n        phoneField.setHintText(null);\n        countryState=1;\n      }\n else {\n        String country;\n        boolean ok=false;\n        String textToSet=null;\n        if (text.length() > 4) {\n          ignoreOnTextChange=true;\n          for (int a=4; a >= 1; a--) {\n            String sub=text.substring(0,a);\n            country=codesMap.get(sub);\n            if (country != null) {\n              ok=true;\n              textToSet=text.substring(a) + phoneField.getText().toString();\n              codeField.setText(text=sub);\n              break;\n            }\n          }\n          if (!ok) {\n            ignoreOnTextChange=true;\n            textToSet=text.substring(1) + phoneField.getText().toString();\n            codeField.setText(text=text.substring(0,1));\n          }\n        }\n        country=codesMap.get(text);\n        if (country != null) {\n          int index=countriesArray.indexOf(country);\n          if (index != -1) {\n            ignoreSelection=true;\n            countryButton.setText(countriesArray.get(index));\n            String hint=phoneFormatMap.get(text);\n            phoneField.setHintText(hint != null ? hint.replace('X','–') : null);\n            countryState=0;\n          }\n else {\n            countryButton.setText(LocaleController.getString(\"WrongCountry\",R.string.WrongCountry));\n            phoneField.setHintText(null);\n            countryState=2;\n          }\n        }\n else {\n          countryButton.setText(LocaleController.getString(\"WrongCountry\",R.string.WrongCountry));\n          phoneField.setHintText(null);\n          countryState=2;\n        }\n        if (!ok) {\n          codeField.setSelection(codeField.getText().length());\n        }\n        if (textToSet != null) {\n          if (initialPhoneNumber == null) {\n            phoneField.requestFocus();\n          }\n          phoneField.setText(textToSet);\n          phoneField.setSelection(phoneField.length());\n        }\n      }\n      ignoreOnTextChange=false;\n    }\n  }\n);\n  codeField.setOnEditorActionListener((textView,i,keyEvent) -> {\n    if (i == EditorInfo.IME_ACTION_NEXT) {\n      phoneField.requestFocus();\n      phoneField.setSelection(phoneField.length());\n      return true;\n    }\n    return false;\n  }\n);\n  phoneField=new HintEditText(context);\n  phoneField.setInputType(InputType.TYPE_CLASS_PHONE);\n  phoneField.setTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  phoneField.setHintTextColor(Theme.getColor(Theme.key_windowBackgroundWhiteHintText));\n  phoneField.setBackgroundDrawable(Theme.createEditTextDrawable(context,false));\n  phoneField.setPadding(0,0,0,0);\n  phoneField.setCursorColor(Theme.getColor(Theme.key_windowBackgroundWhiteBlackText));\n  phoneField.setCursorSize(AndroidUtilities.dp(20));\n  phoneField.setCursorWidth(1.5f);\n  phoneField.setTextSize(TypedValue.COMPLEX_UNIT_DIP,18);\n  phoneField.setMaxLines(1);\n  phoneField.setGravity(Gravity.LEFT | Gravity.CENTER_VERTICAL);\n  phoneField.setImeOptions(EditorInfo.IME_ACTION_DONE | EditorInfo.IME_FLAG_NO_EXTRACT_UI);\n  linearLayout2.addView(phoneField,LayoutHelper.createFrame(LayoutHelper.MATCH_PARENT,36));\n  phoneField.addTextChangedListener(new TextWatcher(){\n    private int characterAction=-1;\n    private int actionPosition;\n    @Override public void beforeTextChanged(    CharSequence s,    int start,    int count,    int after){\n      if (count == 0 && after == 1) {\n        characterAction=1;\n      }\n else       if (count == 1 && after == 0) {\n        if (s.charAt(start) == ' ' && start > 0) {\n          characterAction=3;\n          actionPosition=start - 1;\n        }\n else {\n          characterAction=2;\n        }\n      }\n else {\n        characterAction=-1;\n      }\n    }\n    @Override public void onTextChanged(    CharSequence s,    int start,    int before,    int count){\n    }\n    @Override public void afterTextChanged(    Editable s){\n      if (ignoreOnPhoneChange) {\n        return;\n      }\n      int start=phoneField.getSelectionStart();\n      String phoneChars=\"0123456789\";\n      String str=phoneField.getText().toString();\n      if (characterAction == 3) {\n        str=str.substring(0,actionPosition) + str.substring(actionPosition + 1);\n        start--;\n      }\n      StringBuilder builder=new StringBuilder(str.length());\n      for (int a=0; a < str.length(); a++) {\n        String ch=str.substring(a,a + 1);\n        if (phoneChars.contains(ch)) {\n          builder.append(ch);\n        }\n      }\n      ignoreOnPhoneChange=true;\n      String hint=phoneField.getHintText();\n      if (hint != null) {\n        for (int a=0; a < builder.length(); a++) {\n          if (a < hint.length()) {\n            if (hint.charAt(a) == ' ') {\n              builder.insert(a,' ');\n              a++;\n              if (start == a && characterAction != 2 && characterAction != 3) {\n                start++;\n              }\n            }\n          }\n else {\n            builder.insert(a,' ');\n            if (start == a + 1 && characterAction != 2 && characterAction != 3) {\n              start++;\n            }\n            break;\n          }\n        }\n      }\n      phoneField.setText(builder);\n      if (start >= 0) {\n        phoneField.setSelection(Math.min(start,phoneField.length()));\n      }\n      phoneField.onTextChange();\n      ignoreOnPhoneChange=false;\n    }\n  }\n);\n  phoneField.setOnEditorActionListener((textView,i,keyEvent) -> {\n    if (i == EditorInfo.IME_ACTION_DONE) {\n      editDoneItem.performClick();\n      return true;\n    }\n    return false;\n  }\n);\n  phoneField.setOnKeyListener((v,keyCode,event) -> {\n    if (keyCode == KeyEvent.KEYCODE_DEL && phoneField.length() == 0) {\n      codeField.requestFocus();\n      codeField.setSelection(codeField.length());\n      codeField.dispatchKeyEvent(event);\n      return true;\n    }\n    return false;\n  }\n);\n  HashMap<String,String> languageMap=new HashMap<>();\n  try {\n    BufferedReader reader=new BufferedReader(new InputStreamReader(context.getResources().getAssets().open(\"countries.txt\")));\n    String line;\n    while ((line=reader.readLine()) != null) {\n      String[] args=line.split(\";\");\n      countriesArray.add(0,args[2]);\n      countriesMap.put(args[2],args[0]);\n      codesMap.put(args[0],args[2]);\n      if (args.length > 3) {\n        phoneFormatMap.put(args[0],args[3]);\n      }\n      languageMap.put(args[1],args[2]);\n    }\n    reader.close();\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n  Collections.sort(countriesArray,String::compareTo);\n  if (!TextUtils.isEmpty(initialPhoneNumber)) {\n    TLRPC.User user=getUserConfig().getCurrentUser();\n    if (initialPhoneNumber.startsWith(\"+\")) {\n      codeField.setText(initialPhoneNumber.substring(1));\n    }\n else     if (initialPhoneNumberWithCountryCode || user == null || TextUtils.isEmpty(user.phone)) {\n      codeField.setText(initialPhoneNumber);\n    }\n else {\n      String phone=user.phone;\n      for (int a=4; a >= 1; a--) {\n        String sub=phone.substring(0,a);\n        String country=codesMap.get(sub);\n        if (country != null) {\n          codeField.setText(sub);\n          break;\n        }\n      }\n      phoneField.setText(initialPhoneNumber);\n    }\n    initialPhoneNumber=null;\n  }\n else {\n    String country=null;\n    try {\n      TelephonyManager telephonyManager=(TelephonyManager)ApplicationLoader.applicationContext.getSystemService(Context.TELEPHONY_SERVICE);\n      if (telephonyManager != null) {\n        country=telephonyManager.getSimCountryIso().toUpperCase();\n      }\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n    if (country != null) {\n      String countryName=languageMap.get(country);\n      if (countryName != null) {\n        int index=countriesArray.indexOf(countryName);\n        if (index != -1) {\n          codeField.setText(countriesMap.get(countryName));\n          countryState=0;\n        }\n      }\n    }\n    if (codeField.length() == 0) {\n      countryButton.setText(LocaleController.getString(\"ChooseCountry\",R.string.ChooseCountry));\n      phoneField.setHintText(null);\n      countryState=1;\n    }\n  }\n  return fragmentView;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 2995,
      "astHeight" : 36
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 564,
        "startColumnNumber" : 12,
        "endLineNumber" : 564,
        "endColumnNumber" : 27
      },
      "nodeContext" : "reader.close();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.io.BufferedReader"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 554,
    "startColumnNumber" : 27,
    "endLineNumber" : 554,
    "endColumnNumber" : 33
  }, {
    "charLength" : 6,
    "startLineNumber" : 564,
    "startColumnNumber" : 12,
    "endLineNumber" : 564,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}