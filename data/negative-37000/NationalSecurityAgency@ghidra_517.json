{
  "id" : 517,
  "expression" : "AddressSpace.TYPE_DELETED",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Features/Base/ghidra_scripts/RemoveDeletedOverlayReferences.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "AddressSpace.TYPE_DELETED",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 43,
      "startColumnNumber" : 60,
      "endLineNumber" : 43,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 85
      },
      "nodeContext" : "ref.getFromAddress().getAddressSpace().getType() == AddressSpace.TYPE_DELETED",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 46,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (ref.getFromAddress().getAddressSpace().getType() == AddressSpace.TYPE_DELETED) {\n  totalDeletedRefs++;\n  badRefs.add(ref);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 209,
        "startLineNumber" : 40,
        "startColumnNumber" : 28,
        "endLineNumber" : 47,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  Reference ref=refIter.next();\n  totalRefs++;\n  if (ref.getFromAddress().getAddressSpace().getType() == AddressSpace.TYPE_DELETED) {\n    totalDeletedRefs++;\n    badRefs.add(ref);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 234,
        "startLineNumber" : 40,
        "startColumnNumber" : 3,
        "endLineNumber" : 47,
        "endColumnNumber" : 4
      },
      "nodeContext" : "while (refIter.hasNext()) {\n  Reference ref=refIter.next();\n  totalRefs++;\n  if (ref.getFromAddress().getAddressSpace().getType() == AddressSpace.TYPE_DELETED) {\n    totalDeletedRefs++;\n    badRefs.add(ref);\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 343,
        "startLineNumber" : 37,
        "startColumnNumber" : 22,
        "endLineNumber" : 48,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Address address=it.next();\n  ReferenceIterator refIter=refMgr.getReferencesTo(address);\n  while (refIter.hasNext()) {\n    Reference ref=refIter.next();\n    totalRefs++;\n    if (ref.getFromAddress().getAddressSpace().getType() == AddressSpace.TYPE_DELETED) {\n      totalDeletedRefs++;\n      badRefs.add(ref);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 363,
        "startLineNumber" : 37,
        "startColumnNumber" : 2,
        "endLineNumber" : 48,
        "endColumnNumber" : 3
      },
      "nodeContext" : "while (it.hasNext()) {\n  Address address=it.next();\n  ReferenceIterator refIter=refMgr.getReferencesTo(address);\n  while (refIter.hasNext()) {\n    Reference ref=refIter.next();\n    totalRefs++;\n    if (ref.getFromAddress().getAddressSpace().getType() == AddressSpace.TYPE_DELETED) {\n      totalDeletedRefs++;\n      badRefs.add(ref);\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 59,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 811,
        "startLineNumber" : 31,
        "startColumnNumber" : 36,
        "endLineNumber" : 54,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ReferenceManager refMgr=currentProgram.getReferenceManager();\n  AddressIterator it=refMgr.getReferenceDestinationIterator(currentProgram.getMinAddress(),true);\n  int totalRefs=0;\n  int totalDeletedRefs=0;\n  List<Reference> badRefs=new ArrayList<Reference>();\n  while (it.hasNext()) {\n    Address address=it.next();\n    ReferenceIterator refIter=refMgr.getReferencesTo(address);\n    while (refIter.hasNext()) {\n      Reference ref=refIter.next();\n      totalRefs++;\n      if (ref.getFromAddress().getAddressSpace().getType() == AddressSpace.TYPE_DELETED) {\n        totalDeletedRefs++;\n        badRefs.add(ref);\n      }\n    }\n  }\n  for (  Reference reference : badRefs) {\n    refMgr.delete(reference);\n  }\n  this.println(\"total refs = \" + totalRefs + \",  deleted refs = \"+ totalDeletedRefs);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 858,
        "startLineNumber" : 30,
        "startColumnNumber" : 1,
        "endLineNumber" : 54,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void run() throws Exception {\n  ReferenceManager refMgr=currentProgram.getReferenceManager();\n  AddressIterator it=refMgr.getReferenceDestinationIterator(currentProgram.getMinAddress(),true);\n  int totalRefs=0;\n  int totalDeletedRefs=0;\n  List<Reference> badRefs=new ArrayList<Reference>();\n  while (it.hasNext()) {\n    Address address=it.next();\n    ReferenceIterator refIter=refMgr.getReferencesTo(address);\n    while (refIter.hasNext()) {\n      Reference ref=refIter.next();\n      totalRefs++;\n      if (ref.getFromAddress().getAddressSpace().getType() == AddressSpace.TYPE_DELETED) {\n        totalDeletedRefs++;\n        badRefs.add(ref);\n      }\n    }\n  }\n  for (  Reference reference : badRefs) {\n    refMgr.delete(reference);\n  }\n  this.println(\"total refs = \" + totalRefs + \",  deleted refs = \"+ totalDeletedRefs);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 133,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 85
      },
      "nodeContext" : "ref.getFromAddress().getAddressSpace().getType() == AddressSpace.TYPE_DELETED",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 43,
    "startColumnNumber" : 60,
    "endLineNumber" : 43,
    "endColumnNumber" : 85
  } ],
  "layoutRelationDataList" : [ ]
}