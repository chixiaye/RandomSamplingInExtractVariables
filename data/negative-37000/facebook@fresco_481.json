{
  "id" : 481,
  "expression" : "possibleHeaderTag",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/samples/showcase/src/main/java/com/facebook/fresco/samples/showcase/imageformat/svg/SvgDecoderExample.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "possibleHeaderTag",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 55,
      "startColumnNumber" : 67,
      "endLineNumber" : 55,
      "endColumnNumber" : 84
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 55,
        "endColumnNumber" : 85
      },
      "nodeContext" : "ImageFormatCheckerUtils.startsWithPattern(headerBytes,possibleHeaderTag)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 225,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 20
      },
      "nodeContext" : "ImageFormatCheckerUtils.startsWithPattern(headerBytes,possibleHeaderTag) && ImageFormatCheckerUtils.indexOfPattern(headerBytes,headerBytes.length,HEADER,HEADER.length) > -1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 271,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (ImageFormatCheckerUtils.startsWithPattern(headerBytes,possibleHeaderTag) && ImageFormatCheckerUtils.indexOfPattern(headerBytes,headerBytes.length,HEADER,HEADER.length) > -1) {\n  return SVG_FORMAT;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 289,
        "startLineNumber" : 54,
        "startColumnNumber" : 60,
        "endLineNumber" : 61,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (ImageFormatCheckerUtils.startsWithPattern(headerBytes,possibleHeaderTag) && ImageFormatCheckerUtils.indexOfPattern(headerBytes,headerBytes.length,HEADER,HEADER.length) > -1) {\n    return SVG_FORMAT;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 343,
        "startLineNumber" : 54,
        "startColumnNumber" : 6,
        "endLineNumber" : 61,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (byte[] possibleHeaderTag : POSSIBLE_HEADER_TAGS) {\n  if (ImageFormatCheckerUtils.startsWithPattern(headerBytes,possibleHeaderTag) && ImageFormatCheckerUtils.indexOfPattern(headerBytes,headerBytes.length,HEADER,HEADER.length) > -1) {\n    return SVG_FORMAT;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 558,
        "startLineNumber" : 47,
        "startColumnNumber" : 75,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (headerSize < getHeaderSize()) {\n    return null;\n  }\n  if (ImageFormatCheckerUtils.startsWithPattern(headerBytes,HEADER)) {\n    return SVG_FORMAT;\n  }\n  for (  byte[] possibleHeaderTag : POSSIBLE_HEADER_TAGS) {\n    if (ImageFormatCheckerUtils.startsWithPattern(headerBytes,possibleHeaderTag) && ImageFormatCheckerUtils.indexOfPattern(headerBytes,headerBytes.length,HEADER,HEADER.length) > -1) {\n      return SVG_FORMAT;\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 657,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Nullable @Override public ImageFormat determineFormat(byte[] headerBytes,int headerSize){\n  if (headerSize < getHeaderSize()) {\n    return null;\n  }\n  if (ImageFormatCheckerUtils.startsWithPattern(headerBytes,HEADER)) {\n    return SVG_FORMAT;\n  }\n  for (  byte[] possibleHeaderTag : POSSIBLE_HEADER_TAGS) {\n    if (ImageFormatCheckerUtils.startsWithPattern(headerBytes,possibleHeaderTag) && ImageFormatCheckerUtils.indexOfPattern(headerBytes,headerBytes.length,HEADER,HEADER.length) > -1) {\n      return SVG_FORMAT;\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 55,
        "endColumnNumber" : 85
      },
      "nodeContext" : "ImageFormatCheckerUtils.startsWithPattern(headerBytes,possibleHeaderTag)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "byte[]"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 55,
    "startColumnNumber" : 67,
    "endLineNumber" : 55,
    "endColumnNumber" : 84
  } ],
  "layoutRelationDataList" : [ ]
}