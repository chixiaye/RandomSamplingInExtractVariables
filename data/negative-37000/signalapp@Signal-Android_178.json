{
  "id" : 178,
  "expression" : "c == '\\''",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/app/src/main/java/org/thoughtcrime/securesms/util/FtsUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "c == '\\''",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 46,
      "startColumnNumber" : 17,
      "endLineNumber" : 46,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 46,
        "startColumnNumber" : 13,
        "endLineNumber" : 48,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (c == '\\'') {\n  out.append(' ');\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 44,
        "startColumnNumber" : 6,
        "endLineNumber" : 48,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (!BANNED_CHARACTERS.contains(c)) {\n  out.append(c);\n}\n else if (c == '\\'') {\n  out.append(' ');\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 42,
        "startColumnNumber" : 45,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  char c=query.charAt(i);\n  if (!BANNED_CHARACTERS.contains(c)) {\n    out.append(c);\n  }\n else   if (c == '\\'') {\n    out.append(' ');\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 210,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < query.length(); i++) {\n  char c=query.charAt(i);\n  if (!BANNED_CHARACTERS.contains(c)) {\n    out.append(c);\n  }\n else   if (c == '\\'') {\n    out.append(' ');\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 294,
        "startLineNumber" : 39,
        "startColumnNumber" : 64,
        "endLineNumber" : 52,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  StringBuilder out=new StringBuilder();\n  for (int i=0; i < query.length(); i++) {\n    char c=query.charAt(i);\n    if (!BANNED_CHARACTERS.contains(c)) {\n      out.append(c);\n    }\n else     if (c == '\\'') {\n      out.append(' ');\n    }\n  }\n  return out.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 760,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 52,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Unfortunately  {@link DatabaseUtils#sqlEscapeString(String)} is not sufficient for our purposes.MATCH queries have a separate format of their own that disallow most \"special\" characters. Also, SQLite can't search for apostrophes, meaning we can't normally find words like \"I'm\". However, if we replace the apostrophe with a space, then the query will find the match.\n */\npublic static @NonNull String sanitize(@NonNull String query){\n  StringBuilder out=new StringBuilder();\n  for (int i=0; i < query.length(); i++) {\n    char c=query.charAt(i);\n    if (!BANNED_CHARACTERS.contains(c)) {\n      out.append(c);\n    }\n else     if (c == '\\'') {\n      out.append(' ');\n    }\n  }\n  return out.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 72,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 46,
        "startColumnNumber" : 13,
        "endLineNumber" : 48,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (c == '\\'') {\n  out.append(' ');\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 46,
    "startColumnNumber" : 17,
    "endLineNumber" : 46,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}