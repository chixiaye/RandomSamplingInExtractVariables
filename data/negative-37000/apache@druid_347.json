{
  "id" : 347,
  "expression" : "false",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/extensions-core/ec2-extensions/src/test/java/org/apache/druid/indexing/overlord/setup/WorkerBehaviorConfigTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 47,
      "startColumnNumber" : 16,
      "endLineNumber" : 47,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 45,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 13
      },
      "nodeContext" : "new AffinityConfig(ImmutableMap.of(\"foo\",ImmutableSet.of(\"localhost\")),false)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "new FillCapacityWithAffinityWorkerSelectStrategy(new AffinityConfig(ImmutableMap.of(\"foo\",ImmutableSet.of(\"localhost\")),false))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 927,
        "startLineNumber" : 43,
        "startColumnNumber" : 41,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "new DefaultWorkerBehaviorConfig(new FillCapacityWithAffinityWorkerSelectStrategy(new AffinityConfig(ImmutableMap.of(\"foo\",ImmutableSet.of(\"localhost\")),false)),new EC2AutoScaler(7,11,new EC2EnvironmentConfig(\"us-east-1a\",new EC2NodeData(\"amiid\",\"instanceType\",3,5,Collections.singletonList(\"securityGroupIds\"),\"keyNames\",\"subnetId\",null,null),new StringEC2UserData(\"availZone\",\"replace\",\"version\")),null,null))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 50,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 936,
        "startLineNumber" : 43,
        "startColumnNumber" : 32,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "config=new DefaultWorkerBehaviorConfig(new FillCapacityWithAffinityWorkerSelectStrategy(new AffinityConfig(ImmutableMap.of(\"foo\",ImmutableSet.of(\"localhost\")),false)),new EC2AutoScaler(7,11,new EC2EnvironmentConfig(\"us-east-1a\",new EC2NodeData(\"amiid\",\"instanceType\",3,5,Collections.singletonList(\"securityGroupIds\"),\"keyNames\",\"subnetId\",null,null),new StringEC2UserData(\"availZone\",\"replace\",\"version\")),null,null))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 52,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 965,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 6
      },
      "nodeContext" : "DefaultWorkerBehaviorConfig config=new DefaultWorkerBehaviorConfig(new FillCapacityWithAffinityWorkerSelectStrategy(new AffinityConfig(ImmutableMap.of(\"foo\",ImmutableSet.of(\"localhost\")),false)),new EC2AutoScaler(7,11,new EC2EnvironmentConfig(\"us-east-1a\",new EC2NodeData(\"amiid\",\"instanceType\",3,5,Collections.singletonList(\"securityGroupIds\"),\"keyNames\",\"subnetId\",null,null),new StringEC2UserData(\"availZone\",\"replace\",\"version\")),null,null));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 55,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1568,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 95,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  DefaultWorkerBehaviorConfig config=new DefaultWorkerBehaviorConfig(new FillCapacityWithAffinityWorkerSelectStrategy(new AffinityConfig(ImmutableMap.of(\"foo\",ImmutableSet.of(\"localhost\")),false)),new EC2AutoScaler(7,11,new EC2EnvironmentConfig(\"us-east-1a\",new EC2NodeData(\"amiid\",\"instanceType\",3,5,Collections.singletonList(\"securityGroupIds\"),\"keyNames\",\"subnetId\",null,null),new StringEC2UserData(\"availZone\",\"replace\",\"version\")),null,null));\n  final ObjectMapper mapper=new DefaultObjectMapper();\n  mapper.registerSubtypes(EC2AutoScaler.class);\n  mapper.setInjectableValues(new InjectableValues(){\n    @Override public Object findInjectableValue(    Object valueId,    DeserializationContext ctxt,    BeanProperty forProperty,    Object beanInstance){\n      return null;\n    }\n  }\n);\n  Assert.assertEquals(config,mapper.readValue(mapper.writeValueAsBytes(config),DefaultWorkerBehaviorConfig.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1619,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 95,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testSerde() throws Exception {\n  DefaultWorkerBehaviorConfig config=new DefaultWorkerBehaviorConfig(new FillCapacityWithAffinityWorkerSelectStrategy(new AffinityConfig(ImmutableMap.of(\"foo\",ImmutableSet.of(\"localhost\")),false)),new EC2AutoScaler(7,11,new EC2EnvironmentConfig(\"us-east-1a\",new EC2NodeData(\"amiid\",\"instanceType\",3,5,Collections.singletonList(\"securityGroupIds\"),\"keyNames\",\"subnetId\",null,null),new StringEC2UserData(\"availZone\",\"replace\",\"version\")),null,null));\n  final ObjectMapper mapper=new DefaultObjectMapper();\n  mapper.registerSubtypes(EC2AutoScaler.class);\n  mapper.setInjectableValues(new InjectableValues(){\n    @Override public Object findInjectableValue(    Object valueId,    DeserializationContext ctxt,    BeanProperty forProperty,    Object beanInstance){\n      return null;\n    }\n  }\n);\n  Assert.assertEquals(config,mapper.readValue(mapper.writeValueAsBytes(config),DefaultWorkerBehaviorConfig.class));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 129,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 45,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 13
      },
      "nodeContext" : "new AffinityConfig(ImmutableMap.of(\"foo\",ImmutableSet.of(\"localhost\")),false)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 47,
    "startColumnNumber" : 16,
    "endLineNumber" : 47,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ ]
}