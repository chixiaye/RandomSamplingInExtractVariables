{
  "id" : 206,
  "expression" : "matchWithCharFunction",
  "projectName" : "java-decompiler@jd-gui",
  "commitID" : "fbc5b14d66b37b88bf1dc18386b530e874550240",
  "filePath" : "/app/src/main/java/org/jd/gui/controller/SearchInConstantPoolsController.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "matchWithCharFunction",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 284,
      "startColumnNumber" : 35,
      "endLineNumber" : 284,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 284,
        "startColumnNumber" : 35,
        "endLineNumber" : 284,
        "endColumnNumber" : 88
      },
      "nodeContext" : "matchWithCharFunction.apply(pattern.charAt(0),index)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 284,
        "startColumnNumber" : 20,
        "endLineNumber" : 284,
        "endColumnNumber" : 88
      },
      "nodeContext" : "matchedTypes=matchWithCharFunction.apply(pattern.charAt(0),index)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 284,
        "startColumnNumber" : 20,
        "endLineNumber" : 284,
        "endColumnNumber" : 89
      },
      "nodeContext" : "matchedTypes=matchWithCharFunction.apply(pattern.charAt(0),index);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 283,
        "startColumnNumber" : 40,
        "endLineNumber" : 285,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  matchedTypes=matchWithCharFunction.apply(pattern.charAt(0),index);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 610,
        "startLineNumber" : 283,
        "startColumnNumber" : 16,
        "endLineNumber" : 293,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (patternLength == 1) {\n  matchedTypes=matchWithCharFunction.apply(pattern.charAt(0),index);\n}\n else {\n  String lastKey=key.substring(0,key.length() - 1);\n  Map<String,Collection> lastMatchedTypes=cache.get(lastKey);\n  if (lastMatchedTypes != null) {\n    matchedTypes=matchWithStringFunction.apply(pattern,lastMatchedTypes);\n  }\n else {\n    matchedTypes=matchWithStringFunction.apply(pattern,index);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 67,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 815,
        "startLineNumber" : 280,
        "startColumnNumber" : 38,
        "endLineNumber" : 297,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Map<String,Collection> index=indexes.getIndex(indexName);\n  if (patternLength == 1) {\n    matchedTypes=matchWithCharFunction.apply(pattern.charAt(0),index);\n  }\n else {\n    String lastKey=key.substring(0,key.length() - 1);\n    Map<String,Collection> lastMatchedTypes=cache.get(lastKey);\n    if (lastMatchedTypes != null) {\n      matchedTypes=matchWithStringFunction.apply(pattern,lastMatchedTypes);\n    }\n else {\n      matchedTypes=matchWithStringFunction.apply(pattern,index);\n    }\n  }\n  cache.put(key,matchedTypes);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 88,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 841,
        "startLineNumber" : 280,
        "startColumnNumber" : 12,
        "endLineNumber" : 297,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (matchedTypes == null) {\n  Map<String,Collection> index=indexes.getIndex(indexName);\n  if (patternLength == 1) {\n    matchedTypes=matchWithCharFunction.apply(pattern.charAt(0),index);\n  }\n else {\n    String lastKey=key.substring(0,key.length() - 1);\n    Map<String,Collection> lastMatchedTypes=cache.get(lastKey);\n    if (lastMatchedTypes != null) {\n      matchedTypes=matchWithStringFunction.apply(pattern,lastMatchedTypes);\n    }\n else {\n      matchedTypes=matchWithStringFunction.apply(pattern,index);\n    }\n  }\n  cache.put(key,matchedTypes);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 92,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1253,
        "startLineNumber" : 276,
        "startColumnNumber" : 31,
        "endLineNumber" : 304,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String key=String.valueOf(indexes.hashCode()) + \"***\" + indexName+ \"***\"+ pattern;\n  Map<String,Collection> matchedTypes=cache.get(key);\n  if (matchedTypes == null) {\n    Map<String,Collection> index=indexes.getIndex(indexName);\n    if (patternLength == 1) {\n      matchedTypes=matchWithCharFunction.apply(pattern.charAt(0),index);\n    }\n else {\n      String lastKey=key.substring(0,key.length() - 1);\n      Map<String,Collection> lastMatchedTypes=cache.get(lastKey);\n      if (lastMatchedTypes != null) {\n        matchedTypes=matchWithStringFunction.apply(pattern,lastMatchedTypes);\n      }\n else {\n        matchedTypes=matchWithStringFunction.apply(pattern,index);\n      }\n    }\n    cache.put(key,matchedTypes);\n  }\n  if (matchedTypes != null) {\n    for (    Collection<Container.Entry> entries : matchedTypes.values()) {\n      matchingEntries.addAll(entries);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 147,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1276,
        "startLineNumber" : 276,
        "startColumnNumber" : 8,
        "endLineNumber" : 304,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (patternLength > 0) {\n  String key=String.valueOf(indexes.hashCode()) + \"***\" + indexName+ \"***\"+ pattern;\n  Map<String,Collection> matchedTypes=cache.get(key);\n  if (matchedTypes == null) {\n    Map<String,Collection> index=indexes.getIndex(indexName);\n    if (patternLength == 1) {\n      matchedTypes=matchWithCharFunction.apply(pattern.charAt(0),index);\n    }\n else {\n      String lastKey=key.substring(0,key.length() - 1);\n      Map<String,Collection> lastMatchedTypes=cache.get(lastKey);\n      if (lastMatchedTypes != null) {\n        matchedTypes=matchWithStringFunction.apply(pattern,lastMatchedTypes);\n      }\n else {\n        matchedTypes=matchWithStringFunction.apply(pattern,index);\n      }\n    }\n    cache.put(key,matchedTypes);\n  }\n  if (matchedTypes != null) {\n    for (    Collection<Container.Entry> entries : matchedTypes.values()) {\n      matchingEntries.addAll(entries);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 151,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1343,
        "startLineNumber" : 273,
        "startColumnNumber" : 63,
        "endLineNumber" : 305,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int patternLength=pattern.length();\n  if (patternLength > 0) {\n    String key=String.valueOf(indexes.hashCode()) + \"***\" + indexName+ \"***\"+ pattern;\n    Map<String,Collection> matchedTypes=cache.get(key);\n    if (matchedTypes == null) {\n      Map<String,Collection> index=indexes.getIndex(indexName);\n      if (patternLength == 1) {\n        matchedTypes=matchWithCharFunction.apply(pattern.charAt(0),index);\n      }\n else {\n        String lastKey=key.substring(0,key.length() - 1);\n        Map<String,Collection> lastMatchedTypes=cache.get(lastKey);\n        if (lastMatchedTypes != null) {\n          matchedTypes=matchWithStringFunction.apply(pattern,lastMatchedTypes);\n        }\n else {\n          matchedTypes=matchWithStringFunction.apply(pattern,index);\n        }\n      }\n      cache.put(key,matchedTypes);\n    }\n    if (matchedTypes != null) {\n      for (      Collection<Container.Entry> entries : matchedTypes.values()) {\n        matchingEntries.addAll(entries);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 159,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1756,
        "startLineNumber" : 269,
        "startColumnNumber" : 4,
        "endLineNumber" : 305,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") protected void match(Indexes indexes,String indexName,String pattern,BiFunction<Character,Map<String,Collection>,Map<String,Collection>> matchWithCharFunction,BiFunction<String,Map<String,Collection>,Map<String,Collection>> matchWithStringFunction,Set<Container.Entry> matchingEntries){\n  int patternLength=pattern.length();\n  if (patternLength > 0) {\n    String key=String.valueOf(indexes.hashCode()) + \"***\" + indexName+ \"***\"+ pattern;\n    Map<String,Collection> matchedTypes=cache.get(key);\n    if (matchedTypes == null) {\n      Map<String,Collection> index=indexes.getIndex(indexName);\n      if (patternLength == 1) {\n        matchedTypes=matchWithCharFunction.apply(pattern.charAt(0),index);\n      }\n else {\n        String lastKey=key.substring(0,key.length() - 1);\n        Map<String,Collection> lastMatchedTypes=cache.get(lastKey);\n        if (lastMatchedTypes != null) {\n          matchedTypes=matchWithStringFunction.apply(pattern,lastMatchedTypes);\n        }\n else {\n          matchedTypes=matchWithStringFunction.apply(pattern,index);\n        }\n      }\n      cache.put(key,matchedTypes);\n    }\n    if (matchedTypes != null) {\n      for (      Collection<Container.Entry> entries : matchedTypes.values()) {\n        matchingEntries.addAll(entries);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 229,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 284,
        "startColumnNumber" : 20,
        "endLineNumber" : 284,
        "endColumnNumber" : 89
      },
      "nodeContext" : "matchedTypes=matchWithCharFunction.apply(pattern.charAt(0),index);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.function.BiFunction<java.lang.Character,java.util.Map<java.lang.String,java.util.Collection>,java.util.Map<java.lang.String,java.util.Collection>>"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 284,
    "startColumnNumber" : 35,
    "endLineNumber" : 284,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}