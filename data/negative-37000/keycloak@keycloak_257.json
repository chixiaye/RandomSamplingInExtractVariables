{
  "id" : 257,
  "expression" : "model.getScopeMappingsStream().map(RoleModel::getId)",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/model/infinispan/src/main/java/org/keycloak/models/cache/infinispan/entities/CachedClient.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "model.getScopeMappingsStream().map(RoleModel::getId)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 52,
      "startLineNumber" : 95,
      "startColumnNumber" : 21,
      "endLineNumber" : 95,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 8,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 95,
        "startColumnNumber" : 21,
        "endLineNumber" : 95,
        "endColumnNumber" : 101
      },
      "nodeContext" : "model.getScopeMappingsStream().map(RoleModel::getId).collect(Collectors.toSet())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 95,
        "endColumnNumber" : 102
      },
      "nodeContext" : "scope.addAll(model.getScopeMappingsStream().map(RoleModel::getId).collect(Collectors.toSet()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 95,
        "endColumnNumber" : 103
      },
      "nodeContext" : "scope.addAll(model.getScopeMappingsStream().map(RoleModel::getId).collect(Collectors.toSet()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2257,
        "startLineNumber" : 75,
        "startColumnNumber" : 76,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(revision,model.getId());\n  clientAuthenticatorType=model.getClientAuthenticatorType();\n  secret=model.getSecret();\n  registrationToken=model.getRegistrationToken();\n  clientId=model.getClientId();\n  name=model.getName();\n  description=model.getDescription();\n  this.realm=realm.getId();\n  enabled=model.isEnabled();\n  alwaysDisplayInConsole=model.isAlwaysDisplayInConsole();\n  protocol=model.getProtocol();\n  attributes.putAll(model.getAttributes());\n  authFlowBindings.putAll(model.getAuthenticationFlowBindingOverrides());\n  notBefore=model.getNotBefore();\n  frontchannelLogout=model.isFrontchannelLogout();\n  publicClient=model.isPublicClient();\n  fullScopeAllowed=model.isFullScopeAllowed();\n  redirectUris.addAll(model.getRedirectUris());\n  webOrigins.addAll(model.getWebOrigins());\n  scope.addAll(model.getScopeMappingsStream().map(RoleModel::getId).collect(Collectors.toSet()));\n  protocolMappers.addAll(model.getProtocolMappersStream().collect(Collectors.toSet()));\n  surrogateAuthRequired=model.isSurrogateAuthRequired();\n  managementUrl=model.getManagementUrl();\n  rootUrl=model.getRootUrl();\n  baseUrl=model.getBaseUrl();\n  bearerOnly=model.isBearerOnly();\n  consentRequired=model.isConsentRequired();\n  standardFlowEnabled=model.isStandardFlowEnabled();\n  implicitFlowEnabled=model.isImplicitFlowEnabled();\n  directAccessGrantsEnabled=model.isDirectAccessGrantsEnabled();\n  serviceAccountsEnabled=model.isServiceAccountsEnabled();\n  nodeReRegistrationTimeout=model.getNodeReRegistrationTimeout();\n  registeredNodes=new TreeMap<>(model.getRegisteredNodes());\n  defaultClientScopesIds=new LinkedList<>();\n  for (  ClientScopeModel clientScope : model.getClientScopes(true).values()) {\n    defaultClientScopesIds.add(clientScope.getId());\n  }\n  optionalClientScopesIds=new LinkedList<>();\n  for (  ClientScopeModel clientScope : model.getClientScopes(false).values()) {\n    optionalClientScopesIds.add(clientScope.getId());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 277,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2329,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public CachedClient(Long revision,RealmModel realm,ClientModel model){\n  super(revision,model.getId());\n  clientAuthenticatorType=model.getClientAuthenticatorType();\n  secret=model.getSecret();\n  registrationToken=model.getRegistrationToken();\n  clientId=model.getClientId();\n  name=model.getName();\n  description=model.getDescription();\n  this.realm=realm.getId();\n  enabled=model.isEnabled();\n  alwaysDisplayInConsole=model.isAlwaysDisplayInConsole();\n  protocol=model.getProtocol();\n  attributes.putAll(model.getAttributes());\n  authFlowBindings.putAll(model.getAuthenticationFlowBindingOverrides());\n  notBefore=model.getNotBefore();\n  frontchannelLogout=model.isFrontchannelLogout();\n  publicClient=model.isPublicClient();\n  fullScopeAllowed=model.isFullScopeAllowed();\n  redirectUris.addAll(model.getRedirectUris());\n  webOrigins.addAll(model.getWebOrigins());\n  scope.addAll(model.getScopeMappingsStream().map(RoleModel::getId).collect(Collectors.toSet()));\n  protocolMappers.addAll(model.getProtocolMappersStream().collect(Collectors.toSet()));\n  surrogateAuthRequired=model.isSurrogateAuthRequired();\n  managementUrl=model.getManagementUrl();\n  rootUrl=model.getRootUrl();\n  baseUrl=model.getBaseUrl();\n  bearerOnly=model.isBearerOnly();\n  consentRequired=model.isConsentRequired();\n  standardFlowEnabled=model.isStandardFlowEnabled();\n  implicitFlowEnabled=model.isImplicitFlowEnabled();\n  directAccessGrantsEnabled=model.isDirectAccessGrantsEnabled();\n  serviceAccountsEnabled=model.isServiceAccountsEnabled();\n  nodeReRegistrationTimeout=model.getNodeReRegistrationTimeout();\n  registeredNodes=new TreeMap<>(model.getRegisteredNodes());\n  defaultClientScopesIds=new LinkedList<>();\n  for (  ClientScopeModel clientScope : model.getClientScopes(true).values()) {\n    defaultClientScopesIds.add(clientScope.getId());\n  }\n  optionalClientScopesIds=new LinkedList<>();\n  for (  ClientScopeModel clientScope : model.getClientScopes(false).values()) {\n    optionalClientScopesIds.add(clientScope.getId());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 292,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 95,
        "endColumnNumber" : 103
      },
      "nodeContext" : "scope.addAll(model.getScopeMappingsStream().map(RoleModel::getId).collect(Collectors.toSet()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 5,
    "type" : "java.util.stream.Stream<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 52,
    "startLineNumber" : 95,
    "startColumnNumber" : 21,
    "endLineNumber" : 95,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ ]
}