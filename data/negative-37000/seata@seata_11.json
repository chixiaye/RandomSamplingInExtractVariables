{
  "id" : 11,
  "expression" : "1",
  "projectName" : "seata@seata",
  "commitID" : "42d41623178ab076b11b27a0f049ac3ed7f1a9dc",
  "filePath" : "/rm-datasource/src/main/java/io/seata/rm/datasource/AsyncWorker.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 124,
      "startColumnNumber" : 56,
      "endLineNumber" : 124,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 124,
        "startColumnNumber" : 24,
        "endLineNumber" : 125,
        "endColumnNumber" : 59
      },
      "nodeContext" : "new ScheduledThreadPoolExecutor(1,new NamedThreadFactory(\"AsyncWorker\",1,true))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 124,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 59
      },
      "nodeContext" : "timerExecutor=new ScheduledThreadPoolExecutor(1,new NamedThreadFactory(\"AsyncWorker\",1,true))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 124,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 60
      },
      "nodeContext" : "timerExecutor=new ScheduledThreadPoolExecutor(1,new NamedThreadFactory(\"AsyncWorker\",1,true));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 590,
        "startLineNumber" : 122,
        "startColumnNumber" : 36,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  LOGGER.info(\"Async Commit Buffer Limit: \" + ASYNC_COMMIT_BUFFER_LIMIT);\n  timerExecutor=new ScheduledThreadPoolExecutor(1,new NamedThreadFactory(\"AsyncWorker\",1,true));\n  timerExecutor.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        doBranchCommits();\n      }\n catch (      Throwable e) {\n        LOGGER.info(\"Failed at async committing ... \" + e.getMessage());\n      }\n    }\n  }\n,10,1000 * 1,TimeUnit.MILLISECONDS);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 651,
        "startLineNumber" : 119,
        "startColumnNumber" : 4,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Init.\n */\npublic synchronized void init(){\n  LOGGER.info(\"Async Commit Buffer Limit: \" + ASYNC_COMMIT_BUFFER_LIMIT);\n  timerExecutor=new ScheduledThreadPoolExecutor(1,new NamedThreadFactory(\"AsyncWorker\",1,true));\n  timerExecutor.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        doBranchCommits();\n      }\n catch (      Throwable e) {\n        LOGGER.info(\"Failed at async committing ... \" + e.getMessage());\n      }\n    }\n  }\n,10,1000 * 1,TimeUnit.MILLISECONDS);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 124,
        "startColumnNumber" : 24,
        "endLineNumber" : 125,
        "endColumnNumber" : 59
      },
      "nodeContext" : "new ScheduledThreadPoolExecutor(1,new NamedThreadFactory(\"AsyncWorker\",1,true))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 125,
      "startColumnNumber" : 50,
      "endLineNumber" : 125,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 125,
        "startColumnNumber" : 12,
        "endLineNumber" : 125,
        "endColumnNumber" : 58
      },
      "nodeContext" : "new NamedThreadFactory(\"AsyncWorker\",1,true)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 124,
        "startColumnNumber" : 24,
        "endLineNumber" : 125,
        "endColumnNumber" : 59
      },
      "nodeContext" : "new ScheduledThreadPoolExecutor(1,new NamedThreadFactory(\"AsyncWorker\",1,true))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 124,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 59
      },
      "nodeContext" : "timerExecutor=new ScheduledThreadPoolExecutor(1,new NamedThreadFactory(\"AsyncWorker\",1,true))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 124,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 60
      },
      "nodeContext" : "timerExecutor=new ScheduledThreadPoolExecutor(1,new NamedThreadFactory(\"AsyncWorker\",1,true));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 590,
        "startLineNumber" : 122,
        "startColumnNumber" : 36,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  LOGGER.info(\"Async Commit Buffer Limit: \" + ASYNC_COMMIT_BUFFER_LIMIT);\n  timerExecutor=new ScheduledThreadPoolExecutor(1,new NamedThreadFactory(\"AsyncWorker\",1,true));\n  timerExecutor.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        doBranchCommits();\n      }\n catch (      Throwable e) {\n        LOGGER.info(\"Failed at async committing ... \" + e.getMessage());\n      }\n    }\n  }\n,10,1000 * 1,TimeUnit.MILLISECONDS);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 651,
        "startLineNumber" : 119,
        "startColumnNumber" : 4,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Init.\n */\npublic synchronized void init(){\n  LOGGER.info(\"Async Commit Buffer Limit: \" + ASYNC_COMMIT_BUFFER_LIMIT);\n  timerExecutor=new ScheduledThreadPoolExecutor(1,new NamedThreadFactory(\"AsyncWorker\",1,true));\n  timerExecutor.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        doBranchCommits();\n      }\n catch (      Throwable e) {\n        LOGGER.info(\"Failed at async committing ... \" + e.getMessage());\n      }\n    }\n  }\n,10,1000 * 1,TimeUnit.MILLISECONDS);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 125,
        "startColumnNumber" : 12,
        "endLineNumber" : 125,
        "endColumnNumber" : 58
      },
      "nodeContext" : "new NamedThreadFactory(\"AsyncWorker\",1,true)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 138,
      "startColumnNumber" : 22,
      "endLineNumber" : 138,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 138,
        "startColumnNumber" : 15,
        "endLineNumber" : 138,
        "endColumnNumber" : 23
      },
      "nodeContext" : "1000 * 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 373,
        "startLineNumber" : 126,
        "startColumnNumber" : 8,
        "endLineNumber" : 138,
        "endColumnNumber" : 47
      },
      "nodeContext" : "timerExecutor.scheduleAtFixedRate(new Runnable(){\n  @Override public void run(){\n    try {\n      doBranchCommits();\n    }\n catch (    Throwable e) {\n      LOGGER.info(\"Failed at async committing ... \" + e.getMessage());\n    }\n  }\n}\n,10,1000 * 1,TimeUnit.MILLISECONDS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 41,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 374,
        "startLineNumber" : 126,
        "startColumnNumber" : 8,
        "endLineNumber" : 138,
        "endColumnNumber" : 48
      },
      "nodeContext" : "timerExecutor.scheduleAtFixedRate(new Runnable(){\n  @Override public void run(){\n    try {\n      doBranchCommits();\n    }\n catch (    Throwable e) {\n      LOGGER.info(\"Failed at async committing ... \" + e.getMessage());\n    }\n  }\n}\n,10,1000 * 1,TimeUnit.MILLISECONDS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 42,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 590,
        "startLineNumber" : 122,
        "startColumnNumber" : 36,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  LOGGER.info(\"Async Commit Buffer Limit: \" + ASYNC_COMMIT_BUFFER_LIMIT);\n  timerExecutor=new ScheduledThreadPoolExecutor(1,new NamedThreadFactory(\"AsyncWorker\",1,true));\n  timerExecutor.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        doBranchCommits();\n      }\n catch (      Throwable e) {\n        LOGGER.info(\"Failed at async committing ... \" + e.getMessage());\n      }\n    }\n  }\n,10,1000 * 1,TimeUnit.MILLISECONDS);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 651,
        "startLineNumber" : 119,
        "startColumnNumber" : 4,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Init.\n */\npublic synchronized void init(){\n  LOGGER.info(\"Async Commit Buffer Limit: \" + ASYNC_COMMIT_BUFFER_LIMIT);\n  timerExecutor=new ScheduledThreadPoolExecutor(1,new NamedThreadFactory(\"AsyncWorker\",1,true));\n  timerExecutor.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        doBranchCommits();\n      }\n catch (      Throwable e) {\n        LOGGER.info(\"Failed at async committing ... \" + e.getMessage());\n      }\n    }\n  }\n,10,1000 * 1,TimeUnit.MILLISECONDS);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 138,
        "startColumnNumber" : 15,
        "endLineNumber" : 138,
        "endColumnNumber" : 23
      },
      "nodeContext" : "1000 * 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 124,
    "startColumnNumber" : 56,
    "endLineNumber" : 124,
    "endColumnNumber" : 57
  }, {
    "charLength" : 1,
    "startLineNumber" : 125,
    "startColumnNumber" : 50,
    "endLineNumber" : 125,
    "endColumnNumber" : 51
  }, {
    "charLength" : 1,
    "startLineNumber" : 138,
    "startColumnNumber" : 22,
    "endLineNumber" : 138,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}