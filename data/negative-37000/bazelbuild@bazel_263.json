{
  "id" : 263,
  "expression" : "new QueryException(expression,String.format(\"illegal '%s' pattern regexp '%s': %s\",getName(),rawPattern,e.getMessage()),Query.Code.SYNTAX_ERROR)",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/main/java/com/google/devtools/build/lib/query2/engine/RegexFilterExpression.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new QueryException(expression,String.format(\"illegal '%s' pattern regexp '%s': %s\",getName(),rawPattern,e.getMessage()),Query.Code.SYNTAX_ERROR)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 211,
      "startLineNumber" : 53,
      "startColumnNumber" : 10,
      "endLineNumber" : 57,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 19,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 52,
        "startColumnNumber" : 13,
        "endLineNumber" : 57,
        "endColumnNumber" : 39
      },
      "nodeContext" : "env.immediateFailedFuture(new QueryException(expression,String.format(\"illegal '%s' pattern regexp '%s': %s\",getName(),rawPattern,e.getMessage()),Query.Code.SYNTAX_ERROR))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 257,
        "startLineNumber" : 52,
        "startColumnNumber" : 6,
        "endLineNumber" : 57,
        "endColumnNumber" : 40
      },
      "nodeContext" : "return env.immediateFailedFuture(new QueryException(expression,String.format(\"illegal '%s' pattern regexp '%s': %s\",getName(),rawPattern,e.getMessage()),Query.Code.SYNTAX_ERROR));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 271,
        "startLineNumber" : 51,
        "startColumnNumber" : 39,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return env.immediateFailedFuture(new QueryException(expression,String.format(\"illegal '%s' pattern regexp '%s': %s\",getName(),rawPattern,e.getMessage()),Query.Code.SYNTAX_ERROR));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 304,
        "startLineNumber" : 51,
        "startColumnNumber" : 6,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "catch (PatternSyntaxException e) {\n  return env.immediateFailedFuture(new QueryException(expression,String.format(\"illegal '%s' pattern regexp '%s': %s\",getName(),rawPattern,e.getMessage()),Query.Code.SYNTAX_ERROR));\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 369,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  compiledPattern=Pattern.compile(rawPattern);\n}\n catch (PatternSyntaxException e) {\n  return env.immediateFailedFuture(new QueryException(expression,String.format(\"illegal '%s' pattern regexp '%s': %s\",getName(),rawPattern,e.getMessage()),Query.Code.SYNTAX_ERROR));\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 38,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1015,
        "startLineNumber" : 46,
        "startColumnNumber" : 28,
        "endLineNumber" : 76,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String rawPattern=getPattern(args);\n  final Pattern compiledPattern;\n  try {\n    compiledPattern=Pattern.compile(rawPattern);\n  }\n catch (  PatternSyntaxException e) {\n    return env.immediateFailedFuture(new QueryException(expression,String.format(\"illegal '%s' pattern regexp '%s': %s\",getName(),rawPattern,e.getMessage()),Query.Code.SYNTAX_ERROR));\n  }\n  final Predicate<T> matchFilter=target -> {\n    for (    String str : getFilterStrings(env,args,target)) {\n      if ((str != null) && compiledPattern.matcher(str).find()) {\n        return !invert;\n      }\n    }\n    return invert;\n  }\n;\n  return env.eval(args.get(getExpressionToFilterIndex()).getExpression(),context,new FilteredCallback<>(callback,matchFilter));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1239,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 76,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public <T>QueryTaskFuture<Void> eval(final QueryEnvironment<T> env,QueryExpressionContext<T> context,QueryExpression expression,final List<Argument> args,Callback<T> callback){\n  String rawPattern=getPattern(args);\n  final Pattern compiledPattern;\n  try {\n    compiledPattern=Pattern.compile(rawPattern);\n  }\n catch (  PatternSyntaxException e) {\n    return env.immediateFailedFuture(new QueryException(expression,String.format(\"illegal '%s' pattern regexp '%s': %s\",getName(),rawPattern,e.getMessage()),Query.Code.SYNTAX_ERROR));\n  }\n  final Predicate<T> matchFilter=target -> {\n    for (    String str : getFilterStrings(env,args,target)) {\n      if ((str != null) && compiledPattern.matcher(str).find()) {\n        return !invert;\n      }\n    }\n    return invert;\n  }\n;\n  return env.eval(args.get(getExpressionToFilterIndex()).getExpression(),context,new FilteredCallback<>(callback,matchFilter));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 52,
        "startColumnNumber" : 13,
        "endLineNumber" : 57,
        "endColumnNumber" : 39
      },
      "nodeContext" : "env.immediateFailedFuture(new QueryException(expression,String.format(\"illegal '%s' pattern regexp '%s': %s\",getName(),rawPattern,e.getMessage()),Query.Code.SYNTAX_ERROR))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 5
    },
    "tokenLength" : 18,
    "type" : "com.google.devtools.build.lib.query2.engine.QueryException"
  } ],
  "positionList" : [ {
    "charLength" : 211,
    "startLineNumber" : 53,
    "startColumnNumber" : 10,
    "endLineNumber" : 57,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}