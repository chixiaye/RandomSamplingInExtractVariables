{
  "id" : 41,
  "expression" : "Instruction",
  "projectName" : "iluwatar@java-design-patterns",
  "commitID" : "428efc7d53449a51d25dfda4141742629ecbb0b2",
  "filePath" : "/bytecode/src/main/java/com/iluwatar/bytecode/Instruction.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Instruction",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 60,
      "startColumnNumber" : 24,
      "endLineNumber" : 60,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.FieldAccess,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 60,
        "startColumnNumber" : 24,
        "endLineNumber" : 60,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Instruction.values()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 60,
        "startColumnNumber" : 24,
        "endLineNumber" : 60,
        "endColumnNumber" : 51
      },
      "nodeContext" : "Instruction.values().length",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 60,
        "startColumnNumber" : 20,
        "endLineNumber" : 60,
        "endColumnNumber" : 51
      },
      "nodeContext" : "i < Instruction.values().length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (var i=0; i < Instruction.values().length; i++) {\n  if (Instruction.values()[i].getIntValue() == value) {\n    return Instruction.values()[i];\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 34,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 248,
        "startLineNumber" : 59,
        "startColumnNumber" : 54,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (var i=0; i < Instruction.values().length; i++) {\n    if (Instruction.values()[i].getIntValue() == value) {\n      return Instruction.values()[i];\n    }\n  }\n  throw new IllegalArgumentException(\"Invalid instruction value\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.EnumDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 447,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Converts integer value to Instruction.\n * @param value value of instruction\n * @return representation of the instruction\n */\npublic static Instruction getInstruction(int value){\n  for (var i=0; i < Instruction.values().length; i++) {\n    if (Instruction.values()[i].getIntValue() == value) {\n      return Instruction.values()[i];\n    }\n  }\n  throw new IllegalArgumentException(\"Invalid instruction value\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 50,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 60,
        "startColumnNumber" : 20,
        "endLineNumber" : 60,
        "endColumnNumber" : 51
      },
      "nodeContext" : "i < Instruction.values().length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.iluwatar.bytecode.Instruction"
  }, {
    "nodeContext" : "Instruction",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 61,
      "startColumnNumber" : 10,
      "endLineNumber" : 61,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,array]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 61,
        "startColumnNumber" : 10,
        "endLineNumber" : 61,
        "endColumnNumber" : 30
      },
      "nodeContext" : "Instruction.values()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 61,
        "startColumnNumber" : 10,
        "endLineNumber" : 61,
        "endColumnNumber" : 33
      },
      "nodeContext" : "Instruction.values()[i]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 61,
        "startColumnNumber" : 10,
        "endLineNumber" : 61,
        "endColumnNumber" : 47
      },
      "nodeContext" : "Instruction.values()[i].getIntValue()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 61,
        "startColumnNumber" : 10,
        "endLineNumber" : 61,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Instruction.values()[i].getIntValue() == value",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 61,
        "startColumnNumber" : 6,
        "endLineNumber" : 63,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (Instruction.values()[i].getIntValue() == value) {\n  return Instruction.values()[i];\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 60,
        "startColumnNumber" : 58,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (Instruction.values()[i].getIntValue() == value) {\n    return Instruction.values()[i];\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (var i=0; i < Instruction.values().length; i++) {\n  if (Instruction.values()[i].getIntValue() == value) {\n    return Instruction.values()[i];\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 34,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 248,
        "startLineNumber" : 59,
        "startColumnNumber" : 54,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (var i=0; i < Instruction.values().length; i++) {\n    if (Instruction.values()[i].getIntValue() == value) {\n      return Instruction.values()[i];\n    }\n  }\n  throw new IllegalArgumentException(\"Invalid instruction value\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.EnumDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 447,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Converts integer value to Instruction.\n * @param value value of instruction\n * @return representation of the instruction\n */\npublic static Instruction getInstruction(int value){\n  for (var i=0; i < Instruction.values().length; i++) {\n    if (Instruction.values()[i].getIntValue() == value) {\n      return Instruction.values()[i];\n    }\n  }\n  throw new IllegalArgumentException(\"Invalid instruction value\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 50,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 61,
        "startColumnNumber" : 10,
        "endLineNumber" : 61,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Instruction.values()[i].getIntValue() == value",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.iluwatar.bytecode.Instruction"
  }, {
    "nodeContext" : "Instruction",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 62,
      "startColumnNumber" : 15,
      "endLineNumber" : 62,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,array]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 62,
        "startColumnNumber" : 15,
        "endLineNumber" : 62,
        "endColumnNumber" : 35
      },
      "nodeContext" : "Instruction.values()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 62,
        "startColumnNumber" : 15,
        "endLineNumber" : 62,
        "endColumnNumber" : 38
      },
      "nodeContext" : "Instruction.values()[i]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 39
      },
      "nodeContext" : "return Instruction.values()[i];\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 61,
        "startColumnNumber" : 58,
        "endLineNumber" : 63,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  return Instruction.values()[i];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 61,
        "startColumnNumber" : 6,
        "endLineNumber" : 63,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (Instruction.values()[i].getIntValue() == value) {\n  return Instruction.values()[i];\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 60,
        "startColumnNumber" : 58,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (Instruction.values()[i].getIntValue() == value) {\n    return Instruction.values()[i];\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (var i=0; i < Instruction.values().length; i++) {\n  if (Instruction.values()[i].getIntValue() == value) {\n    return Instruction.values()[i];\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 34,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 248,
        "startLineNumber" : 59,
        "startColumnNumber" : 54,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (var i=0; i < Instruction.values().length; i++) {\n    if (Instruction.values()[i].getIntValue() == value) {\n      return Instruction.values()[i];\n    }\n  }\n  throw new IllegalArgumentException(\"Invalid instruction value\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.EnumDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 447,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Converts integer value to Instruction.\n * @param value value of instruction\n * @return representation of the instruction\n */\npublic static Instruction getInstruction(int value){\n  for (var i=0; i < Instruction.values().length; i++) {\n    if (Instruction.values()[i].getIntValue() == value) {\n      return Instruction.values()[i];\n    }\n  }\n  throw new IllegalArgumentException(\"Invalid instruction value\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 50,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 39
      },
      "nodeContext" : "return Instruction.values()[i];\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.iluwatar.bytecode.Instruction"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 60,
    "startColumnNumber" : 24,
    "endLineNumber" : 60,
    "endColumnNumber" : 35
  }, {
    "charLength" : 11,
    "startLineNumber" : 61,
    "startColumnNumber" : 10,
    "endLineNumber" : 61,
    "endColumnNumber" : 21
  }, {
    "charLength" : 11,
    "startLineNumber" : 62,
    "startColumnNumber" : 15,
    "endLineNumber" : 62,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}