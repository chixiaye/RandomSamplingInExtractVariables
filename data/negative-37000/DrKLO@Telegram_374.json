{
  "id" : 374,
  "expression" : "state",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/com/google/android/exoplayer2/extractor/ts/LatmReader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "state",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 104,
      "startColumnNumber" : 14,
      "endLineNumber" : 104,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1369,
        "startLineNumber" : 104,
        "startColumnNumber" : 6,
        "endLineNumber" : 139,
        "endColumnNumber" : 7
      },
      "nodeContext" : "switch (state) {\ncase STATE_FINDING_SYNC_1:  if (data.readUnsignedByte() == SYNC_BYTE_FIRST) {\n    state=STATE_FINDING_SYNC_2;\n  }\nbreak;\ncase STATE_FINDING_SYNC_2:int secondByte=data.readUnsignedByte();\nif ((secondByte & SYNC_BYTE_SECOND) == SYNC_BYTE_SECOND) {\nsecondHeaderByte=secondByte;\nstate=STATE_READING_HEADER;\n}\n else if (secondByte != SYNC_BYTE_FIRST) {\nstate=STATE_FINDING_SYNC_1;\n}\nbreak;\ncase STATE_READING_HEADER:sampleSize=((secondHeaderByte & ~SYNC_BYTE_SECOND) << 8) | data.readUnsignedByte();\nif (sampleSize > sampleDataBuffer.data.length) {\nresetBufferForSize(sampleSize);\n}\nbytesRead=0;\nstate=STATE_READING_SAMPLE;\nbreak;\ncase STATE_READING_SAMPLE:bytesToRead=Math.min(data.bytesLeft(),sampleSize - bytesRead);\ndata.readBytes(sampleBitArray.data,bytesRead,bytesToRead);\nbytesRead+=bytesToRead;\nif (bytesRead == sampleSize) {\nsampleBitArray.setPosition(0);\nparseAudioMuxElement(sampleBitArray);\nstate=STATE_FINDING_SYNC_1;\n}\nbreak;\ndefault:throw new IllegalStateException();\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 141,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1383,
        "startLineNumber" : 103,
        "startColumnNumber" : 33,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (state) {\ncase STATE_FINDING_SYNC_1:    if (data.readUnsignedByte() == SYNC_BYTE_FIRST) {\n      state=STATE_FINDING_SYNC_2;\n    }\n  break;\ncase STATE_FINDING_SYNC_2:int secondByte=data.readUnsignedByte();\nif ((secondByte & SYNC_BYTE_SECOND) == SYNC_BYTE_SECOND) {\nsecondHeaderByte=secondByte;\nstate=STATE_READING_HEADER;\n}\n else if (secondByte != SYNC_BYTE_FIRST) {\nstate=STATE_FINDING_SYNC_1;\n}\nbreak;\ncase STATE_READING_HEADER:sampleSize=((secondHeaderByte & ~SYNC_BYTE_SECOND) << 8) | data.readUnsignedByte();\nif (sampleSize > sampleDataBuffer.data.length) {\nresetBufferForSize(sampleSize);\n}\nbytesRead=0;\nstate=STATE_READING_SAMPLE;\nbreak;\ncase STATE_READING_SAMPLE:bytesToRead=Math.min(data.bytesLeft(),sampleSize - bytesRead);\ndata.readBytes(sampleBitArray.data,bytesRead,bytesToRead);\nbytesRead+=bytesToRead;\nif (bytesRead == sampleSize) {\nsampleBitArray.setPosition(0);\nparseAudioMuxElement(sampleBitArray);\nstate=STATE_FINDING_SYNC_1;\n}\nbreak;\ndefault:throw new IllegalStateException();\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1412,
        "startLineNumber" : 103,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (data.bytesLeft() > 0) {\nswitch (state) {\ncase STATE_FINDING_SYNC_1:    if (data.readUnsignedByte() == SYNC_BYTE_FIRST) {\n      state=STATE_FINDING_SYNC_2;\n    }\n  break;\ncase STATE_FINDING_SYNC_2:int secondByte=data.readUnsignedByte();\nif ((secondByte & SYNC_BYTE_SECOND) == SYNC_BYTE_SECOND) {\nsecondHeaderByte=secondByte;\nstate=STATE_READING_HEADER;\n}\n else if (secondByte != SYNC_BYTE_FIRST) {\nstate=STATE_FINDING_SYNC_1;\n}\nbreak;\ncase STATE_READING_HEADER:sampleSize=((secondHeaderByte & ~SYNC_BYTE_SECOND) << 8) | data.readUnsignedByte();\nif (sampleSize > sampleDataBuffer.data.length) {\nresetBufferForSize(sampleSize);\n}\nbytesRead=0;\nstate=STATE_READING_SAMPLE;\nbreak;\ncase STATE_READING_SAMPLE:bytesToRead=Math.min(data.bytesLeft(),sampleSize - bytesRead);\ndata.readBytes(sampleBitArray.data,bytesRead,bytesToRead);\nbytesRead+=bytesToRead;\nif (bytesRead == sampleSize) {\nsampleBitArray.setPosition(0);\nparseAudioMuxElement(sampleBitArray);\nstate=STATE_FINDING_SYNC_1;\n}\nbreak;\ndefault:throw new IllegalStateException();\n}\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 148,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1443,
        "startLineNumber" : 101,
        "startColumnNumber" : 69,
        "endLineNumber" : 141,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int bytesToRead;\n  while (data.bytesLeft() > 0) {\nswitch (state) {\ncase STATE_FINDING_SYNC_1:      if (data.readUnsignedByte() == SYNC_BYTE_FIRST) {\n        state=STATE_FINDING_SYNC_2;\n      }\n    break;\ncase STATE_FINDING_SYNC_2:  int secondByte=data.readUnsignedByte();\nif ((secondByte & SYNC_BYTE_SECOND) == SYNC_BYTE_SECOND) {\n  secondHeaderByte=secondByte;\n  state=STATE_READING_HEADER;\n}\n else if (secondByte != SYNC_BYTE_FIRST) {\n  state=STATE_FINDING_SYNC_1;\n}\nbreak;\ncase STATE_READING_HEADER:sampleSize=((secondHeaderByte & ~SYNC_BYTE_SECOND) << 8) | data.readUnsignedByte();\nif (sampleSize > sampleDataBuffer.data.length) {\nresetBufferForSize(sampleSize);\n}\nbytesRead=0;\nstate=STATE_READING_SAMPLE;\nbreak;\ncase STATE_READING_SAMPLE:bytesToRead=Math.min(data.bytesLeft(),sampleSize - bytesRead);\ndata.readBytes(sampleBitArray.data,bytesRead,bytesToRead);\nbytesRead+=bytesToRead;\nif (bytesRead == sampleSize) {\nsampleBitArray.setPosition(0);\nparseAudioMuxElement(sampleBitArray);\nstate=STATE_FINDING_SYNC_1;\n}\nbreak;\ndefault:throw new IllegalStateException();\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 153,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1522,
        "startLineNumber" : 100,
        "startColumnNumber" : 2,
        "endLineNumber" : 141,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void consume(ParsableByteArray data) throws ParserException {\n  int bytesToRead;\n  while (data.bytesLeft() > 0) {\nswitch (state) {\ncase STATE_FINDING_SYNC_1:      if (data.readUnsignedByte() == SYNC_BYTE_FIRST) {\n        state=STATE_FINDING_SYNC_2;\n      }\n    break;\ncase STATE_FINDING_SYNC_2:  int secondByte=data.readUnsignedByte();\nif ((secondByte & SYNC_BYTE_SECOND) == SYNC_BYTE_SECOND) {\n  secondHeaderByte=secondByte;\n  state=STATE_READING_HEADER;\n}\n else if (secondByte != SYNC_BYTE_FIRST) {\n  state=STATE_FINDING_SYNC_1;\n}\nbreak;\ncase STATE_READING_HEADER:sampleSize=((secondHeaderByte & ~SYNC_BYTE_SECOND) << 8) | data.readUnsignedByte();\nif (sampleSize > sampleDataBuffer.data.length) {\nresetBufferForSize(sampleSize);\n}\nbytesRead=0;\nstate=STATE_READING_SAMPLE;\nbreak;\ncase STATE_READING_SAMPLE:bytesToRead=Math.min(data.bytesLeft(),sampleSize - bytesRead);\ndata.readBytes(sampleBitArray.data,bytesRead,bytesToRead);\nbytesRead+=bytesToRead;\nif (bytesRead == sampleSize) {\nsampleBitArray.setPosition(0);\nparseAudioMuxElement(sampleBitArray);\nstate=STATE_FINDING_SYNC_1;\n}\nbreak;\ndefault:throw new IllegalStateException();\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 165,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1369,
        "startLineNumber" : 104,
        "startColumnNumber" : 6,
        "endLineNumber" : 139,
        "endColumnNumber" : 7
      },
      "nodeContext" : "switch (state) {\ncase STATE_FINDING_SYNC_1:  if (data.readUnsignedByte() == SYNC_BYTE_FIRST) {\n    state=STATE_FINDING_SYNC_2;\n  }\nbreak;\ncase STATE_FINDING_SYNC_2:int secondByte=data.readUnsignedByte();\nif ((secondByte & SYNC_BYTE_SECOND) == SYNC_BYTE_SECOND) {\nsecondHeaderByte=secondByte;\nstate=STATE_READING_HEADER;\n}\n else if (secondByte != SYNC_BYTE_FIRST) {\nstate=STATE_FINDING_SYNC_1;\n}\nbreak;\ncase STATE_READING_HEADER:sampleSize=((secondHeaderByte & ~SYNC_BYTE_SECOND) << 8) | data.readUnsignedByte();\nif (sampleSize > sampleDataBuffer.data.length) {\nresetBufferForSize(sampleSize);\n}\nbytesRead=0;\nstate=STATE_READING_SAMPLE;\nbreak;\ncase STATE_READING_SAMPLE:bytesToRead=Math.min(data.bytesLeft(),sampleSize - bytesRead);\ndata.readBytes(sampleBitArray.data,bytesRead,bytesToRead);\nbytesRead+=bytesToRead;\nif (bytesRead == sampleSize) {\nsampleBitArray.setPosition(0);\nparseAudioMuxElement(sampleBitArray);\nstate=STATE_FINDING_SYNC_1;\n}\nbreak;\ndefault:throw new IllegalStateException();\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 141,
      "astHeight" : 10
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 104,
    "startColumnNumber" : 14,
    "endLineNumber" : 104,
    "endColumnNumber" : 19
  } ],
  "layoutRelationDataList" : [ ]
}