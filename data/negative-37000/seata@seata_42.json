{
  "id" : 42,
  "expression" : "\"id\"",
  "projectName" : "seata@seata",
  "commitID" : "42d41623178ab076b11b27a0f049ac3ed7f1a9dc",
  "filePath" : "/rm-datasource/src/test/java/io/seata/rm/datasource/undo/UndoExecutorTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"id\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 97,
      "startColumnNumber" : 81,
      "endLineNumber" : 97,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 97,
        "startColumnNumber" : 52,
        "endLineNumber" : 97,
        "endColumnNumber" : 86
      },
      "nodeContext" : "new MockTableMeta(\"product\",\"id\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 97,
        "startColumnNumber" : 35,
        "endLineNumber" : 97,
        "endColumnNumber" : 87
      },
      "nodeContext" : "new TableRecords(new MockTableMeta(\"product\",\"id\"))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 97,
        "startColumnNumber" : 21,
        "endLineNumber" : 97,
        "endColumnNumber" : 87
      },
      "nodeContext" : "beforeImage=new TableRecords(new MockTableMeta(\"product\",\"id\"))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 88
      },
      "nodeContext" : "TableRecords beforeImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2054,
        "startLineNumber" : 92,
        "startColumnNumber" : 49,
        "endLineNumber" : 156,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SQLUndoLog SQLUndoLog=new SQLUndoLog();\n  SQLUndoLog.setTableName(\"my_test_table\");\n  SQLUndoLog.setSqlType(SQLType.UPDATE);\n  TableRecords beforeImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row beforeRow=new Row();\n  Field pkField=new Field();\n  pkField.setKeyType(KeyType.PrimaryKey);\n  pkField.setName(\"id\");\n  pkField.setType(Types.INTEGER);\n  pkField.setValue(213);\n  beforeRow.add(pkField);\n  Field name=new Field();\n  name.setName(\"name\");\n  name.setType(Types.VARCHAR);\n  name.setValue(\"SEATA\");\n  beforeRow.add(name);\n  Field since=new Field();\n  since.setName(\"since\");\n  since.setType(Types.VARCHAR);\n  since.setValue(\"2014\");\n  beforeRow.add(since);\n  beforeImage.add(beforeRow);\n  TableRecords afterImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row afterRow=new Row();\n  Field pkField1=new Field();\n  pkField1.setKeyType(KeyType.PrimaryKey);\n  pkField1.setName(\"id\");\n  pkField1.setType(Types.INTEGER);\n  pkField1.setValue(213);\n  afterRow.add(pkField1);\n  Field name1=new Field();\n  name1.setName(\"name\");\n  name1.setType(Types.VARCHAR);\n  name1.setValue(\"GTS\");\n  afterRow.add(name1);\n  Field since1=new Field();\n  since1.setName(\"since\");\n  since1.setType(Types.VARCHAR);\n  since1.setValue(\"2016\");\n  afterRow.add(since1);\n  afterImage.add(afterRow);\n  SQLUndoLog.setBeforeImage(beforeImage);\n  SQLUndoLog.setAfterImage(afterImage);\n  AbstractUndoExecutor executor=UndoExecutorFactory.getUndoExecutor(JdbcConstants.MYSQL,SQLUndoLog);\n  MockConnection connection=new MockConnection();\n  AbstractUndoExecutor spy=Mockito.spy(executor);\n  Mockito.doReturn(true).when(spy).dataValidationAndGoOn(connection);\n  spy.executeOn(connection);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 322,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2145,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 156,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Test update.\n */\n@Test public void testUpdate() throws SQLException {\n  SQLUndoLog SQLUndoLog=new SQLUndoLog();\n  SQLUndoLog.setTableName(\"my_test_table\");\n  SQLUndoLog.setSqlType(SQLType.UPDATE);\n  TableRecords beforeImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row beforeRow=new Row();\n  Field pkField=new Field();\n  pkField.setKeyType(KeyType.PrimaryKey);\n  pkField.setName(\"id\");\n  pkField.setType(Types.INTEGER);\n  pkField.setValue(213);\n  beforeRow.add(pkField);\n  Field name=new Field();\n  name.setName(\"name\");\n  name.setType(Types.VARCHAR);\n  name.setValue(\"SEATA\");\n  beforeRow.add(name);\n  Field since=new Field();\n  since.setName(\"since\");\n  since.setType(Types.VARCHAR);\n  since.setValue(\"2014\");\n  beforeRow.add(since);\n  beforeImage.add(beforeRow);\n  TableRecords afterImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row afterRow=new Row();\n  Field pkField1=new Field();\n  pkField1.setKeyType(KeyType.PrimaryKey);\n  pkField1.setName(\"id\");\n  pkField1.setType(Types.INTEGER);\n  pkField1.setValue(213);\n  afterRow.add(pkField1);\n  Field name1=new Field();\n  name1.setName(\"name\");\n  name1.setType(Types.VARCHAR);\n  name1.setValue(\"GTS\");\n  afterRow.add(name1);\n  Field since1=new Field();\n  since1.setName(\"since\");\n  since1.setType(Types.VARCHAR);\n  since1.setValue(\"2016\");\n  afterRow.add(since1);\n  afterImage.add(afterRow);\n  SQLUndoLog.setBeforeImage(beforeImage);\n  SQLUndoLog.setAfterImage(afterImage);\n  AbstractUndoExecutor executor=UndoExecutorFactory.getUndoExecutor(JdbcConstants.MYSQL,SQLUndoLog);\n  MockConnection connection=new MockConnection();\n  AbstractUndoExecutor spy=Mockito.spy(executor);\n  Mockito.doReturn(true).when(spy).dataValidationAndGoOn(connection);\n  spy.executeOn(connection);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 331,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 88
      },
      "nodeContext" : "TableRecords beforeImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"id\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 103,
      "startColumnNumber" : 24,
      "endLineNumber" : 103,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 103,
        "startColumnNumber" : 8,
        "endLineNumber" : 103,
        "endColumnNumber" : 29
      },
      "nodeContext" : "pkField.setName(\"id\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 103,
        "startColumnNumber" : 8,
        "endLineNumber" : 103,
        "endColumnNumber" : 30
      },
      "nodeContext" : "pkField.setName(\"id\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2054,
        "startLineNumber" : 92,
        "startColumnNumber" : 49,
        "endLineNumber" : 156,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SQLUndoLog SQLUndoLog=new SQLUndoLog();\n  SQLUndoLog.setTableName(\"my_test_table\");\n  SQLUndoLog.setSqlType(SQLType.UPDATE);\n  TableRecords beforeImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row beforeRow=new Row();\n  Field pkField=new Field();\n  pkField.setKeyType(KeyType.PrimaryKey);\n  pkField.setName(\"id\");\n  pkField.setType(Types.INTEGER);\n  pkField.setValue(213);\n  beforeRow.add(pkField);\n  Field name=new Field();\n  name.setName(\"name\");\n  name.setType(Types.VARCHAR);\n  name.setValue(\"SEATA\");\n  beforeRow.add(name);\n  Field since=new Field();\n  since.setName(\"since\");\n  since.setType(Types.VARCHAR);\n  since.setValue(\"2014\");\n  beforeRow.add(since);\n  beforeImage.add(beforeRow);\n  TableRecords afterImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row afterRow=new Row();\n  Field pkField1=new Field();\n  pkField1.setKeyType(KeyType.PrimaryKey);\n  pkField1.setName(\"id\");\n  pkField1.setType(Types.INTEGER);\n  pkField1.setValue(213);\n  afterRow.add(pkField1);\n  Field name1=new Field();\n  name1.setName(\"name\");\n  name1.setType(Types.VARCHAR);\n  name1.setValue(\"GTS\");\n  afterRow.add(name1);\n  Field since1=new Field();\n  since1.setName(\"since\");\n  since1.setType(Types.VARCHAR);\n  since1.setValue(\"2016\");\n  afterRow.add(since1);\n  afterImage.add(afterRow);\n  SQLUndoLog.setBeforeImage(beforeImage);\n  SQLUndoLog.setAfterImage(afterImage);\n  AbstractUndoExecutor executor=UndoExecutorFactory.getUndoExecutor(JdbcConstants.MYSQL,SQLUndoLog);\n  MockConnection connection=new MockConnection();\n  AbstractUndoExecutor spy=Mockito.spy(executor);\n  Mockito.doReturn(true).when(spy).dataValidationAndGoOn(connection);\n  spy.executeOn(connection);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 322,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2145,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 156,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Test update.\n */\n@Test public void testUpdate() throws SQLException {\n  SQLUndoLog SQLUndoLog=new SQLUndoLog();\n  SQLUndoLog.setTableName(\"my_test_table\");\n  SQLUndoLog.setSqlType(SQLType.UPDATE);\n  TableRecords beforeImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row beforeRow=new Row();\n  Field pkField=new Field();\n  pkField.setKeyType(KeyType.PrimaryKey);\n  pkField.setName(\"id\");\n  pkField.setType(Types.INTEGER);\n  pkField.setValue(213);\n  beforeRow.add(pkField);\n  Field name=new Field();\n  name.setName(\"name\");\n  name.setType(Types.VARCHAR);\n  name.setValue(\"SEATA\");\n  beforeRow.add(name);\n  Field since=new Field();\n  since.setName(\"since\");\n  since.setType(Types.VARCHAR);\n  since.setValue(\"2014\");\n  beforeRow.add(since);\n  beforeImage.add(beforeRow);\n  TableRecords afterImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row afterRow=new Row();\n  Field pkField1=new Field();\n  pkField1.setKeyType(KeyType.PrimaryKey);\n  pkField1.setName(\"id\");\n  pkField1.setType(Types.INTEGER);\n  pkField1.setValue(213);\n  afterRow.add(pkField1);\n  Field name1=new Field();\n  name1.setName(\"name\");\n  name1.setType(Types.VARCHAR);\n  name1.setValue(\"GTS\");\n  afterRow.add(name1);\n  Field since1=new Field();\n  since1.setName(\"since\");\n  since1.setType(Types.VARCHAR);\n  since1.setValue(\"2016\");\n  afterRow.add(since1);\n  afterImage.add(afterRow);\n  SQLUndoLog.setBeforeImage(beforeImage);\n  SQLUndoLog.setAfterImage(afterImage);\n  AbstractUndoExecutor executor=UndoExecutorFactory.getUndoExecutor(JdbcConstants.MYSQL,SQLUndoLog);\n  MockConnection connection=new MockConnection();\n  AbstractUndoExecutor spy=Mockito.spy(executor);\n  Mockito.doReturn(true).when(spy).dataValidationAndGoOn(connection);\n  spy.executeOn(connection);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 331,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 103,
        "startColumnNumber" : 8,
        "endLineNumber" : 103,
        "endColumnNumber" : 30
      },
      "nodeContext" : "pkField.setName(\"id\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"id\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 122,
      "startColumnNumber" : 80,
      "endLineNumber" : 122,
      "endColumnNumber" : 84
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 122,
        "startColumnNumber" : 51,
        "endLineNumber" : 122,
        "endColumnNumber" : 85
      },
      "nodeContext" : "new MockTableMeta(\"product\",\"id\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 122,
        "startColumnNumber" : 34,
        "endLineNumber" : 122,
        "endColumnNumber" : 86
      },
      "nodeContext" : "new TableRecords(new MockTableMeta(\"product\",\"id\"))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 122,
        "startColumnNumber" : 21,
        "endLineNumber" : 122,
        "endColumnNumber" : 86
      },
      "nodeContext" : "afterImage=new TableRecords(new MockTableMeta(\"product\",\"id\"))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 87
      },
      "nodeContext" : "TableRecords afterImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2054,
        "startLineNumber" : 92,
        "startColumnNumber" : 49,
        "endLineNumber" : 156,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SQLUndoLog SQLUndoLog=new SQLUndoLog();\n  SQLUndoLog.setTableName(\"my_test_table\");\n  SQLUndoLog.setSqlType(SQLType.UPDATE);\n  TableRecords beforeImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row beforeRow=new Row();\n  Field pkField=new Field();\n  pkField.setKeyType(KeyType.PrimaryKey);\n  pkField.setName(\"id\");\n  pkField.setType(Types.INTEGER);\n  pkField.setValue(213);\n  beforeRow.add(pkField);\n  Field name=new Field();\n  name.setName(\"name\");\n  name.setType(Types.VARCHAR);\n  name.setValue(\"SEATA\");\n  beforeRow.add(name);\n  Field since=new Field();\n  since.setName(\"since\");\n  since.setType(Types.VARCHAR);\n  since.setValue(\"2014\");\n  beforeRow.add(since);\n  beforeImage.add(beforeRow);\n  TableRecords afterImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row afterRow=new Row();\n  Field pkField1=new Field();\n  pkField1.setKeyType(KeyType.PrimaryKey);\n  pkField1.setName(\"id\");\n  pkField1.setType(Types.INTEGER);\n  pkField1.setValue(213);\n  afterRow.add(pkField1);\n  Field name1=new Field();\n  name1.setName(\"name\");\n  name1.setType(Types.VARCHAR);\n  name1.setValue(\"GTS\");\n  afterRow.add(name1);\n  Field since1=new Field();\n  since1.setName(\"since\");\n  since1.setType(Types.VARCHAR);\n  since1.setValue(\"2016\");\n  afterRow.add(since1);\n  afterImage.add(afterRow);\n  SQLUndoLog.setBeforeImage(beforeImage);\n  SQLUndoLog.setAfterImage(afterImage);\n  AbstractUndoExecutor executor=UndoExecutorFactory.getUndoExecutor(JdbcConstants.MYSQL,SQLUndoLog);\n  MockConnection connection=new MockConnection();\n  AbstractUndoExecutor spy=Mockito.spy(executor);\n  Mockito.doReturn(true).when(spy).dataValidationAndGoOn(connection);\n  spy.executeOn(connection);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 322,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2145,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 156,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Test update.\n */\n@Test public void testUpdate() throws SQLException {\n  SQLUndoLog SQLUndoLog=new SQLUndoLog();\n  SQLUndoLog.setTableName(\"my_test_table\");\n  SQLUndoLog.setSqlType(SQLType.UPDATE);\n  TableRecords beforeImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row beforeRow=new Row();\n  Field pkField=new Field();\n  pkField.setKeyType(KeyType.PrimaryKey);\n  pkField.setName(\"id\");\n  pkField.setType(Types.INTEGER);\n  pkField.setValue(213);\n  beforeRow.add(pkField);\n  Field name=new Field();\n  name.setName(\"name\");\n  name.setType(Types.VARCHAR);\n  name.setValue(\"SEATA\");\n  beforeRow.add(name);\n  Field since=new Field();\n  since.setName(\"since\");\n  since.setType(Types.VARCHAR);\n  since.setValue(\"2014\");\n  beforeRow.add(since);\n  beforeImage.add(beforeRow);\n  TableRecords afterImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row afterRow=new Row();\n  Field pkField1=new Field();\n  pkField1.setKeyType(KeyType.PrimaryKey);\n  pkField1.setName(\"id\");\n  pkField1.setType(Types.INTEGER);\n  pkField1.setValue(213);\n  afterRow.add(pkField1);\n  Field name1=new Field();\n  name1.setName(\"name\");\n  name1.setType(Types.VARCHAR);\n  name1.setValue(\"GTS\");\n  afterRow.add(name1);\n  Field since1=new Field();\n  since1.setName(\"since\");\n  since1.setType(Types.VARCHAR);\n  since1.setValue(\"2016\");\n  afterRow.add(since1);\n  afterImage.add(afterRow);\n  SQLUndoLog.setBeforeImage(beforeImage);\n  SQLUndoLog.setAfterImage(afterImage);\n  AbstractUndoExecutor executor=UndoExecutorFactory.getUndoExecutor(JdbcConstants.MYSQL,SQLUndoLog);\n  MockConnection connection=new MockConnection();\n  AbstractUndoExecutor spy=Mockito.spy(executor);\n  Mockito.doReturn(true).when(spy).dataValidationAndGoOn(connection);\n  spy.executeOn(connection);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 331,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 87
      },
      "nodeContext" : "TableRecords afterImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"id\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 128,
      "startColumnNumber" : 25,
      "endLineNumber" : 128,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 30
      },
      "nodeContext" : "pkField1.setName(\"id\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 31
      },
      "nodeContext" : "pkField1.setName(\"id\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2054,
        "startLineNumber" : 92,
        "startColumnNumber" : 49,
        "endLineNumber" : 156,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SQLUndoLog SQLUndoLog=new SQLUndoLog();\n  SQLUndoLog.setTableName(\"my_test_table\");\n  SQLUndoLog.setSqlType(SQLType.UPDATE);\n  TableRecords beforeImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row beforeRow=new Row();\n  Field pkField=new Field();\n  pkField.setKeyType(KeyType.PrimaryKey);\n  pkField.setName(\"id\");\n  pkField.setType(Types.INTEGER);\n  pkField.setValue(213);\n  beforeRow.add(pkField);\n  Field name=new Field();\n  name.setName(\"name\");\n  name.setType(Types.VARCHAR);\n  name.setValue(\"SEATA\");\n  beforeRow.add(name);\n  Field since=new Field();\n  since.setName(\"since\");\n  since.setType(Types.VARCHAR);\n  since.setValue(\"2014\");\n  beforeRow.add(since);\n  beforeImage.add(beforeRow);\n  TableRecords afterImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row afterRow=new Row();\n  Field pkField1=new Field();\n  pkField1.setKeyType(KeyType.PrimaryKey);\n  pkField1.setName(\"id\");\n  pkField1.setType(Types.INTEGER);\n  pkField1.setValue(213);\n  afterRow.add(pkField1);\n  Field name1=new Field();\n  name1.setName(\"name\");\n  name1.setType(Types.VARCHAR);\n  name1.setValue(\"GTS\");\n  afterRow.add(name1);\n  Field since1=new Field();\n  since1.setName(\"since\");\n  since1.setType(Types.VARCHAR);\n  since1.setValue(\"2016\");\n  afterRow.add(since1);\n  afterImage.add(afterRow);\n  SQLUndoLog.setBeforeImage(beforeImage);\n  SQLUndoLog.setAfterImage(afterImage);\n  AbstractUndoExecutor executor=UndoExecutorFactory.getUndoExecutor(JdbcConstants.MYSQL,SQLUndoLog);\n  MockConnection connection=new MockConnection();\n  AbstractUndoExecutor spy=Mockito.spy(executor);\n  Mockito.doReturn(true).when(spy).dataValidationAndGoOn(connection);\n  spy.executeOn(connection);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 322,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2145,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 156,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Test update.\n */\n@Test public void testUpdate() throws SQLException {\n  SQLUndoLog SQLUndoLog=new SQLUndoLog();\n  SQLUndoLog.setTableName(\"my_test_table\");\n  SQLUndoLog.setSqlType(SQLType.UPDATE);\n  TableRecords beforeImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row beforeRow=new Row();\n  Field pkField=new Field();\n  pkField.setKeyType(KeyType.PrimaryKey);\n  pkField.setName(\"id\");\n  pkField.setType(Types.INTEGER);\n  pkField.setValue(213);\n  beforeRow.add(pkField);\n  Field name=new Field();\n  name.setName(\"name\");\n  name.setType(Types.VARCHAR);\n  name.setValue(\"SEATA\");\n  beforeRow.add(name);\n  Field since=new Field();\n  since.setName(\"since\");\n  since.setType(Types.VARCHAR);\n  since.setValue(\"2014\");\n  beforeRow.add(since);\n  beforeImage.add(beforeRow);\n  TableRecords afterImage=new TableRecords(new MockTableMeta(\"product\",\"id\"));\n  Row afterRow=new Row();\n  Field pkField1=new Field();\n  pkField1.setKeyType(KeyType.PrimaryKey);\n  pkField1.setName(\"id\");\n  pkField1.setType(Types.INTEGER);\n  pkField1.setValue(213);\n  afterRow.add(pkField1);\n  Field name1=new Field();\n  name1.setName(\"name\");\n  name1.setType(Types.VARCHAR);\n  name1.setValue(\"GTS\");\n  afterRow.add(name1);\n  Field since1=new Field();\n  since1.setName(\"since\");\n  since1.setType(Types.VARCHAR);\n  since1.setValue(\"2016\");\n  afterRow.add(since1);\n  afterImage.add(afterRow);\n  SQLUndoLog.setBeforeImage(beforeImage);\n  SQLUndoLog.setAfterImage(afterImage);\n  AbstractUndoExecutor executor=UndoExecutorFactory.getUndoExecutor(JdbcConstants.MYSQL,SQLUndoLog);\n  MockConnection connection=new MockConnection();\n  AbstractUndoExecutor spy=Mockito.spy(executor);\n  Mockito.doReturn(true).when(spy).dataValidationAndGoOn(connection);\n  spy.executeOn(connection);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 331,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 31
      },
      "nodeContext" : "pkField1.setName(\"id\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 97,
    "startColumnNumber" : 81,
    "endLineNumber" : 97,
    "endColumnNumber" : 85
  }, {
    "charLength" : 4,
    "startLineNumber" : 103,
    "startColumnNumber" : 24,
    "endLineNumber" : 103,
    "endColumnNumber" : 28
  }, {
    "charLength" : 4,
    "startLineNumber" : 122,
    "startColumnNumber" : 80,
    "endLineNumber" : 122,
    "endColumnNumber" : 84
  }, {
    "charLength" : 4,
    "startLineNumber" : 128,
    "startColumnNumber" : 25,
    "endLineNumber" : 128,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}