{
  "id" : 507,
  "expression" : "50f",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/entities/comp/MinerComp.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "50f",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 76,
      "startColumnNumber" : 28,
      "endLineNumber" : 76,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 76,
        "startColumnNumber" : 28,
        "endLineNumber" : 76,
        "endColumnNumber" : 51
      },
      "nodeContext" : "50f + item.hardness * 15f",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 76,
        "startColumnNumber" : 15,
        "endLineNumber" : 76,
        "endColumnNumber" : 51
      },
      "nodeContext" : "mineTimer >= 50f + item.hardness * 15f",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1148,
        "startLineNumber" : 76,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (mineTimer >= 50f + item.hardness * 15f) {\n  mineTimer=0;\n  if (state.rules.sector != null && team() == state.rules.defaultTeam)   state.rules.sector.info.handleProduction(item,1);\n  if (core != null && within(core,mineTransferRange) && core.acceptStack(item,1,this) == 1 && offloadImmediately()) {\n    if (item() == item && !net.client())     addItem(item);\n    Call.transferItemTo(self(),item,1,mineTile.worldx() + Mathf.range(tilesize / 2f),mineTile.worldy() + Mathf.range(tilesize / 2f),core);\n  }\n else   if (acceptsItem(item)) {\n    InputHandler.transferItemToUnit(item,mineTile.worldx() + Mathf.range(tilesize / 2f),mineTile.worldy() + Mathf.range(tilesize / 2f),this);\n  }\n else {\n    mineTile=null;\n    mineTimer=0f;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1603,
        "startLineNumber" : 68,
        "startColumnNumber" : 26,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Item item=mineTile.drop();\n  mineTimer+=Time.delta * type.mineSpeed;\n  if (Mathf.chance(0.06 * Time.delta)) {\n    Fx.pulverizeSmall.at(mineTile.worldx() + Mathf.range(tilesize / 2f),mineTile.worldy() + Mathf.range(tilesize / 2f),0f,item.color);\n  }\n  if (mineTimer >= 50f + item.hardness * 15f) {\n    mineTimer=0;\n    if (state.rules.sector != null && team() == state.rules.defaultTeam)     state.rules.sector.info.handleProduction(item,1);\n    if (core != null && within(core,mineTransferRange) && core.acceptStack(item,1,this) == 1 && offloadImmediately()) {\n      if (item() == item && !net.client())       addItem(item);\n      Call.transferItemTo(self(),item,1,mineTile.worldx() + Mathf.range(tilesize / 2f),mineTile.worldy() + Mathf.range(tilesize / 2f),core);\n    }\n else     if (acceptsItem(item)) {\n      InputHandler.transferItemToUnit(item,mineTile.worldx() + Mathf.range(tilesize / 2f),mineTile.worldy() + Mathf.range(tilesize / 2f),this);\n    }\n else {\n      mineTile=null;\n      mineTimer=0f;\n    }\n  }\n  if (!headless) {\n    control.sound.loop(type.mineSound,this,type.mineSoundVolume);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 225,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1615,
        "startLineNumber" : 68,
        "startColumnNumber" : 14,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mining()) {\n  Item item=mineTile.drop();\n  mineTimer+=Time.delta * type.mineSpeed;\n  if (Mathf.chance(0.06 * Time.delta)) {\n    Fx.pulverizeSmall.at(mineTile.worldx() + Mathf.range(tilesize / 2f),mineTile.worldy() + Mathf.range(tilesize / 2f),0f,item.color);\n  }\n  if (mineTimer >= 50f + item.hardness * 15f) {\n    mineTimer=0;\n    if (state.rules.sector != null && team() == state.rules.defaultTeam)     state.rules.sector.info.handleProduction(item,1);\n    if (core != null && within(core,mineTransferRange) && core.acceptStack(item,1,this) == 1 && offloadImmediately()) {\n      if (item() == item && !net.client())       addItem(item);\n      Call.transferItemTo(self(),item,1,mineTile.worldx() + Mathf.range(tilesize / 2f),mineTile.worldy() + Mathf.range(tilesize / 2f),core);\n    }\n else     if (acceptsItem(item)) {\n      InputHandler.transferItemToUnit(item,mineTile.worldx() + Mathf.range(tilesize / 2f),mineTile.worldy() + Mathf.range(tilesize / 2f),this);\n    }\n else {\n      mineTile=null;\n      mineTimer=0f;\n    }\n  }\n  if (!headless) {\n    control.sound.loop(type.mineSound,this,type.mineSoundVolume);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 228,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1712,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!validMine(mineTile)) {\n  mineTile=null;\n  mineTimer=0f;\n}\n else if (mining()) {\n  Item item=mineTile.drop();\n  mineTimer+=Time.delta * type.mineSpeed;\n  if (Mathf.chance(0.06 * Time.delta)) {\n    Fx.pulverizeSmall.at(mineTile.worldx() + Mathf.range(tilesize / 2f),mineTile.worldy() + Mathf.range(tilesize / 2f),0f,item.color);\n  }\n  if (mineTimer >= 50f + item.hardness * 15f) {\n    mineTimer=0;\n    if (state.rules.sector != null && team() == state.rules.defaultTeam)     state.rules.sector.info.handleProduction(item,1);\n    if (core != null && within(core,mineTransferRange) && core.acceptStack(item,1,this) == 1 && offloadImmediately()) {\n      if (item() == item && !net.client())       addItem(item);\n      Call.transferItemTo(self(),item,1,mineTile.worldx() + Mathf.range(tilesize / 2f),mineTile.worldy() + Mathf.range(tilesize / 2f),core);\n    }\n else     if (acceptsItem(item)) {\n      InputHandler.transferItemToUnit(item,mineTile.worldx() + Mathf.range(tilesize / 2f),mineTile.worldy() + Mathf.range(tilesize / 2f),this);\n    }\n else {\n      mineTile=null;\n      mineTimer=0f;\n    }\n  }\n  if (!headless) {\n    control.sound.loop(type.mineSound,this,type.mineSoundVolume);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 242,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2290,
        "startLineNumber" : 52,
        "startColumnNumber" : 24,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Building core=closestCore();\n  if (core != null && mineTile != null && mineTile.drop() != null && !acceptsItem(mineTile.drop()) && within(core,mineTransferRange) && !offloadImmediately()) {\n    int accepted=core.acceptStack(item(),stack().amount,this);\n    if (accepted > 0) {\n      Call.transferItemTo(self(),item(),accepted,mineTile.worldx() + Mathf.range(tilesize / 2f),mineTile.worldy() + Mathf.range(tilesize / 2f),core);\n      clearItem();\n    }\n  }\n  if (!validMine(mineTile)) {\n    mineTile=null;\n    mineTimer=0f;\n  }\n else   if (mining()) {\n    Item item=mineTile.drop();\n    mineTimer+=Time.delta * type.mineSpeed;\n    if (Mathf.chance(0.06 * Time.delta)) {\n      Fx.pulverizeSmall.at(mineTile.worldx() + Mathf.range(tilesize / 2f),mineTile.worldy() + Mathf.range(tilesize / 2f),0f,item.color);\n    }\n    if (mineTimer >= 50f + item.hardness * 15f) {\n      mineTimer=0;\n      if (state.rules.sector != null && team() == state.rules.defaultTeam)       state.rules.sector.info.handleProduction(item,1);\n      if (core != null && within(core,mineTransferRange) && core.acceptStack(item,1,this) == 1 && offloadImmediately()) {\n        if (item() == item && !net.client())         addItem(item);\n        Call.transferItemTo(self(),item,1,mineTile.worldx() + Mathf.range(tilesize / 2f),mineTile.worldy() + Mathf.range(tilesize / 2f),core);\n      }\n else       if (acceptsItem(item)) {\n        InputHandler.transferItemToUnit(item,mineTile.worldx() + Mathf.range(tilesize / 2f),mineTile.worldy() + Mathf.range(tilesize / 2f),this);\n      }\n else {\n        mineTile=null;\n        mineTimer=0f;\n      }\n    }\n    if (!headless) {\n      control.sound.loop(type.mineSound,this,type.mineSoundVolume);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 333,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2324,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void update(){\n  Building core=closestCore();\n  if (core != null && mineTile != null && mineTile.drop() != null && !acceptsItem(mineTile.drop()) && within(core,mineTransferRange) && !offloadImmediately()) {\n    int accepted=core.acceptStack(item(),stack().amount,this);\n    if (accepted > 0) {\n      Call.transferItemTo(self(),item(),accepted,mineTile.worldx() + Mathf.range(tilesize / 2f),mineTile.worldy() + Mathf.range(tilesize / 2f),core);\n      clearItem();\n    }\n  }\n  if (!validMine(mineTile)) {\n    mineTile=null;\n    mineTimer=0f;\n  }\n else   if (mining()) {\n    Item item=mineTile.drop();\n    mineTimer+=Time.delta * type.mineSpeed;\n    if (Mathf.chance(0.06 * Time.delta)) {\n      Fx.pulverizeSmall.at(mineTile.worldx() + Mathf.range(tilesize / 2f),mineTile.worldy() + Mathf.range(tilesize / 2f),0f,item.color);\n    }\n    if (mineTimer >= 50f + item.hardness * 15f) {\n      mineTimer=0;\n      if (state.rules.sector != null && team() == state.rules.defaultTeam)       state.rules.sector.info.handleProduction(item,1);\n      if (core != null && within(core,mineTransferRange) && core.acceptStack(item,1,this) == 1 && offloadImmediately()) {\n        if (item() == item && !net.client())         addItem(item);\n        Call.transferItemTo(self(),item,1,mineTile.worldx() + Mathf.range(tilesize / 2f),mineTile.worldy() + Mathf.range(tilesize / 2f),core);\n      }\n else       if (acceptsItem(item)) {\n        InputHandler.transferItemToUnit(item,mineTile.worldx() + Mathf.range(tilesize / 2f),mineTile.worldy() + Mathf.range(tilesize / 2f),this);\n      }\n else {\n        mineTile=null;\n        mineTimer=0f;\n      }\n    }\n    if (!headless) {\n      control.sound.loop(type.mineSound,this,type.mineSoundVolume);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 339,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 76,
        "startColumnNumber" : 15,
        "endLineNumber" : 76,
        "endColumnNumber" : 51
      },
      "nodeContext" : "mineTimer >= 50f + item.hardness * 15f",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 76,
    "startColumnNumber" : 28,
    "endLineNumber" : 76,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}