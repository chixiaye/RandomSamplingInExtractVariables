{
  "id" : 110,
  "expression" : "key.checkMac(\"garbage\",mac)",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/test/java/jenkins/security/HMACConfidentialKeyTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "key.checkMac(\"garbage\",mac)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 26,
      "startColumnNumber" : 24,
      "endLineNumber" : 26,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 26,
        "startColumnNumber" : 12,
        "endLineNumber" : 26,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertFalse(key.checkMac(\"garbage\",mac))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 26,
        "startColumnNumber" : 12,
        "endLineNumber" : 26,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertFalse(key.checkMac(\"garbage\",mac));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 21,
        "startColumnNumber" : 70,
        "endLineNumber" : 27,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String mac=key.mac(str);\n  unique.add(mac);\n  assertTrue(mac,mac.matches(\"[0-9A-Fa-f]{32}\"));\n  assertTrue(key.checkMac(str,mac));\n  assertFalse(key.checkMac(\"garbage\",mac));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 311,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String str : new String[]{\"Hello world\",\"\",\"\\u0000\"}) {\n  String mac=key.mac(str);\n  unique.add(mac);\n  assertTrue(mac,mac.matches(\"[0-9A-Fa-f]{32}\"));\n  assertTrue(key.checkMac(str,mac));\n  assertFalse(key.checkMac(\"garbage\",mac));\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 53,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 444,
        "startLineNumber" : 19,
        "startColumnNumber" : 25,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Set<String> unique=new TreeSet<>();\n  for (  String str : new String[]{\"Hello world\",\"\",\"\\u0000\"}) {\n    String mac=key.mac(str);\n    unique.add(mac);\n    assertTrue(mac,mac.matches(\"[0-9A-Fa-f]{32}\"));\n    assertTrue(key.checkMac(str,mac));\n    assertFalse(key.checkMac(\"garbage\",mac));\n  }\n  assertEquals(\"all 3 MAC are different\",3,unique.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 476,
        "startLineNumber" : 18,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void basics(){\n  Set<String> unique=new TreeSet<>();\n  for (  String str : new String[]{\"Hello world\",\"\",\"\\u0000\"}) {\n    String mac=key.mac(str);\n    unique.add(mac);\n    assertTrue(mac,mac.matches(\"[0-9A-Fa-f]{32}\"));\n    assertTrue(key.checkMac(str,mac));\n    assertFalse(key.checkMac(\"garbage\",mac));\n  }\n  assertEquals(\"all 3 MAC are different\",3,unique.size());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 80,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 26,
        "startColumnNumber" : 12,
        "endLineNumber" : 26,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertFalse(key.checkMac(\"garbage\",mac));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 28,
    "startLineNumber" : 26,
    "startColumnNumber" : 24,
    "endLineNumber" : 26,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}