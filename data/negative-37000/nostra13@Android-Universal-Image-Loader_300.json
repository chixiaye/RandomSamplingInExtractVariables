{
  "id" : 300,
  "expression" : "targetFile != null && targetFile.exists()",
  "projectName" : "nostra13@Android-Universal-Image-Loader",
  "commitID" : "7637abf7df1394f71dbc04644be86791959d1313",
  "filePath" : "/library/src/com/nostra13/universalimageloader/core/LoadAndDisplayImageTask.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "targetFile != null && targetFile.exists()",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 41,
      "startLineNumber" : 300,
      "startColumnNumber" : 6,
      "endLineNumber" : 300,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 900,
        "startLineNumber" : 300,
        "startColumnNumber" : 2,
        "endLineNumber" : 319,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (targetFile != null && targetFile.exists()) {\n  ImageSize targetImageSize=new ImageSize(maxWidth,maxHeight);\n  DisplayImageOptions specialOptions=new DisplayImageOptions.Builder().cloneFrom(options).imageScaleType(ImageScaleType.IN_SAMPLE_INT).build();\n  ImageDecodingInfo decodingInfo=new ImageDecodingInfo(memoryCacheKey,Scheme.FILE.wrap(targetFile.getAbsolutePath()),targetImageSize,ViewScaleType.FIT_INSIDE,getDownloader(),specialOptions);\n  Bitmap bmp=decoder.decode(decodingInfo);\n  if (bmp != null && configuration.processorForDiscCache != null) {\n    log(LOG_PROCESS_IMAGE_BEFORE_CACHE_ON_DISC);\n    bmp=configuration.processorForDiscCache.process(bmp);\n    if (bmp == null) {\n      L.e(ERROR_PROCESSOR_FOR_DISC_CACHE_NULL,memoryCacheKey);\n    }\n  }\n  if (bmp != null) {\n    saved=configuration.discCache.save(uri,bmp);\n    bmp.recycle();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 126,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1050,
        "startLineNumber" : 296,
        "startColumnNumber" : 84,
        "endLineNumber" : 321,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  boolean saved=false;\n  File targetFile=configuration.discCache.get(uri);\n  if (targetFile != null && targetFile.exists()) {\n    ImageSize targetImageSize=new ImageSize(maxWidth,maxHeight);\n    DisplayImageOptions specialOptions=new DisplayImageOptions.Builder().cloneFrom(options).imageScaleType(ImageScaleType.IN_SAMPLE_INT).build();\n    ImageDecodingInfo decodingInfo=new ImageDecodingInfo(memoryCacheKey,Scheme.FILE.wrap(targetFile.getAbsolutePath()),targetImageSize,ViewScaleType.FIT_INSIDE,getDownloader(),specialOptions);\n    Bitmap bmp=decoder.decode(decodingInfo);\n    if (bmp != null && configuration.processorForDiscCache != null) {\n      log(LOG_PROCESS_IMAGE_BEFORE_CACHE_ON_DISC);\n      bmp=configuration.processorForDiscCache.process(bmp);\n      if (bmp == null) {\n        L.e(ERROR_PROCESSOR_FOR_DISC_CACHE_NULL,memoryCacheKey);\n      }\n    }\n    if (bmp != null) {\n      saved=configuration.discCache.save(uri,bmp);\n      bmp.recycle();\n    }\n  }\n  return saved;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 145,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1200,
        "startLineNumber" : 295,
        "startColumnNumber" : 1,
        "endLineNumber" : 321,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Decodes image file into Bitmap, resize it and save it back \n */\nprivate boolean resizeAndSaveImage(int maxWidth,int maxHeight) throws IOException {\n  boolean saved=false;\n  File targetFile=configuration.discCache.get(uri);\n  if (targetFile != null && targetFile.exists()) {\n    ImageSize targetImageSize=new ImageSize(maxWidth,maxHeight);\n    DisplayImageOptions specialOptions=new DisplayImageOptions.Builder().cloneFrom(options).imageScaleType(ImageScaleType.IN_SAMPLE_INT).build();\n    ImageDecodingInfo decodingInfo=new ImageDecodingInfo(memoryCacheKey,Scheme.FILE.wrap(targetFile.getAbsolutePath()),targetImageSize,ViewScaleType.FIT_INSIDE,getDownloader(),specialOptions);\n    Bitmap bmp=decoder.decode(decodingInfo);\n    if (bmp != null && configuration.processorForDiscCache != null) {\n      log(LOG_PROCESS_IMAGE_BEFORE_CACHE_ON_DISC);\n      bmp=configuration.processorForDiscCache.process(bmp);\n      if (bmp == null) {\n        L.e(ERROR_PROCESSOR_FOR_DISC_CACHE_NULL,memoryCacheKey);\n      }\n    }\n    if (bmp != null) {\n      saved=configuration.discCache.save(uri,bmp);\n      bmp.recycle();\n    }\n  }\n  return saved;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 158,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 900,
        "startLineNumber" : 300,
        "startColumnNumber" : 2,
        "endLineNumber" : 319,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (targetFile != null && targetFile.exists()) {\n  ImageSize targetImageSize=new ImageSize(maxWidth,maxHeight);\n  DisplayImageOptions specialOptions=new DisplayImageOptions.Builder().cloneFrom(options).imageScaleType(ImageScaleType.IN_SAMPLE_INT).build();\n  ImageDecodingInfo decodingInfo=new ImageDecodingInfo(memoryCacheKey,Scheme.FILE.wrap(targetFile.getAbsolutePath()),targetImageSize,ViewScaleType.FIT_INSIDE,getDownloader(),specialOptions);\n  Bitmap bmp=decoder.decode(decodingInfo);\n  if (bmp != null && configuration.processorForDiscCache != null) {\n    log(LOG_PROCESS_IMAGE_BEFORE_CACHE_ON_DISC);\n    bmp=configuration.processorForDiscCache.process(bmp);\n    if (bmp == null) {\n      L.e(ERROR_PROCESSOR_FOR_DISC_CACHE_NULL,memoryCacheKey);\n    }\n  }\n  if (bmp != null) {\n    saved=configuration.discCache.save(uri,bmp);\n    bmp.recycle();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 126,
      "astHeight" : 11
    },
    "tokenLength" : 6,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 41,
    "startLineNumber" : 300,
    "startColumnNumber" : 6,
    "endLineNumber" : 300,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ ]
}