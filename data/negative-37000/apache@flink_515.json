{
  "id" : 515,
  "expression" : "null",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-runtime/src/main/java/org/apache/flink/runtime/rest/handler/job/SubtaskExecutionAttemptDetailsHandler.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 117,
      "startColumnNumber" : 32,
      "endLineNumber" : 117,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 255,
        "startLineNumber" : 115,
        "startColumnNumber" : 24,
        "endLineNumber" : 119,
        "endColumnNumber" : 54
      },
      "nodeContext" : "SubtaskExecutionAttemptDetailsInfo.create(subtask.getCurrentExecutionAttempt(),null,graph.getJobID(),task.getJobVertexId())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 296,
        "startLineNumber" : 114,
        "startColumnNumber" : 29,
        "endLineNumber" : 119,
        "endColumnNumber" : 54
      },
      "nodeContext" : "curAttemptJson=SubtaskExecutionAttemptDetailsInfo.create(subtask.getCurrentExecutionAttempt(),null,graph.getJobID(),task.getJobVertexId())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 310,
        "startLineNumber" : 114,
        "startColumnNumber" : 16,
        "endLineNumber" : 119,
        "endColumnNumber" : 55
      },
      "nodeContext" : "ResponseBody curAttemptJson=SubtaskExecutionAttemptDetailsInfo.create(subtask.getCurrentExecutionAttempt(),null,graph.getJobID(),task.getJobVertexId());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 3002,
        "startLineNumber" : 113,
        "startColumnNumber" : 73,
        "endLineNumber" : 162,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  ResponseBody curAttemptJson=SubtaskExecutionAttemptDetailsInfo.create(subtask.getCurrentExecutionAttempt(),null,graph.getJobID(),task.getJobVertexId());\n  String curAttemptPath=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(subtask.getCurrentExecutionAttempt().getAttemptNumber()));\n  archive.add(new ArchivedJson(curAttemptPath,curAttemptJson));\n  for (int x=0; x < subtask.getCurrentExecutionAttempt().getAttemptNumber(); x++) {\n    AccessExecution attempt=subtask.getPriorExecutionAttempt(x);\n    if (attempt != null) {\n      ResponseBody json=SubtaskExecutionAttemptDetailsInfo.create(attempt,null,graph.getJobID(),task.getJobVertexId());\n      String path=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(attempt.getAttemptNumber()));\n      archive.add(new ArchivedJson(path,json));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 203,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3063,
        "startLineNumber" : 113,
        "startColumnNumber" : 12,
        "endLineNumber" : 162,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (AccessExecutionVertex subtask : task.getTaskVertices()) {\n  ResponseBody curAttemptJson=SubtaskExecutionAttemptDetailsInfo.create(subtask.getCurrentExecutionAttempt(),null,graph.getJobID(),task.getJobVertexId());\n  String curAttemptPath=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(subtask.getCurrentExecutionAttempt().getAttemptNumber()));\n  archive.add(new ArchivedJson(curAttemptPath,curAttemptJson));\n  for (int x=0; x < subtask.getCurrentExecutionAttempt().getAttemptNumber(); x++) {\n    AccessExecution attempt=subtask.getPriorExecutionAttempt(x);\n    if (attempt != null) {\n      ResponseBody json=SubtaskExecutionAttemptDetailsInfo.create(attempt,null,graph.getJobID(),task.getJobVertexId());\n      String path=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(attempt.getAttemptNumber()));\n      archive.add(new ArchivedJson(path,json));\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 211,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 3087,
        "startLineNumber" : 112,
        "startColumnNumber" : 78,
        "endLineNumber" : 163,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  AccessExecutionVertex subtask : task.getTaskVertices()) {\n    ResponseBody curAttemptJson=SubtaskExecutionAttemptDetailsInfo.create(subtask.getCurrentExecutionAttempt(),null,graph.getJobID(),task.getJobVertexId());\n    String curAttemptPath=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(subtask.getCurrentExecutionAttempt().getAttemptNumber()));\n    archive.add(new ArchivedJson(curAttemptPath,curAttemptJson));\n    for (int x=0; x < subtask.getCurrentExecutionAttempt().getAttemptNumber(); x++) {\n      AccessExecution attempt=subtask.getPriorExecutionAttempt(x);\n      if (attempt != null) {\n        ResponseBody json=SubtaskExecutionAttemptDetailsInfo.create(attempt,null,graph.getJobID(),task.getJobVertexId());\n        String path=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(attempt.getAttemptNumber()));\n        archive.add(new ArchivedJson(path,json));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 212,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3157,
        "startLineNumber" : 112,
        "startColumnNumber" : 8,
        "endLineNumber" : 163,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (AccessExecutionJobVertex task : graph.getAllVertices().values()) {\n  for (  AccessExecutionVertex subtask : task.getTaskVertices()) {\n    ResponseBody curAttemptJson=SubtaskExecutionAttemptDetailsInfo.create(subtask.getCurrentExecutionAttempt(),null,graph.getJobID(),task.getJobVertexId());\n    String curAttemptPath=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(subtask.getCurrentExecutionAttempt().getAttemptNumber()));\n    archive.add(new ArchivedJson(curAttemptPath,curAttemptJson));\n    for (int x=0; x < subtask.getCurrentExecutionAttempt().getAttemptNumber(); x++) {\n      AccessExecution attempt=subtask.getPriorExecutionAttempt(x);\n      if (attempt != null) {\n        ResponseBody json=SubtaskExecutionAttemptDetailsInfo.create(attempt,null,graph.getJobID(),task.getJobVertexId());\n        String path=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(attempt.getAttemptNumber()));\n        archive.add(new ArchivedJson(path,json));\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 222,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3255,
        "startLineNumber" : 110,
        "startColumnNumber" : 31,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<ArchivedJson> archive=new ArrayList<>(16);\n  for (  AccessExecutionJobVertex task : graph.getAllVertices().values()) {\n    for (    AccessExecutionVertex subtask : task.getTaskVertices()) {\n      ResponseBody curAttemptJson=SubtaskExecutionAttemptDetailsInfo.create(subtask.getCurrentExecutionAttempt(),null,graph.getJobID(),task.getJobVertexId());\n      String curAttemptPath=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(subtask.getCurrentExecutionAttempt().getAttemptNumber()));\n      archive.add(new ArchivedJson(curAttemptPath,curAttemptJson));\n      for (int x=0; x < subtask.getCurrentExecutionAttempt().getAttemptNumber(); x++) {\n        AccessExecution attempt=subtask.getPriorExecutionAttempt(x);\n        if (attempt != null) {\n          ResponseBody json=SubtaskExecutionAttemptDetailsInfo.create(attempt,null,graph.getJobID(),task.getJobVertexId());\n          String path=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(attempt.getAttemptNumber()));\n          archive.add(new ArchivedJson(path,json));\n        }\n      }\n    }\n  }\n  return archive;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 238,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3380,
        "startLineNumber" : 108,
        "startColumnNumber" : 4,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Collection<ArchivedJson> archiveJsonWithPath(AccessExecutionGraph graph) throws IOException {\n  List<ArchivedJson> archive=new ArrayList<>(16);\n  for (  AccessExecutionJobVertex task : graph.getAllVertices().values()) {\n    for (    AccessExecutionVertex subtask : task.getTaskVertices()) {\n      ResponseBody curAttemptJson=SubtaskExecutionAttemptDetailsInfo.create(subtask.getCurrentExecutionAttempt(),null,graph.getJobID(),task.getJobVertexId());\n      String curAttemptPath=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(subtask.getCurrentExecutionAttempt().getAttemptNumber()));\n      archive.add(new ArchivedJson(curAttemptPath,curAttemptJson));\n      for (int x=0; x < subtask.getCurrentExecutionAttempt().getAttemptNumber(); x++) {\n        AccessExecution attempt=subtask.getPriorExecutionAttempt(x);\n        if (attempt != null) {\n          ResponseBody json=SubtaskExecutionAttemptDetailsInfo.create(attempt,null,graph.getJobID(),task.getJobVertexId());\n          String path=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(attempt.getAttemptNumber()));\n          archive.add(new ArchivedJson(path,json));\n        }\n      }\n    }\n  }\n  return archive;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 254,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 255,
        "startLineNumber" : 115,
        "startColumnNumber" : 24,
        "endLineNumber" : 119,
        "endColumnNumber" : 54
      },
      "nodeContext" : "SubtaskExecutionAttemptDetailsInfo.create(subtask.getCurrentExecutionAttempt(),null,graph.getJobID(),task.getJobVertexId())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 140,
      "startColumnNumber" : 35,
      "endLineNumber" : 140,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 140,
        "startColumnNumber" : 24,
        "endLineNumber" : 140,
        "endColumnNumber" : 39
      },
      "nodeContext" : "attempt != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1370,
        "startLineNumber" : 140,
        "startColumnNumber" : 20,
        "endLineNumber" : 160,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (attempt != null) {\n  ResponseBody json=SubtaskExecutionAttemptDetailsInfo.create(attempt,null,graph.getJobID(),task.getJobVertexId());\n  String path=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(attempt.getAttemptNumber()));\n  archive.add(new ArchivedJson(path,json));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 89,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1493,
        "startLineNumber" : 138,
        "startColumnNumber" : 98,
        "endLineNumber" : 161,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  AccessExecution attempt=subtask.getPriorExecutionAttempt(x);\n  if (attempt != null) {\n    ResponseBody json=SubtaskExecutionAttemptDetailsInfo.create(attempt,null,graph.getJobID(),task.getJobVertexId());\n    String path=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(attempt.getAttemptNumber()));\n    archive.add(new ArchivedJson(path,json));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1575,
        "startLineNumber" : 138,
        "startColumnNumber" : 16,
        "endLineNumber" : 161,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (int x=0; x < subtask.getCurrentExecutionAttempt().getAttemptNumber(); x++) {\n  AccessExecution attempt=subtask.getPriorExecutionAttempt(x);\n  if (attempt != null) {\n    ResponseBody json=SubtaskExecutionAttemptDetailsInfo.create(attempt,null,graph.getJobID(),task.getJobVertexId());\n    String path=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(attempt.getAttemptNumber()));\n    archive.add(new ArchivedJson(path,json));\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 114,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 3002,
        "startLineNumber" : 113,
        "startColumnNumber" : 73,
        "endLineNumber" : 162,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  ResponseBody curAttemptJson=SubtaskExecutionAttemptDetailsInfo.create(subtask.getCurrentExecutionAttempt(),null,graph.getJobID(),task.getJobVertexId());\n  String curAttemptPath=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(subtask.getCurrentExecutionAttempt().getAttemptNumber()));\n  archive.add(new ArchivedJson(curAttemptPath,curAttemptJson));\n  for (int x=0; x < subtask.getCurrentExecutionAttempt().getAttemptNumber(); x++) {\n    AccessExecution attempt=subtask.getPriorExecutionAttempt(x);\n    if (attempt != null) {\n      ResponseBody json=SubtaskExecutionAttemptDetailsInfo.create(attempt,null,graph.getJobID(),task.getJobVertexId());\n      String path=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(attempt.getAttemptNumber()));\n      archive.add(new ArchivedJson(path,json));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 203,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3063,
        "startLineNumber" : 113,
        "startColumnNumber" : 12,
        "endLineNumber" : 162,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (AccessExecutionVertex subtask : task.getTaskVertices()) {\n  ResponseBody curAttemptJson=SubtaskExecutionAttemptDetailsInfo.create(subtask.getCurrentExecutionAttempt(),null,graph.getJobID(),task.getJobVertexId());\n  String curAttemptPath=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(subtask.getCurrentExecutionAttempt().getAttemptNumber()));\n  archive.add(new ArchivedJson(curAttemptPath,curAttemptJson));\n  for (int x=0; x < subtask.getCurrentExecutionAttempt().getAttemptNumber(); x++) {\n    AccessExecution attempt=subtask.getPriorExecutionAttempt(x);\n    if (attempt != null) {\n      ResponseBody json=SubtaskExecutionAttemptDetailsInfo.create(attempt,null,graph.getJobID(),task.getJobVertexId());\n      String path=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(attempt.getAttemptNumber()));\n      archive.add(new ArchivedJson(path,json));\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 211,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 3087,
        "startLineNumber" : 112,
        "startColumnNumber" : 78,
        "endLineNumber" : 163,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  AccessExecutionVertex subtask : task.getTaskVertices()) {\n    ResponseBody curAttemptJson=SubtaskExecutionAttemptDetailsInfo.create(subtask.getCurrentExecutionAttempt(),null,graph.getJobID(),task.getJobVertexId());\n    String curAttemptPath=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(subtask.getCurrentExecutionAttempt().getAttemptNumber()));\n    archive.add(new ArchivedJson(curAttemptPath,curAttemptJson));\n    for (int x=0; x < subtask.getCurrentExecutionAttempt().getAttemptNumber(); x++) {\n      AccessExecution attempt=subtask.getPriorExecutionAttempt(x);\n      if (attempt != null) {\n        ResponseBody json=SubtaskExecutionAttemptDetailsInfo.create(attempt,null,graph.getJobID(),task.getJobVertexId());\n        String path=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(attempt.getAttemptNumber()));\n        archive.add(new ArchivedJson(path,json));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 212,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3157,
        "startLineNumber" : 112,
        "startColumnNumber" : 8,
        "endLineNumber" : 163,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (AccessExecutionJobVertex task : graph.getAllVertices().values()) {\n  for (  AccessExecutionVertex subtask : task.getTaskVertices()) {\n    ResponseBody curAttemptJson=SubtaskExecutionAttemptDetailsInfo.create(subtask.getCurrentExecutionAttempt(),null,graph.getJobID(),task.getJobVertexId());\n    String curAttemptPath=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(subtask.getCurrentExecutionAttempt().getAttemptNumber()));\n    archive.add(new ArchivedJson(curAttemptPath,curAttemptJson));\n    for (int x=0; x < subtask.getCurrentExecutionAttempt().getAttemptNumber(); x++) {\n      AccessExecution attempt=subtask.getPriorExecutionAttempt(x);\n      if (attempt != null) {\n        ResponseBody json=SubtaskExecutionAttemptDetailsInfo.create(attempt,null,graph.getJobID(),task.getJobVertexId());\n        String path=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(attempt.getAttemptNumber()));\n        archive.add(new ArchivedJson(path,json));\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 222,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3255,
        "startLineNumber" : 110,
        "startColumnNumber" : 31,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<ArchivedJson> archive=new ArrayList<>(16);\n  for (  AccessExecutionJobVertex task : graph.getAllVertices().values()) {\n    for (    AccessExecutionVertex subtask : task.getTaskVertices()) {\n      ResponseBody curAttemptJson=SubtaskExecutionAttemptDetailsInfo.create(subtask.getCurrentExecutionAttempt(),null,graph.getJobID(),task.getJobVertexId());\n      String curAttemptPath=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(subtask.getCurrentExecutionAttempt().getAttemptNumber()));\n      archive.add(new ArchivedJson(curAttemptPath,curAttemptJson));\n      for (int x=0; x < subtask.getCurrentExecutionAttempt().getAttemptNumber(); x++) {\n        AccessExecution attempt=subtask.getPriorExecutionAttempt(x);\n        if (attempt != null) {\n          ResponseBody json=SubtaskExecutionAttemptDetailsInfo.create(attempt,null,graph.getJobID(),task.getJobVertexId());\n          String path=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(attempt.getAttemptNumber()));\n          archive.add(new ArchivedJson(path,json));\n        }\n      }\n    }\n  }\n  return archive;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 238,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3380,
        "startLineNumber" : 108,
        "startColumnNumber" : 4,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Collection<ArchivedJson> archiveJsonWithPath(AccessExecutionGraph graph) throws IOException {\n  List<ArchivedJson> archive=new ArrayList<>(16);\n  for (  AccessExecutionJobVertex task : graph.getAllVertices().values()) {\n    for (    AccessExecutionVertex subtask : task.getTaskVertices()) {\n      ResponseBody curAttemptJson=SubtaskExecutionAttemptDetailsInfo.create(subtask.getCurrentExecutionAttempt(),null,graph.getJobID(),task.getJobVertexId());\n      String curAttemptPath=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(subtask.getCurrentExecutionAttempt().getAttemptNumber()));\n      archive.add(new ArchivedJson(curAttemptPath,curAttemptJson));\n      for (int x=0; x < subtask.getCurrentExecutionAttempt().getAttemptNumber(); x++) {\n        AccessExecution attempt=subtask.getPriorExecutionAttempt(x);\n        if (attempt != null) {\n          ResponseBody json=SubtaskExecutionAttemptDetailsInfo.create(attempt,null,graph.getJobID(),task.getJobVertexId());\n          String path=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(attempt.getAttemptNumber()));\n          archive.add(new ArchivedJson(path,json));\n        }\n      }\n    }\n  }\n  return archive;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 254,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 140,
        "startColumnNumber" : 24,
        "endLineNumber" : 140,
        "endColumnNumber" : 39
      },
      "nodeContext" : "attempt != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 143,
      "startColumnNumber" : 49,
      "endLineNumber" : 143,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 142,
        "startColumnNumber" : 32,
        "endLineNumber" : 143,
        "endColumnNumber" : 95
      },
      "nodeContext" : "SubtaskExecutionAttemptDetailsInfo.create(attempt,null,graph.getJobID(),task.getJobVertexId())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 141,
        "startColumnNumber" : 37,
        "endLineNumber" : 143,
        "endColumnNumber" : 95
      },
      "nodeContext" : "json=SubtaskExecutionAttemptDetailsInfo.create(attempt,null,graph.getJobID(),task.getJobVertexId())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 191,
        "startLineNumber" : 141,
        "startColumnNumber" : 24,
        "endLineNumber" : 143,
        "endColumnNumber" : 96
      },
      "nodeContext" : "ResponseBody json=SubtaskExecutionAttemptDetailsInfo.create(attempt,null,graph.getJobID(),task.getJobVertexId());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1349,
        "startLineNumber" : 140,
        "startColumnNumber" : 41,
        "endLineNumber" : 160,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  ResponseBody json=SubtaskExecutionAttemptDetailsInfo.create(attempt,null,graph.getJobID(),task.getJobVertexId());\n  String path=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(attempt.getAttemptNumber()));\n  archive.add(new ArchivedJson(path,json));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1370,
        "startLineNumber" : 140,
        "startColumnNumber" : 20,
        "endLineNumber" : 160,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (attempt != null) {\n  ResponseBody json=SubtaskExecutionAttemptDetailsInfo.create(attempt,null,graph.getJobID(),task.getJobVertexId());\n  String path=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(attempt.getAttemptNumber()));\n  archive.add(new ArchivedJson(path,json));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 89,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1493,
        "startLineNumber" : 138,
        "startColumnNumber" : 98,
        "endLineNumber" : 161,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  AccessExecution attempt=subtask.getPriorExecutionAttempt(x);\n  if (attempt != null) {\n    ResponseBody json=SubtaskExecutionAttemptDetailsInfo.create(attempt,null,graph.getJobID(),task.getJobVertexId());\n    String path=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(attempt.getAttemptNumber()));\n    archive.add(new ArchivedJson(path,json));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1575,
        "startLineNumber" : 138,
        "startColumnNumber" : 16,
        "endLineNumber" : 161,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (int x=0; x < subtask.getCurrentExecutionAttempt().getAttemptNumber(); x++) {\n  AccessExecution attempt=subtask.getPriorExecutionAttempt(x);\n  if (attempt != null) {\n    ResponseBody json=SubtaskExecutionAttemptDetailsInfo.create(attempt,null,graph.getJobID(),task.getJobVertexId());\n    String path=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(attempt.getAttemptNumber()));\n    archive.add(new ArchivedJson(path,json));\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 114,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 3002,
        "startLineNumber" : 113,
        "startColumnNumber" : 73,
        "endLineNumber" : 162,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  ResponseBody curAttemptJson=SubtaskExecutionAttemptDetailsInfo.create(subtask.getCurrentExecutionAttempt(),null,graph.getJobID(),task.getJobVertexId());\n  String curAttemptPath=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(subtask.getCurrentExecutionAttempt().getAttemptNumber()));\n  archive.add(new ArchivedJson(curAttemptPath,curAttemptJson));\n  for (int x=0; x < subtask.getCurrentExecutionAttempt().getAttemptNumber(); x++) {\n    AccessExecution attempt=subtask.getPriorExecutionAttempt(x);\n    if (attempt != null) {\n      ResponseBody json=SubtaskExecutionAttemptDetailsInfo.create(attempt,null,graph.getJobID(),task.getJobVertexId());\n      String path=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(attempt.getAttemptNumber()));\n      archive.add(new ArchivedJson(path,json));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 203,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3063,
        "startLineNumber" : 113,
        "startColumnNumber" : 12,
        "endLineNumber" : 162,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (AccessExecutionVertex subtask : task.getTaskVertices()) {\n  ResponseBody curAttemptJson=SubtaskExecutionAttemptDetailsInfo.create(subtask.getCurrentExecutionAttempt(),null,graph.getJobID(),task.getJobVertexId());\n  String curAttemptPath=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(subtask.getCurrentExecutionAttempt().getAttemptNumber()));\n  archive.add(new ArchivedJson(curAttemptPath,curAttemptJson));\n  for (int x=0; x < subtask.getCurrentExecutionAttempt().getAttemptNumber(); x++) {\n    AccessExecution attempt=subtask.getPriorExecutionAttempt(x);\n    if (attempt != null) {\n      ResponseBody json=SubtaskExecutionAttemptDetailsInfo.create(attempt,null,graph.getJobID(),task.getJobVertexId());\n      String path=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(attempt.getAttemptNumber()));\n      archive.add(new ArchivedJson(path,json));\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 211,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 3087,
        "startLineNumber" : 112,
        "startColumnNumber" : 78,
        "endLineNumber" : 163,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  AccessExecutionVertex subtask : task.getTaskVertices()) {\n    ResponseBody curAttemptJson=SubtaskExecutionAttemptDetailsInfo.create(subtask.getCurrentExecutionAttempt(),null,graph.getJobID(),task.getJobVertexId());\n    String curAttemptPath=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(subtask.getCurrentExecutionAttempt().getAttemptNumber()));\n    archive.add(new ArchivedJson(curAttemptPath,curAttemptJson));\n    for (int x=0; x < subtask.getCurrentExecutionAttempt().getAttemptNumber(); x++) {\n      AccessExecution attempt=subtask.getPriorExecutionAttempt(x);\n      if (attempt != null) {\n        ResponseBody json=SubtaskExecutionAttemptDetailsInfo.create(attempt,null,graph.getJobID(),task.getJobVertexId());\n        String path=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(attempt.getAttemptNumber()));\n        archive.add(new ArchivedJson(path,json));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 212,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3157,
        "startLineNumber" : 112,
        "startColumnNumber" : 8,
        "endLineNumber" : 163,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (AccessExecutionJobVertex task : graph.getAllVertices().values()) {\n  for (  AccessExecutionVertex subtask : task.getTaskVertices()) {\n    ResponseBody curAttemptJson=SubtaskExecutionAttemptDetailsInfo.create(subtask.getCurrentExecutionAttempt(),null,graph.getJobID(),task.getJobVertexId());\n    String curAttemptPath=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(subtask.getCurrentExecutionAttempt().getAttemptNumber()));\n    archive.add(new ArchivedJson(curAttemptPath,curAttemptJson));\n    for (int x=0; x < subtask.getCurrentExecutionAttempt().getAttemptNumber(); x++) {\n      AccessExecution attempt=subtask.getPriorExecutionAttempt(x);\n      if (attempt != null) {\n        ResponseBody json=SubtaskExecutionAttemptDetailsInfo.create(attempt,null,graph.getJobID(),task.getJobVertexId());\n        String path=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(attempt.getAttemptNumber()));\n        archive.add(new ArchivedJson(path,json));\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 222,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3255,
        "startLineNumber" : 110,
        "startColumnNumber" : 31,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<ArchivedJson> archive=new ArrayList<>(16);\n  for (  AccessExecutionJobVertex task : graph.getAllVertices().values()) {\n    for (    AccessExecutionVertex subtask : task.getTaskVertices()) {\n      ResponseBody curAttemptJson=SubtaskExecutionAttemptDetailsInfo.create(subtask.getCurrentExecutionAttempt(),null,graph.getJobID(),task.getJobVertexId());\n      String curAttemptPath=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(subtask.getCurrentExecutionAttempt().getAttemptNumber()));\n      archive.add(new ArchivedJson(curAttemptPath,curAttemptJson));\n      for (int x=0; x < subtask.getCurrentExecutionAttempt().getAttemptNumber(); x++) {\n        AccessExecution attempt=subtask.getPriorExecutionAttempt(x);\n        if (attempt != null) {\n          ResponseBody json=SubtaskExecutionAttemptDetailsInfo.create(attempt,null,graph.getJobID(),task.getJobVertexId());\n          String path=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(attempt.getAttemptNumber()));\n          archive.add(new ArchivedJson(path,json));\n        }\n      }\n    }\n  }\n  return archive;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 238,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3380,
        "startLineNumber" : 108,
        "startColumnNumber" : 4,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Collection<ArchivedJson> archiveJsonWithPath(AccessExecutionGraph graph) throws IOException {\n  List<ArchivedJson> archive=new ArrayList<>(16);\n  for (  AccessExecutionJobVertex task : graph.getAllVertices().values()) {\n    for (    AccessExecutionVertex subtask : task.getTaskVertices()) {\n      ResponseBody curAttemptJson=SubtaskExecutionAttemptDetailsInfo.create(subtask.getCurrentExecutionAttempt(),null,graph.getJobID(),task.getJobVertexId());\n      String curAttemptPath=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(subtask.getCurrentExecutionAttempt().getAttemptNumber()));\n      archive.add(new ArchivedJson(curAttemptPath,curAttemptJson));\n      for (int x=0; x < subtask.getCurrentExecutionAttempt().getAttemptNumber(); x++) {\n        AccessExecution attempt=subtask.getPriorExecutionAttempt(x);\n        if (attempt != null) {\n          ResponseBody json=SubtaskExecutionAttemptDetailsInfo.create(attempt,null,graph.getJobID(),task.getJobVertexId());\n          String path=getMessageHeaders().getTargetRestEndpointURL().replace(':' + JobIDPathParameter.KEY,graph.getJobID().toString()).replace(':' + JobVertexIdPathParameter.KEY,task.getJobVertexId().toString()).replace(':' + SubtaskIndexPathParameter.KEY,String.valueOf(subtask.getParallelSubtaskIndex())).replace(':' + SubtaskAttemptPathParameter.KEY,String.valueOf(attempt.getAttemptNumber()));\n          archive.add(new ArchivedJson(path,json));\n        }\n      }\n    }\n  }\n  return archive;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 254,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 142,
        "startColumnNumber" : 32,
        "endLineNumber" : 143,
        "endColumnNumber" : 95
      },
      "nodeContext" : "SubtaskExecutionAttemptDetailsInfo.create(attempt,null,graph.getJobID(),task.getJobVertexId())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "null"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 117,
    "startColumnNumber" : 32,
    "endLineNumber" : 117,
    "endColumnNumber" : 36
  }, {
    "charLength" : 4,
    "startLineNumber" : 140,
    "startColumnNumber" : 35,
    "endLineNumber" : 140,
    "endColumnNumber" : 39
  }, {
    "charLength" : 4,
    "startLineNumber" : 143,
    "startColumnNumber" : 49,
    "endLineNumber" : 143,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}