{
  "id" : 284,
  "expression" : "\"Service interface [\" + serviceInterface.getName() + \"] needs to be implemented by service [\"+ service+ \"] of class [\"+ service.getClass().getName()+ \"]\"",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-context/src/main/java/org/springframework/remoting/support/RemoteExporter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Service interface [\" + serviceInterface.getName() + \"] needs to be implemented by service [\"+ service+ \"] of class [\"+ service.getClass().getName()+ \"]\"",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 167,
      "startLineNumber" : 133,
      "startColumnNumber" : 38,
      "endLineNumber" : 135,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 14,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 133,
        "startColumnNumber" : 9,
        "endLineNumber" : 135,
        "endColumnNumber" : 40
      },
      "nodeContext" : "new IllegalArgumentException(\"Service interface [\" + serviceInterface.getName() + \"] needs to be implemented by service [\"+ service+ \"] of class [\"+ service.getClass().getName()+ \"]\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 133,
        "startColumnNumber" : 3,
        "endLineNumber" : 135,
        "endColumnNumber" : 41
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Service interface [\" + serviceInterface.getName() + \"] needs to be implemented by service [\"+ service+ \"] of class [\"+ service.getClass().getName()+ \"]\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 213,
        "startLineNumber" : 132,
        "startColumnNumber" : 45,
        "endLineNumber" : 136,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  throw new IllegalArgumentException(\"Service interface [\" + serviceInterface.getName() + \"] needs to be implemented by service [\"+ service+ \"] of class [\"+ service.getClass().getName()+ \"]\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 256,
        "startLineNumber" : 132,
        "startColumnNumber" : 2,
        "endLineNumber" : 136,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (!serviceInterface.isInstance(service)) {\n  throw new IllegalArgumentException(\"Service interface [\" + serviceInterface.getName() + \"] needs to be implemented by service [\"+ service+ \"] of class [\"+ service.getClass().getName()+ \"]\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 122,
        "startColumnNumber" : 72,
        "endLineNumber" : 137,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Class<?> serviceInterface=getServiceInterface();\n  Assert.notNull(serviceInterface,\"Property 'serviceInterface' is required\");\n  Object service=getService();\n  if (service instanceof String) {\n    throw new IllegalArgumentException(\"Service [\" + service + \"] is a String \"+ \"rather than an actual service reference: Have you accidentally specified \"+ \"the service bean name as value instead of as reference?\");\n  }\n  if (!serviceInterface.isInstance(service)) {\n    throw new IllegalArgumentException(\"Service interface [\" + serviceInterface.getName() + \"] needs to be implemented by service [\"+ service+ \"] of class [\"+ service.getClass().getName()+ \"]\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 931,
        "startLineNumber" : 116,
        "startColumnNumber" : 1,
        "endLineNumber" : 137,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Check whether a service reference has been set, and whether it matches the specified service.\n * @see #setServiceInterface\n * @see #setService\n */\nprotected void checkServiceInterface() throws IllegalArgumentException {\n  Class<?> serviceInterface=getServiceInterface();\n  Assert.notNull(serviceInterface,\"Property 'serviceInterface' is required\");\n  Object service=getService();\n  if (service instanceof String) {\n    throw new IllegalArgumentException(\"Service [\" + service + \"] is a String \"+ \"rather than an actual service reference: Have you accidentally specified \"+ \"the service bean name as value instead of as reference?\");\n  }\n  if (!serviceInterface.isInstance(service)) {\n    throw new IllegalArgumentException(\"Service interface [\" + serviceInterface.getName() + \"] needs to be implemented by service [\"+ service+ \"] of class [\"+ service.getClass().getName()+ \"]\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 71,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 133,
        "startColumnNumber" : 3,
        "endLineNumber" : 135,
        "endColumnNumber" : 41
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Service interface [\" + serviceInterface.getName() + \"] needs to be implemented by service [\"+ service+ \"] of class [\"+ service.getClass().getName()+ \"]\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 19,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 167,
    "startLineNumber" : 133,
    "startColumnNumber" : 38,
    "endLineNumber" : 135,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}