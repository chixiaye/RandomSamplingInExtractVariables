{
  "id" : 464,
  "expression" : "new DnsAddressResolverGroup(builder)",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/resolver-dns/src/test/java/io/netty/resolver/dns/DnsAddressResolverGroupTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new DnsAddressResolverGroup(builder)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 43,
      "startColumnNumber" : 48,
      "endLineNumber" : 43,
      "endColumnNumber" : 84
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 43,
        "startColumnNumber" : 32,
        "endLineNumber" : 43,
        "endColumnNumber" : 84
      },
      "nodeContext" : "resolverGroup=new DnsAddressResolverGroup(builder)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 85
      },
      "nodeContext" : "DnsAddressResolverGroup resolverGroup=new DnsAddressResolverGroup(builder);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1444,
        "startLineNumber" : 37,
        "startColumnNumber" : 73,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  EventLoopGroup group=new MultithreadEventLoopGroup(1,NioHandler.newFactory());\n  final EventLoop loop=group.next();\n  MultithreadEventLoopGroup defaultEventLoopGroup=new MultithreadEventLoopGroup(1,LocalHandler.newFactory());\n  DnsNameResolverBuilder builder=new DnsNameResolverBuilder().eventLoop(loop).channelType(NioDatagramChannel.class);\n  DnsAddressResolverGroup resolverGroup=new DnsAddressResolverGroup(builder);\n  try {\n    final Promise<?> promise=loop.newPromise();\n    AddressResolver<?> resolver=resolverGroup.getResolver(defaultEventLoopGroup.next());\n    resolver.resolve(new SocketAddress(){\n      private static final long serialVersionUID=3169703458729818468L;\n    }\n).addListener(future -> {\n      try {\n        assertThat(future.cause(),instanceOf(UnsupportedAddressTypeException.class));\n        assertTrue(loop.inEventLoop());\n        promise.setSuccess(null);\n      }\n catch (      Throwable cause) {\n        promise.setFailure(cause);\n      }\n    }\n).await();\n    promise.asFuture().sync();\n  }\n  finally {\n    resolverGroup.close();\n    group.shutdownGracefully();\n    defaultEventLoopGroup.shutdownGracefully();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1524,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testUseConfiguredEventLoop() throws InterruptedException {\n  EventLoopGroup group=new MultithreadEventLoopGroup(1,NioHandler.newFactory());\n  final EventLoop loop=group.next();\n  MultithreadEventLoopGroup defaultEventLoopGroup=new MultithreadEventLoopGroup(1,LocalHandler.newFactory());\n  DnsNameResolverBuilder builder=new DnsNameResolverBuilder().eventLoop(loop).channelType(NioDatagramChannel.class);\n  DnsAddressResolverGroup resolverGroup=new DnsAddressResolverGroup(builder);\n  try {\n    final Promise<?> promise=loop.newPromise();\n    AddressResolver<?> resolver=resolverGroup.getResolver(defaultEventLoopGroup.next());\n    resolver.resolve(new SocketAddress(){\n      private static final long serialVersionUID=3169703458729818468L;\n    }\n).addListener(future -> {\n      try {\n        assertThat(future.cause(),instanceOf(UnsupportedAddressTypeException.class));\n        assertTrue(loop.inEventLoop());\n        promise.setSuccess(null);\n      }\n catch (      Throwable cause) {\n        promise.setFailure(cause);\n      }\n    }\n).await();\n    promise.asFuture().sync();\n  }\n  finally {\n    resolverGroup.close();\n    group.shutdownGracefully();\n    defaultEventLoopGroup.shutdownGracefully();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 171,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 85
      },
      "nodeContext" : "DnsAddressResolverGroup resolverGroup=new DnsAddressResolverGroup(builder);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "io.netty.resolver.dns.DnsAddressResolverGroup"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 43,
    "startColumnNumber" : 48,
    "endLineNumber" : 43,
    "endColumnNumber" : 84
  } ],
  "layoutRelationDataList" : [ ]
}