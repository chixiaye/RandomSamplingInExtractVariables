{
  "id" : 261,
  "expression" : "\".\"",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "d7574973e97fa7a3a21aa59967311f6091941830",
  "filePath" : "/app/src/main/java/org/schabi/newpipe/util/ThemeHelper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\".\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 164,
      "startColumnNumber" : 21,
      "endLineNumber" : 164,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 164,
        "startColumnNumber" : 21,
        "endLineNumber" : 164,
        "endColumnNumber" : 61
      },
      "nodeContext" : "\".\" + service.getServiceInfo().getName()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 164,
        "startColumnNumber" : 8,
        "endLineNumber" : 164,
        "endColumnNumber" : 61
      },
      "nodeContext" : "themeName+=\".\" + service.getServiceInfo().getName()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 164,
        "startColumnNumber" : 8,
        "endLineNumber" : 164,
        "endColumnNumber" : 62
      },
      "nodeContext" : "themeName+=\".\" + service.getServiceInfo().getName();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1592,
        "startLineNumber" : 128,
        "startColumnNumber" : 85,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String lightTheme=context.getResources().getString(R.string.light_theme_key);\n  String darkTheme=context.getResources().getString(R.string.dark_theme_key);\n  String blackTheme=context.getResources().getString(R.string.black_theme_key);\n  String selectedTheme=getSelectedThemeString(context);\n  int defaultTheme=R.style.DarkTheme;\n  if (selectedTheme.equals(lightTheme)) {\n    defaultTheme=R.style.LightTheme;\n  }\n else   if (selectedTheme.equals(blackTheme)) {\n    defaultTheme=R.style.BlackTheme;\n  }\n else   if (selectedTheme.equals(darkTheme)) {\n    defaultTheme=R.style.DarkTheme;\n  }\n  if (serviceId <= -1) {\n    return defaultTheme;\n  }\n  final StreamingService service;\n  try {\n    service=NewPipe.getService(serviceId);\n  }\n catch (  ExtractionException ignored) {\n    return defaultTheme;\n  }\n  String themeName=\"DarkTheme\";\n  if (selectedTheme.equals(lightTheme)) {\n    themeName=\"LightTheme\";\n  }\n else   if (selectedTheme.equals(blackTheme)) {\n    themeName=\"BlackTheme\";\n  }\n else   if (selectedTheme.equals(darkTheme)) {\n    themeName=\"DarkTheme\";\n  }\n  themeName+=\".\" + service.getServiceInfo().getName();\n  int resourceId=context.getResources().getIdentifier(themeName,\"style\",context.getPackageName());\n  if (resourceId > 0) {\n    return resourceId;\n  }\n  return defaultTheme;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 205,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1988,
        "startLineNumber" : 119,
        "startColumnNumber" : 4,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Return the selected theme styled according to the serviceId.\n * @param context   context to get the selected theme\n * @param serviceId return a theme styled to this service,-1 to get the default\n * @return the selected style (styled)\n */\n@StyleRes public static int getThemeForService(final Context context,final int serviceId){\n  String lightTheme=context.getResources().getString(R.string.light_theme_key);\n  String darkTheme=context.getResources().getString(R.string.dark_theme_key);\n  String blackTheme=context.getResources().getString(R.string.black_theme_key);\n  String selectedTheme=getSelectedThemeString(context);\n  int defaultTheme=R.style.DarkTheme;\n  if (selectedTheme.equals(lightTheme)) {\n    defaultTheme=R.style.LightTheme;\n  }\n else   if (selectedTheme.equals(blackTheme)) {\n    defaultTheme=R.style.BlackTheme;\n  }\n else   if (selectedTheme.equals(darkTheme)) {\n    defaultTheme=R.style.DarkTheme;\n  }\n  if (serviceId <= -1) {\n    return defaultTheme;\n  }\n  final StreamingService service;\n  try {\n    service=NewPipe.getService(serviceId);\n  }\n catch (  ExtractionException ignored) {\n    return defaultTheme;\n  }\n  String themeName=\"DarkTheme\";\n  if (selectedTheme.equals(lightTheme)) {\n    themeName=\"LightTheme\";\n  }\n else   if (selectedTheme.equals(blackTheme)) {\n    themeName=\"BlackTheme\";\n  }\n else   if (selectedTheme.equals(darkTheme)) {\n    themeName=\"DarkTheme\";\n  }\n  themeName+=\".\" + service.getServiceInfo().getName();\n  int resourceId=context.getResources().getIdentifier(themeName,\"style\",context.getPackageName());\n  if (resourceId > 0) {\n    return resourceId;\n  }\n  return defaultTheme;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 222,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 164,
        "startColumnNumber" : 8,
        "endLineNumber" : 164,
        "endColumnNumber" : 62
      },
      "nodeContext" : "themeName+=\".\" + service.getServiceInfo().getName();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 164,
    "startColumnNumber" : 21,
    "endLineNumber" : 164,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ ]
}