{
  "id" : 115,
  "expression" : "new String[collection.size()]",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/bootstrap-core/src/main/java/com/navercorp/pinpoint/bootstrap/util/spring/StringUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new String[collection.size()]",
    "nodeType" : "ArrayCreation",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 171,
      "startColumnNumber" : 34,
      "endLineNumber" : 171,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 171,
        "startColumnNumber" : 15,
        "endLineNumber" : 171,
        "endColumnNumber" : 64
      },
      "nodeContext" : "collection.toArray(new String[collection.size()])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 171,
        "startColumnNumber" : 8,
        "endLineNumber" : 171,
        "endColumnNumber" : 65
      },
      "nodeContext" : "return collection.toArray(new String[collection.size()]);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 167,
        "startColumnNumber" : 72,
        "endLineNumber" : 172,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (collection == null) {\n    return null;\n  }\n  return collection.toArray(new String[collection.size()]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 542,
        "startLineNumber" : 160,
        "startColumnNumber" : 4,
        "endLineNumber" : 172,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Copy the given  {@code Collection} into a {@code String} array.<p>The  {@code Collection} must contain {@code String} elements only.\n * @param collection the {@code Collection} to copy\n * @return the {@code String} array ({@code null} if the supplied{@code Collection} was {@code null})\n */\npublic static String[] toStringArray(Collection<String> collection){\n  if (collection == null) {\n    return null;\n  }\n  return collection.toArray(new String[collection.size()]);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 36,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 171,
        "startColumnNumber" : 8,
        "endLineNumber" : 171,
        "endColumnNumber" : 65
      },
      "nodeContext" : "return collection.toArray(new String[collection.size()]);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.lang.String[]"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 171,
    "startColumnNumber" : 34,
    "endLineNumber" : 171,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ]
}