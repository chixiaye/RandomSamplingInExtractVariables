{
  "id" : 68,
  "expression" : "progress - mProgress",
  "projectName" : "android-hacker@VirtualXposed",
  "commitID" : "8e98dd20e6a751089d4eb2642fa6bf088a3e7a79",
  "filePath" : "/VirtualApp/app/src/main/java/io/virtualapp/widgets/LauncherIconView.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "progress - mProgress",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 355,
      "startColumnNumber" : 21,
      "endLineNumber" : 355,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 355,
        "startColumnNumber" : 12,
        "endLineNumber" : 355,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Math.abs(progress - mProgress)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 355,
        "startColumnNumber" : 12,
        "endLineNumber" : 355,
        "endColumnNumber" : 66
      },
      "nodeContext" : "Math.abs(progress - mProgress) > SMOOTH_ANIM_THRESHOLD",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 355,
        "startColumnNumber" : 12,
        "endLineNumber" : 355,
        "endColumnNumber" : 77
      },
      "nodeContext" : "Math.abs(progress - mProgress) > SMOOTH_ANIM_THRESHOLD && animate",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 504,
        "startLineNumber" : 355,
        "startColumnNumber" : 8,
        "endLineNumber" : 371,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Math.abs(progress - mProgress) > SMOOTH_ANIM_THRESHOLD && animate) {\n  if (mProgress == 0) {\n    startInterAnim(progress);\n  }\n else {\n    startProgressAnim(mProgress,progress);\n  }\n}\n else if (progress == 100 && animate) {\n  mProgress=100;\n  startMaskAnim();\n}\n else {\n  mProgress=progress;\n  if (mProgress == 0.f)   mInterDelta=0.f;\n  invalidate();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 650,
        "startLineNumber" : 350,
        "startColumnNumber" : 59,
        "endLineNumber" : 372,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  progress=Math.min(Math.max(progress,0),100);\n  Log.d(TAG,\"setProgress: p:\" + progress + \",mp:\"+ mProgress);\n  if (Math.abs(progress - mProgress) > SMOOTH_ANIM_THRESHOLD && animate) {\n    if (mProgress == 0) {\n      startInterAnim(progress);\n    }\n else {\n      startProgressAnim(mProgress,progress);\n    }\n  }\n else   if (progress == 100 && animate) {\n    mProgress=100;\n    startMaskAnim();\n  }\n else {\n    mProgress=progress;\n    if (mProgress == 0.f)     mInterDelta=0.f;\n    invalidate();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 858,
        "startLineNumber" : 346,
        "startColumnNumber" : 4,
        "endLineNumber" : 372,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @param progress the progress in [0,100]\n * @param animate  true to enable smooth animation when progress changed more than 5.\n */\npublic void setProgress(int progress,boolean animate){\n  progress=Math.min(Math.max(progress,0),100);\n  Log.d(TAG,\"setProgress: p:\" + progress + \",mp:\"+ mProgress);\n  if (Math.abs(progress - mProgress) > SMOOTH_ANIM_THRESHOLD && animate) {\n    if (mProgress == 0) {\n      startInterAnim(progress);\n    }\n else {\n      startProgressAnim(mProgress,progress);\n    }\n  }\n else   if (progress == 100 && animate) {\n    mProgress=100;\n    startMaskAnim();\n  }\n else {\n    mProgress=progress;\n    if (mProgress == 0.f)     mInterDelta=0.f;\n    invalidate();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 91,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 355,
        "startColumnNumber" : 12,
        "endLineNumber" : 355,
        "endColumnNumber" : 77
      },
      "nodeContext" : "Math.abs(progress - mProgress) > SMOOTH_ANIM_THRESHOLD && animate",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 355,
    "startColumnNumber" : 21,
    "endLineNumber" : 355,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}