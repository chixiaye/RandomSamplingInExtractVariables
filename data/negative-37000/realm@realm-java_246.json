{
  "id" : 246,
  "expression" : "BigDecimal.ONE",
  "projectName" : "realm@realm-java",
  "commitID" : "9da3b229a46407f73e2003fb40857cadf062086b",
  "filePath" : "/realm/realm-library/src/androidTest/java/io/realm/LinkingObjectsQueryTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "BigDecimal.ONE",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 748,
      "startColumnNumber" : 86,
      "endLineNumber" : 748,
      "endColumnNumber" : 100
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayInitializer,expressions]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 748,
        "startColumnNumber" : 71,
        "endLineNumber" : 748,
        "endColumnNumber" : 101
      },
      "nodeContext" : "new Decimal128(BigDecimal.ONE)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 748,
        "startColumnNumber" : 32,
        "endLineNumber" : 748,
        "endColumnNumber" : 102
      },
      "nodeContext" : "{new Decimal128(BigDecimal.TEN),null,new Decimal128(BigDecimal.ONE)}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 748,
        "startColumnNumber" : 21,
        "endLineNumber" : 748,
        "endColumnNumber" : 102
      },
      "nodeContext" : "decimals={new Decimal128(BigDecimal.TEN),null,new Decimal128(BigDecimal.ONE)}",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 748,
        "startColumnNumber" : 8,
        "endLineNumber" : 748,
        "endColumnNumber" : 103
      },
      "nodeContext" : "Decimal128[] decimals={new Decimal128(BigDecimal.TEN),null,new Decimal128(BigDecimal.ONE)};\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3116,
        "startLineNumber" : 736,
        "startColumnNumber" : 64,
        "endLineNumber" : 812,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String[] words={\"Fish\",null,\"Horse\"};\n  byte[][] binaries={new byte[]{0},null,new byte[]{1,2}};\n  Boolean[] booleans={false,null,true};\n  Date[] dates={new Date(0),null,new Date(10000)};\n  NullTypes[] nullTypesArray=new NullTypes[3];\n  Decimal128[] decimals={new Decimal128(BigDecimal.TEN),null,new Decimal128(BigDecimal.ONE)};\n  ObjectId[] ids={new ObjectId(TestHelper.generateObjectIdHexString(10)),null,new ObjectId(TestHelper.generateObjectIdHexString(1))};\n  testRealm.beginTransaction();\n  for (int i=0; i < 3; i++) {\n    NullTypes nullTypes=new NullTypes();\n    nullTypes.setId(i + 1);\n    nullTypes.setFieldStringNull(words[i]);\n    if (words[i] != null) {\n      nullTypes.setFieldStringNotNull(words[i]);\n    }\n    nullTypes.setFieldBytesNull(binaries[i]);\n    if (binaries[i] != null) {\n      nullTypes.setFieldBytesNotNull(binaries[i]);\n    }\n    nullTypes.setFieldBooleanNull(booleans[i]);\n    if (booleans[i] != null) {\n      nullTypes.setFieldBooleanNotNull(booleans[i]);\n    }\n    if (i != 1) {\n      int n=i + 1;\n      nullTypes.setFieldByteNull((byte)n);\n      nullTypes.setFieldByteNotNull((byte)n);\n      nullTypes.setFieldShortNull((short)n);\n      nullTypes.setFieldShortNotNull((short)n);\n      nullTypes.setFieldIntegerNull(n);\n      nullTypes.setFieldIntegerNotNull(n);\n      nullTypes.setFieldLongNull((long)n);\n      nullTypes.setFieldLongNotNull((long)n);\n      nullTypes.setFieldFloatNull((float)n);\n      nullTypes.setFieldFloatNotNull((float)n);\n      nullTypes.setFieldDoubleNull((double)n);\n      nullTypes.setFieldDoubleNotNull((double)n);\n    }\n    nullTypes.setFieldDateNull(dates[i]);\n    if (dates[i] != null) {\n      nullTypes.setFieldDateNotNull(dates[i]);\n    }\n    nullTypes.setFieldDecimal128Null(decimals[i]);\n    nullTypes.setFieldObjectIdNull(ids[i]);\n    nullTypesArray[i]=testRealm.copyToRealm(nullTypes);\n  }\n  nullTypesArray[0].setFieldObjectNull(nullTypesArray[0]);\n  nullTypesArray[1].setFieldObjectNull(nullTypesArray[2]);\n  nullTypesArray[2].setFieldObjectNull(null);\n  nullTypesArray[0].getFieldListNull().add(nullTypesArray[1]);\n  nullTypesArray[1].getFieldListNull().add(nullTypesArray[2]);\n  nullTypesArray[2].getFieldListNull().clear();\n  testRealm.commitTransaction();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 408,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3176,
        "startLineNumber" : 736,
        "startColumnNumber" : 4,
        "endLineNumber" : 812,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void populateTestRealmForNullTests(Realm testRealm){\n  String[] words={\"Fish\",null,\"Horse\"};\n  byte[][] binaries={new byte[]{0},null,new byte[]{1,2}};\n  Boolean[] booleans={false,null,true};\n  Date[] dates={new Date(0),null,new Date(10000)};\n  NullTypes[] nullTypesArray=new NullTypes[3];\n  Decimal128[] decimals={new Decimal128(BigDecimal.TEN),null,new Decimal128(BigDecimal.ONE)};\n  ObjectId[] ids={new ObjectId(TestHelper.generateObjectIdHexString(10)),null,new ObjectId(TestHelper.generateObjectIdHexString(1))};\n  testRealm.beginTransaction();\n  for (int i=0; i < 3; i++) {\n    NullTypes nullTypes=new NullTypes();\n    nullTypes.setId(i + 1);\n    nullTypes.setFieldStringNull(words[i]);\n    if (words[i] != null) {\n      nullTypes.setFieldStringNotNull(words[i]);\n    }\n    nullTypes.setFieldBytesNull(binaries[i]);\n    if (binaries[i] != null) {\n      nullTypes.setFieldBytesNotNull(binaries[i]);\n    }\n    nullTypes.setFieldBooleanNull(booleans[i]);\n    if (booleans[i] != null) {\n      nullTypes.setFieldBooleanNotNull(booleans[i]);\n    }\n    if (i != 1) {\n      int n=i + 1;\n      nullTypes.setFieldByteNull((byte)n);\n      nullTypes.setFieldByteNotNull((byte)n);\n      nullTypes.setFieldShortNull((short)n);\n      nullTypes.setFieldShortNotNull((short)n);\n      nullTypes.setFieldIntegerNull(n);\n      nullTypes.setFieldIntegerNotNull(n);\n      nullTypes.setFieldLongNull((long)n);\n      nullTypes.setFieldLongNotNull((long)n);\n      nullTypes.setFieldFloatNull((float)n);\n      nullTypes.setFieldFloatNotNull((float)n);\n      nullTypes.setFieldDoubleNull((double)n);\n      nullTypes.setFieldDoubleNotNull((double)n);\n    }\n    nullTypes.setFieldDateNull(dates[i]);\n    if (dates[i] != null) {\n      nullTypes.setFieldDateNotNull(dates[i]);\n    }\n    nullTypes.setFieldDecimal128Null(decimals[i]);\n    nullTypes.setFieldObjectIdNull(ids[i]);\n    nullTypesArray[i]=testRealm.copyToRealm(nullTypes);\n  }\n  nullTypesArray[0].setFieldObjectNull(nullTypesArray[0]);\n  nullTypesArray[1].setFieldObjectNull(nullTypesArray[2]);\n  nullTypesArray[2].setFieldObjectNull(null);\n  nullTypesArray[0].getFieldListNull().add(nullTypesArray[1]);\n  nullTypesArray[1].getFieldListNull().add(nullTypesArray[2]);\n  nullTypesArray[2].getFieldListNull().clear();\n  testRealm.commitTransaction();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 416,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 748,
        "startColumnNumber" : 8,
        "endLineNumber" : 748,
        "endColumnNumber" : 103
      },
      "nodeContext" : "Decimal128[] decimals={new Decimal128(BigDecimal.TEN),null,new Decimal128(BigDecimal.ONE)};\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.math.BigDecimal"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 748,
    "startColumnNumber" : 86,
    "endLineNumber" : 748,
    "endColumnNumber" : 100
  } ],
  "layoutRelationDataList" : [ ]
}