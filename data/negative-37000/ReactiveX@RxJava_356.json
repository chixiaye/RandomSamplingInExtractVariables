{
  "id" : 356,
  "expression" : "NbpSubscriber",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/observable/ObservableDebounceTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "NbpSubscriber",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 285,
      "startColumnNumber" : 75,
      "endLineNumber" : 285,
      "endColumnNumber" : 88
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 225,
        "startLineNumber" : 282,
        "startColumnNumber" : 8,
        "endLineNumber" : 285,
        "endColumnNumber" : 89
      },
      "nodeContext" : "Observable.merge(Observable.just(1),Observable.just(2).delay(10,TimeUnit.MILLISECONDS,scheduler)).debounce(20,TimeUnit.MILLISECONDS,scheduler).take(1).subscribe(NbpSubscriber)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 226,
        "startLineNumber" : 282,
        "startColumnNumber" : 8,
        "endLineNumber" : 285,
        "endColumnNumber" : 90
      },
      "nodeContext" : "Observable.merge(Observable.just(1),Observable.just(2).delay(10,TimeUnit.MILLISECONDS,scheduler)).debounce(20,TimeUnit.MILLISECONDS,scheduler).take(1).subscribe(NbpSubscriber);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 279,
        "startColumnNumber" : 75,
        "endLineNumber" : 292,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestScheduler scheduler=new TestScheduler();\n  TestObserver<Integer> NbpSubscriber=new TestObserver<Integer>();\n  Observable.merge(Observable.just(1),Observable.just(2).delay(10,TimeUnit.MILLISECONDS,scheduler)).debounce(20,TimeUnit.MILLISECONDS,scheduler).take(1).subscribe(NbpSubscriber);\n  scheduler.advanceTimeBy(30,TimeUnit.MILLISECONDS);\n  NbpSubscriber.assertValue(2);\n  NbpSubscriber.assertTerminated();\n  NbpSubscriber.assertNoErrors();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 646,
        "startLineNumber" : 278,
        "startColumnNumber" : 4,
        "endLineNumber" : 292,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void debounceWithTimeBackpressure() throws InterruptedException {\n  TestScheduler scheduler=new TestScheduler();\n  TestObserver<Integer> NbpSubscriber=new TestObserver<Integer>();\n  Observable.merge(Observable.just(1),Observable.just(2).delay(10,TimeUnit.MILLISECONDS,scheduler)).debounce(20,TimeUnit.MILLISECONDS,scheduler).take(1).subscribe(NbpSubscriber);\n  scheduler.advanceTimeBy(30,TimeUnit.MILLISECONDS);\n  NbpSubscriber.assertValue(2);\n  NbpSubscriber.assertTerminated();\n  NbpSubscriber.assertNoErrors();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 84,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 225,
        "startLineNumber" : 282,
        "startColumnNumber" : 8,
        "endLineNumber" : 285,
        "endColumnNumber" : 89
      },
      "nodeContext" : "Observable.merge(Observable.just(1),Observable.just(2).delay(10,TimeUnit.MILLISECONDS,scheduler)).debounce(20,TimeUnit.MILLISECONDS,scheduler).take(1).subscribe(NbpSubscriber)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.observers.TestObserver<java.lang.Integer>"
  }, {
    "nodeContext" : "NbpSubscriber",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 289,
      "startColumnNumber" : 8,
      "endLineNumber" : 289,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 289,
        "startColumnNumber" : 8,
        "endLineNumber" : 289,
        "endColumnNumber" : 36
      },
      "nodeContext" : "NbpSubscriber.assertValue(2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 289,
        "startColumnNumber" : 8,
        "endLineNumber" : 289,
        "endColumnNumber" : 37
      },
      "nodeContext" : "NbpSubscriber.assertValue(2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 279,
        "startColumnNumber" : 75,
        "endLineNumber" : 292,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestScheduler scheduler=new TestScheduler();\n  TestObserver<Integer> NbpSubscriber=new TestObserver<Integer>();\n  Observable.merge(Observable.just(1),Observable.just(2).delay(10,TimeUnit.MILLISECONDS,scheduler)).debounce(20,TimeUnit.MILLISECONDS,scheduler).take(1).subscribe(NbpSubscriber);\n  scheduler.advanceTimeBy(30,TimeUnit.MILLISECONDS);\n  NbpSubscriber.assertValue(2);\n  NbpSubscriber.assertTerminated();\n  NbpSubscriber.assertNoErrors();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 646,
        "startLineNumber" : 278,
        "startColumnNumber" : 4,
        "endLineNumber" : 292,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void debounceWithTimeBackpressure() throws InterruptedException {\n  TestScheduler scheduler=new TestScheduler();\n  TestObserver<Integer> NbpSubscriber=new TestObserver<Integer>();\n  Observable.merge(Observable.just(1),Observable.just(2).delay(10,TimeUnit.MILLISECONDS,scheduler)).debounce(20,TimeUnit.MILLISECONDS,scheduler).take(1).subscribe(NbpSubscriber);\n  scheduler.advanceTimeBy(30,TimeUnit.MILLISECONDS);\n  NbpSubscriber.assertValue(2);\n  NbpSubscriber.assertTerminated();\n  NbpSubscriber.assertNoErrors();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 84,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 289,
        "startColumnNumber" : 8,
        "endLineNumber" : 289,
        "endColumnNumber" : 37
      },
      "nodeContext" : "NbpSubscriber.assertValue(2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.observers.TestObserver<java.lang.Integer>"
  }, {
    "nodeContext" : "NbpSubscriber",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 290,
      "startColumnNumber" : 8,
      "endLineNumber" : 290,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 290,
        "startColumnNumber" : 8,
        "endLineNumber" : 290,
        "endColumnNumber" : 40
      },
      "nodeContext" : "NbpSubscriber.assertTerminated()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 290,
        "startColumnNumber" : 8,
        "endLineNumber" : 290,
        "endColumnNumber" : 41
      },
      "nodeContext" : "NbpSubscriber.assertTerminated();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 279,
        "startColumnNumber" : 75,
        "endLineNumber" : 292,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestScheduler scheduler=new TestScheduler();\n  TestObserver<Integer> NbpSubscriber=new TestObserver<Integer>();\n  Observable.merge(Observable.just(1),Observable.just(2).delay(10,TimeUnit.MILLISECONDS,scheduler)).debounce(20,TimeUnit.MILLISECONDS,scheduler).take(1).subscribe(NbpSubscriber);\n  scheduler.advanceTimeBy(30,TimeUnit.MILLISECONDS);\n  NbpSubscriber.assertValue(2);\n  NbpSubscriber.assertTerminated();\n  NbpSubscriber.assertNoErrors();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 646,
        "startLineNumber" : 278,
        "startColumnNumber" : 4,
        "endLineNumber" : 292,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void debounceWithTimeBackpressure() throws InterruptedException {\n  TestScheduler scheduler=new TestScheduler();\n  TestObserver<Integer> NbpSubscriber=new TestObserver<Integer>();\n  Observable.merge(Observable.just(1),Observable.just(2).delay(10,TimeUnit.MILLISECONDS,scheduler)).debounce(20,TimeUnit.MILLISECONDS,scheduler).take(1).subscribe(NbpSubscriber);\n  scheduler.advanceTimeBy(30,TimeUnit.MILLISECONDS);\n  NbpSubscriber.assertValue(2);\n  NbpSubscriber.assertTerminated();\n  NbpSubscriber.assertNoErrors();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 84,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 290,
        "startColumnNumber" : 8,
        "endLineNumber" : 290,
        "endColumnNumber" : 41
      },
      "nodeContext" : "NbpSubscriber.assertTerminated();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.observers.TestObserver<java.lang.Integer>"
  }, {
    "nodeContext" : "NbpSubscriber",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 291,
      "startColumnNumber" : 8,
      "endLineNumber" : 291,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 291,
        "startColumnNumber" : 8,
        "endLineNumber" : 291,
        "endColumnNumber" : 38
      },
      "nodeContext" : "NbpSubscriber.assertNoErrors()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 291,
        "startColumnNumber" : 8,
        "endLineNumber" : 291,
        "endColumnNumber" : 39
      },
      "nodeContext" : "NbpSubscriber.assertNoErrors();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 279,
        "startColumnNumber" : 75,
        "endLineNumber" : 292,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestScheduler scheduler=new TestScheduler();\n  TestObserver<Integer> NbpSubscriber=new TestObserver<Integer>();\n  Observable.merge(Observable.just(1),Observable.just(2).delay(10,TimeUnit.MILLISECONDS,scheduler)).debounce(20,TimeUnit.MILLISECONDS,scheduler).take(1).subscribe(NbpSubscriber);\n  scheduler.advanceTimeBy(30,TimeUnit.MILLISECONDS);\n  NbpSubscriber.assertValue(2);\n  NbpSubscriber.assertTerminated();\n  NbpSubscriber.assertNoErrors();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 646,
        "startLineNumber" : 278,
        "startColumnNumber" : 4,
        "endLineNumber" : 292,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void debounceWithTimeBackpressure() throws InterruptedException {\n  TestScheduler scheduler=new TestScheduler();\n  TestObserver<Integer> NbpSubscriber=new TestObserver<Integer>();\n  Observable.merge(Observable.just(1),Observable.just(2).delay(10,TimeUnit.MILLISECONDS,scheduler)).debounce(20,TimeUnit.MILLISECONDS,scheduler).take(1).subscribe(NbpSubscriber);\n  scheduler.advanceTimeBy(30,TimeUnit.MILLISECONDS);\n  NbpSubscriber.assertValue(2);\n  NbpSubscriber.assertTerminated();\n  NbpSubscriber.assertNoErrors();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 84,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 291,
        "startColumnNumber" : 8,
        "endLineNumber" : 291,
        "endColumnNumber" : 39
      },
      "nodeContext" : "NbpSubscriber.assertNoErrors();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.observers.TestObserver<java.lang.Integer>"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 285,
    "startColumnNumber" : 75,
    "endLineNumber" : 285,
    "endColumnNumber" : 88
  }, {
    "charLength" : 13,
    "startLineNumber" : 289,
    "startColumnNumber" : 8,
    "endLineNumber" : 289,
    "endColumnNumber" : 21
  }, {
    "charLength" : 13,
    "startLineNumber" : 290,
    "startColumnNumber" : 8,
    "endLineNumber" : 290,
    "endColumnNumber" : 21
  }, {
    "charLength" : 13,
    "startLineNumber" : 291,
    "startColumnNumber" : 8,
    "endLineNumber" : 291,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}