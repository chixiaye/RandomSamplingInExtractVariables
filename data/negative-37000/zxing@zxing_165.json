{
  "id" : 165,
  "expression" : "bitsToNotRead",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/common/BitSource.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "bitsToNotRead",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 67,
      "startColumnNumber" : 43,
      "endLineNumber" : 67,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 67,
        "startColumnNumber" : 17,
        "endLineNumber" : 67,
        "endColumnNumber" : 56
      },
      "nodeContext" : "(0xFF >> (8 - toRead)) << bitsToNotRead",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 67,
        "startColumnNumber" : 10,
        "endLineNumber" : 67,
        "endColumnNumber" : 56
      },
      "nodeContext" : "mask=(0xFF >> (8 - toRead)) << bitsToNotRead",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 67,
        "startColumnNumber" : 6,
        "endLineNumber" : 67,
        "endColumnNumber" : 57
      },
      "nodeContext" : "int mask=(0xFF >> (8 - toRead)) << bitsToNotRead;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 411,
        "startLineNumber" : 63,
        "startColumnNumber" : 23,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int bitsLeft=8 - bitOffset;\n  int toRead=numBits < bitsLeft ? numBits : bitsLeft;\n  int bitsToNotRead=bitsLeft - toRead;\n  int mask=(0xFF >> (8 - toRead)) << bitsToNotRead;\n  result=(bytes[byteOffset] & mask) >> bitsToNotRead;\n  numBits-=toRead;\n  bitOffset+=toRead;\n  if (bitOffset == 8) {\n    bitOffset=0;\n    byteOffset++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 430,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (bitOffset > 0) {\n  int bitsLeft=8 - bitOffset;\n  int toRead=numBits < bitsLeft ? numBits : bitsLeft;\n  int bitsToNotRead=bitsLeft - toRead;\n  int mask=(0xFF >> (8 - toRead)) << bitsToNotRead;\n  result=(bytes[byteOffset] & mask) >> bitsToNotRead;\n  numBits-=toRead;\n  bitOffset+=toRead;\n  if (bitOffset == 8) {\n    bitOffset=0;\n    byteOffset++;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 73,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1136,
        "startLineNumber" : 55,
        "startColumnNumber" : 35,
        "endLineNumber" : 95,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (numBits < 1 || numBits > 32) {\n    throw new IllegalArgumentException();\n  }\n  int result=0;\n  if (bitOffset > 0) {\n    int bitsLeft=8 - bitOffset;\n    int toRead=numBits < bitsLeft ? numBits : bitsLeft;\n    int bitsToNotRead=bitsLeft - toRead;\n    int mask=(0xFF >> (8 - toRead)) << bitsToNotRead;\n    result=(bytes[byteOffset] & mask) >> bitsToNotRead;\n    numBits-=toRead;\n    bitOffset+=toRead;\n    if (bitOffset == 8) {\n      bitOffset=0;\n      byteOffset++;\n    }\n  }\n  if (numBits > 0) {\n    while (numBits >= 8) {\n      result=(result << 8) | (bytes[byteOffset] & 0xFF);\n      byteOffset++;\n      numBits-=8;\n    }\n    if (numBits > 0) {\n      int bitsToNotRead=8 - numBits;\n      int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n      result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n      bitOffset+=numBits;\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 168,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1415,
        "startLineNumber" : 49,
        "startColumnNumber" : 2,
        "endLineNumber" : 95,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * @param numBits number of bits to read\n * @return int representing the bits read. The bits will appear as the least-significantbits of the int\n * @throws IllegalArgumentException if numBits isn't in [1,32]\n */\npublic int readBits(int numBits){\n  if (numBits < 1 || numBits > 32) {\n    throw new IllegalArgumentException();\n  }\n  int result=0;\n  if (bitOffset > 0) {\n    int bitsLeft=8 - bitOffset;\n    int toRead=numBits < bitsLeft ? numBits : bitsLeft;\n    int bitsToNotRead=bitsLeft - toRead;\n    int mask=(0xFF >> (8 - toRead)) << bitsToNotRead;\n    result=(bytes[byteOffset] & mask) >> bitsToNotRead;\n    numBits-=toRead;\n    bitOffset+=toRead;\n    if (bitOffset == 8) {\n      bitOffset=0;\n      byteOffset++;\n    }\n  }\n  if (numBits > 0) {\n    while (numBits >= 8) {\n      result=(result << 8) | (bytes[byteOffset] & 0xFF);\n      byteOffset++;\n      numBits-=8;\n    }\n    if (numBits > 0) {\n      int bitsToNotRead=8 - numBits;\n      int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n      result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n      bitOffset+=numBits;\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 67,
        "startColumnNumber" : 6,
        "endLineNumber" : 67,
        "endColumnNumber" : 57
      },
      "nodeContext" : "int mask=(0xFF >> (8 - toRead)) << bitsToNotRead;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "bitsToNotRead",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 68,
      "startColumnNumber" : 45,
      "endLineNumber" : 68,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 68,
        "startColumnNumber" : 15,
        "endLineNumber" : 68,
        "endColumnNumber" : 58
      },
      "nodeContext" : "(bytes[byteOffset] & mask) >> bitsToNotRead",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 68,
        "startColumnNumber" : 6,
        "endLineNumber" : 68,
        "endColumnNumber" : 58
      },
      "nodeContext" : "result=(bytes[byteOffset] & mask) >> bitsToNotRead",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 68,
        "startColumnNumber" : 6,
        "endLineNumber" : 68,
        "endColumnNumber" : 59
      },
      "nodeContext" : "result=(bytes[byteOffset] & mask) >> bitsToNotRead;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 411,
        "startLineNumber" : 63,
        "startColumnNumber" : 23,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int bitsLeft=8 - bitOffset;\n  int toRead=numBits < bitsLeft ? numBits : bitsLeft;\n  int bitsToNotRead=bitsLeft - toRead;\n  int mask=(0xFF >> (8 - toRead)) << bitsToNotRead;\n  result=(bytes[byteOffset] & mask) >> bitsToNotRead;\n  numBits-=toRead;\n  bitOffset+=toRead;\n  if (bitOffset == 8) {\n    bitOffset=0;\n    byteOffset++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 430,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (bitOffset > 0) {\n  int bitsLeft=8 - bitOffset;\n  int toRead=numBits < bitsLeft ? numBits : bitsLeft;\n  int bitsToNotRead=bitsLeft - toRead;\n  int mask=(0xFF >> (8 - toRead)) << bitsToNotRead;\n  result=(bytes[byteOffset] & mask) >> bitsToNotRead;\n  numBits-=toRead;\n  bitOffset+=toRead;\n  if (bitOffset == 8) {\n    bitOffset=0;\n    byteOffset++;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 73,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1136,
        "startLineNumber" : 55,
        "startColumnNumber" : 35,
        "endLineNumber" : 95,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (numBits < 1 || numBits > 32) {\n    throw new IllegalArgumentException();\n  }\n  int result=0;\n  if (bitOffset > 0) {\n    int bitsLeft=8 - bitOffset;\n    int toRead=numBits < bitsLeft ? numBits : bitsLeft;\n    int bitsToNotRead=bitsLeft - toRead;\n    int mask=(0xFF >> (8 - toRead)) << bitsToNotRead;\n    result=(bytes[byteOffset] & mask) >> bitsToNotRead;\n    numBits-=toRead;\n    bitOffset+=toRead;\n    if (bitOffset == 8) {\n      bitOffset=0;\n      byteOffset++;\n    }\n  }\n  if (numBits > 0) {\n    while (numBits >= 8) {\n      result=(result << 8) | (bytes[byteOffset] & 0xFF);\n      byteOffset++;\n      numBits-=8;\n    }\n    if (numBits > 0) {\n      int bitsToNotRead=8 - numBits;\n      int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n      result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n      bitOffset+=numBits;\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 168,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1415,
        "startLineNumber" : 49,
        "startColumnNumber" : 2,
        "endLineNumber" : 95,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * @param numBits number of bits to read\n * @return int representing the bits read. The bits will appear as the least-significantbits of the int\n * @throws IllegalArgumentException if numBits isn't in [1,32]\n */\npublic int readBits(int numBits){\n  if (numBits < 1 || numBits > 32) {\n    throw new IllegalArgumentException();\n  }\n  int result=0;\n  if (bitOffset > 0) {\n    int bitsLeft=8 - bitOffset;\n    int toRead=numBits < bitsLeft ? numBits : bitsLeft;\n    int bitsToNotRead=bitsLeft - toRead;\n    int mask=(0xFF >> (8 - toRead)) << bitsToNotRead;\n    result=(bytes[byteOffset] & mask) >> bitsToNotRead;\n    numBits-=toRead;\n    bitOffset+=toRead;\n    if (bitOffset == 8) {\n      bitOffset=0;\n      byteOffset++;\n    }\n  }\n  if (numBits > 0) {\n    while (numBits >= 8) {\n      result=(result << 8) | (bytes[byteOffset] & 0xFF);\n      byteOffset++;\n      numBits-=8;\n    }\n    if (numBits > 0) {\n      int bitsToNotRead=8 - numBits;\n      int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n      result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n      bitOffset+=numBits;\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 68,
        "startColumnNumber" : 6,
        "endLineNumber" : 68,
        "endColumnNumber" : 59
      },
      "nodeContext" : "result=(bytes[byteOffset] & mask) >> bitsToNotRead;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "bitsToNotRead",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 88,
      "startColumnNumber" : 28,
      "endLineNumber" : 88,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 88,
        "startColumnNumber" : 20,
        "endLineNumber" : 88,
        "endColumnNumber" : 41
      },
      "nodeContext" : "0xFF >> bitsToNotRead",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 88,
        "startColumnNumber" : 19,
        "endLineNumber" : 88,
        "endColumnNumber" : 42
      },
      "nodeContext" : "(0xFF >> bitsToNotRead)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 88,
        "startColumnNumber" : 19,
        "endLineNumber" : 88,
        "endColumnNumber" : 59
      },
      "nodeContext" : "(0xFF >> bitsToNotRead) << bitsToNotRead",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 88,
        "startColumnNumber" : 12,
        "endLineNumber" : 88,
        "endColumnNumber" : 59
      },
      "nodeContext" : "mask=(0xFF >> bitsToNotRead) << bitsToNotRead",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 60
      },
      "nodeContext" : "int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 232,
        "startLineNumber" : 86,
        "startColumnNumber" : 23,
        "endLineNumber" : 91,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  int bitsToNotRead=8 - numBits;\n  int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n  result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n  bitOffset+=numBits;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 86,
        "startColumnNumber" : 6,
        "endLineNumber" : 91,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (numBits > 0) {\n  int bitsToNotRead=8 - numBits;\n  int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n  result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n  bitOffset+=numBits;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 452,
        "startLineNumber" : 78,
        "startColumnNumber" : 21,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  while (numBits >= 8) {\n    result=(result << 8) | (bytes[byteOffset] & 0xFF);\n    byteOffset++;\n    numBits-=8;\n  }\n  if (numBits > 0) {\n    int bitsToNotRead=8 - numBits;\n    int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n    result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n    bitOffset+=numBits;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 469,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (numBits > 0) {\n  while (numBits >= 8) {\n    result=(result << 8) | (bytes[byteOffset] & 0xFF);\n    byteOffset++;\n    numBits-=8;\n  }\n  if (numBits > 0) {\n    int bitsToNotRead=8 - numBits;\n    int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n    result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n    bitOffset+=numBits;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 74,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1136,
        "startLineNumber" : 55,
        "startColumnNumber" : 35,
        "endLineNumber" : 95,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (numBits < 1 || numBits > 32) {\n    throw new IllegalArgumentException();\n  }\n  int result=0;\n  if (bitOffset > 0) {\n    int bitsLeft=8 - bitOffset;\n    int toRead=numBits < bitsLeft ? numBits : bitsLeft;\n    int bitsToNotRead=bitsLeft - toRead;\n    int mask=(0xFF >> (8 - toRead)) << bitsToNotRead;\n    result=(bytes[byteOffset] & mask) >> bitsToNotRead;\n    numBits-=toRead;\n    bitOffset+=toRead;\n    if (bitOffset == 8) {\n      bitOffset=0;\n      byteOffset++;\n    }\n  }\n  if (numBits > 0) {\n    while (numBits >= 8) {\n      result=(result << 8) | (bytes[byteOffset] & 0xFF);\n      byteOffset++;\n      numBits-=8;\n    }\n    if (numBits > 0) {\n      int bitsToNotRead=8 - numBits;\n      int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n      result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n      bitOffset+=numBits;\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 168,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1415,
        "startLineNumber" : 49,
        "startColumnNumber" : 2,
        "endLineNumber" : 95,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * @param numBits number of bits to read\n * @return int representing the bits read. The bits will appear as the least-significantbits of the int\n * @throws IllegalArgumentException if numBits isn't in [1,32]\n */\npublic int readBits(int numBits){\n  if (numBits < 1 || numBits > 32) {\n    throw new IllegalArgumentException();\n  }\n  int result=0;\n  if (bitOffset > 0) {\n    int bitsLeft=8 - bitOffset;\n    int toRead=numBits < bitsLeft ? numBits : bitsLeft;\n    int bitsToNotRead=bitsLeft - toRead;\n    int mask=(0xFF >> (8 - toRead)) << bitsToNotRead;\n    result=(bytes[byteOffset] & mask) >> bitsToNotRead;\n    numBits-=toRead;\n    bitOffset+=toRead;\n    if (bitOffset == 8) {\n      bitOffset=0;\n      byteOffset++;\n    }\n  }\n  if (numBits > 0) {\n    while (numBits >= 8) {\n      result=(result << 8) | (bytes[byteOffset] & 0xFF);\n      byteOffset++;\n      numBits-=8;\n    }\n    if (numBits > 0) {\n      int bitsToNotRead=8 - numBits;\n      int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n      result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n      bitOffset+=numBits;\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 60
      },
      "nodeContext" : "int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "bitsToNotRead",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 88,
      "startColumnNumber" : 46,
      "endLineNumber" : 88,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 88,
        "startColumnNumber" : 19,
        "endLineNumber" : 88,
        "endColumnNumber" : 59
      },
      "nodeContext" : "(0xFF >> bitsToNotRead) << bitsToNotRead",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 88,
        "startColumnNumber" : 12,
        "endLineNumber" : 88,
        "endColumnNumber" : 59
      },
      "nodeContext" : "mask=(0xFF >> bitsToNotRead) << bitsToNotRead",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 60
      },
      "nodeContext" : "int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 232,
        "startLineNumber" : 86,
        "startColumnNumber" : 23,
        "endLineNumber" : 91,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  int bitsToNotRead=8 - numBits;\n  int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n  result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n  bitOffset+=numBits;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 86,
        "startColumnNumber" : 6,
        "endLineNumber" : 91,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (numBits > 0) {\n  int bitsToNotRead=8 - numBits;\n  int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n  result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n  bitOffset+=numBits;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 452,
        "startLineNumber" : 78,
        "startColumnNumber" : 21,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  while (numBits >= 8) {\n    result=(result << 8) | (bytes[byteOffset] & 0xFF);\n    byteOffset++;\n    numBits-=8;\n  }\n  if (numBits > 0) {\n    int bitsToNotRead=8 - numBits;\n    int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n    result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n    bitOffset+=numBits;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 469,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (numBits > 0) {\n  while (numBits >= 8) {\n    result=(result << 8) | (bytes[byteOffset] & 0xFF);\n    byteOffset++;\n    numBits-=8;\n  }\n  if (numBits > 0) {\n    int bitsToNotRead=8 - numBits;\n    int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n    result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n    bitOffset+=numBits;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 74,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1136,
        "startLineNumber" : 55,
        "startColumnNumber" : 35,
        "endLineNumber" : 95,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (numBits < 1 || numBits > 32) {\n    throw new IllegalArgumentException();\n  }\n  int result=0;\n  if (bitOffset > 0) {\n    int bitsLeft=8 - bitOffset;\n    int toRead=numBits < bitsLeft ? numBits : bitsLeft;\n    int bitsToNotRead=bitsLeft - toRead;\n    int mask=(0xFF >> (8 - toRead)) << bitsToNotRead;\n    result=(bytes[byteOffset] & mask) >> bitsToNotRead;\n    numBits-=toRead;\n    bitOffset+=toRead;\n    if (bitOffset == 8) {\n      bitOffset=0;\n      byteOffset++;\n    }\n  }\n  if (numBits > 0) {\n    while (numBits >= 8) {\n      result=(result << 8) | (bytes[byteOffset] & 0xFF);\n      byteOffset++;\n      numBits-=8;\n    }\n    if (numBits > 0) {\n      int bitsToNotRead=8 - numBits;\n      int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n      result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n      bitOffset+=numBits;\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 168,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1415,
        "startLineNumber" : 49,
        "startColumnNumber" : 2,
        "endLineNumber" : 95,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * @param numBits number of bits to read\n * @return int representing the bits read. The bits will appear as the least-significantbits of the int\n * @throws IllegalArgumentException if numBits isn't in [1,32]\n */\npublic int readBits(int numBits){\n  if (numBits < 1 || numBits > 32) {\n    throw new IllegalArgumentException();\n  }\n  int result=0;\n  if (bitOffset > 0) {\n    int bitsLeft=8 - bitOffset;\n    int toRead=numBits < bitsLeft ? numBits : bitsLeft;\n    int bitsToNotRead=bitsLeft - toRead;\n    int mask=(0xFF >> (8 - toRead)) << bitsToNotRead;\n    result=(bytes[byteOffset] & mask) >> bitsToNotRead;\n    numBits-=toRead;\n    bitOffset+=toRead;\n    if (bitOffset == 8) {\n      bitOffset=0;\n      byteOffset++;\n    }\n  }\n  if (numBits > 0) {\n    while (numBits >= 8) {\n      result=(result << 8) | (bytes[byteOffset] & 0xFF);\n      byteOffset++;\n      numBits-=8;\n    }\n    if (numBits > 0) {\n      int bitsToNotRead=8 - numBits;\n      int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n      result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n      bitOffset+=numBits;\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 60
      },
      "nodeContext" : "int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "bitsToNotRead",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 89,
      "startColumnNumber" : 70,
      "endLineNumber" : 89,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 89,
        "startColumnNumber" : 40,
        "endLineNumber" : 89,
        "endColumnNumber" : 83
      },
      "nodeContext" : "(bytes[byteOffset] & mask) >> bitsToNotRead",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 89,
        "startColumnNumber" : 39,
        "endLineNumber" : 89,
        "endColumnNumber" : 84
      },
      "nodeContext" : "((bytes[byteOffset] & mask) >> bitsToNotRead)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 89,
        "startColumnNumber" : 17,
        "endLineNumber" : 89,
        "endColumnNumber" : 84
      },
      "nodeContext" : "(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 84
      },
      "nodeContext" : "result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 16,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 85
      },
      "nodeContext" : "result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 232,
        "startLineNumber" : 86,
        "startColumnNumber" : 23,
        "endLineNumber" : 91,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  int bitsToNotRead=8 - numBits;\n  int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n  result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n  bitOffset+=numBits;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 86,
        "startColumnNumber" : 6,
        "endLineNumber" : 91,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (numBits > 0) {\n  int bitsToNotRead=8 - numBits;\n  int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n  result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n  bitOffset+=numBits;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 452,
        "startLineNumber" : 78,
        "startColumnNumber" : 21,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  while (numBits >= 8) {\n    result=(result << 8) | (bytes[byteOffset] & 0xFF);\n    byteOffset++;\n    numBits-=8;\n  }\n  if (numBits > 0) {\n    int bitsToNotRead=8 - numBits;\n    int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n    result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n    bitOffset+=numBits;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 469,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (numBits > 0) {\n  while (numBits >= 8) {\n    result=(result << 8) | (bytes[byteOffset] & 0xFF);\n    byteOffset++;\n    numBits-=8;\n  }\n  if (numBits > 0) {\n    int bitsToNotRead=8 - numBits;\n    int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n    result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n    bitOffset+=numBits;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 74,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1136,
        "startLineNumber" : 55,
        "startColumnNumber" : 35,
        "endLineNumber" : 95,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (numBits < 1 || numBits > 32) {\n    throw new IllegalArgumentException();\n  }\n  int result=0;\n  if (bitOffset > 0) {\n    int bitsLeft=8 - bitOffset;\n    int toRead=numBits < bitsLeft ? numBits : bitsLeft;\n    int bitsToNotRead=bitsLeft - toRead;\n    int mask=(0xFF >> (8 - toRead)) << bitsToNotRead;\n    result=(bytes[byteOffset] & mask) >> bitsToNotRead;\n    numBits-=toRead;\n    bitOffset+=toRead;\n    if (bitOffset == 8) {\n      bitOffset=0;\n      byteOffset++;\n    }\n  }\n  if (numBits > 0) {\n    while (numBits >= 8) {\n      result=(result << 8) | (bytes[byteOffset] & 0xFF);\n      byteOffset++;\n      numBits-=8;\n    }\n    if (numBits > 0) {\n      int bitsToNotRead=8 - numBits;\n      int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n      result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n      bitOffset+=numBits;\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 168,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1415,
        "startLineNumber" : 49,
        "startColumnNumber" : 2,
        "endLineNumber" : 95,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * @param numBits number of bits to read\n * @return int representing the bits read. The bits will appear as the least-significantbits of the int\n * @throws IllegalArgumentException if numBits isn't in [1,32]\n */\npublic int readBits(int numBits){\n  if (numBits < 1 || numBits > 32) {\n    throw new IllegalArgumentException();\n  }\n  int result=0;\n  if (bitOffset > 0) {\n    int bitsLeft=8 - bitOffset;\n    int toRead=numBits < bitsLeft ? numBits : bitsLeft;\n    int bitsToNotRead=bitsLeft - toRead;\n    int mask=(0xFF >> (8 - toRead)) << bitsToNotRead;\n    result=(bytes[byteOffset] & mask) >> bitsToNotRead;\n    numBits-=toRead;\n    bitOffset+=toRead;\n    if (bitOffset == 8) {\n      bitOffset=0;\n      byteOffset++;\n    }\n  }\n  if (numBits > 0) {\n    while (numBits >= 8) {\n      result=(result << 8) | (bytes[byteOffset] & 0xFF);\n      byteOffset++;\n      numBits-=8;\n    }\n    if (numBits > 0) {\n      int bitsToNotRead=8 - numBits;\n      int mask=(0xFF >> bitsToNotRead) << bitsToNotRead;\n      result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n      bitOffset+=numBits;\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 85
      },
      "nodeContext" : "result=(result << numBits) | ((bytes[byteOffset] & mask) >> bitsToNotRead);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 9
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 67,
    "startColumnNumber" : 43,
    "endLineNumber" : 67,
    "endColumnNumber" : 56
  }, {
    "charLength" : 13,
    "startLineNumber" : 68,
    "startColumnNumber" : 45,
    "endLineNumber" : 68,
    "endColumnNumber" : 58
  }, {
    "charLength" : 13,
    "startLineNumber" : 88,
    "startColumnNumber" : 28,
    "endLineNumber" : 88,
    "endColumnNumber" : 41
  }, {
    "charLength" : 13,
    "startLineNumber" : 88,
    "startColumnNumber" : 46,
    "endLineNumber" : 88,
    "endColumnNumber" : 59
  }, {
    "charLength" : 13,
    "startLineNumber" : 89,
    "startColumnNumber" : 70,
    "endLineNumber" : 89,
    "endColumnNumber" : 83
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 9
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 0
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 9
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 5
  } ]
}