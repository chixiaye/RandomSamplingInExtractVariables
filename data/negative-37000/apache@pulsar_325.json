{
  "id" : 325,
  "expression" : "new IllegalArgumentException(\"Illegal Log Level, valid values are: \" + Arrays.asList(InfluxDB.LogLevel.values()))",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-io/influxdb/src/main/java/org/apache/pulsar/io/influxdb/v1/InfluxDBBuilderImpl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new IllegalArgumentException(\"Illegal Log Level, valid values are: \" + Arrays.asList(InfluxDB.LogLevel.values()))",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 129,
      "startLineNumber" : 52,
      "startColumnNumber" : 18,
      "endLineNumber" : 53,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 13,
    "astHeight" : 6,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 52,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 61
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Illegal Log Level, valid values are: \" + Arrays.asList(InfluxDB.LogLevel.values()));\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 160,
        "startLineNumber" : 51,
        "startColumnNumber" : 45,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new IllegalArgumentException(\"Illegal Log Level, valid values are: \" + Arrays.asList(InfluxDB.LogLevel.values()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 195,
        "startLineNumber" : 51,
        "startColumnNumber" : 10,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (IllegalArgumentException e) {\n  throw new IllegalArgumentException(\"Illegal Log Level, valid values are: \" + Arrays.asList(InfluxDB.LogLevel.values()));\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 20,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 297,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  logLevel=InfluxDB.LogLevel.valueOf(config.getLogLevel().toUpperCase());\n}\n catch (IllegalArgumentException e) {\n  throw new IllegalArgumentException(\"Illegal Log Level, valid values are: \" + Arrays.asList(InfluxDB.LogLevel.values()));\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 35,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1011,
        "startLineNumber" : 32,
        "startColumnNumber" : 53,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  InfluxDB influxDB;\n  boolean enableAuth=!Strings.isNullOrEmpty(config.getUsername());\n  if (enableAuth) {\n    log.info(\"Authenticating to {} as {}\",config.getInfluxdbUrl(),config.getUsername());\n    influxDB=InfluxDBFactory.connect(config.getInfluxdbUrl(),config.getUsername(),config.getPassword());\n  }\n else {\n    log.info(\"Connecting to {}\",config.getInfluxdbUrl());\n    influxDB=InfluxDBFactory.connect(config.getInfluxdbUrl());\n  }\n  if (config.isGzipEnable()) {\n    influxDB.enableGzip();\n  }\n  InfluxDB.LogLevel logLevel;\n  try {\n    logLevel=InfluxDB.LogLevel.valueOf(config.getLogLevel().toUpperCase());\n  }\n catch (  IllegalArgumentException e) {\n    throw new IllegalArgumentException(\"Illegal Log Level, valid values are: \" + Arrays.asList(InfluxDB.LogLevel.values()));\n  }\n  influxDB.setLogLevel(logLevel);\n  return influxDB;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1074,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public InfluxDB build(InfluxDBSinkConfig config){\n  InfluxDB influxDB;\n  boolean enableAuth=!Strings.isNullOrEmpty(config.getUsername());\n  if (enableAuth) {\n    log.info(\"Authenticating to {} as {}\",config.getInfluxdbUrl(),config.getUsername());\n    influxDB=InfluxDBFactory.connect(config.getInfluxdbUrl(),config.getUsername(),config.getPassword());\n  }\n else {\n    log.info(\"Connecting to {}\",config.getInfluxdbUrl());\n    influxDB=InfluxDBFactory.connect(config.getInfluxdbUrl());\n  }\n  if (config.isGzipEnable()) {\n    influxDB.enableGzip();\n  }\n  InfluxDB.LogLevel logLevel;\n  try {\n    logLevel=InfluxDB.LogLevel.valueOf(config.getLogLevel().toUpperCase());\n  }\n catch (  IllegalArgumentException e) {\n    throw new IllegalArgumentException(\"Illegal Log Level, valid values are: \" + Arrays.asList(InfluxDB.LogLevel.values()));\n  }\n  influxDB.setLogLevel(logLevel);\n  return influxDB;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 133,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 52,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 61
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Illegal Log Level, valid values are: \" + Arrays.asList(InfluxDB.LogLevel.values()));\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 13,
    "type" : "java.lang.IllegalArgumentException"
  } ],
  "positionList" : [ {
    "charLength" : 129,
    "startLineNumber" : 52,
    "startColumnNumber" : 18,
    "endLineNumber" : 53,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}