{
  "id" : 447,
  "expression" : "new KuduRecordCursorWithVirtualRowId(scanner,table,getColumnTypes(),fieldMapping)",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-kudu/src/main/java/com/facebook/presto/kudu/KuduRecordSet.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new KuduRecordCursorWithVirtualRowId(scanner,table,getColumnTypes(),fieldMapping)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 84,
      "startLineNumber" : 82,
      "startColumnNumber" : 19,
      "endLineNumber" : 82,
      "endColumnNumber" : 103
    },
    "astNodeNumber" : 8,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 82,
        "startColumnNumber" : 12,
        "endLineNumber" : 82,
        "endColumnNumber" : 104
      },
      "nodeContext" : "return new KuduRecordCursorWithVirtualRowId(scanner,table,getColumnTypes(),fieldMapping);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 964,
        "startLineNumber" : 60,
        "startColumnNumber" : 13,
        "endLineNumber" : 83,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final int primaryKeyColumnCount=kuduSplit.getPrimaryKeyColumnCount();\n  Map<Integer,Integer> fieldMapping=new HashMap<>();\n  int index=primaryKeyColumnCount;\n  for (int i=0; i < columns.size(); i++) {\n    KuduColumnHandle handle=(KuduColumnHandle)columns.get(i);\n    if (!handle.isVirtualRowId()) {\n      if (handle.getOrdinalPosition() < primaryKeyColumnCount) {\n        fieldMapping.put(i,handle.getOrdinalPosition());\n      }\n else {\n        fieldMapping.put(i,index);\n        index++;\n      }\n    }\n else {\n      fieldMapping.put(i,-1);\n    }\n  }\n  KuduTable table=getTable();\n  return new KuduRecordCursorWithVirtualRowId(scanner,table,getColumnTypes(),fieldMapping);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1084,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 83,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!containsVirtualRowId) {\n  return new KuduRecordCursor(scanner,getColumnTypes());\n}\n else {\n  final int primaryKeyColumnCount=kuduSplit.getPrimaryKeyColumnCount();\n  Map<Integer,Integer> fieldMapping=new HashMap<>();\n  int index=primaryKeyColumnCount;\n  for (int i=0; i < columns.size(); i++) {\n    KuduColumnHandle handle=(KuduColumnHandle)columns.get(i);\n    if (!handle.isVirtualRowId()) {\n      if (handle.getOrdinalPosition() < primaryKeyColumnCount) {\n        fieldMapping.put(i,handle.getOrdinalPosition());\n      }\n else {\n        fieldMapping.put(i,index);\n        index++;\n      }\n    }\n else {\n      fieldMapping.put(i,-1);\n    }\n  }\n  KuduTable table=getTable();\n  return new KuduRecordCursorWithVirtualRowId(scanner,table,getColumnTypes(),fieldMapping);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 120,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1170,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  KuduScanner scanner=clientSession.createScanner(kuduSplit);\n  if (!containsVirtualRowId) {\n    return new KuduRecordCursor(scanner,getColumnTypes());\n  }\n else {\n    final int primaryKeyColumnCount=kuduSplit.getPrimaryKeyColumnCount();\n    Map<Integer,Integer> fieldMapping=new HashMap<>();\n    int index=primaryKeyColumnCount;\n    for (int i=0; i < columns.size(); i++) {\n      KuduColumnHandle handle=(KuduColumnHandle)columns.get(i);\n      if (!handle.isVirtualRowId()) {\n        if (handle.getOrdinalPosition() < primaryKeyColumnCount) {\n          fieldMapping.put(i,handle.getOrdinalPosition());\n        }\n else {\n          fieldMapping.put(i,index);\n          index++;\n        }\n      }\n else {\n        fieldMapping.put(i,-1);\n      }\n    }\n    KuduTable table=getTable();\n    return new KuduRecordCursorWithVirtualRowId(scanner,table,getColumnTypes(),fieldMapping);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1217,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public RecordCursor cursor(){\n  KuduScanner scanner=clientSession.createScanner(kuduSplit);\n  if (!containsVirtualRowId) {\n    return new KuduRecordCursor(scanner,getColumnTypes());\n  }\n else {\n    final int primaryKeyColumnCount=kuduSplit.getPrimaryKeyColumnCount();\n    Map<Integer,Integer> fieldMapping=new HashMap<>();\n    int index=primaryKeyColumnCount;\n    for (int i=0; i < columns.size(); i++) {\n      KuduColumnHandle handle=(KuduColumnHandle)columns.get(i);\n      if (!handle.isVirtualRowId()) {\n        if (handle.getOrdinalPosition() < primaryKeyColumnCount) {\n          fieldMapping.put(i,handle.getOrdinalPosition());\n        }\n else {\n          fieldMapping.put(i,index);\n          index++;\n        }\n      }\n else {\n        fieldMapping.put(i,-1);\n      }\n    }\n    KuduTable table=getTable();\n    return new KuduRecordCursorWithVirtualRowId(scanner,table,getColumnTypes(),fieldMapping);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 137,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 82,
        "startColumnNumber" : 12,
        "endLineNumber" : 82,
        "endColumnNumber" : 104
      },
      "nodeContext" : "return new KuduRecordCursorWithVirtualRowId(scanner,table,getColumnTypes(),fieldMapping);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "com.facebook.presto.kudu.KuduRecordCursorWithVirtualRowId"
  } ],
  "positionList" : [ {
    "charLength" : 84,
    "startLineNumber" : 82,
    "startColumnNumber" : 19,
    "endLineNumber" : 82,
    "endColumnNumber" : 103
  } ],
  "layoutRelationDataList" : [ ]
}