{
  "id" : 18,
  "expression" : "n",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/Conversions/HexToOct.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "n",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 27,
      "startColumnNumber" : 32,
      "endLineNumber" : 27,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 27,
        "startColumnNumber" : 23,
        "endLineNumber" : 27,
        "endColumnNumber" : 33
      },
      "nodeContext" : "16 * val + n",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 27,
        "startColumnNumber" : 17,
        "endLineNumber" : 27,
        "endColumnNumber" : 33
      },
      "nodeContext" : "val=16 * val + n",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 27,
        "startColumnNumber" : 17,
        "endLineNumber" : 27,
        "endColumnNumber" : 34
      },
      "nodeContext" : "val=16 * val + n;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 24,
        "startColumnNumber" : 13,
        "endLineNumber" : 28,
        "endColumnNumber" : 14
      },
      "nodeContext" : "{\n  char a=s.charAt(i);\n  int n=str.indexOf(a);\n  val=16 * val + n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 23,
        "startColumnNumber" : 13,
        "endLineNumber" : 28,
        "endColumnNumber" : 14
      },
      "nodeContext" : "for (int i=0; i < s.length(); i++) {\n  char a=s.charAt(i);\n  int n=str.indexOf(a);\n  val=16 * val + n;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 38,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 335,
        "startLineNumber" : 19,
        "startColumnNumber" : 4,
        "endLineNumber" : 30,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String str=\"0123456789ABCDEF\";\n  s=s.toUpperCase();\n  int val=0;\n  for (int i=0; i < s.length(); i++) {\n    char a=s.charAt(i);\n    int n=str.indexOf(a);\n    val=16 * val + n;\n  }\n  return val;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 545,
        "startLineNumber" : 11,
        "startColumnNumber" : 1,
        "endLineNumber" : 30,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * +\t * This method converts a Hexadecimal number to +\t * a decimal number +\t *  +\t * @param The Hexadecimal Number +\t * @return The Decimal number +\t \n */\npublic static int hex2decimal(String s){\n  String str=\"0123456789ABCDEF\";\n  s=s.toUpperCase();\n  int val=0;\n  for (int i=0; i < s.length(); i++) {\n    char a=s.charAt(i);\n    int n=str.indexOf(a);\n    val=16 * val + n;\n  }\n  return val;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 68,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 27,
        "startColumnNumber" : 17,
        "endLineNumber" : 27,
        "endColumnNumber" : 34
      },
      "nodeContext" : "val=16 * val + n;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 27,
    "startColumnNumber" : 32,
    "endLineNumber" : 27,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}