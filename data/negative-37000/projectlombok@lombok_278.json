{
  "id" : 278,
  "expression" : "dir",
  "projectName" : "projectlombok@lombok",
  "commitID" : "25def866b50860715ee7c315c678b8c3d1ba9b56",
  "filePath" : "/src/installer/lombok/installer/eclipse/EclipseLocation.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "dir",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 192,
      "startColumnNumber" : 29,
      "endLineNumber" : 192,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 192,
        "startColumnNumber" : 20,
        "endLineNumber" : 192,
        "endColumnNumber" : 47
      },
      "nodeContext" : "new File(dir,\"lombok.jar\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 192,
        "startColumnNumber" : 8,
        "endLineNumber" : 192,
        "endColumnNumber" : 47
      },
      "nodeContext" : "lombokJar=new File(dir,\"lombok.jar\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 192,
        "startColumnNumber" : 3,
        "endLineNumber" : 192,
        "endColumnNumber" : 48
      },
      "nodeContext" : "File lombokJar=new File(dir,\"lombok.jar\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 737,
        "startLineNumber" : 191,
        "startColumnNumber" : 38,
        "endLineNumber" : 211,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  File lombokJar=new File(dir,\"lombok.jar\");\n  if (lombokJar.exists()) {\n    if (!lombokJar.delete()) {\n      if (IdeFinder.getOS() == IdeFinder.OS.WINDOWS && Installer.isSelf(lombokJar.getAbsolutePath())) {\n        lombokJarsForWhichCantDeleteSelf.add(lombokJar);\n      }\n else {\n        throw new UninstallException(\"Can't delete \" + lombokJar.getAbsolutePath() + generateWriteErrorMessage(),null);\n      }\n    }\n  }\n{\n    File agentJar=new File(dir,\"lombok.eclipse.agent.jar\");\n    if (agentJar.exists()) {\n      agentJar.delete();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 78,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 773,
        "startLineNumber" : 191,
        "startColumnNumber" : 2,
        "endLineNumber" : 211,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (File dir : getUninstallDirs()) {\n  File lombokJar=new File(dir,\"lombok.jar\");\n  if (lombokJar.exists()) {\n    if (!lombokJar.delete()) {\n      if (IdeFinder.getOS() == IdeFinder.OS.WINDOWS && Installer.isSelf(lombokJar.getAbsolutePath())) {\n        lombokJarsForWhichCantDeleteSelf.add(lombokJar);\n      }\n else {\n        throw new UninstallException(\"Can't delete \" + lombokJar.getAbsolutePath() + generateWriteErrorMessage(),null);\n      }\n    }\n  }\n{\n    File agentJar=new File(dir,\"lombok.eclipse.agent.jar\");\n    if (agentJar.exists()) {\n      agentJar.delete();\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 85,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2801,
        "startLineNumber" : 144,
        "startColumnNumber" : 51,
        "endLineNumber" : 219,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  final List<File> lombokJarsForWhichCantDeleteSelf=new ArrayList<File>();\n  StringBuilder newContents=new StringBuilder();\n  if (eclipseIniPath.exists()) {\n    try {\n      FileInputStream fis=new FileInputStream(eclipseIniPath);\n      try {\n        BufferedReader br=new BufferedReader(new InputStreamReader(fis));\n        String line;\n        while ((line=br.readLine()) != null) {\n          if (JAVA_AGENT_LINE_MATCHER.matcher(line).matches())           continue;\n          Matcher m=BOOTCLASSPATH_LINE_MATCHER.matcher(line);\n          if (m.matches()) {\n            StringBuilder elemBuilder=new StringBuilder();\n            elemBuilder.append(\"-Xbootclasspath/a:\");\n            boolean first=true;\n            for (            String elem : m.group(1).split(Pattern.quote(File.pathSeparator))) {\n              if (elem.toLowerCase().endsWith(\"lombok.jar\"))               continue;\n{\n                if (elem.toLowerCase().endsWith(\"lombok.eclipse.agent.jar\"))                 continue;\n              }\n              if (first)               first=false;\n else               elemBuilder.append(File.pathSeparator);\n              elemBuilder.append(elem);\n            }\n            if (!first)             newContents.append(elemBuilder.toString()).append(OS_NEWLINE);\n            continue;\n          }\n          newContents.append(line).append(OS_NEWLINE);\n        }\n      }\n  finally {\n        fis.close();\n      }\n      FileOutputStream fos=new FileOutputStream(eclipseIniPath);\n      try {\n        fos.write(newContents.toString().getBytes());\n      }\n  finally {\n        fos.close();\n      }\n    }\n catch (    IOException e) {\n      throw new UninstallException(\"Cannot uninstall lombok from \" + name + generateWriteErrorMessage(),e);\n    }\n  }\n  for (  File dir : getUninstallDirs()) {\n    File lombokJar=new File(dir,\"lombok.jar\");\n    if (lombokJar.exists()) {\n      if (!lombokJar.delete()) {\n        if (IdeFinder.getOS() == IdeFinder.OS.WINDOWS && Installer.isSelf(lombokJar.getAbsolutePath())) {\n          lombokJarsForWhichCantDeleteSelf.add(lombokJar);\n        }\n else {\n          throw new UninstallException(\"Can't delete \" + lombokJar.getAbsolutePath() + generateWriteErrorMessage(),null);\n        }\n      }\n    }\n{\n      File agentJar=new File(dir,\"lombok.eclipse.agent.jar\");\n      if (agentJar.exists()) {\n        agentJar.delete();\n      }\n    }\n  }\n  if (!lombokJarsForWhichCantDeleteSelf.isEmpty()) {\n    throw new UninstallException(true,String.format(\"lombok.jar cannot delete itself on windows.\\nHowever, lombok has been uncoupled from your %s.\\n\" + \"You can safely delete this jar file. You can find it at:\\n%s\",getTypeName(),lombokJarsForWhichCantDeleteSelf.get(0).getAbsolutePath()),null);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 341,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3281,
        "startLineNumber" : 133,
        "startColumnNumber" : 1,
        "endLineNumber" : 219,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Uninstalls lombok from this location. It's a no-op if lombok wasn't there in the first place, and it will remove a half-succeeded lombok installation as well.\n * @throws UninstallException If there's an obvious I/O problem that is preventing installation. bugs in the uninstall code will probably throw other exceptions; this is intentional.\n */\n@Override public void uninstall() throws UninstallException {\n  final List<File> lombokJarsForWhichCantDeleteSelf=new ArrayList<File>();\n  StringBuilder newContents=new StringBuilder();\n  if (eclipseIniPath.exists()) {\n    try {\n      FileInputStream fis=new FileInputStream(eclipseIniPath);\n      try {\n        BufferedReader br=new BufferedReader(new InputStreamReader(fis));\n        String line;\n        while ((line=br.readLine()) != null) {\n          if (JAVA_AGENT_LINE_MATCHER.matcher(line).matches())           continue;\n          Matcher m=BOOTCLASSPATH_LINE_MATCHER.matcher(line);\n          if (m.matches()) {\n            StringBuilder elemBuilder=new StringBuilder();\n            elemBuilder.append(\"-Xbootclasspath/a:\");\n            boolean first=true;\n            for (            String elem : m.group(1).split(Pattern.quote(File.pathSeparator))) {\n              if (elem.toLowerCase().endsWith(\"lombok.jar\"))               continue;\n{\n                if (elem.toLowerCase().endsWith(\"lombok.eclipse.agent.jar\"))                 continue;\n              }\n              if (first)               first=false;\n else               elemBuilder.append(File.pathSeparator);\n              elemBuilder.append(elem);\n            }\n            if (!first)             newContents.append(elemBuilder.toString()).append(OS_NEWLINE);\n            continue;\n          }\n          newContents.append(line).append(OS_NEWLINE);\n        }\n      }\n  finally {\n        fis.close();\n      }\n      FileOutputStream fos=new FileOutputStream(eclipseIniPath);\n      try {\n        fos.write(newContents.toString().getBytes());\n      }\n  finally {\n        fos.close();\n      }\n    }\n catch (    IOException e) {\n      throw new UninstallException(\"Cannot uninstall lombok from \" + name + generateWriteErrorMessage(),e);\n    }\n  }\n  for (  File dir : getUninstallDirs()) {\n    File lombokJar=new File(dir,\"lombok.jar\");\n    if (lombokJar.exists()) {\n      if (!lombokJar.delete()) {\n        if (IdeFinder.getOS() == IdeFinder.OS.WINDOWS && Installer.isSelf(lombokJar.getAbsolutePath())) {\n          lombokJarsForWhichCantDeleteSelf.add(lombokJar);\n        }\n else {\n          throw new UninstallException(\"Can't delete \" + lombokJar.getAbsolutePath() + generateWriteErrorMessage(),null);\n        }\n      }\n    }\n{\n      File agentJar=new File(dir,\"lombok.eclipse.agent.jar\");\n      if (agentJar.exists()) {\n        agentJar.delete();\n      }\n    }\n  }\n  if (!lombokJarsForWhichCantDeleteSelf.isEmpty()) {\n    throw new UninstallException(true,String.format(\"lombok.jar cannot delete itself on windows.\\nHowever, lombok has been uncoupled from your %s.\\n\" + \"You can safely delete this jar file. You can find it at:\\n%s\",getTypeName(),lombokJarsForWhichCantDeleteSelf.get(0).getAbsolutePath()),null);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 350,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 192,
        "startColumnNumber" : 3,
        "endLineNumber" : 192,
        "endColumnNumber" : 48
      },
      "nodeContext" : "File lombokJar=new File(dir,\"lombok.jar\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.io.File"
  }, {
    "nodeContext" : "dir",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 206,
      "startColumnNumber" : 29,
      "endLineNumber" : 206,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 206,
        "startColumnNumber" : 20,
        "endLineNumber" : 206,
        "endColumnNumber" : 61
      },
      "nodeContext" : "new File(dir,\"lombok.eclipse.agent.jar\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 206,
        "startColumnNumber" : 9,
        "endLineNumber" : 206,
        "endColumnNumber" : 61
      },
      "nodeContext" : "agentJar=new File(dir,\"lombok.eclipse.agent.jar\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 206,
        "startColumnNumber" : 4,
        "endLineNumber" : 206,
        "endColumnNumber" : 62
      },
      "nodeContext" : "File agentJar=new File(dir,\"lombok.eclipse.agent.jar\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 205,
        "startColumnNumber" : 82,
        "endLineNumber" : 210,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  File agentJar=new File(dir,\"lombok.eclipse.agent.jar\");\n  if (agentJar.exists()) {\n    agentJar.delete();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 737,
        "startLineNumber" : 191,
        "startColumnNumber" : 38,
        "endLineNumber" : 211,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  File lombokJar=new File(dir,\"lombok.jar\");\n  if (lombokJar.exists()) {\n    if (!lombokJar.delete()) {\n      if (IdeFinder.getOS() == IdeFinder.OS.WINDOWS && Installer.isSelf(lombokJar.getAbsolutePath())) {\n        lombokJarsForWhichCantDeleteSelf.add(lombokJar);\n      }\n else {\n        throw new UninstallException(\"Can't delete \" + lombokJar.getAbsolutePath() + generateWriteErrorMessage(),null);\n      }\n    }\n  }\n{\n    File agentJar=new File(dir,\"lombok.eclipse.agent.jar\");\n    if (agentJar.exists()) {\n      agentJar.delete();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 78,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 773,
        "startLineNumber" : 191,
        "startColumnNumber" : 2,
        "endLineNumber" : 211,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (File dir : getUninstallDirs()) {\n  File lombokJar=new File(dir,\"lombok.jar\");\n  if (lombokJar.exists()) {\n    if (!lombokJar.delete()) {\n      if (IdeFinder.getOS() == IdeFinder.OS.WINDOWS && Installer.isSelf(lombokJar.getAbsolutePath())) {\n        lombokJarsForWhichCantDeleteSelf.add(lombokJar);\n      }\n else {\n        throw new UninstallException(\"Can't delete \" + lombokJar.getAbsolutePath() + generateWriteErrorMessage(),null);\n      }\n    }\n  }\n{\n    File agentJar=new File(dir,\"lombok.eclipse.agent.jar\");\n    if (agentJar.exists()) {\n      agentJar.delete();\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 85,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2801,
        "startLineNumber" : 144,
        "startColumnNumber" : 51,
        "endLineNumber" : 219,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  final List<File> lombokJarsForWhichCantDeleteSelf=new ArrayList<File>();\n  StringBuilder newContents=new StringBuilder();\n  if (eclipseIniPath.exists()) {\n    try {\n      FileInputStream fis=new FileInputStream(eclipseIniPath);\n      try {\n        BufferedReader br=new BufferedReader(new InputStreamReader(fis));\n        String line;\n        while ((line=br.readLine()) != null) {\n          if (JAVA_AGENT_LINE_MATCHER.matcher(line).matches())           continue;\n          Matcher m=BOOTCLASSPATH_LINE_MATCHER.matcher(line);\n          if (m.matches()) {\n            StringBuilder elemBuilder=new StringBuilder();\n            elemBuilder.append(\"-Xbootclasspath/a:\");\n            boolean first=true;\n            for (            String elem : m.group(1).split(Pattern.quote(File.pathSeparator))) {\n              if (elem.toLowerCase().endsWith(\"lombok.jar\"))               continue;\n{\n                if (elem.toLowerCase().endsWith(\"lombok.eclipse.agent.jar\"))                 continue;\n              }\n              if (first)               first=false;\n else               elemBuilder.append(File.pathSeparator);\n              elemBuilder.append(elem);\n            }\n            if (!first)             newContents.append(elemBuilder.toString()).append(OS_NEWLINE);\n            continue;\n          }\n          newContents.append(line).append(OS_NEWLINE);\n        }\n      }\n  finally {\n        fis.close();\n      }\n      FileOutputStream fos=new FileOutputStream(eclipseIniPath);\n      try {\n        fos.write(newContents.toString().getBytes());\n      }\n  finally {\n        fos.close();\n      }\n    }\n catch (    IOException e) {\n      throw new UninstallException(\"Cannot uninstall lombok from \" + name + generateWriteErrorMessage(),e);\n    }\n  }\n  for (  File dir : getUninstallDirs()) {\n    File lombokJar=new File(dir,\"lombok.jar\");\n    if (lombokJar.exists()) {\n      if (!lombokJar.delete()) {\n        if (IdeFinder.getOS() == IdeFinder.OS.WINDOWS && Installer.isSelf(lombokJar.getAbsolutePath())) {\n          lombokJarsForWhichCantDeleteSelf.add(lombokJar);\n        }\n else {\n          throw new UninstallException(\"Can't delete \" + lombokJar.getAbsolutePath() + generateWriteErrorMessage(),null);\n        }\n      }\n    }\n{\n      File agentJar=new File(dir,\"lombok.eclipse.agent.jar\");\n      if (agentJar.exists()) {\n        agentJar.delete();\n      }\n    }\n  }\n  if (!lombokJarsForWhichCantDeleteSelf.isEmpty()) {\n    throw new UninstallException(true,String.format(\"lombok.jar cannot delete itself on windows.\\nHowever, lombok has been uncoupled from your %s.\\n\" + \"You can safely delete this jar file. You can find it at:\\n%s\",getTypeName(),lombokJarsForWhichCantDeleteSelf.get(0).getAbsolutePath()),null);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 341,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3281,
        "startLineNumber" : 133,
        "startColumnNumber" : 1,
        "endLineNumber" : 219,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Uninstalls lombok from this location. It's a no-op if lombok wasn't there in the first place, and it will remove a half-succeeded lombok installation as well.\n * @throws UninstallException If there's an obvious I/O problem that is preventing installation. bugs in the uninstall code will probably throw other exceptions; this is intentional.\n */\n@Override public void uninstall() throws UninstallException {\n  final List<File> lombokJarsForWhichCantDeleteSelf=new ArrayList<File>();\n  StringBuilder newContents=new StringBuilder();\n  if (eclipseIniPath.exists()) {\n    try {\n      FileInputStream fis=new FileInputStream(eclipseIniPath);\n      try {\n        BufferedReader br=new BufferedReader(new InputStreamReader(fis));\n        String line;\n        while ((line=br.readLine()) != null) {\n          if (JAVA_AGENT_LINE_MATCHER.matcher(line).matches())           continue;\n          Matcher m=BOOTCLASSPATH_LINE_MATCHER.matcher(line);\n          if (m.matches()) {\n            StringBuilder elemBuilder=new StringBuilder();\n            elemBuilder.append(\"-Xbootclasspath/a:\");\n            boolean first=true;\n            for (            String elem : m.group(1).split(Pattern.quote(File.pathSeparator))) {\n              if (elem.toLowerCase().endsWith(\"lombok.jar\"))               continue;\n{\n                if (elem.toLowerCase().endsWith(\"lombok.eclipse.agent.jar\"))                 continue;\n              }\n              if (first)               first=false;\n else               elemBuilder.append(File.pathSeparator);\n              elemBuilder.append(elem);\n            }\n            if (!first)             newContents.append(elemBuilder.toString()).append(OS_NEWLINE);\n            continue;\n          }\n          newContents.append(line).append(OS_NEWLINE);\n        }\n      }\n  finally {\n        fis.close();\n      }\n      FileOutputStream fos=new FileOutputStream(eclipseIniPath);\n      try {\n        fos.write(newContents.toString().getBytes());\n      }\n  finally {\n        fos.close();\n      }\n    }\n catch (    IOException e) {\n      throw new UninstallException(\"Cannot uninstall lombok from \" + name + generateWriteErrorMessage(),e);\n    }\n  }\n  for (  File dir : getUninstallDirs()) {\n    File lombokJar=new File(dir,\"lombok.jar\");\n    if (lombokJar.exists()) {\n      if (!lombokJar.delete()) {\n        if (IdeFinder.getOS() == IdeFinder.OS.WINDOWS && Installer.isSelf(lombokJar.getAbsolutePath())) {\n          lombokJarsForWhichCantDeleteSelf.add(lombokJar);\n        }\n else {\n          throw new UninstallException(\"Can't delete \" + lombokJar.getAbsolutePath() + generateWriteErrorMessage(),null);\n        }\n      }\n    }\n{\n      File agentJar=new File(dir,\"lombok.eclipse.agent.jar\");\n      if (agentJar.exists()) {\n        agentJar.delete();\n      }\n    }\n  }\n  if (!lombokJarsForWhichCantDeleteSelf.isEmpty()) {\n    throw new UninstallException(true,String.format(\"lombok.jar cannot delete itself on windows.\\nHowever, lombok has been uncoupled from your %s.\\n\" + \"You can safely delete this jar file. You can find it at:\\n%s\",getTypeName(),lombokJarsForWhichCantDeleteSelf.get(0).getAbsolutePath()),null);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 350,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 206,
        "startColumnNumber" : 4,
        "endLineNumber" : 206,
        "endColumnNumber" : 62
      },
      "nodeContext" : "File agentJar=new File(dir,\"lombok.eclipse.agent.jar\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.io.File"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 192,
    "startColumnNumber" : 29,
    "endLineNumber" : 192,
    "endColumnNumber" : 32
  }, {
    "charLength" : 3,
    "startLineNumber" : 206,
    "startColumnNumber" : 29,
    "endLineNumber" : 206,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}