{
  "id" : 139,
  "expression" : "firstChunk.size()",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/main/java/org/mockito/internal/invocation/InvocationsFinder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "firstChunk.size()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 57,
      "startColumnNumber" : 27,
      "endLineNumber" : 57,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 57,
        "endColumnNumber" : 44
      },
      "nodeContext" : "wantedCount != firstChunk.size()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (wantedCount != firstChunk.size()) {\n  return findAllMatchingUnverifiedChunks(invocations,wanted,context);\n}\n else {\n  return firstChunk;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 369,
        "startLineNumber" : 53,
        "startColumnNumber" : 36,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<Invocation> unverified=removeVerifiedInOrder(invocations,context);\n  List<Invocation> firstChunk=getFirstMatchingChunk(wanted,unverified);\n  if (wantedCount != firstChunk.size()) {\n    return findAllMatchingUnverifiedChunks(invocations,wanted,context);\n  }\n else {\n    return firstChunk;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 934,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * some examples how it works: Given invocations sequence: 1,1,2,1 if wanted is 1 and mode is times(2) then returns 1,1 if wanted is 1 and mode is atLeast() then returns 1,1,1 if wanted is 1 and mode is times(x), where x != 2 then returns 1,1,1\n */\npublic static List<Invocation> findMatchingChunk(List<Invocation> invocations,MatchableInvocation wanted,int wantedCount,InOrderContext context){\n  List<Invocation> unverified=removeVerifiedInOrder(invocations,context);\n  List<Invocation> firstChunk=getFirstMatchingChunk(wanted,unverified);\n  if (wantedCount != firstChunk.size()) {\n    return findAllMatchingUnverifiedChunks(invocations,wanted,context);\n  }\n else {\n    return firstChunk;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 57,
        "endColumnNumber" : 44
      },
      "nodeContext" : "wantedCount != firstChunk.size()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 57,
    "startColumnNumber" : 27,
    "endLineNumber" : 57,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}