{
  "id" : 261,
  "expression" : "32",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/graphtheory/TspDynamicProgrammingRecursive.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "32",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 46,
      "startColumnNumber" : 12,
      "endLineNumber" : 46,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 14
      },
      "nodeContext" : "N > 32",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 255,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 103
      },
      "nodeContext" : "if (N > 32) throw new IllegalArgumentException(\"Matrix too large! A matrix that size for the DP TSP problem with a time complexity of\" + \"O(n^2*2^n) requires way too much computation for any modern home computer to handle\");\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 879,
        "startLineNumber" : 34,
        "startColumnNumber" : 76,
        "endLineNumber" : 54,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.distance=distance;\n  N=distance.length;\n  START_NODE=startNode;\n  if (N <= 2)   throw new IllegalStateException(\"TSP on 0, 1 or 2 nodes doesn't make sense.\");\n  if (N != distance[0].length)   throw new IllegalArgumentException(\"Matrix must be square (N x N)\");\n  if (START_NODE < 0 || START_NODE >= N)   throw new IllegalArgumentException(\"Starting node must be: 0 <= startNode < N\");\n  if (N > 32)   throw new IllegalArgumentException(\"Matrix too large! A matrix that size for the DP TSP problem with a time complexity of\" + \"O(n^2*2^n) requires way too much computation for any modern home computer to handle\");\n  FINISHED_STATE=(1 << N) - 1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 953,
        "startLineNumber" : 34,
        "startColumnNumber" : 2,
        "endLineNumber" : 54,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public TspDynamicProgrammingRecursive(int startNode,double[][] distance){\n  this.distance=distance;\n  N=distance.length;\n  START_NODE=startNode;\n  if (N <= 2)   throw new IllegalStateException(\"TSP on 0, 1 or 2 nodes doesn't make sense.\");\n  if (N != distance[0].length)   throw new IllegalArgumentException(\"Matrix must be square (N x N)\");\n  if (START_NODE < 0 || START_NODE >= N)   throw new IllegalArgumentException(\"Starting node must be: 0 <= startNode < N\");\n  if (N > 32)   throw new IllegalArgumentException(\"Matrix too large! A matrix that size for the DP TSP problem with a time complexity of\" + \"O(n^2*2^n) requires way too much computation for any modern home computer to handle\");\n  FINISHED_STATE=(1 << N) - 1;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 84,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 14
      },
      "nodeContext" : "N > 32",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 46,
    "startColumnNumber" : 12,
    "endLineNumber" : 46,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ ]
}