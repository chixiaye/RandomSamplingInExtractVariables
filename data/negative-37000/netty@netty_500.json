{
  "id" : 500,
  "expression" : "offset",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/buffer/src/test/java/io/netty/buffer/api/tests/BufferSplitTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "offset",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 59,
      "startColumnNumber" : 46,
      "endLineNumber" : 59,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 59,
        "startColumnNumber" : 32,
        "endLineNumber" : 59,
        "endColumnNumber" : 53
      },
      "nodeContext" : "buf.readSplit(offset)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 59,
        "startColumnNumber" : 24,
        "endLineNumber" : 59,
        "endColumnNumber" : 53
      },
      "nodeContext" : "split=buf.readSplit(offset)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,resources]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 59,
        "startColumnNumber" : 17,
        "endLineNumber" : 59,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Buffer split=buf.readSplit(offset)",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 477,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 67,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try (Buffer split=buf.readSplit(offset)){\n  assertEquals(readBytes + offset,split.capacity());\n  assertEquals(split.capacity(),split.writerOffset());\n  assertEquals(readBytes,split.readerOffset());\n  assertEquals(capacity - split.capacity(),buf.capacity());\n  assertEquals(writeBytes - split.capacity(),buf.writerOffset());\n  assertEquals(0,buf.readerOffset());\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 65,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 771,
        "startLineNumber" : 50,
        "startColumnNumber" : 56,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  writeRandomBytes(buf,writeBytes);\n  assertEquals(writeBytes,buf.writerOffset());\n  for (int i=0; i < readBytes; i++) {\n    buf.readByte();\n  }\n  assertEquals(readBytes,buf.readerOffset());\n  try (Buffer split=buf.readSplit(offset)){\n    assertEquals(readBytes + offset,split.capacity());\n    assertEquals(split.capacity(),split.writerOffset());\n    assertEquals(readBytes,split.readerOffset());\n    assertEquals(capacity - split.capacity(),buf.capacity());\n    assertEquals(writeBytes - split.capacity(),buf.writerOffset());\n    assertEquals(0,buf.readerOffset());\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 888,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (BufferAllocator allocator=fixture.createAllocator();Buffer buf=allocator.allocate(capacity)){\n  writeRandomBytes(buf,writeBytes);\n  assertEquals(writeBytes,buf.writerOffset());\n  for (int i=0; i < readBytes; i++) {\n    buf.readByte();\n  }\n  assertEquals(readBytes,buf.readerOffset());\n  try (Buffer split=buf.readSplit(offset)){\n    assertEquals(readBytes + offset,split.capacity());\n    assertEquals(split.capacity(),split.writerOffset());\n    assertEquals(readBytes,split.readerOffset());\n    assertEquals(capacity - split.capacity(),buf.capacity());\n    assertEquals(writeBytes - split.capacity(),buf.writerOffset());\n    assertEquals(0,buf.readerOffset());\n  }\n }\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 119,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 906,
        "startLineNumber" : 48,
        "startColumnNumber" : 101,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try (BufferAllocator allocator=fixture.createAllocator();Buffer buf=allocator.allocate(capacity)){\n    writeRandomBytes(buf,writeBytes);\n    assertEquals(writeBytes,buf.writerOffset());\n    for (int i=0; i < readBytes; i++) {\n      buf.readByte();\n    }\n    assertEquals(readBytes,buf.readerOffset());\n    try (Buffer split=buf.readSplit(offset)){\n      assertEquals(readBytes + offset,split.capacity());\n      assertEquals(split.capacity(),split.writerOffset());\n      assertEquals(readBytes,split.readerOffset());\n      assertEquals(capacity - split.capacity(),buf.capacity());\n      assertEquals(writeBytes - split.capacity(),buf.writerOffset());\n      assertEquals(0,buf.readerOffset());\n    }\n   }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1003,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void readSplit(Fixture fixture,int capacity,int writeBytes,int readBytes,int offset){\n  try (BufferAllocator allocator=fixture.createAllocator();Buffer buf=allocator.allocate(capacity)){\n    writeRandomBytes(buf,writeBytes);\n    assertEquals(writeBytes,buf.writerOffset());\n    for (int i=0; i < readBytes; i++) {\n      buf.readByte();\n    }\n    assertEquals(readBytes,buf.readerOffset());\n    try (Buffer split=buf.readSplit(offset)){\n      assertEquals(readBytes + offset,split.capacity());\n      assertEquals(split.capacity(),split.writerOffset());\n      assertEquals(readBytes,split.readerOffset());\n      assertEquals(capacity - split.capacity(),buf.capacity());\n      assertEquals(writeBytes - split.capacity(),buf.writerOffset());\n      assertEquals(0,buf.readerOffset());\n    }\n   }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,resources]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 59,
        "startColumnNumber" : 17,
        "endLineNumber" : 59,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Buffer split=buf.readSplit(offset)",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "offset",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 60,
      "startColumnNumber" : 41,
      "endLineNumber" : 60,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 60,
        "startColumnNumber" : 29,
        "endLineNumber" : 60,
        "endColumnNumber" : 47
      },
      "nodeContext" : "readBytes + offset",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 60,
        "startColumnNumber" : 16,
        "endLineNumber" : 60,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertEquals(readBytes + offset,split.capacity())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 60,
        "startColumnNumber" : 16,
        "endLineNumber" : 60,
        "endColumnNumber" : 67
      },
      "nodeContext" : "assertEquals(readBytes + offset,split.capacity());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 434,
        "startLineNumber" : 59,
        "startColumnNumber" : 55,
        "endLineNumber" : 67,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  assertEquals(readBytes + offset,split.capacity());\n  assertEquals(split.capacity(),split.writerOffset());\n  assertEquals(readBytes,split.readerOffset());\n  assertEquals(capacity - split.capacity(),buf.capacity());\n  assertEquals(writeBytes - split.capacity(),buf.writerOffset());\n  assertEquals(0,buf.readerOffset());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 477,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 67,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try (Buffer split=buf.readSplit(offset)){\n  assertEquals(readBytes + offset,split.capacity());\n  assertEquals(split.capacity(),split.writerOffset());\n  assertEquals(readBytes,split.readerOffset());\n  assertEquals(capacity - split.capacity(),buf.capacity());\n  assertEquals(writeBytes - split.capacity(),buf.writerOffset());\n  assertEquals(0,buf.readerOffset());\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 65,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 771,
        "startLineNumber" : 50,
        "startColumnNumber" : 56,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  writeRandomBytes(buf,writeBytes);\n  assertEquals(writeBytes,buf.writerOffset());\n  for (int i=0; i < readBytes; i++) {\n    buf.readByte();\n  }\n  assertEquals(readBytes,buf.readerOffset());\n  try (Buffer split=buf.readSplit(offset)){\n    assertEquals(readBytes + offset,split.capacity());\n    assertEquals(split.capacity(),split.writerOffset());\n    assertEquals(readBytes,split.readerOffset());\n    assertEquals(capacity - split.capacity(),buf.capacity());\n    assertEquals(writeBytes - split.capacity(),buf.writerOffset());\n    assertEquals(0,buf.readerOffset());\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 888,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (BufferAllocator allocator=fixture.createAllocator();Buffer buf=allocator.allocate(capacity)){\n  writeRandomBytes(buf,writeBytes);\n  assertEquals(writeBytes,buf.writerOffset());\n  for (int i=0; i < readBytes; i++) {\n    buf.readByte();\n  }\n  assertEquals(readBytes,buf.readerOffset());\n  try (Buffer split=buf.readSplit(offset)){\n    assertEquals(readBytes + offset,split.capacity());\n    assertEquals(split.capacity(),split.writerOffset());\n    assertEquals(readBytes,split.readerOffset());\n    assertEquals(capacity - split.capacity(),buf.capacity());\n    assertEquals(writeBytes - split.capacity(),buf.writerOffset());\n    assertEquals(0,buf.readerOffset());\n  }\n }\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 119,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 906,
        "startLineNumber" : 48,
        "startColumnNumber" : 101,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try (BufferAllocator allocator=fixture.createAllocator();Buffer buf=allocator.allocate(capacity)){\n    writeRandomBytes(buf,writeBytes);\n    assertEquals(writeBytes,buf.writerOffset());\n    for (int i=0; i < readBytes; i++) {\n      buf.readByte();\n    }\n    assertEquals(readBytes,buf.readerOffset());\n    try (Buffer split=buf.readSplit(offset)){\n      assertEquals(readBytes + offset,split.capacity());\n      assertEquals(split.capacity(),split.writerOffset());\n      assertEquals(readBytes,split.readerOffset());\n      assertEquals(capacity - split.capacity(),buf.capacity());\n      assertEquals(writeBytes - split.capacity(),buf.writerOffset());\n      assertEquals(0,buf.readerOffset());\n    }\n   }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1003,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void readSplit(Fixture fixture,int capacity,int writeBytes,int readBytes,int offset){\n  try (BufferAllocator allocator=fixture.createAllocator();Buffer buf=allocator.allocate(capacity)){\n    writeRandomBytes(buf,writeBytes);\n    assertEquals(writeBytes,buf.writerOffset());\n    for (int i=0; i < readBytes; i++) {\n      buf.readByte();\n    }\n    assertEquals(readBytes,buf.readerOffset());\n    try (Buffer split=buf.readSplit(offset)){\n      assertEquals(readBytes + offset,split.capacity());\n      assertEquals(split.capacity(),split.writerOffset());\n      assertEquals(readBytes,split.readerOffset());\n      assertEquals(capacity - split.capacity(),buf.capacity());\n      assertEquals(writeBytes - split.capacity(),buf.writerOffset());\n      assertEquals(0,buf.readerOffset());\n    }\n   }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 60,
        "startColumnNumber" : 16,
        "endLineNumber" : 60,
        "endColumnNumber" : 67
      },
      "nodeContext" : "assertEquals(readBytes + offset,split.capacity());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 59,
    "startColumnNumber" : 46,
    "endLineNumber" : 59,
    "endColumnNumber" : 52
  }, {
    "charLength" : 6,
    "startLineNumber" : 60,
    "startColumnNumber" : 41,
    "endLineNumber" : 60,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}