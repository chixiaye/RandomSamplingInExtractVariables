{
  "id" : 109,
  "expression" : "NUMBER",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-poi/src/main/java/cn/hutool/poi/excel/sax/ExcelSaxUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "NUMBER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 78,
      "startColumnNumber" : 8,
      "endLineNumber" : 78,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 78,
        "startColumnNumber" : 3,
        "endLineNumber" : 78,
        "endColumnNumber" : 15
      },
      "nodeContext" : "case NUMBER:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 966,
        "startLineNumber" : 56,
        "startColumnNumber" : 2,
        "endLineNumber" : 95,
        "endColumnNumber" : 3
      },
      "nodeContext" : "switch (cellDataType) {\ncase BOOL:  result=(value.charAt(0) != '0');\nbreak;\ncase ERROR:result=StrUtil.format(\"\\\\\\\"ERROR: {} \",value);\nbreak;\ncase FORMULA:result=StrUtil.format(\"\\\"{}\\\"\",value);\nbreak;\ncase INLINESTR:result=new XSSFRichTextString(value).toString();\nbreak;\ncase SSTINDEX:try {\nfinal int index=Integer.parseInt(value);\nresult=new XSSFRichTextString(sharedStringsTable.getEntryAt(index)).getString();\n}\n catch (NumberFormatException e) {\nresult=value;\n}\nbreak;\ncase NUMBER:try {\nresult=getNumberValue(value,numFmtString);\n}\n catch (NumberFormatException e) {\nresult=value;\n}\nbreak;\ncase DATE:try {\nresult=getDateValue(value);\n}\n catch (Exception e) {\nresult=value;\n}\nbreak;\ndefault:result=value;\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 134,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 46,
        "startColumnNumber" : 136,
        "endLineNumber" : 97,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (null == value) {\n    return null;\n  }\n  if (null == cellDataType) {\n    cellDataType=CellDataType.NULL;\n  }\n  Object result;\nswitch (cellDataType) {\ncase BOOL:    result=(value.charAt(0) != '0');\n  break;\ncase ERROR:result=StrUtil.format(\"\\\\\\\"ERROR: {} \",value);\nbreak;\ncase FORMULA:result=StrUtil.format(\"\\\"{}\\\"\",value);\nbreak;\ncase INLINESTR:result=new XSSFRichTextString(value).toString();\nbreak;\ncase SSTINDEX:try {\nfinal int index=Integer.parseInt(value);\nresult=new XSSFRichTextString(sharedStringsTable.getEntryAt(index)).getString();\n}\n catch (NumberFormatException e) {\nresult=value;\n}\nbreak;\ncase NUMBER:try {\nresult=getNumberValue(value,numFmtString);\n}\n catch (NumberFormatException e) {\nresult=value;\n}\nbreak;\ncase DATE:try {\nresult=getDateValue(value);\n}\n catch (Exception e) {\nresult=value;\n}\nbreak;\ndefault:result=value;\nbreak;\n}\nreturn result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1488,
        "startLineNumber" : 37,
        "startColumnNumber" : 1,
        "endLineNumber" : 97,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 根据数据类型获取数据\n * @param cellDataType       数据类型枚举\n * @param value              数据值\n * @param sharedStringsTable {@link SharedStringsTable}\n * @param numFmtString       数字格式名\n * @return 数据值\n */\npublic static Object getDataValue(CellDataType cellDataType,String value,SharedStringsTable sharedStringsTable,String numFmtString){\n  if (null == value) {\n    return null;\n  }\n  if (null == cellDataType) {\n    cellDataType=CellDataType.NULL;\n  }\n  Object result;\nswitch (cellDataType) {\ncase BOOL:    result=(value.charAt(0) != '0');\n  break;\ncase ERROR:result=StrUtil.format(\"\\\\\\\"ERROR: {} \",value);\nbreak;\ncase FORMULA:result=StrUtil.format(\"\\\"{}\\\"\",value);\nbreak;\ncase INLINESTR:result=new XSSFRichTextString(value).toString();\nbreak;\ncase SSTINDEX:try {\nfinal int index=Integer.parseInt(value);\nresult=new XSSFRichTextString(sharedStringsTable.getEntryAt(index)).getString();\n}\n catch (NumberFormatException e) {\nresult=value;\n}\nbreak;\ncase NUMBER:try {\nresult=getNumberValue(value,numFmtString);\n}\n catch (NumberFormatException e) {\nresult=value;\n}\nbreak;\ncase DATE:try {\nresult=getDateValue(value);\n}\n catch (Exception e) {\nresult=value;\n}\nbreak;\ndefault:result=value;\nbreak;\n}\nreturn result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 78,
        "startColumnNumber" : 3,
        "endLineNumber" : 78,
        "endColumnNumber" : 15
      },
      "nodeContext" : "case NUMBER:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "cn.hutool.poi.excel.sax.CellDataType"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 78,
    "startColumnNumber" : 8,
    "endLineNumber" : 78,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ ]
}