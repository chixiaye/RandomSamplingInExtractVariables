{
  "id" : 40,
  "expression" : "m_stringOffsets[index]",
  "projectName" : "iBotPeaches@Apktool",
  "commitID" : "719a25afd69d2211259a65d4fce197340cbae819",
  "filePath" : "/src/brut/androlib/res/decoder/StringBlock.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "m_stringOffsets[index]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 95,
      "startColumnNumber" : 21,
      "endLineNumber" : 95,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 95,
        "startColumnNumber" : 12,
        "endLineNumber" : 95,
        "endColumnNumber" : 43
      },
      "nodeContext" : "offset=m_stringOffsets[index]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 95,
        "endColumnNumber" : 44
      },
      "nodeContext" : "int offset=m_stringOffsets[index];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 581,
        "startLineNumber" : 89,
        "startColumnNumber" : 39,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (index < 0 || m_stringOffsets == null || index >= m_stringOffsets.length) {\n    return null;\n  }\n  int offset=m_stringOffsets[index];\n  int length;\n  if (!m_isUTF8) {\n    length=getShort(m_strings,offset) * 2;\n    offset+=2;\n  }\n else {\n    offset+=getVarint(m_strings,offset)[1];\n    int[] varint=getVarint(m_strings,offset);\n    offset+=varint[1];\n    length=varint[0];\n  }\n  return decodeString(offset,length);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 712,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns raw string (without any styling information) at specified index.\n */\npublic String getString(int index){\n  if (index < 0 || m_stringOffsets == null || index >= m_stringOffsets.length) {\n    return null;\n  }\n  int offset=m_stringOffsets[index];\n  int length;\n  if (!m_isUTF8) {\n    length=getShort(m_strings,offset) * 2;\n    offset+=2;\n  }\n else {\n    offset+=getVarint(m_strings,offset)[1];\n    int[] varint=getVarint(m_strings,offset);\n    offset+=varint[1];\n    length=varint[0];\n  }\n  return decodeString(offset,length);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 95,
        "endColumnNumber" : 44
      },
      "nodeContext" : "int offset=m_stringOffsets[index];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 95,
    "startColumnNumber" : 21,
    "endLineNumber" : 95,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}