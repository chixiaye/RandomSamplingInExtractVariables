{
  "id" : 39,
  "expression" : "isEmpty.negate()",
  "projectName" : "winterbe@java8-tutorial",
  "commitID" : "89a257129873974e4beb658115e854649b9204b2",
  "filePath" : "/src/com/winterbe/java8/samples/lambda/Lambda3.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "isEmpty.negate()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 37,
      "startColumnNumber" : 39,
      "endLineNumber" : 37,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 37,
        "startColumnNumber" : 26,
        "endLineNumber" : 37,
        "endColumnNumber" : 55
      },
      "nodeContext" : "isNotEmpty=isEmpty.negate()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Predicate<String> isNotEmpty=isEmpty.negate();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1485,
        "startLineNumber" : 24,
        "startColumnNumber" : 60,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Predicate<String> predicate=(s) -> s.length() > 0;\n  predicate.test(\"foo\");\n  predicate.negate().test(\"foo\");\n  Predicate<Boolean> nonNull=Objects::nonNull;\n  Predicate<Boolean> isNull=Objects::isNull;\n  Predicate<String> isEmpty=String::isEmpty;\n  Predicate<String> isNotEmpty=isEmpty.negate();\n  Function<String,Integer> toInteger=Integer::valueOf;\n  Function<String,String> backToString=toInteger.andThen(String::valueOf);\n  backToString.apply(\"123\");\n  Supplier<Person> personSupplier=Person::new;\n  personSupplier.get();\n  Consumer<Person> greeter=(p) -> System.out.println(\"Hello, \" + p.firstName);\n  greeter.accept(new Person(\"Luke\",\"Skywalker\"));\n  Comparator<Person> comparator=(p1,p2) -> p1.firstName.compareTo(p2.firstName);\n  Person p1=new Person(\"John\",\"Doe\");\n  Person p2=new Person(\"Alice\",\"Wonderland\");\n  comparator.compare(p1,p2);\n  comparator.reversed().compare(p1,p2);\n  Runnable runnable=() -> System.out.println(UUID.randomUUID());\n  runnable.run();\n  Callable<UUID> callable=UUID::randomUUID;\n  callable.call();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 240,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1541,
        "startLineNumber" : 24,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args) throws Exception {\n  Predicate<String> predicate=(s) -> s.length() > 0;\n  predicate.test(\"foo\");\n  predicate.negate().test(\"foo\");\n  Predicate<Boolean> nonNull=Objects::nonNull;\n  Predicate<Boolean> isNull=Objects::isNull;\n  Predicate<String> isEmpty=String::isEmpty;\n  Predicate<String> isNotEmpty=isEmpty.negate();\n  Function<String,Integer> toInteger=Integer::valueOf;\n  Function<String,String> backToString=toInteger.andThen(String::valueOf);\n  backToString.apply(\"123\");\n  Supplier<Person> personSupplier=Person::new;\n  personSupplier.get();\n  Consumer<Person> greeter=(p) -> System.out.println(\"Hello, \" + p.firstName);\n  greeter.accept(new Person(\"Luke\",\"Skywalker\"));\n  Comparator<Person> comparator=(p1,p2) -> p1.firstName.compareTo(p2.firstName);\n  Person p1=new Person(\"John\",\"Doe\");\n  Person p2=new Person(\"Alice\",\"Wonderland\");\n  comparator.compare(p1,p2);\n  comparator.reversed().compare(p1,p2);\n  Runnable runnable=() -> System.out.println(UUID.randomUUID());\n  runnable.run();\n  Callable<UUID> callable=UUID::randomUUID;\n  callable.call();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 253,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Predicate<String> isNotEmpty=isEmpty.negate();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.util.function.Predicate<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 37,
    "startColumnNumber" : 39,
    "endLineNumber" : 37,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}