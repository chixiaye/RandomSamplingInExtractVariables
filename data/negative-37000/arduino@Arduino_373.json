{
  "id" : 373,
  "expression" : "'V'",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/app/src/processing/app/Editor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "'V'",
    "nodeType" : "CharacterLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 1298,
      "startColumnNumber" : 36,
      "endLineNumber" : 1298,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 1298,
        "startColumnNumber" : 11,
        "endLineNumber" : 1298,
        "endColumnNumber" : 40
      },
      "nodeContext" : "newJMenuItem(_(\"Paste\"),'V')",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 1298,
        "startColumnNumber" : 4,
        "endLineNumber" : 1298,
        "endColumnNumber" : 40
      },
      "nodeContext" : "item=newJMenuItem(_(\"Paste\"),'V')",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 1298,
        "startColumnNumber" : 4,
        "endLineNumber" : 1298,
        "endColumnNumber" : 41
      },
      "nodeContext" : "item=newJMenuItem(_(\"Paste\"),'V');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4681,
        "startLineNumber" : 1235,
        "startColumnNumber" : 34,
        "endLineNumber" : 1394,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  JMenu menu=new JMenu(_(\"Edit\"));\n  menu.setName(\"menuEdit\");\n  JMenuItem item;\n  undoItem=newJMenuItem(_(\"Undo\"),'Z');\n  undoItem.setName(\"menuEditUndo\");\n  undoItem.addActionListener(undoAction=new UndoAction());\n  menu.add(undoItem);\n  if (!OSUtils.isMacOS()) {\n    redoItem=newJMenuItem(_(\"Redo\"),'Y');\n  }\n else {\n    redoItem=newJMenuItemShift(_(\"Redo\"),'Z');\n  }\n  redoItem.setName(\"menuEditRedo\");\n  redoItem.addActionListener(redoAction=new RedoAction());\n  menu.add(redoItem);\n  menu.addSeparator();\n  item=newJMenuItem(_(\"Cut\"),'X');\n  item.addActionListener(new ActionListener(){\n    public void actionPerformed(    ActionEvent e){\n      handleCut();\n    }\n  }\n);\n  menu.add(item);\n  item=newJMenuItem(_(\"Copy\"),'C');\n  item.addActionListener(new ActionListener(){\n    public void actionPerformed(    ActionEvent e){\n      textarea.copy();\n    }\n  }\n);\n  menu.add(item);\n  item=newJMenuItemShift(_(\"Copy for Forum\"),'C');\n  item.addActionListener(new ActionListener(){\n    public void actionPerformed(    ActionEvent e){\n      new DiscourseFormat(Editor.this,false).show();\n    }\n  }\n);\n  menu.add(item);\n  item=newJMenuItemAlt(_(\"Copy as HTML\"),'C');\n  item.addActionListener(new ActionListener(){\n    public void actionPerformed(    ActionEvent e){\n      new DiscourseFormat(Editor.this,true).show();\n    }\n  }\n);\n  menu.add(item);\n  item=newJMenuItem(_(\"Paste\"),'V');\n  item.addActionListener(new ActionListener(){\n    public void actionPerformed(    ActionEvent e){\n      textarea.paste();\n      sketch.setModified(true);\n    }\n  }\n);\n  menu.add(item);\n  item=newJMenuItem(_(\"Select All\"),'A');\n  item.addActionListener(new ActionListener(){\n    public void actionPerformed(    ActionEvent e){\n      textarea.selectAll();\n    }\n  }\n);\n  menu.add(item);\n  menu.addSeparator();\n  item=newJMenuItem(_(\"Comment/Uncomment\"),'/');\n  item.addActionListener(new ActionListener(){\n    public void actionPerformed(    ActionEvent e){\n      handleCommentUncomment();\n    }\n  }\n);\n  menu.add(item);\n  item=newJMenuItem(_(\"Increase Indent\"),']');\n  item.addActionListener(new ActionListener(){\n    public void actionPerformed(    ActionEvent e){\n      handleIndentOutdent(true);\n    }\n  }\n);\n  menu.add(item);\n  item=newJMenuItem(_(\"Decrease Indent\"),'[');\n  item.setName(\"menuDecreaseIndent\");\n  item.addActionListener(new ActionListener(){\n    public void actionPerformed(    ActionEvent e){\n      handleIndentOutdent(false);\n    }\n  }\n);\n  menu.add(item);\n  menu.addSeparator();\n  item=newJMenuItem(_(\"Find...\"),'F');\n  item.addActionListener(new ActionListener(){\n    public void actionPerformed(    ActionEvent e){\n      if (find == null) {\n        find=new FindReplace(Editor.this);\n      }\n      if (getSelectedText() != null)       find.setFindText(getSelectedText());\n      find.setLocationRelativeTo(Editor.this);\n      find.setVisible(true);\n    }\n  }\n);\n  menu.add(item);\n  item=newJMenuItem(_(\"Find Next\"),'G');\n  item.addActionListener(new ActionListener(){\n    public void actionPerformed(    ActionEvent e){\n      if (find != null) {\n        find.findNext();\n      }\n    }\n  }\n);\n  menu.add(item);\n  item=newJMenuItemShift(_(\"Find Previous\"),'G');\n  item.addActionListener(new ActionListener(){\n    public void actionPerformed(    ActionEvent e){\n      if (find != null) {\n        find.findPrevious();\n      }\n    }\n  }\n);\n  menu.add(item);\n  item=newJMenuItem(_(\"Use Selection For Find\"),'E');\n  item.addActionListener(new ActionListener(){\n    public void actionPerformed(    ActionEvent e){\n      if (find == null) {\n        find=new FindReplace(Editor.this);\n      }\n      find.setLocationRelativeTo(Editor.this);\n      find.setFindText(getSelectedText());\n    }\n  }\n);\n  menu.add(item);\n  return menu;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 643,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4713,
        "startLineNumber" : 1235,
        "startColumnNumber" : 2,
        "endLineNumber" : 1394,
        "endColumnNumber" : 3
      },
      "nodeContext" : "protected JMenu buildEditMenu(){\n  JMenu menu=new JMenu(_(\"Edit\"));\n  menu.setName(\"menuEdit\");\n  JMenuItem item;\n  undoItem=newJMenuItem(_(\"Undo\"),'Z');\n  undoItem.setName(\"menuEditUndo\");\n  undoItem.addActionListener(undoAction=new UndoAction());\n  menu.add(undoItem);\n  if (!OSUtils.isMacOS()) {\n    redoItem=newJMenuItem(_(\"Redo\"),'Y');\n  }\n else {\n    redoItem=newJMenuItemShift(_(\"Redo\"),'Z');\n  }\n  redoItem.setName(\"menuEditRedo\");\n  redoItem.addActionListener(redoAction=new RedoAction());\n  menu.add(redoItem);\n  menu.addSeparator();\n  item=newJMenuItem(_(\"Cut\"),'X');\n  item.addActionListener(new ActionListener(){\n    public void actionPerformed(    ActionEvent e){\n      handleCut();\n    }\n  }\n);\n  menu.add(item);\n  item=newJMenuItem(_(\"Copy\"),'C');\n  item.addActionListener(new ActionListener(){\n    public void actionPerformed(    ActionEvent e){\n      textarea.copy();\n    }\n  }\n);\n  menu.add(item);\n  item=newJMenuItemShift(_(\"Copy for Forum\"),'C');\n  item.addActionListener(new ActionListener(){\n    public void actionPerformed(    ActionEvent e){\n      new DiscourseFormat(Editor.this,false).show();\n    }\n  }\n);\n  menu.add(item);\n  item=newJMenuItemAlt(_(\"Copy as HTML\"),'C');\n  item.addActionListener(new ActionListener(){\n    public void actionPerformed(    ActionEvent e){\n      new DiscourseFormat(Editor.this,true).show();\n    }\n  }\n);\n  menu.add(item);\n  item=newJMenuItem(_(\"Paste\"),'V');\n  item.addActionListener(new ActionListener(){\n    public void actionPerformed(    ActionEvent e){\n      textarea.paste();\n      sketch.setModified(true);\n    }\n  }\n);\n  menu.add(item);\n  item=newJMenuItem(_(\"Select All\"),'A');\n  item.addActionListener(new ActionListener(){\n    public void actionPerformed(    ActionEvent e){\n      textarea.selectAll();\n    }\n  }\n);\n  menu.add(item);\n  menu.addSeparator();\n  item=newJMenuItem(_(\"Comment/Uncomment\"),'/');\n  item.addActionListener(new ActionListener(){\n    public void actionPerformed(    ActionEvent e){\n      handleCommentUncomment();\n    }\n  }\n);\n  menu.add(item);\n  item=newJMenuItem(_(\"Increase Indent\"),']');\n  item.addActionListener(new ActionListener(){\n    public void actionPerformed(    ActionEvent e){\n      handleIndentOutdent(true);\n    }\n  }\n);\n  menu.add(item);\n  item=newJMenuItem(_(\"Decrease Indent\"),'[');\n  item.setName(\"menuDecreaseIndent\");\n  item.addActionListener(new ActionListener(){\n    public void actionPerformed(    ActionEvent e){\n      handleIndentOutdent(false);\n    }\n  }\n);\n  menu.add(item);\n  menu.addSeparator();\n  item=newJMenuItem(_(\"Find...\"),'F');\n  item.addActionListener(new ActionListener(){\n    public void actionPerformed(    ActionEvent e){\n      if (find == null) {\n        find=new FindReplace(Editor.this);\n      }\n      if (getSelectedText() != null)       find.setFindText(getSelectedText());\n      find.setLocationRelativeTo(Editor.this);\n      find.setVisible(true);\n    }\n  }\n);\n  menu.add(item);\n  item=newJMenuItem(_(\"Find Next\"),'G');\n  item.addActionListener(new ActionListener(){\n    public void actionPerformed(    ActionEvent e){\n      if (find != null) {\n        find.findNext();\n      }\n    }\n  }\n);\n  menu.add(item);\n  item=newJMenuItemShift(_(\"Find Previous\"),'G');\n  item.addActionListener(new ActionListener(){\n    public void actionPerformed(    ActionEvent e){\n      if (find != null) {\n        find.findPrevious();\n      }\n    }\n  }\n);\n  menu.add(item);\n  item=newJMenuItem(_(\"Use Selection For Find\"),'E');\n  item.addActionListener(new ActionListener(){\n    public void actionPerformed(    ActionEvent e){\n      if (find == null) {\n        find=new FindReplace(Editor.this);\n      }\n      find.setLocationRelativeTo(Editor.this);\n      find.setFindText(getSelectedText());\n    }\n  }\n);\n  menu.add(item);\n  return menu;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 648,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 1298,
        "startColumnNumber" : 4,
        "endLineNumber" : 1298,
        "endColumnNumber" : 41
      },
      "nodeContext" : "item=newJMenuItem(_(\"Paste\"),'V');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "char"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 1298,
    "startColumnNumber" : 36,
    "endLineNumber" : 1298,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}