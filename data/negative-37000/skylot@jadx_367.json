{
  "id" : 367,
  "expression" : "wrapInsn",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/main/java/jadx/core/dex/visitors/ReSugarCode.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "wrapInsn",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 121,
      "startColumnNumber" : 6,
      "endLineNumber" : 121,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 121,
        "startColumnNumber" : 6,
        "endLineNumber" : 121,
        "endColumnNumber" : 24
      },
      "nodeContext" : "wrapInsn.getType()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 121,
        "startColumnNumber" : 6,
        "endLineNumber" : 121,
        "endColumnNumber" : 41
      },
      "nodeContext" : "wrapInsn.getType() != InsnType.AGET",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 121,
        "startColumnNumber" : 2,
        "endLineNumber" : 123,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (wrapInsn.getType() != InsnType.AGET) {\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 911,
        "startLineNumber" : 115,
        "startColumnNumber" : 72,
        "endLineNumber" : 151,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  InsnArg arg=insn.getArg(0);\n  if (!arg.isInsnWrap()) {\n    return;\n  }\n  InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n  if (wrapInsn.getType() != InsnType.AGET) {\n    return;\n  }\n  EnumMapInfo enumMapInfo=checkEnumMapAccess(mth.dex(),wrapInsn);\n  if (enumMapInfo == null) {\n    return;\n  }\n  FieldNode enumMapField=enumMapInfo.getMapField();\n  InsnArg invArg=enumMapInfo.getArg();\n  EnumMapAttr.KeyValueMap valueMap=getEnumMap(mth,enumMapField);\n  if (valueMap == null) {\n    return;\n  }\n  Object[] keys=insn.getKeys();\n  for (  Object key : keys) {\n    Object newKey=valueMap.get(key);\n    if (newKey == null) {\n      return;\n    }\n  }\n  if (!insn.replaceArg(arg,invArg)) {\n    return;\n  }\n  for (int i=0; i < keys.length; i++) {\n    keys[i]=valueMap.get(keys[i]);\n  }\n  enumMapField.add(AFlag.DONT_GENERATE);\n  checkAndHideClass(enumMapField.getParentClass());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 168,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 982,
        "startLineNumber" : 115,
        "startColumnNumber" : 1,
        "endLineNumber" : 151,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private static void processEnumSwitch(MethodNode mth,SwitchNode insn){\n  InsnArg arg=insn.getArg(0);\n  if (!arg.isInsnWrap()) {\n    return;\n  }\n  InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n  if (wrapInsn.getType() != InsnType.AGET) {\n    return;\n  }\n  EnumMapInfo enumMapInfo=checkEnumMapAccess(mth.dex(),wrapInsn);\n  if (enumMapInfo == null) {\n    return;\n  }\n  FieldNode enumMapField=enumMapInfo.getMapField();\n  InsnArg invArg=enumMapInfo.getArg();\n  EnumMapAttr.KeyValueMap valueMap=getEnumMap(mth,enumMapField);\n  if (valueMap == null) {\n    return;\n  }\n  Object[] keys=insn.getKeys();\n  for (  Object key : keys) {\n    Object newKey=valueMap.get(key);\n    if (newKey == null) {\n      return;\n    }\n  }\n  if (!insn.replaceArg(arg,invArg)) {\n    return;\n  }\n  for (int i=0; i < keys.length; i++) {\n    keys[i]=valueMap.get(keys[i]);\n  }\n  enumMapField.add(AFlag.DONT_GENERATE);\n  checkAndHideClass(enumMapField.getParentClass());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 181,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 121,
        "startColumnNumber" : 6,
        "endLineNumber" : 121,
        "endColumnNumber" : 41
      },
      "nodeContext" : "wrapInsn.getType() != InsnType.AGET",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "jadx.core.dex.nodes.InsnNode"
  }, {
    "nodeContext" : "wrapInsn",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 124,
      "startColumnNumber" : 58,
      "endLineNumber" : 124,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 124,
        "startColumnNumber" : 28,
        "endLineNumber" : 124,
        "endColumnNumber" : 67
      },
      "nodeContext" : "checkEnumMapAccess(mth.dex(),wrapInsn)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 124,
        "startColumnNumber" : 14,
        "endLineNumber" : 124,
        "endColumnNumber" : 67
      },
      "nodeContext" : "enumMapInfo=checkEnumMapAccess(mth.dex(),wrapInsn)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 124,
        "startColumnNumber" : 2,
        "endLineNumber" : 124,
        "endColumnNumber" : 68
      },
      "nodeContext" : "EnumMapInfo enumMapInfo=checkEnumMapAccess(mth.dex(),wrapInsn);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 911,
        "startLineNumber" : 115,
        "startColumnNumber" : 72,
        "endLineNumber" : 151,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  InsnArg arg=insn.getArg(0);\n  if (!arg.isInsnWrap()) {\n    return;\n  }\n  InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n  if (wrapInsn.getType() != InsnType.AGET) {\n    return;\n  }\n  EnumMapInfo enumMapInfo=checkEnumMapAccess(mth.dex(),wrapInsn);\n  if (enumMapInfo == null) {\n    return;\n  }\n  FieldNode enumMapField=enumMapInfo.getMapField();\n  InsnArg invArg=enumMapInfo.getArg();\n  EnumMapAttr.KeyValueMap valueMap=getEnumMap(mth,enumMapField);\n  if (valueMap == null) {\n    return;\n  }\n  Object[] keys=insn.getKeys();\n  for (  Object key : keys) {\n    Object newKey=valueMap.get(key);\n    if (newKey == null) {\n      return;\n    }\n  }\n  if (!insn.replaceArg(arg,invArg)) {\n    return;\n  }\n  for (int i=0; i < keys.length; i++) {\n    keys[i]=valueMap.get(keys[i]);\n  }\n  enumMapField.add(AFlag.DONT_GENERATE);\n  checkAndHideClass(enumMapField.getParentClass());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 168,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 982,
        "startLineNumber" : 115,
        "startColumnNumber" : 1,
        "endLineNumber" : 151,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private static void processEnumSwitch(MethodNode mth,SwitchNode insn){\n  InsnArg arg=insn.getArg(0);\n  if (!arg.isInsnWrap()) {\n    return;\n  }\n  InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n  if (wrapInsn.getType() != InsnType.AGET) {\n    return;\n  }\n  EnumMapInfo enumMapInfo=checkEnumMapAccess(mth.dex(),wrapInsn);\n  if (enumMapInfo == null) {\n    return;\n  }\n  FieldNode enumMapField=enumMapInfo.getMapField();\n  InsnArg invArg=enumMapInfo.getArg();\n  EnumMapAttr.KeyValueMap valueMap=getEnumMap(mth,enumMapField);\n  if (valueMap == null) {\n    return;\n  }\n  Object[] keys=insn.getKeys();\n  for (  Object key : keys) {\n    Object newKey=valueMap.get(key);\n    if (newKey == null) {\n      return;\n    }\n  }\n  if (!insn.replaceArg(arg,invArg)) {\n    return;\n  }\n  for (int i=0; i < keys.length; i++) {\n    keys[i]=valueMap.get(keys[i]);\n  }\n  enumMapField.add(AFlag.DONT_GENERATE);\n  checkAndHideClass(enumMapField.getParentClass());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 181,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 124,
        "startColumnNumber" : 2,
        "endLineNumber" : 124,
        "endColumnNumber" : 68
      },
      "nodeContext" : "EnumMapInfo enumMapInfo=checkEnumMapAccess(mth.dex(),wrapInsn);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "jadx.core.dex.nodes.InsnNode"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 121,
    "startColumnNumber" : 6,
    "endLineNumber" : 121,
    "endColumnNumber" : 14
  }, {
    "charLength" : 8,
    "startLineNumber" : 124,
    "startColumnNumber" : 58,
    "endLineNumber" : 124,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}