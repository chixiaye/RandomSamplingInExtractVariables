{
  "id" : 274,
  "expression" : "SparseIntArray.EMPTY_INT_ARRAY",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/third-party/aosp-dexutils/src/main/java/com/tencent/tinker/android/utils/SparseIntArray.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "SparseIntArray.EMPTY_INT_ARRAY",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 62,
      "startColumnNumber" : 20,
      "endLineNumber" : 62,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 62,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 50
      },
      "nodeContext" : "mKeys=SparseIntArray.EMPTY_INT_ARRAY",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 62,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 51
      },
      "nodeContext" : "mKeys=SparseIntArray.EMPTY_INT_ARRAY;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 61,
        "startColumnNumber" : 34,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  mKeys=SparseIntArray.EMPTY_INT_ARRAY;\n  mValues=SparseIntArray.EMPTY_INT_ARRAY;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 251,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (initialCapacity == 0) {\n  mKeys=SparseIntArray.EMPTY_INT_ARRAY;\n  mValues=SparseIntArray.EMPTY_INT_ARRAY;\n}\n else {\n  mKeys=new int[initialCapacity];\n  mValues=new int[mKeys.length];\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 286,
        "startLineNumber" : 60,
        "startColumnNumber" : 47,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (initialCapacity == 0) {\n    mKeys=SparseIntArray.EMPTY_INT_ARRAY;\n    mValues=SparseIntArray.EMPTY_INT_ARRAY;\n  }\n else {\n    mKeys=new int[initialCapacity];\n    mValues=new int[mKeys.length];\n  }\n  mSize=0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 691,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Creates a new SparseIntArray containing no mappings that will not require any additional memory allocation to store the specified number of mappings.  If you supply an initial capacity of 0, the sparse array will be initialized with a light-weight representation not requiring any additional array allocations.\n */\npublic SparseIntArray(int initialCapacity){\n  if (initialCapacity == 0) {\n    mKeys=SparseIntArray.EMPTY_INT_ARRAY;\n    mValues=SparseIntArray.EMPTY_INT_ARRAY;\n  }\n else {\n    mKeys=new int[initialCapacity];\n    mValues=new int[mKeys.length];\n  }\n  mSize=0;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 48,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 62,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 51
      },
      "nodeContext" : "mKeys=SparseIntArray.EMPTY_INT_ARRAY;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "int[]"
  }, {
    "nodeContext" : "SparseIntArray.EMPTY_INT_ARRAY",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 63,
      "startColumnNumber" : 22,
      "endLineNumber" : 63,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 63,
        "endColumnNumber" : 52
      },
      "nodeContext" : "mValues=SparseIntArray.EMPTY_INT_ARRAY",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 63,
        "endColumnNumber" : 53
      },
      "nodeContext" : "mValues=SparseIntArray.EMPTY_INT_ARRAY;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 61,
        "startColumnNumber" : 34,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  mKeys=SparseIntArray.EMPTY_INT_ARRAY;\n  mValues=SparseIntArray.EMPTY_INT_ARRAY;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 251,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (initialCapacity == 0) {\n  mKeys=SparseIntArray.EMPTY_INT_ARRAY;\n  mValues=SparseIntArray.EMPTY_INT_ARRAY;\n}\n else {\n  mKeys=new int[initialCapacity];\n  mValues=new int[mKeys.length];\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 286,
        "startLineNumber" : 60,
        "startColumnNumber" : 47,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (initialCapacity == 0) {\n    mKeys=SparseIntArray.EMPTY_INT_ARRAY;\n    mValues=SparseIntArray.EMPTY_INT_ARRAY;\n  }\n else {\n    mKeys=new int[initialCapacity];\n    mValues=new int[mKeys.length];\n  }\n  mSize=0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 691,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Creates a new SparseIntArray containing no mappings that will not require any additional memory allocation to store the specified number of mappings.  If you supply an initial capacity of 0, the sparse array will be initialized with a light-weight representation not requiring any additional array allocations.\n */\npublic SparseIntArray(int initialCapacity){\n  if (initialCapacity == 0) {\n    mKeys=SparseIntArray.EMPTY_INT_ARRAY;\n    mValues=SparseIntArray.EMPTY_INT_ARRAY;\n  }\n else {\n    mKeys=new int[initialCapacity];\n    mValues=new int[mKeys.length];\n  }\n  mSize=0;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 48,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 63,
        "endColumnNumber" : 53
      },
      "nodeContext" : "mValues=SparseIntArray.EMPTY_INT_ARRAY;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "int[]"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 62,
    "startColumnNumber" : 20,
    "endLineNumber" : 62,
    "endColumnNumber" : 50
  }, {
    "charLength" : 30,
    "startLineNumber" : 63,
    "startColumnNumber" : 22,
    "endLineNumber" : 63,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}