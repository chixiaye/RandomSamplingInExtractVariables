{
  "id" : 257,
  "expression" : "SimpMessageHeaderAccessor.wrap(message)",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-messaging/src/main/java/org/springframework/messaging/simp/SimpMessagingTemplate.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "SimpMessageHeaderAccessor.wrap(message)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 39,
      "startLineNumber" : 172,
      "startColumnNumber" : 18,
      "endLineNumber" : 172,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 172,
        "startColumnNumber" : 3,
        "endLineNumber" : 172,
        "endColumnNumber" : 57
      },
      "nodeContext" : "simpAccessor=SimpMessageHeaderAccessor.wrap(message)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 172,
        "startColumnNumber" : 3,
        "endLineNumber" : 172,
        "endColumnNumber" : 58
      },
      "nodeContext" : "simpAccessor=SimpMessageHeaderAccessor.wrap(message);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 171,
        "startColumnNumber" : 7,
        "endLineNumber" : 174,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  simpAccessor=SimpMessageHeaderAccessor.wrap(message);\n  initHeaders(simpAccessor);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 548,
        "startLineNumber" : 157,
        "startColumnNumber" : 2,
        "endLineNumber" : 174,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (simpAccessor != null) {\n  if (simpAccessor.isMutable()) {\n    simpAccessor.setDestination(destination);\n    simpAccessor.setMessageTypeIfNotSet(SimpMessageType.MESSAGE);\n    simpAccessor.setImmutable();\n    sendInternal(message);\n    return;\n  }\n else {\n    simpAccessor=(SimpMessageHeaderAccessor)MessageHeaderAccessor.getMutableAccessor(message);\n    initHeaders(simpAccessor);\n  }\n}\n else {\n  simpAccessor=SimpMessageHeaderAccessor.wrap(message);\n  initHeaders(simpAccessor);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 58,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 976,
        "startLineNumber" : 151,
        "startColumnNumber" : 63,
        "endLineNumber" : 180,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Assert.notNull(destination,\"Destination must not be null\");\n  SimpMessageHeaderAccessor simpAccessor=MessageHeaderAccessor.getAccessor(message,SimpMessageHeaderAccessor.class);\n  if (simpAccessor != null) {\n    if (simpAccessor.isMutable()) {\n      simpAccessor.setDestination(destination);\n      simpAccessor.setMessageTypeIfNotSet(SimpMessageType.MESSAGE);\n      simpAccessor.setImmutable();\n      sendInternal(message);\n      return;\n    }\n else {\n      simpAccessor=(SimpMessageHeaderAccessor)MessageHeaderAccessor.getMutableAccessor(message);\n      initHeaders(simpAccessor);\n    }\n  }\n else {\n    simpAccessor=SimpMessageHeaderAccessor.wrap(message);\n    initHeaders(simpAccessor);\n  }\n  simpAccessor.setDestination(destination);\n  simpAccessor.setMessageTypeIfNotSet(SimpMessageType.MESSAGE);\n  message=MessageBuilder.createMessage(message.getPayload(),simpAccessor.getMessageHeaders());\n  sendInternal(message);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1049,
        "startLineNumber" : 150,
        "startColumnNumber" : 1,
        "endLineNumber" : 180,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected void doSend(String destination,Message<?> message){\n  Assert.notNull(destination,\"Destination must not be null\");\n  SimpMessageHeaderAccessor simpAccessor=MessageHeaderAccessor.getAccessor(message,SimpMessageHeaderAccessor.class);\n  if (simpAccessor != null) {\n    if (simpAccessor.isMutable()) {\n      simpAccessor.setDestination(destination);\n      simpAccessor.setMessageTypeIfNotSet(SimpMessageType.MESSAGE);\n      simpAccessor.setImmutable();\n      sendInternal(message);\n      return;\n    }\n else {\n      simpAccessor=(SimpMessageHeaderAccessor)MessageHeaderAccessor.getMutableAccessor(message);\n      initHeaders(simpAccessor);\n    }\n  }\n else {\n    simpAccessor=SimpMessageHeaderAccessor.wrap(message);\n    initHeaders(simpAccessor);\n  }\n  simpAccessor.setDestination(destination);\n  simpAccessor.setMessageTypeIfNotSet(SimpMessageType.MESSAGE);\n  message=MessageBuilder.createMessage(message.getPayload(),simpAccessor.getMessageHeaders());\n  sendInternal(message);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 121,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 172,
        "startColumnNumber" : 3,
        "endLineNumber" : 172,
        "endColumnNumber" : 58
      },
      "nodeContext" : "simpAccessor=SimpMessageHeaderAccessor.wrap(message);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "org.springframework.messaging.simp.SimpMessageHeaderAccessor"
  } ],
  "positionList" : [ {
    "charLength" : 39,
    "startLineNumber" : 172,
    "startColumnNumber" : 18,
    "endLineNumber" : 172,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}