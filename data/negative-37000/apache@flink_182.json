{
  "id" : 182,
  "expression" : "Address",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-formats/flink-avro/src/test/java/org/apache/flink/formats/avro/AvroDeserializationSchemaTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Address",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 54,
      "startColumnNumber" : 53,
      "endLineNumber" : 54,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 54,
        "startColumnNumber" : 53,
        "endLineNumber" : 54,
        "endColumnNumber" : 77
      },
      "nodeContext" : "Address.getClassSchema()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 54,
        "startColumnNumber" : 32,
        "endLineNumber" : 54,
        "endColumnNumber" : 78
      },
      "nodeContext" : "writeRecord(address,Address.getClassSchema())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 54,
        "startColumnNumber" : 15,
        "endLineNumber" : 54,
        "endColumnNumber" : 78
      },
      "nodeContext" : "encodedAddress=writeRecord(address,Address.getClassSchema())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 79
      },
      "nodeContext" : "byte[] encodedAddress=writeRecord(address,Address.getClassSchema());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 571,
        "startLineNumber" : 50,
        "startColumnNumber" : 46,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DeserializationSchema<GenericRecord> deserializationSchema=AvroDeserializationSchema.forGeneric(address.getSchema());\n  byte[] encodedAddress=writeRecord(address,Address.getClassSchema());\n  GenericRecord genericRecord=deserializationSchema.deserialize(encodedAddress);\n  assertThat(genericRecord.get(\"city\").toString()).isEqualTo(address.getCity());\n  assertThat(genericRecord.get(\"num\")).isEqualTo(address.getNum());\n  assertThat(genericRecord.get(\"state\").toString()).isEqualTo(address.getState());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 623,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test void testGenericRecord() throws Exception {\n  DeserializationSchema<GenericRecord> deserializationSchema=AvroDeserializationSchema.forGeneric(address.getSchema());\n  byte[] encodedAddress=writeRecord(address,Address.getClassSchema());\n  GenericRecord genericRecord=deserializationSchema.deserialize(encodedAddress);\n  assertThat(genericRecord.get(\"city\").toString()).isEqualTo(address.getCity());\n  assertThat(genericRecord.get(\"num\")).isEqualTo(address.getNum());\n  assertThat(genericRecord.get(\"state\").toString()).isEqualTo(address.getState());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 83,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 79
      },
      "nodeContext" : "byte[] encodedAddress=writeRecord(address,Address.getClassSchema());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 54,
    "startColumnNumber" : 53,
    "endLineNumber" : 54,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}