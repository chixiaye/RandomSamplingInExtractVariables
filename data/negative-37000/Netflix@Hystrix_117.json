{
  "id" : 117,
  "expression" : "\"/\"",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-dashboard/src/main/java/com/netflix/hystrix/dashboard/stream/MockStreamServlet.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"/\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 55,
      "startColumnNumber" : 43,
      "endLineNumber" : 55,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 55,
        "startColumnNumber" : 23,
        "endLineNumber" : 55,
        "endColumnNumber" : 51
      },
      "nodeContext" : "filename.replaceAll(\"/\",\"\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 55,
        "endColumnNumber" : 51
      },
      "nodeContext" : "filename=filename.replaceAll(\"/\",\"\")",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 55,
        "endColumnNumber" : 52
      },
      "nodeContext" : "filename=filename.replaceAll(\"/\",\"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 190,
        "startLineNumber" : 52,
        "startColumnNumber" : 15,
        "endLineNumber" : 56,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  filename=filename.replaceAll(\"\\\\.\\\\.\",\"\");\n  filename=filename.replaceAll(\"/\",\"\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 317,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (filename == null) {\n  filename=\"hystrix.stream\";\n}\n else {\n  filename=filename.replaceAll(\"\\\\.\\\\.\",\"\");\n  filename=filename.replaceAll(\"/\",\"\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2231,
        "startLineNumber" : 47,
        "startColumnNumber" : 120,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String filename=request.getParameter(\"file\");\n  if (filename == null) {\n    filename=\"hystrix.stream\";\n  }\n else {\n    filename=filename.replaceAll(\"\\\\.\\\\.\",\"\");\n    filename=filename.replaceAll(\"/\",\"\");\n  }\n  int delay=500;\n  String delayArg=request.getParameter(\"delay\");\n  if (delayArg != null) {\n    delay=Integer.parseInt(delayArg);\n  }\n  int batch=1;\n  String batchArg=request.getParameter(\"batch\");\n  if (batchArg != null) {\n    batch=Integer.parseInt(batchArg);\n  }\n  String data=getFileFromPackage(filename);\n  String lines[]=data.split(\"\\n\");\n  response.setContentType(\"text/event-stream\");\n  response.setCharacterEncoding(\"UTF-8\");\n  int batchCount=0;\n  for (; ; ) {\n    for (    String s : lines) {\n      s=s.trim();\n      if (s.length() > 0) {\n        try {\n          response.getWriter().println(s);\n          response.getWriter().println(\"\");\n          response.getWriter().flush();\n          batchCount++;\n        }\n catch (        Exception e) {\n          logger.warn(\"Exception writing mock data to output.\",e);\n          return;\n        }\n        if (batchCount == batch) {\n          try {\n            Thread.sleep(delay);\n          }\n catch (          InterruptedException e) {\n          }\n          batchCount=0;\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 203,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2451,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @see HttpServlet#doGet(HttpServletRequest request,HttpServletResponse response)\n */\nprotected void doGet(HttpServletRequest request,HttpServletResponse response) throws ServletException, IOException {\n  String filename=request.getParameter(\"file\");\n  if (filename == null) {\n    filename=\"hystrix.stream\";\n  }\n else {\n    filename=filename.replaceAll(\"\\\\.\\\\.\",\"\");\n    filename=filename.replaceAll(\"/\",\"\");\n  }\n  int delay=500;\n  String delayArg=request.getParameter(\"delay\");\n  if (delayArg != null) {\n    delay=Integer.parseInt(delayArg);\n  }\n  int batch=1;\n  String batchArg=request.getParameter(\"batch\");\n  if (batchArg != null) {\n    batch=Integer.parseInt(batchArg);\n  }\n  String data=getFileFromPackage(filename);\n  String lines[]=data.split(\"\\n\");\n  response.setContentType(\"text/event-stream\");\n  response.setCharacterEncoding(\"UTF-8\");\n  int batchCount=0;\n  for (; ; ) {\n    for (    String s : lines) {\n      s=s.trim();\n      if (s.length() > 0) {\n        try {\n          response.getWriter().println(s);\n          response.getWriter().println(\"\");\n          response.getWriter().flush();\n          batchCount++;\n        }\n catch (        Exception e) {\n          logger.warn(\"Exception writing mock data to output.\",e);\n          return;\n        }\n        if (batchCount == batch) {\n          try {\n            Thread.sleep(delay);\n          }\n catch (          InterruptedException e) {\n          }\n          batchCount=0;\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 220,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 55,
        "endColumnNumber" : 52
      },
      "nodeContext" : "filename=filename.replaceAll(\"/\",\"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 55,
    "startColumnNumber" : 43,
    "endLineNumber" : 55,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}