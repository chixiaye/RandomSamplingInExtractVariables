{
  "id" : 462,
  "expression" : "lastPartCount != 0",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/main/java/cn/hutool/core/text/StrSpliter.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "lastPartCount != 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 470,
      "startColumnNumber" : 6,
      "endLineNumber" : 470,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 470,
        "startColumnNumber" : 2,
        "endLineNumber" : 472,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (lastPartCount != 0) {\n  fixPart=1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 489,
        "startLineNumber" : 466,
        "startColumnNumber" : 59,
        "endLineNumber" : 483,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int partCount=str.length() / len;\n  int lastPartCount=str.length() % len;\n  int fixPart=0;\n  if (lastPartCount != 0) {\n    fixPart=1;\n  }\n  final String[] strs=new String[partCount + fixPart];\n  for (int i=0; i < partCount + fixPart; i++) {\n    if (i == partCount + fixPart - 1 && lastPartCount != 0) {\n      strs[i]=str.substring(i * len,i * len + lastPartCount);\n    }\n else {\n      strs[i]=str.substring(i * len,i * len + len);\n    }\n  }\n  return strs;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 659,
        "startLineNumber" : 459,
        "startColumnNumber" : 1,
        "endLineNumber" : 483,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 根据给定长度，将给定字符串截取为多个部分\n * @param str 字符串\n * @param len 每一个小节的长度\n * @return 截取后的字符串数组\n */\npublic static String[] splitByLength(String str,int len){\n  int partCount=str.length() / len;\n  int lastPartCount=str.length() % len;\n  int fixPart=0;\n  if (lastPartCount != 0) {\n    fixPart=1;\n  }\n  final String[] strs=new String[partCount + fixPart];\n  for (int i=0; i < partCount + fixPart; i++) {\n    if (i == partCount + fixPart - 1 && lastPartCount != 0) {\n      strs[i]=str.substring(i * len,i * len + lastPartCount);\n    }\n else {\n      strs[i]=str.substring(i * len,i * len + len);\n    }\n  }\n  return strs;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 470,
        "startColumnNumber" : 2,
        "endLineNumber" : 472,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (lastPartCount != 0) {\n  fixPart=1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  }, {
    "nodeContext" : "lastPartCount != 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 476,
      "startColumnNumber" : 39,
      "endLineNumber" : 476,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 476,
        "startColumnNumber" : 7,
        "endLineNumber" : 476,
        "endColumnNumber" : 57
      },
      "nodeContext" : "i == partCount + fixPart - 1 && lastPartCount != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 194,
        "startLineNumber" : 476,
        "startColumnNumber" : 3,
        "endLineNumber" : 480,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (i == partCount + fixPart - 1 && lastPartCount != 0) {\n  strs[i]=str.substring(i * len,i * len + lastPartCount);\n}\n else {\n  strs[i]=str.substring(i * len,i * len + len);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 205,
        "startLineNumber" : 475,
        "startColumnNumber" : 48,
        "endLineNumber" : 481,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (i == partCount + fixPart - 1 && lastPartCount != 0) {\n    strs[i]=str.substring(i * len,i * len + lastPartCount);\n  }\n else {\n    strs[i]=str.substring(i * len,i * len + len);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 251,
        "startLineNumber" : 475,
        "startColumnNumber" : 2,
        "endLineNumber" : 481,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < partCount + fixPart; i++) {\n  if (i == partCount + fixPart - 1 && lastPartCount != 0) {\n    strs[i]=str.substring(i * len,i * len + lastPartCount);\n  }\n else {\n    strs[i]=str.substring(i * len,i * len + len);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 60,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 489,
        "startLineNumber" : 466,
        "startColumnNumber" : 59,
        "endLineNumber" : 483,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int partCount=str.length() / len;\n  int lastPartCount=str.length() % len;\n  int fixPart=0;\n  if (lastPartCount != 0) {\n    fixPart=1;\n  }\n  final String[] strs=new String[partCount + fixPart];\n  for (int i=0; i < partCount + fixPart; i++) {\n    if (i == partCount + fixPart - 1 && lastPartCount != 0) {\n      strs[i]=str.substring(i * len,i * len + lastPartCount);\n    }\n else {\n      strs[i]=str.substring(i * len,i * len + len);\n    }\n  }\n  return strs;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 659,
        "startLineNumber" : 459,
        "startColumnNumber" : 1,
        "endLineNumber" : 483,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 根据给定长度，将给定字符串截取为多个部分\n * @param str 字符串\n * @param len 每一个小节的长度\n * @return 截取后的字符串数组\n */\npublic static String[] splitByLength(String str,int len){\n  int partCount=str.length() / len;\n  int lastPartCount=str.length() % len;\n  int fixPart=0;\n  if (lastPartCount != 0) {\n    fixPart=1;\n  }\n  final String[] strs=new String[partCount + fixPart];\n  for (int i=0; i < partCount + fixPart; i++) {\n    if (i == partCount + fixPart - 1 && lastPartCount != 0) {\n      strs[i]=str.substring(i * len,i * len + lastPartCount);\n    }\n else {\n      strs[i]=str.substring(i * len,i * len + len);\n    }\n  }\n  return strs;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 476,
        "startColumnNumber" : 7,
        "endLineNumber" : 476,
        "endColumnNumber" : 57
      },
      "nodeContext" : "i == partCount + fixPart - 1 && lastPartCount != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 470,
    "startColumnNumber" : 6,
    "endLineNumber" : 470,
    "endColumnNumber" : 24
  }, {
    "charLength" : 18,
    "startLineNumber" : 476,
    "startColumnNumber" : 39,
    "endLineNumber" : 476,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}