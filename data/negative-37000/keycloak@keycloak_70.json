{
  "id" : 70,
  "expression" : "i",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/model/infinispan/src/main/java/org/keycloak/models/sessions/infinispan/initializer/InitializerState.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 83,
      "startColumnNumber" : 36,
      "endLineNumber" : 83,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 83,
        "startColumnNumber" : 36,
        "endLineNumber" : 83,
        "endColumnNumber" : 73
      },
      "nodeContext" : "i < (segmentToLoad + maxSegmentCount)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 83,
        "startColumnNumber" : 36,
        "endLineNumber" : 83,
        "endColumnNumber" : 94
      },
      "nodeContext" : "i < (segmentToLoad + maxSegmentCount) && i < segmentsCount",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=segmentToLoad; i < (segmentToLoad + maxSegmentCount) && i < segmentsCount; i++) {\n  if (!segments.get(i)) {\n    result.add(i);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 275,
        "startLineNumber" : 81,
        "startColumnNumber" : 83,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<Integer> result=new LinkedList<>();\n  for (int i=segmentToLoad; i < (segmentToLoad + maxSegmentCount) && i < segmentsCount; i++) {\n    if (!segments.get(i)) {\n      result.add(i);\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 598,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Return next un-finished segments in the next row of segments.\n * @param segmentToLoad The segment we are loading\n * @param maxSegmentCount The max segment to load\n * @return The list of segments to work on this step\n */\npublic List<Integer> getSegmentsToLoad(int segmentToLoad,int maxSegmentCount){\n  List<Integer> result=new LinkedList<>();\n  for (int i=segmentToLoad; i < (segmentToLoad + maxSegmentCount) && i < segmentsCount; i++) {\n    if (!segments.get(i)) {\n      result.add(i);\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 61,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 83,
        "startColumnNumber" : 36,
        "endLineNumber" : 83,
        "endColumnNumber" : 94
      },
      "nodeContext" : "i < (segmentToLoad + maxSegmentCount) && i < segmentsCount",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 83,
      "startColumnNumber" : 77,
      "endLineNumber" : 83,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 83,
        "startColumnNumber" : 77,
        "endLineNumber" : 83,
        "endColumnNumber" : 94
      },
      "nodeContext" : "i < segmentsCount",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 83,
        "startColumnNumber" : 36,
        "endLineNumber" : 83,
        "endColumnNumber" : 94
      },
      "nodeContext" : "i < (segmentToLoad + maxSegmentCount) && i < segmentsCount",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=segmentToLoad; i < (segmentToLoad + maxSegmentCount) && i < segmentsCount; i++) {\n  if (!segments.get(i)) {\n    result.add(i);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 275,
        "startLineNumber" : 81,
        "startColumnNumber" : 83,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<Integer> result=new LinkedList<>();\n  for (int i=segmentToLoad; i < (segmentToLoad + maxSegmentCount) && i < segmentsCount; i++) {\n    if (!segments.get(i)) {\n      result.add(i);\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 598,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Return next un-finished segments in the next row of segments.\n * @param segmentToLoad The segment we are loading\n * @param maxSegmentCount The max segment to load\n * @return The list of segments to work on this step\n */\npublic List<Integer> getSegmentsToLoad(int segmentToLoad,int maxSegmentCount){\n  List<Integer> result=new LinkedList<>();\n  for (int i=segmentToLoad; i < (segmentToLoad + maxSegmentCount) && i < segmentsCount; i++) {\n    if (!segments.get(i)) {\n      result.add(i);\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 61,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 83,
        "startColumnNumber" : 36,
        "endLineNumber" : 83,
        "endColumnNumber" : 94
      },
      "nodeContext" : "i < (segmentToLoad + maxSegmentCount) && i < segmentsCount",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 84,
      "startColumnNumber" : 30,
      "endLineNumber" : 84,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 84,
        "startColumnNumber" : 17,
        "endLineNumber" : 84,
        "endColumnNumber" : 32
      },
      "nodeContext" : "segments.get(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 84,
        "startColumnNumber" : 16,
        "endLineNumber" : 84,
        "endColumnNumber" : 32
      },
      "nodeContext" : "!segments.get(i)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 86,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!segments.get(i)) {\n  result.add(i);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 83,
        "startColumnNumber" : 101,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!segments.get(i)) {\n    result.add(i);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=segmentToLoad; i < (segmentToLoad + maxSegmentCount) && i < segmentsCount; i++) {\n  if (!segments.get(i)) {\n    result.add(i);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 275,
        "startLineNumber" : 81,
        "startColumnNumber" : 83,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<Integer> result=new LinkedList<>();\n  for (int i=segmentToLoad; i < (segmentToLoad + maxSegmentCount) && i < segmentsCount; i++) {\n    if (!segments.get(i)) {\n      result.add(i);\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 598,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Return next un-finished segments in the next row of segments.\n * @param segmentToLoad The segment we are loading\n * @param maxSegmentCount The max segment to load\n * @return The list of segments to work on this step\n */\npublic List<Integer> getSegmentsToLoad(int segmentToLoad,int maxSegmentCount){\n  List<Integer> result=new LinkedList<>();\n  for (int i=segmentToLoad; i < (segmentToLoad + maxSegmentCount) && i < segmentsCount; i++) {\n    if (!segments.get(i)) {\n      result.add(i);\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 61,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 84,
        "startColumnNumber" : 16,
        "endLineNumber" : 84,
        "endColumnNumber" : 32
      },
      "nodeContext" : "!segments.get(i)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 85,
      "startColumnNumber" : 27,
      "endLineNumber" : 85,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 85,
        "startColumnNumber" : 16,
        "endLineNumber" : 85,
        "endColumnNumber" : 29
      },
      "nodeContext" : "result.add(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 85,
        "startColumnNumber" : 16,
        "endLineNumber" : 85,
        "endColumnNumber" : 30
      },
      "nodeContext" : "result.add(i);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 84,
        "startColumnNumber" : 34,
        "endLineNumber" : 86,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  result.add(i);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 86,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!segments.get(i)) {\n  result.add(i);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 83,
        "startColumnNumber" : 101,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!segments.get(i)) {\n    result.add(i);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=segmentToLoad; i < (segmentToLoad + maxSegmentCount) && i < segmentsCount; i++) {\n  if (!segments.get(i)) {\n    result.add(i);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 275,
        "startLineNumber" : 81,
        "startColumnNumber" : 83,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<Integer> result=new LinkedList<>();\n  for (int i=segmentToLoad; i < (segmentToLoad + maxSegmentCount) && i < segmentsCount; i++) {\n    if (!segments.get(i)) {\n      result.add(i);\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 598,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Return next un-finished segments in the next row of segments.\n * @param segmentToLoad The segment we are loading\n * @param maxSegmentCount The max segment to load\n * @return The list of segments to work on this step\n */\npublic List<Integer> getSegmentsToLoad(int segmentToLoad,int maxSegmentCount){\n  List<Integer> result=new LinkedList<>();\n  for (int i=segmentToLoad; i < (segmentToLoad + maxSegmentCount) && i < segmentsCount; i++) {\n    if (!segments.get(i)) {\n      result.add(i);\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 61,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 85,
        "startColumnNumber" : 16,
        "endLineNumber" : 85,
        "endColumnNumber" : 30
      },
      "nodeContext" : "result.add(i);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 83,
    "startColumnNumber" : 36,
    "endLineNumber" : 83,
    "endColumnNumber" : 37
  }, {
    "charLength" : 1,
    "startLineNumber" : 83,
    "startColumnNumber" : 77,
    "endLineNumber" : 83,
    "endColumnNumber" : 78
  }, {
    "charLength" : 1,
    "startLineNumber" : 84,
    "startColumnNumber" : 30,
    "endLineNumber" : 84,
    "endColumnNumber" : 31
  }, {
    "charLength" : 1,
    "startLineNumber" : 85,
    "startColumnNumber" : 27,
    "endLineNumber" : 85,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}