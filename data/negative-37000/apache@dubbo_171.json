{
  "id" : 171,
  "expression" : "!multicastSocket.isClosed()",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-registry/dubbo-registry-multicast/src/main/java/org/apache/dubbo/registry/multicast/MulticastRegistry.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!multicastSocket.isClosed()",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 110,
      "startColumnNumber" : 27,
      "endLineNumber" : 110,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 829,
        "startLineNumber" : 110,
        "startColumnNumber" : 20,
        "endLineNumber" : 125,
        "endColumnNumber" : 21
      },
      "nodeContext" : "while (!multicastSocket.isClosed()) {\n  try {\n    multicastSocket.receive(recv);\n    String msg=new String(recv.getData()).trim();\n    int i=msg.indexOf('\\n');\n    if (i > 0) {\n      msg=msg.substring(0,i).trim();\n    }\n    MulticastRegistry.this.receive(msg,(InetSocketAddress)recv.getSocketAddress());\n    Arrays.fill(buf,(byte)0);\n  }\n catch (  Throwable e) {\n    if (!multicastSocket.isClosed()) {\n      logger.error(e.getMessage(),e);\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 89,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1001,
        "startLineNumber" : 107,
        "startColumnNumber" : 34,
        "endLineNumber" : 126,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  byte[] buf=new byte[2048];\n  DatagramPacket recv=new DatagramPacket(buf,buf.length);\n  while (!multicastSocket.isClosed()) {\n    try {\n      multicastSocket.receive(recv);\n      String msg=new String(recv.getData()).trim();\n      int i=msg.indexOf('\\n');\n      if (i > 0) {\n        msg=msg.substring(0,i).trim();\n      }\n      MulticastRegistry.this.receive(msg,(InetSocketAddress)recv.getSocketAddress());\n      Arrays.fill(buf,(byte)0);\n    }\n catch (    Throwable e) {\n      if (!multicastSocket.isClosed()) {\n        logger.error(e.getMessage(),e);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1046,
        "startLineNumber" : 106,
        "startColumnNumber" : 16,
        "endLineNumber" : 126,
        "endColumnNumber" : 17
      },
      "nodeContext" : "@Override public void run(){\n  byte[] buf=new byte[2048];\n  DatagramPacket recv=new DatagramPacket(buf,buf.length);\n  while (!multicastSocket.isClosed()) {\n    try {\n      multicastSocket.receive(recv);\n      String msg=new String(recv.getData()).trim();\n      int i=msg.indexOf('\\n');\n      if (i > 0) {\n        msg=msg.substring(0,i).trim();\n      }\n      MulticastRegistry.this.receive(msg,(InetSocketAddress)recv.getSocketAddress());\n      Arrays.fill(buf,(byte)0);\n    }\n catch (    Throwable e) {\n      if (!multicastSocket.isClosed()) {\n        logger.error(e.getMessage(),e);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 119,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 829,
        "startLineNumber" : 110,
        "startColumnNumber" : 20,
        "endLineNumber" : 125,
        "endColumnNumber" : 21
      },
      "nodeContext" : "while (!multicastSocket.isClosed()) {\n  try {\n    multicastSocket.receive(recv);\n    String msg=new String(recv.getData()).trim();\n    int i=msg.indexOf('\\n');\n    if (i > 0) {\n      msg=msg.substring(0,i).trim();\n    }\n    MulticastRegistry.this.receive(msg,(InetSocketAddress)recv.getSocketAddress());\n    Arrays.fill(buf,(byte)0);\n  }\n catch (  Throwable e) {\n    if (!multicastSocket.isClosed()) {\n      logger.error(e.getMessage(),e);\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 89,
      "astHeight" : 11
    },
    "tokenLength" : 2,
    "type" : "boolean"
  }, {
    "nodeContext" : "!multicastSocket.isClosed()",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 121,
      "startColumnNumber" : 32,
      "endLineNumber" : 121,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 121,
        "startColumnNumber" : 28,
        "endLineNumber" : 123,
        "endColumnNumber" : 29
      },
      "nodeContext" : "if (!multicastSocket.isClosed()) {\n  logger.error(e.getMessage(),e);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 120,
        "startColumnNumber" : 46,
        "endLineNumber" : 124,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  if (!multicastSocket.isClosed()) {\n    logger.error(e.getMessage(),e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 209,
        "startLineNumber" : 120,
        "startColumnNumber" : 26,
        "endLineNumber" : 124,
        "endColumnNumber" : 25
      },
      "nodeContext" : "catch (Throwable e) {\n  if (!multicastSocket.isClosed()) {\n    logger.error(e.getMessage(),e);\n  }\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 743,
        "startLineNumber" : 111,
        "startColumnNumber" : 24,
        "endLineNumber" : 124,
        "endColumnNumber" : 25
      },
      "nodeContext" : "try {\n  multicastSocket.receive(recv);\n  String msg=new String(recv.getData()).trim();\n  int i=msg.indexOf('\\n');\n  if (i > 0) {\n    msg=msg.substring(0,i).trim();\n  }\n  MulticastRegistry.this.receive(msg,(InetSocketAddress)recv.getSocketAddress());\n  Arrays.fill(buf,(byte)0);\n}\n catch (Throwable e) {\n  if (!multicastSocket.isClosed()) {\n    logger.error(e.getMessage(),e);\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 83,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 793,
        "startLineNumber" : 110,
        "startColumnNumber" : 56,
        "endLineNumber" : 125,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  try {\n    multicastSocket.receive(recv);\n    String msg=new String(recv.getData()).trim();\n    int i=msg.indexOf('\\n');\n    if (i > 0) {\n      msg=msg.substring(0,i).trim();\n    }\n    MulticastRegistry.this.receive(msg,(InetSocketAddress)recv.getSocketAddress());\n    Arrays.fill(buf,(byte)0);\n  }\n catch (  Throwable e) {\n    if (!multicastSocket.isClosed()) {\n      logger.error(e.getMessage(),e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 829,
        "startLineNumber" : 110,
        "startColumnNumber" : 20,
        "endLineNumber" : 125,
        "endColumnNumber" : 21
      },
      "nodeContext" : "while (!multicastSocket.isClosed()) {\n  try {\n    multicastSocket.receive(recv);\n    String msg=new String(recv.getData()).trim();\n    int i=msg.indexOf('\\n');\n    if (i > 0) {\n      msg=msg.substring(0,i).trim();\n    }\n    MulticastRegistry.this.receive(msg,(InetSocketAddress)recv.getSocketAddress());\n    Arrays.fill(buf,(byte)0);\n  }\n catch (  Throwable e) {\n    if (!multicastSocket.isClosed()) {\n      logger.error(e.getMessage(),e);\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 89,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1001,
        "startLineNumber" : 107,
        "startColumnNumber" : 34,
        "endLineNumber" : 126,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  byte[] buf=new byte[2048];\n  DatagramPacket recv=new DatagramPacket(buf,buf.length);\n  while (!multicastSocket.isClosed()) {\n    try {\n      multicastSocket.receive(recv);\n      String msg=new String(recv.getData()).trim();\n      int i=msg.indexOf('\\n');\n      if (i > 0) {\n        msg=msg.substring(0,i).trim();\n      }\n      MulticastRegistry.this.receive(msg,(InetSocketAddress)recv.getSocketAddress());\n      Arrays.fill(buf,(byte)0);\n    }\n catch (    Throwable e) {\n      if (!multicastSocket.isClosed()) {\n        logger.error(e.getMessage(),e);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1046,
        "startLineNumber" : 106,
        "startColumnNumber" : 16,
        "endLineNumber" : 126,
        "endColumnNumber" : 17
      },
      "nodeContext" : "@Override public void run(){\n  byte[] buf=new byte[2048];\n  DatagramPacket recv=new DatagramPacket(buf,buf.length);\n  while (!multicastSocket.isClosed()) {\n    try {\n      multicastSocket.receive(recv);\n      String msg=new String(recv.getData()).trim();\n      int i=msg.indexOf('\\n');\n      if (i > 0) {\n        msg=msg.substring(0,i).trim();\n      }\n      MulticastRegistry.this.receive(msg,(InetSocketAddress)recv.getSocketAddress());\n      Arrays.fill(buf,(byte)0);\n    }\n catch (    Throwable e) {\n      if (!multicastSocket.isClosed()) {\n        logger.error(e.getMessage(),e);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 119,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 121,
        "startColumnNumber" : 28,
        "endLineNumber" : 123,
        "endColumnNumber" : 29
      },
      "nodeContext" : "if (!multicastSocket.isClosed()) {\n  logger.error(e.getMessage(),e);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 110,
    "startColumnNumber" : 27,
    "endLineNumber" : 110,
    "endColumnNumber" : 54
  }, {
    "charLength" : 27,
    "startLineNumber" : 121,
    "startColumnNumber" : 32,
    "endLineNumber" : 121,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}