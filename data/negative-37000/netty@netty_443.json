{
  "id" : 443,
  "expression" : "NetUtil.ipv4AddressToInt((Inet4Address)dstAddr.getAddress())",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/handler/src/main/java/io/netty/handler/pcap/PcapWriteHandler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "NetUtil.ipv4AddressToInt((Inet4Address)dstAddr.getAddress())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 61,
      "startLineNumber" : 331,
      "startColumnNumber" : 24,
      "endLineNumber" : 331,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 210,
        "startLineNumber" : 329,
        "startColumnNumber" : 16,
        "endLineNumber" : 331,
        "endColumnNumber" : 86
      },
      "nodeContext" : "IPPacket.writeTCPv4(ipBuf,tcpBuf,NetUtil.ipv4AddressToInt((Inet4Address)srcAddr.getAddress()),NetUtil.ipv4AddressToInt((Inet4Address)dstAddr.getAddress()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 211,
        "startLineNumber" : 329,
        "startColumnNumber" : 16,
        "endLineNumber" : 331,
        "endColumnNumber" : 87
      },
      "nodeContext" : "IPPacket.writeTCPv4(ipBuf,tcpBuf,NetUtil.ipv4AddressToInt((Inet4Address)srcAddr.getAddress()),NetUtil.ipv4AddressToInt((Inet4Address)dstAddr.getAddress()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 310,
        "startLineNumber" : 328,
        "startColumnNumber" : 110,
        "endLineNumber" : 334,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  IPPacket.writeTCPv4(ipBuf,tcpBuf,NetUtil.ipv4AddressToInt((Inet4Address)srcAddr.getAddress()),NetUtil.ipv4AddressToInt((Inet4Address)dstAddr.getAddress()));\n  EthernetPacket.writeIPv4(ethernetBuf,ipBuf);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1022,
        "startLineNumber" : 328,
        "startColumnNumber" : 12,
        "endLineNumber" : 344,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (srcAddr.getAddress() instanceof Inet4Address && dstAddr.getAddress() instanceof Inet4Address) {\n  IPPacket.writeTCPv4(ipBuf,tcpBuf,NetUtil.ipv4AddressToInt((Inet4Address)srcAddr.getAddress()),NetUtil.ipv4AddressToInt((Inet4Address)dstAddr.getAddress()));\n  EthernetPacket.writeIPv4(ethernetBuf,ipBuf);\n}\n else if (srcAddr.getAddress() instanceof Inet6Address && dstAddr.getAddress() instanceof Inet6Address) {\n  IPPacket.writeTCPv6(ipBuf,tcpBuf,srcAddr.getAddress().getAddress(),dstAddr.getAddress().getAddress());\n  EthernetPacket.writeIPv6(ethernetBuf,ipBuf);\n}\n else {\n  logger.error(\"Source and Destination IP Address versions are not same. Source Address: {}, \" + \"Destination Address: {}\",srcAddr.getAddress(),dstAddr.getAddress());\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 97,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1145,
        "startLineNumber" : 327,
        "startColumnNumber" : 12,
        "endLineNumber" : 348,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (srcAddr.getAddress() instanceof Inet4Address && dstAddr.getAddress() instanceof Inet4Address) {\n    IPPacket.writeTCPv4(ipBuf,tcpBuf,NetUtil.ipv4AddressToInt((Inet4Address)srcAddr.getAddress()),NetUtil.ipv4AddressToInt((Inet4Address)dstAddr.getAddress()));\n    EthernetPacket.writeIPv4(ethernetBuf,ipBuf);\n  }\n else   if (srcAddr.getAddress() instanceof Inet6Address && dstAddr.getAddress() instanceof Inet6Address) {\n    IPPacket.writeTCPv6(ipBuf,tcpBuf,srcAddr.getAddress().getAddress(),dstAddr.getAddress().getAddress());\n    EthernetPacket.writeIPv6(ethernetBuf,ipBuf);\n  }\n else {\n    logger.error(\"Source and Destination IP Address versions are not same. Source Address: {}, \" + \"Destination Address: {}\",srcAddr.getAddress(),dstAddr.getAddress());\n    return;\n  }\n  pCapWriter.writePacket(pcap,ethernetBuf);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1425,
        "startLineNumber" : 327,
        "startColumnNumber" : 8,
        "endLineNumber" : 355,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (srcAddr.getAddress() instanceof Inet4Address && dstAddr.getAddress() instanceof Inet4Address) {\n    IPPacket.writeTCPv4(ipBuf,tcpBuf,NetUtil.ipv4AddressToInt((Inet4Address)srcAddr.getAddress()),NetUtil.ipv4AddressToInt((Inet4Address)dstAddr.getAddress()));\n    EthernetPacket.writeIPv4(ethernetBuf,ipBuf);\n  }\n else   if (srcAddr.getAddress() instanceof Inet6Address && dstAddr.getAddress() instanceof Inet6Address) {\n    IPPacket.writeTCPv6(ipBuf,tcpBuf,srcAddr.getAddress().getAddress(),dstAddr.getAddress().getAddress());\n    EthernetPacket.writeIPv6(ethernetBuf,ipBuf);\n  }\n else {\n    logger.error(\"Source and Destination IP Address versions are not same. Source Address: {}, \" + \"Destination Address: {}\",srcAddr.getAddress(),dstAddr.getAddress());\n    return;\n  }\n  pCapWriter.writePacket(pcap,ethernetBuf);\n}\n catch (IOException ex) {\n  logger.error(\"Caught Exception While Writing Packet into Pcap\",ex);\n  ctx.fireExceptionCaught(ex);\n}\n finally {\n  ipBuf.release();\n  ethernetBuf.release();\n  pcap.release();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 135,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1608,
        "startLineNumber" : 321,
        "startColumnNumber" : 96,
        "endLineNumber" : 356,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ByteBuf ipBuf=byteBufAllocator.buffer();\n  ByteBuf ethernetBuf=byteBufAllocator.buffer();\n  ByteBuf pcap=byteBufAllocator.buffer();\n  try {\n    if (srcAddr.getAddress() instanceof Inet4Address && dstAddr.getAddress() instanceof Inet4Address) {\n      IPPacket.writeTCPv4(ipBuf,tcpBuf,NetUtil.ipv4AddressToInt((Inet4Address)srcAddr.getAddress()),NetUtil.ipv4AddressToInt((Inet4Address)dstAddr.getAddress()));\n      EthernetPacket.writeIPv4(ethernetBuf,ipBuf);\n    }\n else     if (srcAddr.getAddress() instanceof Inet6Address && dstAddr.getAddress() instanceof Inet6Address) {\n      IPPacket.writeTCPv6(ipBuf,tcpBuf,srcAddr.getAddress().getAddress(),dstAddr.getAddress().getAddress());\n      EthernetPacket.writeIPv6(ethernetBuf,ipBuf);\n    }\n else {\n      logger.error(\"Source and Destination IP Address versions are not same. Source Address: {}, \" + \"Destination Address: {}\",srcAddr.getAddress(),dstAddr.getAddress());\n      return;\n    }\n    pCapWriter.writePacket(pcap,ethernetBuf);\n  }\n catch (  IOException ex) {\n    logger.error(\"Caught Exception While Writing Packet into Pcap\",ex);\n    ctx.fireExceptionCaught(ex);\n  }\n finally {\n    ipBuf.release();\n    ethernetBuf.release();\n    pcap.release();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2319,
        "startLineNumber" : 311,
        "startColumnNumber" : 4,
        "endLineNumber" : 356,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Write TCP/IP L3 and L2 here.\n * @param srcAddr          {@link InetSocketAddress} Source Address of this Packet\n * @param dstAddr          {@link InetSocketAddress} Destination Address of this Packet\n * @param tcpBuf           {@link ByteBuf} containing TCP L4 Data\n * @param byteBufAllocator {@link ByteBufAllocator} for allocating bytes for TCP/IP L3 and L2 data.\n * @param ctx              {@link ChannelHandlerContext} for {@code fireExceptionCaught}\n */\nprivate void completeTCPWrite(InetSocketAddress srcAddr,InetSocketAddress dstAddr,ByteBuf tcpBuf,ByteBufAllocator byteBufAllocator,ChannelHandlerContext ctx){\n  ByteBuf ipBuf=byteBufAllocator.buffer();\n  ByteBuf ethernetBuf=byteBufAllocator.buffer();\n  ByteBuf pcap=byteBufAllocator.buffer();\n  try {\n    if (srcAddr.getAddress() instanceof Inet4Address && dstAddr.getAddress() instanceof Inet4Address) {\n      IPPacket.writeTCPv4(ipBuf,tcpBuf,NetUtil.ipv4AddressToInt((Inet4Address)srcAddr.getAddress()),NetUtil.ipv4AddressToInt((Inet4Address)dstAddr.getAddress()));\n      EthernetPacket.writeIPv4(ethernetBuf,ipBuf);\n    }\n else     if (srcAddr.getAddress() instanceof Inet6Address && dstAddr.getAddress() instanceof Inet6Address) {\n      IPPacket.writeTCPv6(ipBuf,tcpBuf,srcAddr.getAddress().getAddress(),dstAddr.getAddress().getAddress());\n      EthernetPacket.writeIPv6(ethernetBuf,ipBuf);\n    }\n else {\n      logger.error(\"Source and Destination IP Address versions are not same. Source Address: {}, \" + \"Destination Address: {}\",srcAddr.getAddress(),dstAddr.getAddress());\n      return;\n    }\n    pCapWriter.writePacket(pcap,ethernetBuf);\n  }\n catch (  IOException ex) {\n    logger.error(\"Caught Exception While Writing Packet into Pcap\",ex);\n    ctx.fireExceptionCaught(ex);\n  }\n finally {\n    ipBuf.release();\n    ethernetBuf.release();\n    pcap.release();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 185,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 210,
        "startLineNumber" : 329,
        "startColumnNumber" : 16,
        "endLineNumber" : 331,
        "endColumnNumber" : 86
      },
      "nodeContext" : "IPPacket.writeTCPv4(ipBuf,tcpBuf,NetUtil.ipv4AddressToInt((Inet4Address)srcAddr.getAddress()),NetUtil.ipv4AddressToInt((Inet4Address)dstAddr.getAddress()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 61,
    "startLineNumber" : 331,
    "startColumnNumber" : 24,
    "endLineNumber" : 331,
    "endColumnNumber" : 85
  } ],
  "layoutRelationDataList" : [ ]
}