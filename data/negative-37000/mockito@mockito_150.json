{
  "id" : 150,
  "expression" : "me.getMessage()",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitousage/annotation/WrongSetOfAnnotationsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "me.getMessage()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 36,
      "startColumnNumber" : 34,
      "endLineNumber" : 36,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 36,
        "startColumnNumber" : 12,
        "endLineNumber" : 36,
        "endColumnNumber" : 50
      },
      "nodeContext" : "Assertions.assertThat(me.getMessage())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 36,
        "startColumnNumber" : 12,
        "endLineNumber" : 36,
        "endColumnNumber" : 85
      },
      "nodeContext" : "Assertions.assertThat(me.getMessage()).contains(\"'List' is an interface\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 36,
        "startColumnNumber" : 12,
        "endLineNumber" : 36,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Assertions.assertThat(me.getMessage()).contains(\"'List' is an interface\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 35,
        "startColumnNumber" : 38,
        "endLineNumber" : 37,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Assertions.assertThat(me.getMessage()).contains(\"'List' is an interface\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 35,
        "startColumnNumber" : 10,
        "endLineNumber" : 37,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (MockitoException me) {\n  Assertions.assertThat(me.getMessage()).contains(\"'List' is an interface\");\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 327,
        "startLineNumber" : 29,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  MockitoAnnotations.openMocks(new Object(){\n    @InjectMocks @Spy List<?> mock;\n  }\n);\n  fail();\n}\n catch (MockitoException me) {\n  Assertions.assertThat(me.getMessage()).contains(\"'List' is an interface\");\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 40,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 345,
        "startLineNumber" : 28,
        "startColumnNumber" : 86,
        "endLineNumber" : 38,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    MockitoAnnotations.openMocks(new Object(){\n      @InjectMocks @Spy List<?> mock;\n    }\n);\n    fail();\n  }\n catch (  MockitoException me) {\n    Assertions.assertThat(me.getMessage()).contains(\"'List' is an interface\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 438,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void should_not_allow_Spy_and_InjectMocks_on_interfaces() throws Exception {\n  try {\n    MockitoAnnotations.openMocks(new Object(){\n      @InjectMocks @Spy List<?> mock;\n    }\n);\n    fail();\n  }\n catch (  MockitoException me) {\n    Assertions.assertThat(me.getMessage()).contains(\"'List' is an interface\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 49,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 36,
        "startColumnNumber" : 12,
        "endLineNumber" : 36,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Assertions.assertThat(me.getMessage()).contains(\"'List' is an interface\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 36,
    "startColumnNumber" : 34,
    "endLineNumber" : 36,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}