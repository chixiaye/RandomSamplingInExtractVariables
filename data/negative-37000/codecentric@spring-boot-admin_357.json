{
  "id" : 357,
  "expression" : "ApplicationId.of(\"foo.1\")",
  "projectName" : "codecentric@spring-boot-admin",
  "commitID" : "cc544df47d4bcdf7138ca3e264797778fb39920a",
  "filePath" : "/spring-boot-admin-server/src/test/java/de/codecentric/boot/admin/server/domain/entities/EventSourcingApplicationRepositoryTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ApplicationId.of(\"foo.1\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 71,
      "startColumnNumber" : 54,
      "endLineNumber" : 71,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 71,
        "startColumnNumber" : 35,
        "endLineNumber" : 71,
        "endColumnNumber" : 80
      },
      "nodeContext" : "Application.create(ApplicationId.of(\"foo.1\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 71,
        "startColumnNumber" : 35,
        "endLineNumber" : 72,
        "endColumnNumber" : 108
      },
      "nodeContext" : "Application.create(ApplicationId.of(\"foo.1\")).register(Registration.create(\"foo\",\"http://health\").build())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 71,
        "startColumnNumber" : 20,
        "endLineNumber" : 72,
        "endColumnNumber" : 108
      },
      "nodeContext" : "application1=Application.create(ApplicationId.of(\"foo.1\")).register(Registration.create(\"foo\",\"http://health\").build())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 182,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 109
      },
      "nodeContext" : "Application application1=Application.create(ApplicationId.of(\"foo.1\")).register(Registration.create(\"foo\",\"http://health\").build());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2218,
        "startLineNumber" : 69,
        "startColumnNumber" : 48,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Application application1=Application.create(ApplicationId.of(\"foo.1\")).register(Registration.create(\"foo\",\"http://health\").build());\n  Application application2=Application.create(ApplicationId.of(\"foo.2\")).register(Registration.create(\"foo\",\"http://health\").build());\n  Application application3=Application.create(ApplicationId.of(\"bar\")).register(Registration.create(\"bar\",\"http://health\").build());\n  StepVerifier.create(repository.save(application1)).verifyComplete();\n  StepVerifier.create(repository.save(application2)).verifyComplete();\n  StepVerifier.create(repository.save(application3)).verifyComplete();\n  StepVerifier.create(repository.find(application2.getId())).assertNext(loaded2 -> assertThat(loaded2.getId()).isEqualTo(application2.getId())).verifyComplete();\n  StepVerifier.create(repository.findByName(\"foo\")).recordWith(ArrayList::new).thenConsumeWhile(a -> true).consumeRecordedWith(appsByName -> {\n    assertThat(appsByName.stream().map(Application::getId).collect(Collectors.toList())).containsExactlyInAnyOrder(application1.getId(),application2.getId());\n  }\n).verifyComplete();\n  StepVerifier.create(repository.findAll()).recordWith(ArrayList::new).thenConsumeWhile(a -> true).consumeRecordedWith(allApps -> {\n    assertThat(allApps.stream().map(Application::getId).collect(Collectors.toList())).containsExactlyInAnyOrder(application1.getId(),application2.getId(),application3.getId());\n  }\n).verifyComplete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 225,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2272,
        "startLineNumber" : 68,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void find_methods() throws Exception {\n  Application application1=Application.create(ApplicationId.of(\"foo.1\")).register(Registration.create(\"foo\",\"http://health\").build());\n  Application application2=Application.create(ApplicationId.of(\"foo.2\")).register(Registration.create(\"foo\",\"http://health\").build());\n  Application application3=Application.create(ApplicationId.of(\"bar\")).register(Registration.create(\"bar\",\"http://health\").build());\n  StepVerifier.create(repository.save(application1)).verifyComplete();\n  StepVerifier.create(repository.save(application2)).verifyComplete();\n  StepVerifier.create(repository.save(application3)).verifyComplete();\n  StepVerifier.create(repository.find(application2.getId())).assertNext(loaded2 -> assertThat(loaded2.getId()).isEqualTo(application2.getId())).verifyComplete();\n  StepVerifier.create(repository.findByName(\"foo\")).recordWith(ArrayList::new).thenConsumeWhile(a -> true).consumeRecordedWith(appsByName -> {\n    assertThat(appsByName.stream().map(Application::getId).collect(Collectors.toList())).containsExactlyInAnyOrder(application1.getId(),application2.getId());\n  }\n).verifyComplete();\n  StepVerifier.create(repository.findAll()).recordWith(ArrayList::new).thenConsumeWhile(a -> true).consumeRecordedWith(allApps -> {\n    assertThat(allApps.stream().map(Application::getId).collect(Collectors.toList())).containsExactlyInAnyOrder(application1.getId(),application2.getId(),application3.getId());\n  }\n).verifyComplete();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 233,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 71,
        "startColumnNumber" : 35,
        "endLineNumber" : 71,
        "endColumnNumber" : 80
      },
      "nodeContext" : "Application.create(ApplicationId.of(\"foo.1\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 4,
    "type" : "de.codecentric.boot.admin.server.domain.values.ApplicationId"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 71,
    "startColumnNumber" : 54,
    "endLineNumber" : 71,
    "endColumnNumber" : 79
  } ],
  "layoutRelationDataList" : [ ]
}