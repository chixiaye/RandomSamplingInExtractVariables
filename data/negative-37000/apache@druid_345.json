{
  "id" : 345,
  "expression" : "60L",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/processing/src/test/java/org/apache/druid/segment/WrappingDimensionSelectorTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "60L",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 31,
      "startColumnNumber" : 50,
      "endLineNumber" : 31,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayInitializer,expressions]",
      "nodePosition" : {
        "charLength" : 4,
        "startLineNumber" : 31,
        "startColumnNumber" : 49,
        "endLineNumber" : 31,
        "endColumnNumber" : 53
      },
      "nodeContext" : "-60L",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 31,
        "startColumnNumber" : 28,
        "endLineNumber" : 31,
        "endColumnNumber" : 54
      },
      "nodeContext" : "{24L,null,50L,0L,-60L}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 31,
        "startColumnNumber" : 18,
        "endLineNumber" : 31,
        "endColumnNumber" : 54
      },
      "nodeContext" : "new Long[]{24L,null,50L,0L,-60L}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 31,
        "startColumnNumber" : 11,
        "endLineNumber" : 31,
        "endColumnNumber" : 54
      },
      "nodeContext" : "vals=new Long[]{24L,null,50L,0L,-60L}",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 31,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Long[] vals=new Long[]{24L,null,50L,0L,-60L};\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 987,
        "startLineNumber" : 30,
        "startColumnNumber" : 2,
        "endLineNumber" : 56,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Long[] vals=new Long[]{24L,null,50L,0L,-60L};\n  TestNullableLongColumnSelector lngSelector=new TestNullableLongColumnSelector(vals);\n  LongWrappingDimensionSelector lngWrapSelector=new LongWrappingDimensionSelector(lngSelector,null);\n  Assert.assertEquals(24L,lngSelector.getLong());\n  Assert.assertEquals(\"24\",lngWrapSelector.getValue());\n  lngSelector.increment();\n  if (NullHandling.sqlCompatible()) {\n    Assert.assertTrue(lngSelector.isNull());\n  }\n else {\n    Assert.assertEquals(0L,lngSelector.getLong());\n  }\n  lngSelector.increment();\n  Assert.assertEquals(50L,lngSelector.getLong());\n  Assert.assertEquals(\"50\",lngWrapSelector.getValue());\n  lngSelector.increment();\n  Assert.assertEquals(0L,lngSelector.getLong());\n  Assert.assertEquals(\"0\",lngWrapSelector.getValue());\n  lngSelector.increment();\n  Assert.assertEquals(-60L,lngSelector.getLong());\n  Assert.assertEquals(\"-60\",lngWrapSelector.getValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1045,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 56,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testLongWrappingDimensionSelector(){\n  Long[] vals=new Long[]{24L,null,50L,0L,-60L};\n  TestNullableLongColumnSelector lngSelector=new TestNullableLongColumnSelector(vals);\n  LongWrappingDimensionSelector lngWrapSelector=new LongWrappingDimensionSelector(lngSelector,null);\n  Assert.assertEquals(24L,lngSelector.getLong());\n  Assert.assertEquals(\"24\",lngWrapSelector.getValue());\n  lngSelector.increment();\n  if (NullHandling.sqlCompatible()) {\n    Assert.assertTrue(lngSelector.isNull());\n  }\n else {\n    Assert.assertEquals(0L,lngSelector.getLong());\n  }\n  lngSelector.increment();\n  Assert.assertEquals(50L,lngSelector.getLong());\n  Assert.assertEquals(\"50\",lngWrapSelector.getValue());\n  lngSelector.increment();\n  Assert.assertEquals(0L,lngSelector.getLong());\n  Assert.assertEquals(\"0\",lngWrapSelector.getValue());\n  lngSelector.increment();\n  Assert.assertEquals(-60L,lngSelector.getLong());\n  Assert.assertEquals(\"-60\",lngWrapSelector.getValue());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 147,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 31,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Long[] vals=new Long[]{24L,null,50L,0L,-60L};\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "long"
  }, {
    "nodeContext" : "60L",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 54,
      "startColumnNumber" : 25,
      "endLineNumber" : 54,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 4,
        "startLineNumber" : 54,
        "startColumnNumber" : 24,
        "endLineNumber" : 54,
        "endColumnNumber" : 28
      },
      "nodeContext" : "-60L",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Assert.assertEquals(-60L,lngSelector.getLong())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Assert.assertEquals(-60L,lngSelector.getLong());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 987,
        "startLineNumber" : 30,
        "startColumnNumber" : 2,
        "endLineNumber" : 56,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Long[] vals=new Long[]{24L,null,50L,0L,-60L};\n  TestNullableLongColumnSelector lngSelector=new TestNullableLongColumnSelector(vals);\n  LongWrappingDimensionSelector lngWrapSelector=new LongWrappingDimensionSelector(lngSelector,null);\n  Assert.assertEquals(24L,lngSelector.getLong());\n  Assert.assertEquals(\"24\",lngWrapSelector.getValue());\n  lngSelector.increment();\n  if (NullHandling.sqlCompatible()) {\n    Assert.assertTrue(lngSelector.isNull());\n  }\n else {\n    Assert.assertEquals(0L,lngSelector.getLong());\n  }\n  lngSelector.increment();\n  Assert.assertEquals(50L,lngSelector.getLong());\n  Assert.assertEquals(\"50\",lngWrapSelector.getValue());\n  lngSelector.increment();\n  Assert.assertEquals(0L,lngSelector.getLong());\n  Assert.assertEquals(\"0\",lngWrapSelector.getValue());\n  lngSelector.increment();\n  Assert.assertEquals(-60L,lngSelector.getLong());\n  Assert.assertEquals(\"-60\",lngWrapSelector.getValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1045,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 56,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testLongWrappingDimensionSelector(){\n  Long[] vals=new Long[]{24L,null,50L,0L,-60L};\n  TestNullableLongColumnSelector lngSelector=new TestNullableLongColumnSelector(vals);\n  LongWrappingDimensionSelector lngWrapSelector=new LongWrappingDimensionSelector(lngSelector,null);\n  Assert.assertEquals(24L,lngSelector.getLong());\n  Assert.assertEquals(\"24\",lngWrapSelector.getValue());\n  lngSelector.increment();\n  if (NullHandling.sqlCompatible()) {\n    Assert.assertTrue(lngSelector.isNull());\n  }\n else {\n    Assert.assertEquals(0L,lngSelector.getLong());\n  }\n  lngSelector.increment();\n  Assert.assertEquals(50L,lngSelector.getLong());\n  Assert.assertEquals(\"50\",lngWrapSelector.getValue());\n  lngSelector.increment();\n  Assert.assertEquals(0L,lngSelector.getLong());\n  Assert.assertEquals(\"0\",lngWrapSelector.getValue());\n  lngSelector.increment();\n  Assert.assertEquals(-60L,lngSelector.getLong());\n  Assert.assertEquals(\"-60\",lngWrapSelector.getValue());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 147,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Assert.assertEquals(-60L,lngSelector.getLong());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 31,
    "startColumnNumber" : 50,
    "endLineNumber" : 31,
    "endColumnNumber" : 53
  }, {
    "charLength" : 3,
    "startLineNumber" : 54,
    "startColumnNumber" : 25,
    "endLineNumber" : 54,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}