{
  "id" : 179,
  "expression" : "latch",
  "projectName" : "LMAX-Exchange@disruptor",
  "commitID" : "6d8500d39ac15cc2fdbc3dbf2e3a97fbe425b8fa",
  "filePath" : "/src/test/java/com/lmax/disruptor/SequenceBarrierTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "latch",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 125,
      "startColumnNumber" : 66,
      "endLineNumber" : 125,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 125,
        "startColumnNumber" : 35,
        "endLineNumber" : 125,
        "endColumnNumber" : 72
      },
      "nodeContext" : "new CountDownLatchSequence(8L,latch)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 125,
        "startColumnNumber" : 23,
        "endLineNumber" : 125,
        "endColumnNumber" : 72
      },
      "nodeContext" : "sequence1=new CountDownLatchSequence(8L,latch)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 73
      },
      "nodeContext" : "final Sequence sequence1=new CountDownLatchSequence(8L,latch);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1643,
        "startLineNumber" : 120,
        "startColumnNumber" : 4,
        "endLineNumber" : 172,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final long expectedNumberMessages=10;\n  fillRingBuffer(expectedNumberMessages);\n  final CountDownLatch latch=new CountDownLatch(3);\n  final Sequence sequence1=new CountDownLatchSequence(8L,latch);\n  final Sequence sequence2=new CountDownLatchSequence(8L,latch);\n  final Sequence sequence3=new CountDownLatchSequence(8L,latch);\n  context.checking(new Expectations(){\n{\n      one(eventProcessor1).getSequence();\n      will(returnValue(sequence1));\n      one(eventProcessor2).getSequence();\n      will(returnValue(sequence2));\n      one(eventProcessor3).getSequence();\n      will(returnValue(sequence3));\n    }\n  }\n);\n  final SequenceBarrier sequenceBarrier=ringBuffer.newBarrier(Util.getSequencesFor(eventProcessor1,eventProcessor2,eventProcessor3));\n  final boolean[] alerted={false};\n  Thread t=new Thread(new Runnable(){\n    public void run(){\n      try {\n        sequenceBarrier.waitFor(expectedNumberMessages - 1);\n      }\n catch (      AlertException e) {\n        alerted[0]=true;\n      }\ncatch (      InterruptedException e) {\n      }\n    }\n  }\n);\n  t.start();\n  latch.await(3,TimeUnit.SECONDS);\n  sequenceBarrier.alert();\n  t.join();\n  assertTrue(\"Thread was not interrupted\",alerted[0]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 195,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1718,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 172,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldInterruptDuringBusySpin() throws Exception {\n  final long expectedNumberMessages=10;\n  fillRingBuffer(expectedNumberMessages);\n  final CountDownLatch latch=new CountDownLatch(3);\n  final Sequence sequence1=new CountDownLatchSequence(8L,latch);\n  final Sequence sequence2=new CountDownLatchSequence(8L,latch);\n  final Sequence sequence3=new CountDownLatchSequence(8L,latch);\n  context.checking(new Expectations(){\n{\n      one(eventProcessor1).getSequence();\n      will(returnValue(sequence1));\n      one(eventProcessor2).getSequence();\n      will(returnValue(sequence2));\n      one(eventProcessor3).getSequence();\n      will(returnValue(sequence3));\n    }\n  }\n);\n  final SequenceBarrier sequenceBarrier=ringBuffer.newBarrier(Util.getSequencesFor(eventProcessor1,eventProcessor2,eventProcessor3));\n  final boolean[] alerted={false};\n  Thread t=new Thread(new Runnable(){\n    public void run(){\n      try {\n        sequenceBarrier.waitFor(expectedNumberMessages - 1);\n      }\n catch (      AlertException e) {\n        alerted[0]=true;\n      }\ncatch (      InterruptedException e) {\n      }\n    }\n  }\n);\n  t.start();\n  latch.await(3,TimeUnit.SECONDS);\n  sequenceBarrier.alert();\n  t.join();\n  assertTrue(\"Thread was not interrupted\",alerted[0]);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 203,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 73
      },
      "nodeContext" : "final Sequence sequence1=new CountDownLatchSequence(8L,latch);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.CountDownLatch"
  }, {
    "nodeContext" : "latch",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 126,
      "startColumnNumber" : 66,
      "endLineNumber" : 126,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 126,
        "startColumnNumber" : 35,
        "endLineNumber" : 126,
        "endColumnNumber" : 72
      },
      "nodeContext" : "new CountDownLatchSequence(8L,latch)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 126,
        "startColumnNumber" : 23,
        "endLineNumber" : 126,
        "endColumnNumber" : 72
      },
      "nodeContext" : "sequence2=new CountDownLatchSequence(8L,latch)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 126,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 73
      },
      "nodeContext" : "final Sequence sequence2=new CountDownLatchSequence(8L,latch);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1643,
        "startLineNumber" : 120,
        "startColumnNumber" : 4,
        "endLineNumber" : 172,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final long expectedNumberMessages=10;\n  fillRingBuffer(expectedNumberMessages);\n  final CountDownLatch latch=new CountDownLatch(3);\n  final Sequence sequence1=new CountDownLatchSequence(8L,latch);\n  final Sequence sequence2=new CountDownLatchSequence(8L,latch);\n  final Sequence sequence3=new CountDownLatchSequence(8L,latch);\n  context.checking(new Expectations(){\n{\n      one(eventProcessor1).getSequence();\n      will(returnValue(sequence1));\n      one(eventProcessor2).getSequence();\n      will(returnValue(sequence2));\n      one(eventProcessor3).getSequence();\n      will(returnValue(sequence3));\n    }\n  }\n);\n  final SequenceBarrier sequenceBarrier=ringBuffer.newBarrier(Util.getSequencesFor(eventProcessor1,eventProcessor2,eventProcessor3));\n  final boolean[] alerted={false};\n  Thread t=new Thread(new Runnable(){\n    public void run(){\n      try {\n        sequenceBarrier.waitFor(expectedNumberMessages - 1);\n      }\n catch (      AlertException e) {\n        alerted[0]=true;\n      }\ncatch (      InterruptedException e) {\n      }\n    }\n  }\n);\n  t.start();\n  latch.await(3,TimeUnit.SECONDS);\n  sequenceBarrier.alert();\n  t.join();\n  assertTrue(\"Thread was not interrupted\",alerted[0]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 195,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1718,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 172,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldInterruptDuringBusySpin() throws Exception {\n  final long expectedNumberMessages=10;\n  fillRingBuffer(expectedNumberMessages);\n  final CountDownLatch latch=new CountDownLatch(3);\n  final Sequence sequence1=new CountDownLatchSequence(8L,latch);\n  final Sequence sequence2=new CountDownLatchSequence(8L,latch);\n  final Sequence sequence3=new CountDownLatchSequence(8L,latch);\n  context.checking(new Expectations(){\n{\n      one(eventProcessor1).getSequence();\n      will(returnValue(sequence1));\n      one(eventProcessor2).getSequence();\n      will(returnValue(sequence2));\n      one(eventProcessor3).getSequence();\n      will(returnValue(sequence3));\n    }\n  }\n);\n  final SequenceBarrier sequenceBarrier=ringBuffer.newBarrier(Util.getSequencesFor(eventProcessor1,eventProcessor2,eventProcessor3));\n  final boolean[] alerted={false};\n  Thread t=new Thread(new Runnable(){\n    public void run(){\n      try {\n        sequenceBarrier.waitFor(expectedNumberMessages - 1);\n      }\n catch (      AlertException e) {\n        alerted[0]=true;\n      }\ncatch (      InterruptedException e) {\n      }\n    }\n  }\n);\n  t.start();\n  latch.await(3,TimeUnit.SECONDS);\n  sequenceBarrier.alert();\n  t.join();\n  assertTrue(\"Thread was not interrupted\",alerted[0]);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 203,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 126,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 73
      },
      "nodeContext" : "final Sequence sequence2=new CountDownLatchSequence(8L,latch);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.CountDownLatch"
  }, {
    "nodeContext" : "latch",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 127,
      "startColumnNumber" : 66,
      "endLineNumber" : 127,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 127,
        "startColumnNumber" : 35,
        "endLineNumber" : 127,
        "endColumnNumber" : 72
      },
      "nodeContext" : "new CountDownLatchSequence(8L,latch)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 127,
        "startColumnNumber" : 23,
        "endLineNumber" : 127,
        "endColumnNumber" : 72
      },
      "nodeContext" : "sequence3=new CountDownLatchSequence(8L,latch)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 127,
        "startColumnNumber" : 8,
        "endLineNumber" : 127,
        "endColumnNumber" : 73
      },
      "nodeContext" : "final Sequence sequence3=new CountDownLatchSequence(8L,latch);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1643,
        "startLineNumber" : 120,
        "startColumnNumber" : 4,
        "endLineNumber" : 172,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final long expectedNumberMessages=10;\n  fillRingBuffer(expectedNumberMessages);\n  final CountDownLatch latch=new CountDownLatch(3);\n  final Sequence sequence1=new CountDownLatchSequence(8L,latch);\n  final Sequence sequence2=new CountDownLatchSequence(8L,latch);\n  final Sequence sequence3=new CountDownLatchSequence(8L,latch);\n  context.checking(new Expectations(){\n{\n      one(eventProcessor1).getSequence();\n      will(returnValue(sequence1));\n      one(eventProcessor2).getSequence();\n      will(returnValue(sequence2));\n      one(eventProcessor3).getSequence();\n      will(returnValue(sequence3));\n    }\n  }\n);\n  final SequenceBarrier sequenceBarrier=ringBuffer.newBarrier(Util.getSequencesFor(eventProcessor1,eventProcessor2,eventProcessor3));\n  final boolean[] alerted={false};\n  Thread t=new Thread(new Runnable(){\n    public void run(){\n      try {\n        sequenceBarrier.waitFor(expectedNumberMessages - 1);\n      }\n catch (      AlertException e) {\n        alerted[0]=true;\n      }\ncatch (      InterruptedException e) {\n      }\n    }\n  }\n);\n  t.start();\n  latch.await(3,TimeUnit.SECONDS);\n  sequenceBarrier.alert();\n  t.join();\n  assertTrue(\"Thread was not interrupted\",alerted[0]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 195,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1718,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 172,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldInterruptDuringBusySpin() throws Exception {\n  final long expectedNumberMessages=10;\n  fillRingBuffer(expectedNumberMessages);\n  final CountDownLatch latch=new CountDownLatch(3);\n  final Sequence sequence1=new CountDownLatchSequence(8L,latch);\n  final Sequence sequence2=new CountDownLatchSequence(8L,latch);\n  final Sequence sequence3=new CountDownLatchSequence(8L,latch);\n  context.checking(new Expectations(){\n{\n      one(eventProcessor1).getSequence();\n      will(returnValue(sequence1));\n      one(eventProcessor2).getSequence();\n      will(returnValue(sequence2));\n      one(eventProcessor3).getSequence();\n      will(returnValue(sequence3));\n    }\n  }\n);\n  final SequenceBarrier sequenceBarrier=ringBuffer.newBarrier(Util.getSequencesFor(eventProcessor1,eventProcessor2,eventProcessor3));\n  final boolean[] alerted={false};\n  Thread t=new Thread(new Runnable(){\n    public void run(){\n      try {\n        sequenceBarrier.waitFor(expectedNumberMessages - 1);\n      }\n catch (      AlertException e) {\n        alerted[0]=true;\n      }\ncatch (      InterruptedException e) {\n      }\n    }\n  }\n);\n  t.start();\n  latch.await(3,TimeUnit.SECONDS);\n  sequenceBarrier.alert();\n  t.join();\n  assertTrue(\"Thread was not interrupted\",alerted[0]);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 203,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 127,
        "startColumnNumber" : 8,
        "endLineNumber" : 127,
        "endColumnNumber" : 73
      },
      "nodeContext" : "final Sequence sequence3=new CountDownLatchSequence(8L,latch);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.CountDownLatch"
  }, {
    "nodeContext" : "latch",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 167,
      "startColumnNumber" : 8,
      "endLineNumber" : 167,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 167,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 40
      },
      "nodeContext" : "latch.await(3,TimeUnit.SECONDS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 167,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 41
      },
      "nodeContext" : "latch.await(3,TimeUnit.SECONDS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1643,
        "startLineNumber" : 120,
        "startColumnNumber" : 4,
        "endLineNumber" : 172,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final long expectedNumberMessages=10;\n  fillRingBuffer(expectedNumberMessages);\n  final CountDownLatch latch=new CountDownLatch(3);\n  final Sequence sequence1=new CountDownLatchSequence(8L,latch);\n  final Sequence sequence2=new CountDownLatchSequence(8L,latch);\n  final Sequence sequence3=new CountDownLatchSequence(8L,latch);\n  context.checking(new Expectations(){\n{\n      one(eventProcessor1).getSequence();\n      will(returnValue(sequence1));\n      one(eventProcessor2).getSequence();\n      will(returnValue(sequence2));\n      one(eventProcessor3).getSequence();\n      will(returnValue(sequence3));\n    }\n  }\n);\n  final SequenceBarrier sequenceBarrier=ringBuffer.newBarrier(Util.getSequencesFor(eventProcessor1,eventProcessor2,eventProcessor3));\n  final boolean[] alerted={false};\n  Thread t=new Thread(new Runnable(){\n    public void run(){\n      try {\n        sequenceBarrier.waitFor(expectedNumberMessages - 1);\n      }\n catch (      AlertException e) {\n        alerted[0]=true;\n      }\ncatch (      InterruptedException e) {\n      }\n    }\n  }\n);\n  t.start();\n  latch.await(3,TimeUnit.SECONDS);\n  sequenceBarrier.alert();\n  t.join();\n  assertTrue(\"Thread was not interrupted\",alerted[0]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 195,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1718,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 172,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldInterruptDuringBusySpin() throws Exception {\n  final long expectedNumberMessages=10;\n  fillRingBuffer(expectedNumberMessages);\n  final CountDownLatch latch=new CountDownLatch(3);\n  final Sequence sequence1=new CountDownLatchSequence(8L,latch);\n  final Sequence sequence2=new CountDownLatchSequence(8L,latch);\n  final Sequence sequence3=new CountDownLatchSequence(8L,latch);\n  context.checking(new Expectations(){\n{\n      one(eventProcessor1).getSequence();\n      will(returnValue(sequence1));\n      one(eventProcessor2).getSequence();\n      will(returnValue(sequence2));\n      one(eventProcessor3).getSequence();\n      will(returnValue(sequence3));\n    }\n  }\n);\n  final SequenceBarrier sequenceBarrier=ringBuffer.newBarrier(Util.getSequencesFor(eventProcessor1,eventProcessor2,eventProcessor3));\n  final boolean[] alerted={false};\n  Thread t=new Thread(new Runnable(){\n    public void run(){\n      try {\n        sequenceBarrier.waitFor(expectedNumberMessages - 1);\n      }\n catch (      AlertException e) {\n        alerted[0]=true;\n      }\ncatch (      InterruptedException e) {\n      }\n    }\n  }\n);\n  t.start();\n  latch.await(3,TimeUnit.SECONDS);\n  sequenceBarrier.alert();\n  t.join();\n  assertTrue(\"Thread was not interrupted\",alerted[0]);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 203,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 167,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 41
      },
      "nodeContext" : "latch.await(3,TimeUnit.SECONDS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.CountDownLatch"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 125,
    "startColumnNumber" : 66,
    "endLineNumber" : 125,
    "endColumnNumber" : 71
  }, {
    "charLength" : 5,
    "startLineNumber" : 126,
    "startColumnNumber" : 66,
    "endLineNumber" : 126,
    "endColumnNumber" : 71
  }, {
    "charLength" : 5,
    "startLineNumber" : 127,
    "startColumnNumber" : 66,
    "endLineNumber" : 127,
    "endColumnNumber" : 71
  }, {
    "charLength" : 5,
    "startLineNumber" : 167,
    "startColumnNumber" : 8,
    "endLineNumber" : 167,
    "endColumnNumber" : 13
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}