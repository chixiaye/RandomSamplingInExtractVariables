{
  "id" : 180,
  "expression" : "Loggers.EVT_LOG",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/naming/src/main/java/com/alibaba/nacos/naming/controllers/HealthController.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Loggers.EVT_LOG",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 115,
      "startColumnNumber" : 20,
      "endLineNumber" : 115,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 288,
        "startLineNumber" : 115,
        "startColumnNumber" : 20,
        "endLineNumber" : 117,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Loggers.EVT_LOG.info((valid ? \"[IP-ENABLED]\" : \"[IP-DISABLED]\") + \" ips: \" + instance.getIp()+ \":\"+ instance.getPort()+ \"@\"+ instance.getClusterName()+ \", service: \"+ serviceName+ \", msg: update thought HealthController api\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 26,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 289,
        "startLineNumber" : 115,
        "startColumnNumber" : 20,
        "endLineNumber" : 117,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Loggers.EVT_LOG.info((valid ? \"[IP-ENABLED]\" : \"[IP-DISABLED]\") + \" ips: \" + instance.getIp()+ \":\"+ instance.getPort()+ \"@\"+ instance.getClusterName()+ \", service: \"+ serviceName+ \", msg: update thought HealthController api\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 461,
        "startLineNumber" : 113,
        "startColumnNumber" : 79,
        "endLineNumber" : 120,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  instance.setHealthy(valid);\n  Loggers.EVT_LOG.info((valid ? \"[IP-ENABLED]\" : \"[IP-DISABLED]\") + \" ips: \" + instance.getIp()+ \":\"+ instance.getPort()+ \"@\"+ instance.getClusterName()+ \", service: \"+ serviceName+ \", msg: update thought HealthController api\");\n  pushService.serviceChanged(service);\n  break;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 524,
        "startLineNumber" : 113,
        "startColumnNumber" : 16,
        "endLineNumber" : 120,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (instance.getIp().equals(ip) && instance.getPort() == port) {\n  instance.setHealthy(valid);\n  Loggers.EVT_LOG.info((valid ? \"[IP-ENABLED]\" : \"[IP-DISABLED]\") + \" ips: \" + instance.getIp()+ \":\"+ instance.getPort()+ \"@\"+ instance.getClusterName()+ \", service: \"+ serviceName+ \", msg: update thought HealthController api\");\n  pushService.serviceChanged(service);\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 52,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 556,
        "startLineNumber" : 112,
        "startColumnNumber" : 86,
        "endLineNumber" : 121,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (instance.getIp().equals(ip) && instance.getPort() == port) {\n    instance.setHealthy(valid);\n    Loggers.EVT_LOG.info((valid ? \"[IP-ENABLED]\" : \"[IP-DISABLED]\") + \" ips: \" + instance.getIp()+ \":\"+ instance.getPort()+ \"@\"+ instance.getClusterName()+ \", service: \"+ serviceName+ \", msg: update thought HealthController api\");\n    pushService.serviceChanged(service);\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 630,
        "startLineNumber" : 112,
        "startColumnNumber" : 12,
        "endLineNumber" : 121,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Instance instance : service.allIPs(Lists.newArrayList(clusterName))) {\n  if (instance.getIp().equals(ip) && instance.getPort() == port) {\n    instance.setHealthy(valid);\n    Loggers.EVT_LOG.info((valid ? \"[IP-ENABLED]\" : \"[IP-DISABLED]\") + \" ips: \" + instance.getIp()+ \":\"+ instance.getPort()+ \"@\"+ instance.getClusterName()+ \", service: \"+ serviceName+ \", msg: update thought HealthController api\");\n    pushService.serviceChanged(service);\n    break;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 654,
        "startLineNumber" : 111,
        "startColumnNumber" : 119,
        "endLineNumber" : 122,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  Instance instance : service.allIPs(Lists.newArrayList(clusterName))) {\n    if (instance.getIp().equals(ip) && instance.getPort() == port) {\n      instance.setHealthy(valid);\n      Loggers.EVT_LOG.info((valid ? \"[IP-ENABLED]\" : \"[IP-DISABLED]\") + \" ips: \" + instance.getIp()+ \":\"+ instance.getPort()+ \"@\"+ instance.getClusterName()+ \", service: \"+ serviceName+ \", msg: update thought HealthController api\");\n      pushService.serviceChanged(service);\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 888,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 124,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (HealthCheckType.NONE.name().equals(service.getClusterMap().get(clusterName).getHealthChecker().getType())) {\n  for (  Instance instance : service.allIPs(Lists.newArrayList(clusterName))) {\n    if (instance.getIp().equals(ip) && instance.getPort() == port) {\n      instance.setHealthy(valid);\n      Loggers.EVT_LOG.info((valid ? \"[IP-ENABLED]\" : \"[IP-DISABLED]\") + \" ips: \" + instance.getIp()+ \":\"+ instance.getPort()+ \"@\"+ instance.getClusterName()+ \", service: \"+ serviceName+ \", msg: update thought HealthController api\");\n      pushService.serviceChanged(service);\n      break;\n    }\n  }\n}\n else {\n  throw new IllegalArgumentException(\"health check is still working, service: \" + serviceName);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 92,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2013,
        "startLineNumber" : 91,
        "startColumnNumber" : 53,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String healthyString=WebUtils.optional(request,\"healthy\",StringUtils.EMPTY);\n  if (StringUtils.isBlank(healthyString)) {\n    healthyString=WebUtils.optional(request,\"valid\",StringUtils.EMPTY);\n  }\n  if (StringUtils.isBlank(healthyString)) {\n    throw new IllegalArgumentException(\"Param 'healthy' is required.\");\n  }\n  boolean valid=BooleanUtils.toBoolean(healthyString);\n  String serviceName=WebUtils.required(request,CommonParams.SERVICE_NAME);\n  String namespaceId=WebUtils.optional(request,CommonParams.NAMESPACE_ID,Constants.DEFAULT_NAMESPACE_ID);\n  String clusterName=WebUtils.optional(request,CommonParams.CLUSTER_NAME,UtilsAndCommons.DEFAULT_CLUSTER_NAME);\n  String ip=WebUtils.required(request,\"ip\");\n  int port=Integer.parseInt(WebUtils.required(request,\"port\"));\n  Service service=serviceManager.getService(namespaceId,serviceName);\n  if (HealthCheckType.NONE.name().equals(service.getClusterMap().get(clusterName).getHealthChecker().getType())) {\n    for (    Instance instance : service.allIPs(Lists.newArrayList(clusterName))) {\n      if (instance.getIp().equals(ip) && instance.getPort() == port) {\n        instance.setHealthy(valid);\n        Loggers.EVT_LOG.info((valid ? \"[IP-ENABLED]\" : \"[IP-DISABLED]\") + \" ips: \" + instance.getIp()+ \":\"+ instance.getPort()+ \"@\"+ instance.getClusterName()+ \", service: \"+ serviceName+ \", msg: update thought HealthController api\");\n        pushService.serviceChanged(service);\n        break;\n      }\n    }\n  }\n else {\n    throw new IllegalArgumentException(\"health check is still working, service: \" + serviceName);\n  }\n  return \"ok\";\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 218,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2291,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Update health check for instance.\n * @param request http request\n * @return 'ok' if success\n */\n@CanDistro @PutMapping(value={\"\",\"/instance\"}) @Secured(action=ActionTypes.WRITE) public String update(HttpServletRequest request){\n  String healthyString=WebUtils.optional(request,\"healthy\",StringUtils.EMPTY);\n  if (StringUtils.isBlank(healthyString)) {\n    healthyString=WebUtils.optional(request,\"valid\",StringUtils.EMPTY);\n  }\n  if (StringUtils.isBlank(healthyString)) {\n    throw new IllegalArgumentException(\"Param 'healthy' is required.\");\n  }\n  boolean valid=BooleanUtils.toBoolean(healthyString);\n  String serviceName=WebUtils.required(request,CommonParams.SERVICE_NAME);\n  String namespaceId=WebUtils.optional(request,CommonParams.NAMESPACE_ID,Constants.DEFAULT_NAMESPACE_ID);\n  String clusterName=WebUtils.optional(request,CommonParams.CLUSTER_NAME,UtilsAndCommons.DEFAULT_CLUSTER_NAME);\n  String ip=WebUtils.required(request,\"ip\");\n  int port=Integer.parseInt(WebUtils.required(request,\"port\"));\n  Service service=serviceManager.getService(namespaceId,serviceName);\n  if (HealthCheckType.NONE.name().equals(service.getClusterMap().get(clusterName).getHealthChecker().getType())) {\n    for (    Instance instance : service.allIPs(Lists.newArrayList(clusterName))) {\n      if (instance.getIp().equals(ip) && instance.getPort() == port) {\n        instance.setHealthy(valid);\n        Loggers.EVT_LOG.info((valid ? \"[IP-ENABLED]\" : \"[IP-DISABLED]\") + \" ips: \" + instance.getIp()+ \":\"+ instance.getPort()+ \"@\"+ instance.getClusterName()+ \", service: \"+ serviceName+ \", msg: update thought HealthController api\");\n        pushService.serviceChanged(service);\n        break;\n      }\n    }\n  }\n else {\n    throw new IllegalArgumentException(\"health check is still working, service: \" + serviceName);\n  }\n  return \"ok\";\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 244,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 288,
        "startLineNumber" : 115,
        "startColumnNumber" : 20,
        "endLineNumber" : 117,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Loggers.EVT_LOG.info((valid ? \"[IP-ENABLED]\" : \"[IP-DISABLED]\") + \" ips: \" + instance.getIp()+ \":\"+ instance.getPort()+ \"@\"+ instance.getClusterName()+ \", service: \"+ serviceName+ \", msg: update thought HealthController api\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 26,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "com.alibaba.nacos.naming.misc.Logger"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 115,
    "startColumnNumber" : 20,
    "endLineNumber" : 115,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}