{
  "id" : 87,
  "expression" : "ENCODED_ANNOTATION",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/third-party/aosp-dexutils/src/main/java/com/tencent/tinker/android/dex/EncodedValueReader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ENCODED_ANNOTATION",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 115,
      "startColumnNumber" : 18,
      "endLineNumber" : 115,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 115,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 37
      },
      "nodeContext" : "checkType(ENCODED_ANNOTATION)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 115,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 38
      },
      "nodeContext" : "checkType(ENCODED_ANNOTATION);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 174,
        "startLineNumber" : 114,
        "startColumnNumber" : 32,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  checkType(ENCODED_ANNOTATION);\n  type=MUST_READ;\n  annotationType=Leb128.readUnsignedLeb128(in);\n  return Leb128.readUnsignedLeb128(in);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 744,
        "startLineNumber" : 101,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Begins reading the fields of an annotation, returning the number of fields. The caller must follow up by making alternating calls to  {@link #readAnnotationName()} and another read method. For example, this readsan annotation whose fields are all bytes: <pre>    {@code int fieldCount = readAnnotation(); int annotationType = getAnnotationType(); for (int i = 0; i < fieldCount; i++)  readAnnotationName(); readByte();}}</pre>\n */\npublic int readAnnotation(){\n  checkType(ENCODED_ANNOTATION);\n  type=MUST_READ;\n  annotationType=Leb128.readUnsignedLeb128(in);\n  return Leb128.readUnsignedLeb128(in);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 26,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 115,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 38
      },
      "nodeContext" : "checkType(ENCODED_ANNOTATION);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 115,
    "startColumnNumber" : 18,
    "endLineNumber" : 115,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}