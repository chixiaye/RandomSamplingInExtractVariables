{
  "id" : 162,
  "expression" : "InputRowParser.class",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/indexing-hadoop/src/test/java/org/apache/druid/indexer/HadoopyStringInputRowParserTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "InputRowParser.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 43,
      "startColumnNumber" : 42,
      "endLineNumber" : 43,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 43,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 63
      },
      "nodeContext" : "jsonMapper.readValue(jsonStr,InputRowParser.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 9
      },
      "nodeContext" : "jsonMapper.writeValueAsString(jsonMapper.readValue(jsonStr,InputRowParser.class))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 41,
        "startColumnNumber" : 28,
        "endLineNumber" : 46,
        "endColumnNumber" : 5
      },
      "nodeContext" : "jsonMapper.readValue(jsonMapper.writeValueAsString(jsonMapper.readValue(jsonStr,InputRowParser.class)),InputRowParser.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 179,
        "startLineNumber" : 41,
        "startColumnNumber" : 19,
        "endLineNumber" : 46,
        "endColumnNumber" : 5
      },
      "nodeContext" : "parser=jsonMapper.readValue(jsonMapper.writeValueAsString(jsonMapper.readValue(jsonStr,InputRowParser.class)),InputRowParser.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 195,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 46,
        "endColumnNumber" : 6
      },
      "nodeContext" : "InputRowParser parser=jsonMapper.readValue(jsonMapper.writeValueAsString(jsonMapper.readValue(jsonStr,InputRowParser.class)),InputRowParser.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 668,
        "startLineNumber" : 34,
        "startColumnNumber" : 2,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String jsonStr=\"{\" + \"\\\"type\\\":\\\"hadoopyString\\\",\" + \"\\\"parseSpec\\\":{\\\"format\\\":\\\"json\\\",\\\"timestampSpec\\\":{\\\"column\\\":\\\"xXx\\\"},\\\"dimensionsSpec\\\":{}}\"+ \"}\";\n  ObjectMapper jsonMapper=HadoopDruidIndexerConfig.JSON_MAPPER;\n  InputRowParser parser=jsonMapper.readValue(jsonMapper.writeValueAsString(jsonMapper.readValue(jsonStr,InputRowParser.class)),InputRowParser.class);\n  Assert.assertTrue(parser instanceof HadoopyStringInputRowParser);\n  Assert.assertEquals(\"xXx\",parser.getParseSpec().getTimestampSpec().getTimestampColumn());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 719,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testSerde() throws Exception {\n  String jsonStr=\"{\" + \"\\\"type\\\":\\\"hadoopyString\\\",\" + \"\\\"parseSpec\\\":{\\\"format\\\":\\\"json\\\",\\\"timestampSpec\\\":{\\\"column\\\":\\\"xXx\\\"},\\\"dimensionsSpec\\\":{}}\"+ \"}\";\n  ObjectMapper jsonMapper=HadoopDruidIndexerConfig.JSON_MAPPER;\n  InputRowParser parser=jsonMapper.readValue(jsonMapper.writeValueAsString(jsonMapper.readValue(jsonStr,InputRowParser.class)),InputRowParser.class);\n  Assert.assertTrue(parser instanceof HadoopyStringInputRowParser);\n  Assert.assertEquals(\"xXx\",parser.getParseSpec().getTimestampSpec().getTimestampColumn());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 68,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 43,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 63
      },
      "nodeContext" : "jsonMapper.readValue(jsonStr,InputRowParser.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<org.apache.druid.data.input.impl.InputRowParser>"
  }, {
    "nodeContext" : "InputRowParser.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 45,
      "startColumnNumber" : 8,
      "endLineNumber" : 45,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 41,
        "startColumnNumber" : 28,
        "endLineNumber" : 46,
        "endColumnNumber" : 5
      },
      "nodeContext" : "jsonMapper.readValue(jsonMapper.writeValueAsString(jsonMapper.readValue(jsonStr,InputRowParser.class)),InputRowParser.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 179,
        "startLineNumber" : 41,
        "startColumnNumber" : 19,
        "endLineNumber" : 46,
        "endColumnNumber" : 5
      },
      "nodeContext" : "parser=jsonMapper.readValue(jsonMapper.writeValueAsString(jsonMapper.readValue(jsonStr,InputRowParser.class)),InputRowParser.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 195,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 46,
        "endColumnNumber" : 6
      },
      "nodeContext" : "InputRowParser parser=jsonMapper.readValue(jsonMapper.writeValueAsString(jsonMapper.readValue(jsonStr,InputRowParser.class)),InputRowParser.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 668,
        "startLineNumber" : 34,
        "startColumnNumber" : 2,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String jsonStr=\"{\" + \"\\\"type\\\":\\\"hadoopyString\\\",\" + \"\\\"parseSpec\\\":{\\\"format\\\":\\\"json\\\",\\\"timestampSpec\\\":{\\\"column\\\":\\\"xXx\\\"},\\\"dimensionsSpec\\\":{}}\"+ \"}\";\n  ObjectMapper jsonMapper=HadoopDruidIndexerConfig.JSON_MAPPER;\n  InputRowParser parser=jsonMapper.readValue(jsonMapper.writeValueAsString(jsonMapper.readValue(jsonStr,InputRowParser.class)),InputRowParser.class);\n  Assert.assertTrue(parser instanceof HadoopyStringInputRowParser);\n  Assert.assertEquals(\"xXx\",parser.getParseSpec().getTimestampSpec().getTimestampColumn());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 719,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testSerde() throws Exception {\n  String jsonStr=\"{\" + \"\\\"type\\\":\\\"hadoopyString\\\",\" + \"\\\"parseSpec\\\":{\\\"format\\\":\\\"json\\\",\\\"timestampSpec\\\":{\\\"column\\\":\\\"xXx\\\"},\\\"dimensionsSpec\\\":{}}\"+ \"}\";\n  ObjectMapper jsonMapper=HadoopDruidIndexerConfig.JSON_MAPPER;\n  InputRowParser parser=jsonMapper.readValue(jsonMapper.writeValueAsString(jsonMapper.readValue(jsonStr,InputRowParser.class)),InputRowParser.class);\n  Assert.assertTrue(parser instanceof HadoopyStringInputRowParser);\n  Assert.assertEquals(\"xXx\",parser.getParseSpec().getTimestampSpec().getTimestampColumn());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 68,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 41,
        "startColumnNumber" : 28,
        "endLineNumber" : 46,
        "endColumnNumber" : 5
      },
      "nodeContext" : "jsonMapper.readValue(jsonMapper.writeValueAsString(jsonMapper.readValue(jsonStr,InputRowParser.class)),InputRowParser.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<org.apache.druid.data.input.impl.InputRowParser>"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 43,
    "startColumnNumber" : 42,
    "endLineNumber" : 43,
    "endColumnNumber" : 62
  }, {
    "charLength" : 20,
    "startLineNumber" : 45,
    "startColumnNumber" : 8,
    "endLineNumber" : 45,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 0
  } ]
}