{
  "id" : 250,
  "expression" : "w",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-core/src/test/java/com/netflix/hystrix/strategy/concurrency/HystrixContextSchedulerTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "w",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 42,
      "startColumnNumber" : 12,
      "endLineNumber" : 42,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 497,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 14
      },
      "nodeContext" : "w.schedule(new Action0(){\n  @Override public void call(){\n    start.countDown();\n    try {\n      try {\n        Thread.sleep(5000);\n      }\n catch (      InterruptedException ex) {\n        interrupted.set(true);\n      }\n    }\n  finally {\n      end.countDown();\n    }\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 43,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 498,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 15
      },
      "nodeContext" : "w.schedule(new Action0(){\n  @Override public void call(){\n    start.countDown();\n    try {\n      try {\n        Thread.sleep(5000);\n      }\n catch (      InterruptedException ex) {\n        interrupted.set(true);\n      }\n    }\n  finally {\n      end.countDown();\n    }\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 44,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 698,
        "startLineNumber" : 41,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  w.schedule(new Action0(){\n    @Override public void call(){\n      start.countDown();\n      try {\n        try {\n          Thread.sleep(5000);\n        }\n catch (        InterruptedException ex) {\n          interrupted.set(true);\n        }\n      }\n  finally {\n        end.countDown();\n      }\n    }\n  }\n);\n  start.await();\n  w.unsubscribe();\n  end.await();\n  assertTrue(interrupted.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 751,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  w.schedule(new Action0(){\n    @Override public void call(){\n      start.countDown();\n      try {\n        try {\n          Thread.sleep(5000);\n        }\n catch (        InterruptedException ex) {\n          interrupted.set(true);\n        }\n      }\n  finally {\n        end.countDown();\n      }\n    }\n  }\n);\n  start.await();\n  w.unsubscribe();\n  end.await();\n  assertTrue(interrupted.get());\n}\n  finally {\n  w.unsubscribe();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 69,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1115,
        "startLineNumber" : 32,
        "startColumnNumber" : 78,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Scheduler s=Schedulers.newThread();\n  final AtomicBoolean interrupted=new AtomicBoolean();\n  final CountDownLatch start=new CountDownLatch(1);\n  final CountDownLatch end=new CountDownLatch(1);\n  HystrixContextScheduler hcs=new HystrixContextScheduler(s);\n  Scheduler.Worker w=hcs.createWorker();\n  try {\n    w.schedule(new Action0(){\n      @Override public void call(){\n        start.countDown();\n        try {\n          try {\n            Thread.sleep(5000);\n          }\n catch (          InterruptedException ex) {\n            interrupted.set(true);\n          }\n        }\n  finally {\n          end.countDown();\n        }\n      }\n    }\n);\n    start.await();\n    w.unsubscribe();\n    end.await();\n    assertTrue(interrupted.get());\n  }\n  finally {\n    w.unsubscribe();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1215,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test(timeout=2500) public void testUnsubscribeWrappedScheduler() throws InterruptedException {\n  Scheduler s=Schedulers.newThread();\n  final AtomicBoolean interrupted=new AtomicBoolean();\n  final CountDownLatch start=new CountDownLatch(1);\n  final CountDownLatch end=new CountDownLatch(1);\n  HystrixContextScheduler hcs=new HystrixContextScheduler(s);\n  Scheduler.Worker w=hcs.createWorker();\n  try {\n    w.schedule(new Action0(){\n      @Override public void call(){\n        start.countDown();\n        try {\n          try {\n            Thread.sleep(5000);\n          }\n catch (          InterruptedException ex) {\n            interrupted.set(true);\n          }\n        }\n  finally {\n          end.countDown();\n        }\n      }\n    }\n);\n    start.await();\n    w.unsubscribe();\n    end.await();\n    assertTrue(interrupted.get());\n  }\n  finally {\n    w.unsubscribe();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 137,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 497,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 14
      },
      "nodeContext" : "w.schedule(new Action0(){\n  @Override public void call(){\n    start.countDown();\n    try {\n      try {\n        Thread.sleep(5000);\n      }\n catch (      InterruptedException ex) {\n        interrupted.set(true);\n      }\n    }\n  finally {\n      end.countDown();\n    }\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 43,
      "astHeight" : 13
    },
    "tokenLength" : 1,
    "type" : "Scheduler.Worker"
  }, {
    "nodeContext" : "w",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 60,
      "startColumnNumber" : 12,
      "endLineNumber" : 60,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 27
      },
      "nodeContext" : "w.unsubscribe()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 28
      },
      "nodeContext" : "w.unsubscribe();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 698,
        "startLineNumber" : 41,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  w.schedule(new Action0(){\n    @Override public void call(){\n      start.countDown();\n      try {\n        try {\n          Thread.sleep(5000);\n        }\n catch (        InterruptedException ex) {\n          interrupted.set(true);\n        }\n      }\n  finally {\n        end.countDown();\n      }\n    }\n  }\n);\n  start.await();\n  w.unsubscribe();\n  end.await();\n  assertTrue(interrupted.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 751,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  w.schedule(new Action0(){\n    @Override public void call(){\n      start.countDown();\n      try {\n        try {\n          Thread.sleep(5000);\n        }\n catch (        InterruptedException ex) {\n          interrupted.set(true);\n        }\n      }\n  finally {\n        end.countDown();\n      }\n    }\n  }\n);\n  start.await();\n  w.unsubscribe();\n  end.await();\n  assertTrue(interrupted.get());\n}\n  finally {\n  w.unsubscribe();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 69,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1115,
        "startLineNumber" : 32,
        "startColumnNumber" : 78,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Scheduler s=Schedulers.newThread();\n  final AtomicBoolean interrupted=new AtomicBoolean();\n  final CountDownLatch start=new CountDownLatch(1);\n  final CountDownLatch end=new CountDownLatch(1);\n  HystrixContextScheduler hcs=new HystrixContextScheduler(s);\n  Scheduler.Worker w=hcs.createWorker();\n  try {\n    w.schedule(new Action0(){\n      @Override public void call(){\n        start.countDown();\n        try {\n          try {\n            Thread.sleep(5000);\n          }\n catch (          InterruptedException ex) {\n            interrupted.set(true);\n          }\n        }\n  finally {\n          end.countDown();\n        }\n      }\n    }\n);\n    start.await();\n    w.unsubscribe();\n    end.await();\n    assertTrue(interrupted.get());\n  }\n  finally {\n    w.unsubscribe();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1215,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test(timeout=2500) public void testUnsubscribeWrappedScheduler() throws InterruptedException {\n  Scheduler s=Schedulers.newThread();\n  final AtomicBoolean interrupted=new AtomicBoolean();\n  final CountDownLatch start=new CountDownLatch(1);\n  final CountDownLatch end=new CountDownLatch(1);\n  HystrixContextScheduler hcs=new HystrixContextScheduler(s);\n  Scheduler.Worker w=hcs.createWorker();\n  try {\n    w.schedule(new Action0(){\n      @Override public void call(){\n        start.countDown();\n        try {\n          try {\n            Thread.sleep(5000);\n          }\n catch (          InterruptedException ex) {\n            interrupted.set(true);\n          }\n        }\n  finally {\n          end.countDown();\n        }\n      }\n    }\n);\n    start.await();\n    w.unsubscribe();\n    end.await();\n    assertTrue(interrupted.get());\n  }\n  finally {\n    w.unsubscribe();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 137,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 28
      },
      "nodeContext" : "w.unsubscribe();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "Scheduler.Worker"
  }, {
    "nodeContext" : "w",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 66,
      "startColumnNumber" : 12,
      "endLineNumber" : 66,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 27
      },
      "nodeContext" : "w.unsubscribe()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 28
      },
      "nodeContext" : "w.unsubscribe();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,finally]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 65,
        "startColumnNumber" : 18,
        "endLineNumber" : 67,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  w.unsubscribe();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 751,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  w.schedule(new Action0(){\n    @Override public void call(){\n      start.countDown();\n      try {\n        try {\n          Thread.sleep(5000);\n        }\n catch (        InterruptedException ex) {\n          interrupted.set(true);\n        }\n      }\n  finally {\n        end.countDown();\n      }\n    }\n  }\n);\n  start.await();\n  w.unsubscribe();\n  end.await();\n  assertTrue(interrupted.get());\n}\n  finally {\n  w.unsubscribe();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 69,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1115,
        "startLineNumber" : 32,
        "startColumnNumber" : 78,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Scheduler s=Schedulers.newThread();\n  final AtomicBoolean interrupted=new AtomicBoolean();\n  final CountDownLatch start=new CountDownLatch(1);\n  final CountDownLatch end=new CountDownLatch(1);\n  HystrixContextScheduler hcs=new HystrixContextScheduler(s);\n  Scheduler.Worker w=hcs.createWorker();\n  try {\n    w.schedule(new Action0(){\n      @Override public void call(){\n        start.countDown();\n        try {\n          try {\n            Thread.sleep(5000);\n          }\n catch (          InterruptedException ex) {\n            interrupted.set(true);\n          }\n        }\n  finally {\n          end.countDown();\n        }\n      }\n    }\n);\n    start.await();\n    w.unsubscribe();\n    end.await();\n    assertTrue(interrupted.get());\n  }\n  finally {\n    w.unsubscribe();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1215,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test(timeout=2500) public void testUnsubscribeWrappedScheduler() throws InterruptedException {\n  Scheduler s=Schedulers.newThread();\n  final AtomicBoolean interrupted=new AtomicBoolean();\n  final CountDownLatch start=new CountDownLatch(1);\n  final CountDownLatch end=new CountDownLatch(1);\n  HystrixContextScheduler hcs=new HystrixContextScheduler(s);\n  Scheduler.Worker w=hcs.createWorker();\n  try {\n    w.schedule(new Action0(){\n      @Override public void call(){\n        start.countDown();\n        try {\n          try {\n            Thread.sleep(5000);\n          }\n catch (          InterruptedException ex) {\n            interrupted.set(true);\n          }\n        }\n  finally {\n          end.countDown();\n        }\n      }\n    }\n);\n    start.await();\n    w.unsubscribe();\n    end.await();\n    assertTrue(interrupted.get());\n  }\n  finally {\n    w.unsubscribe();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 137,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 28
      },
      "nodeContext" : "w.unsubscribe();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "Scheduler.Worker"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 42,
    "startColumnNumber" : 12,
    "endLineNumber" : 42,
    "endColumnNumber" : 13
  }, {
    "charLength" : 1,
    "startLineNumber" : 60,
    "startColumnNumber" : 12,
    "endLineNumber" : 60,
    "endColumnNumber" : 13
  }, {
    "charLength" : 1,
    "startLineNumber" : 66,
    "startColumnNumber" : 12,
    "endLineNumber" : 66,
    "endColumnNumber" : 13
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}