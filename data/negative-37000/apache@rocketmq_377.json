{
  "id" : 377,
  "expression" : "TlsSystemConfig.tlsServerKeyPath",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/namesrv/src/main/java/org/apache/rocketmq/namesrv/NamesrvController.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TlsSystemConfig.tlsServerKeyPath",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 110,
      "startColumnNumber" : 24,
      "endLineNumber" : 110,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 203,
        "startLineNumber" : 108,
        "startColumnNumber" : 33,
        "endLineNumber" : 112,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{TlsSystemConfig.tlsServerCertPath,TlsSystemConfig.tlsServerKeyPath,TlsSystemConfig.tlsServerTrustCertPath}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 216,
        "startLineNumber" : 108,
        "startColumnNumber" : 20,
        "endLineNumber" : 112,
        "endColumnNumber" : 21
      },
      "nodeContext" : "new String[]{TlsSystemConfig.tlsServerCertPath,TlsSystemConfig.tlsServerKeyPath,TlsSystemConfig.tlsServerTrustCertPath}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 1623,
        "startLineNumber" : 107,
        "startColumnNumber" : 35,
        "endLineNumber" : 138,
        "endColumnNumber" : 22
      },
      "nodeContext" : "new FileWatchService(new String[]{TlsSystemConfig.tlsServerCertPath,TlsSystemConfig.tlsServerKeyPath,TlsSystemConfig.tlsServerTrustCertPath},new FileWatchService.Listener(){\n  boolean certChanged, keyChanged=false;\n  @Override public void onChanged(  String path){\n    if (path.equals(TlsSystemConfig.tlsServerTrustCertPath)) {\n      log.info(\"The trust certificate changed, reload the ssl context\");\n      reloadServerSslContext();\n    }\n    if (path.equals(TlsSystemConfig.tlsServerCertPath)) {\n      certChanged=true;\n    }\n    if (path.equals(TlsSystemConfig.tlsServerKeyPath)) {\n      keyChanged=true;\n    }\n    if (certChanged && keyChanged) {\n      log.info(\"The certificate and private key changed, reload the ssl context\");\n      certChanged=keyChanged=false;\n      reloadServerSslContext();\n    }\n  }\n  private void reloadServerSslContext(){\n    ((NettyRemotingServer)remotingServer).loadSslContext();\n  }\n}\n)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 114,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 1642,
        "startLineNumber" : 107,
        "startColumnNumber" : 16,
        "endLineNumber" : 138,
        "endColumnNumber" : 22
      },
      "nodeContext" : "fileWatchService=new FileWatchService(new String[]{TlsSystemConfig.tlsServerCertPath,TlsSystemConfig.tlsServerKeyPath,TlsSystemConfig.tlsServerTrustCertPath},new FileWatchService.Listener(){\n  boolean certChanged, keyChanged=false;\n  @Override public void onChanged(  String path){\n    if (path.equals(TlsSystemConfig.tlsServerTrustCertPath)) {\n      log.info(\"The trust certificate changed, reload the ssl context\");\n      reloadServerSslContext();\n    }\n    if (path.equals(TlsSystemConfig.tlsServerCertPath)) {\n      certChanged=true;\n    }\n    if (path.equals(TlsSystemConfig.tlsServerKeyPath)) {\n      keyChanged=true;\n    }\n    if (certChanged && keyChanged) {\n      log.info(\"The certificate and private key changed, reload the ssl context\");\n      certChanged=keyChanged=false;\n      reloadServerSslContext();\n    }\n  }\n  private void reloadServerSslContext(){\n    ((NettyRemotingServer)remotingServer).loadSslContext();\n  }\n}\n)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 116,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1643,
        "startLineNumber" : 107,
        "startColumnNumber" : 16,
        "endLineNumber" : 138,
        "endColumnNumber" : 23
      },
      "nodeContext" : "fileWatchService=new FileWatchService(new String[]{TlsSystemConfig.tlsServerCertPath,TlsSystemConfig.tlsServerKeyPath,TlsSystemConfig.tlsServerTrustCertPath},new FileWatchService.Listener(){\n  boolean certChanged, keyChanged=false;\n  @Override public void onChanged(  String path){\n    if (path.equals(TlsSystemConfig.tlsServerTrustCertPath)) {\n      log.info(\"The trust certificate changed, reload the ssl context\");\n      reloadServerSslContext();\n    }\n    if (path.equals(TlsSystemConfig.tlsServerCertPath)) {\n      certChanged=true;\n    }\n    if (path.equals(TlsSystemConfig.tlsServerKeyPath)) {\n      keyChanged=true;\n    }\n    if (certChanged && keyChanged) {\n      log.info(\"The certificate and private key changed, reload the ssl context\");\n      certChanged=keyChanged=false;\n      reloadServerSslContext();\n    }\n  }\n  private void reloadServerSslContext(){\n    ((NettyRemotingServer)remotingServer).loadSslContext();\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 117,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1675,
        "startLineNumber" : 106,
        "startColumnNumber" : 16,
        "endLineNumber" : 139,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  fileWatchService=new FileWatchService(new String[]{TlsSystemConfig.tlsServerCertPath,TlsSystemConfig.tlsServerKeyPath,TlsSystemConfig.tlsServerTrustCertPath},new FileWatchService.Listener(){\n    boolean certChanged, keyChanged=false;\n    @Override public void onChanged(    String path){\n      if (path.equals(TlsSystemConfig.tlsServerTrustCertPath)) {\n        log.info(\"The trust certificate changed, reload the ssl context\");\n        reloadServerSslContext();\n      }\n      if (path.equals(TlsSystemConfig.tlsServerCertPath)) {\n        certChanged=true;\n      }\n      if (path.equals(TlsSystemConfig.tlsServerKeyPath)) {\n        keyChanged=true;\n      }\n      if (certChanged && keyChanged) {\n        log.info(\"The certificate and private key changed, reload the ssl context\");\n        certChanged=keyChanged=false;\n        reloadServerSslContext();\n      }\n    }\n    private void reloadServerSslContext(){\n      ((NettyRemotingServer)remotingServer).loadSslContext();\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1815,
        "startLineNumber" : 106,
        "startColumnNumber" : 12,
        "endLineNumber" : 141,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  fileWatchService=new FileWatchService(new String[]{TlsSystemConfig.tlsServerCertPath,TlsSystemConfig.tlsServerKeyPath,TlsSystemConfig.tlsServerTrustCertPath},new FileWatchService.Listener(){\n    boolean certChanged, keyChanged=false;\n    @Override public void onChanged(    String path){\n      if (path.equals(TlsSystemConfig.tlsServerTrustCertPath)) {\n        log.info(\"The trust certificate changed, reload the ssl context\");\n        reloadServerSslContext();\n      }\n      if (path.equals(TlsSystemConfig.tlsServerCertPath)) {\n        certChanged=true;\n      }\n      if (path.equals(TlsSystemConfig.tlsServerKeyPath)) {\n        keyChanged=true;\n      }\n      if (certChanged && keyChanged) {\n        log.info(\"The certificate and private key changed, reload the ssl context\");\n        certChanged=keyChanged=false;\n        reloadServerSslContext();\n      }\n    }\n    private void reloadServerSslContext(){\n      ((NettyRemotingServer)remotingServer).loadSslContext();\n    }\n  }\n);\n}\n catch (Exception e) {\n  log.warn(\"FileWatchService created error, can't load the certificate dynamically\");\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 130,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1895,
        "startLineNumber" : 104,
        "startColumnNumber" : 57,
        "endLineNumber" : 142,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    fileWatchService=new FileWatchService(new String[]{TlsSystemConfig.tlsServerCertPath,TlsSystemConfig.tlsServerKeyPath,TlsSystemConfig.tlsServerTrustCertPath},new FileWatchService.Listener(){\n      boolean certChanged, keyChanged=false;\n      @Override public void onChanged(      String path){\n        if (path.equals(TlsSystemConfig.tlsServerTrustCertPath)) {\n          log.info(\"The trust certificate changed, reload the ssl context\");\n          reloadServerSslContext();\n        }\n        if (path.equals(TlsSystemConfig.tlsServerCertPath)) {\n          certChanged=true;\n        }\n        if (path.equals(TlsSystemConfig.tlsServerKeyPath)) {\n          keyChanged=true;\n        }\n        if (certChanged && keyChanged) {\n          log.info(\"The certificate and private key changed, reload the ssl context\");\n          certChanged=keyChanged=false;\n          reloadServerSslContext();\n        }\n      }\n      private void reloadServerSslContext(){\n        ((NettyRemotingServer)remotingServer).loadSslContext();\n      }\n    }\n);\n  }\n catch (  Exception e) {\n    log.warn(\"FileWatchService created error, can't load the certificate dynamically\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 131,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1944,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 142,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (TlsSystemConfig.tlsMode != TlsMode.DISABLED) {\n  try {\n    fileWatchService=new FileWatchService(new String[]{TlsSystemConfig.tlsServerCertPath,TlsSystemConfig.tlsServerKeyPath,TlsSystemConfig.tlsServerTrustCertPath},new FileWatchService.Listener(){\n      boolean certChanged, keyChanged=false;\n      @Override public void onChanged(      String path){\n        if (path.equals(TlsSystemConfig.tlsServerTrustCertPath)) {\n          log.info(\"The trust certificate changed, reload the ssl context\");\n          reloadServerSslContext();\n        }\n        if (path.equals(TlsSystemConfig.tlsServerCertPath)) {\n          certChanged=true;\n        }\n        if (path.equals(TlsSystemConfig.tlsServerKeyPath)) {\n          keyChanged=true;\n        }\n        if (certChanged && keyChanged) {\n          log.info(\"The certificate and private key changed, reload the ssl context\");\n          certChanged=keyChanged=false;\n          reloadServerSslContext();\n        }\n      }\n      private void reloadServerSslContext(){\n        ((NettyRemotingServer)remotingServer).loadSslContext();\n      }\n    }\n);\n  }\n catch (  Exception e) {\n    log.warn(\"FileWatchService created error, can't load the certificate dynamically\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 139,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2928,
        "startLineNumber" : 76,
        "startColumnNumber" : 32,
        "endLineNumber" : 145,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.kvConfigManager.load();\n  this.remotingServer=RemotingServerFactory.getInstance().createRemotingServer();\n  this.remotingServer.init(this.nettyServerConfig,this.brokerHousekeepingService);\n  this.remotingExecutor=Executors.newFixedThreadPool(nettyServerConfig.getServerWorkerThreads(),new ThreadFactoryImpl(\"RemotingExecutorThread_\"));\n  this.registerProcessor();\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      NamesrvController.this.routeInfoManager.scanNotActiveBroker();\n    }\n  }\n,5,10,TimeUnit.SECONDS);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      NamesrvController.this.kvConfigManager.printAllPeriodically();\n    }\n  }\n,1,10,TimeUnit.MINUTES);\n  if (TlsSystemConfig.tlsMode != TlsMode.DISABLED) {\n    try {\n      fileWatchService=new FileWatchService(new String[]{TlsSystemConfig.tlsServerCertPath,TlsSystemConfig.tlsServerKeyPath,TlsSystemConfig.tlsServerTrustCertPath},new FileWatchService.Listener(){\n        boolean certChanged, keyChanged=false;\n        @Override public void onChanged(        String path){\n          if (path.equals(TlsSystemConfig.tlsServerTrustCertPath)) {\n            log.info(\"The trust certificate changed, reload the ssl context\");\n            reloadServerSslContext();\n          }\n          if (path.equals(TlsSystemConfig.tlsServerCertPath)) {\n            certChanged=true;\n          }\n          if (path.equals(TlsSystemConfig.tlsServerKeyPath)) {\n            keyChanged=true;\n          }\n          if (certChanged && keyChanged) {\n            log.info(\"The certificate and private key changed, reload the ssl context\");\n            certChanged=keyChanged=false;\n            reloadServerSslContext();\n          }\n        }\n        private void reloadServerSslContext(){\n          ((NettyRemotingServer)remotingServer).loadSslContext();\n        }\n      }\n);\n    }\n catch (    Exception e) {\n      log.warn(\"FileWatchService created error, can't load the certificate dynamically\");\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 247,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2956,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 145,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public boolean initialize(){\n  this.kvConfigManager.load();\n  this.remotingServer=RemotingServerFactory.getInstance().createRemotingServer();\n  this.remotingServer.init(this.nettyServerConfig,this.brokerHousekeepingService);\n  this.remotingExecutor=Executors.newFixedThreadPool(nettyServerConfig.getServerWorkerThreads(),new ThreadFactoryImpl(\"RemotingExecutorThread_\"));\n  this.registerProcessor();\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      NamesrvController.this.routeInfoManager.scanNotActiveBroker();\n    }\n  }\n,5,10,TimeUnit.SECONDS);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      NamesrvController.this.kvConfigManager.printAllPeriodically();\n    }\n  }\n,1,10,TimeUnit.MINUTES);\n  if (TlsSystemConfig.tlsMode != TlsMode.DISABLED) {\n    try {\n      fileWatchService=new FileWatchService(new String[]{TlsSystemConfig.tlsServerCertPath,TlsSystemConfig.tlsServerKeyPath,TlsSystemConfig.tlsServerTrustCertPath},new FileWatchService.Listener(){\n        boolean certChanged, keyChanged=false;\n        @Override public void onChanged(        String path){\n          if (path.equals(TlsSystemConfig.tlsServerTrustCertPath)) {\n            log.info(\"The trust certificate changed, reload the ssl context\");\n            reloadServerSslContext();\n          }\n          if (path.equals(TlsSystemConfig.tlsServerCertPath)) {\n            certChanged=true;\n          }\n          if (path.equals(TlsSystemConfig.tlsServerKeyPath)) {\n            keyChanged=true;\n          }\n          if (certChanged && keyChanged) {\n            log.info(\"The certificate and private key changed, reload the ssl context\");\n            certChanged=keyChanged=false;\n            reloadServerSslContext();\n          }\n        }\n        private void reloadServerSslContext(){\n          ((NettyRemotingServer)remotingServer).loadSslContext();\n        }\n      }\n);\n    }\n catch (    Exception e) {\n      log.warn(\"FileWatchService created error, can't load the certificate dynamically\");\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 251,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 203,
        "startLineNumber" : 108,
        "startColumnNumber" : 33,
        "endLineNumber" : 112,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{TlsSystemConfig.tlsServerCertPath,TlsSystemConfig.tlsServerKeyPath,TlsSystemConfig.tlsServerTrustCertPath}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 10,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 110,
    "startColumnNumber" : 24,
    "endLineNumber" : 110,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}