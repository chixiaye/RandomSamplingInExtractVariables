{
  "id" : 79,
  "expression" : "file.getKind() == Kind.SOURCE && file.getName().startsWith(packageName)",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-common/src/main/java/org/apache/dubbo/common/compiler/support/JdkCompiler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "file.getKind() == Kind.SOURCE && file.getName().startsWith(packageName)",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 71,
      "startLineNumber" : 223,
      "startColumnNumber" : 24,
      "endLineNumber" : 223,
      "endColumnNumber" : 95
    },
    "astNodeNumber" : 14,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 223,
        "startColumnNumber" : 20,
        "endLineNumber" : 225,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (file.getKind() == Kind.SOURCE && file.getName().startsWith(packageName)) {\n  files.add(file);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 222,
        "startColumnNumber" : 65,
        "endLineNumber" : 226,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (file.getKind() == Kind.SOURCE && file.getName().startsWith(packageName)) {\n    files.add(file);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 234,
        "startLineNumber" : 222,
        "startColumnNumber" : 16,
        "endLineNumber" : 226,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (JavaFileObject file : fileObjects.values()) {\n  if (file.getKind() == Kind.SOURCE && file.getName().startsWith(packageName)) {\n    files.add(file);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 30,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 268,
        "startLineNumber" : 221,
        "startColumnNumber" : 111,
        "endLineNumber" : 227,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  for (  JavaFileObject file : fileObjects.values()) {\n    if (file.getKind() == Kind.SOURCE && file.getName().startsWith(packageName)) {\n      files.add(file);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 360,
        "startLineNumber" : 221,
        "startColumnNumber" : 19,
        "endLineNumber" : 227,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (location == StandardLocation.SOURCE_PATH && kinds.contains(JavaFileObject.Kind.SOURCE)) {\n  for (  JavaFileObject file : fileObjects.values()) {\n    if (file.getKind() == Kind.SOURCE && file.getName().startsWith(packageName)) {\n      files.add(file);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 777,
        "startLineNumber" : 213,
        "startColumnNumber" : 12,
        "endLineNumber" : 227,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (location == StandardLocation.CLASS_PATH && kinds.contains(JavaFileObject.Kind.CLASS)) {\n  for (  JavaFileObject file : fileObjects.values()) {\n    if (file.getKind() == Kind.CLASS && file.getName().startsWith(packageName)) {\n      files.add(file);\n    }\n  }\n  files.addAll(classLoader.files());\n}\n else if (location == StandardLocation.SOURCE_PATH && kinds.contains(JavaFileObject.Kind.SOURCE)) {\n  for (  JavaFileObject file : fileObjects.values()) {\n    if (file.getKind() == Kind.SOURCE && file.getName().startsWith(packageName)) {\n      files.add(file);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 99,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1211,
        "startLineNumber" : 206,
        "startColumnNumber" : 35,
        "endLineNumber" : 234,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Iterable<JavaFileObject> result=super.list(location,packageName,kinds,recurse);\n  ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();\n  ArrayList<JavaFileObject> files=new ArrayList<JavaFileObject>();\n  if (location == StandardLocation.CLASS_PATH && kinds.contains(JavaFileObject.Kind.CLASS)) {\n    for (    JavaFileObject file : fileObjects.values()) {\n      if (file.getKind() == Kind.CLASS && file.getName().startsWith(packageName)) {\n        files.add(file);\n      }\n    }\n    files.addAll(classLoader.files());\n  }\n else   if (location == StandardLocation.SOURCE_PATH && kinds.contains(JavaFileObject.Kind.SOURCE)) {\n    for (    JavaFileObject file : fileObjects.values()) {\n      if (file.getKind() == Kind.SOURCE && file.getName().startsWith(packageName)) {\n        files.add(file);\n      }\n    }\n  }\n  for (  JavaFileObject file : result) {\n    files.add(file);\n  }\n  return files;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1376,
        "startLineNumber" : 204,
        "startColumnNumber" : 8,
        "endLineNumber" : 234,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public Iterable<JavaFileObject> list(Location location,String packageName,Set<Kind> kinds,boolean recurse) throws IOException {\n  Iterable<JavaFileObject> result=super.list(location,packageName,kinds,recurse);\n  ClassLoader contextClassLoader=Thread.currentThread().getContextClassLoader();\n  ArrayList<JavaFileObject> files=new ArrayList<JavaFileObject>();\n  if (location == StandardLocation.CLASS_PATH && kinds.contains(JavaFileObject.Kind.CLASS)) {\n    for (    JavaFileObject file : fileObjects.values()) {\n      if (file.getKind() == Kind.CLASS && file.getName().startsWith(packageName)) {\n        files.add(file);\n      }\n    }\n    files.addAll(classLoader.files());\n  }\n else   if (location == StandardLocation.SOURCE_PATH && kinds.contains(JavaFileObject.Kind.SOURCE)) {\n    for (    JavaFileObject file : fileObjects.values()) {\n      if (file.getKind() == Kind.SOURCE && file.getName().startsWith(packageName)) {\n        files.add(file);\n      }\n    }\n  }\n  for (  JavaFileObject file : result) {\n    files.add(file);\n  }\n  return files;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 182,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 223,
        "startColumnNumber" : 20,
        "endLineNumber" : 225,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (file.getKind() == Kind.SOURCE && file.getName().startsWith(packageName)) {\n  files.add(file);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 5
    },
    "tokenLength" : 10,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 71,
    "startLineNumber" : 223,
    "startColumnNumber" : 24,
    "endLineNumber" : 223,
    "endColumnNumber" : 95
  } ],
  "layoutRelationDataList" : [ ]
}