{
  "id" : 86,
  "expression" : "shouldCrop",
  "projectName" : "Yalantis@uCrop",
  "commitID" : "ef97e61117643633993cb2d7932f667da031d2bc",
  "filePath" : "/ucrop/src/main/java/com/yalantis/ucrop/task/BitmapCropTask.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "shouldCrop",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 139,
      "startColumnNumber" : 37,
      "endLineNumber" : 139,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 139,
        "startColumnNumber" : 19,
        "endLineNumber" : 139,
        "endColumnNumber" : 47
      },
      "nodeContext" : "\"Should crop: \" + shouldCrop",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 48
      },
      "nodeContext" : "Log.i(TAG,\"Should crop: \" + shouldCrop)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 49
      },
      "nodeContext" : "Log.i(TAG,\"Should crop: \" + shouldCrop);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1274,
        "startLineNumber" : 130,
        "startColumnNumber" : 63,
        "endLineNumber" : 154,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ExifInterface originalExif=new ExifInterface(mImageInputPath);\n  cropOffsetX=Math.round((mCropRect.left - mCurrentImageRect.left) / mCurrentScale);\n  cropOffsetY=Math.round((mCropRect.top - mCurrentImageRect.top) / mCurrentScale);\n  mCroppedImageWidth=Math.round(mCropRect.width() / mCurrentScale);\n  mCroppedImageHeight=Math.round(mCropRect.height() / mCurrentScale);\n  boolean shouldCrop=shouldCrop(mCroppedImageWidth,mCroppedImageHeight);\n  Log.i(TAG,\"Should crop: \" + shouldCrop);\n  if (shouldCrop) {\n    boolean cropped=cropCImg(mImageInputPath,mImageOutputPath,cropOffsetX,cropOffsetY,mCroppedImageWidth,mCroppedImageHeight,mCurrentAngle,resizeScale,mCompressFormat.ordinal(),mCompressQuality,mExifInfo.getExifDegrees(),mExifInfo.getExifTranslation());\n    if (cropped && mCompressFormat.equals(Bitmap.CompressFormat.JPEG)) {\n      ImageHeaderParser.copyExif(originalExif,mCroppedImageWidth,mCroppedImageHeight,mImageOutputPath);\n    }\n    return cropped;\n  }\n else {\n    FileUtils.copyFile(mImageInputPath,mImageOutputPath);\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1333,
        "startLineNumber" : 130,
        "startColumnNumber" : 4,
        "endLineNumber" : 154,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private boolean crop(float resizeScale) throws IOException {\n  ExifInterface originalExif=new ExifInterface(mImageInputPath);\n  cropOffsetX=Math.round((mCropRect.left - mCurrentImageRect.left) / mCurrentScale);\n  cropOffsetY=Math.round((mCropRect.top - mCurrentImageRect.top) / mCurrentScale);\n  mCroppedImageWidth=Math.round(mCropRect.width() / mCurrentScale);\n  mCroppedImageHeight=Math.round(mCropRect.height() / mCurrentScale);\n  boolean shouldCrop=shouldCrop(mCroppedImageWidth,mCroppedImageHeight);\n  Log.i(TAG,\"Should crop: \" + shouldCrop);\n  if (shouldCrop) {\n    boolean cropped=cropCImg(mImageInputPath,mImageOutputPath,cropOffsetX,cropOffsetY,mCroppedImageWidth,mCroppedImageHeight,mCurrentAngle,resizeScale,mCompressFormat.ordinal(),mCompressQuality,mExifInfo.getExifDegrees(),mExifInfo.getExifTranslation());\n    if (cropped && mCompressFormat.equals(Bitmap.CompressFormat.JPEG)) {\n      ImageHeaderParser.copyExif(originalExif,mCroppedImageWidth,mCroppedImageHeight,mImageOutputPath);\n    }\n    return cropped;\n  }\n else {\n    FileUtils.copyFile(mImageInputPath,mImageOutputPath);\n    return false;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 147,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 49
      },
      "nodeContext" : "Log.i(TAG,\"Should crop: \" + shouldCrop);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "boolean"
  }, {
    "nodeContext" : "shouldCrop",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 141,
      "startColumnNumber" : 12,
      "endLineNumber" : 141,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 712,
        "startLineNumber" : 141,
        "startColumnNumber" : 8,
        "endLineNumber" : 153,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (shouldCrop) {\n  boolean cropped=cropCImg(mImageInputPath,mImageOutputPath,cropOffsetX,cropOffsetY,mCroppedImageWidth,mCroppedImageHeight,mCurrentAngle,resizeScale,mCompressFormat.ordinal(),mCompressQuality,mExifInfo.getExifDegrees(),mExifInfo.getExifTranslation());\n  if (cropped && mCompressFormat.equals(Bitmap.CompressFormat.JPEG)) {\n    ImageHeaderParser.copyExif(originalExif,mCroppedImageWidth,mCroppedImageHeight,mImageOutputPath);\n  }\n  return cropped;\n}\n else {\n  FileUtils.copyFile(mImageInputPath,mImageOutputPath);\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 58,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1274,
        "startLineNumber" : 130,
        "startColumnNumber" : 63,
        "endLineNumber" : 154,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ExifInterface originalExif=new ExifInterface(mImageInputPath);\n  cropOffsetX=Math.round((mCropRect.left - mCurrentImageRect.left) / mCurrentScale);\n  cropOffsetY=Math.round((mCropRect.top - mCurrentImageRect.top) / mCurrentScale);\n  mCroppedImageWidth=Math.round(mCropRect.width() / mCurrentScale);\n  mCroppedImageHeight=Math.round(mCropRect.height() / mCurrentScale);\n  boolean shouldCrop=shouldCrop(mCroppedImageWidth,mCroppedImageHeight);\n  Log.i(TAG,\"Should crop: \" + shouldCrop);\n  if (shouldCrop) {\n    boolean cropped=cropCImg(mImageInputPath,mImageOutputPath,cropOffsetX,cropOffsetY,mCroppedImageWidth,mCroppedImageHeight,mCurrentAngle,resizeScale,mCompressFormat.ordinal(),mCompressQuality,mExifInfo.getExifDegrees(),mExifInfo.getExifTranslation());\n    if (cropped && mCompressFormat.equals(Bitmap.CompressFormat.JPEG)) {\n      ImageHeaderParser.copyExif(originalExif,mCroppedImageWidth,mCroppedImageHeight,mImageOutputPath);\n    }\n    return cropped;\n  }\n else {\n    FileUtils.copyFile(mImageInputPath,mImageOutputPath);\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1333,
        "startLineNumber" : 130,
        "startColumnNumber" : 4,
        "endLineNumber" : 154,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private boolean crop(float resizeScale) throws IOException {\n  ExifInterface originalExif=new ExifInterface(mImageInputPath);\n  cropOffsetX=Math.round((mCropRect.left - mCurrentImageRect.left) / mCurrentScale);\n  cropOffsetY=Math.round((mCropRect.top - mCurrentImageRect.top) / mCurrentScale);\n  mCroppedImageWidth=Math.round(mCropRect.width() / mCurrentScale);\n  mCroppedImageHeight=Math.round(mCropRect.height() / mCurrentScale);\n  boolean shouldCrop=shouldCrop(mCroppedImageWidth,mCroppedImageHeight);\n  Log.i(TAG,\"Should crop: \" + shouldCrop);\n  if (shouldCrop) {\n    boolean cropped=cropCImg(mImageInputPath,mImageOutputPath,cropOffsetX,cropOffsetY,mCroppedImageWidth,mCroppedImageHeight,mCurrentAngle,resizeScale,mCompressFormat.ordinal(),mCompressQuality,mExifInfo.getExifDegrees(),mExifInfo.getExifTranslation());\n    if (cropped && mCompressFormat.equals(Bitmap.CompressFormat.JPEG)) {\n      ImageHeaderParser.copyExif(originalExif,mCroppedImageWidth,mCroppedImageHeight,mImageOutputPath);\n    }\n    return cropped;\n  }\n else {\n    FileUtils.copyFile(mImageInputPath,mImageOutputPath);\n    return false;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 147,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 712,
        "startLineNumber" : 141,
        "startColumnNumber" : 8,
        "endLineNumber" : 153,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (shouldCrop) {\n  boolean cropped=cropCImg(mImageInputPath,mImageOutputPath,cropOffsetX,cropOffsetY,mCroppedImageWidth,mCroppedImageHeight,mCurrentAngle,resizeScale,mCompressFormat.ordinal(),mCompressQuality,mExifInfo.getExifDegrees(),mExifInfo.getExifTranslation());\n  if (cropped && mCompressFormat.equals(Bitmap.CompressFormat.JPEG)) {\n    ImageHeaderParser.copyExif(originalExif,mCroppedImageWidth,mCroppedImageHeight,mImageOutputPath);\n  }\n  return cropped;\n}\n else {\n  FileUtils.copyFile(mImageInputPath,mImageOutputPath);\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 58,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 139,
    "startColumnNumber" : 37,
    "endLineNumber" : 139,
    "endColumnNumber" : 47
  }, {
    "charLength" : 10,
    "startLineNumber" : 141,
    "startColumnNumber" : 12,
    "endLineNumber" : 141,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}