{
  "id" : 323,
  "expression" : "map.getInstance(Integer.class)",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava-tests/test/com/google/common/reflect/ImmutableTypeToInstanceMapTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "map.getInstance(Integer.class)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 89,
      "startColumnNumber" : 26,
      "endLineNumber" : 89,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 89,
        "startColumnNumber" : 20,
        "endLineNumber" : 89,
        "endColumnNumber" : 56
      },
      "nodeContext" : "(int)map.getInstance(Integer.class)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 57
      },
      "nodeContext" : "assertEquals(0,(int)map.getInstance(Integer.class))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 58
      },
      "nodeContext" : "assertEquals(0,(int)map.getInstance(Integer.class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 493,
        "startLineNumber" : 81,
        "startColumnNumber" : 40,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ImmutableTypeToInstanceMap<Number> map=ImmutableTypeToInstanceMap.<Number>builder().put(Integer.class,0).put(int.class,1).build();\n  assertEquals(2,map.size());\n  assertEquals(0,(int)map.getInstance(Integer.class));\n  assertEquals(0,(int)map.getInstance(TypeToken.of(Integer.class)));\n  assertEquals(1,(int)map.getInstance(int.class));\n  assertEquals(1,(int)map.getInstance(TypeToken.of(int.class)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 531,
        "startLineNumber" : 81,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testPrimitiveAndWrapper(){\n  ImmutableTypeToInstanceMap<Number> map=ImmutableTypeToInstanceMap.<Number>builder().put(Integer.class,0).put(int.class,1).build();\n  assertEquals(2,map.size());\n  assertEquals(0,(int)map.getInstance(Integer.class));\n  assertEquals(0,(int)map.getInstance(TypeToken.of(Integer.class)));\n  assertEquals(1,(int)map.getInstance(int.class));\n  assertEquals(1,(int)map.getInstance(TypeToken.of(int.class)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 90,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 58
      },
      "nodeContext" : "assertEquals(0,(int)map.getInstance(Integer.class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "java.lang.Integer"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 89,
    "startColumnNumber" : 26,
    "endLineNumber" : 89,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}