{
  "id" : 271,
  "expression" : "naming.selectOneHealthyInstance(serviceName,Arrays.asList(\"c1\",\"c2\"))",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/test/src/test/java/com/alibaba/nacos/test/naming/SelectOneHealthyInstance_ITCase.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "naming.selectOneHealthyInstance(serviceName,Arrays.asList(\"c1\",\"c2\"))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 71,
      "startLineNumber" : 141,
      "startColumnNumber" : 28,
      "endLineNumber" : 141,
      "endColumnNumber" : 99
    },
    "astNodeNumber" : 9,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 141,
        "startColumnNumber" : 17,
        "endLineNumber" : 141,
        "endColumnNumber" : 99
      },
      "nodeContext" : "instance=naming.selectOneHealthyInstance(serviceName,Arrays.asList(\"c1\",\"c2\"))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 141,
        "startColumnNumber" : 8,
        "endLineNumber" : 141,
        "endColumnNumber" : 100
      },
      "nodeContext" : "Instance instance=naming.selectOneHealthyInstance(serviceName,Arrays.asList(\"c1\",\"c2\"));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 997,
        "startLineNumber" : 133,
        "startColumnNumber" : 69,
        "endLineNumber" : 156,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String serviceName=randomDomainName();\n  naming.registerInstance(serviceName,\"1.1.1.1\",TEST_PORT,\"c1\");\n  naming.registerInstance(serviceName,\"127.0.0.1\",TEST_PORT,\"c1\");\n  naming.registerInstance(serviceName,\"127.0.0.1\",60000,\"c1\");\n  naming.registerInstance(serviceName,\"127.0.0.1\",60001,\"c2\");\n  TimeUnit.SECONDS.sleep(2);\n  Instance instance=naming.selectOneHealthyInstance(serviceName,Arrays.asList(\"c1\",\"c2\"));\n  Assert.assertNotSame(\"1.1.1.1\",instance.getIp());\n  List<Instance> instancesGet=naming.getAllInstances(serviceName);\n  for (  Instance instance1 : instancesGet) {\n    if (instance1.getIp().equals(instance.getIp()) && instance1.getPort() == instance.getPort()) {\n      Assert.assertTrue(instance.isHealthy());\n      Assert.assertTrue(verifyInstance(instance1,instance));\n      return;\n    }\n  }\n  Assert.fail();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1148,
        "startLineNumber" : 128,
        "startColumnNumber" : 4,
        "endLineNumber" : 156,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 获取指定多个cluster中一个健康的Instance\n * @throws Exception\n */\n@Test public void selectOneHealthyInstancesClusters() throws Exception {\n  String serviceName=randomDomainName();\n  naming.registerInstance(serviceName,\"1.1.1.1\",TEST_PORT,\"c1\");\n  naming.registerInstance(serviceName,\"127.0.0.1\",TEST_PORT,\"c1\");\n  naming.registerInstance(serviceName,\"127.0.0.1\",60000,\"c1\");\n  naming.registerInstance(serviceName,\"127.0.0.1\",60001,\"c2\");\n  TimeUnit.SECONDS.sleep(2);\n  Instance instance=naming.selectOneHealthyInstance(serviceName,Arrays.asList(\"c1\",\"c2\"));\n  Assert.assertNotSame(\"1.1.1.1\",instance.getIp());\n  List<Instance> instancesGet=naming.getAllInstances(serviceName);\n  for (  Instance instance1 : instancesGet) {\n    if (instance1.getIp().equals(instance.getIp()) && instance1.getPort() == instance.getPort()) {\n      Assert.assertTrue(instance.isHealthy());\n      Assert.assertTrue(verifyInstance(instance1,instance));\n      return;\n    }\n  }\n  Assert.fail();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 141,
        "startColumnNumber" : 8,
        "endLineNumber" : 141,
        "endColumnNumber" : 100
      },
      "nodeContext" : "Instance instance=naming.selectOneHealthyInstance(serviceName,Arrays.asList(\"c1\",\"c2\"));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 7,
    "type" : "com.alibaba.nacos.api.naming.pojo.Instance"
  } ],
  "positionList" : [ {
    "charLength" : 71,
    "startLineNumber" : 141,
    "startColumnNumber" : 28,
    "endLineNumber" : 141,
    "endColumnNumber" : 99
  } ],
  "layoutRelationDataList" : [ ]
}