{
  "id" : 321,
  "expression" : "\"TaskLock[%s] is already revoked\"",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/indexing-service/src/main/java/org/apache/druid/indexing/overlord/TaskLockbox.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"TaskLock[%s] is already revoked\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 628,
      "startColumnNumber" : 17,
      "endLineNumber" : 628,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 628,
        "startColumnNumber" : 8,
        "endLineNumber" : 628,
        "endColumnNumber" : 57
      },
      "nodeContext" : "log.warn(\"TaskLock[%s] is already revoked\",lock)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 628,
        "startColumnNumber" : 8,
        "endLineNumber" : 628,
        "endColumnNumber" : 58
      },
      "nodeContext" : "log.warn(\"TaskLock[%s] is already revoked\",lock);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 627,
        "startColumnNumber" : 28,
        "endLineNumber" : 629,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  log.warn(\"TaskLock[%s] is already revoked\",lock);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 994,
        "startLineNumber" : 627,
        "startColumnNumber" : 6,
        "endLineNumber" : 643,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (lock.isRevoked()) {\n  log.warn(\"TaskLock[%s] is already revoked\",lock);\n}\n else {\n  final TaskLock revokedLock=lock.revokedCopy();\n  taskStorage.replaceLock(taskId,lock,revokedLock);\n  final List<TaskLockPosse> possesHolder=running.get(task.getDataSource()).get(lock.getInterval().getStart()).get(lock.getInterval());\n  final TaskLockPosse foundPosse=possesHolder.stream().filter(posse -> posse.getTaskLock().equals(lock)).findFirst().orElseThrow(() -> new ISE(\"Failed to find lock posse for lock[%s]\",lock));\n  possesHolder.remove(foundPosse);\n  possesHolder.add(foundPosse.withTaskLock(revokedLock));\n  log.info(\"Revoked taskLock[%s]\",lock);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 104,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1376,
        "startLineNumber" : 615,
        "startColumnNumber" : 8,
        "endLineNumber" : 644,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!activeTasks.contains(taskId)) {\n    throw new ISE(\"Cannot revoke lock for inactive task[%s]\",taskId);\n  }\n  final Task task=taskStorage.getTask(taskId).orNull();\n  if (task == null) {\n    throw new ISE(\"Cannot revoke lock for unknown task[%s]\",taskId);\n  }\n  log.info(\"Revoking task lock[%s] for task[%s]\",lock,taskId);\n  if (lock.isRevoked()) {\n    log.warn(\"TaskLock[%s] is already revoked\",lock);\n  }\n else {\n    final TaskLock revokedLock=lock.revokedCopy();\n    taskStorage.replaceLock(taskId,lock,revokedLock);\n    final List<TaskLockPosse> possesHolder=running.get(task.getDataSource()).get(lock.getInterval().getStart()).get(lock.getInterval());\n    final TaskLockPosse foundPosse=possesHolder.stream().filter(posse -> posse.getTaskLock().equals(lock)).findFirst().orElseThrow(() -> new ISE(\"Failed to find lock posse for lock[%s]\",lock));\n    possesHolder.remove(foundPosse);\n    possesHolder.add(foundPosse.withTaskLock(revokedLock));\n    log.info(\"Revoked taskLock[%s]\",lock);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1422,
        "startLineNumber" : 615,
        "startColumnNumber" : 4,
        "endLineNumber" : 647,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  if (!activeTasks.contains(taskId)) {\n    throw new ISE(\"Cannot revoke lock for inactive task[%s]\",taskId);\n  }\n  final Task task=taskStorage.getTask(taskId).orNull();\n  if (task == null) {\n    throw new ISE(\"Cannot revoke lock for unknown task[%s]\",taskId);\n  }\n  log.info(\"Revoking task lock[%s] for task[%s]\",lock,taskId);\n  if (lock.isRevoked()) {\n    log.warn(\"TaskLock[%s] is already revoked\",lock);\n  }\n else {\n    final TaskLock revokedLock=lock.revokedCopy();\n    taskStorage.replaceLock(taskId,lock,revokedLock);\n    final List<TaskLockPosse> possesHolder=running.get(task.getDataSource()).get(lock.getInterval().getStart()).get(lock.getInterval());\n    final TaskLockPosse foundPosse=possesHolder.stream().filter(posse -> posse.getTaskLock().equals(lock)).findFirst().orElseThrow(() -> new ISE(\"Failed to find lock posse for lock[%s]\",lock));\n    possesHolder.remove(foundPosse);\n    possesHolder.add(foundPosse.withTaskLock(revokedLock));\n    log.info(\"Revoked taskLock[%s]\",lock);\n  }\n}\n  finally {\n  giant.unlock();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 154,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1451,
        "startLineNumber" : 612,
        "startColumnNumber" : 2,
        "endLineNumber" : 648,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  giant.lock();\n  try {\n    if (!activeTasks.contains(taskId)) {\n      throw new ISE(\"Cannot revoke lock for inactive task[%s]\",taskId);\n    }\n    final Task task=taskStorage.getTask(taskId).orNull();\n    if (task == null) {\n      throw new ISE(\"Cannot revoke lock for unknown task[%s]\",taskId);\n    }\n    log.info(\"Revoking task lock[%s] for task[%s]\",lock,taskId);\n    if (lock.isRevoked()) {\n      log.warn(\"TaskLock[%s] is already revoked\",lock);\n    }\n else {\n      final TaskLock revokedLock=lock.revokedCopy();\n      taskStorage.replaceLock(taskId,lock,revokedLock);\n      final List<TaskLockPosse> possesHolder=running.get(task.getDataSource()).get(lock.getInterval().getStart()).get(lock.getInterval());\n      final TaskLockPosse foundPosse=possesHolder.stream().filter(posse -> posse.getTaskLock().equals(lock)).findFirst().orElseThrow(() -> new ISE(\"Failed to find lock posse for lock[%s]\",lock));\n      possesHolder.remove(foundPosse);\n      possesHolder.add(foundPosse.withTaskLock(revokedLock));\n      log.info(\"Revoked taskLock[%s]\",lock);\n    }\n  }\n  finally {\n    giant.unlock();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 159,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1983,
        "startLineNumber" : 602,
        "startColumnNumber" : 2,
        "endLineNumber" : 648,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Mark the lock as revoked. Note that revoked locks are NOT removed. Instead, they are maintained in  {@link #running}and  {@link #taskStorage} as the normal locks do. This is to check locks are revoked when they are requested to beacquired and notify to the callers if revoked. Revoked locks are removed by calling {@link #unlock(Task,Interval)}.\n * @param taskId an id of the task holding the lock\n * @param lock   lock to be revoked\n */\nprivate void revokeLock(String taskId,TaskLock lock){\n  giant.lock();\n  try {\n    if (!activeTasks.contains(taskId)) {\n      throw new ISE(\"Cannot revoke lock for inactive task[%s]\",taskId);\n    }\n    final Task task=taskStorage.getTask(taskId).orNull();\n    if (task == null) {\n      throw new ISE(\"Cannot revoke lock for unknown task[%s]\",taskId);\n    }\n    log.info(\"Revoking task lock[%s] for task[%s]\",lock,taskId);\n    if (lock.isRevoked()) {\n      log.warn(\"TaskLock[%s] is already revoked\",lock);\n    }\n else {\n      final TaskLock revokedLock=lock.revokedCopy();\n      taskStorage.replaceLock(taskId,lock,revokedLock);\n      final List<TaskLockPosse> possesHolder=running.get(task.getDataSource()).get(lock.getInterval().getStart()).get(lock.getInterval());\n      final TaskLockPosse foundPosse=possesHolder.stream().filter(posse -> posse.getTaskLock().equals(lock)).findFirst().orElseThrow(() -> new ISE(\"Failed to find lock posse for lock[%s]\",lock));\n      possesHolder.remove(foundPosse);\n      possesHolder.add(foundPosse.withTaskLock(revokedLock));\n      log.info(\"Revoked taskLock[%s]\",lock);\n    }\n  }\n  finally {\n    giant.unlock();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 172,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 628,
        "startColumnNumber" : 8,
        "endLineNumber" : 628,
        "endColumnNumber" : 58
      },
      "nodeContext" : "log.warn(\"TaskLock[%s] is already revoked\",lock);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 628,
    "startColumnNumber" : 17,
    "endLineNumber" : 628,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ ]
}