{
  "id" : 199,
  "expression" : "sourceResultPartitions.get(0).getId()",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-runtime/src/test/java/org/apache/flink/runtime/executiongraph/RegionPartitionGroupReleaseStrategyTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sourceResultPartitions.get(0).getId()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 94,
      "startColumnNumber" : 16,
      "endLineNumber" : 94,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 93,
        "startColumnNumber" : 44,
        "endLineNumber" : 94,
        "endColumnNumber" : 53
      },
      "nodeContext" : "onlySourceResultPartitionId=sourceResultPartitions.get(0).getId()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 54
      },
      "nodeContext" : "final IntermediateResultPartitionID onlySourceResultPartitionId=sourceResultPartitions.get(0).getId();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1696,
        "startLineNumber" : 75,
        "startColumnNumber" : 85,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final List<TestingSchedulingExecutionVertex> sourceVertices=testingSchedulingTopology.addExecutionVertices().finish();\n  final List<TestingSchedulingExecutionVertex> intermediateVertices=testingSchedulingTopology.addExecutionVertices().finish();\n  final List<TestingSchedulingExecutionVertex> sinkVertices=testingSchedulingTopology.addExecutionVertices().finish();\n  final List<TestingSchedulingResultPartition> sourceResultPartitions=testingSchedulingTopology.connectAllToAll(sourceVertices,intermediateVertices).finish();\n  testingSchedulingTopology.connectAllToAll(intermediateVertices,sinkVertices).withResultPartitionType(ResultPartitionType.PIPELINED).finish();\n  final ExecutionVertexID onlyIntermediateVertexId=intermediateVertices.get(0).getId();\n  final ExecutionVertexID onlySinkVertexId=sinkVertices.get(0).getId();\n  final IntermediateResultPartitionID onlySourceResultPartitionId=sourceResultPartitions.get(0).getId();\n  final RegionPartitionGroupReleaseStrategy regionPartitionGroupReleaseStrategy=new RegionPartitionGroupReleaseStrategy(testingSchedulingTopology);\n  regionPartitionGroupReleaseStrategy.vertexFinished(onlyIntermediateVertexId);\n  final List<IntermediateResultPartitionID> partitionsToRelease=getReleasablePartitions(regionPartitionGroupReleaseStrategy,onlySinkVertexId);\n  assertThat(partitionsToRelease,contains(onlySourceResultPartitionId));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 143,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1787,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void releasePartitionsIfDownstreamRegionWithMultipleOperatorsIsFinished(){\n  final List<TestingSchedulingExecutionVertex> sourceVertices=testingSchedulingTopology.addExecutionVertices().finish();\n  final List<TestingSchedulingExecutionVertex> intermediateVertices=testingSchedulingTopology.addExecutionVertices().finish();\n  final List<TestingSchedulingExecutionVertex> sinkVertices=testingSchedulingTopology.addExecutionVertices().finish();\n  final List<TestingSchedulingResultPartition> sourceResultPartitions=testingSchedulingTopology.connectAllToAll(sourceVertices,intermediateVertices).finish();\n  testingSchedulingTopology.connectAllToAll(intermediateVertices,sinkVertices).withResultPartitionType(ResultPartitionType.PIPELINED).finish();\n  final ExecutionVertexID onlyIntermediateVertexId=intermediateVertices.get(0).getId();\n  final ExecutionVertexID onlySinkVertexId=sinkVertices.get(0).getId();\n  final IntermediateResultPartitionID onlySourceResultPartitionId=sourceResultPartitions.get(0).getId();\n  final RegionPartitionGroupReleaseStrategy regionPartitionGroupReleaseStrategy=new RegionPartitionGroupReleaseStrategy(testingSchedulingTopology);\n  regionPartitionGroupReleaseStrategy.vertexFinished(onlyIntermediateVertexId);\n  final List<IntermediateResultPartitionID> partitionsToRelease=getReleasablePartitions(regionPartitionGroupReleaseStrategy,onlySinkVertexId);\n  assertThat(partitionsToRelease,contains(onlySourceResultPartitionId));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 93,
        "startColumnNumber" : 44,
        "endLineNumber" : 94,
        "endColumnNumber" : 53
      },
      "nodeContext" : "onlySourceResultPartitionId=sourceResultPartitions.get(0).getId()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "org.apache.flink.runtime.jobgraph.IntermediateResultPartitionID"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 94,
    "startColumnNumber" : 16,
    "endLineNumber" : 94,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ ]
}