{
  "id" : 321,
  "expression" : "2",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/world/blocks/production/PayloadAcceptor.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "2",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 32,
      "startColumnNumber" : 36,
      "endLineNumber" : 32,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 32,
        "startColumnNumber" : 19,
        "endLineNumber" : 32,
        "endColumnNumber" : 37
      },
      "nodeContext" : "build.block.size / 2",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 32,
        "startColumnNumber" : 19,
        "endLineNumber" : 32,
        "endColumnNumber" : 41
      },
      "nodeContext" : "build.block.size / 2 + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 32,
        "startColumnNumber" : 12,
        "endLineNumber" : 32,
        "endColumnNumber" : 41
      },
      "nodeContext" : "trns=build.block.size / 2 + 1",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 42
      },
      "nodeContext" : "int trns=build.block.size / 2 + 1;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1436,
        "startLineNumber" : 30,
        "startColumnNumber" : 63,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int size=build.block.size;\n  int trns=build.block.size / 2 + 1;\n  Building accept=build.nearby(Geometry.d4(direction).x * trns,Geometry.d4(direction).y * trns);\n  return accept != null && accept.block.outputsPayload && ((accept.block.size == size && Math.abs(accept.tileX() - build.tileX()) % size == 0 && Math.abs(accept.tileY() - build.tileY()) % size == 0 && ((accept.block.rotate && accept.tileX() + Geometry.d4(accept.rotation).x * size == build.tileX() && accept.tileY() + Geometry.d4(accept.rotation).y * size == build.tileY()) || !accept.block.rotate || !accept.block.outputFacing)) || (accept.block.size < size && (accept.rotation % 2 == 0 ? Math.abs(accept.y - build.y) <= (size * tilesize - accept.block.size * tilesize) / 2f : Math.abs(accept.x - build.x) <= (size * tilesize - accept.block.size * tilesize) / 2f)) && (!accept.block.rotate || accept.front() == build || !accept.block.outputFacing));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 246,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1495,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static boolean blends(Building build,int direction){\n  int size=build.block.size;\n  int trns=build.block.size / 2 + 1;\n  Building accept=build.nearby(Geometry.d4(direction).x * trns,Geometry.d4(direction).y * trns);\n  return accept != null && accept.block.outputsPayload && ((accept.block.size == size && Math.abs(accept.tileX() - build.tileX()) % size == 0 && Math.abs(accept.tileY() - build.tileY()) % size == 0 && ((accept.block.rotate && accept.tileX() + Geometry.d4(accept.rotation).x * size == build.tileX() && accept.tileY() + Geometry.d4(accept.rotation).y * size == build.tileY()) || !accept.block.rotate || !accept.block.outputFacing)) || (accept.block.size < size && (accept.rotation % 2 == 0 ? Math.abs(accept.y - build.y) <= (size * tilesize - accept.block.size * tilesize) / 2f : Math.abs(accept.x - build.x) <= (size * tilesize - accept.block.size * tilesize) / 2f)) && (!accept.block.rotate || accept.front() == build || !accept.block.outputFacing));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 258,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 42
      },
      "nodeContext" : "int trns=build.block.size / 2 + 1;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "2",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 47,
      "startColumnNumber" : 31,
      "endLineNumber" : 47,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 47,
        "startColumnNumber" : 13,
        "endLineNumber" : 47,
        "endColumnNumber" : 32
      },
      "nodeContext" : "accept.rotation % 2",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 47,
        "startColumnNumber" : 13,
        "endLineNumber" : 47,
        "endColumnNumber" : 37
      },
      "nodeContext" : "accept.rotation % 2 == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 318,
        "startLineNumber" : 47,
        "startColumnNumber" : 13,
        "endLineNumber" : 49,
        "endColumnNumber" : 99
      },
      "nodeContext" : "accept.rotation % 2 == 0 ? Math.abs(accept.y - build.y) <= (size * tilesize - accept.block.size * tilesize) / 2f : Math.abs(accept.x - build.x) <= (size * tilesize - accept.block.size * tilesize) / 2f",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 58,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 359,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 17
      },
      "nodeContext" : "(accept.rotation % 2 == 0 ? Math.abs(accept.y - build.y) <= (size * tilesize - accept.block.size * tilesize) / 2f : Math.abs(accept.x - build.x) <= (size * tilesize - accept.block.size * tilesize) / 2f)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 59,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 399,
        "startLineNumber" : 46,
        "startColumnNumber" : 13,
        "endLineNumber" : 50,
        "endColumnNumber" : 17
      },
      "nodeContext" : "accept.block.size < size && (accept.rotation % 2 == 0 ? Math.abs(accept.y - build.y) <= (size * tilesize - accept.block.size * tilesize) / 2f : Math.abs(accept.x - build.x) <= (size * tilesize - accept.block.size * tilesize) / 2f)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 67,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 401,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 18
      },
      "nodeContext" : "(accept.block.size < size && (accept.rotation % 2 == 0 ? Math.abs(accept.y - build.y) <= (size * tilesize - accept.block.size * tilesize) / 2f : Math.abs(accept.x - build.x) <= (size * tilesize - accept.block.size * tilesize) / 2f))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 68,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 484,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 101
      },
      "nodeContext" : "(accept.block.size < size && (accept.rotation % 2 == 0 ? Math.abs(accept.y - build.y) <= (size * tilesize - accept.block.size * tilesize) / 2f : Math.abs(accept.x - build.x) <= (size * tilesize - accept.block.size * tilesize) / 2f)) && (!accept.block.rotate || accept.front() == build || !accept.block.outputFacing)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 89,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 1010,
        "startLineNumber" : 38,
        "startColumnNumber" : 13,
        "endLineNumber" : 50,
        "endColumnNumber" : 101
      },
      "nodeContext" : "(accept.block.size == size && Math.abs(accept.tileX() - build.tileX()) % size == 0 && Math.abs(accept.tileY() - build.tileY()) % size == 0 && ((accept.block.rotate && accept.tileX() + Geometry.d4(accept.rotation).x * size == build.tileX() && accept.tileY() + Geometry.d4(accept.rotation).y * size == build.tileY()) || !accept.block.rotate || !accept.block.outputFacing)) || (accept.block.size < size && (accept.rotation % 2 == 0 ? Math.abs(accept.y - build.y) <= (size * tilesize - accept.block.size * tilesize) / 2f : Math.abs(accept.x - build.x) <= (size * tilesize - accept.block.size * tilesize) / 2f)) && (!accept.block.rotate || accept.front() == build || !accept.block.outputFacing)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 187,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 1060,
        "startLineNumber" : 38,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 13
      },
      "nodeContext" : "((accept.block.size == size && Math.abs(accept.tileX() - build.tileX()) % size == 0 && Math.abs(accept.tileY() - build.tileY()) % size == 0 && ((accept.block.rotate && accept.tileX() + Geometry.d4(accept.rotation).x * size == build.tileX() && accept.tileY() + Geometry.d4(accept.rotation).y * size == build.tileY()) || !accept.block.rotate || !accept.block.outputFacing)) || (accept.block.size < size && (accept.rotation % 2 == 0 ? Math.abs(accept.y - build.y) <= (size * tilesize - accept.block.size * tilesize) / 2f : Math.abs(accept.x - build.x) <= (size * tilesize - accept.block.size * tilesize) / 2f)) && (!accept.block.rotate || accept.front() == build || !accept.block.outputFacing))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 188,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 1226,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 51,
        "endColumnNumber" : 13
      },
      "nodeContext" : "accept != null && accept.block.outputsPayload && ((accept.block.size == size && Math.abs(accept.tileX() - build.tileX()) % size == 0 && Math.abs(accept.tileY() - build.tileY()) % size == 0 && ((accept.block.rotate && accept.tileX() + Geometry.d4(accept.rotation).x * size == build.tileX() && accept.tileY() + Geometry.d4(accept.rotation).y * size == build.tileY()) || !accept.block.rotate || !accept.block.outputFacing)) || (accept.block.size < size && (accept.rotation % 2 == 0 ? Math.abs(accept.y - build.y) <= (size * tilesize - accept.block.size * tilesize) / 2f : Math.abs(accept.x - build.x) <= (size * tilesize - accept.block.size * tilesize) / 2f)) && (!accept.block.rotate || accept.front() == build || !accept.block.outputFacing))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 198,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1234,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 14
      },
      "nodeContext" : "return accept != null && accept.block.outputsPayload && ((accept.block.size == size && Math.abs(accept.tileX() - build.tileX()) % size == 0 && Math.abs(accept.tileY() - build.tileY()) % size == 0 && ((accept.block.rotate && accept.tileX() + Geometry.d4(accept.rotation).x * size == build.tileX() && accept.tileY() + Geometry.d4(accept.rotation).y * size == build.tileY()) || !accept.block.rotate || !accept.block.outputFacing)) || (accept.block.size < size && (accept.rotation % 2 == 0 ? Math.abs(accept.y - build.y) <= (size * tilesize - accept.block.size * tilesize) / 2f : Math.abs(accept.x - build.x) <= (size * tilesize - accept.block.size * tilesize) / 2f)) && (!accept.block.rotate || accept.front() == build || !accept.block.outputFacing));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 199,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1436,
        "startLineNumber" : 30,
        "startColumnNumber" : 63,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int size=build.block.size;\n  int trns=build.block.size / 2 + 1;\n  Building accept=build.nearby(Geometry.d4(direction).x * trns,Geometry.d4(direction).y * trns);\n  return accept != null && accept.block.outputsPayload && ((accept.block.size == size && Math.abs(accept.tileX() - build.tileX()) % size == 0 && Math.abs(accept.tileY() - build.tileY()) % size == 0 && ((accept.block.rotate && accept.tileX() + Geometry.d4(accept.rotation).x * size == build.tileX() && accept.tileY() + Geometry.d4(accept.rotation).y * size == build.tileY()) || !accept.block.rotate || !accept.block.outputFacing)) || (accept.block.size < size && (accept.rotation % 2 == 0 ? Math.abs(accept.y - build.y) <= (size * tilesize - accept.block.size * tilesize) / 2f : Math.abs(accept.x - build.x) <= (size * tilesize - accept.block.size * tilesize) / 2f)) && (!accept.block.rotate || accept.front() == build || !accept.block.outputFacing));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 246,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1495,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static boolean blends(Building build,int direction){\n  int size=build.block.size;\n  int trns=build.block.size / 2 + 1;\n  Building accept=build.nearby(Geometry.d4(direction).x * trns,Geometry.d4(direction).y * trns);\n  return accept != null && accept.block.outputsPayload && ((accept.block.size == size && Math.abs(accept.tileX() - build.tileX()) % size == 0 && Math.abs(accept.tileY() - build.tileY()) % size == 0 && ((accept.block.rotate && accept.tileX() + Geometry.d4(accept.rotation).x * size == build.tileX() && accept.tileY() + Geometry.d4(accept.rotation).y * size == build.tileY()) || !accept.block.rotate || !accept.block.outputFacing)) || (accept.block.size < size && (accept.rotation % 2 == 0 ? Math.abs(accept.y - build.y) <= (size * tilesize - accept.block.size * tilesize) / 2f : Math.abs(accept.x - build.x) <= (size * tilesize - accept.block.size * tilesize) / 2f)) && (!accept.block.rotate || accept.front() == build || !accept.block.outputFacing));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 258,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 47,
        "startColumnNumber" : 13,
        "endLineNumber" : 47,
        "endColumnNumber" : 37
      },
      "nodeContext" : "accept.rotation % 2 == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 32,
    "startColumnNumber" : 36,
    "endLineNumber" : 32,
    "endColumnNumber" : 37
  }, {
    "charLength" : 1,
    "startLineNumber" : 47,
    "startColumnNumber" : 31,
    "endLineNumber" : 47,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 11
  } ]
}