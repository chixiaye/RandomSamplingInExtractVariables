{
  "id" : 57,
  "expression" : "(mCropGridColumnCount) * 4",
  "projectName" : "Yalantis@uCrop",
  "commitID" : "ef97e61117643633993cb2d7932f667da031d2bc",
  "filePath" : "/ucrop/src/main/java/com/yalantis/ucrop/view/OverlayView.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(mCropGridColumnCount) * 4",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 474,
      "startColumnNumber" : 66,
      "endLineNumber" : 474,
      "endColumnNumber" : 92
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayCreation,dimensions]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 474,
        "startColumnNumber" : 40,
        "endLineNumber" : 474,
        "endColumnNumber" : 92
      },
      "nodeContext" : "(mCropGridRowCount) * 4 + (mCropGridColumnCount) * 4",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 474,
        "startColumnNumber" : 30,
        "endLineNumber" : 474,
        "endColumnNumber" : 93
      },
      "nodeContext" : "new float[(mCropGridRowCount) * 4 + (mCropGridColumnCount) * 4]",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 474,
        "startColumnNumber" : 16,
        "endLineNumber" : 474,
        "endColumnNumber" : 93
      },
      "nodeContext" : "mGridPoints=new float[(mCropGridRowCount) * 4 + (mCropGridColumnCount) * 4]",
      "nodeType" : "Assignment",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 474,
        "startColumnNumber" : 16,
        "endLineNumber" : 474,
        "endColumnNumber" : 94
      },
      "nodeContext" : "mGridPoints=new float[(mCropGridRowCount) * 4 + (mCropGridColumnCount) * 4];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1151,
        "startLineNumber" : 472,
        "startColumnNumber" : 65,
        "endLineNumber" : 490,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  mGridPoints=new float[(mCropGridRowCount) * 4 + (mCropGridColumnCount) * 4];\n  int index=0;\n  for (int i=0; i < mCropGridRowCount; i++) {\n    mGridPoints[index++]=mCropViewRect.left;\n    mGridPoints[index++]=(mCropViewRect.height() * (((float)i + 1.0f) / (float)(mCropGridRowCount + 1))) + mCropViewRect.top;\n    mGridPoints[index++]=mCropViewRect.right;\n    mGridPoints[index++]=(mCropViewRect.height() * (((float)i + 1.0f) / (float)(mCropGridRowCount + 1))) + mCropViewRect.top;\n  }\n  for (int i=0; i < mCropGridColumnCount; i++) {\n    mGridPoints[index++]=(mCropViewRect.width() * (((float)i + 1.0f) / (float)(mCropGridColumnCount + 1))) + mCropViewRect.left;\n    mGridPoints[index++]=mCropViewRect.top;\n    mGridPoints[index++]=(mCropViewRect.width() * (((float)i + 1.0f) / (float)(mCropGridColumnCount + 1))) + mCropViewRect.left;\n    mGridPoints[index++]=mCropViewRect.bottom;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 198,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1204,
        "startLineNumber" : 472,
        "startColumnNumber" : 12,
        "endLineNumber" : 490,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (mGridPoints == null && !mCropViewRect.isEmpty()) {\n  mGridPoints=new float[(mCropGridRowCount) * 4 + (mCropGridColumnCount) * 4];\n  int index=0;\n  for (int i=0; i < mCropGridRowCount; i++) {\n    mGridPoints[index++]=mCropViewRect.left;\n    mGridPoints[index++]=(mCropViewRect.height() * (((float)i + 1.0f) / (float)(mCropGridRowCount + 1))) + mCropViewRect.top;\n    mGridPoints[index++]=mCropViewRect.right;\n    mGridPoints[index++]=(mCropViewRect.height() * (((float)i + 1.0f) / (float)(mCropGridRowCount + 1))) + mCropViewRect.top;\n  }\n  for (int i=0; i < mCropGridColumnCount; i++) {\n    mGridPoints[index++]=(mCropViewRect.width() * (((float)i + 1.0f) / (float)(mCropGridColumnCount + 1))) + mCropViewRect.left;\n    mGridPoints[index++]=mCropViewRect.top;\n    mGridPoints[index++]=(mCropViewRect.width() * (((float)i + 1.0f) / (float)(mCropGridColumnCount + 1))) + mCropViewRect.left;\n    mGridPoints[index++]=mCropViewRect.bottom;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 207,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1345,
        "startLineNumber" : 471,
        "startColumnNumber" : 27,
        "endLineNumber" : 495,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (mGridPoints == null && !mCropViewRect.isEmpty()) {\n    mGridPoints=new float[(mCropGridRowCount) * 4 + (mCropGridColumnCount) * 4];\n    int index=0;\n    for (int i=0; i < mCropGridRowCount; i++) {\n      mGridPoints[index++]=mCropViewRect.left;\n      mGridPoints[index++]=(mCropViewRect.height() * (((float)i + 1.0f) / (float)(mCropGridRowCount + 1))) + mCropViewRect.top;\n      mGridPoints[index++]=mCropViewRect.right;\n      mGridPoints[index++]=(mCropViewRect.height() * (((float)i + 1.0f) / (float)(mCropGridRowCount + 1))) + mCropViewRect.top;\n    }\n    for (int i=0; i < mCropGridColumnCount; i++) {\n      mGridPoints[index++]=(mCropViewRect.width() * (((float)i + 1.0f) / (float)(mCropGridColumnCount + 1))) + mCropViewRect.left;\n      mGridPoints[index++]=mCropViewRect.top;\n      mGridPoints[index++]=(mCropViewRect.width() * (((float)i + 1.0f) / (float)(mCropGridColumnCount + 1))) + mCropViewRect.left;\n      mGridPoints[index++]=mCropViewRect.bottom;\n    }\n  }\n  if (mGridPoints != null) {\n    canvas.drawLines(mGridPoints,mCropGridPaint);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1364,
        "startLineNumber" : 471,
        "startColumnNumber" : 8,
        "endLineNumber" : 495,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mShowCropGrid) {\n  if (mGridPoints == null && !mCropViewRect.isEmpty()) {\n    mGridPoints=new float[(mCropGridRowCount) * 4 + (mCropGridColumnCount) * 4];\n    int index=0;\n    for (int i=0; i < mCropGridRowCount; i++) {\n      mGridPoints[index++]=mCropViewRect.left;\n      mGridPoints[index++]=(mCropViewRect.height() * (((float)i + 1.0f) / (float)(mCropGridRowCount + 1))) + mCropViewRect.top;\n      mGridPoints[index++]=mCropViewRect.right;\n      mGridPoints[index++]=(mCropViewRect.height() * (((float)i + 1.0f) / (float)(mCropGridRowCount + 1))) + mCropViewRect.top;\n    }\n    for (int i=0; i < mCropGridColumnCount; i++) {\n      mGridPoints[index++]=(mCropViewRect.width() * (((float)i + 1.0f) / (float)(mCropGridColumnCount + 1))) + mCropViewRect.left;\n      mGridPoints[index++]=mCropViewRect.top;\n      mGridPoints[index++]=(mCropViewRect.width() * (((float)i + 1.0f) / (float)(mCropGridColumnCount + 1))) + mCropViewRect.left;\n      mGridPoints[index++]=mCropViewRect.bottom;\n    }\n  }\n  if (mGridPoints != null) {\n    canvas.drawLines(mGridPoints,mCropGridPaint);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 221,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2099,
        "startLineNumber" : 470,
        "startColumnNumber" : 56,
        "endLineNumber" : 516,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mShowCropGrid) {\n    if (mGridPoints == null && !mCropViewRect.isEmpty()) {\n      mGridPoints=new float[(mCropGridRowCount) * 4 + (mCropGridColumnCount) * 4];\n      int index=0;\n      for (int i=0; i < mCropGridRowCount; i++) {\n        mGridPoints[index++]=mCropViewRect.left;\n        mGridPoints[index++]=(mCropViewRect.height() * (((float)i + 1.0f) / (float)(mCropGridRowCount + 1))) + mCropViewRect.top;\n        mGridPoints[index++]=mCropViewRect.right;\n        mGridPoints[index++]=(mCropViewRect.height() * (((float)i + 1.0f) / (float)(mCropGridRowCount + 1))) + mCropViewRect.top;\n      }\n      for (int i=0; i < mCropGridColumnCount; i++) {\n        mGridPoints[index++]=(mCropViewRect.width() * (((float)i + 1.0f) / (float)(mCropGridColumnCount + 1))) + mCropViewRect.left;\n        mGridPoints[index++]=mCropViewRect.top;\n        mGridPoints[index++]=(mCropViewRect.width() * (((float)i + 1.0f) / (float)(mCropGridColumnCount + 1))) + mCropViewRect.left;\n        mGridPoints[index++]=mCropViewRect.bottom;\n      }\n    }\n    if (mGridPoints != null) {\n      canvas.drawLines(mGridPoints,mCropGridPaint);\n    }\n  }\n  if (mShowCropFrame) {\n    canvas.drawRect(mCropViewRect,mCropFramePaint);\n  }\n  if (mFreestyleCropMode != FREESTYLE_CROP_MODE_DISABLE) {\n    canvas.save();\n    mTempRect.set(mCropViewRect);\n    mTempRect.inset(mCropRectCornerTouchAreaLineLength,-mCropRectCornerTouchAreaLineLength);\n    canvas.clipRect(mTempRect,Region.Op.DIFFERENCE);\n    mTempRect.set(mCropViewRect);\n    mTempRect.inset(-mCropRectCornerTouchAreaLineLength,mCropRectCornerTouchAreaLineLength);\n    canvas.clipRect(mTempRect,Region.Op.DIFFERENCE);\n    canvas.drawRect(mCropViewRect,mCropFrameCornersPaint);\n    canvas.restore();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 294,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2365,
        "startLineNumber" : 464,
        "startColumnNumber" : 4,
        "endLineNumber" : 516,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * This method draws crop bounds (empty rectangle) and crop guidelines (vertical and horizontal lines inside the crop bounds) if needed.\n * @param canvas - valid canvas object\n */\nprotected void drawCropGrid(@NonNull Canvas canvas){\n  if (mShowCropGrid) {\n    if (mGridPoints == null && !mCropViewRect.isEmpty()) {\n      mGridPoints=new float[(mCropGridRowCount) * 4 + (mCropGridColumnCount) * 4];\n      int index=0;\n      for (int i=0; i < mCropGridRowCount; i++) {\n        mGridPoints[index++]=mCropViewRect.left;\n        mGridPoints[index++]=(mCropViewRect.height() * (((float)i + 1.0f) / (float)(mCropGridRowCount + 1))) + mCropViewRect.top;\n        mGridPoints[index++]=mCropViewRect.right;\n        mGridPoints[index++]=(mCropViewRect.height() * (((float)i + 1.0f) / (float)(mCropGridRowCount + 1))) + mCropViewRect.top;\n      }\n      for (int i=0; i < mCropGridColumnCount; i++) {\n        mGridPoints[index++]=(mCropViewRect.width() * (((float)i + 1.0f) / (float)(mCropGridColumnCount + 1))) + mCropViewRect.left;\n        mGridPoints[index++]=mCropViewRect.top;\n        mGridPoints[index++]=(mCropViewRect.width() * (((float)i + 1.0f) / (float)(mCropGridColumnCount + 1))) + mCropViewRect.left;\n        mGridPoints[index++]=mCropViewRect.bottom;\n      }\n    }\n    if (mGridPoints != null) {\n      canvas.drawLines(mGridPoints,mCropGridPaint);\n    }\n  }\n  if (mShowCropFrame) {\n    canvas.drawRect(mCropViewRect,mCropFramePaint);\n  }\n  if (mFreestyleCropMode != FREESTYLE_CROP_MODE_DISABLE) {\n    canvas.save();\n    mTempRect.set(mCropViewRect);\n    mTempRect.inset(mCropRectCornerTouchAreaLineLength,-mCropRectCornerTouchAreaLineLength);\n    canvas.clipRect(mTempRect,Region.Op.DIFFERENCE);\n    mTempRect.set(mCropViewRect);\n    mTempRect.inset(-mCropRectCornerTouchAreaLineLength,mCropRectCornerTouchAreaLineLength);\n    canvas.clipRect(mTempRect,Region.Op.DIFFERENCE);\n    canvas.drawRect(mCropViewRect,mCropFrameCornersPaint);\n    canvas.restore();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 305,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 474,
        "startColumnNumber" : 16,
        "endLineNumber" : 474,
        "endColumnNumber" : 94
      },
      "nodeContext" : "mGridPoints=new float[(mCropGridRowCount) * 4 + (mCropGridColumnCount) * 4];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 474,
    "startColumnNumber" : 66,
    "endLineNumber" : 474,
    "endColumnNumber" : 92
  } ],
  "layoutRelationDataList" : [ ]
}