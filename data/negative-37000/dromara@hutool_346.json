{
  "id" : 346,
  "expression" : "i < strLen",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-extra/src/main/java/cn/hutool/extra/pinyin/engine/pinyin4j/Pinyin4jEngine.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i < strLen",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 91,
      "startColumnNumber" : 18,
      "endLineNumber" : 91,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 379,
        "startLineNumber" : 91,
        "startColumnNumber" : 3,
        "endLineNumber" : 103,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (int i=0; i < strLen; i++) {\n  if (isFirst) {\n    isFirst=false;\n  }\n else {\n    result.append(separator);\n  }\n  final String[] pinyinStringArray=PinyinHelper.toHanyuPinyinStringArray(str.charAt(i),format);\n  if (ArrayUtil.isEmpty(pinyinStringArray)) {\n    result.append(str.charAt(i));\n  }\n else {\n    result.append(pinyinStringArray[0]);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 63,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 390,
        "startLineNumber" : 90,
        "startColumnNumber" : 6,
        "endLineNumber" : 104,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int i=0; i < strLen; i++) {\n    if (isFirst) {\n      isFirst=false;\n    }\n else {\n      result.append(separator);\n    }\n    final String[] pinyinStringArray=PinyinHelper.toHanyuPinyinStringArray(str.charAt(i),format);\n    if (ArrayUtil.isEmpty(pinyinStringArray)) {\n      result.append(str.charAt(i));\n    }\n else {\n      result.append(pinyinStringArray[0]);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 483,
        "startLineNumber" : 90,
        "startColumnNumber" : 2,
        "endLineNumber" : 106,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  for (int i=0; i < strLen; i++) {\n    if (isFirst) {\n      isFirst=false;\n    }\n else {\n      result.append(separator);\n    }\n    final String[] pinyinStringArray=PinyinHelper.toHanyuPinyinStringArray(str.charAt(i),format);\n    if (ArrayUtil.isEmpty(pinyinStringArray)) {\n      result.append(str.charAt(i));\n    }\n else {\n      result.append(pinyinStringArray[0]);\n    }\n  }\n}\n catch (BadHanyuPinyinOutputFormatCombination e) {\n  throw new PinyinException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 76,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 637,
        "startLineNumber" : 86,
        "startColumnNumber" : 55,
        "endLineNumber" : 109,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  final StrBuilder result=StrUtil.strBuilder();\n  boolean isFirst=true;\n  final int strLen=str.length();\n  try {\n    for (int i=0; i < strLen; i++) {\n      if (isFirst) {\n        isFirst=false;\n      }\n else {\n        result.append(separator);\n      }\n      final String[] pinyinStringArray=PinyinHelper.toHanyuPinyinStringArray(str.charAt(i),format);\n      if (ArrayUtil.isEmpty(pinyinStringArray)) {\n        result.append(str.charAt(i));\n      }\n else {\n        result.append(pinyinStringArray[0]);\n      }\n    }\n  }\n catch (  BadHanyuPinyinOutputFormatCombination e) {\n    throw new PinyinException(e);\n  }\n  return result.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 703,
        "startLineNumber" : 85,
        "startColumnNumber" : 1,
        "endLineNumber" : 109,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public String getPinyin(String str,String separator){\n  final StrBuilder result=StrUtil.strBuilder();\n  boolean isFirst=true;\n  final int strLen=str.length();\n  try {\n    for (int i=0; i < strLen; i++) {\n      if (isFirst) {\n        isFirst=false;\n      }\n else {\n        result.append(separator);\n      }\n      final String[] pinyinStringArray=PinyinHelper.toHanyuPinyinStringArray(str.charAt(i),format);\n      if (ArrayUtil.isEmpty(pinyinStringArray)) {\n        result.append(str.charAt(i));\n      }\n else {\n        result.append(pinyinStringArray[0]);\n      }\n    }\n  }\n catch (  BadHanyuPinyinOutputFormatCombination e) {\n    throw new PinyinException(e);\n  }\n  return result.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 379,
        "startLineNumber" : 91,
        "startColumnNumber" : 3,
        "endLineNumber" : 103,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (int i=0; i < strLen; i++) {\n  if (isFirst) {\n    isFirst=false;\n  }\n else {\n    result.append(separator);\n  }\n  final String[] pinyinStringArray=PinyinHelper.toHanyuPinyinStringArray(str.charAt(i),format);\n  if (ArrayUtil.isEmpty(pinyinStringArray)) {\n    result.append(str.charAt(i));\n  }\n else {\n    result.append(pinyinStringArray[0]);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 63,
      "astHeight" : 8
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 91,
    "startColumnNumber" : 18,
    "endLineNumber" : 91,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ ]
}