{
  "id" : 259,
  "expression" : "Arrays.asList(new MeterTag(\"k1\",\"v1\"))",
  "projectName" : "apache@skywalking",
  "commitID" : "16b51d55baec4f779f312e07081d1397addbcfe9",
  "filePath" : "/apm-sniffer/apm-agent-core/src/test/java/org/apache/skywalking/apm/agent/core/meter/MeterIdTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Arrays.asList(new MeterTag(\"k1\",\"v1\"))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 39,
      "startLineNumber" : 33,
      "startColumnNumber" : 65,
      "endLineNumber" : 33,
      "endColumnNumber" : 104
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 33,
        "startColumnNumber" : 26,
        "endLineNumber" : 33,
        "endColumnNumber" : 105
      },
      "nodeContext" : "new MeterId(\"test\",MeterType.COUNTER,Arrays.asList(new MeterTag(\"k1\",\"v1\")))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 33,
        "startColumnNumber" : 16,
        "endLineNumber" : 33,
        "endColumnNumber" : 105
      },
      "nodeContext" : "meterId=new MeterId(\"test\",MeterType.COUNTER,Arrays.asList(new MeterTag(\"k1\",\"v1\")))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 33,
        "startColumnNumber" : 8,
        "endLineNumber" : 33,
        "endColumnNumber" : 106
      },
      "nodeContext" : "MeterId meterId=new MeterId(\"test\",MeterType.COUNTER,Arrays.asList(new MeterTag(\"k1\",\"v1\")));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 854,
        "startLineNumber" : 32,
        "startColumnNumber" : 36,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MeterId meterId=new MeterId(\"test\",MeterType.COUNTER,Arrays.asList(new MeterTag(\"k1\",\"v1\")));\n  List<Label> labels=meterId.transformTags();\n  Assert.assertEquals(1,labels.size());\n  final Label label=labels.get(0);\n  Assert.assertEquals(\"k1\",label.getName());\n  Assert.assertEquals(\"v1\",label.getValue());\n  Assert.assertEquals(MeterType.COUNTER,meterId.getType());\n  final List<Label> cacheLabels=(List<Label>)Whitebox.getInternalState(meterId,\"labels\");\n  Assert.assertEquals(labels,cacheLabels);\n  meterId=new MeterId(\"test\",MeterType.COUNTER,Collections.emptyList());\n  labels=meterId.transformTags();\n  Assert.assertEquals(0,labels.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 896,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testTransformTags(){\n  MeterId meterId=new MeterId(\"test\",MeterType.COUNTER,Arrays.asList(new MeterTag(\"k1\",\"v1\")));\n  List<Label> labels=meterId.transformTags();\n  Assert.assertEquals(1,labels.size());\n  final Label label=labels.get(0);\n  Assert.assertEquals(\"k1\",label.getName());\n  Assert.assertEquals(\"v1\",label.getValue());\n  Assert.assertEquals(MeterType.COUNTER,meterId.getType());\n  final List<Label> cacheLabels=(List<Label>)Whitebox.getInternalState(meterId,\"labels\");\n  Assert.assertEquals(labels,cacheLabels);\n  meterId=new MeterId(\"test\",MeterType.COUNTER,Collections.emptyList());\n  labels=meterId.transformTags();\n  Assert.assertEquals(0,labels.size());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 33,
        "startColumnNumber" : 8,
        "endLineNumber" : 33,
        "endColumnNumber" : 106
      },
      "nodeContext" : "MeterId meterId=new MeterId(\"test\",MeterType.COUNTER,Arrays.asList(new MeterTag(\"k1\",\"v1\")));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    },
    "tokenLength" : 5,
    "type" : "java.util.List<org.apache.skywalking.apm.agent.core.meter.MeterTag>"
  } ],
  "positionList" : [ {
    "charLength" : 39,
    "startLineNumber" : 33,
    "startColumnNumber" : 65,
    "endLineNumber" : 33,
    "endColumnNumber" : 104
  } ],
  "layoutRelationDataList" : [ ]
}