{
  "id" : 247,
  "expression" : "TIME_UNSET",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/extractor/src/test/java/com/google/android/exoplayer2/metadata/scte35/SpliceInfoDecoderTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TIME_UNSET",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 136,
      "startColumnNumber" : 50,
      "endLineNumber" : 136,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 136,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 61
      },
      "nodeContext" : "assertThat(command.breakDurationUs).isEqualTo(TIME_UNSET)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 136,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 62
      },
      "nodeContext" : "assertThat(command.breakDurationUs).isEqualTo(TIME_UNSET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5153,
        "startLineNumber" : 86,
        "startColumnNumber" : 42,
        "endLineNumber" : 207,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  byte[] rawSpliceInsertCommand1=new byte[]{0,(byte)0x80,0x19,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0e,0x05,0x00,0x00,0x00,0x42,0x00,0x40,(byte)0x80,0x00,0x00,0x00,0x00,0x00,0x10,0x01,0x02,0x00,0x00,0x00,0x00};\n  Metadata metadata=feedInputBuffer(rawSpliceInsertCommand1,2000000,3000000);\n  assertThat(metadata.length()).isEqualTo(1);\n  SpliceInsertCommand command=(SpliceInsertCommand)metadata.get(0);\n  assertThat(command.spliceEventId).isEqualTo(66);\n  assertThat(command.spliceEventCancelIndicator).isFalse();\n  assertThat(command.outOfNetworkIndicator).isFalse();\n  assertThat(command.programSpliceFlag).isTrue();\n  assertThat(command.spliceImmediateFlag).isFalse();\n  assertThat(command.programSplicePlaybackPositionUs).isEqualTo(3000000);\n  assertThat(command.breakDurationUs).isEqualTo(TIME_UNSET);\n  assertThat(command.uniqueProgramId).isEqualTo(16);\n  assertThat(command.availNum).isEqualTo(1);\n  assertThat(command.availsExpected).isEqualTo(2);\n  byte[] rawSpliceInsertCommand2=new byte[]{0,(byte)0x80,0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x13,0x05,(byte)0xff,(byte)0xff,(byte)0xff,(byte)0xff,0x00,0x00,0x02,0x10,(byte)0x81,(byte)0xff,(byte)0xff,(byte)0xff,(byte)0xff,0x11,0x00,0x00,0x20,0x01,0x02,0x00,0x00,0x00,0x00};\n  long subsampleOffset=1000011;\n  metadata=feedInputBuffer(rawSpliceInsertCommand2,1000000,subsampleOffset);\n  assertThat(metadata.length()).isEqualTo(1);\n  command=(SpliceInsertCommand)metadata.get(0);\n  assertThat(command.spliceEventId).isEqualTo(0xffffffffL);\n  assertThat(command.spliceEventCancelIndicator).isFalse();\n  assertThat(command.outOfNetworkIndicator).isFalse();\n  assertThat(command.programSpliceFlag).isFalse();\n  assertThat(command.spliceImmediateFlag).isFalse();\n  assertThat(command.programSplicePlaybackPositionUs).isEqualTo(TIME_UNSET);\n  assertThat(command.breakDurationUs).isEqualTo(TIME_UNSET);\n  List<SpliceInsertCommand.ComponentSplice> componentSplices=command.componentSpliceList;\n  assertThat(componentSplices).hasSize(2);\n  assertThat(componentSplices.get(0).componentTag).isEqualTo(16);\n  assertThat(componentSplices.get(0).componentSplicePlaybackPositionUs).isEqualTo(1000000);\n  assertThat(componentSplices.get(1).componentTag).isEqualTo(17);\n  assertThat(componentSplices.get(1).componentSplicePts).isEqualTo(TIME_UNSET);\n  assertThat(command.uniqueProgramId).isEqualTo(32);\n  assertThat(command.availNum).isEqualTo(1);\n  assertThat(command.availsExpected).isEqualTo(2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 420,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5201,
        "startLineNumber" : 85,
        "startColumnNumber" : 2,
        "endLineNumber" : 207,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void test2SpliceInsertCommands(){\n  byte[] rawSpliceInsertCommand1=new byte[]{0,(byte)0x80,0x19,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0e,0x05,0x00,0x00,0x00,0x42,0x00,0x40,(byte)0x80,0x00,0x00,0x00,0x00,0x00,0x10,0x01,0x02,0x00,0x00,0x00,0x00};\n  Metadata metadata=feedInputBuffer(rawSpliceInsertCommand1,2000000,3000000);\n  assertThat(metadata.length()).isEqualTo(1);\n  SpliceInsertCommand command=(SpliceInsertCommand)metadata.get(0);\n  assertThat(command.spliceEventId).isEqualTo(66);\n  assertThat(command.spliceEventCancelIndicator).isFalse();\n  assertThat(command.outOfNetworkIndicator).isFalse();\n  assertThat(command.programSpliceFlag).isTrue();\n  assertThat(command.spliceImmediateFlag).isFalse();\n  assertThat(command.programSplicePlaybackPositionUs).isEqualTo(3000000);\n  assertThat(command.breakDurationUs).isEqualTo(TIME_UNSET);\n  assertThat(command.uniqueProgramId).isEqualTo(16);\n  assertThat(command.availNum).isEqualTo(1);\n  assertThat(command.availsExpected).isEqualTo(2);\n  byte[] rawSpliceInsertCommand2=new byte[]{0,(byte)0x80,0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x13,0x05,(byte)0xff,(byte)0xff,(byte)0xff,(byte)0xff,0x00,0x00,0x02,0x10,(byte)0x81,(byte)0xff,(byte)0xff,(byte)0xff,(byte)0xff,0x11,0x00,0x00,0x20,0x01,0x02,0x00,0x00,0x00,0x00};\n  long subsampleOffset=1000011;\n  metadata=feedInputBuffer(rawSpliceInsertCommand2,1000000,subsampleOffset);\n  assertThat(metadata.length()).isEqualTo(1);\n  command=(SpliceInsertCommand)metadata.get(0);\n  assertThat(command.spliceEventId).isEqualTo(0xffffffffL);\n  assertThat(command.spliceEventCancelIndicator).isFalse();\n  assertThat(command.outOfNetworkIndicator).isFalse();\n  assertThat(command.programSpliceFlag).isFalse();\n  assertThat(command.spliceImmediateFlag).isFalse();\n  assertThat(command.programSplicePlaybackPositionUs).isEqualTo(TIME_UNSET);\n  assertThat(command.breakDurationUs).isEqualTo(TIME_UNSET);\n  List<SpliceInsertCommand.ComponentSplice> componentSplices=command.componentSpliceList;\n  assertThat(componentSplices).hasSize(2);\n  assertThat(componentSplices.get(0).componentTag).isEqualTo(16);\n  assertThat(componentSplices.get(0).componentSplicePlaybackPositionUs).isEqualTo(1000000);\n  assertThat(componentSplices.get(1).componentTag).isEqualTo(17);\n  assertThat(componentSplices.get(1).componentSplicePts).isEqualTo(TIME_UNSET);\n  assertThat(command.uniqueProgramId).isEqualTo(32);\n  assertThat(command.availNum).isEqualTo(1);\n  assertThat(command.availsExpected).isEqualTo(2);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 426,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 136,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 62
      },
      "nodeContext" : "assertThat(command.breakDurationUs).isEqualTo(TIME_UNSET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "long"
  }, {
    "nodeContext" : "TIME_UNSET",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 196,
      "startColumnNumber" : 66,
      "endLineNumber" : 196,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 196,
        "startColumnNumber" : 4,
        "endLineNumber" : 196,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertThat(command.programSplicePlaybackPositionUs).isEqualTo(TIME_UNSET)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 196,
        "startColumnNumber" : 4,
        "endLineNumber" : 196,
        "endColumnNumber" : 78
      },
      "nodeContext" : "assertThat(command.programSplicePlaybackPositionUs).isEqualTo(TIME_UNSET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5153,
        "startLineNumber" : 86,
        "startColumnNumber" : 42,
        "endLineNumber" : 207,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  byte[] rawSpliceInsertCommand1=new byte[]{0,(byte)0x80,0x19,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0e,0x05,0x00,0x00,0x00,0x42,0x00,0x40,(byte)0x80,0x00,0x00,0x00,0x00,0x00,0x10,0x01,0x02,0x00,0x00,0x00,0x00};\n  Metadata metadata=feedInputBuffer(rawSpliceInsertCommand1,2000000,3000000);\n  assertThat(metadata.length()).isEqualTo(1);\n  SpliceInsertCommand command=(SpliceInsertCommand)metadata.get(0);\n  assertThat(command.spliceEventId).isEqualTo(66);\n  assertThat(command.spliceEventCancelIndicator).isFalse();\n  assertThat(command.outOfNetworkIndicator).isFalse();\n  assertThat(command.programSpliceFlag).isTrue();\n  assertThat(command.spliceImmediateFlag).isFalse();\n  assertThat(command.programSplicePlaybackPositionUs).isEqualTo(3000000);\n  assertThat(command.breakDurationUs).isEqualTo(TIME_UNSET);\n  assertThat(command.uniqueProgramId).isEqualTo(16);\n  assertThat(command.availNum).isEqualTo(1);\n  assertThat(command.availsExpected).isEqualTo(2);\n  byte[] rawSpliceInsertCommand2=new byte[]{0,(byte)0x80,0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x13,0x05,(byte)0xff,(byte)0xff,(byte)0xff,(byte)0xff,0x00,0x00,0x02,0x10,(byte)0x81,(byte)0xff,(byte)0xff,(byte)0xff,(byte)0xff,0x11,0x00,0x00,0x20,0x01,0x02,0x00,0x00,0x00,0x00};\n  long subsampleOffset=1000011;\n  metadata=feedInputBuffer(rawSpliceInsertCommand2,1000000,subsampleOffset);\n  assertThat(metadata.length()).isEqualTo(1);\n  command=(SpliceInsertCommand)metadata.get(0);\n  assertThat(command.spliceEventId).isEqualTo(0xffffffffL);\n  assertThat(command.spliceEventCancelIndicator).isFalse();\n  assertThat(command.outOfNetworkIndicator).isFalse();\n  assertThat(command.programSpliceFlag).isFalse();\n  assertThat(command.spliceImmediateFlag).isFalse();\n  assertThat(command.programSplicePlaybackPositionUs).isEqualTo(TIME_UNSET);\n  assertThat(command.breakDurationUs).isEqualTo(TIME_UNSET);\n  List<SpliceInsertCommand.ComponentSplice> componentSplices=command.componentSpliceList;\n  assertThat(componentSplices).hasSize(2);\n  assertThat(componentSplices.get(0).componentTag).isEqualTo(16);\n  assertThat(componentSplices.get(0).componentSplicePlaybackPositionUs).isEqualTo(1000000);\n  assertThat(componentSplices.get(1).componentTag).isEqualTo(17);\n  assertThat(componentSplices.get(1).componentSplicePts).isEqualTo(TIME_UNSET);\n  assertThat(command.uniqueProgramId).isEqualTo(32);\n  assertThat(command.availNum).isEqualTo(1);\n  assertThat(command.availsExpected).isEqualTo(2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 420,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5201,
        "startLineNumber" : 85,
        "startColumnNumber" : 2,
        "endLineNumber" : 207,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void test2SpliceInsertCommands(){\n  byte[] rawSpliceInsertCommand1=new byte[]{0,(byte)0x80,0x19,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0e,0x05,0x00,0x00,0x00,0x42,0x00,0x40,(byte)0x80,0x00,0x00,0x00,0x00,0x00,0x10,0x01,0x02,0x00,0x00,0x00,0x00};\n  Metadata metadata=feedInputBuffer(rawSpliceInsertCommand1,2000000,3000000);\n  assertThat(metadata.length()).isEqualTo(1);\n  SpliceInsertCommand command=(SpliceInsertCommand)metadata.get(0);\n  assertThat(command.spliceEventId).isEqualTo(66);\n  assertThat(command.spliceEventCancelIndicator).isFalse();\n  assertThat(command.outOfNetworkIndicator).isFalse();\n  assertThat(command.programSpliceFlag).isTrue();\n  assertThat(command.spliceImmediateFlag).isFalse();\n  assertThat(command.programSplicePlaybackPositionUs).isEqualTo(3000000);\n  assertThat(command.breakDurationUs).isEqualTo(TIME_UNSET);\n  assertThat(command.uniqueProgramId).isEqualTo(16);\n  assertThat(command.availNum).isEqualTo(1);\n  assertThat(command.availsExpected).isEqualTo(2);\n  byte[] rawSpliceInsertCommand2=new byte[]{0,(byte)0x80,0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x13,0x05,(byte)0xff,(byte)0xff,(byte)0xff,(byte)0xff,0x00,0x00,0x02,0x10,(byte)0x81,(byte)0xff,(byte)0xff,(byte)0xff,(byte)0xff,0x11,0x00,0x00,0x20,0x01,0x02,0x00,0x00,0x00,0x00};\n  long subsampleOffset=1000011;\n  metadata=feedInputBuffer(rawSpliceInsertCommand2,1000000,subsampleOffset);\n  assertThat(metadata.length()).isEqualTo(1);\n  command=(SpliceInsertCommand)metadata.get(0);\n  assertThat(command.spliceEventId).isEqualTo(0xffffffffL);\n  assertThat(command.spliceEventCancelIndicator).isFalse();\n  assertThat(command.outOfNetworkIndicator).isFalse();\n  assertThat(command.programSpliceFlag).isFalse();\n  assertThat(command.spliceImmediateFlag).isFalse();\n  assertThat(command.programSplicePlaybackPositionUs).isEqualTo(TIME_UNSET);\n  assertThat(command.breakDurationUs).isEqualTo(TIME_UNSET);\n  List<SpliceInsertCommand.ComponentSplice> componentSplices=command.componentSpliceList;\n  assertThat(componentSplices).hasSize(2);\n  assertThat(componentSplices.get(0).componentTag).isEqualTo(16);\n  assertThat(componentSplices.get(0).componentSplicePlaybackPositionUs).isEqualTo(1000000);\n  assertThat(componentSplices.get(1).componentTag).isEqualTo(17);\n  assertThat(componentSplices.get(1).componentSplicePts).isEqualTo(TIME_UNSET);\n  assertThat(command.uniqueProgramId).isEqualTo(32);\n  assertThat(command.availNum).isEqualTo(1);\n  assertThat(command.availsExpected).isEqualTo(2);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 426,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 196,
        "startColumnNumber" : 4,
        "endLineNumber" : 196,
        "endColumnNumber" : 78
      },
      "nodeContext" : "assertThat(command.programSplicePlaybackPositionUs).isEqualTo(TIME_UNSET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "long"
  }, {
    "nodeContext" : "TIME_UNSET",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 197,
      "startColumnNumber" : 50,
      "endLineNumber" : 197,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 197,
        "startColumnNumber" : 4,
        "endLineNumber" : 197,
        "endColumnNumber" : 61
      },
      "nodeContext" : "assertThat(command.breakDurationUs).isEqualTo(TIME_UNSET)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 197,
        "startColumnNumber" : 4,
        "endLineNumber" : 197,
        "endColumnNumber" : 62
      },
      "nodeContext" : "assertThat(command.breakDurationUs).isEqualTo(TIME_UNSET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5153,
        "startLineNumber" : 86,
        "startColumnNumber" : 42,
        "endLineNumber" : 207,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  byte[] rawSpliceInsertCommand1=new byte[]{0,(byte)0x80,0x19,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0e,0x05,0x00,0x00,0x00,0x42,0x00,0x40,(byte)0x80,0x00,0x00,0x00,0x00,0x00,0x10,0x01,0x02,0x00,0x00,0x00,0x00};\n  Metadata metadata=feedInputBuffer(rawSpliceInsertCommand1,2000000,3000000);\n  assertThat(metadata.length()).isEqualTo(1);\n  SpliceInsertCommand command=(SpliceInsertCommand)metadata.get(0);\n  assertThat(command.spliceEventId).isEqualTo(66);\n  assertThat(command.spliceEventCancelIndicator).isFalse();\n  assertThat(command.outOfNetworkIndicator).isFalse();\n  assertThat(command.programSpliceFlag).isTrue();\n  assertThat(command.spliceImmediateFlag).isFalse();\n  assertThat(command.programSplicePlaybackPositionUs).isEqualTo(3000000);\n  assertThat(command.breakDurationUs).isEqualTo(TIME_UNSET);\n  assertThat(command.uniqueProgramId).isEqualTo(16);\n  assertThat(command.availNum).isEqualTo(1);\n  assertThat(command.availsExpected).isEqualTo(2);\n  byte[] rawSpliceInsertCommand2=new byte[]{0,(byte)0x80,0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x13,0x05,(byte)0xff,(byte)0xff,(byte)0xff,(byte)0xff,0x00,0x00,0x02,0x10,(byte)0x81,(byte)0xff,(byte)0xff,(byte)0xff,(byte)0xff,0x11,0x00,0x00,0x20,0x01,0x02,0x00,0x00,0x00,0x00};\n  long subsampleOffset=1000011;\n  metadata=feedInputBuffer(rawSpliceInsertCommand2,1000000,subsampleOffset);\n  assertThat(metadata.length()).isEqualTo(1);\n  command=(SpliceInsertCommand)metadata.get(0);\n  assertThat(command.spliceEventId).isEqualTo(0xffffffffL);\n  assertThat(command.spliceEventCancelIndicator).isFalse();\n  assertThat(command.outOfNetworkIndicator).isFalse();\n  assertThat(command.programSpliceFlag).isFalse();\n  assertThat(command.spliceImmediateFlag).isFalse();\n  assertThat(command.programSplicePlaybackPositionUs).isEqualTo(TIME_UNSET);\n  assertThat(command.breakDurationUs).isEqualTo(TIME_UNSET);\n  List<SpliceInsertCommand.ComponentSplice> componentSplices=command.componentSpliceList;\n  assertThat(componentSplices).hasSize(2);\n  assertThat(componentSplices.get(0).componentTag).isEqualTo(16);\n  assertThat(componentSplices.get(0).componentSplicePlaybackPositionUs).isEqualTo(1000000);\n  assertThat(componentSplices.get(1).componentTag).isEqualTo(17);\n  assertThat(componentSplices.get(1).componentSplicePts).isEqualTo(TIME_UNSET);\n  assertThat(command.uniqueProgramId).isEqualTo(32);\n  assertThat(command.availNum).isEqualTo(1);\n  assertThat(command.availsExpected).isEqualTo(2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 420,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5201,
        "startLineNumber" : 85,
        "startColumnNumber" : 2,
        "endLineNumber" : 207,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void test2SpliceInsertCommands(){\n  byte[] rawSpliceInsertCommand1=new byte[]{0,(byte)0x80,0x19,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0e,0x05,0x00,0x00,0x00,0x42,0x00,0x40,(byte)0x80,0x00,0x00,0x00,0x00,0x00,0x10,0x01,0x02,0x00,0x00,0x00,0x00};\n  Metadata metadata=feedInputBuffer(rawSpliceInsertCommand1,2000000,3000000);\n  assertThat(metadata.length()).isEqualTo(1);\n  SpliceInsertCommand command=(SpliceInsertCommand)metadata.get(0);\n  assertThat(command.spliceEventId).isEqualTo(66);\n  assertThat(command.spliceEventCancelIndicator).isFalse();\n  assertThat(command.outOfNetworkIndicator).isFalse();\n  assertThat(command.programSpliceFlag).isTrue();\n  assertThat(command.spliceImmediateFlag).isFalse();\n  assertThat(command.programSplicePlaybackPositionUs).isEqualTo(3000000);\n  assertThat(command.breakDurationUs).isEqualTo(TIME_UNSET);\n  assertThat(command.uniqueProgramId).isEqualTo(16);\n  assertThat(command.availNum).isEqualTo(1);\n  assertThat(command.availsExpected).isEqualTo(2);\n  byte[] rawSpliceInsertCommand2=new byte[]{0,(byte)0x80,0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x13,0x05,(byte)0xff,(byte)0xff,(byte)0xff,(byte)0xff,0x00,0x00,0x02,0x10,(byte)0x81,(byte)0xff,(byte)0xff,(byte)0xff,(byte)0xff,0x11,0x00,0x00,0x20,0x01,0x02,0x00,0x00,0x00,0x00};\n  long subsampleOffset=1000011;\n  metadata=feedInputBuffer(rawSpliceInsertCommand2,1000000,subsampleOffset);\n  assertThat(metadata.length()).isEqualTo(1);\n  command=(SpliceInsertCommand)metadata.get(0);\n  assertThat(command.spliceEventId).isEqualTo(0xffffffffL);\n  assertThat(command.spliceEventCancelIndicator).isFalse();\n  assertThat(command.outOfNetworkIndicator).isFalse();\n  assertThat(command.programSpliceFlag).isFalse();\n  assertThat(command.spliceImmediateFlag).isFalse();\n  assertThat(command.programSplicePlaybackPositionUs).isEqualTo(TIME_UNSET);\n  assertThat(command.breakDurationUs).isEqualTo(TIME_UNSET);\n  List<SpliceInsertCommand.ComponentSplice> componentSplices=command.componentSpliceList;\n  assertThat(componentSplices).hasSize(2);\n  assertThat(componentSplices.get(0).componentTag).isEqualTo(16);\n  assertThat(componentSplices.get(0).componentSplicePlaybackPositionUs).isEqualTo(1000000);\n  assertThat(componentSplices.get(1).componentTag).isEqualTo(17);\n  assertThat(componentSplices.get(1).componentSplicePts).isEqualTo(TIME_UNSET);\n  assertThat(command.uniqueProgramId).isEqualTo(32);\n  assertThat(command.availNum).isEqualTo(1);\n  assertThat(command.availsExpected).isEqualTo(2);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 426,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 197,
        "startColumnNumber" : 4,
        "endLineNumber" : 197,
        "endColumnNumber" : 62
      },
      "nodeContext" : "assertThat(command.breakDurationUs).isEqualTo(TIME_UNSET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "long"
  }, {
    "nodeContext" : "TIME_UNSET",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 203,
      "startColumnNumber" : 69,
      "endLineNumber" : 203,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 203,
        "startColumnNumber" : 4,
        "endLineNumber" : 203,
        "endColumnNumber" : 80
      },
      "nodeContext" : "assertThat(componentSplices.get(1).componentSplicePts).isEqualTo(TIME_UNSET)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 203,
        "startColumnNumber" : 4,
        "endLineNumber" : 203,
        "endColumnNumber" : 81
      },
      "nodeContext" : "assertThat(componentSplices.get(1).componentSplicePts).isEqualTo(TIME_UNSET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5153,
        "startLineNumber" : 86,
        "startColumnNumber" : 42,
        "endLineNumber" : 207,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  byte[] rawSpliceInsertCommand1=new byte[]{0,(byte)0x80,0x19,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0e,0x05,0x00,0x00,0x00,0x42,0x00,0x40,(byte)0x80,0x00,0x00,0x00,0x00,0x00,0x10,0x01,0x02,0x00,0x00,0x00,0x00};\n  Metadata metadata=feedInputBuffer(rawSpliceInsertCommand1,2000000,3000000);\n  assertThat(metadata.length()).isEqualTo(1);\n  SpliceInsertCommand command=(SpliceInsertCommand)metadata.get(0);\n  assertThat(command.spliceEventId).isEqualTo(66);\n  assertThat(command.spliceEventCancelIndicator).isFalse();\n  assertThat(command.outOfNetworkIndicator).isFalse();\n  assertThat(command.programSpliceFlag).isTrue();\n  assertThat(command.spliceImmediateFlag).isFalse();\n  assertThat(command.programSplicePlaybackPositionUs).isEqualTo(3000000);\n  assertThat(command.breakDurationUs).isEqualTo(TIME_UNSET);\n  assertThat(command.uniqueProgramId).isEqualTo(16);\n  assertThat(command.availNum).isEqualTo(1);\n  assertThat(command.availsExpected).isEqualTo(2);\n  byte[] rawSpliceInsertCommand2=new byte[]{0,(byte)0x80,0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x13,0x05,(byte)0xff,(byte)0xff,(byte)0xff,(byte)0xff,0x00,0x00,0x02,0x10,(byte)0x81,(byte)0xff,(byte)0xff,(byte)0xff,(byte)0xff,0x11,0x00,0x00,0x20,0x01,0x02,0x00,0x00,0x00,0x00};\n  long subsampleOffset=1000011;\n  metadata=feedInputBuffer(rawSpliceInsertCommand2,1000000,subsampleOffset);\n  assertThat(metadata.length()).isEqualTo(1);\n  command=(SpliceInsertCommand)metadata.get(0);\n  assertThat(command.spliceEventId).isEqualTo(0xffffffffL);\n  assertThat(command.spliceEventCancelIndicator).isFalse();\n  assertThat(command.outOfNetworkIndicator).isFalse();\n  assertThat(command.programSpliceFlag).isFalse();\n  assertThat(command.spliceImmediateFlag).isFalse();\n  assertThat(command.programSplicePlaybackPositionUs).isEqualTo(TIME_UNSET);\n  assertThat(command.breakDurationUs).isEqualTo(TIME_UNSET);\n  List<SpliceInsertCommand.ComponentSplice> componentSplices=command.componentSpliceList;\n  assertThat(componentSplices).hasSize(2);\n  assertThat(componentSplices.get(0).componentTag).isEqualTo(16);\n  assertThat(componentSplices.get(0).componentSplicePlaybackPositionUs).isEqualTo(1000000);\n  assertThat(componentSplices.get(1).componentTag).isEqualTo(17);\n  assertThat(componentSplices.get(1).componentSplicePts).isEqualTo(TIME_UNSET);\n  assertThat(command.uniqueProgramId).isEqualTo(32);\n  assertThat(command.availNum).isEqualTo(1);\n  assertThat(command.availsExpected).isEqualTo(2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 420,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5201,
        "startLineNumber" : 85,
        "startColumnNumber" : 2,
        "endLineNumber" : 207,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void test2SpliceInsertCommands(){\n  byte[] rawSpliceInsertCommand1=new byte[]{0,(byte)0x80,0x19,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0e,0x05,0x00,0x00,0x00,0x42,0x00,0x40,(byte)0x80,0x00,0x00,0x00,0x00,0x00,0x10,0x01,0x02,0x00,0x00,0x00,0x00};\n  Metadata metadata=feedInputBuffer(rawSpliceInsertCommand1,2000000,3000000);\n  assertThat(metadata.length()).isEqualTo(1);\n  SpliceInsertCommand command=(SpliceInsertCommand)metadata.get(0);\n  assertThat(command.spliceEventId).isEqualTo(66);\n  assertThat(command.spliceEventCancelIndicator).isFalse();\n  assertThat(command.outOfNetworkIndicator).isFalse();\n  assertThat(command.programSpliceFlag).isTrue();\n  assertThat(command.spliceImmediateFlag).isFalse();\n  assertThat(command.programSplicePlaybackPositionUs).isEqualTo(3000000);\n  assertThat(command.breakDurationUs).isEqualTo(TIME_UNSET);\n  assertThat(command.uniqueProgramId).isEqualTo(16);\n  assertThat(command.availNum).isEqualTo(1);\n  assertThat(command.availsExpected).isEqualTo(2);\n  byte[] rawSpliceInsertCommand2=new byte[]{0,(byte)0x80,0x22,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x13,0x05,(byte)0xff,(byte)0xff,(byte)0xff,(byte)0xff,0x00,0x00,0x02,0x10,(byte)0x81,(byte)0xff,(byte)0xff,(byte)0xff,(byte)0xff,0x11,0x00,0x00,0x20,0x01,0x02,0x00,0x00,0x00,0x00};\n  long subsampleOffset=1000011;\n  metadata=feedInputBuffer(rawSpliceInsertCommand2,1000000,subsampleOffset);\n  assertThat(metadata.length()).isEqualTo(1);\n  command=(SpliceInsertCommand)metadata.get(0);\n  assertThat(command.spliceEventId).isEqualTo(0xffffffffL);\n  assertThat(command.spliceEventCancelIndicator).isFalse();\n  assertThat(command.outOfNetworkIndicator).isFalse();\n  assertThat(command.programSpliceFlag).isFalse();\n  assertThat(command.spliceImmediateFlag).isFalse();\n  assertThat(command.programSplicePlaybackPositionUs).isEqualTo(TIME_UNSET);\n  assertThat(command.breakDurationUs).isEqualTo(TIME_UNSET);\n  List<SpliceInsertCommand.ComponentSplice> componentSplices=command.componentSpliceList;\n  assertThat(componentSplices).hasSize(2);\n  assertThat(componentSplices.get(0).componentTag).isEqualTo(16);\n  assertThat(componentSplices.get(0).componentSplicePlaybackPositionUs).isEqualTo(1000000);\n  assertThat(componentSplices.get(1).componentTag).isEqualTo(17);\n  assertThat(componentSplices.get(1).componentSplicePts).isEqualTo(TIME_UNSET);\n  assertThat(command.uniqueProgramId).isEqualTo(32);\n  assertThat(command.availNum).isEqualTo(1);\n  assertThat(command.availsExpected).isEqualTo(2);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 426,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 203,
        "startColumnNumber" : 4,
        "endLineNumber" : 203,
        "endColumnNumber" : 81
      },
      "nodeContext" : "assertThat(componentSplices.get(1).componentSplicePts).isEqualTo(TIME_UNSET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 136,
    "startColumnNumber" : 50,
    "endLineNumber" : 136,
    "endColumnNumber" : 60
  }, {
    "charLength" : 10,
    "startLineNumber" : 196,
    "startColumnNumber" : 66,
    "endLineNumber" : 196,
    "endColumnNumber" : 76
  }, {
    "charLength" : 10,
    "startLineNumber" : 197,
    "startColumnNumber" : 50,
    "endLineNumber" : 197,
    "endColumnNumber" : 60
  }, {
    "charLength" : 10,
    "startLineNumber" : 203,
    "startColumnNumber" : 69,
    "endLineNumber" : 203,
    "endColumnNumber" : 79
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}