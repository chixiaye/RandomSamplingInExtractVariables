{
  "id" : 68,
  "expression" : "\"other: \"",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-core/src/main/java/com/google/cloud/tools/jib/registry/RegistryErrorExceptionBuilder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"other: \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 59,
      "startColumnNumber" : 15,
      "endLineNumber" : 59,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 59,
        "startColumnNumber" : 15,
        "endLineNumber" : 59,
        "endColumnNumber" : 34
      },
      "nodeContext" : "\"other: \" + message",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 35
      },
      "nodeContext" : "return \"other: \" + message;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 58,
        "startColumnNumber" : 13,
        "endLineNumber" : 60,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  return \"other: \" + message;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 237,
        "startLineNumber" : 53,
        "startColumnNumber" : 13,
        "endLineNumber" : 60,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (errorCode == ErrorCodes.MANIFEST_UNKNOWN || errorCode == ErrorCodes.TAG_INVALID || errorCode == ErrorCodes.MANIFEST_UNVERIFIED) {\n  return message;\n}\n else {\n  return \"other: \" + message;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 391,
        "startLineNumber" : 50,
        "startColumnNumber" : 6,
        "endLineNumber" : 60,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (errorCode == ErrorCodes.MANIFEST_INVALID || errorCode == ErrorCodes.BLOB_UNKNOWN) {\n  return message + \" (something went wrong)\";\n}\n else if (errorCode == ErrorCodes.MANIFEST_UNKNOWN || errorCode == ErrorCodes.TAG_INVALID || errorCode == ErrorCodes.MANIFEST_UNVERIFIED) {\n  return message;\n}\n else {\n  return \"other: \" + message;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 565,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (errorCodeString == null) {\n    throw new IllegalArgumentException();\n  }\n  ErrorCodes errorCode=ErrorCodes.valueOf(errorCodeString);\n  if (errorCode == ErrorCodes.MANIFEST_INVALID || errorCode == ErrorCodes.BLOB_UNKNOWN) {\n    return message + \" (something went wrong)\";\n  }\n else   if (errorCode == ErrorCodes.MANIFEST_UNKNOWN || errorCode == ErrorCodes.TAG_INVALID || errorCode == ErrorCodes.MANIFEST_UNVERIFIED) {\n    return message;\n  }\n else {\n    return \"other: \" + message;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 682,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  if (errorCodeString == null) {\n    throw new IllegalArgumentException();\n  }\n  ErrorCodes errorCode=ErrorCodes.valueOf(errorCodeString);\n  if (errorCode == ErrorCodes.MANIFEST_INVALID || errorCode == ErrorCodes.BLOB_UNKNOWN) {\n    return message + \" (something went wrong)\";\n  }\n else   if (errorCode == ErrorCodes.MANIFEST_UNKNOWN || errorCode == ErrorCodes.TAG_INVALID || errorCode == ErrorCodes.MANIFEST_UNVERIFIED) {\n    return message;\n  }\n else {\n    return \"other: \" + message;\n  }\n}\n catch (IllegalArgumentException ex) {\n  return \"unknown: \" + message;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 73,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 756,
        "startLineNumber" : 38,
        "startColumnNumber" : 94,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (message == null) {\n    message=\"no details\";\n  }\n  try {\n    if (errorCodeString == null) {\n      throw new IllegalArgumentException();\n    }\n    ErrorCodes errorCode=ErrorCodes.valueOf(errorCodeString);\n    if (errorCode == ErrorCodes.MANIFEST_INVALID || errorCode == ErrorCodes.BLOB_UNKNOWN) {\n      return message + \" (something went wrong)\";\n    }\n else     if (errorCode == ErrorCodes.MANIFEST_UNKNOWN || errorCode == ErrorCodes.TAG_INVALID || errorCode == ErrorCodes.MANIFEST_UNVERIFIED) {\n      return message;\n    }\n else {\n      return \"other: \" + message;\n    }\n  }\n catch (  IllegalArgumentException ex) {\n    return \"unknown: \" + message;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1098,
        "startLineNumber" : 31,
        "startColumnNumber" : 2,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Gets the reason for certain errors.\n * @param errorCodeString string form of {@link ErrorCodes}\n * @param message the original received error message, which may or may not be used depending onthe  {@code errorCode}\n */\nprivate static String getReason(@Nullable String errorCodeString,@Nullable String message){\n  if (message == null) {\n    message=\"no details\";\n  }\n  try {\n    if (errorCodeString == null) {\n      throw new IllegalArgumentException();\n    }\n    ErrorCodes errorCode=ErrorCodes.valueOf(errorCodeString);\n    if (errorCode == ErrorCodes.MANIFEST_INVALID || errorCode == ErrorCodes.BLOB_UNKNOWN) {\n      return message + \" (something went wrong)\";\n    }\n else     if (errorCode == ErrorCodes.MANIFEST_UNKNOWN || errorCode == ErrorCodes.TAG_INVALID || errorCode == ErrorCodes.MANIFEST_UNVERIFIED) {\n      return message;\n    }\n else {\n      return \"other: \" + message;\n    }\n  }\n catch (  IllegalArgumentException ex) {\n    return \"unknown: \" + message;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 102,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 35
      },
      "nodeContext" : "return \"other: \" + message;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 59,
    "startColumnNumber" : 15,
    "endLineNumber" : 59,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ ]
}