{
  "id" : 56,
  "expression" : "1",
  "projectName" : "iluwatar@java-design-patterns",
  "commitID" : "428efc7d53449a51d25dfda4141742629ecbb0b2",
  "filePath" : "/event-aggregator/src/test/java/com/iluwatar/event/aggregator/KingJoffreyTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 71,
      "startColumnNumber" : 23,
      "endLineNumber" : 71,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 71,
        "startColumnNumber" : 19,
        "endLineNumber" : 71,
        "endColumnNumber" : 24
      },
      "nodeContext" : "i + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 71,
        "startColumnNumber" : 6,
        "endLineNumber" : 71,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertEquals(i + 1,appender.getLogSize())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 71,
        "startColumnNumber" : 6,
        "endLineNumber" : 71,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertEquals(i + 1,appender.getLogSize());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 332,
        "startLineNumber" : 65,
        "startColumnNumber" : 59,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertEquals(i,appender.getLogSize());\n  var event=Event.values()[i];\n  kingJoffrey.onEvent(event);\n  final var expectedMessage=\"Received event from the King's Hand: \" + event.toString();\n  assertEquals(expectedMessage,appender.getLastMessage());\n  assertEquals(i + 1,appender.getLogSize());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 337,
        "startLineNumber" : 65,
        "startColumnNumber" : 54,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "i -> {\n  assertEquals(i,appender.getLogSize());\n  var event=Event.values()[i];\n  kingJoffrey.onEvent(event);\n  final var expectedMessage=\"Received event from the King's Hand: \" + event.toString();\n  assertEquals(expectedMessage,appender.getLastMessage());\n  assertEquals(i + 1,appender.getLogSize());\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 53,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 71,
        "startColumnNumber" : 6,
        "endLineNumber" : 71,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertEquals(i + 1,appender.getLogSize());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 71,
    "startColumnNumber" : 23,
    "endLineNumber" : 71,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ ]
}