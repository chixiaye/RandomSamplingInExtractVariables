{
  "id" : 32,
  "expression" : "\" Sonic/\" + SonicConstants.SONIC_VERSION_NUM",
  "projectName" : "Tencent@VasSonic",
  "commitID" : "a3e09c156adb93b4ebe6139def465c519069aa9e",
  "filePath" : "/sonic-android/sdk/src/main/java/com/tencent/sonic/sdk/SonicSessionConnection.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\" Sonic/\" + SonicConstants.SONIC_VERSION_NUM",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 44,
      "startLineNumber" : 389,
      "startColumnNumber" : 33,
      "endLineNumber" : 389,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 389,
        "startColumnNumber" : 20,
        "endLineNumber" : 389,
        "endColumnNumber" : 77
      },
      "nodeContext" : "userAgent+=\" Sonic/\" + SonicConstants.SONIC_VERSION_NUM",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 389,
        "startColumnNumber" : 20,
        "endLineNumber" : 389,
        "endColumnNumber" : 78
      },
      "nodeContext" : "userAgent+=\" Sonic/\" + SonicConstants.SONIC_VERSION_NUM;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 388,
        "startColumnNumber" : 51,
        "endLineNumber" : 390,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  userAgent+=\" Sonic/\" + SonicConstants.SONIC_VERSION_NUM;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 235,
        "startLineNumber" : 388,
        "startColumnNumber" : 16,
        "endLineNumber" : 392,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!TextUtils.isEmpty(userAgent)) {\n  userAgent+=\" Sonic/\" + SonicConstants.SONIC_VERSION_NUM;\n}\n else {\n  userAgent=\"Sonic/\" + SonicConstants.SONIC_VERSION_NUM;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2675,
        "startLineNumber" : 349,
        "startColumnNumber" : 36,
        "endLineNumber" : 396,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  SonicSessionConfig config=session.config;\n  connection.setConnectTimeout(config.CONNECT_TIMEOUT_MILLIS);\n  connection.setReadTimeout(config.READ_TIMEOUT_MILLIS);\n  connection.setRequestProperty(CUSTOM_HEAD_FILED_ACCEPT_DIFF,config.ACCEPT_DIFF_DATA ? \"true\" : \"false\");\n  String eTag=intent.getStringExtra(CUSTOM_HEAD_FILED_ETAG);\n  if (null == eTag)   eTag=\"\";\n  connection.setRequestProperty(\"if-none-match\",eTag);\n  String templateTag=intent.getStringExtra(CUSTOM_HEAD_FILED_TEMPLATE_TAG);\n  if (null == templateTag)   templateTag=\"\";\n  connection.setRequestProperty(CUSTOM_HEAD_FILED_TEMPLATE_TAG,templateTag);\n  connection.setRequestProperty(\"method\",\"GET\");\n  connection.setRequestProperty(\"accept-Charset\",\"utf-8\");\n  connection.setRequestProperty(\"accept-Encoding\",\"gzip\");\n  connection.setRequestProperty(\"accept-Language\",\"zh-CN,zh;\");\n  connection.setRequestProperty(CUSTOM_HEAD_FILED_SDK_VERSION,\"Sonic/\" + SonicConstants.SONIC_VERSION_NUM);\n  if (null != config.customRequestHeaders && 0 != config.customRequestHeaders.size()) {\n    for (    Map.Entry<String,String> entry : config.customRequestHeaders.entrySet()) {\n      connection.setRequestProperty(entry.getKey(),entry.getValue());\n    }\n  }\n  SonicRuntime runtime=SonicEngine.getInstance().getRuntime();\n  String cookie=runtime.getCookie(session.srcUrl);\n  if (!TextUtils.isEmpty(cookie)) {\n    connection.setRequestProperty(\"cookie\",cookie);\n  }\n else {\n    SonicUtils.log(TAG,Log.ERROR,\"create UrlConnection cookie is empty\");\n  }\n  String userAgent=runtime.getUserAgent();\n  if (!TextUtils.isEmpty(userAgent)) {\n    userAgent+=\" Sonic/\" + SonicConstants.SONIC_VERSION_NUM;\n  }\n else {\n    userAgent=\"Sonic/\" + SonicConstants.SONIC_VERSION_NUM;\n  }\n  connection.setRequestProperty(\"User-Agent\",userAgent);\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 241,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2699,
        "startLineNumber" : 349,
        "startColumnNumber" : 12,
        "endLineNumber" : 396,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (null != connection) {\n  SonicSessionConfig config=session.config;\n  connection.setConnectTimeout(config.CONNECT_TIMEOUT_MILLIS);\n  connection.setReadTimeout(config.READ_TIMEOUT_MILLIS);\n  connection.setRequestProperty(CUSTOM_HEAD_FILED_ACCEPT_DIFF,config.ACCEPT_DIFF_DATA ? \"true\" : \"false\");\n  String eTag=intent.getStringExtra(CUSTOM_HEAD_FILED_ETAG);\n  if (null == eTag)   eTag=\"\";\n  connection.setRequestProperty(\"if-none-match\",eTag);\n  String templateTag=intent.getStringExtra(CUSTOM_HEAD_FILED_TEMPLATE_TAG);\n  if (null == templateTag)   templateTag=\"\";\n  connection.setRequestProperty(CUSTOM_HEAD_FILED_TEMPLATE_TAG,templateTag);\n  connection.setRequestProperty(\"method\",\"GET\");\n  connection.setRequestProperty(\"accept-Charset\",\"utf-8\");\n  connection.setRequestProperty(\"accept-Encoding\",\"gzip\");\n  connection.setRequestProperty(\"accept-Language\",\"zh-CN,zh;\");\n  connection.setRequestProperty(CUSTOM_HEAD_FILED_SDK_VERSION,\"Sonic/\" + SonicConstants.SONIC_VERSION_NUM);\n  if (null != config.customRequestHeaders && 0 != config.customRequestHeaders.size()) {\n    for (    Map.Entry<String,String> entry : config.customRequestHeaders.entrySet()) {\n      connection.setRequestProperty(entry.getKey(),entry.getValue());\n    }\n  }\n  SonicRuntime runtime=SonicEngine.getInstance().getRuntime();\n  String cookie=runtime.getCookie(session.srcUrl);\n  if (!TextUtils.isEmpty(cookie)) {\n    connection.setRequestProperty(\"cookie\",cookie);\n  }\n else {\n    SonicUtils.log(TAG,Log.ERROR,\"create UrlConnection cookie is empty\");\n  }\n  String userAgent=runtime.getUserAgent();\n  if (!TextUtils.isEmpty(userAgent)) {\n    userAgent+=\" Sonic/\" + SonicConstants.SONIC_VERSION_NUM;\n  }\n else {\n    userAgent=\"Sonic/\" + SonicConstants.SONIC_VERSION_NUM;\n  }\n  connection.setRequestProperty(\"User-Agent\",userAgent);\n  return true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 245,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2749,
        "startLineNumber" : 348,
        "startColumnNumber" : 67,
        "endLineNumber" : 398,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (null != connection) {\n    SonicSessionConfig config=session.config;\n    connection.setConnectTimeout(config.CONNECT_TIMEOUT_MILLIS);\n    connection.setReadTimeout(config.READ_TIMEOUT_MILLIS);\n    connection.setRequestProperty(CUSTOM_HEAD_FILED_ACCEPT_DIFF,config.ACCEPT_DIFF_DATA ? \"true\" : \"false\");\n    String eTag=intent.getStringExtra(CUSTOM_HEAD_FILED_ETAG);\n    if (null == eTag)     eTag=\"\";\n    connection.setRequestProperty(\"if-none-match\",eTag);\n    String templateTag=intent.getStringExtra(CUSTOM_HEAD_FILED_TEMPLATE_TAG);\n    if (null == templateTag)     templateTag=\"\";\n    connection.setRequestProperty(CUSTOM_HEAD_FILED_TEMPLATE_TAG,templateTag);\n    connection.setRequestProperty(\"method\",\"GET\");\n    connection.setRequestProperty(\"accept-Charset\",\"utf-8\");\n    connection.setRequestProperty(\"accept-Encoding\",\"gzip\");\n    connection.setRequestProperty(\"accept-Language\",\"zh-CN,zh;\");\n    connection.setRequestProperty(CUSTOM_HEAD_FILED_SDK_VERSION,\"Sonic/\" + SonicConstants.SONIC_VERSION_NUM);\n    if (null != config.customRequestHeaders && 0 != config.customRequestHeaders.size()) {\n      for (      Map.Entry<String,String> entry : config.customRequestHeaders.entrySet()) {\n        connection.setRequestProperty(entry.getKey(),entry.getValue());\n      }\n    }\n    SonicRuntime runtime=SonicEngine.getInstance().getRuntime();\n    String cookie=runtime.getCookie(session.srcUrl);\n    if (!TextUtils.isEmpty(cookie)) {\n      connection.setRequestProperty(\"cookie\",cookie);\n    }\n else {\n      SonicUtils.log(TAG,Log.ERROR,\"create UrlConnection cookie is empty\");\n    }\n    String userAgent=runtime.getUserAgent();\n    if (!TextUtils.isEmpty(userAgent)) {\n      userAgent+=\" Sonic/\" + SonicConstants.SONIC_VERSION_NUM;\n    }\n else {\n      userAgent=\"Sonic/\" + SonicConstants.SONIC_VERSION_NUM;\n    }\n    connection.setRequestProperty(\"User-Agent\",userAgent);\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2808,
        "startLineNumber" : 348,
        "startColumnNumber" : 8,
        "endLineNumber" : 398,
        "endColumnNumber" : 9
      },
      "nodeContext" : "protected boolean initConnection(URLConnection connection){\n  if (null != connection) {\n    SonicSessionConfig config=session.config;\n    connection.setConnectTimeout(config.CONNECT_TIMEOUT_MILLIS);\n    connection.setReadTimeout(config.READ_TIMEOUT_MILLIS);\n    connection.setRequestProperty(CUSTOM_HEAD_FILED_ACCEPT_DIFF,config.ACCEPT_DIFF_DATA ? \"true\" : \"false\");\n    String eTag=intent.getStringExtra(CUSTOM_HEAD_FILED_ETAG);\n    if (null == eTag)     eTag=\"\";\n    connection.setRequestProperty(\"if-none-match\",eTag);\n    String templateTag=intent.getStringExtra(CUSTOM_HEAD_FILED_TEMPLATE_TAG);\n    if (null == templateTag)     templateTag=\"\";\n    connection.setRequestProperty(CUSTOM_HEAD_FILED_TEMPLATE_TAG,templateTag);\n    connection.setRequestProperty(\"method\",\"GET\");\n    connection.setRequestProperty(\"accept-Charset\",\"utf-8\");\n    connection.setRequestProperty(\"accept-Encoding\",\"gzip\");\n    connection.setRequestProperty(\"accept-Language\",\"zh-CN,zh;\");\n    connection.setRequestProperty(CUSTOM_HEAD_FILED_SDK_VERSION,\"Sonic/\" + SonicConstants.SONIC_VERSION_NUM);\n    if (null != config.customRequestHeaders && 0 != config.customRequestHeaders.size()) {\n      for (      Map.Entry<String,String> entry : config.customRequestHeaders.entrySet()) {\n        connection.setRequestProperty(entry.getKey(),entry.getValue());\n      }\n    }\n    SonicRuntime runtime=SonicEngine.getInstance().getRuntime();\n    String cookie=runtime.getCookie(session.srcUrl);\n    if (!TextUtils.isEmpty(cookie)) {\n      connection.setRequestProperty(\"cookie\",cookie);\n    }\n else {\n      SonicUtils.log(TAG,Log.ERROR,\"create UrlConnection cookie is empty\");\n    }\n    String userAgent=runtime.getUserAgent();\n    if (!TextUtils.isEmpty(userAgent)) {\n      userAgent+=\" Sonic/\" + SonicConstants.SONIC_VERSION_NUM;\n    }\n else {\n      userAgent=\"Sonic/\" + SonicConstants.SONIC_VERSION_NUM;\n    }\n    connection.setRequestProperty(\"User-Agent\",userAgent);\n    return true;\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 256,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 389,
        "startColumnNumber" : 20,
        "endLineNumber" : 389,
        "endColumnNumber" : 78
      },
      "nodeContext" : "userAgent+=\" Sonic/\" + SonicConstants.SONIC_VERSION_NUM;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 6,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 44,
    "startLineNumber" : 389,
    "startColumnNumber" : 33,
    "endLineNumber" : 389,
    "endColumnNumber" : 77
  } ],
  "layoutRelationDataList" : [ ]
}