{
  "id" : 41,
  "expression" : "generator",
  "projectName" : "ben-manes@caffeine",
  "commitID" : "30ca3d80d9dc7aa20adceacfc5fff1659bbadb8e",
  "filePath" : "/src/test/java/com/github/benmanes/caffeine/cache/testing/CacheProvider.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "generator",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 53,
      "startColumnNumber" : 35,
      "endLineNumber" : 53,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 53,
        "startColumnNumber" : 35,
        "endLineNumber" : 53,
        "endColumnNumber" : 55
      },
      "nodeContext" : "generator.generate()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 53,
        "startColumnNumber" : 11,
        "endLineNumber" : 53,
        "endColumnNumber" : 56
      },
      "nodeContext" : "asTestCases(testMethod,generator.generate())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 57
      },
      "nodeContext" : "return asTestCases(testMethod,generator.generate());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 329,
        "startLineNumber" : 47,
        "startColumnNumber" : 86,
        "endLineNumber" : 54,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  CacheSpec cacheSpec=testMethod.getAnnotation(CacheSpec.class);\n  requireNonNull(cacheSpec,\"@CacheSpec not found\");\n  boolean isLoadingOnly=hasLoadingCache(testMethod);\n  CacheGenerator generator=new CacheGenerator(cacheSpec,isLoadingOnly);\n  return asTestCases(testMethod,generator.generate());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 692,
        "startLineNumber" : 41,
        "startColumnNumber" : 2,
        "endLineNumber" : 54,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * The provided test parameters are optional and may be specified in any order. Supports injecting {@link LoadingCache},  {@link Cache},  {@link CacheContext}, and the  {@link ConcurrentMap}{@link Cache#asMap()} view.\n */\n@DataProvider(name=\"caches\") public static Iterator<Object[]> providesCaches(Method testMethod) throws Exception {\n  CacheSpec cacheSpec=testMethod.getAnnotation(CacheSpec.class);\n  requireNonNull(cacheSpec,\"@CacheSpec not found\");\n  boolean isLoadingOnly=hasLoadingCache(testMethod);\n  CacheGenerator generator=new CacheGenerator(cacheSpec,isLoadingOnly);\n  return asTestCases(testMethod,generator.generate());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 64,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 57
      },
      "nodeContext" : "return asTestCases(testMethod,generator.generate());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.github.benmanes.caffeine.cache.testing.CacheGenerator"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 53,
    "startColumnNumber" : 35,
    "endLineNumber" : 53,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}