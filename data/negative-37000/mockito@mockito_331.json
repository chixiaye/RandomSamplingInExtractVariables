{
  "id" : 331,
  "expression" : "when(mock(Set.class).isEmpty())",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitousage/basicapi/MockAccessTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "when(mock(Set.class).isEmpty())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 28,
      "startColumnNumber" : 30,
      "endLineNumber" : 28,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 9,
    "astHeight" : 6,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 28,
        "startColumnNumber" : 30,
        "endLineNumber" : 28,
        "endColumnNumber" : 85
      },
      "nodeContext" : "when(mock(Set.class).isEmpty()).thenReturn(false,true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 28,
        "startColumnNumber" : 30,
        "endLineNumber" : 28,
        "endColumnNumber" : 95
      },
      "nodeContext" : "when(mock(Set.class).isEmpty()).thenReturn(false,true).getMock()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 28,
        "startColumnNumber" : 15,
        "endLineNumber" : 28,
        "endColumnNumber" : 95
      },
      "nodeContext" : "returnedMock=when(mock(Set.class).isEmpty()).thenReturn(false,true).getMock()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 17,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 96
      },
      "nodeContext" : "Set<?> returnedMock=when(mock(Set.class).isEmpty()).thenReturn(false,true).getMock();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 22,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 215,
        "startLineNumber" : 27,
        "startColumnNumber" : 64,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Set<?> returnedMock=when(mock(Set.class).isEmpty()).thenReturn(false,true).getMock();\n  assertEquals(false,returnedMock.isEmpty());\n  assertEquals(true,returnedMock.isEmpty());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 286,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void stubbedMockShouldWorkAsUsual() throws Exception {\n  Set<?> returnedMock=when(mock(Set.class).isEmpty()).thenReturn(false,true).getMock();\n  assertEquals(false,returnedMock.isEmpty());\n  assertEquals(true,returnedMock.isEmpty());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 45,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 96
      },
      "nodeContext" : "Set<?> returnedMock=when(mock(Set.class).isEmpty()).thenReturn(false,true).getMock();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 22,
      "astHeight" : 10
    },
    "tokenLength" : 4,
    "type" : "org.mockito.stubbing.OngoingStubbing<java.lang.Boolean>"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 28,
    "startColumnNumber" : 30,
    "endLineNumber" : 28,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}