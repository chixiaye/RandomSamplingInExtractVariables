{
  "id" : 164,
  "expression" : "\"Ant home: \"",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/test/src/test/java/hudson/tasks/EnvVarsInConfigTasksTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Ant home: \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 140,
      "startColumnNumber" : 34,
      "endLineNumber" : 140,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 140,
        "startColumnNumber" : 13,
        "endLineNumber" : 140,
        "endColumnNumber" : 47
      },
      "nodeContext" : "buildLogEnv.contains(\"Ant home: \")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 140,
        "startColumnNumber" : 2,
        "endLineNumber" : 140,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertTrue(buildLogEnv.contains(\"Ant home: \"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 140,
        "startColumnNumber" : 2,
        "endLineNumber" : 140,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertTrue(buildLogEnv.contains(\"Ant home: \"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1761,
        "startLineNumber" : 103,
        "startColumnNumber" : 56,
        "endLineNumber" : 146,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Assume.assumeFalse(\"Cannot do testFreeStyleAntOnSlave without ANT_HOME\",jenkins.getDescriptorByType(Ant.DescriptorImpl.class).getInstallations().length == 0);\n  FreeStyleProject project=createFreeStyleProject();\n  project.setJDK(jenkins.getJDK(\"varJDK\"));\n  project.setScm(new ExtractResourceSCM(getClass().getResource(\"/simple-projects.zip\")));\n  String buildFile=\"build.xml${\" + DUMMY_LOCATION_VARNAME + \"}\";\n  project.getBuildersList().add(new Ant(\"-Dtest.property=cor${\" + DUMMY_LOCATION_VARNAME + \"}rect\",\"varAnt\",\"\",buildFile,\"\"));\n  project.setAssignedLabel(slaveRegular.getSelfLabel());\n  FreeStyleBuild build=project.scheduleBuild2(0).get();\n  System.out.println(build.getDisplayName() + \" completed\");\n  assertBuildStatus(Result.FAILURE,build);\n  String buildLogRegular=getBuildLog(build);\n  assertTrue(buildLogRegular.contains(Ant_ExecutableNotFound(\"varAnt\")));\n  project.setAssignedLabel(slaveEnv.getSelfLabel());\n  build=project.scheduleBuild2(0).get();\n  System.out.println(build.getDisplayName() + \" completed\");\n  assertBuildStatusSuccess(build);\n  String buildLogEnv=getBuildLog(build);\n  System.out.println(buildLogEnv);\n  assertTrue(buildLogEnv.contains(\"Ant home: \"));\n  assertTrue(buildLogEnv.contains(\"Test property: correct\"));\n  assertFalse(buildLogEnv.matches(\"(?s)^.*Ant home: [^\\\\n\\\\r]*\" + DUMMY_LOCATION_VARNAME + \".*$\"));\n  assertFalse(buildLogEnv.matches(\"(?s)^.*Test property: [^\\\\n\\\\r]*\" + DUMMY_LOCATION_VARNAME + \".*$\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 206,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1816,
        "startLineNumber" : 103,
        "startColumnNumber" : 1,
        "endLineNumber" : 146,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public void testFreeStyleAntOnSlave() throws Exception {\n  Assume.assumeFalse(\"Cannot do testFreeStyleAntOnSlave without ANT_HOME\",jenkins.getDescriptorByType(Ant.DescriptorImpl.class).getInstallations().length == 0);\n  FreeStyleProject project=createFreeStyleProject();\n  project.setJDK(jenkins.getJDK(\"varJDK\"));\n  project.setScm(new ExtractResourceSCM(getClass().getResource(\"/simple-projects.zip\")));\n  String buildFile=\"build.xml${\" + DUMMY_LOCATION_VARNAME + \"}\";\n  project.getBuildersList().add(new Ant(\"-Dtest.property=cor${\" + DUMMY_LOCATION_VARNAME + \"}rect\",\"varAnt\",\"\",buildFile,\"\"));\n  project.setAssignedLabel(slaveRegular.getSelfLabel());\n  FreeStyleBuild build=project.scheduleBuild2(0).get();\n  System.out.println(build.getDisplayName() + \" completed\");\n  assertBuildStatus(Result.FAILURE,build);\n  String buildLogRegular=getBuildLog(build);\n  assertTrue(buildLogRegular.contains(Ant_ExecutableNotFound(\"varAnt\")));\n  project.setAssignedLabel(slaveEnv.getSelfLabel());\n  build=project.scheduleBuild2(0).get();\n  System.out.println(build.getDisplayName() + \" completed\");\n  assertBuildStatusSuccess(build);\n  String buildLogEnv=getBuildLog(build);\n  System.out.println(buildLogEnv);\n  assertTrue(buildLogEnv.contains(\"Ant home: \"));\n  assertTrue(buildLogEnv.contains(\"Test property: correct\"));\n  assertFalse(buildLogEnv.matches(\"(?s)^.*Ant home: [^\\\\n\\\\r]*\" + DUMMY_LOCATION_VARNAME + \".*$\"));\n  assertFalse(buildLogEnv.matches(\"(?s)^.*Test property: [^\\\\n\\\\r]*\" + DUMMY_LOCATION_VARNAME + \".*$\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 212,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 140,
        "startColumnNumber" : 2,
        "endLineNumber" : 140,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertTrue(buildLogEnv.contains(\"Ant home: \"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 140,
    "startColumnNumber" : 34,
    "endLineNumber" : 140,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}