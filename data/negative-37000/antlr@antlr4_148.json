{
  "id" : 148,
  "expression" : "e",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/runtime-testsuite/test/org/antlr/v4/test/runtime/java/TestInterpreterDataReader.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "e",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 60,
      "startColumnNumber" : 32,
      "endLineNumber" : 60,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 60,
        "startColumnNumber" : 32,
        "endLineNumber" : 60,
        "endColumnNumber" : 44
      },
      "nodeContext" : "e.getClass()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Assert.assertEquals(e.getClass(),RuntimeException.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Assert.assertEquals(e.getClass(),RuntimeException.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 59,
        "startColumnNumber" : 30,
        "endLineNumber" : 62,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Assert.assertEquals(e.getClass(),RuntimeException.class);\n  Assert.assertEquals(e.getMessage(),\"Unexpected data entry\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 179,
        "startLineNumber" : 59,
        "startColumnNumber" : 10,
        "endLineNumber" : 62,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Exception e) {\n  Assert.assertEquals(e.getClass(),RuntimeException.class);\n  Assert.assertEquals(e.getMessage(),\"Unexpected data entry\");\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 315,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  InterpreterDataReader.InterpreterData interpreterData=InterpreterDataReader.parseFile(stuff.getPath());\n}\n catch (Exception e) {\n  Assert.assertEquals(e.getClass(),RuntimeException.class);\n  Assert.assertEquals(e.getMessage(),\"Unexpected data entry\");\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 562,
        "startLineNumber" : 52,
        "startColumnNumber" : 37,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final ClassLoader loader=Thread.currentThread().getContextClassLoader();\n  final URL stuff=loader.getResource(\"org/antlr/v4/test/runtime/InterpDataReaderTest2.interp\");\n  Assert.assertNotNull(stuff);\n  try {\n    InterpreterDataReader.InterpreterData interpreterData=InterpreterDataReader.parseFile(stuff.getPath());\n  }\n catch (  Exception e) {\n    Assert.assertEquals(e.getClass(),RuntimeException.class);\n    Assert.assertEquals(e.getMessage(),\"Unexpected data entry\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 606,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testParseFileError(){\n  final ClassLoader loader=Thread.currentThread().getContextClassLoader();\n  final URL stuff=loader.getResource(\"org/antlr/v4/test/runtime/InterpDataReaderTest2.interp\");\n  Assert.assertNotNull(stuff);\n  try {\n    InterpreterDataReader.InterpreterData interpreterData=InterpreterDataReader.parseFile(stuff.getPath());\n  }\n catch (  Exception e) {\n    Assert.assertEquals(e.getClass(),RuntimeException.class);\n    Assert.assertEquals(e.getMessage(),\"Unexpected data entry\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 72,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Assert.assertEquals(e.getClass(),RuntimeException.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Exception"
  }, {
    "nodeContext" : "e",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 61,
      "startColumnNumber" : 32,
      "endLineNumber" : 61,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 61,
        "startColumnNumber" : 32,
        "endLineNumber" : 61,
        "endColumnNumber" : 46
      },
      "nodeContext" : "e.getMessage()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 61,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 72
      },
      "nodeContext" : "Assert.assertEquals(e.getMessage(),\"Unexpected data entry\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 61,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 73
      },
      "nodeContext" : "Assert.assertEquals(e.getMessage(),\"Unexpected data entry\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 59,
        "startColumnNumber" : 30,
        "endLineNumber" : 62,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Assert.assertEquals(e.getClass(),RuntimeException.class);\n  Assert.assertEquals(e.getMessage(),\"Unexpected data entry\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 179,
        "startLineNumber" : 59,
        "startColumnNumber" : 10,
        "endLineNumber" : 62,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Exception e) {\n  Assert.assertEquals(e.getClass(),RuntimeException.class);\n  Assert.assertEquals(e.getMessage(),\"Unexpected data entry\");\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 315,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  InterpreterDataReader.InterpreterData interpreterData=InterpreterDataReader.parseFile(stuff.getPath());\n}\n catch (Exception e) {\n  Assert.assertEquals(e.getClass(),RuntimeException.class);\n  Assert.assertEquals(e.getMessage(),\"Unexpected data entry\");\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 562,
        "startLineNumber" : 52,
        "startColumnNumber" : 37,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final ClassLoader loader=Thread.currentThread().getContextClassLoader();\n  final URL stuff=loader.getResource(\"org/antlr/v4/test/runtime/InterpDataReaderTest2.interp\");\n  Assert.assertNotNull(stuff);\n  try {\n    InterpreterDataReader.InterpreterData interpreterData=InterpreterDataReader.parseFile(stuff.getPath());\n  }\n catch (  Exception e) {\n    Assert.assertEquals(e.getClass(),RuntimeException.class);\n    Assert.assertEquals(e.getMessage(),\"Unexpected data entry\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 606,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testParseFileError(){\n  final ClassLoader loader=Thread.currentThread().getContextClassLoader();\n  final URL stuff=loader.getResource(\"org/antlr/v4/test/runtime/InterpDataReaderTest2.interp\");\n  Assert.assertNotNull(stuff);\n  try {\n    InterpreterDataReader.InterpreterData interpreterData=InterpreterDataReader.parseFile(stuff.getPath());\n  }\n catch (  Exception e) {\n    Assert.assertEquals(e.getClass(),RuntimeException.class);\n    Assert.assertEquals(e.getMessage(),\"Unexpected data entry\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 72,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 61,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 73
      },
      "nodeContext" : "Assert.assertEquals(e.getMessage(),\"Unexpected data entry\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Exception"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 60,
    "startColumnNumber" : 32,
    "endLineNumber" : 60,
    "endColumnNumber" : 33
  }, {
    "charLength" : 1,
    "startLineNumber" : 61,
    "startColumnNumber" : 32,
    "endLineNumber" : 61,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}