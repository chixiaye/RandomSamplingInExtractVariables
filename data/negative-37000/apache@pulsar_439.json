{
  "id" : 439,
  "expression" : "fileName.startsWith(\"builtin://\")",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-client-admin/src/main/java/org/apache/pulsar/client/admin/internal/SinksImpl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "fileName.startsWith(\"builtin://\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 259,
      "startColumnNumber" : 37,
      "endLineNumber" : 259,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 259,
        "startColumnNumber" : 36,
        "endLineNumber" : 259,
        "endColumnNumber" : 70
      },
      "nodeContext" : "!fileName.startsWith(\"builtin://\")",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 259,
        "startColumnNumber" : 16,
        "endLineNumber" : 259,
        "endColumnNumber" : 70
      },
      "nodeContext" : "fileName != null && !fileName.startsWith(\"builtin://\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 272,
        "startLineNumber" : 259,
        "startColumnNumber" : 12,
        "endLineNumber" : 262,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (fileName != null && !fileName.startsWith(\"builtin://\")) {\n  builder.addBodyPart(new FilePart(\"data\",new File(fileName),MediaType.APPLICATION_OCTET_STREAM));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1579,
        "startLineNumber" : 252,
        "startColumnNumber" : 12,
        "endLineNumber" : 279,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RequestBuilder builder=post(sink.path(sinkConfig.getTenant()).path(sinkConfig.getNamespace()).path(sinkConfig.getName()).getUri().toASCIIString()).addBodyPart(new StringPart(\"sinkConfig\",ObjectMapperFactory.getThreadLocal().writeValueAsString(sinkConfig),MediaType.APPLICATION_JSON));\n  if (fileName != null && !fileName.startsWith(\"builtin://\")) {\n    builder.addBodyPart(new FilePart(\"data\",new File(fileName),MediaType.APPLICATION_OCTET_STREAM));\n  }\n  asyncHttpClient.executeRequest(addAuthHeaders(sink,builder).build()).toCompletableFuture().thenAccept(response -> {\n    if (response.getStatusCode() < 200 || response.getStatusCode() >= 300) {\n      future.completeExceptionally(getApiException(Response.status(response.getStatusCode()).entity(response.getResponseBody()).build()));\n    }\n else {\n      future.complete(null);\n    }\n  }\n).exceptionally(throwable -> {\n    future.completeExceptionally(getApiException(throwable));\n    return null;\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 140,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1677,
        "startLineNumber" : 252,
        "startColumnNumber" : 8,
        "endLineNumber" : 281,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  RequestBuilder builder=post(sink.path(sinkConfig.getTenant()).path(sinkConfig.getNamespace()).path(sinkConfig.getName()).getUri().toASCIIString()).addBodyPart(new StringPart(\"sinkConfig\",ObjectMapperFactory.getThreadLocal().writeValueAsString(sinkConfig),MediaType.APPLICATION_JSON));\n  if (fileName != null && !fileName.startsWith(\"builtin://\")) {\n    builder.addBodyPart(new FilePart(\"data\",new File(fileName),MediaType.APPLICATION_OCTET_STREAM));\n  }\n  asyncHttpClient.executeRequest(addAuthHeaders(sink,builder).build()).toCompletableFuture().thenAccept(response -> {\n    if (response.getStatusCode() < 200 || response.getStatusCode() >= 300) {\n      future.completeExceptionally(getApiException(Response.status(response.getStatusCode()).entity(response.getResponseBody()).build()));\n    }\n else {\n      future.complete(null);\n    }\n  }\n).exceptionally(throwable -> {\n    future.completeExceptionally(getApiException(throwable));\n    return null;\n  }\n);\n}\n catch (Exception e) {\n  future.completeExceptionally(getApiException(e));\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 154,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1941,
        "startLineNumber" : 247,
        "startColumnNumber" : 91,
        "endLineNumber" : 283,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final CompletableFuture<Void> future=new CompletableFuture<>();\n  if (!validateSinkName(sinkConfig.getTenant(),sinkConfig.getNamespace(),sinkConfig.getName(),future)) {\n    return future;\n  }\n  try {\n    RequestBuilder builder=post(sink.path(sinkConfig.getTenant()).path(sinkConfig.getNamespace()).path(sinkConfig.getName()).getUri().toASCIIString()).addBodyPart(new StringPart(\"sinkConfig\",ObjectMapperFactory.getThreadLocal().writeValueAsString(sinkConfig),MediaType.APPLICATION_JSON));\n    if (fileName != null && !fileName.startsWith(\"builtin://\")) {\n      builder.addBodyPart(new FilePart(\"data\",new File(fileName),MediaType.APPLICATION_OCTET_STREAM));\n    }\n    asyncHttpClient.executeRequest(addAuthHeaders(sink,builder).build()).toCompletableFuture().thenAccept(response -> {\n      if (response.getStatusCode() < 200 || response.getStatusCode() >= 300) {\n        future.completeExceptionally(getApiException(Response.status(response.getStatusCode()).entity(response.getResponseBody()).build()));\n      }\n else {\n        future.complete(null);\n      }\n    }\n).exceptionally(throwable -> {\n      future.completeExceptionally(getApiException(throwable));\n      return null;\n    }\n);\n  }\n catch (  Exception e) {\n    future.completeExceptionally(getApiException(e));\n  }\n  return future;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 187,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2042,
        "startLineNumber" : 246,
        "startColumnNumber" : 4,
        "endLineNumber" : 283,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public CompletableFuture<Void> createSinkAsync(SinkConfig sinkConfig,String fileName){\n  final CompletableFuture<Void> future=new CompletableFuture<>();\n  if (!validateSinkName(sinkConfig.getTenant(),sinkConfig.getNamespace(),sinkConfig.getName(),future)) {\n    return future;\n  }\n  try {\n    RequestBuilder builder=post(sink.path(sinkConfig.getTenant()).path(sinkConfig.getNamespace()).path(sinkConfig.getName()).getUri().toASCIIString()).addBodyPart(new StringPart(\"sinkConfig\",ObjectMapperFactory.getThreadLocal().writeValueAsString(sinkConfig),MediaType.APPLICATION_JSON));\n    if (fileName != null && !fileName.startsWith(\"builtin://\")) {\n      builder.addBodyPart(new FilePart(\"data\",new File(fileName),MediaType.APPLICATION_OCTET_STREAM));\n    }\n    asyncHttpClient.executeRequest(addAuthHeaders(sink,builder).build()).toCompletableFuture().thenAccept(response -> {\n      if (response.getStatusCode() < 200 || response.getStatusCode() >= 300) {\n        future.completeExceptionally(getApiException(Response.status(response.getStatusCode()).entity(response.getResponseBody()).build()));\n      }\n else {\n        future.complete(null);\n      }\n    }\n).exceptionally(throwable -> {\n      future.completeExceptionally(getApiException(throwable));\n      return null;\n    }\n);\n  }\n catch (  Exception e) {\n    future.completeExceptionally(getApiException(e));\n  }\n  return future;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 205,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 259,
        "startColumnNumber" : 16,
        "endLineNumber" : 259,
        "endColumnNumber" : 70
      },
      "nodeContext" : "fileName != null && !fileName.startsWith(\"builtin://\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 259,
    "startColumnNumber" : 37,
    "endLineNumber" : 259,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}