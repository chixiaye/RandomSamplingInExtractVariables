{
  "id" : 16,
  "expression" : "7",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/telegram/ui/ActionBar/BackDrawable.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "7",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 128,
      "startColumnNumber" : 45,
      "endLineNumber" : 128,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 128,
        "startColumnNumber" : 25,
        "endLineNumber" : 128,
        "endColumnNumber" : 47
      },
      "nodeContext" : "AndroidUtilities.dp(7)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 128,
        "startColumnNumber" : 24,
        "endLineNumber" : 128,
        "endColumnNumber" : 47
      },
      "nodeContext" : "-AndroidUtilities.dp(7)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 128,
        "startColumnNumber" : 24,
        "endLineNumber" : 128,
        "endColumnNumber" : 83
      },
      "nodeContext" : "-AndroidUtilities.dp(7) - AndroidUtilities.dp(1) * rotation",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 121
      },
      "nodeContext" : "canvas.drawLine(-AndroidUtilities.dp(7) - AndroidUtilities.dp(1) * rotation,0,AndroidUtilities.dp(8),0,paint)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 122
      },
      "nodeContext" : "canvas.drawLine(-AndroidUtilities.dp(7) - AndroidUtilities.dp(1) * rotation,0,AndroidUtilities.dp(8),0,paint);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2367,
        "startLineNumber" : 90,
        "startColumnNumber" : 36,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (currentRotation != finalRotation) {\n    if (lastFrameTime != 0) {\n      long dt=System.currentTimeMillis() - lastFrameTime;\n      currentAnimationTime+=dt;\n      if (currentAnimationTime >= animationTime) {\n        currentRotation=finalRotation;\n      }\n else {\n        if (currentRotation < finalRotation) {\n          currentRotation=interpolator.getInterpolation(currentAnimationTime / animationTime) * finalRotation;\n        }\n else {\n          currentRotation=1.0f - interpolator.getInterpolation(currentAnimationTime / animationTime);\n        }\n      }\n    }\n    lastFrameTime=System.currentTimeMillis();\n    invalidateSelf();\n  }\n  int rD=rotated ? (int)((Color.red(rotatedColor) - Color.red(color)) * currentRotation) : 0;\n  int rG=rotated ? (int)((Color.green(rotatedColor) - Color.green(color)) * currentRotation) : 0;\n  int rB=rotated ? (int)((Color.blue(rotatedColor) - Color.blue(color)) * currentRotation) : 0;\n  int c=Color.rgb(Color.red(color) + rD,Color.green(color) + rG,Color.blue(color) + rB);\n  paint.setColor(c);\n  canvas.save();\n  canvas.translate(getIntrinsicWidth() / 2,getIntrinsicHeight() / 2);\n  if (arrowRotation != 0) {\n    canvas.rotate(arrowRotation);\n  }\n  float rotation=currentRotation;\n  if (!alwaysClose) {\n    canvas.rotate(currentRotation * (reverseAngle ? -225 : 135));\n  }\n else {\n    canvas.rotate(135 + currentRotation * (reverseAngle ? -180 : 180));\n    rotation=1.0f;\n  }\n  canvas.drawLine(-AndroidUtilities.dp(7) - AndroidUtilities.dp(1) * rotation,0,AndroidUtilities.dp(8),0,paint);\n  float startYDiff=-AndroidUtilities.dp(0.5f);\n  float endYDiff=AndroidUtilities.dp(7) + AndroidUtilities.dp(1) * rotation;\n  float startXDiff=-AndroidUtilities.dp(7.0f) + AndroidUtilities.dp(7.0f) * rotation;\n  float endXDiff=AndroidUtilities.dp(0.5f) - AndroidUtilities.dp(0.5f) * rotation;\n  canvas.drawLine(startXDiff,-startYDiff,endXDiff,-endYDiff,paint);\n  canvas.drawLine(startXDiff,startYDiff,endXDiff,endYDiff,paint);\n  canvas.restore();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 335,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2413,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void draw(Canvas canvas){\n  if (currentRotation != finalRotation) {\n    if (lastFrameTime != 0) {\n      long dt=System.currentTimeMillis() - lastFrameTime;\n      currentAnimationTime+=dt;\n      if (currentAnimationTime >= animationTime) {\n        currentRotation=finalRotation;\n      }\n else {\n        if (currentRotation < finalRotation) {\n          currentRotation=interpolator.getInterpolation(currentAnimationTime / animationTime) * finalRotation;\n        }\n else {\n          currentRotation=1.0f - interpolator.getInterpolation(currentAnimationTime / animationTime);\n        }\n      }\n    }\n    lastFrameTime=System.currentTimeMillis();\n    invalidateSelf();\n  }\n  int rD=rotated ? (int)((Color.red(rotatedColor) - Color.red(color)) * currentRotation) : 0;\n  int rG=rotated ? (int)((Color.green(rotatedColor) - Color.green(color)) * currentRotation) : 0;\n  int rB=rotated ? (int)((Color.blue(rotatedColor) - Color.blue(color)) * currentRotation) : 0;\n  int c=Color.rgb(Color.red(color) + rD,Color.green(color) + rG,Color.blue(color) + rB);\n  paint.setColor(c);\n  canvas.save();\n  canvas.translate(getIntrinsicWidth() / 2,getIntrinsicHeight() / 2);\n  if (arrowRotation != 0) {\n    canvas.rotate(arrowRotation);\n  }\n  float rotation=currentRotation;\n  if (!alwaysClose) {\n    canvas.rotate(currentRotation * (reverseAngle ? -225 : 135));\n  }\n else {\n    canvas.rotate(135 + currentRotation * (reverseAngle ? -180 : 180));\n    rotation=1.0f;\n  }\n  canvas.drawLine(-AndroidUtilities.dp(7) - AndroidUtilities.dp(1) * rotation,0,AndroidUtilities.dp(8),0,paint);\n  float startYDiff=-AndroidUtilities.dp(0.5f);\n  float endYDiff=AndroidUtilities.dp(7) + AndroidUtilities.dp(1) * rotation;\n  float startXDiff=-AndroidUtilities.dp(7.0f) + AndroidUtilities.dp(7.0f) * rotation;\n  float endXDiff=AndroidUtilities.dp(0.5f) - AndroidUtilities.dp(0.5f) * rotation;\n  canvas.drawLine(startXDiff,-startYDiff,endXDiff,-endYDiff,paint);\n  canvas.drawLine(startXDiff,startYDiff,endXDiff,endYDiff,paint);\n  canvas.restore();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 345,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 122
      },
      "nodeContext" : "canvas.drawLine(-AndroidUtilities.dp(7) - AndroidUtilities.dp(1) * rotation,0,AndroidUtilities.dp(8),0,paint);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "7",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 130,
      "startColumnNumber" : 45,
      "endLineNumber" : 130,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 130,
        "startColumnNumber" : 25,
        "endLineNumber" : 130,
        "endColumnNumber" : 47
      },
      "nodeContext" : "AndroidUtilities.dp(7)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 130,
        "startColumnNumber" : 25,
        "endLineNumber" : 130,
        "endColumnNumber" : 83
      },
      "nodeContext" : "AndroidUtilities.dp(7) + AndroidUtilities.dp(1) * rotation",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 130,
        "startColumnNumber" : 14,
        "endLineNumber" : 130,
        "endColumnNumber" : 83
      },
      "nodeContext" : "endYDiff=AndroidUtilities.dp(7) + AndroidUtilities.dp(1) * rotation",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 130,
        "startColumnNumber" : 8,
        "endLineNumber" : 130,
        "endColumnNumber" : 84
      },
      "nodeContext" : "float endYDiff=AndroidUtilities.dp(7) + AndroidUtilities.dp(1) * rotation;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2367,
        "startLineNumber" : 90,
        "startColumnNumber" : 36,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (currentRotation != finalRotation) {\n    if (lastFrameTime != 0) {\n      long dt=System.currentTimeMillis() - lastFrameTime;\n      currentAnimationTime+=dt;\n      if (currentAnimationTime >= animationTime) {\n        currentRotation=finalRotation;\n      }\n else {\n        if (currentRotation < finalRotation) {\n          currentRotation=interpolator.getInterpolation(currentAnimationTime / animationTime) * finalRotation;\n        }\n else {\n          currentRotation=1.0f - interpolator.getInterpolation(currentAnimationTime / animationTime);\n        }\n      }\n    }\n    lastFrameTime=System.currentTimeMillis();\n    invalidateSelf();\n  }\n  int rD=rotated ? (int)((Color.red(rotatedColor) - Color.red(color)) * currentRotation) : 0;\n  int rG=rotated ? (int)((Color.green(rotatedColor) - Color.green(color)) * currentRotation) : 0;\n  int rB=rotated ? (int)((Color.blue(rotatedColor) - Color.blue(color)) * currentRotation) : 0;\n  int c=Color.rgb(Color.red(color) + rD,Color.green(color) + rG,Color.blue(color) + rB);\n  paint.setColor(c);\n  canvas.save();\n  canvas.translate(getIntrinsicWidth() / 2,getIntrinsicHeight() / 2);\n  if (arrowRotation != 0) {\n    canvas.rotate(arrowRotation);\n  }\n  float rotation=currentRotation;\n  if (!alwaysClose) {\n    canvas.rotate(currentRotation * (reverseAngle ? -225 : 135));\n  }\n else {\n    canvas.rotate(135 + currentRotation * (reverseAngle ? -180 : 180));\n    rotation=1.0f;\n  }\n  canvas.drawLine(-AndroidUtilities.dp(7) - AndroidUtilities.dp(1) * rotation,0,AndroidUtilities.dp(8),0,paint);\n  float startYDiff=-AndroidUtilities.dp(0.5f);\n  float endYDiff=AndroidUtilities.dp(7) + AndroidUtilities.dp(1) * rotation;\n  float startXDiff=-AndroidUtilities.dp(7.0f) + AndroidUtilities.dp(7.0f) * rotation;\n  float endXDiff=AndroidUtilities.dp(0.5f) - AndroidUtilities.dp(0.5f) * rotation;\n  canvas.drawLine(startXDiff,-startYDiff,endXDiff,-endYDiff,paint);\n  canvas.drawLine(startXDiff,startYDiff,endXDiff,endYDiff,paint);\n  canvas.restore();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 335,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2413,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void draw(Canvas canvas){\n  if (currentRotation != finalRotation) {\n    if (lastFrameTime != 0) {\n      long dt=System.currentTimeMillis() - lastFrameTime;\n      currentAnimationTime+=dt;\n      if (currentAnimationTime >= animationTime) {\n        currentRotation=finalRotation;\n      }\n else {\n        if (currentRotation < finalRotation) {\n          currentRotation=interpolator.getInterpolation(currentAnimationTime / animationTime) * finalRotation;\n        }\n else {\n          currentRotation=1.0f - interpolator.getInterpolation(currentAnimationTime / animationTime);\n        }\n      }\n    }\n    lastFrameTime=System.currentTimeMillis();\n    invalidateSelf();\n  }\n  int rD=rotated ? (int)((Color.red(rotatedColor) - Color.red(color)) * currentRotation) : 0;\n  int rG=rotated ? (int)((Color.green(rotatedColor) - Color.green(color)) * currentRotation) : 0;\n  int rB=rotated ? (int)((Color.blue(rotatedColor) - Color.blue(color)) * currentRotation) : 0;\n  int c=Color.rgb(Color.red(color) + rD,Color.green(color) + rG,Color.blue(color) + rB);\n  paint.setColor(c);\n  canvas.save();\n  canvas.translate(getIntrinsicWidth() / 2,getIntrinsicHeight() / 2);\n  if (arrowRotation != 0) {\n    canvas.rotate(arrowRotation);\n  }\n  float rotation=currentRotation;\n  if (!alwaysClose) {\n    canvas.rotate(currentRotation * (reverseAngle ? -225 : 135));\n  }\n else {\n    canvas.rotate(135 + currentRotation * (reverseAngle ? -180 : 180));\n    rotation=1.0f;\n  }\n  canvas.drawLine(-AndroidUtilities.dp(7) - AndroidUtilities.dp(1) * rotation,0,AndroidUtilities.dp(8),0,paint);\n  float startYDiff=-AndroidUtilities.dp(0.5f);\n  float endYDiff=AndroidUtilities.dp(7) + AndroidUtilities.dp(1) * rotation;\n  float startXDiff=-AndroidUtilities.dp(7.0f) + AndroidUtilities.dp(7.0f) * rotation;\n  float endXDiff=AndroidUtilities.dp(0.5f) - AndroidUtilities.dp(0.5f) * rotation;\n  canvas.drawLine(startXDiff,-startYDiff,endXDiff,-endYDiff,paint);\n  canvas.drawLine(startXDiff,startYDiff,endXDiff,endYDiff,paint);\n  canvas.restore();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 345,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 130,
        "startColumnNumber" : 8,
        "endLineNumber" : 130,
        "endColumnNumber" : 84
      },
      "nodeContext" : "float endYDiff=AndroidUtilities.dp(7) + AndroidUtilities.dp(1) * rotation;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 128,
    "startColumnNumber" : 45,
    "endLineNumber" : 128,
    "endColumnNumber" : 46
  }, {
    "charLength" : 1,
    "startLineNumber" : 130,
    "startColumnNumber" : 45,
    "endLineNumber" : 130,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}