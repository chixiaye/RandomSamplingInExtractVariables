{
  "id" : 443,
  "expression" : "classes",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/main/java/com/google/devtools/common/options/OptionsData.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "classes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 59,
      "startColumnNumber" : 64,
      "endLineNumber" : 59,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 59,
        "startColumnNumber" : 39,
        "endLineNumber" : 59,
        "endColumnNumber" : 72
      },
      "nodeContext" : "IsolatedOptionsData.from(classes)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 59,
        "startColumnNumber" : 24,
        "endLineNumber" : 59,
        "endColumnNumber" : 72
      },
      "nodeContext" : "isolatedData=IsolatedOptionsData.from(classes)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 73
      },
      "nodeContext" : "IsolatedOptionsData isolatedData=IsolatedOptionsData.from(classes);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 709,
        "startLineNumber" : 58,
        "startColumnNumber" : 76,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  IsolatedOptionsData isolatedData=IsolatedOptionsData.from(classes);\n  ImmutableMap.Builder<OptionDefinition,ImmutableList<String>> evaluatedExpansionsBuilder=ImmutableMap.builder();\n  for (  Map.Entry<String,OptionDefinition> entry : isolatedData.getAllOptionDefinitions()) {\n    OptionDefinition optionDefinition=entry.getValue();\n    String[] constExpansion=optionDefinition.getOptionExpansion();\n    if (constExpansion.length > 0) {\n      evaluatedExpansionsBuilder.put(optionDefinition,ImmutableList.copyOf(constExpansion));\n    }\n  }\n  return new OptionsData(isolatedData,evaluatedExpansionsBuilder.build());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1103,
        "startLineNumber" : 52,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Constructs an  {@link OptionsData} object for a parser that knows about the given {@link OptionsBase} classes. In addition to the work done to construct the {@link IsolatedOptionsData}, this also computes expansion information. If an option has an expansion, try to precalculate its here.\n */\nstatic OptionsData from(Collection<Class<? extends OptionsBase>> classes){\n  IsolatedOptionsData isolatedData=IsolatedOptionsData.from(classes);\n  ImmutableMap.Builder<OptionDefinition,ImmutableList<String>> evaluatedExpansionsBuilder=ImmutableMap.builder();\n  for (  Map.Entry<String,OptionDefinition> entry : isolatedData.getAllOptionDefinitions()) {\n    OptionDefinition optionDefinition=entry.getValue();\n    String[] constExpansion=optionDefinition.getOptionExpansion();\n    if (constExpansion.length > 0) {\n      evaluatedExpansionsBuilder.put(optionDefinition,ImmutableList.copyOf(constExpansion));\n    }\n  }\n  return new OptionsData(isolatedData,evaluatedExpansionsBuilder.build());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 103,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 73
      },
      "nodeContext" : "IsolatedOptionsData isolatedData=IsolatedOptionsData.from(classes);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Collection<java.lang.Class<? extends com.google.devtools.common.options.OptionsBase>>"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 59,
    "startColumnNumber" : 64,
    "endLineNumber" : 59,
    "endColumnNumber" : 71
  } ],
  "layoutRelationDataList" : [ ]
}