{
  "id" : 357,
  "expression" : "(tile.worldy() + source.worldy())",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/entities/Puddles.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(tile.worldy() + source.worldy())",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 37,
      "startColumnNumber" : 52,
      "endLineNumber" : 37,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 37,
        "startColumnNumber" : 52,
        "endLineNumber" : 37,
        "endColumnNumber" : 90
      },
      "nodeContext" : "(tile.worldy() + source.worldy()) / 2f",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 36,
        "startColumnNumber" : 12,
        "endLineNumber" : 37,
        "endColumnNumber" : 91
      },
      "nodeContext" : "reactPuddle(tile.floor().liquidDrop,liquid,amount,tile,(tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 30,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 36,
        "startColumnNumber" : 12,
        "endLineNumber" : 37,
        "endColumnNumber" : 92
      },
      "nodeContext" : "reactPuddle(tile.floor().liquidDrop,liquid,amount,tile,(tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 523,
        "startLineNumber" : 35,
        "startColumnNumber" : 80,
        "endLineNumber" : 46,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  reactPuddle(tile.floor().liquidDrop,liquid,amount,tile,(tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f);\n  Puddle p=map.get(tile.pos());\n  if (generation == 0 && p != null && p.lastRipple <= Time.time - 40f) {\n    Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,tile.floor().liquidDrop.color);\n    p.lastRipple=Time.time;\n  }\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 595,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (tile.floor().isLiquid && !canStayOn(liquid,tile.floor().liquidDrop)) {\n  reactPuddle(tile.floor().liquidDrop,liquid,amount,tile,(tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f);\n  Puddle p=map.get(tile.pos());\n  if (generation == 0 && p != null && p.lastRipple <= Time.time - 40f) {\n    Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,tile.floor().liquidDrop.color);\n    p.lastRipple=Time.time;\n  }\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 121,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1690,
        "startLineNumber" : 32,
        "startColumnNumber" : 99,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (tile == null)   return;\n  if (tile.floor().isLiquid && !canStayOn(liquid,tile.floor().liquidDrop)) {\n    reactPuddle(tile.floor().liquidDrop,liquid,amount,tile,(tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f);\n    Puddle p=map.get(tile.pos());\n    if (generation == 0 && p != null && p.lastRipple <= Time.time - 40f) {\n      Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,tile.floor().liquidDrop.color);\n      p.lastRipple=Time.time;\n    }\n    return;\n  }\n  if (tile.floor().solid) {\n    return;\n  }\n  Puddle p=map.get(tile.pos());\n  if (p == null) {\n    Puddle puddle=Puddle.create();\n    puddle.tile(tile);\n    puddle.liquid(liquid);\n    puddle.amount(amount);\n    puddle.generation(generation);\n    puddle.set((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f);\n    puddle.add();\n    map.put(tile.pos(),puddle);\n  }\n else   if (p.liquid() == liquid) {\n    p.accepting(Math.max(amount,p.accepting()));\n    if (generation == 0 && p.lastRipple <= Time.time - 40f && p.amount() >= maxLiquid / 2f) {\n      Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,p.liquid().color);\n      p.lastRipple=Time.time;\n    }\n  }\n else {\n    p.amount(p.amount() + reactPuddle(p.liquid(),liquid,amount,p.tile(),(p.x() + source.worldx()) / 2f,(p.y() + source.worldy()) / 2f));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 335,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1785,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void deposit(Tile tile,Tile source,Liquid liquid,float amount,int generation){\n  if (tile == null)   return;\n  if (tile.floor().isLiquid && !canStayOn(liquid,tile.floor().liquidDrop)) {\n    reactPuddle(tile.floor().liquidDrop,liquid,amount,tile,(tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f);\n    Puddle p=map.get(tile.pos());\n    if (generation == 0 && p != null && p.lastRipple <= Time.time - 40f) {\n      Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,tile.floor().liquidDrop.color);\n      p.lastRipple=Time.time;\n    }\n    return;\n  }\n  if (tile.floor().solid) {\n    return;\n  }\n  Puddle p=map.get(tile.pos());\n  if (p == null) {\n    Puddle puddle=Puddle.create();\n    puddle.tile(tile);\n    puddle.liquid(liquid);\n    puddle.amount(amount);\n    puddle.generation(generation);\n    puddle.set((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f);\n    puddle.add();\n    map.put(tile.pos(),puddle);\n  }\n else   if (p.liquid() == liquid) {\n    p.accepting(Math.max(amount,p.accepting()));\n    if (generation == 0 && p.lastRipple <= Time.time - 40f && p.amount() >= maxLiquid / 2f) {\n      Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,p.liquid().color);\n      p.lastRipple=Time.time;\n    }\n  }\n else {\n    p.amount(p.amount() + reactPuddle(p.liquid(),liquid,amount,p.tile(),(p.x() + source.worldx()) / 2f,(p.y() + source.worldy()) / 2f));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 358,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 37,
        "startColumnNumber" : 52,
        "endLineNumber" : 37,
        "endColumnNumber" : 90
      },
      "nodeContext" : "(tile.worldy() + source.worldy()) / 2f",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "float"
  }, {
    "nodeContext" : "(tile.worldy() + source.worldy())",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 42,
      "startColumnNumber" : 69,
      "endLineNumber" : 42,
      "endColumnNumber" : 102
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 42,
        "startColumnNumber" : 69,
        "endLineNumber" : 42,
        "endColumnNumber" : 107
      },
      "nodeContext" : "(tile.worldy() + source.worldy()) / 2f",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 42,
        "startColumnNumber" : 16,
        "endLineNumber" : 42,
        "endColumnNumber" : 143
      },
      "nodeContext" : "Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,tile.floor().liquidDrop.color)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 33,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 42,
        "startColumnNumber" : 16,
        "endLineNumber" : 42,
        "endColumnNumber" : 144
      },
      "nodeContext" : "Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,tile.floor().liquidDrop.color);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 41,
        "startColumnNumber" : 79,
        "endLineNumber" : 44,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,tile.floor().liquidDrop.color);\n  p.lastRipple=Time.time;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 41,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (generation == 0 && p != null && p.lastRipple <= Time.time - 40f) {\n  Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,tile.floor().liquidDrop.color);\n  p.lastRipple=Time.time;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 61,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 523,
        "startLineNumber" : 35,
        "startColumnNumber" : 80,
        "endLineNumber" : 46,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  reactPuddle(tile.floor().liquidDrop,liquid,amount,tile,(tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f);\n  Puddle p=map.get(tile.pos());\n  if (generation == 0 && p != null && p.lastRipple <= Time.time - 40f) {\n    Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,tile.floor().liquidDrop.color);\n    p.lastRipple=Time.time;\n  }\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 595,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (tile.floor().isLiquid && !canStayOn(liquid,tile.floor().liquidDrop)) {\n  reactPuddle(tile.floor().liquidDrop,liquid,amount,tile,(tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f);\n  Puddle p=map.get(tile.pos());\n  if (generation == 0 && p != null && p.lastRipple <= Time.time - 40f) {\n    Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,tile.floor().liquidDrop.color);\n    p.lastRipple=Time.time;\n  }\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 121,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1690,
        "startLineNumber" : 32,
        "startColumnNumber" : 99,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (tile == null)   return;\n  if (tile.floor().isLiquid && !canStayOn(liquid,tile.floor().liquidDrop)) {\n    reactPuddle(tile.floor().liquidDrop,liquid,amount,tile,(tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f);\n    Puddle p=map.get(tile.pos());\n    if (generation == 0 && p != null && p.lastRipple <= Time.time - 40f) {\n      Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,tile.floor().liquidDrop.color);\n      p.lastRipple=Time.time;\n    }\n    return;\n  }\n  if (tile.floor().solid) {\n    return;\n  }\n  Puddle p=map.get(tile.pos());\n  if (p == null) {\n    Puddle puddle=Puddle.create();\n    puddle.tile(tile);\n    puddle.liquid(liquid);\n    puddle.amount(amount);\n    puddle.generation(generation);\n    puddle.set((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f);\n    puddle.add();\n    map.put(tile.pos(),puddle);\n  }\n else   if (p.liquid() == liquid) {\n    p.accepting(Math.max(amount,p.accepting()));\n    if (generation == 0 && p.lastRipple <= Time.time - 40f && p.amount() >= maxLiquid / 2f) {\n      Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,p.liquid().color);\n      p.lastRipple=Time.time;\n    }\n  }\n else {\n    p.amount(p.amount() + reactPuddle(p.liquid(),liquid,amount,p.tile(),(p.x() + source.worldx()) / 2f,(p.y() + source.worldy()) / 2f));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 335,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1785,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void deposit(Tile tile,Tile source,Liquid liquid,float amount,int generation){\n  if (tile == null)   return;\n  if (tile.floor().isLiquid && !canStayOn(liquid,tile.floor().liquidDrop)) {\n    reactPuddle(tile.floor().liquidDrop,liquid,amount,tile,(tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f);\n    Puddle p=map.get(tile.pos());\n    if (generation == 0 && p != null && p.lastRipple <= Time.time - 40f) {\n      Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,tile.floor().liquidDrop.color);\n      p.lastRipple=Time.time;\n    }\n    return;\n  }\n  if (tile.floor().solid) {\n    return;\n  }\n  Puddle p=map.get(tile.pos());\n  if (p == null) {\n    Puddle puddle=Puddle.create();\n    puddle.tile(tile);\n    puddle.liquid(liquid);\n    puddle.amount(amount);\n    puddle.generation(generation);\n    puddle.set((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f);\n    puddle.add();\n    map.put(tile.pos(),puddle);\n  }\n else   if (p.liquid() == liquid) {\n    p.accepting(Math.max(amount,p.accepting()));\n    if (generation == 0 && p.lastRipple <= Time.time - 40f && p.amount() >= maxLiquid / 2f) {\n      Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,p.liquid().color);\n      p.lastRipple=Time.time;\n    }\n  }\n else {\n    p.amount(p.amount() + reactPuddle(p.liquid(),liquid,amount,p.tile(),(p.x() + source.worldx()) / 2f,(p.y() + source.worldy()) / 2f));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 358,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 42,
        "startColumnNumber" : 16,
        "endLineNumber" : 42,
        "endColumnNumber" : 144
      },
      "nodeContext" : "Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,tile.floor().liquidDrop.color);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 34,
      "astHeight" : 7
    },
    "tokenLength" : 5,
    "type" : "float"
  }, {
    "nodeContext" : "(tile.worldy() + source.worldy())",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 59,
      "startColumnNumber" : 63,
      "endLineNumber" : 59,
      "endColumnNumber" : 96
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 59,
        "startColumnNumber" : 63,
        "endLineNumber" : 59,
        "endColumnNumber" : 101
      },
      "nodeContext" : "(tile.worldy() + source.worldy()) / 2f",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 59,
        "endColumnNumber" : 102
      },
      "nodeContext" : "puddle.set((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 59,
        "endColumnNumber" : 103
      },
      "nodeContext" : "puddle.set((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 371,
        "startLineNumber" : 53,
        "startColumnNumber" : 21,
        "endLineNumber" : 62,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Puddle puddle=Puddle.create();\n  puddle.tile(tile);\n  puddle.liquid(liquid);\n  puddle.amount(amount);\n  puddle.generation(generation);\n  puddle.set((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f);\n  puddle.add();\n  map.put(tile.pos(),puddle);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 932,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (p == null) {\n  Puddle puddle=Puddle.create();\n  puddle.tile(tile);\n  puddle.liquid(liquid);\n  puddle.amount(amount);\n  puddle.generation(generation);\n  puddle.set((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f);\n  puddle.add();\n  map.put(tile.pos(),puddle);\n}\n else if (p.liquid() == liquid) {\n  p.accepting(Math.max(amount,p.accepting()));\n  if (generation == 0 && p.lastRipple <= Time.time - 40f && p.amount() >= maxLiquid / 2f) {\n    Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,p.liquid().color);\n    p.lastRipple=Time.time;\n  }\n}\n else {\n  p.amount(p.amount() + reactPuddle(p.liquid(),liquid,amount,p.tile(),(p.x() + source.worldx()) / 2f,(p.y() + source.worldy()) / 2f));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 189,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1690,
        "startLineNumber" : 32,
        "startColumnNumber" : 99,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (tile == null)   return;\n  if (tile.floor().isLiquid && !canStayOn(liquid,tile.floor().liquidDrop)) {\n    reactPuddle(tile.floor().liquidDrop,liquid,amount,tile,(tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f);\n    Puddle p=map.get(tile.pos());\n    if (generation == 0 && p != null && p.lastRipple <= Time.time - 40f) {\n      Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,tile.floor().liquidDrop.color);\n      p.lastRipple=Time.time;\n    }\n    return;\n  }\n  if (tile.floor().solid) {\n    return;\n  }\n  Puddle p=map.get(tile.pos());\n  if (p == null) {\n    Puddle puddle=Puddle.create();\n    puddle.tile(tile);\n    puddle.liquid(liquid);\n    puddle.amount(amount);\n    puddle.generation(generation);\n    puddle.set((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f);\n    puddle.add();\n    map.put(tile.pos(),puddle);\n  }\n else   if (p.liquid() == liquid) {\n    p.accepting(Math.max(amount,p.accepting()));\n    if (generation == 0 && p.lastRipple <= Time.time - 40f && p.amount() >= maxLiquid / 2f) {\n      Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,p.liquid().color);\n      p.lastRipple=Time.time;\n    }\n  }\n else {\n    p.amount(p.amount() + reactPuddle(p.liquid(),liquid,amount,p.tile(),(p.x() + source.worldx()) / 2f,(p.y() + source.worldy()) / 2f));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 335,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1785,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void deposit(Tile tile,Tile source,Liquid liquid,float amount,int generation){\n  if (tile == null)   return;\n  if (tile.floor().isLiquid && !canStayOn(liquid,tile.floor().liquidDrop)) {\n    reactPuddle(tile.floor().liquidDrop,liquid,amount,tile,(tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f);\n    Puddle p=map.get(tile.pos());\n    if (generation == 0 && p != null && p.lastRipple <= Time.time - 40f) {\n      Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,tile.floor().liquidDrop.color);\n      p.lastRipple=Time.time;\n    }\n    return;\n  }\n  if (tile.floor().solid) {\n    return;\n  }\n  Puddle p=map.get(tile.pos());\n  if (p == null) {\n    Puddle puddle=Puddle.create();\n    puddle.tile(tile);\n    puddle.liquid(liquid);\n    puddle.amount(amount);\n    puddle.generation(generation);\n    puddle.set((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f);\n    puddle.add();\n    map.put(tile.pos(),puddle);\n  }\n else   if (p.liquid() == liquid) {\n    p.accepting(Math.max(amount,p.accepting()));\n    if (generation == 0 && p.lastRipple <= Time.time - 40f && p.amount() >= maxLiquid / 2f) {\n      Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,p.liquid().color);\n      p.lastRipple=Time.time;\n    }\n  }\n else {\n    p.amount(p.amount() + reactPuddle(p.liquid(),liquid,amount,p.tile(),(p.x() + source.worldx()) / 2f,(p.y() + source.worldy()) / 2f));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 358,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 59,
        "endColumnNumber" : 103
      },
      "nodeContext" : "puddle.set((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    },
    "tokenLength" : 5,
    "type" : "float"
  }, {
    "nodeContext" : "(tile.worldy() + source.worldy())",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 66,
      "startColumnNumber" : 69,
      "endLineNumber" : 66,
      "endColumnNumber" : 102
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 66,
        "startColumnNumber" : 69,
        "endLineNumber" : 66,
        "endColumnNumber" : 107
      },
      "nodeContext" : "(tile.worldy() + source.worldy()) / 2f",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 66,
        "startColumnNumber" : 16,
        "endLineNumber" : 66,
        "endColumnNumber" : 130
      },
      "nodeContext" : "Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,p.liquid().color)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 66,
        "startColumnNumber" : 16,
        "endLineNumber" : 66,
        "endColumnNumber" : 131
      },
      "nodeContext" : "Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,p.liquid().color);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 65,
        "startColumnNumber" : 98,
        "endLineNumber" : 68,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,p.liquid().color);\n  p.lastRipple=Time.time;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 275,
        "startLineNumber" : 65,
        "startColumnNumber" : 12,
        "endLineNumber" : 68,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (generation == 0 && p.lastRipple <= Time.time - 40f && p.amount() >= maxLiquid / 2f) {\n  Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,p.liquid().color);\n  p.lastRipple=Time.time;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 63,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 62,
        "startColumnNumber" : 38,
        "endLineNumber" : 69,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  p.accepting(Math.max(amount,p.accepting()));\n  if (generation == 0 && p.lastRipple <= Time.time - 40f && p.amount() >= maxLiquid / 2f) {\n    Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,p.liquid().color);\n    p.lastRipple=Time.time;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 543,
        "startLineNumber" : 62,
        "startColumnNumber" : 14,
        "endLineNumber" : 71,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (p.liquid() == liquid) {\n  p.accepting(Math.max(amount,p.accepting()));\n  if (generation == 0 && p.lastRipple <= Time.time - 40f && p.amount() >= maxLiquid / 2f) {\n    Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,p.liquid().color);\n    p.lastRipple=Time.time;\n  }\n}\n else {\n  p.amount(p.amount() + reactPuddle(p.liquid(),liquid,amount,p.tile(),(p.x() + source.worldx()) / 2f,(p.y() + source.worldy()) / 2f));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 120,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 932,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (p == null) {\n  Puddle puddle=Puddle.create();\n  puddle.tile(tile);\n  puddle.liquid(liquid);\n  puddle.amount(amount);\n  puddle.generation(generation);\n  puddle.set((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f);\n  puddle.add();\n  map.put(tile.pos(),puddle);\n}\n else if (p.liquid() == liquid) {\n  p.accepting(Math.max(amount,p.accepting()));\n  if (generation == 0 && p.lastRipple <= Time.time - 40f && p.amount() >= maxLiquid / 2f) {\n    Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,p.liquid().color);\n    p.lastRipple=Time.time;\n  }\n}\n else {\n  p.amount(p.amount() + reactPuddle(p.liquid(),liquid,amount,p.tile(),(p.x() + source.worldx()) / 2f,(p.y() + source.worldy()) / 2f));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 189,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1690,
        "startLineNumber" : 32,
        "startColumnNumber" : 99,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (tile == null)   return;\n  if (tile.floor().isLiquid && !canStayOn(liquid,tile.floor().liquidDrop)) {\n    reactPuddle(tile.floor().liquidDrop,liquid,amount,tile,(tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f);\n    Puddle p=map.get(tile.pos());\n    if (generation == 0 && p != null && p.lastRipple <= Time.time - 40f) {\n      Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,tile.floor().liquidDrop.color);\n      p.lastRipple=Time.time;\n    }\n    return;\n  }\n  if (tile.floor().solid) {\n    return;\n  }\n  Puddle p=map.get(tile.pos());\n  if (p == null) {\n    Puddle puddle=Puddle.create();\n    puddle.tile(tile);\n    puddle.liquid(liquid);\n    puddle.amount(amount);\n    puddle.generation(generation);\n    puddle.set((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f);\n    puddle.add();\n    map.put(tile.pos(),puddle);\n  }\n else   if (p.liquid() == liquid) {\n    p.accepting(Math.max(amount,p.accepting()));\n    if (generation == 0 && p.lastRipple <= Time.time - 40f && p.amount() >= maxLiquid / 2f) {\n      Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,p.liquid().color);\n      p.lastRipple=Time.time;\n    }\n  }\n else {\n    p.amount(p.amount() + reactPuddle(p.liquid(),liquid,amount,p.tile(),(p.x() + source.worldx()) / 2f,(p.y() + source.worldy()) / 2f));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 335,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1785,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void deposit(Tile tile,Tile source,Liquid liquid,float amount,int generation){\n  if (tile == null)   return;\n  if (tile.floor().isLiquid && !canStayOn(liquid,tile.floor().liquidDrop)) {\n    reactPuddle(tile.floor().liquidDrop,liquid,amount,tile,(tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f);\n    Puddle p=map.get(tile.pos());\n    if (generation == 0 && p != null && p.lastRipple <= Time.time - 40f) {\n      Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,tile.floor().liquidDrop.color);\n      p.lastRipple=Time.time;\n    }\n    return;\n  }\n  if (tile.floor().solid) {\n    return;\n  }\n  Puddle p=map.get(tile.pos());\n  if (p == null) {\n    Puddle puddle=Puddle.create();\n    puddle.tile(tile);\n    puddle.liquid(liquid);\n    puddle.amount(amount);\n    puddle.generation(generation);\n    puddle.set((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f);\n    puddle.add();\n    map.put(tile.pos(),puddle);\n  }\n else   if (p.liquid() == liquid) {\n    p.accepting(Math.max(amount,p.accepting()));\n    if (generation == 0 && p.lastRipple <= Time.time - 40f && p.amount() >= maxLiquid / 2f) {\n      Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,p.liquid().color);\n      p.lastRipple=Time.time;\n    }\n  }\n else {\n    p.amount(p.amount() + reactPuddle(p.liquid(),liquid,amount,p.tile(),(p.x() + source.worldx()) / 2f,(p.y() + source.worldy()) / 2f));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 358,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 66,
        "startColumnNumber" : 16,
        "endLineNumber" : 66,
        "endColumnNumber" : 131
      },
      "nodeContext" : "Fx.ripple.at((tile.worldx() + source.worldx()) / 2f,(tile.worldy() + source.worldy()) / 2f,1f,p.liquid().color);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 32,
      "astHeight" : 7
    },
    "tokenLength" : 5,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 37,
    "startColumnNumber" : 52,
    "endLineNumber" : 37,
    "endColumnNumber" : 85
  }, {
    "charLength" : 33,
    "startLineNumber" : 42,
    "startColumnNumber" : 69,
    "endLineNumber" : 42,
    "endColumnNumber" : 102
  }, {
    "charLength" : 33,
    "startLineNumber" : 59,
    "startColumnNumber" : 63,
    "endLineNumber" : 59,
    "endColumnNumber" : 96
  }, {
    "charLength" : 33,
    "startLineNumber" : 66,
    "startColumnNumber" : 69,
    "endLineNumber" : 66,
    "endColumnNumber" : 102
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 7
  } ]
}