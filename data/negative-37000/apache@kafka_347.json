{
  "id" : 347,
  "expression" : "ByteBuffer.wrap(data)",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/main/java/org/apache/kafka/streams/kstream/internals/ChangedDeserializer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ByteBuffer.wrap(data)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 54,
      "startColumnNumber" : 12,
      "endLineNumber" : 54,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 54,
        "startColumnNumber" : 12,
        "endLineNumber" : 54,
        "endColumnNumber" : 65
      },
      "nodeContext" : "ByteBuffer.wrap(data).get(data.length - NEWFLAG_SIZE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 54,
        "startColumnNumber" : 12,
        "endLineNumber" : 54,
        "endColumnNumber" : 70
      },
      "nodeContext" : "ByteBuffer.wrap(data).get(data.length - NEWFLAG_SIZE) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 254,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (ByteBuffer.wrap(data).get(data.length - NEWFLAG_SIZE) != 0) {\n  return new Change<>(inner.deserialize(topic,headers,bytes),null);\n}\n else {\n  return new Change<>(null,inner.deserialize(topic,headers,bytes));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 399,
        "startLineNumber" : 48,
        "startColumnNumber" : 95,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final byte[] bytes=new byte[data.length - NEWFLAG_SIZE];\n  System.arraycopy(data,0,bytes,0,bytes.length);\n  if (ByteBuffer.wrap(data).get(data.length - NEWFLAG_SIZE) != 0) {\n    return new Change<>(inner.deserialize(topic,headers,bytes),null);\n  }\n else {\n    return new Change<>(null,inner.deserialize(topic,headers,bytes));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 504,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Change<T> deserialize(final String topic,final Headers headers,final byte[] data){\n  final byte[] bytes=new byte[data.length - NEWFLAG_SIZE];\n  System.arraycopy(data,0,bytes,0,bytes.length);\n  if (ByteBuffer.wrap(data).get(data.length - NEWFLAG_SIZE) != 0) {\n    return new Change<>(inner.deserialize(topic,headers,bytes),null);\n  }\n else {\n    return new Change<>(null,inner.deserialize(topic,headers,bytes));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 94,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 54,
        "startColumnNumber" : 12,
        "endLineNumber" : 54,
        "endColumnNumber" : 70
      },
      "nodeContext" : "ByteBuffer.wrap(data).get(data.length - NEWFLAG_SIZE) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.nio.ByteBuffer"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 54,
    "startColumnNumber" : 12,
    "endLineNumber" : 54,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}