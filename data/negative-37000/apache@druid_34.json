{
  "id" : 34,
  "expression" : "new Path(tmpFile.getAbsolutePath())",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/indexing-hadoop/src/test/java/org/apache/druid/indexer/UtilsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Path(tmpFile.getAbsolutePath())",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 88,
      "startColumnNumber" : 14,
      "endLineNumber" : 88,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 49
      },
      "nodeContext" : "tmpPath=new Path(tmpFile.getAbsolutePath())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 50
      },
      "nodeContext" : "tmpPath=new Path(tmpFile.getAbsolutePath());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 584,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  jobConfig=new Configuration();\n  mockJobContext=EasyMock.createMock(JobContext.class);\n  EasyMock.expect(mockJobContext.getConfiguration()).andReturn(jobConfig).anyTimes();\n  EasyMock.replay(mockJobContext);\n  setOfKeys=new HashSet();\n  setOfKeys.addAll(new ArrayList<>(Arrays.asList(\"key1\",\"key2\",\"key3\")));\n  expectedMap=(Map<String,Object>)Maps.asMap(setOfKeys,new CreateValueFromKey());\n  tmpFile=tmpFolder.newFile(TMP_FILE_NAME);\n  tmpPath=new Path(tmpFile.getAbsolutePath());\n  defaultFileSystem=tmpPath.getFileSystem(jobConfig);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 635,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Before public void setUp() throws IOException {\n  jobConfig=new Configuration();\n  mockJobContext=EasyMock.createMock(JobContext.class);\n  EasyMock.expect(mockJobContext.getConfiguration()).andReturn(jobConfig).anyTimes();\n  EasyMock.replay(mockJobContext);\n  setOfKeys=new HashSet();\n  setOfKeys.addAll(new ArrayList<>(Arrays.asList(\"key1\",\"key2\",\"key3\")));\n  expectedMap=(Map<String,Object>)Maps.asMap(setOfKeys,new CreateValueFromKey());\n  tmpFile=tmpFolder.newFile(TMP_FILE_NAME);\n  tmpPath=new Path(tmpFile.getAbsolutePath());\n  defaultFileSystem=tmpPath.getFileSystem(jobConfig);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 102,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 50
      },
      "nodeContext" : "tmpPath=new Path(tmpFile.getAbsolutePath());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "org.apache.druid.indexer.Path"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 88,
    "startColumnNumber" : 14,
    "endLineNumber" : 88,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}