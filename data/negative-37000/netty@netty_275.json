{
  "id" : 275,
  "expression" : "Integer.toString(i)",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/common/src/test/java/io/netty/util/DefaultAttributeMapTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Integer.toString(i)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 96,
      "startColumnNumber" : 43,
      "endLineNumber" : 96,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 96,
        "startColumnNumber" : 22,
        "endLineNumber" : 96,
        "endColumnNumber" : 63
      },
      "nodeContext" : "AttributeKey.valueOf(Integer.toString(i))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 96,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 63
      },
      "nodeContext" : "keys[i]=AttributeKey.valueOf(Integer.toString(i))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 96,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 64
      },
      "nodeContext" : "keys[i]=AttributeKey.valueOf(Integer.toString(i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 95,
        "startColumnNumber" : 37,
        "endLineNumber" : 97,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  keys[i]=AttributeKey.valueOf(Integer.toString(i));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 20; i++) {\n  keys[i]=AttributeKey.valueOf(Integer.toString(i));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 873,
        "startLineNumber" : 93,
        "startColumnNumber" : 37,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  AttributeKey<Integer>[] keys=new AttributeKey[20];\n  for (int i=0; i < 20; i++) {\n    keys[i]=AttributeKey.valueOf(Integer.toString(i));\n  }\n  for (int i=10; i < 20; i++) {\n    map.attr(keys[i]);\n  }\n  for (int i=0; i < 10; i++) {\n    map.attr(keys[i]);\n  }\n  for (int i=10; i < 20; i++) {\n    AttributeKey<Integer> key=AttributeKey.valueOf(Integer.toString(i));\n    assertTrue(map.hasAttr(key));\n    map.attr(key).remove();\n    assertFalse(map.hasAttr(key));\n  }\n  for (int i=0; i < 10; i++) {\n    AttributeKey<Integer> key=AttributeKey.valueOf(Integer.toString(i));\n    assertTrue(map.hasAttr(key));\n    map.attr(key).remove();\n    assertFalse(map.hasAttr(key));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 175,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 917,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testHasAttrRemoved(){\n  AttributeKey<Integer>[] keys=new AttributeKey[20];\n  for (int i=0; i < 20; i++) {\n    keys[i]=AttributeKey.valueOf(Integer.toString(i));\n  }\n  for (int i=10; i < 20; i++) {\n    map.attr(keys[i]);\n  }\n  for (int i=0; i < 10; i++) {\n    map.attr(keys[i]);\n  }\n  for (int i=10; i < 20; i++) {\n    AttributeKey<Integer> key=AttributeKey.valueOf(Integer.toString(i));\n    assertTrue(map.hasAttr(key));\n    map.attr(key).remove();\n    assertFalse(map.hasAttr(key));\n  }\n  for (int i=0; i < 10; i++) {\n    AttributeKey<Integer> key=AttributeKey.valueOf(Integer.toString(i));\n    assertTrue(map.hasAttr(key));\n    map.attr(key).remove();\n    assertFalse(map.hasAttr(key));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 181,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 96,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 64
      },
      "nodeContext" : "keys[i]=AttributeKey.valueOf(Integer.toString(i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "Integer.toString(i)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 105,
      "startColumnNumber" : 61,
      "endLineNumber" : 105,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 105,
        "startColumnNumber" : 40,
        "endLineNumber" : 105,
        "endColumnNumber" : 81
      },
      "nodeContext" : "AttributeKey.valueOf(Integer.toString(i))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 105,
        "startColumnNumber" : 34,
        "endLineNumber" : 105,
        "endColumnNumber" : 81
      },
      "nodeContext" : "key=AttributeKey.valueOf(Integer.toString(i))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 105,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 82
      },
      "nodeContext" : "AttributeKey<Integer> key=AttributeKey.valueOf(Integer.toString(i));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 220,
        "startLineNumber" : 104,
        "startColumnNumber" : 38,
        "endLineNumber" : 109,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  AttributeKey<Integer> key=AttributeKey.valueOf(Integer.toString(i));\n  assertTrue(map.hasAttr(key));\n  map.attr(key).remove();\n  assertFalse(map.hasAttr(key));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 250,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 109,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=10; i < 20; i++) {\n  AttributeKey<Integer> key=AttributeKey.valueOf(Integer.toString(i));\n  assertTrue(map.hasAttr(key));\n  map.attr(key).remove();\n  assertFalse(map.hasAttr(key));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 48,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 873,
        "startLineNumber" : 93,
        "startColumnNumber" : 37,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  AttributeKey<Integer>[] keys=new AttributeKey[20];\n  for (int i=0; i < 20; i++) {\n    keys[i]=AttributeKey.valueOf(Integer.toString(i));\n  }\n  for (int i=10; i < 20; i++) {\n    map.attr(keys[i]);\n  }\n  for (int i=0; i < 10; i++) {\n    map.attr(keys[i]);\n  }\n  for (int i=10; i < 20; i++) {\n    AttributeKey<Integer> key=AttributeKey.valueOf(Integer.toString(i));\n    assertTrue(map.hasAttr(key));\n    map.attr(key).remove();\n    assertFalse(map.hasAttr(key));\n  }\n  for (int i=0; i < 10; i++) {\n    AttributeKey<Integer> key=AttributeKey.valueOf(Integer.toString(i));\n    assertTrue(map.hasAttr(key));\n    map.attr(key).remove();\n    assertFalse(map.hasAttr(key));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 175,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 917,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testHasAttrRemoved(){\n  AttributeKey<Integer>[] keys=new AttributeKey[20];\n  for (int i=0; i < 20; i++) {\n    keys[i]=AttributeKey.valueOf(Integer.toString(i));\n  }\n  for (int i=10; i < 20; i++) {\n    map.attr(keys[i]);\n  }\n  for (int i=0; i < 10; i++) {\n    map.attr(keys[i]);\n  }\n  for (int i=10; i < 20; i++) {\n    AttributeKey<Integer> key=AttributeKey.valueOf(Integer.toString(i));\n    assertTrue(map.hasAttr(key));\n    map.attr(key).remove();\n    assertFalse(map.hasAttr(key));\n  }\n  for (int i=0; i < 10; i++) {\n    AttributeKey<Integer> key=AttributeKey.valueOf(Integer.toString(i));\n    assertTrue(map.hasAttr(key));\n    map.attr(key).remove();\n    assertFalse(map.hasAttr(key));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 181,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 105,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 82
      },
      "nodeContext" : "AttributeKey<Integer> key=AttributeKey.valueOf(Integer.toString(i));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "Integer.toString(i)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 111,
      "startColumnNumber" : 61,
      "endLineNumber" : 111,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 111,
        "startColumnNumber" : 40,
        "endLineNumber" : 111,
        "endColumnNumber" : 81
      },
      "nodeContext" : "AttributeKey.valueOf(Integer.toString(i))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 111,
        "startColumnNumber" : 34,
        "endLineNumber" : 111,
        "endColumnNumber" : 81
      },
      "nodeContext" : "key=AttributeKey.valueOf(Integer.toString(i))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 111,
        "startColumnNumber" : 12,
        "endLineNumber" : 111,
        "endColumnNumber" : 82
      },
      "nodeContext" : "AttributeKey<Integer> key=AttributeKey.valueOf(Integer.toString(i));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 220,
        "startLineNumber" : 110,
        "startColumnNumber" : 37,
        "endLineNumber" : 115,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  AttributeKey<Integer> key=AttributeKey.valueOf(Integer.toString(i));\n  assertTrue(map.hasAttr(key));\n  map.attr(key).remove();\n  assertFalse(map.hasAttr(key));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 110,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 10; i++) {\n  AttributeKey<Integer> key=AttributeKey.valueOf(Integer.toString(i));\n  assertTrue(map.hasAttr(key));\n  map.attr(key).remove();\n  assertFalse(map.hasAttr(key));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 48,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 873,
        "startLineNumber" : 93,
        "startColumnNumber" : 37,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  AttributeKey<Integer>[] keys=new AttributeKey[20];\n  for (int i=0; i < 20; i++) {\n    keys[i]=AttributeKey.valueOf(Integer.toString(i));\n  }\n  for (int i=10; i < 20; i++) {\n    map.attr(keys[i]);\n  }\n  for (int i=0; i < 10; i++) {\n    map.attr(keys[i]);\n  }\n  for (int i=10; i < 20; i++) {\n    AttributeKey<Integer> key=AttributeKey.valueOf(Integer.toString(i));\n    assertTrue(map.hasAttr(key));\n    map.attr(key).remove();\n    assertFalse(map.hasAttr(key));\n  }\n  for (int i=0; i < 10; i++) {\n    AttributeKey<Integer> key=AttributeKey.valueOf(Integer.toString(i));\n    assertTrue(map.hasAttr(key));\n    map.attr(key).remove();\n    assertFalse(map.hasAttr(key));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 175,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 917,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testHasAttrRemoved(){\n  AttributeKey<Integer>[] keys=new AttributeKey[20];\n  for (int i=0; i < 20; i++) {\n    keys[i]=AttributeKey.valueOf(Integer.toString(i));\n  }\n  for (int i=10; i < 20; i++) {\n    map.attr(keys[i]);\n  }\n  for (int i=0; i < 10; i++) {\n    map.attr(keys[i]);\n  }\n  for (int i=10; i < 20; i++) {\n    AttributeKey<Integer> key=AttributeKey.valueOf(Integer.toString(i));\n    assertTrue(map.hasAttr(key));\n    map.attr(key).remove();\n    assertFalse(map.hasAttr(key));\n  }\n  for (int i=0; i < 10; i++) {\n    AttributeKey<Integer> key=AttributeKey.valueOf(Integer.toString(i));\n    assertTrue(map.hasAttr(key));\n    map.attr(key).remove();\n    assertFalse(map.hasAttr(key));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 181,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 111,
        "startColumnNumber" : 12,
        "endLineNumber" : 111,
        "endColumnNumber" : 82
      },
      "nodeContext" : "AttributeKey<Integer> key=AttributeKey.valueOf(Integer.toString(i));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 96,
    "startColumnNumber" : 43,
    "endLineNumber" : 96,
    "endColumnNumber" : 62
  }, {
    "charLength" : 19,
    "startLineNumber" : 105,
    "startColumnNumber" : 61,
    "endLineNumber" : 105,
    "endColumnNumber" : 80
  }, {
    "charLength" : 19,
    "startLineNumber" : 111,
    "startColumnNumber" : 61,
    "endLineNumber" : 111,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  } ]
}