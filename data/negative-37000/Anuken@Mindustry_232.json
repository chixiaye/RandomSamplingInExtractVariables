{
  "id" : 232,
  "expression" : "stack.item",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/world/blocks/units/UnitFactory.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "stack.item",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 59,
      "startColumnNumber" : 27,
      "endLineNumber" : 59,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,index]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 59,
        "startColumnNumber" : 27,
        "endLineNumber" : 59,
        "endColumnNumber" : 40
      },
      "nodeContext" : "stack.item.id",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 59,
        "startColumnNumber" : 16,
        "endLineNumber" : 59,
        "endColumnNumber" : 41
      },
      "nodeContext" : "capacities[stack.item.id]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 59,
        "startColumnNumber" : 16,
        "endLineNumber" : 59,
        "endColumnNumber" : 97
      },
      "nodeContext" : "capacities[stack.item.id]=Math.max(capacities[stack.item.id],stack.amount * 2)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 59,
        "startColumnNumber" : 16,
        "endLineNumber" : 59,
        "endColumnNumber" : 98
      },
      "nodeContext" : "capacities[stack.item.id]=Math.max(capacities[stack.item.id],stack.amount * 2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 187,
        "startLineNumber" : 58,
        "startColumnNumber" : 52,
        "endLineNumber" : 61,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  capacities[stack.item.id]=Math.max(capacities[stack.item.id],stack.amount * 2);\n  itemCapacity=Math.max(itemCapacity,stack.amount * 2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 227,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (ItemStack stack : plan.requirements) {\n  capacities[stack.item.id]=Math.max(capacities[stack.item.id],stack.amount * 2);\n  itemCapacity=Math.max(itemCapacity,stack.amount * 2);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 45,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 251,
        "startLineNumber" : 57,
        "startColumnNumber" : 34,
        "endLineNumber" : 62,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  ItemStack stack : plan.requirements) {\n    capacities[stack.item.id]=Math.max(capacities[stack.item.id],stack.amount * 2);\n    itemCapacity=Math.max(itemCapacity,stack.amount * 2);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 277,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (UnitPlan plan : plans) {\n  for (  ItemStack stack : plan.requirements) {\n    capacities[stack.item.id]=Math.max(capacities[stack.item.id],stack.amount * 2);\n    itemCapacity=Math.max(itemCapacity,stack.amount * 2);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 52,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 373,
        "startLineNumber" : 55,
        "startColumnNumber" : 22,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  capacities=new int[Vars.content.items().size];\n  for (  UnitPlan plan : plans) {\n    for (    ItemStack stack : plan.requirements) {\n      capacities[stack.item.id]=Math.max(capacities[stack.item.id],stack.amount * 2);\n      itemCapacity=Math.max(itemCapacity,stack.amount * 2);\n    }\n  }\n  super.init();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 405,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void init(){\n  capacities=new int[Vars.content.items().size];\n  for (  UnitPlan plan : plans) {\n    for (    ItemStack stack : plan.requirements) {\n      capacities[stack.item.id]=Math.max(capacities[stack.item.id],stack.amount * 2);\n      itemCapacity=Math.max(itemCapacity,stack.amount * 2);\n    }\n  }\n  super.init();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 76,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 59,
        "startColumnNumber" : 16,
        "endLineNumber" : 59,
        "endColumnNumber" : 98
      },
      "nodeContext" : "capacities[stack.item.id]=Math.max(capacities[stack.item.id],stack.amount * 2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "mindustry.ctype.Content"
  }, {
    "nodeContext" : "stack.item",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 59,
      "startColumnNumber" : 64,
      "endLineNumber" : 59,
      "endColumnNumber" : 74
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,index]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 59,
        "startColumnNumber" : 64,
        "endLineNumber" : 59,
        "endColumnNumber" : 77
      },
      "nodeContext" : "stack.item.id",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 59,
        "startColumnNumber" : 53,
        "endLineNumber" : 59,
        "endColumnNumber" : 78
      },
      "nodeContext" : "capacities[stack.item.id]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 59,
        "startColumnNumber" : 44,
        "endLineNumber" : 59,
        "endColumnNumber" : 97
      },
      "nodeContext" : "Math.max(capacities[stack.item.id],stack.amount * 2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 59,
        "startColumnNumber" : 16,
        "endLineNumber" : 59,
        "endColumnNumber" : 97
      },
      "nodeContext" : "capacities[stack.item.id]=Math.max(capacities[stack.item.id],stack.amount * 2)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 59,
        "startColumnNumber" : 16,
        "endLineNumber" : 59,
        "endColumnNumber" : 98
      },
      "nodeContext" : "capacities[stack.item.id]=Math.max(capacities[stack.item.id],stack.amount * 2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 187,
        "startLineNumber" : 58,
        "startColumnNumber" : 52,
        "endLineNumber" : 61,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  capacities[stack.item.id]=Math.max(capacities[stack.item.id],stack.amount * 2);\n  itemCapacity=Math.max(itemCapacity,stack.amount * 2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 227,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (ItemStack stack : plan.requirements) {\n  capacities[stack.item.id]=Math.max(capacities[stack.item.id],stack.amount * 2);\n  itemCapacity=Math.max(itemCapacity,stack.amount * 2);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 45,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 251,
        "startLineNumber" : 57,
        "startColumnNumber" : 34,
        "endLineNumber" : 62,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  ItemStack stack : plan.requirements) {\n    capacities[stack.item.id]=Math.max(capacities[stack.item.id],stack.amount * 2);\n    itemCapacity=Math.max(itemCapacity,stack.amount * 2);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 277,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (UnitPlan plan : plans) {\n  for (  ItemStack stack : plan.requirements) {\n    capacities[stack.item.id]=Math.max(capacities[stack.item.id],stack.amount * 2);\n    itemCapacity=Math.max(itemCapacity,stack.amount * 2);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 52,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 373,
        "startLineNumber" : 55,
        "startColumnNumber" : 22,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  capacities=new int[Vars.content.items().size];\n  for (  UnitPlan plan : plans) {\n    for (    ItemStack stack : plan.requirements) {\n      capacities[stack.item.id]=Math.max(capacities[stack.item.id],stack.amount * 2);\n      itemCapacity=Math.max(itemCapacity,stack.amount * 2);\n    }\n  }\n  super.init();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 405,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void init(){\n  capacities=new int[Vars.content.items().size];\n  for (  UnitPlan plan : plans) {\n    for (    ItemStack stack : plan.requirements) {\n      capacities[stack.item.id]=Math.max(capacities[stack.item.id],stack.amount * 2);\n      itemCapacity=Math.max(itemCapacity,stack.amount * 2);\n    }\n  }\n  super.init();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 76,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 59,
        "startColumnNumber" : 16,
        "endLineNumber" : 59,
        "endColumnNumber" : 98
      },
      "nodeContext" : "capacities[stack.item.id]=Math.max(capacities[stack.item.id],stack.amount * 2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "mindustry.ctype.Content"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 59,
    "startColumnNumber" : 27,
    "endLineNumber" : 59,
    "endColumnNumber" : 37
  }, {
    "charLength" : 10,
    "startLineNumber" : 59,
    "startColumnNumber" : 64,
    "endLineNumber" : 59,
    "endColumnNumber" : 74
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}