{
  "id" : 232,
  "expression" : "new AddressRangeImpl(getAddr(0),getAddr(0x200))",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Features/Base/src/test.slow/java/ghidra/program/database/util/AddressSetPropertyMapTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new AddressRangeImpl(getAddr(0),getAddr(0x200))",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 48,
      "startLineNumber" : 208,
      "startColumnNumber" : 18,
      "endLineNumber" : 208,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 9,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 208,
        "startColumnNumber" : 5,
        "endLineNumber" : 208,
        "endColumnNumber" : 74
      },
      "nodeContext" : "assertEquals(new AddressRangeImpl(getAddr(0),getAddr(0x200)),range)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 208,
        "startColumnNumber" : 5,
        "endLineNumber" : 208,
        "endColumnNumber" : 75
      },
      "nodeContext" : "assertEquals(new AddressRangeImpl(getAddr(0),getAddr(0x200)),range);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 466,
        "startLineNumber" : 206,
        "startColumnNumber" : 3,
        "endLineNumber" : 220,
        "endColumnNumber" : 4
      },
      "nodeContext" : "switch (count) {\ncase 0:  assertEquals(new AddressRangeImpl(getAddr(0),getAddr(0x200)),range);\nbreak;\ncase 1:assertEquals(new AddressRangeImpl(getAddr(0x205),getAddr(0x1000)),range);\nbreak;\ncase 2:assertEquals(new AddressRangeImpl(getAddr(0x5000),getAddr(0x6001)),range);\nbreak;\ncase 3:assertEquals(new AddressRangeImpl(getAddr(0x01001000),getAddr(0x01005000)),range);\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 66,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 528,
        "startLineNumber" : 204,
        "startColumnNumber" : 25,
        "endLineNumber" : 222,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  AddressRange range=iter.next();\nswitch (count) {\ncase 0:    assertEquals(new AddressRangeImpl(getAddr(0),getAddr(0x200)),range);\n  break;\ncase 1:assertEquals(new AddressRangeImpl(getAddr(0x205),getAddr(0x1000)),range);\nbreak;\ncase 2:assertEquals(new AddressRangeImpl(getAddr(0x5000),getAddr(0x6001)),range);\nbreak;\ncase 3:assertEquals(new AddressRangeImpl(getAddr(0x01001000),getAddr(0x01005000)),range);\nbreak;\n}\n++count;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 78,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 551,
        "startLineNumber" : 204,
        "startColumnNumber" : 2,
        "endLineNumber" : 222,
        "endColumnNumber" : 3
      },
      "nodeContext" : "while (iter.hasNext()) {\n  AddressRange range=iter.next();\nswitch (count) {\ncase 0:    assertEquals(new AddressRangeImpl(getAddr(0),getAddr(0x200)),range);\n  break;\ncase 1:assertEquals(new AddressRangeImpl(getAddr(0x205),getAddr(0x1000)),range);\nbreak;\ncase 2:assertEquals(new AddressRangeImpl(getAddr(0x5000),getAddr(0x6001)),range);\nbreak;\ncase 3:assertEquals(new AddressRangeImpl(getAddr(0x01001000),getAddr(0x01005000)),range);\nbreak;\n}\n++count;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 82,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1027,
        "startLineNumber" : 192,
        "startColumnNumber" : 60,
        "endLineNumber" : 224,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  AddressSet set=new AddressSet();\n  set.addRange(getAddr(0),getAddr(0x200));\n  set.addRange(getAddr(0x205),getAddr(0x1000));\n  set.addRange(getAddr(0x5000),getAddr(0x6001));\n  set.addRange(getAddr(0x01001000),getAddr(0x01005000));\n  AddressSetPropertyMap pm=program.createAddressSetPropertyMap(\"MyMap\");\n  pm.add(set);\n  AddressRangeIterator iter=pm.getAddressRanges();\n  assertTrue(iter.hasNext());\n  int count=0;\n  while (iter.hasNext()) {\n    AddressRange range=iter.next();\nswitch (count) {\ncase 0:      assertEquals(new AddressRangeImpl(getAddr(0),getAddr(0x200)),range);\n    break;\ncase 1:  assertEquals(new AddressRangeImpl(getAddr(0x205),getAddr(0x1000)),range);\nbreak;\ncase 2:assertEquals(new AddressRangeImpl(getAddr(0x5000),getAddr(0x6001)),range);\nbreak;\ncase 3:assertEquals(new AddressRangeImpl(getAddr(0x01001000),getAddr(0x01005000)),range);\nbreak;\n}\n++count;\n}\nassertEquals(4,count);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 169,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1094,
        "startLineNumber" : 191,
        "startColumnNumber" : 0,
        "endLineNumber" : 224,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testAddressRangeIterator() throws Exception {\n  AddressSet set=new AddressSet();\n  set.addRange(getAddr(0),getAddr(0x200));\n  set.addRange(getAddr(0x205),getAddr(0x1000));\n  set.addRange(getAddr(0x5000),getAddr(0x6001));\n  set.addRange(getAddr(0x01001000),getAddr(0x01005000));\n  AddressSetPropertyMap pm=program.createAddressSetPropertyMap(\"MyMap\");\n  pm.add(set);\n  AddressRangeIterator iter=pm.getAddressRanges();\n  assertTrue(iter.hasNext());\n  int count=0;\n  while (iter.hasNext()) {\n    AddressRange range=iter.next();\nswitch (count) {\ncase 0:      assertEquals(new AddressRangeImpl(getAddr(0),getAddr(0x200)),range);\n    break;\ncase 1:  assertEquals(new AddressRangeImpl(getAddr(0x205),getAddr(0x1000)),range);\nbreak;\ncase 2:assertEquals(new AddressRangeImpl(getAddr(0x5000),getAddr(0x6001)),range);\nbreak;\ncase 3:assertEquals(new AddressRangeImpl(getAddr(0x01001000),getAddr(0x01005000)),range);\nbreak;\n}\n++count;\n}\nassertEquals(4,count);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 177,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 208,
        "startColumnNumber" : 5,
        "endLineNumber" : 208,
        "endColumnNumber" : 75
      },
      "nodeContext" : "assertEquals(new AddressRangeImpl(getAddr(0),getAddr(0x200)),range);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "ghidra.program.model.address.AddressRangeImpl"
  } ],
  "positionList" : [ {
    "charLength" : 48,
    "startLineNumber" : 208,
    "startColumnNumber" : 18,
    "endLineNumber" : 208,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ ]
}