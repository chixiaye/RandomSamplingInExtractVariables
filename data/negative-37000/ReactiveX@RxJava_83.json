{
  "id" : 83,
  "expression" : "BackpressureHelper.multiplyCap(1L << 32,1L << 32)",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/BackpressureHelperTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "BackpressureHelper.multiplyCap(1L << 32,1L << 32)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 50,
      "startLineNumber" : 37,
      "startColumnNumber" : 37,
      "endLineNumber" : 37,
      "endColumnNumber" : 87
    },
    "astNodeNumber" : 9,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 88
      },
      "nodeContext" : "assertEquals(Long.MAX_VALUE,BackpressureHelper.multiplyCap(1L << 32,1L << 32))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 89
      },
      "nodeContext" : "assertEquals(Long.MAX_VALUE,BackpressureHelper.multiplyCap(1L << 32,1L << 32));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 33,
        "startColumnNumber" : 34,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertEquals(6,BackpressureHelper.multiplyCap(2,3));\n  assertEquals(Long.MAX_VALUE,BackpressureHelper.multiplyCap(2,Long.MAX_VALUE));\n  assertEquals(Long.MAX_VALUE,BackpressureHelper.multiplyCap(Long.MAX_VALUE,Long.MAX_VALUE));\n  assertEquals(Long.MAX_VALUE,BackpressureHelper.multiplyCap(1L << 32,1L << 32));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 399,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMultiplyCap(){\n  assertEquals(6,BackpressureHelper.multiplyCap(2,3));\n  assertEquals(Long.MAX_VALUE,BackpressureHelper.multiplyCap(2,Long.MAX_VALUE));\n  assertEquals(Long.MAX_VALUE,BackpressureHelper.multiplyCap(Long.MAX_VALUE,Long.MAX_VALUE));\n  assertEquals(Long.MAX_VALUE,BackpressureHelper.multiplyCap(1L << 32,1L << 32));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 59,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 89
      },
      "nodeContext" : "assertEquals(Long.MAX_VALUE,BackpressureHelper.multiplyCap(1L << 32,1L << 32));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 8,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 50,
    "startLineNumber" : 37,
    "startColumnNumber" : 37,
    "endLineNumber" : 37,
    "endColumnNumber" : 87
  } ],
  "layoutRelationDataList" : [ ]
}