{
  "id" : 290,
  "expression" : "newFixedThreadPool(NUM_CONCURRENT_CLIENTS)",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/patterns/design-patterns-cloud/src/test/java/com/baeldung/backoff/jitter/BackoffWithJitterTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "newFixedThreadPool(NUM_CONCURRENT_CLIENTS)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 42,
      "startLineNumber" : 76,
      "startColumnNumber" : 36,
      "endLineNumber" : 76,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 76,
        "startColumnNumber" : 24,
        "endLineNumber" : 76,
        "endColumnNumber" : 78
      },
      "nodeContext" : "executors=newFixedThreadPool(NUM_CONCURRENT_CLIENTS)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 79
      },
      "nodeContext" : "ExecutorService executors=newFixedThreadPool(NUM_CONCURRENT_CLIENTS);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 395,
        "startLineNumber" : 74,
        "startColumnNumber" : 79,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Function<String,String> pingPongFn=getRetryablePingPongFn(intervalFn);\n  ExecutorService executors=newFixedThreadPool(NUM_CONCURRENT_CLIENTS);\n  List<Callable<String>> tasks=nCopies(NUM_CONCURRENT_CLIENTS,() -> pingPongFn.apply(\"Hello\"));\n  when(service.call(anyString())).thenThrow(PingPongServiceException.class);\n  executors.invokeAll(tasks);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 470,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void test(IntervalFunction intervalFn) throws InterruptedException {\n  Function<String,String> pingPongFn=getRetryablePingPongFn(intervalFn);\n  ExecutorService executors=newFixedThreadPool(NUM_CONCURRENT_CLIENTS);\n  List<Callable<String>> tasks=nCopies(NUM_CONCURRENT_CLIENTS,() -> pingPongFn.apply(\"Hello\"));\n  when(service.call(anyString())).thenThrow(PingPongServiceException.class);\n  executors.invokeAll(tasks);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 79
      },
      "nodeContext" : "ExecutorService executors=newFixedThreadPool(NUM_CONCURRENT_CLIENTS);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.util.concurrent.ExecutorService"
  } ],
  "positionList" : [ {
    "charLength" : 42,
    "startLineNumber" : 76,
    "startColumnNumber" : 36,
    "endLineNumber" : 76,
    "endColumnNumber" : 78
  } ],
  "layoutRelationDataList" : [ ]
}