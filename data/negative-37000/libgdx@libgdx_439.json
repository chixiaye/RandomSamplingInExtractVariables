{
  "id" : 439,
  "expression" : "indices.length",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/gdx/src/com/badlogic/gdx/graphics/g3d/decals/DecalBatch.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "indices.length",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 102,
      "startColumnNumber" : 22,
      "endLineNumber" : 102,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 102,
        "startColumnNumber" : 18,
        "endLineNumber" : 102,
        "endColumnNumber" : 36
      },
      "nodeContext" : "i < indices.length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 272,
        "startLineNumber" : 102,
        "startColumnNumber" : 2,
        "endLineNumber" : 109,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < indices.length; i+=6, v+=4) {\n  indices[i]=(short)(v);\n  indices[i + 1]=(short)(v + 2);\n  indices[i + 2]=(short)(v + 1);\n  indices[i + 3]=(short)(v + 1);\n  indices[i + 4]=(short)(v + 2);\n  indices[i + 5]=(short)(v + 3);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 92,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 956,
        "startLineNumber" : 88,
        "startColumnNumber" : 35,
        "endLineNumber" : 111,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  vertices=new float[size * Decal.SIZE];\n  Mesh.VertexDataType vertexDataType=Mesh.VertexDataType.VertexArray;\n  if (Gdx.gl30 != null) {\n    vertexDataType=Mesh.VertexDataType.VertexBufferObjectWithVAO;\n  }\n  mesh=new Mesh(vertexDataType,false,size * 4,size * 6,new VertexAttribute(VertexAttributes.Usage.Position,3,ShaderProgram.POSITION_ATTRIBUTE),new VertexAttribute(VertexAttributes.Usage.ColorPacked,4,ShaderProgram.COLOR_ATTRIBUTE),new VertexAttribute(VertexAttributes.Usage.TextureCoordinates,2,ShaderProgram.TEXCOORD_ATTRIBUTE + \"0\"));\n  short[] indices=new short[size * 6];\n  int v=0;\n  for (int i=0; i < indices.length; i+=6, v+=4) {\n    indices[i]=(short)(v);\n    indices[i + 1]=(short)(v + 2);\n    indices[i + 2]=(short)(v + 1);\n    indices[i + 3]=(short)(v + 1);\n    indices[i + 4]=(short)(v + 2);\n    indices[i + 5]=(short)(v + 3);\n  }\n  mesh.setIndices(indices);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 207,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1169,
        "startLineNumber" : 85,
        "startColumnNumber" : 1,
        "endLineNumber" : 111,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Initializes the batch with the given amount of decal objects the buffer is able to hold when full.\n * @param size Maximum size of decal objects to hold in memory \n */\npublic void initialize(int size){\n  vertices=new float[size * Decal.SIZE];\n  Mesh.VertexDataType vertexDataType=Mesh.VertexDataType.VertexArray;\n  if (Gdx.gl30 != null) {\n    vertexDataType=Mesh.VertexDataType.VertexBufferObjectWithVAO;\n  }\n  mesh=new Mesh(vertexDataType,false,size * 4,size * 6,new VertexAttribute(VertexAttributes.Usage.Position,3,ShaderProgram.POSITION_ATTRIBUTE),new VertexAttribute(VertexAttributes.Usage.ColorPacked,4,ShaderProgram.COLOR_ATTRIBUTE),new VertexAttribute(VertexAttributes.Usage.TextureCoordinates,2,ShaderProgram.TEXCOORD_ATTRIBUTE + \"0\"));\n  short[] indices=new short[size * 6];\n  int v=0;\n  for (int i=0; i < indices.length; i+=6, v+=4) {\n    indices[i]=(short)(v);\n    indices[i + 1]=(short)(v + 2);\n    indices[i + 2]=(short)(v + 1);\n    indices[i + 3]=(short)(v + 1);\n    indices[i + 4]=(short)(v + 2);\n    indices[i + 5]=(short)(v + 3);\n  }\n  mesh.setIndices(indices);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 215,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 102,
        "startColumnNumber" : 18,
        "endLineNumber" : 102,
        "endColumnNumber" : 36
      },
      "nodeContext" : "i < indices.length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 102,
    "startColumnNumber" : 22,
    "endLineNumber" : 102,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}