{
  "id" : 260,
  "expression" : "readVisibility",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/main/java/jadx/core/dex/nodes/parser/AnnotationsParser.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "readVisibility",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 94,
      "startColumnNumber" : 6,
      "endLineNumber" : 94,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 94,
        "startColumnNumber" : 2,
        "endLineNumber" : 97,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (readVisibility) {\n  byte v=s.readByte();\n  visibility=VISIBILITIES[v];\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 668,
        "startLineNumber" : 91,
        "startColumnNumber" : 112,
        "endLineNumber" : 111,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  EncValueParser parser=new EncValueParser(dex,s);\n  Visibility visibility=null;\n  if (readVisibility) {\n    byte v=s.readByte();\n    visibility=VISIBILITIES[v];\n  }\n  int typeIndex=s.readUleb128();\n  int size=s.readUleb128();\n  Map<String,Object> values=new LinkedHashMap<>(size);\n  for (int i=0; i < size; i++) {\n    String name=dex.getString(s.readUleb128());\n    values.put(name,parser.parseValue());\n  }\n  ArgType type=dex.getType(typeIndex);\n  Annotation annotation=new Annotation(visibility,type,values);\n  if (!type.isObject()) {\n    throw new DecodeException(\"Incorrect type for annotation: \" + annotation);\n  }\n  return annotation;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 779,
        "startLineNumber" : 91,
        "startColumnNumber" : 1,
        "endLineNumber" : 111,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public static Annotation readAnnotation(DexNode dex,Section s,boolean readVisibility) throws DecodeException {\n  EncValueParser parser=new EncValueParser(dex,s);\n  Visibility visibility=null;\n  if (readVisibility) {\n    byte v=s.readByte();\n    visibility=VISIBILITIES[v];\n  }\n  int typeIndex=s.readUleb128();\n  int size=s.readUleb128();\n  Map<String,Object> values=new LinkedHashMap<>(size);\n  for (int i=0; i < size; i++) {\n    String name=dex.getString(s.readUleb128());\n    values.put(name,parser.parseValue());\n  }\n  ArgType type=dex.getType(typeIndex);\n  Annotation annotation=new Annotation(visibility,type,values);\n  if (!type.isObject()) {\n    throw new DecodeException(\"Incorrect type for annotation: \" + annotation);\n  }\n  return annotation;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 147,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 94,
        "startColumnNumber" : 2,
        "endLineNumber" : 97,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (readVisibility) {\n  byte v=s.readByte();\n  visibility=VISIBILITIES[v];\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 94,
    "startColumnNumber" : 6,
    "endLineNumber" : 94,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ ]
}