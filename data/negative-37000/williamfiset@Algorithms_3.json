{
  "id" : 3,
  "expression" : "0",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/strings/BoothsAlgorithm.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 17,
      "startColumnNumber" : 12,
      "endLineNumber" : 17,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 17,
        "startColumnNumber" : 8,
        "endLineNumber" : 17,
        "endColumnNumber" : 13
      },
      "nodeContext" : "k=0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 17,
        "endColumnNumber" : 14
      },
      "nodeContext" : "int k=0;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 483,
        "startLineNumber" : 13,
        "startColumnNumber" : 50,
        "endLineNumber" : 31,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  s+=s;\n  int[] f=new int[s.length()];\n  java.util.Arrays.fill(f,-1);\n  int k=0;\n  for (int j=1; j < s.length(); j++) {\n    char sj=s.charAt(j);\n    int i=f[j - k - 1];\n    while (i != -1 && sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k + i + 1))       k=j - i - 1;\n      i=f[i];\n    }\n    if (sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k))       k=j;\n      f[j - k]=-1;\n    }\n else     f[j - k]=i + 1;\n  }\n  return k;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 531,
        "startLineNumber" : 13,
        "startColumnNumber" : 2,
        "endLineNumber" : 31,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static int leastCyclicRotation(String s){\n  s+=s;\n  int[] f=new int[s.length()];\n  java.util.Arrays.fill(f,-1);\n  int k=0;\n  for (int j=1; j < s.length(); j++) {\n    char sj=s.charAt(j);\n    int i=f[j - k - 1];\n    while (i != -1 && sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k + i + 1))       k=j - i - 1;\n      i=f[i];\n    }\n    if (sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k))       k=j;\n      f[j - k]=-1;\n    }\n else     f[j - k]=i + 1;\n  }\n  return k;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 157,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 17,
        "endColumnNumber" : 14
      },
      "nodeContext" : "int k=0;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 17,
    "startColumnNumber" : 12,
    "endLineNumber" : 17,
    "endColumnNumber" : 13
  } ],
  "layoutRelationDataList" : [ ]
}