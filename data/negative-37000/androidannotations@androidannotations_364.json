{
  "id" : 364,
  "expression" : "tokens.remove(0)",
  "projectName" : "androidannotations@androidannotations",
  "commitID" : "b60a7ff27cb1bcb0eac2710c15c4957c0d992e27",
  "filePath" : "/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/CaseHelper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "tokens.remove(0)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 49,
      "startColumnNumber" : 40,
      "endLineNumber" : 49,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 49,
        "startColumnNumber" : 22,
        "endLineNumber" : 49,
        "endColumnNumber" : 57
      },
      "nodeContext" : "new StringBuilder(tokens.remove(0))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 49,
        "startColumnNumber" : 17,
        "endLineNumber" : 49,
        "endColumnNumber" : 57
      },
      "nodeContext" : "sb=new StringBuilder(tokens.remove(0))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 49,
        "startColumnNumber" : 3,
        "endLineNumber" : 49,
        "endColumnNumber" : 58
      },
      "nodeContext" : "StringBuilder sb=new StringBuilder(tokens.remove(0));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 48,
        "startColumnNumber" : 25,
        "endLineNumber" : 54,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  StringBuilder sb=new StringBuilder(tokens.remove(0));\n  for (  String s : tokens) {\n    sb.append(\"_\").append(s);\n  }\n  return sb.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 208,
        "startLineNumber" : 48,
        "startColumnNumber" : 2,
        "endLineNumber" : 56,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (tokens.size() > 0) {\n  StringBuilder sb=new StringBuilder(tokens.remove(0));\n  for (  String s : tokens) {\n    sb.append(\"_\").append(s);\n  }\n  return sb.toString();\n}\n else {\n  return camelCase;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 707,
        "startLineNumber" : 27,
        "startColumnNumber" : 61,
        "endLineNumber" : 57,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  List<String> tokens=new ArrayList<String>();\n  Matcher matcher=pattern.matcher(camelCase);\n  String acronym=\"\";\n  while (matcher.find()) {\n    String found=matcher.group();\n    if (found.matches(\"^[A-Z]$\")) {\n      acronym+=found;\n    }\n else {\n      if (acronym.length() > 0) {\n        tokens.add(acronym);\n        acronym=\"\";\n      }\n      tokens.add(found.toLowerCase());\n    }\n  }\n  if (acronym.length() > 0) {\n    tokens.add(acronym);\n  }\n  if (tokens.size() > 0) {\n    StringBuilder sb=new StringBuilder(tokens.remove(0));\n    for (    String s : tokens) {\n      sb.append(\"_\").append(s);\n    }\n    return sb.toString();\n  }\n else {\n    return camelCase;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 767,
        "startLineNumber" : 27,
        "startColumnNumber" : 1,
        "endLineNumber" : 57,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public static String camelCaseToSnakeCase(String camelCase){\n  List<String> tokens=new ArrayList<String>();\n  Matcher matcher=pattern.matcher(camelCase);\n  String acronym=\"\";\n  while (matcher.find()) {\n    String found=matcher.group();\n    if (found.matches(\"^[A-Z]$\")) {\n      acronym+=found;\n    }\n else {\n      if (acronym.length() > 0) {\n        tokens.add(acronym);\n        acronym=\"\";\n      }\n      tokens.add(found.toLowerCase());\n    }\n  }\n  if (acronym.length() > 0) {\n    tokens.add(acronym);\n  }\n  if (tokens.size() > 0) {\n    StringBuilder sb=new StringBuilder(tokens.remove(0));\n    for (    String s : tokens) {\n      sb.append(\"_\").append(s);\n    }\n    return sb.toString();\n  }\n else {\n    return camelCase;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 49,
        "startColumnNumber" : 3,
        "endLineNumber" : 49,
        "endColumnNumber" : 58
      },
      "nodeContext" : "StringBuilder sb=new StringBuilder(tokens.remove(0));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 49,
    "startColumnNumber" : 40,
    "endLineNumber" : 49,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}