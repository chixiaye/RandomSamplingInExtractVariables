{
  "id" : 179,
  "expression" : "DNSTaskStarter.DNSTaskStarterImpl",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/arduino-core/src/processing/app/zeroconf/jmdns/ArduinoDNSTaskStarter.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "DNSTaskStarter.DNSTaskStarterImpl",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 14,
      "startColumnNumber" : 10,
      "endLineNumber" : 14,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,type]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 14,
        "startColumnNumber" : 10,
        "endLineNumber" : 14,
        "endColumnNumber" : 43
      },
      "nodeContext" : "DNSTaskStarter.DNSTaskStarterImpl",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 14,
        "startColumnNumber" : 4,
        "endLineNumber" : 14,
        "endColumnNumber" : 104
      },
      "nodeContext" : "final DNSTaskStarter.DNSTaskStarterImpl delegate=new DNSTaskStarter.DNSTaskStarterImpl(jmDNSImpl);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1744,
        "startLineNumber" : 13,
        "startColumnNumber" : 69,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final DNSTaskStarter.DNSTaskStarterImpl delegate=new DNSTaskStarter.DNSTaskStarterImpl(jmDNSImpl);\n  final DNSTaskStarter.DNSTaskStarterImpl.StarterTimer timer=new DNSTaskStarter.DNSTaskStarterImpl.StarterTimer(\"JmDNS(\" + jmDNSImpl.getName() + \").Timer\",true);\n  return new DNSTaskStarter(){\n    public void purgeTimer(){\n      delegate.purgeTimer();\n      timer.purge();\n    }\n    public void purgeStateTimer(){\n      delegate.purgeStateTimer();\n    }\n    public void cancelTimer(){\n      delegate.cancelTimer();\n      timer.cancel();\n    }\n    public void cancelStateTimer(){\n      delegate.cancelStateTimer();\n    }\n    public void startProber(){\n      delegate.startProber();\n    }\n    public void startAnnouncer(){\n      delegate.startAnnouncer();\n    }\n    public void startRenewer(){\n      delegate.startRenewer();\n    }\n    public void startCanceler(){\n      delegate.startCanceler();\n    }\n    public void startReaper(){\n      new RecordReaper(jmDNSImpl){\n        @Override public void start(        Timer timer){\n          if (!this.getDns().isCanceling() && !this.getDns().isCanceled()) {\n            timer.schedule(this,0,500);\n          }\n        }\n      }\n.start(timer);\n    }\n    public void startServiceInfoResolver(    ServiceInfoImpl info){\n      delegate.startServiceInfoResolver(info);\n    }\n    public void startTypeResolver(){\n      delegate.startTypeResolver();\n    }\n    public void startServiceResolver(    String type){\n      delegate.startServiceResolver(type);\n    }\n    public void startResponder(    DNSIncoming in,    int port){\n      delegate.startResponder(in,port);\n    }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 226,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1823,
        "startLineNumber" : 12,
        "startColumnNumber" : 2,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public DNSTaskStarter newDNSTaskStarter(final JmDNSImpl jmDNSImpl){\n  final DNSTaskStarter.DNSTaskStarterImpl delegate=new DNSTaskStarter.DNSTaskStarterImpl(jmDNSImpl);\n  final DNSTaskStarter.DNSTaskStarterImpl.StarterTimer timer=new DNSTaskStarter.DNSTaskStarterImpl.StarterTimer(\"JmDNS(\" + jmDNSImpl.getName() + \").Timer\",true);\n  return new DNSTaskStarter(){\n    public void purgeTimer(){\n      delegate.purgeTimer();\n      timer.purge();\n    }\n    public void purgeStateTimer(){\n      delegate.purgeStateTimer();\n    }\n    public void cancelTimer(){\n      delegate.cancelTimer();\n      timer.cancel();\n    }\n    public void cancelStateTimer(){\n      delegate.cancelStateTimer();\n    }\n    public void startProber(){\n      delegate.startProber();\n    }\n    public void startAnnouncer(){\n      delegate.startAnnouncer();\n    }\n    public void startRenewer(){\n      delegate.startRenewer();\n    }\n    public void startCanceler(){\n      delegate.startCanceler();\n    }\n    public void startReaper(){\n      new RecordReaper(jmDNSImpl){\n        @Override public void start(        Timer timer){\n          if (!this.getDns().isCanceling() && !this.getDns().isCanceled()) {\n            timer.schedule(this,0,500);\n          }\n        }\n      }\n.start(timer);\n    }\n    public void startServiceInfoResolver(    ServiceInfoImpl info){\n      delegate.startServiceInfoResolver(info);\n    }\n    public void startTypeResolver(){\n      delegate.startTypeResolver();\n    }\n    public void startServiceResolver(    String type){\n      delegate.startServiceResolver(type);\n    }\n    public void startResponder(    DNSIncoming in,    int port){\n      delegate.startResponder(in,port);\n    }\n  }\n;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 238,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 14,
        "startColumnNumber" : 4,
        "endLineNumber" : 14,
        "endColumnNumber" : 104
      },
      "nodeContext" : "final DNSTaskStarter.DNSTaskStarterImpl delegate=new DNSTaskStarter.DNSTaskStarterImpl(jmDNSImpl);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "DNSTaskStarter"
  }, {
    "nodeContext" : "DNSTaskStarter.DNSTaskStarterImpl",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 14,
      "startColumnNumber" : 59,
      "endLineNumber" : 14,
      "endColumnNumber" : 92
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,type]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 14,
        "startColumnNumber" : 59,
        "endLineNumber" : 14,
        "endColumnNumber" : 92
      },
      "nodeContext" : "DNSTaskStarter.DNSTaskStarterImpl",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 14,
        "startColumnNumber" : 55,
        "endLineNumber" : 14,
        "endColumnNumber" : 103
      },
      "nodeContext" : "new DNSTaskStarter.DNSTaskStarterImpl(jmDNSImpl)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 14,
        "startColumnNumber" : 44,
        "endLineNumber" : 14,
        "endColumnNumber" : 103
      },
      "nodeContext" : "delegate=new DNSTaskStarter.DNSTaskStarterImpl(jmDNSImpl)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 14,
        "startColumnNumber" : 4,
        "endLineNumber" : 14,
        "endColumnNumber" : 104
      },
      "nodeContext" : "final DNSTaskStarter.DNSTaskStarterImpl delegate=new DNSTaskStarter.DNSTaskStarterImpl(jmDNSImpl);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1744,
        "startLineNumber" : 13,
        "startColumnNumber" : 69,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final DNSTaskStarter.DNSTaskStarterImpl delegate=new DNSTaskStarter.DNSTaskStarterImpl(jmDNSImpl);\n  final DNSTaskStarter.DNSTaskStarterImpl.StarterTimer timer=new DNSTaskStarter.DNSTaskStarterImpl.StarterTimer(\"JmDNS(\" + jmDNSImpl.getName() + \").Timer\",true);\n  return new DNSTaskStarter(){\n    public void purgeTimer(){\n      delegate.purgeTimer();\n      timer.purge();\n    }\n    public void purgeStateTimer(){\n      delegate.purgeStateTimer();\n    }\n    public void cancelTimer(){\n      delegate.cancelTimer();\n      timer.cancel();\n    }\n    public void cancelStateTimer(){\n      delegate.cancelStateTimer();\n    }\n    public void startProber(){\n      delegate.startProber();\n    }\n    public void startAnnouncer(){\n      delegate.startAnnouncer();\n    }\n    public void startRenewer(){\n      delegate.startRenewer();\n    }\n    public void startCanceler(){\n      delegate.startCanceler();\n    }\n    public void startReaper(){\n      new RecordReaper(jmDNSImpl){\n        @Override public void start(        Timer timer){\n          if (!this.getDns().isCanceling() && !this.getDns().isCanceled()) {\n            timer.schedule(this,0,500);\n          }\n        }\n      }\n.start(timer);\n    }\n    public void startServiceInfoResolver(    ServiceInfoImpl info){\n      delegate.startServiceInfoResolver(info);\n    }\n    public void startTypeResolver(){\n      delegate.startTypeResolver();\n    }\n    public void startServiceResolver(    String type){\n      delegate.startServiceResolver(type);\n    }\n    public void startResponder(    DNSIncoming in,    int port){\n      delegate.startResponder(in,port);\n    }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 226,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1823,
        "startLineNumber" : 12,
        "startColumnNumber" : 2,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public DNSTaskStarter newDNSTaskStarter(final JmDNSImpl jmDNSImpl){\n  final DNSTaskStarter.DNSTaskStarterImpl delegate=new DNSTaskStarter.DNSTaskStarterImpl(jmDNSImpl);\n  final DNSTaskStarter.DNSTaskStarterImpl.StarterTimer timer=new DNSTaskStarter.DNSTaskStarterImpl.StarterTimer(\"JmDNS(\" + jmDNSImpl.getName() + \").Timer\",true);\n  return new DNSTaskStarter(){\n    public void purgeTimer(){\n      delegate.purgeTimer();\n      timer.purge();\n    }\n    public void purgeStateTimer(){\n      delegate.purgeStateTimer();\n    }\n    public void cancelTimer(){\n      delegate.cancelTimer();\n      timer.cancel();\n    }\n    public void cancelStateTimer(){\n      delegate.cancelStateTimer();\n    }\n    public void startProber(){\n      delegate.startProber();\n    }\n    public void startAnnouncer(){\n      delegate.startAnnouncer();\n    }\n    public void startRenewer(){\n      delegate.startRenewer();\n    }\n    public void startCanceler(){\n      delegate.startCanceler();\n    }\n    public void startReaper(){\n      new RecordReaper(jmDNSImpl){\n        @Override public void start(        Timer timer){\n          if (!this.getDns().isCanceling() && !this.getDns().isCanceled()) {\n            timer.schedule(this,0,500);\n          }\n        }\n      }\n.start(timer);\n    }\n    public void startServiceInfoResolver(    ServiceInfoImpl info){\n      delegate.startServiceInfoResolver(info);\n    }\n    public void startTypeResolver(){\n      delegate.startTypeResolver();\n    }\n    public void startServiceResolver(    String type){\n      delegate.startServiceResolver(type);\n    }\n    public void startResponder(    DNSIncoming in,    int port){\n      delegate.startResponder(in,port);\n    }\n  }\n;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 238,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 14,
        "startColumnNumber" : 4,
        "endLineNumber" : 14,
        "endColumnNumber" : 104
      },
      "nodeContext" : "final DNSTaskStarter.DNSTaskStarterImpl delegate=new DNSTaskStarter.DNSTaskStarterImpl(jmDNSImpl);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "DNSTaskStarter"
  }, {
    "nodeContext" : "DNSTaskStarter.DNSTaskStarterImpl",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 15,
      "startColumnNumber" : 10,
      "endLineNumber" : 15,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SimpleType,name]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 15,
        "startColumnNumber" : 10,
        "endLineNumber" : 15,
        "endColumnNumber" : 56
      },
      "nodeContext" : "DNSTaskStarter.DNSTaskStarterImpl.StarterTimer",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,type]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 15,
        "startColumnNumber" : 10,
        "endLineNumber" : 15,
        "endColumnNumber" : 56
      },
      "nodeContext" : "DNSTaskStarter.DNSTaskStarterImpl.StarterTimer",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 15,
        "endColumnNumber" : 166
      },
      "nodeContext" : "final DNSTaskStarter.DNSTaskStarterImpl.StarterTimer timer=new DNSTaskStarter.DNSTaskStarterImpl.StarterTimer(\"JmDNS(\" + jmDNSImpl.getName() + \").Timer\",true);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1744,
        "startLineNumber" : 13,
        "startColumnNumber" : 69,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final DNSTaskStarter.DNSTaskStarterImpl delegate=new DNSTaskStarter.DNSTaskStarterImpl(jmDNSImpl);\n  final DNSTaskStarter.DNSTaskStarterImpl.StarterTimer timer=new DNSTaskStarter.DNSTaskStarterImpl.StarterTimer(\"JmDNS(\" + jmDNSImpl.getName() + \").Timer\",true);\n  return new DNSTaskStarter(){\n    public void purgeTimer(){\n      delegate.purgeTimer();\n      timer.purge();\n    }\n    public void purgeStateTimer(){\n      delegate.purgeStateTimer();\n    }\n    public void cancelTimer(){\n      delegate.cancelTimer();\n      timer.cancel();\n    }\n    public void cancelStateTimer(){\n      delegate.cancelStateTimer();\n    }\n    public void startProber(){\n      delegate.startProber();\n    }\n    public void startAnnouncer(){\n      delegate.startAnnouncer();\n    }\n    public void startRenewer(){\n      delegate.startRenewer();\n    }\n    public void startCanceler(){\n      delegate.startCanceler();\n    }\n    public void startReaper(){\n      new RecordReaper(jmDNSImpl){\n        @Override public void start(        Timer timer){\n          if (!this.getDns().isCanceling() && !this.getDns().isCanceled()) {\n            timer.schedule(this,0,500);\n          }\n        }\n      }\n.start(timer);\n    }\n    public void startServiceInfoResolver(    ServiceInfoImpl info){\n      delegate.startServiceInfoResolver(info);\n    }\n    public void startTypeResolver(){\n      delegate.startTypeResolver();\n    }\n    public void startServiceResolver(    String type){\n      delegate.startServiceResolver(type);\n    }\n    public void startResponder(    DNSIncoming in,    int port){\n      delegate.startResponder(in,port);\n    }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 226,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1823,
        "startLineNumber" : 12,
        "startColumnNumber" : 2,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public DNSTaskStarter newDNSTaskStarter(final JmDNSImpl jmDNSImpl){\n  final DNSTaskStarter.DNSTaskStarterImpl delegate=new DNSTaskStarter.DNSTaskStarterImpl(jmDNSImpl);\n  final DNSTaskStarter.DNSTaskStarterImpl.StarterTimer timer=new DNSTaskStarter.DNSTaskStarterImpl.StarterTimer(\"JmDNS(\" + jmDNSImpl.getName() + \").Timer\",true);\n  return new DNSTaskStarter(){\n    public void purgeTimer(){\n      delegate.purgeTimer();\n      timer.purge();\n    }\n    public void purgeStateTimer(){\n      delegate.purgeStateTimer();\n    }\n    public void cancelTimer(){\n      delegate.cancelTimer();\n      timer.cancel();\n    }\n    public void cancelStateTimer(){\n      delegate.cancelStateTimer();\n    }\n    public void startProber(){\n      delegate.startProber();\n    }\n    public void startAnnouncer(){\n      delegate.startAnnouncer();\n    }\n    public void startRenewer(){\n      delegate.startRenewer();\n    }\n    public void startCanceler(){\n      delegate.startCanceler();\n    }\n    public void startReaper(){\n      new RecordReaper(jmDNSImpl){\n        @Override public void start(        Timer timer){\n          if (!this.getDns().isCanceling() && !this.getDns().isCanceled()) {\n            timer.schedule(this,0,500);\n          }\n        }\n      }\n.start(timer);\n    }\n    public void startServiceInfoResolver(    ServiceInfoImpl info){\n      delegate.startServiceInfoResolver(info);\n    }\n    public void startTypeResolver(){\n      delegate.startTypeResolver();\n    }\n    public void startServiceResolver(    String type){\n      delegate.startServiceResolver(type);\n    }\n    public void startResponder(    DNSIncoming in,    int port){\n      delegate.startResponder(in,port);\n    }\n  }\n;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 238,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 15,
        "endColumnNumber" : 166
      },
      "nodeContext" : "final DNSTaskStarter.DNSTaskStarterImpl.StarterTimer timer=new DNSTaskStarter.DNSTaskStarterImpl.StarterTimer(\"JmDNS(\" + jmDNSImpl.getName() + \").Timer\",true);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "DNSTaskStarter"
  }, {
    "nodeContext" : "DNSTaskStarter.DNSTaskStarterImpl",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 15,
      "startColumnNumber" : 69,
      "endLineNumber" : 15,
      "endColumnNumber" : 102
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SimpleType,name]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 15,
        "startColumnNumber" : 69,
        "endLineNumber" : 15,
        "endColumnNumber" : 115
      },
      "nodeContext" : "DNSTaskStarter.DNSTaskStarterImpl.StarterTimer",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,type]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 15,
        "startColumnNumber" : 69,
        "endLineNumber" : 15,
        "endColumnNumber" : 115
      },
      "nodeContext" : "DNSTaskStarter.DNSTaskStarterImpl.StarterTimer",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 15,
        "startColumnNumber" : 65,
        "endLineNumber" : 15,
        "endColumnNumber" : 165
      },
      "nodeContext" : "new DNSTaskStarter.DNSTaskStarterImpl.StarterTimer(\"JmDNS(\" + jmDNSImpl.getName() + \").Timer\",true)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 15,
        "startColumnNumber" : 57,
        "endLineNumber" : 15,
        "endColumnNumber" : 165
      },
      "nodeContext" : "timer=new DNSTaskStarter.DNSTaskStarterImpl.StarterTimer(\"JmDNS(\" + jmDNSImpl.getName() + \").Timer\",true)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 15,
        "endColumnNumber" : 166
      },
      "nodeContext" : "final DNSTaskStarter.DNSTaskStarterImpl.StarterTimer timer=new DNSTaskStarter.DNSTaskStarterImpl.StarterTimer(\"JmDNS(\" + jmDNSImpl.getName() + \").Timer\",true);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1744,
        "startLineNumber" : 13,
        "startColumnNumber" : 69,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final DNSTaskStarter.DNSTaskStarterImpl delegate=new DNSTaskStarter.DNSTaskStarterImpl(jmDNSImpl);\n  final DNSTaskStarter.DNSTaskStarterImpl.StarterTimer timer=new DNSTaskStarter.DNSTaskStarterImpl.StarterTimer(\"JmDNS(\" + jmDNSImpl.getName() + \").Timer\",true);\n  return new DNSTaskStarter(){\n    public void purgeTimer(){\n      delegate.purgeTimer();\n      timer.purge();\n    }\n    public void purgeStateTimer(){\n      delegate.purgeStateTimer();\n    }\n    public void cancelTimer(){\n      delegate.cancelTimer();\n      timer.cancel();\n    }\n    public void cancelStateTimer(){\n      delegate.cancelStateTimer();\n    }\n    public void startProber(){\n      delegate.startProber();\n    }\n    public void startAnnouncer(){\n      delegate.startAnnouncer();\n    }\n    public void startRenewer(){\n      delegate.startRenewer();\n    }\n    public void startCanceler(){\n      delegate.startCanceler();\n    }\n    public void startReaper(){\n      new RecordReaper(jmDNSImpl){\n        @Override public void start(        Timer timer){\n          if (!this.getDns().isCanceling() && !this.getDns().isCanceled()) {\n            timer.schedule(this,0,500);\n          }\n        }\n      }\n.start(timer);\n    }\n    public void startServiceInfoResolver(    ServiceInfoImpl info){\n      delegate.startServiceInfoResolver(info);\n    }\n    public void startTypeResolver(){\n      delegate.startTypeResolver();\n    }\n    public void startServiceResolver(    String type){\n      delegate.startServiceResolver(type);\n    }\n    public void startResponder(    DNSIncoming in,    int port){\n      delegate.startResponder(in,port);\n    }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 226,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1823,
        "startLineNumber" : 12,
        "startColumnNumber" : 2,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public DNSTaskStarter newDNSTaskStarter(final JmDNSImpl jmDNSImpl){\n  final DNSTaskStarter.DNSTaskStarterImpl delegate=new DNSTaskStarter.DNSTaskStarterImpl(jmDNSImpl);\n  final DNSTaskStarter.DNSTaskStarterImpl.StarterTimer timer=new DNSTaskStarter.DNSTaskStarterImpl.StarterTimer(\"JmDNS(\" + jmDNSImpl.getName() + \").Timer\",true);\n  return new DNSTaskStarter(){\n    public void purgeTimer(){\n      delegate.purgeTimer();\n      timer.purge();\n    }\n    public void purgeStateTimer(){\n      delegate.purgeStateTimer();\n    }\n    public void cancelTimer(){\n      delegate.cancelTimer();\n      timer.cancel();\n    }\n    public void cancelStateTimer(){\n      delegate.cancelStateTimer();\n    }\n    public void startProber(){\n      delegate.startProber();\n    }\n    public void startAnnouncer(){\n      delegate.startAnnouncer();\n    }\n    public void startRenewer(){\n      delegate.startRenewer();\n    }\n    public void startCanceler(){\n      delegate.startCanceler();\n    }\n    public void startReaper(){\n      new RecordReaper(jmDNSImpl){\n        @Override public void start(        Timer timer){\n          if (!this.getDns().isCanceling() && !this.getDns().isCanceled()) {\n            timer.schedule(this,0,500);\n          }\n        }\n      }\n.start(timer);\n    }\n    public void startServiceInfoResolver(    ServiceInfoImpl info){\n      delegate.startServiceInfoResolver(info);\n    }\n    public void startTypeResolver(){\n      delegate.startTypeResolver();\n    }\n    public void startServiceResolver(    String type){\n      delegate.startServiceResolver(type);\n    }\n    public void startResponder(    DNSIncoming in,    int port){\n      delegate.startResponder(in,port);\n    }\n  }\n;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 238,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 15,
        "endColumnNumber" : 166
      },
      "nodeContext" : "final DNSTaskStarter.DNSTaskStarterImpl.StarterTimer timer=new DNSTaskStarter.DNSTaskStarterImpl.StarterTimer(\"JmDNS(\" + jmDNSImpl.getName() + \").Timer\",true);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "DNSTaskStarter"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 14,
    "startColumnNumber" : 10,
    "endLineNumber" : 14,
    "endColumnNumber" : 43
  }, {
    "charLength" : 33,
    "startLineNumber" : 14,
    "startColumnNumber" : 59,
    "endLineNumber" : 14,
    "endColumnNumber" : 92
  }, {
    "charLength" : 33,
    "startLineNumber" : 15,
    "startColumnNumber" : 10,
    "endLineNumber" : 15,
    "endColumnNumber" : 43
  }, {
    "charLength" : 33,
    "startLineNumber" : 15,
    "startColumnNumber" : 69,
    "endLineNumber" : 15,
    "endColumnNumber" : 102
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  } ]
}