{
  "id" : 331,
  "expression" : "parameters.size() == 2",
  "projectName" : "androidannotations@androidannotations",
  "commitID" : "b60a7ff27cb1bcb0eac2710c15c4957c0d992e27",
  "filePath" : "/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/processing/ItemSelectedProcessor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "parameters.size() == 2",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 67,
      "startColumnNumber" : 29,
      "endLineNumber" : 67,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 67,
        "startColumnNumber" : 10,
        "endLineNumber" : 67,
        "endColumnNumber" : 51
      },
      "nodeContext" : "hasItemParameter=parameters.size() == 2",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 67,
        "startColumnNumber" : 2,
        "endLineNumber" : 67,
        "endColumnNumber" : 52
      },
      "nodeContext" : "boolean hasItemParameter=parameters.size() == 2;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2710,
        "startLineNumber" : 59,
        "startColumnNumber" : 91,
        "endLineNumber" : 120,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  EBeanHolder holder=activitiesHolder.getEnclosingEBeanHolder(element);\n  String methodName=element.getSimpleName().toString();\n  ExecutableElement executableElement=(ExecutableElement)element;\n  List<? extends VariableElement> parameters=executableElement.getParameters();\n  boolean hasItemParameter=parameters.size() == 2;\n  ItemSelect annotation=element.getAnnotation(ItemSelect.class);\n  List<JFieldRef> idsRefs=extractQualifiedIds(element,annotation.value(),\"ItemSelected\",holder);\n  JDefinedClass onItemSelectedListenerClass=codeModel.anonymousClass(holder.refClass(\"android.widget.AdapterView.OnItemSelectedListener\"));\n  JMethod onItemSelectedMethod=onItemSelectedListenerClass.method(JMod.PUBLIC,codeModel.VOID,\"onItemSelected\");\n  JClass adapterViewClass=holder.refClass(\"android.widget.AdapterView\");\n  JClass viewClass=holder.refClass(\"android.view.View\");\n  JClass narrowAdapterViewClass=adapterViewClass.narrow(codeModel.wildcard());\n  JVar onItemClickParentParam=onItemSelectedMethod.param(narrowAdapterViewClass,\"parent\");\n  onItemSelectedMethod.param(viewClass,\"view\");\n  JVar onItemClickPositionParam=onItemSelectedMethod.param(codeModel.INT,\"position\");\n  onItemSelectedMethod.param(codeModel.LONG,\"id\");\n  JInvocation itemSelectedCall=onItemSelectedMethod.body().invoke(methodName);\n  itemSelectedCall.arg(JExpr.TRUE);\n  VariableElement secondParameter=parameters.get(1);\n  TypeMirror parameterType=secondParameter.asType();\n  if (hasItemParameter) {\n    if (parameterType.getKind() == TypeKind.INT) {\n      itemSelectedCall.arg(onItemClickPositionParam);\n    }\n else {\n      String parameterTypeQualifiedName=parameterType.toString();\n      itemSelectedCall.arg(JExpr.cast(holder.refClass(parameterTypeQualifiedName),JExpr.invoke(onItemClickParentParam,\"getAdapter\").invoke(\"getItem\").arg(onItemClickPositionParam)));\n    }\n  }\n  JMethod onNothingSelectedMethod=onItemSelectedListenerClass.method(JMod.PUBLIC,codeModel.VOID,\"onNothingSelected\");\n  onNothingSelectedMethod.param(narrowAdapterViewClass,\"parent\");\n  JInvocation nothingSelectedCall=onNothingSelectedMethod.body().invoke(methodName);\n  nothingSelectedCall.arg(JExpr.FALSE);\n  if (hasItemParameter) {\n    if (parameterType.getKind() == TypeKind.INT) {\n      nothingSelectedCall.arg(lit(-1));\n    }\n else {\n      nothingSelectedCall.arg(_null());\n    }\n  }\n  for (  JFieldRef idRef : idsRefs) {\n    JBlock body=holder.afterSetContentView.body();\n    JInvocation findViewById=JExpr.invoke(\"findViewById\");\n    body.add(JExpr.invoke(JExpr.cast(narrowAdapterViewClass,findViewById.arg(idRef)),\"setOnItemSelectedListener\").arg(JExpr._new(onItemSelectedListenerClass)));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 366,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2811,
        "startLineNumber" : 58,
        "startColumnNumber" : 1,
        "endLineNumber" : 120,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void process(Element element,JCodeModel codeModel,EBeansHolder activitiesHolder){\n  EBeanHolder holder=activitiesHolder.getEnclosingEBeanHolder(element);\n  String methodName=element.getSimpleName().toString();\n  ExecutableElement executableElement=(ExecutableElement)element;\n  List<? extends VariableElement> parameters=executableElement.getParameters();\n  boolean hasItemParameter=parameters.size() == 2;\n  ItemSelect annotation=element.getAnnotation(ItemSelect.class);\n  List<JFieldRef> idsRefs=extractQualifiedIds(element,annotation.value(),\"ItemSelected\",holder);\n  JDefinedClass onItemSelectedListenerClass=codeModel.anonymousClass(holder.refClass(\"android.widget.AdapterView.OnItemSelectedListener\"));\n  JMethod onItemSelectedMethod=onItemSelectedListenerClass.method(JMod.PUBLIC,codeModel.VOID,\"onItemSelected\");\n  JClass adapterViewClass=holder.refClass(\"android.widget.AdapterView\");\n  JClass viewClass=holder.refClass(\"android.view.View\");\n  JClass narrowAdapterViewClass=adapterViewClass.narrow(codeModel.wildcard());\n  JVar onItemClickParentParam=onItemSelectedMethod.param(narrowAdapterViewClass,\"parent\");\n  onItemSelectedMethod.param(viewClass,\"view\");\n  JVar onItemClickPositionParam=onItemSelectedMethod.param(codeModel.INT,\"position\");\n  onItemSelectedMethod.param(codeModel.LONG,\"id\");\n  JInvocation itemSelectedCall=onItemSelectedMethod.body().invoke(methodName);\n  itemSelectedCall.arg(JExpr.TRUE);\n  VariableElement secondParameter=parameters.get(1);\n  TypeMirror parameterType=secondParameter.asType();\n  if (hasItemParameter) {\n    if (parameterType.getKind() == TypeKind.INT) {\n      itemSelectedCall.arg(onItemClickPositionParam);\n    }\n else {\n      String parameterTypeQualifiedName=parameterType.toString();\n      itemSelectedCall.arg(JExpr.cast(holder.refClass(parameterTypeQualifiedName),JExpr.invoke(onItemClickParentParam,\"getAdapter\").invoke(\"getItem\").arg(onItemClickPositionParam)));\n    }\n  }\n  JMethod onNothingSelectedMethod=onItemSelectedListenerClass.method(JMod.PUBLIC,codeModel.VOID,\"onNothingSelected\");\n  onNothingSelectedMethod.param(narrowAdapterViewClass,\"parent\");\n  JInvocation nothingSelectedCall=onNothingSelectedMethod.body().invoke(methodName);\n  nothingSelectedCall.arg(JExpr.FALSE);\n  if (hasItemParameter) {\n    if (parameterType.getKind() == TypeKind.INT) {\n      nothingSelectedCall.arg(lit(-1));\n    }\n else {\n      nothingSelectedCall.arg(_null());\n    }\n  }\n  for (  JFieldRef idRef : idsRefs) {\n    JBlock body=holder.afterSetContentView.body();\n    JInvocation findViewById=JExpr.invoke(\"findViewById\");\n    body.add(JExpr.invoke(JExpr.cast(narrowAdapterViewClass,findViewById.arg(idRef)),\"setOnItemSelectedListener\").arg(JExpr._new(onItemSelectedListenerClass)));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 384,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 67,
        "startColumnNumber" : 2,
        "endLineNumber" : 67,
        "endColumnNumber" : 52
      },
      "nodeContext" : "boolean hasItemParameter=parameters.size() == 2;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 67,
    "startColumnNumber" : 29,
    "endLineNumber" : 67,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}