{
  "id" : 32,
  "expression" : "stringConverter.convert(2)",
  "projectName" : "winterbe@java8-tutorial",
  "commitID" : "89a257129873974e4beb658115e854649b9204b2",
  "filePath" : "/src/com/winterbe/java8/samples/lambda/Lambda4.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "stringConverter.convert(2)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 18,
      "startColumnNumber" : 25,
      "endLineNumber" : 18,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 18,
        "startColumnNumber" : 15,
        "endLineNumber" : 18,
        "endColumnNumber" : 51
      },
      "nodeContext" : "convert=stringConverter.convert(2)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 18,
        "endColumnNumber" : 52
      },
      "nodeContext" : "String convert=stringConverter.convert(2);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 677,
        "startLineNumber" : 12,
        "startColumnNumber" : 22,
        "endLineNumber" : 35,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int num=1;\n  Lambda2.Converter<Integer,String> stringConverter=(from) -> String.valueOf(from + num);\n  String convert=stringConverter.convert(2);\n  System.out.println(convert);\n  Lambda2.Converter<Integer,String> stringConverter2=(from) -> {\n    outerNum=13;\n    return String.valueOf(from);\n  }\n;\n  String[] array=new String[1];\n  Lambda2.Converter<Integer,String> stringConverter3=(from) -> {\n    array[0]=\"Hi there\";\n    return String.valueOf(from);\n  }\n;\n  stringConverter3.convert(23);\n  System.out.println(array[0]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 12,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 5
      },
      "nodeContext" : "void testScopes(){\n  int num=1;\n  Lambda2.Converter<Integer,String> stringConverter=(from) -> String.valueOf(from + num);\n  String convert=stringConverter.convert(2);\n  System.out.println(convert);\n  Lambda2.Converter<Integer,String> stringConverter2=(from) -> {\n    outerNum=13;\n    return String.valueOf(from);\n  }\n;\n  String[] array=new String[1];\n  Lambda2.Converter<Integer,String> stringConverter3=(from) -> {\n    array[0]=\"Hi there\";\n    return String.valueOf(from);\n  }\n;\n  stringConverter3.convert(23);\n  System.out.println(array[0]);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 18,
        "endColumnNumber" : 52
      },
      "nodeContext" : "String convert=stringConverter.convert(2);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 18,
    "startColumnNumber" : 25,
    "endLineNumber" : 18,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}