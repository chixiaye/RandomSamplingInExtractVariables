{
  "id" : 291,
  "expression" : "definition instanceof PasswordParameterDefinition",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/test/src/test/java/hudson/util/SecretCompatTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "definition instanceof PasswordParameterDefinition",
    "nodeType" : "InstanceofExpression",
    "nodePosition" : {
      "charLength" : 49,
      "startLineNumber" : 90,
      "startColumnNumber" : 19,
      "endLineNumber" : 90,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 69
      },
      "nodeContext" : "assertTrue(definition instanceof PasswordParameterDefinition)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 70
      },
      "nodeContext" : "assertTrue(definition instanceof PasswordParameterDefinition);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1577,
        "startLineNumber" : 83,
        "startColumnNumber" : 59,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  FreeStyleProject project=j.jenkins.getItemByFullName(\"OldSecret\",FreeStyleProject.class);\n  String oldxml=project.getConfigFile().asString();\n  assertThat(oldxml,containsString(\"<defaultValue>z/Dd3qrHdQ6/C5lR7uEafM/jD3nQDrGprw3XsfZ/0vo=</defaultValue>\"));\n  ParametersDefinitionProperty property=project.getProperty(ParametersDefinitionProperty.class);\n  ParameterDefinition definition=property.getParameterDefinitions().get(0);\n  assertTrue(definition instanceof PasswordParameterDefinition);\n  Secret secret=((PasswordParameterDefinition)definition).getDefaultValueAsSecret();\n  assertEquals(\"theSecret\",secret.getPlainText());\n  project=j.configRoundtrip(project);\n  String newXml=project.getConfigFile().asString();\n  assertNotEquals(oldxml,newXml);\n  assertThat(newXml,not(containsString(\"<defaultValue>z/Dd3qrHdQ6/C5lR7uEafM/jD3nQDrGprw3XsfZ/0vo=</defaultValue>\")));\n  Pattern p=Pattern.compile(\"<defaultValue>\\\\{[A-Za-z0-9+/]+={0,2}}</defaultValue>\");\n  assertTrue(p.matcher(newXml).find());\n  project=j.configRoundtrip(project);\n  String round2=project.getConfigFile().asString();\n  assertEquals(newXml,round2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1687,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test @Issue(\"SECURITY-304\") @LocalData public void canReadPreSec304Secrets() throws Exception {\n  FreeStyleProject project=j.jenkins.getItemByFullName(\"OldSecret\",FreeStyleProject.class);\n  String oldxml=project.getConfigFile().asString();\n  assertThat(oldxml,containsString(\"<defaultValue>z/Dd3qrHdQ6/C5lR7uEafM/jD3nQDrGprw3XsfZ/0vo=</defaultValue>\"));\n  ParametersDefinitionProperty property=project.getProperty(ParametersDefinitionProperty.class);\n  ParameterDefinition definition=property.getParameterDefinitions().get(0);\n  assertTrue(definition instanceof PasswordParameterDefinition);\n  Secret secret=((PasswordParameterDefinition)definition).getDefaultValueAsSecret();\n  assertEquals(\"theSecret\",secret.getPlainText());\n  project=j.configRoundtrip(project);\n  String newXml=project.getConfigFile().asString();\n  assertNotEquals(oldxml,newXml);\n  assertThat(newXml,not(containsString(\"<defaultValue>z/Dd3qrHdQ6/C5lR7uEafM/jD3nQDrGprw3XsfZ/0vo=</defaultValue>\")));\n  Pattern p=Pattern.compile(\"<defaultValue>\\\\{[A-Za-z0-9+/]+={0,2}}</defaultValue>\");\n  assertTrue(p.matcher(newXml).find());\n  project=j.configRoundtrip(project);\n  String round2=project.getConfigFile().asString();\n  assertEquals(newXml,round2);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 164,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 70
      },
      "nodeContext" : "assertTrue(definition instanceof PasswordParameterDefinition);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 49,
    "startLineNumber" : 90,
    "startColumnNumber" : 19,
    "endLineNumber" : 90,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}