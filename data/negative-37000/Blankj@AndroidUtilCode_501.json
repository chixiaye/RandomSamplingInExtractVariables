{
  "id" : 501,
  "expression" : "sb.append(ccs2Pinyin(String.valueOf(ccs.charAt(i))).substring(0,1))",
  "projectName" : "Blankj@AndroidUtilCode",
  "commitID" : "b0f09e2df62a8b5e40c07016bf0588e3d1eb4151",
  "filePath" : "/subutil/src/main/java/com/blankj/subutil/util/PinyinUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sb.append(ccs2Pinyin(String.valueOf(ccs.charAt(i))).substring(0,1))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 68,
      "startLineNumber" : 85,
      "startColumnNumber" : 12,
      "endLineNumber" : 85,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 16,
    "astHeight" : 6,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 85,
        "startColumnNumber" : 12,
        "endLineNumber" : 85,
        "endColumnNumber" : 94
      },
      "nodeContext" : "sb.append(ccs2Pinyin(String.valueOf(ccs.charAt(i))).substring(0,1)).append(split)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 85,
        "startColumnNumber" : 12,
        "endLineNumber" : 85,
        "endColumnNumber" : 95
      },
      "nodeContext" : "sb.append(ccs2Pinyin(String.valueOf(ccs.charAt(i))).substring(0,1)).append(split);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 84,
        "startColumnNumber" : 38,
        "endLineNumber" : 86,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  sb.append(ccs2Pinyin(String.valueOf(ccs.charAt(i))).substring(0,1)).append(split);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < len; i++) {\n  sb.append(ccs2Pinyin(String.valueOf(ccs.charAt(i))).substring(0,1)).append(split);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 32,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 325,
        "startLineNumber" : 80,
        "startColumnNumber" : 97,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (ccs == null || ccs.length() == 0)   return null;\n  int len=ccs.length();\n  StringBuilder sb=new StringBuilder(len);\n  for (int i=0; i < len; i++) {\n    sb.append(ccs2Pinyin(String.valueOf(ccs.charAt(i))).substring(0,1)).append(split);\n  }\n  return sb.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 559,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 获取所有汉字的首字母\n * @param ccs   汉字字符串(Chinese characters)\n * @param split 首字母之间的分隔符\n * @return 所有汉字的首字母\n */\npublic static String getPinyinFirstLetters(final CharSequence ccs,final CharSequence split){\n  if (ccs == null || ccs.length() == 0)   return null;\n  int len=ccs.length();\n  StringBuilder sb=new StringBuilder(len);\n  for (int i=0; i < len; i++) {\n    sb.append(ccs2Pinyin(String.valueOf(ccs.charAt(i))).substring(0,1)).append(split);\n  }\n  return sb.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 82,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 85,
        "startColumnNumber" : 12,
        "endLineNumber" : 85,
        "endColumnNumber" : 95
      },
      "nodeContext" : "sb.append(ccs2Pinyin(String.valueOf(ccs.charAt(i))).substring(0,1)).append(split);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 8
    },
    "tokenLength" : 11,
    "type" : "java.lang.StringBuilder"
  } ],
  "positionList" : [ {
    "charLength" : 68,
    "startLineNumber" : 85,
    "startColumnNumber" : 12,
    "endLineNumber" : 85,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ ]
}