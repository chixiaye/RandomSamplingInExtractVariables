{
  "id" : 396,
  "expression" : "\"Invalid network address prefix\"",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-testkit/src/main/java/com/netflix/eureka2/testkit/data/builder/SampleNetworkAddress.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Invalid network address prefix\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 65,
      "startColumnNumber" : 47,
      "endLineNumber" : 65,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 65,
        "startColumnNumber" : 18,
        "endLineNumber" : 65,
        "endColumnNumber" : 80
      },
      "nodeContext" : "new IllegalArgumentException(\"Invalid network address prefix\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 65,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 81
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Invalid network address prefix\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 64,
        "startColumnNumber" : 58,
        "endLineNumber" : 66,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new IllegalArgumentException(\"Invalid network address prefix\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (parts <= 0 || networkAddressPrefix.isEmpty()) {\n  throw new IllegalArgumentException(\"Invalid network address prefix\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1457,
        "startLineNumber" : 55,
        "startColumnNumber" : 80,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int parts=3;\n  int mask=0x00FFFFFF;\n  for (int pos=0; pos < networkAddressPrefix.length(); pos++) {\n    if (networkAddressPrefix.charAt(pos) == '.') {\n      parts--;\n      mask>>=8;\n    }\n  }\n  if (parts <= 0 || networkAddressPrefix.isEmpty()) {\n    throw new IllegalArgumentException(\"Invalid network address prefix\");\n  }\n  final AtomicLong counter=new AtomicLong();\n  final int finalMask=mask;\n  final int finalParts=parts;\n  return new Iterator<NetworkAddress>(){\n    @Override public boolean hasNext(){\n      return true;\n    }\n    @Override public NetworkAddress next(){\n      int hostPart=(int)(counter.incrementAndGet() % finalMask);\n      String nextIp=nextIpAddress(networkAddressPrefix,hostPart,finalParts);\n      String nextHostName=hostNameFrom(hostDomain,nextIp);\n      return aNetworkAddress().withHostName(nextHostName).withIpAddress(nextIp).withLabel(label).withProtocolType(ProtocolType.IPv4).build();\n    }\n    @Override public void remove(){\n      throw new IllegalStateException(\"Operation not supported\");\n    }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.EnumDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2277,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Generates a sequence of  {@link NetworkAddress} objects.<h1>Example</h1> Given networkAddressPrefix=10.10.10, and hostDomain=\"eureka.net\", the generated sequence will be: {hostName=10_10_10_1.eureka.net, ip=10.10.10.1}, {hostName=10_10_10_2.eureka.net, ip=10.10.10.2}, etc.\n * @param networkAddressPrefix network address part, that will be complemented to generate a host address\n * @param hostDomain root domain name, that will be complemented with a name generated from the IP address\n */\npublic static Iterator<NetworkAddress> collectionOfIPv4(final String networkAddressPrefix,final String hostDomain,final String label){\n  int parts=3;\n  int mask=0x00FFFFFF;\n  for (int pos=0; pos < networkAddressPrefix.length(); pos++) {\n    if (networkAddressPrefix.charAt(pos) == '.') {\n      parts--;\n      mask>>=8;\n    }\n  }\n  if (parts <= 0 || networkAddressPrefix.isEmpty()) {\n    throw new IllegalArgumentException(\"Invalid network address prefix\");\n  }\n  final AtomicLong counter=new AtomicLong();\n  final int finalMask=mask;\n  final int finalParts=parts;\n  return new Iterator<NetworkAddress>(){\n    @Override public boolean hasNext(){\n      return true;\n    }\n    @Override public NetworkAddress next(){\n      int hostPart=(int)(counter.incrementAndGet() % finalMask);\n      String nextIp=nextIpAddress(networkAddressPrefix,hostPart,finalParts);\n      String nextHostName=hostNameFrom(hostDomain,nextIp);\n      return aNetworkAddress().withHostName(nextHostName).withIpAddress(nextIp).withLabel(label).withProtocolType(ProtocolType.IPv4).build();\n    }\n    @Override public void remove(){\n      throw new IllegalStateException(\"Operation not supported\");\n    }\n  }\n;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 187,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 65,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 81
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Invalid network address prefix\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 65,
    "startColumnNumber" : 47,
    "endLineNumber" : 65,
    "endColumnNumber" : 79
  } ],
  "layoutRelationDataList" : [ ]
}