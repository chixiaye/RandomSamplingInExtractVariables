{
  "id" : 119,
  "expression" : "'/'",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/server/src/org/openqa/selenium/remote/server/AllHandlers.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "'/'",
    "nodeType" : "CharacterLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 93,
      "startColumnNumber" : 41,
      "endLineNumber" : 93,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 93,
        "startColumnNumber" : 29,
        "endLineNumber" : 93,
        "endColumnNumber" : 45
      },
      "nodeContext" : "Splitter.on('/')",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 93,
        "startColumnNumber" : 29,
        "endLineNumber" : 93,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Splitter.on('/').limit(4)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 93,
        "startColumnNumber" : 29,
        "endLineNumber" : 93,
        "endColumnNumber" : 72
      },
      "nodeContext" : "Splitter.on('/').limit(4).splitToList(path)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 93,
        "startColumnNumber" : 17,
        "endLineNumber" : 93,
        "endColumnNumber" : 72
      },
      "nodeContext" : "fragments=Splitter.on('/').limit(4).splitToList(path)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 93,
        "startColumnNumber" : 4,
        "endLineNumber" : 93,
        "endColumnNumber" : 73
      },
      "nodeContext" : "List<String> fragments=Splitter.on('/').limit(4).splitToList(path);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 989,
        "startLineNumber" : 78,
        "startColumnNumber" : 51,
        "endLineNumber" : 109,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String path=Strings.isNullOrEmpty(req.getPathInfo()) ? \"/\" : req.getPathInfo();\n  Optional<? extends HttpHandler> additionalHandler=additionalHandlers.get(HttpMethod.valueOf(req.getMethod())).stream().map(bundle -> bundle.apply(req.getPathInfo())).filter(Objects::nonNull).findFirst();\n  if (additionalHandler.isPresent()) {\n    return additionalHandler.get();\n  }\n  SessionId id=null;\n  List<String> fragments=Splitter.on('/').limit(4).splitToList(path);\n  if (fragments.size() > 2) {\n    if (\"session\".equals(fragments.get(1))) {\n      id=new SessionId(fragments.get(2));\n    }\n  }\n  if (id != null) {\n    ActiveSession session=allSessions.get(id);\n    if (session == null) {\n      return new NoSessionHandler(json,id);\n    }\n    return session;\n  }\n  return new NoHandler(json);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1038,
        "startLineNumber" : 78,
        "startColumnNumber" : 2,
        "endLineNumber" : 109,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public HttpHandler match(HttpServletRequest req){\n  String path=Strings.isNullOrEmpty(req.getPathInfo()) ? \"/\" : req.getPathInfo();\n  Optional<? extends HttpHandler> additionalHandler=additionalHandlers.get(HttpMethod.valueOf(req.getMethod())).stream().map(bundle -> bundle.apply(req.getPathInfo())).filter(Objects::nonNull).findFirst();\n  if (additionalHandler.isPresent()) {\n    return additionalHandler.get();\n  }\n  SessionId id=null;\n  List<String> fragments=Splitter.on('/').limit(4).splitToList(path);\n  if (fragments.size() > 2) {\n    if (\"session\".equals(fragments.get(1))) {\n      id=new SessionId(fragments.get(2));\n    }\n  }\n  if (id != null) {\n    ActiveSession session=allSessions.get(id);\n    if (session == null) {\n      return new NoSessionHandler(json,id);\n    }\n    return session;\n  }\n  return new NoHandler(json);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 155,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 93,
        "startColumnNumber" : 4,
        "endLineNumber" : 93,
        "endColumnNumber" : 73
      },
      "nodeContext" : "List<String> fragments=Splitter.on('/').limit(4).splitToList(path);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "char"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 93,
    "startColumnNumber" : 41,
    "endLineNumber" : 93,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}