{
  "id" : 14,
  "expression" : "mProcess.getInputStream()",
  "projectName" : "termux@termux-app",
  "commitID" : "6334470f81bdf003b8567af9e3531cec4dce560d",
  "filePath" : "/app/src/main/java/com/termux/app/BackgroundJob.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mProcess.getInputStream()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 50,
      "startColumnNumber" : 37,
      "endLineNumber" : 50,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 50,
        "startColumnNumber" : 28,
        "endLineNumber" : 50,
        "endColumnNumber" : 62
      },
      "nodeContext" : "stdout=mProcess.getInputStream()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 50,
        "startColumnNumber" : 16,
        "endLineNumber" : 50,
        "endColumnNumber" : 63
      },
      "nodeContext" : "InputStream stdout=mProcess.getInputStream();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1081,
        "startLineNumber" : 48,
        "startColumnNumber" : 30,
        "endLineNumber" : 72,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Log.i(LOG_TAG,\"[\" + pid + \"] starting: \"+ processDescription);\n  InputStream stdout=mProcess.getInputStream();\n  BufferedReader reader=new BufferedReader(new InputStreamReader(stdout,StandardCharsets.UTF_8));\n  String line;\n  try {\n    while ((line=reader.readLine()) != null) {\n      Log.i(LOG_TAG,\"[\" + pid + \"] stdout: \"+ line);\n    }\n  }\n catch (  IOException e) {\n    Log.e(LOG_TAG,\"Error reading output\",e);\n  }\n  try {\n    int exitCode=mProcess.waitFor();\n    if (exitCode == 0) {\n      Log.i(LOG_TAG,\"[\" + pid + \"] exited normally\");\n    }\n else {\n      Log.w(LOG_TAG,\"[\" + pid + \"] exited with code: \"+ exitCode);\n    }\n  }\n catch (  InterruptedException e) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1121,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 72,
        "endColumnNumber" : 13
      },
      "nodeContext" : "@Override public void run(){\n  Log.i(LOG_TAG,\"[\" + pid + \"] starting: \"+ processDescription);\n  InputStream stdout=mProcess.getInputStream();\n  BufferedReader reader=new BufferedReader(new InputStreamReader(stdout,StandardCharsets.UTF_8));\n  String line;\n  try {\n    while ((line=reader.readLine()) != null) {\n      Log.i(LOG_TAG,\"[\" + pid + \"] stdout: \"+ line);\n    }\n  }\n catch (  IOException e) {\n    Log.e(LOG_TAG,\"Error reading output\",e);\n  }\n  try {\n    int exitCode=mProcess.waitFor();\n    if (exitCode == 0) {\n      Log.i(LOG_TAG,\"[\" + pid + \"] exited normally\");\n    }\n else {\n      Log.w(LOG_TAG,\"[\" + pid + \"] exited with code: \"+ exitCode);\n    }\n  }\n catch (  InterruptedException e) {\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 50,
        "startColumnNumber" : 16,
        "endLineNumber" : 50,
        "endColumnNumber" : 63
      },
      "nodeContext" : "InputStream stdout=mProcess.getInputStream();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.io.InputStream"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 50,
    "startColumnNumber" : 37,
    "endLineNumber" : 50,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}