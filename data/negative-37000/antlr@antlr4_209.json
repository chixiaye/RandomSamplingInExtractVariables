{
  "id" : 209,
  "expression" : "sameSet",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/runtime/Java/src/org/antlr/v4/runtime/dfa/DFAState.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sameSet",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 160,
      "startColumnNumber" : 9,
      "endLineNumber" : 160,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 160,
        "startColumnNumber" : 2,
        "endLineNumber" : 160,
        "endColumnNumber" : 17
      },
      "nodeContext" : "return sameSet;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 407,
        "startLineNumber" : 148,
        "startColumnNumber" : 33,
        "endLineNumber" : 161,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (this == o)   return true;\n  if (!(o instanceof DFAState)) {\n    return false;\n  }\n  DFAState other=(DFAState)o;\n  boolean sameSet=this.configs.equals(other.configs);\n  return sameSet;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1090,
        "startLineNumber" : 134,
        "startColumnNumber" : 1,
        "endLineNumber" : 161,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Two  {@link DFAState} instances are equal if their ATN configuration setsare the same. This method is used to see if a state already exists. <p>Because the number of alternatives and number of ATN configurations are finite, there is a finite number of DFA states that can be processed. This is necessary to show that the algorithm terminates.</p> <p>Cannot test the DFA state numbers here because in {@link ParserATNSimulator#addDFAState} we need to know if any other stateexists that has this exact set of ATN configurations. The {@link #stateNumber} is irrelevant.</p>\n */\n@Override public boolean equals(Object o){\n  if (this == o)   return true;\n  if (!(o instanceof DFAState)) {\n    return false;\n  }\n  DFAState other=(DFAState)o;\n  boolean sameSet=this.configs.equals(other.configs);\n  return sameSet;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 51,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 160,
        "startColumnNumber" : 2,
        "endLineNumber" : 160,
        "endColumnNumber" : 17
      },
      "nodeContext" : "return sameSet;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 160,
    "startColumnNumber" : 9,
    "endLineNumber" : 160,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ ]
}