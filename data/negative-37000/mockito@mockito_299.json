{
  "id" : 299,
  "expression" : "iface.getName()",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/main/java/org/mockito/internal/listeners/VerificationStartedNotifier.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "iface.getName()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 89,
      "startColumnNumber" : 34,
      "endLineNumber" : 89,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 553,
        "startLineNumber" : 84,
        "startColumnNumber" : 24,
        "endLineNumber" : 93,
        "endColumnNumber" : 40
      },
      "nodeContext" : "\"parameter which does not implement all extra interfaces of the original mock.\\n\" + \"  Required type: \" + originalType.getName() + \"\\n\"+ \"  Required extra interface: \"+ iface.getName()+ \"\\n\"+ \"  Received parameter: \"+ ValuePrinter.print(mock)+ \".\\n \"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 19,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 679,
        "startLineNumber" : 82,
        "startColumnNumber" : 22,
        "endLineNumber" : 93,
        "endColumnNumber" : 41
      },
      "nodeContext" : "Reporter.methodDoesNotAcceptParameter(\"VerificationStartedEvent.setMock\",\"parameter which does not implement all extra interfaces of the original mock.\\n\" + \"  Required type: \" + originalType.getName() + \"\\n\"+ \"  Required extra interface: \"+ iface.getName()+ \"\\n\"+ \"  Received parameter: \"+ ValuePrinter.print(mock)+ \".\\n \")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 686,
        "startLineNumber" : 82,
        "startColumnNumber" : 16,
        "endLineNumber" : 93,
        "endColumnNumber" : 42
      },
      "nodeContext" : "throw Reporter.methodDoesNotAcceptParameter(\"VerificationStartedEvent.setMock\",\"parameter which does not implement all extra interfaces of the original mock.\\n\" + \"  Required type: \" + originalType.getName() + \"\\n\"+ \"  Required extra interface: \"+ iface.getName()+ \"\\n\"+ \"  Received parameter: \"+ ValuePrinter.print(mock)+ \".\\n \");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 24,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 720,
        "startLineNumber" : 81,
        "startColumnNumber" : 41,
        "endLineNumber" : 94,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  throw Reporter.methodDoesNotAcceptParameter(\"VerificationStartedEvent.setMock\",\"parameter which does not implement all extra interfaces of the original mock.\\n\" + \"  Required type: \" + originalType.getName() + \"\\n\"+ \"  Required extra interface: \"+ iface.getName()+ \"\\n\"+ \"  Received parameter: \"+ ValuePrinter.print(mock)+ \".\\n \");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 749,
        "startLineNumber" : 81,
        "startColumnNumber" : 12,
        "endLineNumber" : 94,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!iface.isInstance(mock)) {\n  throw Reporter.methodDoesNotAcceptParameter(\"VerificationStartedEvent.setMock\",\"parameter which does not implement all extra interfaces of the original mock.\\n\" + \"  Required type: \" + originalType.getName() + \"\\n\"+ \"  Required extra interface: \"+ iface.getName()+ \"\\n\"+ \"  Received parameter: \"+ ValuePrinter.print(mock)+ \".\\n \");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 775,
        "startLineNumber" : 80,
        "startColumnNumber" : 79,
        "endLineNumber" : 95,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!iface.isInstance(mock)) {\n    throw Reporter.methodDoesNotAcceptParameter(\"VerificationStartedEvent.setMock\",\"parameter which does not implement all extra interfaces of the original mock.\\n\" + \"  Required type: \" + originalType.getName() + \"\\n\"+ \"  Required extra interface: \"+ iface.getName()+ \"\\n\"+ \"  Received parameter: \"+ ValuePrinter.print(mock)+ \".\\n \");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 846,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 95,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Class iface : (Set<Class>)originalSettings.getExtraInterfaces()) {\n  if (!iface.isInstance(mock)) {\n    throw Reporter.methodDoesNotAcceptParameter(\"VerificationStartedEvent.setMock\",\"parameter which does not implement all extra interfaces of the original mock.\\n\" + \"  Required type: \" + originalType.getName() + \"\\n\"+ \"  Required extra interface: \"+ iface.getName()+ \"\\n\"+ \"  Received parameter: \"+ ValuePrinter.print(mock)+ \".\\n \");\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 46,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1480,
        "startLineNumber" : 66,
        "startColumnNumber" : 90,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Class originalType=originalSettings.getTypeToMock();\n  if (!originalType.isInstance(mock)) {\n    throw Reporter.methodDoesNotAcceptParameter(\"VerificationStartedEvent.setMock\",\"parameter which is not the same type as the original mock.\\n\" + \"  Required type: \" + originalType.getName() + \"\\n\"+ \"  Received parameter: \"+ ValuePrinter.print(mock)+ \".\\n \");\n  }\n  for (  Class iface : (Set<Class>)originalSettings.getExtraInterfaces()) {\n    if (!iface.isInstance(mock)) {\n      throw Reporter.methodDoesNotAcceptParameter(\"VerificationStartedEvent.setMock\",\"parameter which does not implement all extra interfaces of the original mock.\\n\" + \"  Required type: \" + originalType.getName() + \"\\n\"+ \"  Required extra interface: \"+ iface.getName()+ \"\\n\"+ \"  Received parameter: \"+ ValuePrinter.print(mock)+ \".\\n \");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1566,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static void assertCompatibleTypes(Object mock,MockCreationSettings originalSettings){\n  Class originalType=originalSettings.getTypeToMock();\n  if (!originalType.isInstance(mock)) {\n    throw Reporter.methodDoesNotAcceptParameter(\"VerificationStartedEvent.setMock\",\"parameter which is not the same type as the original mock.\\n\" + \"  Required type: \" + originalType.getName() + \"\\n\"+ \"  Received parameter: \"+ ValuePrinter.print(mock)+ \".\\n \");\n  }\n  for (  Class iface : (Set<Class>)originalSettings.getExtraInterfaces()) {\n    if (!iface.isInstance(mock)) {\n      throw Reporter.methodDoesNotAcceptParameter(\"VerificationStartedEvent.setMock\",\"parameter which does not implement all extra interfaces of the original mock.\\n\" + \"  Required type: \" + originalType.getName() + \"\\n\"+ \"  Required extra interface: \"+ iface.getName()+ \"\\n\"+ \"  Received parameter: \"+ ValuePrinter.print(mock)+ \".\\n \");\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 553,
        "startLineNumber" : 84,
        "startColumnNumber" : 24,
        "endLineNumber" : 93,
        "endColumnNumber" : 40
      },
      "nodeContext" : "\"parameter which does not implement all extra interfaces of the original mock.\\n\" + \"  Required type: \" + originalType.getName() + \"\\n\"+ \"  Required extra interface: \"+ iface.getName()+ \"\\n\"+ \"  Received parameter: \"+ ValuePrinter.print(mock)+ \".\\n \"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 19,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 89,
    "startColumnNumber" : 34,
    "endLineNumber" : 89,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}