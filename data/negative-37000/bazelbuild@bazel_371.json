{
  "id" : 371,
  "expression" : "\"The class '\" + originalClassName(invokingClassName) + \"' is calling Class.\"+ invokedMethodName+ \"\\n\"+ \"on class '\"+ originalClassName(reflectedClass)+ \"' to retrieve\\n\"+ \"the constructor with signature (\"+ originalSignature(signature)+ \"), but the latter could not be found.\\n\"+ \"It may have been obfuscated or shrunk.\\n\"+ \"You should consider preserving the constructor, with a setting like:\\n\"+ EMPTY_LINE+ keepConstructorRule(reflectedClass.getName(),signature)+ \"\\n\"+ EMPTY_LINE",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/third_party/java/proguard/proguard6.2.2/src/proguard/configuration/ConfigurationLogger.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"The class '\" + originalClassName(invokingClassName) + \"' is calling Class.\"+ invokedMethodName+ \"\\n\"+ \"on class '\"+ originalClassName(reflectedClass)+ \"' to retrieve\\n\"+ \"the constructor with signature (\"+ originalSignature(signature)+ \"), but the latter could not be found.\\n\"+ \"It may have been obfuscated or shrunk.\\n\"+ \"You should consider preserving the constructor, with a setting like:\\n\"+ EMPTY_LINE+ keepConstructorRule(reflectedClass.getName(),signature)+ \"\\n\"+ EMPTY_LINE",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 610,
      "startLineNumber" : 198,
      "startColumnNumber" : 16,
      "endLineNumber" : 205,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 29,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 632,
        "startLineNumber" : 197,
        "startColumnNumber" : 12,
        "endLineNumber" : 205,
        "endColumnNumber" : 27
      },
      "nodeContext" : "log(\"The class '\" + originalClassName(invokingClassName) + \"' is calling Class.\"+ invokedMethodName+ \"\\n\"+ \"on class '\"+ originalClassName(reflectedClass)+ \"' to retrieve\\n\"+ \"the constructor with signature (\"+ originalSignature(signature)+ \"), but the latter could not be found.\\n\"+ \"It may have been obfuscated or shrunk.\\n\"+ \"You should consider preserving the constructor, with a setting like:\\n\"+ EMPTY_LINE+ keepConstructorRule(reflectedClass.getName(),signature)+ \"\\n\"+ EMPTY_LINE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 633,
        "startLineNumber" : 197,
        "startColumnNumber" : 12,
        "endLineNumber" : 205,
        "endColumnNumber" : 28
      },
      "nodeContext" : "log(\"The class '\" + originalClassName(invokingClassName) + \"' is calling Class.\"+ invokedMethodName+ \"\\n\"+ \"on class '\"+ originalClassName(reflectedClass)+ \"' to retrieve\\n\"+ \"the constructor with signature (\"+ originalSignature(signature)+ \"), but the latter could not be found.\\n\"+ \"It may have been obfuscated or shrunk.\\n\"+ \"You should consider preserving the constructor, with a setting like:\\n\"+ EMPTY_LINE+ keepConstructorRule(reflectedClass.getName(),signature)+ \"\\n\"+ EMPTY_LINE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 32,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 698,
        "startLineNumber" : 195,
        "startColumnNumber" : 8,
        "endLineNumber" : 206,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  constructors.add(signature);\n  log(\"The class '\" + originalClassName(invokingClassName) + \"' is calling Class.\"+ invokedMethodName+ \"\\n\"+ \"on class '\"+ originalClassName(reflectedClass)+ \"' to retrieve\\n\"+ \"the constructor with signature (\"+ originalSignature(signature)+ \"), but the latter could not be found.\\n\"+ \"It may have been obfuscated or shrunk.\\n\"+ \"You should consider preserving the constructor, with a setting like:\\n\"+ EMPTY_LINE+ keepConstructorRule(reflectedClass.getName(),signature)+ \"\\n\"+ EMPTY_LINE);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 795,
        "startLineNumber" : 194,
        "startColumnNumber" : 8,
        "endLineNumber" : 206,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if ((!LOG_ONCE || !constructors.contains(signature)) && !isLibraryClass(reflectedClass)) {\n  constructors.add(signature);\n  log(\"The class '\" + originalClassName(invokingClassName) + \"' is calling Class.\"+ invokedMethodName+ \"\\n\"+ \"on class '\"+ originalClassName(reflectedClass)+ \"' to retrieve\\n\"+ \"the constructor with signature (\"+ originalSignature(signature)+ \"), but the latter could not be found.\\n\"+ \"It may have been obfuscated or shrunk.\\n\"+ \"You should consider preserving the constructor, with a setting like:\\n\"+ EMPTY_LINE+ keepConstructorRule(reflectedClass.getName(),signature)+ \"\\n\"+ EMPTY_LINE);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1188,
        "startLineNumber" : 184,
        "startColumnNumber" : 4,
        "endLineNumber" : 207,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MethodSignature signature=new MethodSignature(\"<init>\",constructorParameters);\n  Set<MethodSignature> constructors=missingConstructors.get(reflectedClass.getName());\n  if (constructors == null) {\n    constructors=new HashSet<MethodSignature>();\n    missingConstructors.put(reflectedClass.getName(),constructors);\n  }\n  if ((!LOG_ONCE || !constructors.contains(signature)) && !isLibraryClass(reflectedClass)) {\n    constructors.add(signature);\n    log(\"The class '\" + originalClassName(invokingClassName) + \"' is calling Class.\"+ invokedMethodName+ \"\\n\"+ \"on class '\"+ originalClassName(reflectedClass)+ \"' to retrieve\\n\"+ \"the constructor with signature (\"+ originalSignature(signature)+ \"), but the latter could not be found.\\n\"+ \"It may have been obfuscated or shrunk.\\n\"+ \"You should consider preserving the constructor, with a setting like:\\n\"+ EMPTY_LINE+ keepConstructorRule(reflectedClass.getName(),signature)+ \"\\n\"+ EMPTY_LINE);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1693,
        "startLineNumber" : 172,
        "startColumnNumber" : 4,
        "endLineNumber" : 207,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Log a failed call to one of the constructor retrieving methods on Class.\n * @param invokingClassName\n * @param invokedMethodName\n * @param reflectedClass\n * @param constructorParameters\n */\npublic static void logGetConstructor(String invokingClassName,String invokedMethodName,Class reflectedClass,Class[] constructorParameters){\n  MethodSignature signature=new MethodSignature(\"<init>\",constructorParameters);\n  Set<MethodSignature> constructors=missingConstructors.get(reflectedClass.getName());\n  if (constructors == null) {\n    constructors=new HashSet<MethodSignature>();\n    missingConstructors.put(reflectedClass.getName(),constructors);\n  }\n  if ((!LOG_ONCE || !constructors.contains(signature)) && !isLibraryClass(reflectedClass)) {\n    constructors.add(signature);\n    log(\"The class '\" + originalClassName(invokingClassName) + \"' is calling Class.\"+ invokedMethodName+ \"\\n\"+ \"on class '\"+ originalClassName(reflectedClass)+ \"' to retrieve\\n\"+ \"the constructor with signature (\"+ originalSignature(signature)+ \"), but the latter could not be found.\\n\"+ \"It may have been obfuscated or shrunk.\\n\"+ \"You should consider preserving the constructor, with a setting like:\\n\"+ EMPTY_LINE+ keepConstructorRule(reflectedClass.getName(),signature)+ \"\\n\"+ EMPTY_LINE);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 632,
        "startLineNumber" : 197,
        "startColumnNumber" : 12,
        "endLineNumber" : 205,
        "endColumnNumber" : 27
      },
      "nodeContext" : "log(\"The class '\" + originalClassName(invokingClassName) + \"' is calling Class.\"+ invokedMethodName+ \"\\n\"+ \"on class '\"+ originalClassName(reflectedClass)+ \"' to retrieve\\n\"+ \"the constructor with signature (\"+ originalSignature(signature)+ \"), but the latter could not be found.\\n\"+ \"It may have been obfuscated or shrunk.\\n\"+ \"You should consider preserving the constructor, with a setting like:\\n\"+ EMPTY_LINE+ keepConstructorRule(reflectedClass.getName(),signature)+ \"\\n\"+ EMPTY_LINE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 5
    },
    "tokenLength" : 70,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 610,
    "startLineNumber" : 198,
    "startColumnNumber" : 16,
    "endLineNumber" : 205,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}