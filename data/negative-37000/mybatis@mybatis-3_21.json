{
  "id" : 21,
  "expression" : "exception",
  "projectName" : "mybatis@mybatis-3",
  "commitID" : "a84ece4f08bb04fa6a5babd800113fe7338a9880",
  "filePath" : "/src/test/java/org/apache/ibatis/reflection/ExceptionUtilTest.java",
  "occurrences" : 10,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "exception",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 14,
      "startColumnNumber" : 17,
      "endLineNumber" : 14,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 14,
        "startColumnNumber" : 4,
        "endLineNumber" : 14,
        "endColumnNumber" : 69
      },
      "nodeContext" : "assertEquals(exception,ExceptionUtil.unwrapThrowable(exception))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 14,
        "startColumnNumber" : 4,
        "endLineNumber" : 14,
        "endColumnNumber" : 70
      },
      "nodeContext" : "assertEquals(exception,ExceptionUtil.unwrapThrowable(exception));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 650,
        "startLineNumber" : 12,
        "startColumnNumber" : 38,
        "endLineNumber" : 19,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Exception exception=new Exception();\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(exception));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new UndeclaredThrowableException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new InvocationTargetException(exception,\"test\"),\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new UndeclaredThrowableException(exception,\"test\"),\"test\")));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 11,
        "startColumnNumber" : 2,
        "endLineNumber" : 19,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void shouldUnwrapThrowable(){\n  Exception exception=new Exception();\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(exception));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new UndeclaredThrowableException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new InvocationTargetException(exception,\"test\"),\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new UndeclaredThrowableException(exception,\"test\"),\"test\")));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 14,
        "startColumnNumber" : 4,
        "endLineNumber" : 14,
        "endColumnNumber" : 70
      },
      "nodeContext" : "assertEquals(exception,ExceptionUtil.unwrapThrowable(exception));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Exception"
  }, {
    "nodeContext" : "exception",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 14,
      "startColumnNumber" : 58,
      "endLineNumber" : 14,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 14,
        "startColumnNumber" : 28,
        "endLineNumber" : 14,
        "endColumnNumber" : 68
      },
      "nodeContext" : "ExceptionUtil.unwrapThrowable(exception)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 14,
        "startColumnNumber" : 4,
        "endLineNumber" : 14,
        "endColumnNumber" : 69
      },
      "nodeContext" : "assertEquals(exception,ExceptionUtil.unwrapThrowable(exception))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 14,
        "startColumnNumber" : 4,
        "endLineNumber" : 14,
        "endColumnNumber" : 70
      },
      "nodeContext" : "assertEquals(exception,ExceptionUtil.unwrapThrowable(exception));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 650,
        "startLineNumber" : 12,
        "startColumnNumber" : 38,
        "endLineNumber" : 19,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Exception exception=new Exception();\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(exception));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new UndeclaredThrowableException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new InvocationTargetException(exception,\"test\"),\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new UndeclaredThrowableException(exception,\"test\"),\"test\")));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 11,
        "startColumnNumber" : 2,
        "endLineNumber" : 19,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void shouldUnwrapThrowable(){\n  Exception exception=new Exception();\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(exception));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new UndeclaredThrowableException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new InvocationTargetException(exception,\"test\"),\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new UndeclaredThrowableException(exception,\"test\"),\"test\")));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 14,
        "startColumnNumber" : 4,
        "endLineNumber" : 14,
        "endColumnNumber" : 70
      },
      "nodeContext" : "assertEquals(exception,ExceptionUtil.unwrapThrowable(exception));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Exception"
  }, {
    "nodeContext" : "exception",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 15,
      "startColumnNumber" : 17,
      "endLineNumber" : 15,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 15,
        "endColumnNumber" : 108
      },
      "nodeContext" : "assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(exception,\"test\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 15,
        "endColumnNumber" : 109
      },
      "nodeContext" : "assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(exception,\"test\")));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 650,
        "startLineNumber" : 12,
        "startColumnNumber" : 38,
        "endLineNumber" : 19,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Exception exception=new Exception();\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(exception));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new UndeclaredThrowableException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new InvocationTargetException(exception,\"test\"),\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new UndeclaredThrowableException(exception,\"test\"),\"test\")));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 11,
        "startColumnNumber" : 2,
        "endLineNumber" : 19,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void shouldUnwrapThrowable(){\n  Exception exception=new Exception();\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(exception));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new UndeclaredThrowableException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new InvocationTargetException(exception,\"test\"),\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new UndeclaredThrowableException(exception,\"test\"),\"test\")));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 15,
        "endColumnNumber" : 109
      },
      "nodeContext" : "assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(exception,\"test\")));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.Exception"
  }, {
    "nodeContext" : "exception",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 15,
      "startColumnNumber" : 88,
      "endLineNumber" : 15,
      "endColumnNumber" : 97
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 15,
        "startColumnNumber" : 58,
        "endLineNumber" : 15,
        "endColumnNumber" : 106
      },
      "nodeContext" : "new InvocationTargetException(exception,\"test\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 15,
        "startColumnNumber" : 28,
        "endLineNumber" : 15,
        "endColumnNumber" : 107
      },
      "nodeContext" : "ExceptionUtil.unwrapThrowable(new InvocationTargetException(exception,\"test\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 15,
        "endColumnNumber" : 108
      },
      "nodeContext" : "assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(exception,\"test\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 15,
        "endColumnNumber" : 109
      },
      "nodeContext" : "assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(exception,\"test\")));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 650,
        "startLineNumber" : 12,
        "startColumnNumber" : 38,
        "endLineNumber" : 19,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Exception exception=new Exception();\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(exception));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new UndeclaredThrowableException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new InvocationTargetException(exception,\"test\"),\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new UndeclaredThrowableException(exception,\"test\"),\"test\")));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 11,
        "startColumnNumber" : 2,
        "endLineNumber" : 19,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void shouldUnwrapThrowable(){\n  Exception exception=new Exception();\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(exception));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new UndeclaredThrowableException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new InvocationTargetException(exception,\"test\"),\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new UndeclaredThrowableException(exception,\"test\"),\"test\")));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 15,
        "endColumnNumber" : 109
      },
      "nodeContext" : "assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(exception,\"test\")));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.Exception"
  }, {
    "nodeContext" : "exception",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 16,
      "startColumnNumber" : 17,
      "endLineNumber" : 16,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 16,
        "endColumnNumber" : 111
      },
      "nodeContext" : "assertEquals(exception,ExceptionUtil.unwrapThrowable(new UndeclaredThrowableException(exception,\"test\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 16,
        "endColumnNumber" : 112
      },
      "nodeContext" : "assertEquals(exception,ExceptionUtil.unwrapThrowable(new UndeclaredThrowableException(exception,\"test\")));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 650,
        "startLineNumber" : 12,
        "startColumnNumber" : 38,
        "endLineNumber" : 19,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Exception exception=new Exception();\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(exception));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new UndeclaredThrowableException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new InvocationTargetException(exception,\"test\"),\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new UndeclaredThrowableException(exception,\"test\"),\"test\")));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 11,
        "startColumnNumber" : 2,
        "endLineNumber" : 19,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void shouldUnwrapThrowable(){\n  Exception exception=new Exception();\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(exception));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new UndeclaredThrowableException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new InvocationTargetException(exception,\"test\"),\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new UndeclaredThrowableException(exception,\"test\"),\"test\")));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 16,
        "endColumnNumber" : 112
      },
      "nodeContext" : "assertEquals(exception,ExceptionUtil.unwrapThrowable(new UndeclaredThrowableException(exception,\"test\")));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.Exception"
  }, {
    "nodeContext" : "exception",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 16,
      "startColumnNumber" : 91,
      "endLineNumber" : 16,
      "endColumnNumber" : 100
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 16,
        "startColumnNumber" : 58,
        "endLineNumber" : 16,
        "endColumnNumber" : 109
      },
      "nodeContext" : "new UndeclaredThrowableException(exception,\"test\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 16,
        "startColumnNumber" : 28,
        "endLineNumber" : 16,
        "endColumnNumber" : 110
      },
      "nodeContext" : "ExceptionUtil.unwrapThrowable(new UndeclaredThrowableException(exception,\"test\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 16,
        "endColumnNumber" : 111
      },
      "nodeContext" : "assertEquals(exception,ExceptionUtil.unwrapThrowable(new UndeclaredThrowableException(exception,\"test\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 16,
        "endColumnNumber" : 112
      },
      "nodeContext" : "assertEquals(exception,ExceptionUtil.unwrapThrowable(new UndeclaredThrowableException(exception,\"test\")));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 650,
        "startLineNumber" : 12,
        "startColumnNumber" : 38,
        "endLineNumber" : 19,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Exception exception=new Exception();\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(exception));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new UndeclaredThrowableException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new InvocationTargetException(exception,\"test\"),\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new UndeclaredThrowableException(exception,\"test\"),\"test\")));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 11,
        "startColumnNumber" : 2,
        "endLineNumber" : 19,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void shouldUnwrapThrowable(){\n  Exception exception=new Exception();\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(exception));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new UndeclaredThrowableException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new InvocationTargetException(exception,\"test\"),\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new UndeclaredThrowableException(exception,\"test\"),\"test\")));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 16,
        "endColumnNumber" : 112
      },
      "nodeContext" : "assertEquals(exception,ExceptionUtil.unwrapThrowable(new UndeclaredThrowableException(exception,\"test\")));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.Exception"
  }, {
    "nodeContext" : "exception",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 17,
      "startColumnNumber" : 17,
      "endLineNumber" : 17,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 17,
        "endColumnNumber" : 147
      },
      "nodeContext" : "assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new InvocationTargetException(exception,\"test\"),\"test\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 17,
        "endColumnNumber" : 148
      },
      "nodeContext" : "assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new InvocationTargetException(exception,\"test\"),\"test\")));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 650,
        "startLineNumber" : 12,
        "startColumnNumber" : 38,
        "endLineNumber" : 19,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Exception exception=new Exception();\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(exception));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new UndeclaredThrowableException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new InvocationTargetException(exception,\"test\"),\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new UndeclaredThrowableException(exception,\"test\"),\"test\")));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 11,
        "startColumnNumber" : 2,
        "endLineNumber" : 19,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void shouldUnwrapThrowable(){\n  Exception exception=new Exception();\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(exception));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new UndeclaredThrowableException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new InvocationTargetException(exception,\"test\"),\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new UndeclaredThrowableException(exception,\"test\"),\"test\")));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 17,
        "endColumnNumber" : 148
      },
      "nodeContext" : "assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new InvocationTargetException(exception,\"test\"),\"test\")));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.Exception"
  }, {
    "nodeContext" : "exception",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 17,
      "startColumnNumber" : 118,
      "endLineNumber" : 17,
      "endColumnNumber" : 127
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 17,
        "startColumnNumber" : 88,
        "endLineNumber" : 17,
        "endColumnNumber" : 136
      },
      "nodeContext" : "new InvocationTargetException(exception,\"test\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 17,
        "startColumnNumber" : 58,
        "endLineNumber" : 17,
        "endColumnNumber" : 145
      },
      "nodeContext" : "new InvocationTargetException(new InvocationTargetException(exception,\"test\"),\"test\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 17,
        "startColumnNumber" : 28,
        "endLineNumber" : 17,
        "endColumnNumber" : 146
      },
      "nodeContext" : "ExceptionUtil.unwrapThrowable(new InvocationTargetException(new InvocationTargetException(exception,\"test\"),\"test\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 17,
        "endColumnNumber" : 147
      },
      "nodeContext" : "assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new InvocationTargetException(exception,\"test\"),\"test\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 17,
        "endColumnNumber" : 148
      },
      "nodeContext" : "assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new InvocationTargetException(exception,\"test\"),\"test\")));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 650,
        "startLineNumber" : 12,
        "startColumnNumber" : 38,
        "endLineNumber" : 19,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Exception exception=new Exception();\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(exception));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new UndeclaredThrowableException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new InvocationTargetException(exception,\"test\"),\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new UndeclaredThrowableException(exception,\"test\"),\"test\")));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 11,
        "startColumnNumber" : 2,
        "endLineNumber" : 19,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void shouldUnwrapThrowable(){\n  Exception exception=new Exception();\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(exception));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new UndeclaredThrowableException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new InvocationTargetException(exception,\"test\"),\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new UndeclaredThrowableException(exception,\"test\"),\"test\")));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 17,
        "endColumnNumber" : 148
      },
      "nodeContext" : "assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new InvocationTargetException(exception,\"test\"),\"test\")));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.Exception"
  }, {
    "nodeContext" : "exception",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 18,
      "startColumnNumber" : 17,
      "endLineNumber" : 18,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 18,
        "startColumnNumber" : 4,
        "endLineNumber" : 18,
        "endColumnNumber" : 150
      },
      "nodeContext" : "assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new UndeclaredThrowableException(exception,\"test\"),\"test\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 18,
        "startColumnNumber" : 4,
        "endLineNumber" : 18,
        "endColumnNumber" : 151
      },
      "nodeContext" : "assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new UndeclaredThrowableException(exception,\"test\"),\"test\")));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 650,
        "startLineNumber" : 12,
        "startColumnNumber" : 38,
        "endLineNumber" : 19,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Exception exception=new Exception();\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(exception));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new UndeclaredThrowableException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new InvocationTargetException(exception,\"test\"),\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new UndeclaredThrowableException(exception,\"test\"),\"test\")));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 11,
        "startColumnNumber" : 2,
        "endLineNumber" : 19,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void shouldUnwrapThrowable(){\n  Exception exception=new Exception();\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(exception));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new UndeclaredThrowableException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new InvocationTargetException(exception,\"test\"),\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new UndeclaredThrowableException(exception,\"test\"),\"test\")));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 18,
        "startColumnNumber" : 4,
        "endLineNumber" : 18,
        "endColumnNumber" : 151
      },
      "nodeContext" : "assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new UndeclaredThrowableException(exception,\"test\"),\"test\")));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.Exception"
  }, {
    "nodeContext" : "exception",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 18,
      "startColumnNumber" : 121,
      "endLineNumber" : 18,
      "endColumnNumber" : 130
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 18,
        "startColumnNumber" : 88,
        "endLineNumber" : 18,
        "endColumnNumber" : 139
      },
      "nodeContext" : "new UndeclaredThrowableException(exception,\"test\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 18,
        "startColumnNumber" : 58,
        "endLineNumber" : 18,
        "endColumnNumber" : 148
      },
      "nodeContext" : "new InvocationTargetException(new UndeclaredThrowableException(exception,\"test\"),\"test\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 18,
        "startColumnNumber" : 28,
        "endLineNumber" : 18,
        "endColumnNumber" : 149
      },
      "nodeContext" : "ExceptionUtil.unwrapThrowable(new InvocationTargetException(new UndeclaredThrowableException(exception,\"test\"),\"test\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 18,
        "startColumnNumber" : 4,
        "endLineNumber" : 18,
        "endColumnNumber" : 150
      },
      "nodeContext" : "assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new UndeclaredThrowableException(exception,\"test\"),\"test\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 18,
        "startColumnNumber" : 4,
        "endLineNumber" : 18,
        "endColumnNumber" : 151
      },
      "nodeContext" : "assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new UndeclaredThrowableException(exception,\"test\"),\"test\")));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 650,
        "startLineNumber" : 12,
        "startColumnNumber" : 38,
        "endLineNumber" : 19,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Exception exception=new Exception();\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(exception));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new UndeclaredThrowableException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new InvocationTargetException(exception,\"test\"),\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new UndeclaredThrowableException(exception,\"test\"),\"test\")));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 11,
        "startColumnNumber" : 2,
        "endLineNumber" : 19,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void shouldUnwrapThrowable(){\n  Exception exception=new Exception();\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(exception));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new UndeclaredThrowableException(exception,\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new InvocationTargetException(exception,\"test\"),\"test\")));\n  assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new UndeclaredThrowableException(exception,\"test\"),\"test\")));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 18,
        "startColumnNumber" : 4,
        "endLineNumber" : 18,
        "endColumnNumber" : 151
      },
      "nodeContext" : "assertEquals(exception,ExceptionUtil.unwrapThrowable(new InvocationTargetException(new UndeclaredThrowableException(exception,\"test\"),\"test\")));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.Exception"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 14,
    "startColumnNumber" : 17,
    "endLineNumber" : 14,
    "endColumnNumber" : 26
  }, {
    "charLength" : 9,
    "startLineNumber" : 14,
    "startColumnNumber" : 58,
    "endLineNumber" : 14,
    "endColumnNumber" : 67
  }, {
    "charLength" : 9,
    "startLineNumber" : 15,
    "startColumnNumber" : 17,
    "endLineNumber" : 15,
    "endColumnNumber" : 26
  }, {
    "charLength" : 9,
    "startLineNumber" : 15,
    "startColumnNumber" : 88,
    "endLineNumber" : 15,
    "endColumnNumber" : 97
  }, {
    "charLength" : 9,
    "startLineNumber" : 16,
    "startColumnNumber" : 17,
    "endLineNumber" : 16,
    "endColumnNumber" : 26
  }, {
    "charLength" : 9,
    "startLineNumber" : 16,
    "startColumnNumber" : 91,
    "endLineNumber" : 16,
    "endColumnNumber" : 100
  }, {
    "charLength" : 9,
    "startLineNumber" : 17,
    "startColumnNumber" : 17,
    "endLineNumber" : 17,
    "endColumnNumber" : 26
  }, {
    "charLength" : 9,
    "startLineNumber" : 17,
    "startColumnNumber" : 118,
    "endLineNumber" : 17,
    "endColumnNumber" : 127
  }, {
    "charLength" : 9,
    "startLineNumber" : 18,
    "startColumnNumber" : 17,
    "endLineNumber" : 18,
    "endColumnNumber" : 26
  }, {
    "charLength" : 9,
    "startLineNumber" : 18,
    "startColumnNumber" : 121,
    "endLineNumber" : 18,
    "endColumnNumber" : 130
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 0
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 0
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 0
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 0
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 3
  } ]
}