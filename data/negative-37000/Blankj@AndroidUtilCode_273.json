{
  "id" : 273,
  "expression" : "(len=in.read(buffer)) != -1",
  "projectName" : "Blankj@AndroidUtilCode",
  "commitID" : "b0f09e2df62a8b5e40c07016bf0588e3d1eb4151",
  "filePath" : "/utilcode/src/main/java/com/blankj/utilcode/util/ZipUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(len=in.read(buffer)) != -1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 316,
      "startColumnNumber" : 31,
      "endLineNumber" : 316,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 10,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 316,
        "startColumnNumber" : 24,
        "endLineNumber" : 318,
        "endColumnNumber" : 25
      },
      "nodeContext" : "while ((len=in.read(buffer)) != -1) {\n  out.write(buffer,0,len);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 419,
        "startLineNumber" : 311,
        "startColumnNumber" : 24,
        "endLineNumber" : 319,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  in=new BufferedInputStream(zf.getInputStream(entry));\n  out=new BufferedOutputStream(new FileOutputStream(file));\n  byte buffer[]=new byte[KB];\n  int len;\n  while ((len=in.read(buffer)) != -1) {\n    out.write(buffer,0,len);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 508,
        "startLineNumber" : 311,
        "startColumnNumber" : 20,
        "endLineNumber" : 321,
        "endColumnNumber" : 21
      },
      "nodeContext" : "try {\n  in=new BufferedInputStream(zf.getInputStream(entry));\n  out=new BufferedOutputStream(new FileOutputStream(file));\n  byte buffer[]=new byte[KB];\n  int len;\n  while ((len=in.read(buffer)) != -1) {\n    out.write(buffer,0,len);\n  }\n}\n  finally {\n  CloseUtils.closeIO(in,out);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 62,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 710,
        "startLineNumber" : 307,
        "startColumnNumber" : 23,
        "endLineNumber" : 322,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (!FileUtils.createOrExistsFile(file))   return null;\n  InputStream in=null;\n  OutputStream out=null;\n  try {\n    in=new BufferedInputStream(zf.getInputStream(entry));\n    out=new BufferedOutputStream(new FileOutputStream(file));\n    byte buffer[]=new byte[KB];\n    int len;\n    while ((len=in.read(buffer)) != -1) {\n      out.write(buffer,0,len);\n    }\n  }\n  finally {\n    CloseUtils.closeIO(in,out);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 833,
        "startLineNumber" : 305,
        "startColumnNumber" : 16,
        "endLineNumber" : 322,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (entry.isDirectory()) {\n  if (!FileUtils.createOrExistsDir(file))   return null;\n}\n else {\n  if (!FileUtils.createOrExistsFile(file))   return null;\n  InputStream in=null;\n  OutputStream out=null;\n  try {\n    in=new BufferedInputStream(zf.getInputStream(entry));\n    out=new BufferedOutputStream(new FileOutputStream(file));\n    byte buffer[]=new byte[KB];\n    int len;\n    while ((len=in.read(buffer)) != -1) {\n      out.write(buffer,0,len);\n    }\n  }\n  finally {\n    CloseUtils.closeIO(in,out);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 96,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1018,
        "startLineNumber" : 301,
        "startColumnNumber" : 128,
        "endLineNumber" : 323,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String filePath=destDir + File.separator + entryName;\n  File file=new File(filePath);\n  files.add(file);\n  if (entry.isDirectory()) {\n    if (!FileUtils.createOrExistsDir(file))     return null;\n  }\n else {\n    if (!FileUtils.createOrExistsFile(file))     return null;\n    InputStream in=null;\n    OutputStream out=null;\n    try {\n      in=new BufferedInputStream(zf.getInputStream(entry));\n      out=new BufferedOutputStream(new FileOutputStream(file));\n      byte buffer[]=new byte[KB];\n      int len;\n      while ((len=in.read(buffer)) != -1) {\n        out.write(buffer,0,len);\n      }\n    }\n  finally {\n      CloseUtils.closeIO(in,out);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1134,
        "startLineNumber" : 301,
        "startColumnNumber" : 12,
        "endLineNumber" : 323,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (StringUtils.isEmpty(keyword) || FileUtils.getFileName(entryName).toLowerCase().contains(keyword.toLowerCase())) {\n  String filePath=destDir + File.separator + entryName;\n  File file=new File(filePath);\n  files.add(file);\n  if (entry.isDirectory()) {\n    if (!FileUtils.createOrExistsDir(file))     return null;\n  }\n else {\n    if (!FileUtils.createOrExistsFile(file))     return null;\n    InputStream in=null;\n    OutputStream out=null;\n    try {\n      in=new BufferedInputStream(zf.getInputStream(entry));\n      out=new BufferedOutputStream(new FileOutputStream(file));\n      byte buffer[]=new byte[KB];\n      int len;\n      while ((len=in.read(buffer)) != -1) {\n        out.write(buffer,0,len);\n      }\n    }\n  finally {\n      CloseUtils.closeIO(in,out);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 139,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1271,
        "startLineNumber" : 298,
        "startColumnNumber" : 42,
        "endLineNumber" : 324,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ZipEntry entry=((ZipEntry)entries.nextElement());\n  String entryName=entry.getName();\n  if (StringUtils.isEmpty(keyword) || FileUtils.getFileName(entryName).toLowerCase().contains(keyword.toLowerCase())) {\n    String filePath=destDir + File.separator + entryName;\n    File file=new File(filePath);\n    files.add(file);\n    if (entry.isDirectory()) {\n      if (!FileUtils.createOrExistsDir(file))       return null;\n    }\n else {\n      if (!FileUtils.createOrExistsFile(file))       return null;\n      InputStream in=null;\n      OutputStream out=null;\n      try {\n        in=new BufferedInputStream(zf.getInputStream(entry));\n        out=new BufferedOutputStream(new FileOutputStream(file));\n        byte buffer[]=new byte[KB];\n        int len;\n        while ((len=in.read(buffer)) != -1) {\n          out.write(buffer,0,len);\n        }\n      }\n  finally {\n        CloseUtils.closeIO(in,out);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1305,
        "startLineNumber" : 298,
        "startColumnNumber" : 8,
        "endLineNumber" : 324,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (entries.hasMoreElements()) {\n  ZipEntry entry=((ZipEntry)entries.nextElement());\n  String entryName=entry.getName();\n  if (StringUtils.isEmpty(keyword) || FileUtils.getFileName(entryName).toLowerCase().contains(keyword.toLowerCase())) {\n    String filePath=destDir + File.separator + entryName;\n    File file=new File(filePath);\n    files.add(file);\n    if (entry.isDirectory()) {\n      if (!FileUtils.createOrExistsDir(file))       return null;\n    }\n else {\n      if (!FileUtils.createOrExistsFile(file))       return null;\n      InputStream in=null;\n      OutputStream out=null;\n      try {\n        in=new BufferedInputStream(zf.getInputStream(entry));\n        out=new BufferedOutputStream(new FileOutputStream(file));\n        byte buffer[]=new byte[KB];\n        int len;\n        while ((len=in.read(buffer)) != -1) {\n          out.write(buffer,0,len);\n        }\n      }\n  finally {\n        CloseUtils.closeIO(in,out);\n      }\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 164,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1540,
        "startLineNumber" : 293,
        "startColumnNumber" : 31,
        "endLineNumber" : 326,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (zipFile == null || destDir == null)   return null;\n  List<File> files=new ArrayList<>();\n  ZipFile zf=new ZipFile(zipFile);\n  Enumeration<?> entries=zf.entries();\n  while (entries.hasMoreElements()) {\n    ZipEntry entry=((ZipEntry)entries.nextElement());\n    String entryName=entry.getName();\n    if (StringUtils.isEmpty(keyword) || FileUtils.getFileName(entryName).toLowerCase().contains(keyword.toLowerCase())) {\n      String filePath=destDir + File.separator + entryName;\n      File file=new File(filePath);\n      files.add(file);\n      if (entry.isDirectory()) {\n        if (!FileUtils.createOrExistsDir(file))         return null;\n      }\n else {\n        if (!FileUtils.createOrExistsFile(file))         return null;\n        InputStream in=null;\n        OutputStream out=null;\n        try {\n          in=new BufferedInputStream(zf.getInputStream(entry));\n          out=new BufferedOutputStream(new FileOutputStream(file));\n          byte buffer[]=new byte[KB];\n          int len;\n          while ((len=in.read(buffer)) != -1) {\n            out.write(buffer,0,len);\n          }\n        }\n  finally {\n          CloseUtils.closeIO(in,out);\n        }\n      }\n    }\n  }\n  return files;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 208,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1862,
        "startLineNumber" : 283,
        "startColumnNumber" : 4,
        "endLineNumber" : 326,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 解压带有关键字的文件\n * @param zipFile 待解压文件\n * @param destDir 目标目录\n * @param keyword 关键字\n * @return 返回带有关键字的文件链表\n * @throws IOException IO错误时抛出\n */\npublic static List<File> unzipFileByKeyword(final File zipFile,final File destDir,final String keyword) throws IOException {\n  if (zipFile == null || destDir == null)   return null;\n  List<File> files=new ArrayList<>();\n  ZipFile zf=new ZipFile(zipFile);\n  Enumeration<?> entries=zf.entries();\n  while (entries.hasMoreElements()) {\n    ZipEntry entry=((ZipEntry)entries.nextElement());\n    String entryName=entry.getName();\n    if (StringUtils.isEmpty(keyword) || FileUtils.getFileName(entryName).toLowerCase().contains(keyword.toLowerCase())) {\n      String filePath=destDir + File.separator + entryName;\n      File file=new File(filePath);\n      files.add(file);\n      if (entry.isDirectory()) {\n        if (!FileUtils.createOrExistsDir(file))         return null;\n      }\n else {\n        if (!FileUtils.createOrExistsFile(file))         return null;\n        InputStream in=null;\n        OutputStream out=null;\n        try {\n          in=new BufferedInputStream(zf.getInputStream(entry));\n          out=new BufferedOutputStream(new FileOutputStream(file));\n          byte buffer[]=new byte[KB];\n          int len;\n          while ((len=in.read(buffer)) != -1) {\n            out.write(buffer,0,len);\n          }\n        }\n  finally {\n          CloseUtils.closeIO(in,out);\n        }\n      }\n    }\n  }\n  return files;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 235,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 316,
        "startColumnNumber" : 24,
        "endLineNumber" : 318,
        "endColumnNumber" : 25
      },
      "nodeContext" : "while ((len=in.read(buffer)) != -1) {\n  out.write(buffer,0,len);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 316,
    "startColumnNumber" : 31,
    "endLineNumber" : 316,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}