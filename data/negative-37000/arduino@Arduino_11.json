{
  "id" : 11,
  "expression" : "(c[i] >= 'a') && (c[i] <= 'z')",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/arduino-core/src/processing/app/BaseNoGui.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(c[i] >= 'a') && (c[i] <= 'z')",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 981,
      "startColumnNumber" : 11,
      "endLineNumber" : 981,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 13,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 981,
        "startColumnNumber" : 10,
        "endLineNumber" : 981,
        "endColumnNumber" : 42
      },
      "nodeContext" : "((c[i] >= 'a') && (c[i] <= 'z'))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 980,
        "startColumnNumber" : 10,
        "endLineNumber" : 984,
        "endColumnNumber" : 36
      },
      "nodeContext" : "((c[i] >= '0') && (c[i] <= '9')) || ((c[i] >= 'a') && (c[i] <= 'z')) || ((c[i] >= 'A') && (c[i] <= 'Z'))|| ((i > 0) && (c[i] == '-'))|| ((i > 0) && (c[i] == '.'))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 67,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 291,
        "startLineNumber" : 980,
        "startColumnNumber" : 6,
        "endLineNumber" : 988,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (((c[i] >= '0') && (c[i] <= '9')) || ((c[i] >= 'a') && (c[i] <= 'z')) || ((c[i] >= 'A') && (c[i] <= 'Z'))|| ((i > 0) && (c[i] == '-'))|| ((i > 0) && (c[i] == '.'))) {\n  buffer.append(c[i]);\n}\n else {\n  buffer.append('_');\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 82,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 305,
        "startLineNumber" : 979,
        "startColumnNumber" : 39,
        "endLineNumber" : 989,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (((c[i] >= '0') && (c[i] <= '9')) || ((c[i] >= 'a') && (c[i] <= 'z')) || ((c[i] >= 'A') && (c[i] <= 'Z'))|| ((i > 0) && (c[i] == '-'))|| ((i > 0) && (c[i] == '.'))) {\n    buffer.append(c[i]);\n  }\n else {\n    buffer.append('_');\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 340,
        "startLineNumber" : 979,
        "startColumnNumber" : 4,
        "endLineNumber" : 989,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < c.length; i++) {\n  if (((c[i] >= '0') && (c[i] <= '9')) || ((c[i] >= 'a') && (c[i] <= 'z')) || ((c[i] >= 'A') && (c[i] <= 'Z'))|| ((i > 0) && (c[i] == '-'))|| ((i > 0) && (c[i] == '.'))) {\n    buffer.append(c[i]);\n  }\n else {\n    buffer.append('_');\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 96,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1033,
        "startLineNumber" : 971,
        "startColumnNumber" : 53,
        "endLineNumber" : 1000,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  char c[]=origName.toCharArray();\n  StringBuffer buffer=new StringBuffer();\n  if ((c[0] >= '0') && (c[0] <= '9')) {\n    buffer.append('_');\n  }\n  for (int i=0; i < c.length; i++) {\n    if (((c[i] >= '0') && (c[i] <= '9')) || ((c[i] >= 'a') && (c[i] <= 'z')) || ((c[i] >= 'A') && (c[i] <= 'Z'))|| ((i > 0) && (c[i] == '-'))|| ((i > 0) && (c[i] == '.'))) {\n      buffer.append(c[i]);\n    }\n else {\n      buffer.append('_');\n    }\n  }\n  if (buffer.length() > 63) {\n    buffer.setLength(63);\n  }\n  return buffer.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 149,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1759,
        "startLineNumber" : 958,
        "startColumnNumber" : 2,
        "endLineNumber" : 1000,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Produce a sanitized name that fits our standards for likely to work. <p/> Java classes have a wider range of names that are technically allowed (supposedly any Unicode name) than what we support. The reason for going more narrow is to avoid situations with text encodings and converting during the process of moving files between operating systems, i.e. uploading from a Windows machine to a Linux server, or reading a FAT32 partition in OS X and using a thumb drive. <p/> This helper function replaces everything but A-Z, a-z, and 0-9 with underscores. Also disallows starting the sketch name with a digit.\n */\nstatic public String sanitizeName(String origName){\n  char c[]=origName.toCharArray();\n  StringBuffer buffer=new StringBuffer();\n  if ((c[0] >= '0') && (c[0] <= '9')) {\n    buffer.append('_');\n  }\n  for (int i=0; i < c.length; i++) {\n    if (((c[i] >= '0') && (c[i] <= '9')) || ((c[i] >= 'a') && (c[i] <= 'z')) || ((c[i] >= 'A') && (c[i] <= 'Z'))|| ((i > 0) && (c[i] == '-'))|| ((i > 0) && (c[i] == '.'))) {\n      buffer.append(c[i]);\n    }\n else {\n      buffer.append('_');\n    }\n  }\n  if (buffer.length() > 63) {\n    buffer.setLength(63);\n  }\n  return buffer.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 160,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 981,
        "startColumnNumber" : 10,
        "endLineNumber" : 981,
        "endColumnNumber" : 42
      },
      "nodeContext" : "((c[i] >= 'a') && (c[i] <= 'z'))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 9,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 981,
    "startColumnNumber" : 11,
    "endLineNumber" : 981,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}