{
  "id" : 245,
  "expression" : "Integer",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-server/src/main/java/com/netflix/eureka2/server/config/EurekaCommandLineParser.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Integer",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 82,
      "startColumnNumber" : 37,
      "endLineNumber" : 82,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 82,
        "startColumnNumber" : 37,
        "endLineNumber" : 82,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Integer.parseInt(cli.getOptionValue(\"s\",\"7700\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 82,
        "startColumnNumber" : 12,
        "endLineNumber" : 82,
        "endColumnNumber" : 87
      },
      "nodeContext" : "builder.withShutDownPort(Integer.parseInt(cli.getOptionValue(\"s\",\"7700\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 82,
        "startColumnNumber" : 12,
        "endLineNumber" : 82,
        "endColumnNumber" : 88
      },
      "nodeContext" : "builder.withShutDownPort(Integer.parseInt(cli.getOptionValue(\"s\",\"7700\")));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1676,
        "startLineNumber" : 59,
        "startColumnNumber" : 25,
        "endLineNumber" : 89,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  builder.withVipAddress(cli.getOptionValue(\"n\"));\n  builder.withDataCenterType(DataCenterType.valueOf(cli.getOptionValue(\"d\",\"Basic\")));\n  if (resolverRequired || !cli.getArgList().isEmpty()) {\n    String resolverType=cli.getOptionValue(\"q\",\"fixed\");\n    builder.withResolverType(resolverType);\nswitch (resolverType) {\ncase \"dns\":      if (cli.getArgList().size() != 1) {\n        throw new IllegalArgumentException(\"provide Eureka Write cluster <domain_name:reg:disc:repl> as parameter\");\n      }\n    break;\ncase \"fixed\":  if (cli.getArgList().size() < 1) {\n    throw new IllegalArgumentException(\"provide Eureka Write cluster server <addresse:reg:disc:repl>s as parameter list\");\n  }\nbreak;\ndefault:throw new IllegalArgumentException(\"resolver type not defined ('-q dns|fixed')\");\n}\n}\nbuilder.withShutDownPort(Integer.parseInt(cli.getOptionValue(\"s\",\"7700\")));\nif (!cli.hasOption(\"n\")) {\nthrow new IllegalArgumentException(\"missing required server name option ('-n <server_name>')\");\n}\nbuilder.withAppName(cli.getOptionValue(\"n\"));\nbuilder.withWebAdminPort(Integer.parseInt(cli.getOptionValue(\"a\",\"8077\")));\nbuilder.withServerList((((List<String>)cli.getArgList()).toArray(new String[cli.getArgList().size()])));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 159,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1693,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!helpOption) {\n  builder.withVipAddress(cli.getOptionValue(\"n\"));\n  builder.withDataCenterType(DataCenterType.valueOf(cli.getOptionValue(\"d\",\"Basic\")));\n  if (resolverRequired || !cli.getArgList().isEmpty()) {\n    String resolverType=cli.getOptionValue(\"q\",\"fixed\");\n    builder.withResolverType(resolverType);\nswitch (resolverType) {\ncase \"dns\":      if (cli.getArgList().size() != 1) {\n        throw new IllegalArgumentException(\"provide Eureka Write cluster <domain_name:reg:disc:repl> as parameter\");\n      }\n    break;\ncase \"fixed\":  if (cli.getArgList().size() < 1) {\n    throw new IllegalArgumentException(\"provide Eureka Write cluster server <addresse:reg:disc:repl>s as parameter list\");\n  }\nbreak;\ndefault:throw new IllegalArgumentException(\"resolver type not defined ('-q dns|fixed')\");\n}\n}\nbuilder.withShutDownPort(Integer.parseInt(cli.getOptionValue(\"s\",\"7700\")));\nif (!cli.hasOption(\"n\")) {\nthrow new IllegalArgumentException(\"missing required server name option ('-n <server_name>')\");\n}\nbuilder.withAppName(cli.getOptionValue(\"n\"));\nbuilder.withWebAdminPort(Integer.parseInt(cli.getOptionValue(\"a\",\"8077\")));\nbuilder.withServerList((((List<String>)cli.getArgList()).toArray(new String[cli.getArgList().size()])));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 162,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1750,
        "startLineNumber" : 57,
        "startColumnNumber" : 44,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  helpOption=cli.hasOption('h');\n  if (!helpOption) {\n    builder.withVipAddress(cli.getOptionValue(\"n\"));\n    builder.withDataCenterType(DataCenterType.valueOf(cli.getOptionValue(\"d\",\"Basic\")));\n    if (resolverRequired || !cli.getArgList().isEmpty()) {\n      String resolverType=cli.getOptionValue(\"q\",\"fixed\");\n      builder.withResolverType(resolverType);\nswitch (resolverType) {\ncase \"dns\":        if (cli.getArgList().size() != 1) {\n          throw new IllegalArgumentException(\"provide Eureka Write cluster <domain_name:reg:disc:repl> as parameter\");\n        }\n      break;\ncase \"fixed\":    if (cli.getArgList().size() < 1) {\n      throw new IllegalArgumentException(\"provide Eureka Write cluster server <addresse:reg:disc:repl>s as parameter list\");\n    }\n  break;\ndefault:throw new IllegalArgumentException(\"resolver type not defined ('-q dns|fixed')\");\n}\n}\nbuilder.withShutDownPort(Integer.parseInt(cli.getOptionValue(\"s\",\"7700\")));\nif (!cli.hasOption(\"n\")) {\nthrow new IllegalArgumentException(\"missing required server name option ('-n <server_name>')\");\n}\nbuilder.withAppName(cli.getOptionValue(\"n\"));\nbuilder.withWebAdminPort(Integer.parseInt(cli.getOptionValue(\"a\",\"8077\")));\nbuilder.withServerList((((List<String>)cli.getArgList()).toArray(new String[cli.getArgList().size()])));\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1825,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") protected void process(CommandLine cli){\n  helpOption=cli.hasOption('h');\n  if (!helpOption) {\n    builder.withVipAddress(cli.getOptionValue(\"n\"));\n    builder.withDataCenterType(DataCenterType.valueOf(cli.getOptionValue(\"d\",\"Basic\")));\n    if (resolverRequired || !cli.getArgList().isEmpty()) {\n      String resolverType=cli.getOptionValue(\"q\",\"fixed\");\n      builder.withResolverType(resolverType);\nswitch (resolverType) {\ncase \"dns\":        if (cli.getArgList().size() != 1) {\n          throw new IllegalArgumentException(\"provide Eureka Write cluster <domain_name:reg:disc:repl> as parameter\");\n        }\n      break;\ncase \"fixed\":    if (cli.getArgList().size() < 1) {\n      throw new IllegalArgumentException(\"provide Eureka Write cluster server <addresse:reg:disc:repl>s as parameter list\");\n    }\n  break;\ndefault:throw new IllegalArgumentException(\"resolver type not defined ('-q dns|fixed')\");\n}\n}\nbuilder.withShutDownPort(Integer.parseInt(cli.getOptionValue(\"s\",\"7700\")));\nif (!cli.hasOption(\"n\")) {\nthrow new IllegalArgumentException(\"missing required server name option ('-n <server_name>')\");\n}\nbuilder.withAppName(cli.getOptionValue(\"n\"));\nbuilder.withWebAdminPort(Integer.parseInt(cli.getOptionValue(\"a\",\"8077\")));\nbuilder.withServerList((((List<String>)cli.getArgList()).toArray(new String[cli.getArgList().size()])));\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 181,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 82,
        "startColumnNumber" : 12,
        "endLineNumber" : 82,
        "endColumnNumber" : 88
      },
      "nodeContext" : "builder.withShutDownPort(Integer.parseInt(cli.getOptionValue(\"s\",\"7700\")));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Integer"
  }, {
    "nodeContext" : "Integer",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 87,
      "startColumnNumber" : 37,
      "endLineNumber" : 87,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 87,
        "startColumnNumber" : 37,
        "endLineNumber" : 87,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Integer.parseInt(cli.getOptionValue(\"a\",\"8077\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 87,
        "startColumnNumber" : 12,
        "endLineNumber" : 87,
        "endColumnNumber" : 87
      },
      "nodeContext" : "builder.withWebAdminPort(Integer.parseInt(cli.getOptionValue(\"a\",\"8077\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 87,
        "startColumnNumber" : 12,
        "endLineNumber" : 87,
        "endColumnNumber" : 88
      },
      "nodeContext" : "builder.withWebAdminPort(Integer.parseInt(cli.getOptionValue(\"a\",\"8077\")));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1676,
        "startLineNumber" : 59,
        "startColumnNumber" : 25,
        "endLineNumber" : 89,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  builder.withVipAddress(cli.getOptionValue(\"n\"));\n  builder.withDataCenterType(DataCenterType.valueOf(cli.getOptionValue(\"d\",\"Basic\")));\n  if (resolverRequired || !cli.getArgList().isEmpty()) {\n    String resolverType=cli.getOptionValue(\"q\",\"fixed\");\n    builder.withResolverType(resolverType);\nswitch (resolverType) {\ncase \"dns\":      if (cli.getArgList().size() != 1) {\n        throw new IllegalArgumentException(\"provide Eureka Write cluster <domain_name:reg:disc:repl> as parameter\");\n      }\n    break;\ncase \"fixed\":  if (cli.getArgList().size() < 1) {\n    throw new IllegalArgumentException(\"provide Eureka Write cluster server <addresse:reg:disc:repl>s as parameter list\");\n  }\nbreak;\ndefault:throw new IllegalArgumentException(\"resolver type not defined ('-q dns|fixed')\");\n}\n}\nbuilder.withShutDownPort(Integer.parseInt(cli.getOptionValue(\"s\",\"7700\")));\nif (!cli.hasOption(\"n\")) {\nthrow new IllegalArgumentException(\"missing required server name option ('-n <server_name>')\");\n}\nbuilder.withAppName(cli.getOptionValue(\"n\"));\nbuilder.withWebAdminPort(Integer.parseInt(cli.getOptionValue(\"a\",\"8077\")));\nbuilder.withServerList((((List<String>)cli.getArgList()).toArray(new String[cli.getArgList().size()])));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 159,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1693,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!helpOption) {\n  builder.withVipAddress(cli.getOptionValue(\"n\"));\n  builder.withDataCenterType(DataCenterType.valueOf(cli.getOptionValue(\"d\",\"Basic\")));\n  if (resolverRequired || !cli.getArgList().isEmpty()) {\n    String resolverType=cli.getOptionValue(\"q\",\"fixed\");\n    builder.withResolverType(resolverType);\nswitch (resolverType) {\ncase \"dns\":      if (cli.getArgList().size() != 1) {\n        throw new IllegalArgumentException(\"provide Eureka Write cluster <domain_name:reg:disc:repl> as parameter\");\n      }\n    break;\ncase \"fixed\":  if (cli.getArgList().size() < 1) {\n    throw new IllegalArgumentException(\"provide Eureka Write cluster server <addresse:reg:disc:repl>s as parameter list\");\n  }\nbreak;\ndefault:throw new IllegalArgumentException(\"resolver type not defined ('-q dns|fixed')\");\n}\n}\nbuilder.withShutDownPort(Integer.parseInt(cli.getOptionValue(\"s\",\"7700\")));\nif (!cli.hasOption(\"n\")) {\nthrow new IllegalArgumentException(\"missing required server name option ('-n <server_name>')\");\n}\nbuilder.withAppName(cli.getOptionValue(\"n\"));\nbuilder.withWebAdminPort(Integer.parseInt(cli.getOptionValue(\"a\",\"8077\")));\nbuilder.withServerList((((List<String>)cli.getArgList()).toArray(new String[cli.getArgList().size()])));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 162,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1750,
        "startLineNumber" : 57,
        "startColumnNumber" : 44,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  helpOption=cli.hasOption('h');\n  if (!helpOption) {\n    builder.withVipAddress(cli.getOptionValue(\"n\"));\n    builder.withDataCenterType(DataCenterType.valueOf(cli.getOptionValue(\"d\",\"Basic\")));\n    if (resolverRequired || !cli.getArgList().isEmpty()) {\n      String resolverType=cli.getOptionValue(\"q\",\"fixed\");\n      builder.withResolverType(resolverType);\nswitch (resolverType) {\ncase \"dns\":        if (cli.getArgList().size() != 1) {\n          throw new IllegalArgumentException(\"provide Eureka Write cluster <domain_name:reg:disc:repl> as parameter\");\n        }\n      break;\ncase \"fixed\":    if (cli.getArgList().size() < 1) {\n      throw new IllegalArgumentException(\"provide Eureka Write cluster server <addresse:reg:disc:repl>s as parameter list\");\n    }\n  break;\ndefault:throw new IllegalArgumentException(\"resolver type not defined ('-q dns|fixed')\");\n}\n}\nbuilder.withShutDownPort(Integer.parseInt(cli.getOptionValue(\"s\",\"7700\")));\nif (!cli.hasOption(\"n\")) {\nthrow new IllegalArgumentException(\"missing required server name option ('-n <server_name>')\");\n}\nbuilder.withAppName(cli.getOptionValue(\"n\"));\nbuilder.withWebAdminPort(Integer.parseInt(cli.getOptionValue(\"a\",\"8077\")));\nbuilder.withServerList((((List<String>)cli.getArgList()).toArray(new String[cli.getArgList().size()])));\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1825,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") protected void process(CommandLine cli){\n  helpOption=cli.hasOption('h');\n  if (!helpOption) {\n    builder.withVipAddress(cli.getOptionValue(\"n\"));\n    builder.withDataCenterType(DataCenterType.valueOf(cli.getOptionValue(\"d\",\"Basic\")));\n    if (resolverRequired || !cli.getArgList().isEmpty()) {\n      String resolverType=cli.getOptionValue(\"q\",\"fixed\");\n      builder.withResolverType(resolverType);\nswitch (resolverType) {\ncase \"dns\":        if (cli.getArgList().size() != 1) {\n          throw new IllegalArgumentException(\"provide Eureka Write cluster <domain_name:reg:disc:repl> as parameter\");\n        }\n      break;\ncase \"fixed\":    if (cli.getArgList().size() < 1) {\n      throw new IllegalArgumentException(\"provide Eureka Write cluster server <addresse:reg:disc:repl>s as parameter list\");\n    }\n  break;\ndefault:throw new IllegalArgumentException(\"resolver type not defined ('-q dns|fixed')\");\n}\n}\nbuilder.withShutDownPort(Integer.parseInt(cli.getOptionValue(\"s\",\"7700\")));\nif (!cli.hasOption(\"n\")) {\nthrow new IllegalArgumentException(\"missing required server name option ('-n <server_name>')\");\n}\nbuilder.withAppName(cli.getOptionValue(\"n\"));\nbuilder.withWebAdminPort(Integer.parseInt(cli.getOptionValue(\"a\",\"8077\")));\nbuilder.withServerList((((List<String>)cli.getArgList()).toArray(new String[cli.getArgList().size()])));\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 181,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 87,
        "startColumnNumber" : 12,
        "endLineNumber" : 87,
        "endColumnNumber" : 88
      },
      "nodeContext" : "builder.withWebAdminPort(Integer.parseInt(cli.getOptionValue(\"a\",\"8077\")));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Integer"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 82,
    "startColumnNumber" : 37,
    "endLineNumber" : 82,
    "endColumnNumber" : 44
  }, {
    "charLength" : 7,
    "startLineNumber" : 87,
    "startColumnNumber" : 37,
    "endLineNumber" : 87,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}