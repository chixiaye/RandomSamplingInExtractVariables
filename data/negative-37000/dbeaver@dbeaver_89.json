{
  "id" : 89,
  "expression" : "metaData.supportsCatalogsInTableDefinitions() ? SQLDialect.USAGE_DDL : 0",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/impl/jdbc/JDBCSQLDialect.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "metaData.supportsCatalogsInTableDefinitions() ? SQLDialect.USAGE_DDL : 0",
    "nodeType" : "ConditionalExpression",
    "nodePosition" : {
      "charLength" : 72,
      "startLineNumber" : 168,
      "startColumnNumber" : 21,
      "endLineNumber" : 168,
      "endColumnNumber" : 93
    },
    "astNodeNumber" : 8,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 168,
        "startColumnNumber" : 20,
        "endLineNumber" : 168,
        "endColumnNumber" : 94
      },
      "nodeContext" : "(metaData.supportsCatalogsInTableDefinitions() ? SQLDialect.USAGE_DDL : 0)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 472,
        "startLineNumber" : 167,
        "startColumnNumber" : 16,
        "endLineNumber" : 171,
        "endColumnNumber" : 99
      },
      "nodeContext" : "(metaData.supportsCatalogsInDataManipulation() ? SQLDialect.USAGE_DML : 0) | (metaData.supportsCatalogsInTableDefinitions() ? SQLDialect.USAGE_DDL : 0) | (metaData.supportsCatalogsInProcedureCalls() ? SQLDialect.USAGE_PROC : 0)| (metaData.supportsCatalogsInIndexDefinitions() ? SQLDialect.USAGE_INDEX : 0)| (metaData.supportsCatalogsInPrivilegeDefinitions() ? SQLDialect.USAGE_PRIV : 0)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 46,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 504,
        "startLineNumber" : 166,
        "startColumnNumber" : 12,
        "endLineNumber" : 171,
        "endColumnNumber" : 99
      },
      "nodeContext" : "catalogUsage=(metaData.supportsCatalogsInDataManipulation() ? SQLDialect.USAGE_DML : 0) | (metaData.supportsCatalogsInTableDefinitions() ? SQLDialect.USAGE_DDL : 0) | (metaData.supportsCatalogsInProcedureCalls() ? SQLDialect.USAGE_PROC : 0)| (metaData.supportsCatalogsInIndexDefinitions() ? SQLDialect.USAGE_INDEX : 0)| (metaData.supportsCatalogsInPrivilegeDefinitions() ? SQLDialect.USAGE_PRIV : 0)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 48,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 505,
        "startLineNumber" : 166,
        "startColumnNumber" : 12,
        "endLineNumber" : 171,
        "endColumnNumber" : 100
      },
      "nodeContext" : "catalogUsage=(metaData.supportsCatalogsInDataManipulation() ? SQLDialect.USAGE_DML : 0) | (metaData.supportsCatalogsInTableDefinitions() ? SQLDialect.USAGE_DDL : 0) | (metaData.supportsCatalogsInProcedureCalls() ? SQLDialect.USAGE_PROC : 0)| (metaData.supportsCatalogsInIndexDefinitions() ? SQLDialect.USAGE_INDEX : 0)| (metaData.supportsCatalogsInPrivilegeDefinitions() ? SQLDialect.USAGE_PRIV : 0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 49,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 531,
        "startLineNumber" : 165,
        "startColumnNumber" : 12,
        "endLineNumber" : 172,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  catalogUsage=(metaData.supportsCatalogsInDataManipulation() ? SQLDialect.USAGE_DML : 0) | (metaData.supportsCatalogsInTableDefinitions() ? SQLDialect.USAGE_DDL : 0) | (metaData.supportsCatalogsInProcedureCalls() ? SQLDialect.USAGE_PROC : 0)| (metaData.supportsCatalogsInIndexDefinitions() ? SQLDialect.USAGE_INDEX : 0)| (metaData.supportsCatalogsInPrivilegeDefinitions() ? SQLDialect.USAGE_PRIV : 0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 691,
        "startLineNumber" : 165,
        "startColumnNumber" : 8,
        "endLineNumber" : 175,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  catalogUsage=(metaData.supportsCatalogsInDataManipulation() ? SQLDialect.USAGE_DML : 0) | (metaData.supportsCatalogsInTableDefinitions() ? SQLDialect.USAGE_DDL : 0) | (metaData.supportsCatalogsInProcedureCalls() ? SQLDialect.USAGE_PROC : 0)| (metaData.supportsCatalogsInIndexDefinitions() ? SQLDialect.USAGE_INDEX : 0)| (metaData.supportsCatalogsInPrivilegeDefinitions() ? SQLDialect.USAGE_PRIV : 0);\n}\n catch (Throwable e) {\n  log.debug(\"Error getting catalogUsage:\" + e.getMessage());\n  catalogUsage=SQLDialect.USAGE_NONE;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 72,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6206,
        "startLineNumber" : 69,
        "startColumnNumber" : 93,
        "endLineNumber" : 207,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String singleQuoteStr;\n  try {\n    singleQuoteStr=metaData.getIdentifierQuoteString();\n  }\n catch (  Throwable e) {\n    log.debug(\"Error getting identifierQuoteString: \" + e.getMessage());\n    singleQuoteStr=SQLConstants.DEFAULT_IDENTIFIER_QUOTE;\n  }\n  if (singleQuoteStr != null) {\n    singleQuoteStr=singleQuoteStr.trim();\n    if (singleQuoteStr.isEmpty()) {\n      singleQuoteStr=null;\n    }\n  }\n  if (singleQuoteStr == null) {\n    identifierQuoteString=new String[0][];\n  }\n else {\n    identifierQuoteString=new String[][]{{singleQuoteStr,singleQuoteStr}};\n  }\n  try {\nswitch (metaData.getSQLStateType()) {\ncase DatabaseMetaData.sqlStateXOpen:      this.sqlStateType=SQLStateType.XOPEN;\n    break;\ncase DatabaseMetaData.sqlStateSQL99:  this.sqlStateType=SQLStateType.SQL99;\nbreak;\ndefault:this.sqlStateType=SQLStateType.UNKNOWN;\nbreak;\n}\n}\n catch (Throwable e) {\nlog.debug(\"Error getting sqlStateType: \" + e.getMessage());\nthis.sqlStateType=SQLStateType.UNKNOWN;\n}\ntry {\nsupportsSubqueries=metaData.supportsCorrelatedSubqueries();\n}\n catch (Throwable e) {\nlog.debug(\"Error getting supportsSubqueries: \" + e.getMessage());\n}\ntry {\nthis.supportsUnquotedMixedCase=metaData.supportsMixedCaseIdentifiers();\n}\n catch (Throwable e) {\nlog.debug(\"Error getting supportsUnquotedMixedCase:\" + e.getMessage());\nthis.supportsUnquotedMixedCase=false;\n}\ntry {\nthis.supportsQuotedMixedCase=metaData.supportsMixedCaseQuotedIdentifiers();\n}\n catch (Throwable e) {\nlog.debug(\"Error getting supportsQuotedMixedCase: \" + e.getMessage());\nthis.supportsQuotedMixedCase=false;\n}\ntry {\nif (metaData.storesUpperCaseIdentifiers()) {\nthis.unquotedIdentCase=DBPIdentifierCase.UPPER;\n}\n else if (metaData.storesLowerCaseIdentifiers()) {\nthis.unquotedIdentCase=DBPIdentifierCase.LOWER;\n}\n else {\nthis.unquotedIdentCase=DBPIdentifierCase.MIXED;\n}\n}\n catch (Throwable e) {\nlog.debug(\"Error getting unquotedIdentCase:\" + e.getMessage());\nthis.unquotedIdentCase=DBPIdentifierCase.MIXED;\n}\ntry {\nif (metaData.storesUpperCaseQuotedIdentifiers()) {\nthis.quotedIdentCase=DBPIdentifierCase.UPPER;\n}\n else if (metaData.storesLowerCaseQuotedIdentifiers()) {\nthis.quotedIdentCase=DBPIdentifierCase.LOWER;\n}\n else {\nthis.quotedIdentCase=DBPIdentifierCase.MIXED;\n}\n}\n catch (Throwable e) {\nlog.debug(\"Error getting quotedIdentCase:\" + e.getMessage());\nthis.quotedIdentCase=DBPIdentifierCase.MIXED;\n}\ntry {\nthis.searchStringEscape=metaData.getSearchStringEscape();\n}\n catch (Throwable e) {\nlog.debug(\"Error getting searchStringEscape:\" + e.getMessage());\n}\nif (this.searchStringEscape == null) {\nthis.searchStringEscape=\"\";\n}\ntry {\nthis.catalogSeparator=metaData.getCatalogSeparator();\nif (CommonUtils.isEmpty(this.catalogSeparator)) {\nthis.catalogSeparator=String.valueOf(SQLConstants.STRUCT_SEPARATOR);\n}\n}\n catch (Throwable e) {\nlog.debug(\"Error getting catalogSeparator:\" + e.getMessage());\nthis.catalogSeparator=String.valueOf(SQLConstants.STRUCT_SEPARATOR);\n}\ntry {\ncatalogUsage=(metaData.supportsCatalogsInDataManipulation() ? SQLDialect.USAGE_DML : 0) | (metaData.supportsCatalogsInTableDefinitions() ? SQLDialect.USAGE_DDL : 0) | (metaData.supportsCatalogsInProcedureCalls() ? SQLDialect.USAGE_PROC : 0)| (metaData.supportsCatalogsInIndexDefinitions() ? SQLDialect.USAGE_INDEX : 0)| (metaData.supportsCatalogsInPrivilegeDefinitions() ? SQLDialect.USAGE_PRIV : 0);\n}\n catch (Throwable e) {\nlog.debug(\"Error getting catalogUsage:\" + e.getMessage());\ncatalogUsage=SQLDialect.USAGE_NONE;\n}\ntry {\nschemaUsage=(metaData.supportsSchemasInDataManipulation() ? SQLDialect.USAGE_DML : 0) | (metaData.supportsSchemasInTableDefinitions() ? SQLDialect.USAGE_DDL : 0) | (metaData.supportsSchemasInProcedureCalls() ? SQLDialect.USAGE_PROC : 0)| (metaData.supportsSchemasInIndexDefinitions() ? SQLDialect.USAGE_INDEX : 0)| (metaData.supportsSchemasInPrivilegeDefinitions() ? SQLDialect.USAGE_PRIV : 0);\n}\n catch (Throwable e) {\nlog.debug(\"Error getting schemaUsage:\" + e.getMessage());\nschemaUsage=SQLDialect.USAGE_DDL | SQLDialect.USAGE_DML;\n}\ntry {\nvalidCharacters=metaData.getExtraNameCharacters();\nif (validCharacters == null) {\nvalidCharacters=\"\";\n}\n else {\nvalidCharacters=validCharacters.trim();\n}\n}\n catch (Throwable e) {\nlog.debug(\"Error getting validCharacters:\" + e.getMessage());\nvalidCharacters=\"\";\n}\ntry {\nthis.isCatalogAtStart=metaData.isCatalogAtStart();\n}\n catch (Throwable e) {\nlog.debug(\"Error getting isCatalogAtStart:\" + e.getMessage());\nthis.isCatalogAtStart=true;\n}\nloadDriverKeywords(metaData);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 673,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 6295,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 207,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void initDriverSettings(JDBCDataSource dataSource,JDBCDatabaseMetaData metaData){\n  String singleQuoteStr;\n  try {\n    singleQuoteStr=metaData.getIdentifierQuoteString();\n  }\n catch (  Throwable e) {\n    log.debug(\"Error getting identifierQuoteString: \" + e.getMessage());\n    singleQuoteStr=SQLConstants.DEFAULT_IDENTIFIER_QUOTE;\n  }\n  if (singleQuoteStr != null) {\n    singleQuoteStr=singleQuoteStr.trim();\n    if (singleQuoteStr.isEmpty()) {\n      singleQuoteStr=null;\n    }\n  }\n  if (singleQuoteStr == null) {\n    identifierQuoteString=new String[0][];\n  }\n else {\n    identifierQuoteString=new String[][]{{singleQuoteStr,singleQuoteStr}};\n  }\n  try {\nswitch (metaData.getSQLStateType()) {\ncase DatabaseMetaData.sqlStateXOpen:      this.sqlStateType=SQLStateType.XOPEN;\n    break;\ncase DatabaseMetaData.sqlStateSQL99:  this.sqlStateType=SQLStateType.SQL99;\nbreak;\ndefault:this.sqlStateType=SQLStateType.UNKNOWN;\nbreak;\n}\n}\n catch (Throwable e) {\nlog.debug(\"Error getting sqlStateType: \" + e.getMessage());\nthis.sqlStateType=SQLStateType.UNKNOWN;\n}\ntry {\nsupportsSubqueries=metaData.supportsCorrelatedSubqueries();\n}\n catch (Throwable e) {\nlog.debug(\"Error getting supportsSubqueries: \" + e.getMessage());\n}\ntry {\nthis.supportsUnquotedMixedCase=metaData.supportsMixedCaseIdentifiers();\n}\n catch (Throwable e) {\nlog.debug(\"Error getting supportsUnquotedMixedCase:\" + e.getMessage());\nthis.supportsUnquotedMixedCase=false;\n}\ntry {\nthis.supportsQuotedMixedCase=metaData.supportsMixedCaseQuotedIdentifiers();\n}\n catch (Throwable e) {\nlog.debug(\"Error getting supportsQuotedMixedCase: \" + e.getMessage());\nthis.supportsQuotedMixedCase=false;\n}\ntry {\nif (metaData.storesUpperCaseIdentifiers()) {\nthis.unquotedIdentCase=DBPIdentifierCase.UPPER;\n}\n else if (metaData.storesLowerCaseIdentifiers()) {\nthis.unquotedIdentCase=DBPIdentifierCase.LOWER;\n}\n else {\nthis.unquotedIdentCase=DBPIdentifierCase.MIXED;\n}\n}\n catch (Throwable e) {\nlog.debug(\"Error getting unquotedIdentCase:\" + e.getMessage());\nthis.unquotedIdentCase=DBPIdentifierCase.MIXED;\n}\ntry {\nif (metaData.storesUpperCaseQuotedIdentifiers()) {\nthis.quotedIdentCase=DBPIdentifierCase.UPPER;\n}\n else if (metaData.storesLowerCaseQuotedIdentifiers()) {\nthis.quotedIdentCase=DBPIdentifierCase.LOWER;\n}\n else {\nthis.quotedIdentCase=DBPIdentifierCase.MIXED;\n}\n}\n catch (Throwable e) {\nlog.debug(\"Error getting quotedIdentCase:\" + e.getMessage());\nthis.quotedIdentCase=DBPIdentifierCase.MIXED;\n}\ntry {\nthis.searchStringEscape=metaData.getSearchStringEscape();\n}\n catch (Throwable e) {\nlog.debug(\"Error getting searchStringEscape:\" + e.getMessage());\n}\nif (this.searchStringEscape == null) {\nthis.searchStringEscape=\"\";\n}\ntry {\nthis.catalogSeparator=metaData.getCatalogSeparator();\nif (CommonUtils.isEmpty(this.catalogSeparator)) {\nthis.catalogSeparator=String.valueOf(SQLConstants.STRUCT_SEPARATOR);\n}\n}\n catch (Throwable e) {\nlog.debug(\"Error getting catalogSeparator:\" + e.getMessage());\nthis.catalogSeparator=String.valueOf(SQLConstants.STRUCT_SEPARATOR);\n}\ntry {\ncatalogUsage=(metaData.supportsCatalogsInDataManipulation() ? SQLDialect.USAGE_DML : 0) | (metaData.supportsCatalogsInTableDefinitions() ? SQLDialect.USAGE_DDL : 0) | (metaData.supportsCatalogsInProcedureCalls() ? SQLDialect.USAGE_PROC : 0)| (metaData.supportsCatalogsInIndexDefinitions() ? SQLDialect.USAGE_INDEX : 0)| (metaData.supportsCatalogsInPrivilegeDefinitions() ? SQLDialect.USAGE_PRIV : 0);\n}\n catch (Throwable e) {\nlog.debug(\"Error getting catalogUsage:\" + e.getMessage());\ncatalogUsage=SQLDialect.USAGE_NONE;\n}\ntry {\nschemaUsage=(metaData.supportsSchemasInDataManipulation() ? SQLDialect.USAGE_DML : 0) | (metaData.supportsSchemasInTableDefinitions() ? SQLDialect.USAGE_DDL : 0) | (metaData.supportsSchemasInProcedureCalls() ? SQLDialect.USAGE_PROC : 0)| (metaData.supportsSchemasInIndexDefinitions() ? SQLDialect.USAGE_INDEX : 0)| (metaData.supportsSchemasInPrivilegeDefinitions() ? SQLDialect.USAGE_PRIV : 0);\n}\n catch (Throwable e) {\nlog.debug(\"Error getting schemaUsage:\" + e.getMessage());\nschemaUsage=SQLDialect.USAGE_DDL | SQLDialect.USAGE_DML;\n}\ntry {\nvalidCharacters=metaData.getExtraNameCharacters();\nif (validCharacters == null) {\nvalidCharacters=\"\";\n}\n else {\nvalidCharacters=validCharacters.trim();\n}\n}\n catch (Throwable e) {\nlog.debug(\"Error getting validCharacters:\" + e.getMessage());\nvalidCharacters=\"\";\n}\ntry {\nthis.isCatalogAtStart=metaData.isCatalogAtStart();\n}\n catch (Throwable e) {\nlog.debug(\"Error getting isCatalogAtStart:\" + e.getMessage());\nthis.isCatalogAtStart=true;\n}\nloadDriverKeywords(metaData);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 685,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 168,
        "startColumnNumber" : 20,
        "endLineNumber" : 168,
        "endColumnNumber" : 94
      },
      "nodeContext" : "(metaData.supportsCatalogsInTableDefinitions() ? SQLDialect.USAGE_DDL : 0)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 6,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 72,
    "startLineNumber" : 168,
    "startColumnNumber" : 21,
    "endLineNumber" : 168,
    "endColumnNumber" : 93
  } ],
  "layoutRelationDataList" : [ ]
}