{
  "id" : 475,
  "expression" : "\"theUnsafe\"",
  "projectName" : "google@gson",
  "commitID" : "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
  "filePath" : "/gson/src/main/java/com/google/gson/internal/UnsafeAllocator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"theUnsafe\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 40,
      "startColumnNumber" : 45,
      "endLineNumber" : 40,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 40,
        "startColumnNumber" : 16,
        "endLineNumber" : 40,
        "endColumnNumber" : 57
      },
      "nodeContext" : "unsafeClass.getDeclaredField(\"theUnsafe\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 40,
        "startColumnNumber" : 12,
        "endLineNumber" : 40,
        "endColumnNumber" : 57
      },
      "nodeContext" : "f=unsafeClass.getDeclaredField(\"theUnsafe\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 40,
        "startColumnNumber" : 6,
        "endLineNumber" : 40,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Field f=unsafeClass.getDeclaredField(\"theUnsafe\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 527,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Class<?> unsafeClass=Class.forName(\"sun.misc.Unsafe\");\n  Field f=unsafeClass.getDeclaredField(\"theUnsafe\");\n  f.setAccessible(true);\n  final Object unsafe=f.get(null);\n  final Method allocateInstance=unsafeClass.getMethod(\"allocateInstance\",Class.class);\n  return new UnsafeAllocator(){\n    @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(    Class<T> c) throws Exception {\n      return (T)allocateInstance.invoke(unsafe,c);\n    }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 565,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  Class<?> unsafeClass=Class.forName(\"sun.misc.Unsafe\");\n  Field f=unsafeClass.getDeclaredField(\"theUnsafe\");\n  f.setAccessible(true);\n  final Object unsafe=f.get(null);\n  final Method allocateInstance=unsafeClass.getMethod(\"allocateInstance\",Class.class);\n  return new UnsafeAllocator(){\n    @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(    Class<T> c) throws Exception {\n      return (T)allocateInstance.invoke(unsafe,c);\n    }\n  }\n;\n}\n catch (Exception ignored) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 92,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2502,
        "startLineNumber" : 33,
        "startColumnNumber" : 41,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    Class<?> unsafeClass=Class.forName(\"sun.misc.Unsafe\");\n    Field f=unsafeClass.getDeclaredField(\"theUnsafe\");\n    f.setAccessible(true);\n    final Object unsafe=f.get(null);\n    final Method allocateInstance=unsafeClass.getMethod(\"allocateInstance\",Class.class);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)allocateInstance.invoke(unsafe,c);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  try {\n    final Method newInstance=ObjectInputStream.class.getDeclaredMethod(\"newInstance\",Class.class,Class.class);\n    newInstance.setAccessible(true);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)newInstance.invoke(null,c,Object.class);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  try {\n    Method getConstructorId=ObjectStreamClass.class.getDeclaredMethod(\"getConstructorId\",Class.class);\n    getConstructorId.setAccessible(true);\n    final int constructorId=(Integer)getConstructorId.invoke(null,Object.class);\n    final Method newInstance=ObjectStreamClass.class.getDeclaredMethod(\"newInstance\",Class.class,int.class);\n    newInstance.setAccessible(true);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)newInstance.invoke(null,c,constructorId);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  return new UnsafeAllocator(){\n    @Override public <T>T newInstance(    Class<T> c){\n      throw new UnsupportedOperationException(\"Cannot allocate \" + c);\n    }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 293,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2541,
        "startLineNumber" : 33,
        "startColumnNumber" : 2,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static UnsafeAllocator create(){\n  try {\n    Class<?> unsafeClass=Class.forName(\"sun.misc.Unsafe\");\n    Field f=unsafeClass.getDeclaredField(\"theUnsafe\");\n    f.setAccessible(true);\n    final Object unsafe=f.get(null);\n    final Method allocateInstance=unsafeClass.getMethod(\"allocateInstance\",Class.class);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)allocateInstance.invoke(unsafe,c);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  try {\n    final Method newInstance=ObjectInputStream.class.getDeclaredMethod(\"newInstance\",Class.class,Class.class);\n    newInstance.setAccessible(true);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)newInstance.invoke(null,c,Object.class);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  try {\n    Method getConstructorId=ObjectStreamClass.class.getDeclaredMethod(\"getConstructorId\",Class.class);\n    getConstructorId.setAccessible(true);\n    final int constructorId=(Integer)getConstructorId.invoke(null,Object.class);\n    final Method newInstance=ObjectStreamClass.class.getDeclaredMethod(\"newInstance\",Class.class,int.class);\n    newInstance.setAccessible(true);\n    return new UnsafeAllocator(){\n      @Override @SuppressWarnings(\"unchecked\") public <T>T newInstance(      Class<T> c) throws Exception {\n        return (T)newInstance.invoke(null,c,constructorId);\n      }\n    }\n;\n  }\n catch (  Exception ignored) {\n  }\n  return new UnsafeAllocator(){\n    @Override public <T>T newInstance(    Class<T> c){\n      throw new UnsupportedOperationException(\"Cannot allocate \" + c);\n    }\n  }\n;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 299,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 40,
        "startColumnNumber" : 6,
        "endLineNumber" : 40,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Field f=unsafeClass.getDeclaredField(\"theUnsafe\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 40,
    "startColumnNumber" : 45,
    "endLineNumber" : 40,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}