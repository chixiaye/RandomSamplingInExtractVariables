{
  "id" : 341,
  "expression" : "t.getMessage()",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-connectors/flink-connector-kafka/src/test/java/org/apache/flink/connector/kafka/source/enumerator/subscriber/KafkaSubscriberTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "t.getMessage()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 138,
      "startColumnNumber" : 16,
      "endLineNumber" : 138,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 173,
        "startLineNumber" : 135,
        "startColumnNumber" : 8,
        "endLineNumber" : 138,
        "endColumnNumber" : 31
      },
      "nodeContext" : "assertEquals(String.format(\"Partition '%s' does not exist on Kafka brokers\",nonExistingPartition),t.getMessage())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 174,
        "startLineNumber" : 135,
        "startColumnNumber" : 8,
        "endLineNumber" : 138,
        "endColumnNumber" : 32
      },
      "nodeContext" : "assertEquals(String.format(\"Partition '%s' does not exist on Kafka brokers\",nonExistingPartition),t.getMessage());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 642,
        "startLineNumber" : 124,
        "startColumnNumber" : 43,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TopicPartition nonExistingPartition=new TopicPartition(TOPIC1,Integer.MAX_VALUE);\n  final KafkaSubscriber subscriber=KafkaSubscriber.getPartitionSetSubscriber(Collections.singleton(nonExistingPartition));\n  Throwable t=assertThrows(RuntimeException.class,() -> subscriber.getSubscribedTopicPartitions(adminClient));\n  assertEquals(String.format(\"Partition '%s' does not exist on Kafka brokers\",nonExistingPartition),t.getMessage());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 691,
        "startLineNumber" : 123,
        "startColumnNumber" : 4,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testNonExistingPartition(){\n  TopicPartition nonExistingPartition=new TopicPartition(TOPIC1,Integer.MAX_VALUE);\n  final KafkaSubscriber subscriber=KafkaSubscriber.getPartitionSetSubscriber(Collections.singleton(nonExistingPartition));\n  Throwable t=assertThrows(RuntimeException.class,() -> subscriber.getSubscribedTopicPartitions(adminClient));\n  assertEquals(String.format(\"Partition '%s' does not exist on Kafka brokers\",nonExistingPartition),t.getMessage());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 58,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 173,
        "startLineNumber" : 135,
        "startColumnNumber" : 8,
        "endLineNumber" : 138,
        "endColumnNumber" : 31
      },
      "nodeContext" : "assertEquals(String.format(\"Partition '%s' does not exist on Kafka brokers\",nonExistingPartition),t.getMessage())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 138,
    "startColumnNumber" : 16,
    "endLineNumber" : 138,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}