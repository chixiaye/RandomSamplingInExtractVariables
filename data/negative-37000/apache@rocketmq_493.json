{
  "id" : 493,
  "expression" : "Map",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/common/src/main/java/org/apache/rocketmq/common/flowcontrol/FlowControlConfig.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Map",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 56,
      "startColumnNumber" : 16,
      "endLineNumber" : 56,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SimpleType,name]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 56,
        "startColumnNumber" : 16,
        "endLineNumber" : 56,
        "endColumnNumber" : 25
      },
      "nodeContext" : "Map.Entry",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParameterizedType,type]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 56,
        "startColumnNumber" : 16,
        "endLineNumber" : 56,
        "endColumnNumber" : 25
      },
      "nodeContext" : "Map.Entry",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ParameterizedType,typeArguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 56,
        "startColumnNumber" : 16,
        "endLineNumber" : 56,
        "endColumnNumber" : 41
      },
      "nodeContext" : "Map.Entry<String,Object>",
      "nodeType" : "ParameterizedType",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,type]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 56,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Set<Map.Entry<String,Object>>",
      "nodeType" : "ParameterizedType",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 56,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Set<Map.Entry<String,Object>> entries=jsonObject.entrySet();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1891,
        "startLineNumber" : 54,
        "startColumnNumber" : 57,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  plainFlowControlRules=new HashMap<String,Map<String,List<FlowControlRule>>>();\n  Set<Map.Entry<String,Object>> entries=jsonObject.entrySet();\n  for (  Map.Entry<String,Object> entry : entries) {\n    String serverName=entry.getKey();\n    Map<String,List<FlowControlRule>> flowControlTypeMap=plainFlowControlRules.get(serverName);\n    if (flowControlTypeMap == null) {\n      flowControlTypeMap=new HashMap<String,List<FlowControlRule>>();\n      plainFlowControlRules.put(serverName,flowControlTypeMap);\n    }\n    LinkedHashMap flowControlMap=(LinkedHashMap)entry.getValue();\n    Iterator iter=flowControlMap.entrySet().iterator();\n    while (iter.hasNext()) {\n      Map.Entry tmp=(Map.Entry)iter.next();\n      String flowControlType=(String)tmp.getKey();\n      List jsonList=(ArrayList)tmp.getValue();\n      if (jsonList != null) {\n        for (        Object json : jsonList) {\n          Map map=(LinkedHashMap)json;\n          FlowControlRule flowControlRule=JSON.parseObject(JSON.toJSONString(map),FlowControlRule.class);\n          List<FlowControlRule> flowControlRules=flowControlTypeMap.get(flowControlType);\n          if (flowControlRules == null) {\n            flowControlRules=new ArrayList<FlowControlRule>();\n            flowControlTypeMap.put(flowControlType,flowControlRules);\n          }\n          flowControlRules.add(flowControlRule);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 238,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1940,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (jsonObject != null && jsonObject.size() > 0) {\n  plainFlowControlRules=new HashMap<String,Map<String,List<FlowControlRule>>>();\n  Set<Map.Entry<String,Object>> entries=jsonObject.entrySet();\n  for (  Map.Entry<String,Object> entry : entries) {\n    String serverName=entry.getKey();\n    Map<String,List<FlowControlRule>> flowControlTypeMap=plainFlowControlRules.get(serverName);\n    if (flowControlTypeMap == null) {\n      flowControlTypeMap=new HashMap<String,List<FlowControlRule>>();\n      plainFlowControlRules.put(serverName,flowControlTypeMap);\n    }\n    LinkedHashMap flowControlMap=(LinkedHashMap)entry.getValue();\n    Iterator iter=flowControlMap.entrySet().iterator();\n    while (iter.hasNext()) {\n      Map.Entry tmp=(Map.Entry)iter.next();\n      String flowControlType=(String)tmp.getKey();\n      List jsonList=(ArrayList)tmp.getValue();\n      if (jsonList != null) {\n        for (        Object json : jsonList) {\n          Map map=(LinkedHashMap)json;\n          FlowControlRule flowControlRule=JSON.parseObject(JSON.toJSONString(map),FlowControlRule.class);\n          List<FlowControlRule> flowControlRules=flowControlTypeMap.get(flowControlType);\n          if (flowControlRules == null) {\n            flowControlRules=new ArrayList<FlowControlRule>();\n            flowControlTypeMap.put(flowControlType,flowControlRules);\n          }\n          flowControlRules.add(flowControlRule);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 248,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2176,
        "startLineNumber" : 51,
        "startColumnNumber" : 40,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  JSONObject jsonObject=UtilAll.getYamlDataObject(flowControlFileHome + File.separator + flowControlFileName,JSONObject.class);\n  if (jsonObject != null && jsonObject.size() > 0) {\n    plainFlowControlRules=new HashMap<String,Map<String,List<FlowControlRule>>>();\n    Set<Map.Entry<String,Object>> entries=jsonObject.entrySet();\n    for (    Map.Entry<String,Object> entry : entries) {\n      String serverName=entry.getKey();\n      Map<String,List<FlowControlRule>> flowControlTypeMap=plainFlowControlRules.get(serverName);\n      if (flowControlTypeMap == null) {\n        flowControlTypeMap=new HashMap<String,List<FlowControlRule>>();\n        plainFlowControlRules.put(serverName,flowControlTypeMap);\n      }\n      LinkedHashMap flowControlMap=(LinkedHashMap)entry.getValue();\n      Iterator iter=flowControlMap.entrySet().iterator();\n      while (iter.hasNext()) {\n        Map.Entry tmp=(Map.Entry)iter.next();\n        String flowControlType=(String)tmp.getKey();\n        List jsonList=(ArrayList)tmp.getValue();\n        if (jsonList != null) {\n          for (          Object json : jsonList) {\n            Map map=(LinkedHashMap)json;\n            FlowControlRule flowControlRule=JSON.parseObject(JSON.toJSONString(map),FlowControlRule.class);\n            List<FlowControlRule> flowControlRules=flowControlTypeMap.get(flowControlType);\n            if (flowControlRules == null) {\n              flowControlRules=new ArrayList<FlowControlRule>();\n              flowControlTypeMap.put(flowControlType,flowControlRules);\n            }\n            flowControlRules.add(flowControlRule);\n          }\n        }\n      }\n    }\n  }\n  log.warn(\"Load topic config: {}\",this.plainFlowControlRules);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 274,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2212,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void loadFlowControlConfig(){\n  JSONObject jsonObject=UtilAll.getYamlDataObject(flowControlFileHome + File.separator + flowControlFileName,JSONObject.class);\n  if (jsonObject != null && jsonObject.size() > 0) {\n    plainFlowControlRules=new HashMap<String,Map<String,List<FlowControlRule>>>();\n    Set<Map.Entry<String,Object>> entries=jsonObject.entrySet();\n    for (    Map.Entry<String,Object> entry : entries) {\n      String serverName=entry.getKey();\n      Map<String,List<FlowControlRule>> flowControlTypeMap=plainFlowControlRules.get(serverName);\n      if (flowControlTypeMap == null) {\n        flowControlTypeMap=new HashMap<String,List<FlowControlRule>>();\n        plainFlowControlRules.put(serverName,flowControlTypeMap);\n      }\n      LinkedHashMap flowControlMap=(LinkedHashMap)entry.getValue();\n      Iterator iter=flowControlMap.entrySet().iterator();\n      while (iter.hasNext()) {\n        Map.Entry tmp=(Map.Entry)iter.next();\n        String flowControlType=(String)tmp.getKey();\n        List jsonList=(ArrayList)tmp.getValue();\n        if (jsonList != null) {\n          for (          Object json : jsonList) {\n            Map map=(LinkedHashMap)json;\n            FlowControlRule flowControlRule=JSON.parseObject(JSON.toJSONString(map),FlowControlRule.class);\n            List<FlowControlRule> flowControlRules=flowControlTypeMap.get(flowControlType);\n            if (flowControlRules == null) {\n              flowControlRules=new ArrayList<FlowControlRule>();\n              flowControlTypeMap.put(flowControlType,flowControlRules);\n            }\n            flowControlRules.add(flowControlRule);\n          }\n        }\n      }\n    }\n  }\n  log.warn(\"Load topic config: {}\",this.plainFlowControlRules);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 278,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 56,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Set<Map.Entry<String,Object>> entries=jsonObject.entrySet();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.Map"
  }, {
    "nodeContext" : "Map",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 57,
      "startColumnNumber" : 17,
      "endLineNumber" : 57,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SimpleType,name]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 57,
        "startColumnNumber" : 17,
        "endLineNumber" : 57,
        "endColumnNumber" : 26
      },
      "nodeContext" : "Map.Entry",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParameterizedType,type]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 57,
        "startColumnNumber" : 17,
        "endLineNumber" : 57,
        "endColumnNumber" : 26
      },
      "nodeContext" : "Map.Entry",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SingleVariableDeclaration,type]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 57,
        "startColumnNumber" : 17,
        "endLineNumber" : 57,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Map.Entry<String,Object>",
      "nodeType" : "ParameterizedType",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,parameter]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 57,
        "startColumnNumber" : 17,
        "endLineNumber" : 57,
        "endColumnNumber" : 48
      },
      "nodeContext" : "Map.Entry<String,Object> entry",
      "nodeType" : "SingleVariableDeclaration",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1661,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Map.Entry<String,Object> entry : entries) {\n  String serverName=entry.getKey();\n  Map<String,List<FlowControlRule>> flowControlTypeMap=plainFlowControlRules.get(serverName);\n  if (flowControlTypeMap == null) {\n    flowControlTypeMap=new HashMap<String,List<FlowControlRule>>();\n    plainFlowControlRules.put(serverName,flowControlTypeMap);\n  }\n  LinkedHashMap flowControlMap=(LinkedHashMap)entry.getValue();\n  Iterator iter=flowControlMap.entrySet().iterator();\n  while (iter.hasNext()) {\n    Map.Entry tmp=(Map.Entry)iter.next();\n    String flowControlType=(String)tmp.getKey();\n    List jsonList=(ArrayList)tmp.getValue();\n    if (jsonList != null) {\n      for (      Object json : jsonList) {\n        Map map=(LinkedHashMap)json;\n        FlowControlRule flowControlRule=JSON.parseObject(JSON.toJSONString(map),FlowControlRule.class);\n        List<FlowControlRule> flowControlRules=flowControlTypeMap.get(flowControlType);\n        if (flowControlRules == null) {\n          flowControlRules=new ArrayList<FlowControlRule>();\n          flowControlTypeMap.put(flowControlType,flowControlRules);\n        }\n        flowControlRules.add(flowControlRule);\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 200,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1891,
        "startLineNumber" : 54,
        "startColumnNumber" : 57,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  plainFlowControlRules=new HashMap<String,Map<String,List<FlowControlRule>>>();\n  Set<Map.Entry<String,Object>> entries=jsonObject.entrySet();\n  for (  Map.Entry<String,Object> entry : entries) {\n    String serverName=entry.getKey();\n    Map<String,List<FlowControlRule>> flowControlTypeMap=plainFlowControlRules.get(serverName);\n    if (flowControlTypeMap == null) {\n      flowControlTypeMap=new HashMap<String,List<FlowControlRule>>();\n      plainFlowControlRules.put(serverName,flowControlTypeMap);\n    }\n    LinkedHashMap flowControlMap=(LinkedHashMap)entry.getValue();\n    Iterator iter=flowControlMap.entrySet().iterator();\n    while (iter.hasNext()) {\n      Map.Entry tmp=(Map.Entry)iter.next();\n      String flowControlType=(String)tmp.getKey();\n      List jsonList=(ArrayList)tmp.getValue();\n      if (jsonList != null) {\n        for (        Object json : jsonList) {\n          Map map=(LinkedHashMap)json;\n          FlowControlRule flowControlRule=JSON.parseObject(JSON.toJSONString(map),FlowControlRule.class);\n          List<FlowControlRule> flowControlRules=flowControlTypeMap.get(flowControlType);\n          if (flowControlRules == null) {\n            flowControlRules=new ArrayList<FlowControlRule>();\n            flowControlTypeMap.put(flowControlType,flowControlRules);\n          }\n          flowControlRules.add(flowControlRule);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 238,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1940,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (jsonObject != null && jsonObject.size() > 0) {\n  plainFlowControlRules=new HashMap<String,Map<String,List<FlowControlRule>>>();\n  Set<Map.Entry<String,Object>> entries=jsonObject.entrySet();\n  for (  Map.Entry<String,Object> entry : entries) {\n    String serverName=entry.getKey();\n    Map<String,List<FlowControlRule>> flowControlTypeMap=plainFlowControlRules.get(serverName);\n    if (flowControlTypeMap == null) {\n      flowControlTypeMap=new HashMap<String,List<FlowControlRule>>();\n      plainFlowControlRules.put(serverName,flowControlTypeMap);\n    }\n    LinkedHashMap flowControlMap=(LinkedHashMap)entry.getValue();\n    Iterator iter=flowControlMap.entrySet().iterator();\n    while (iter.hasNext()) {\n      Map.Entry tmp=(Map.Entry)iter.next();\n      String flowControlType=(String)tmp.getKey();\n      List jsonList=(ArrayList)tmp.getValue();\n      if (jsonList != null) {\n        for (        Object json : jsonList) {\n          Map map=(LinkedHashMap)json;\n          FlowControlRule flowControlRule=JSON.parseObject(JSON.toJSONString(map),FlowControlRule.class);\n          List<FlowControlRule> flowControlRules=flowControlTypeMap.get(flowControlType);\n          if (flowControlRules == null) {\n            flowControlRules=new ArrayList<FlowControlRule>();\n            flowControlTypeMap.put(flowControlType,flowControlRules);\n          }\n          flowControlRules.add(flowControlRule);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 248,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2176,
        "startLineNumber" : 51,
        "startColumnNumber" : 40,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  JSONObject jsonObject=UtilAll.getYamlDataObject(flowControlFileHome + File.separator + flowControlFileName,JSONObject.class);\n  if (jsonObject != null && jsonObject.size() > 0) {\n    plainFlowControlRules=new HashMap<String,Map<String,List<FlowControlRule>>>();\n    Set<Map.Entry<String,Object>> entries=jsonObject.entrySet();\n    for (    Map.Entry<String,Object> entry : entries) {\n      String serverName=entry.getKey();\n      Map<String,List<FlowControlRule>> flowControlTypeMap=plainFlowControlRules.get(serverName);\n      if (flowControlTypeMap == null) {\n        flowControlTypeMap=new HashMap<String,List<FlowControlRule>>();\n        plainFlowControlRules.put(serverName,flowControlTypeMap);\n      }\n      LinkedHashMap flowControlMap=(LinkedHashMap)entry.getValue();\n      Iterator iter=flowControlMap.entrySet().iterator();\n      while (iter.hasNext()) {\n        Map.Entry tmp=(Map.Entry)iter.next();\n        String flowControlType=(String)tmp.getKey();\n        List jsonList=(ArrayList)tmp.getValue();\n        if (jsonList != null) {\n          for (          Object json : jsonList) {\n            Map map=(LinkedHashMap)json;\n            FlowControlRule flowControlRule=JSON.parseObject(JSON.toJSONString(map),FlowControlRule.class);\n            List<FlowControlRule> flowControlRules=flowControlTypeMap.get(flowControlType);\n            if (flowControlRules == null) {\n              flowControlRules=new ArrayList<FlowControlRule>();\n              flowControlTypeMap.put(flowControlType,flowControlRules);\n            }\n            flowControlRules.add(flowControlRule);\n          }\n        }\n      }\n    }\n  }\n  log.warn(\"Load topic config: {}\",this.plainFlowControlRules);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 274,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2212,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void loadFlowControlConfig(){\n  JSONObject jsonObject=UtilAll.getYamlDataObject(flowControlFileHome + File.separator + flowControlFileName,JSONObject.class);\n  if (jsonObject != null && jsonObject.size() > 0) {\n    plainFlowControlRules=new HashMap<String,Map<String,List<FlowControlRule>>>();\n    Set<Map.Entry<String,Object>> entries=jsonObject.entrySet();\n    for (    Map.Entry<String,Object> entry : entries) {\n      String serverName=entry.getKey();\n      Map<String,List<FlowControlRule>> flowControlTypeMap=plainFlowControlRules.get(serverName);\n      if (flowControlTypeMap == null) {\n        flowControlTypeMap=new HashMap<String,List<FlowControlRule>>();\n        plainFlowControlRules.put(serverName,flowControlTypeMap);\n      }\n      LinkedHashMap flowControlMap=(LinkedHashMap)entry.getValue();\n      Iterator iter=flowControlMap.entrySet().iterator();\n      while (iter.hasNext()) {\n        Map.Entry tmp=(Map.Entry)iter.next();\n        String flowControlType=(String)tmp.getKey();\n        List jsonList=(ArrayList)tmp.getValue();\n        if (jsonList != null) {\n          for (          Object json : jsonList) {\n            Map map=(LinkedHashMap)json;\n            FlowControlRule flowControlRule=JSON.parseObject(JSON.toJSONString(map),FlowControlRule.class);\n            List<FlowControlRule> flowControlRules=flowControlTypeMap.get(flowControlType);\n            if (flowControlRules == null) {\n              flowControlRules=new ArrayList<FlowControlRule>();\n              flowControlTypeMap.put(flowControlType,flowControlRules);\n            }\n            flowControlRules.add(flowControlRule);\n          }\n        }\n      }\n    }\n  }\n  log.warn(\"Load topic config: {}\",this.plainFlowControlRules);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 278,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,parameter]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 57,
        "startColumnNumber" : 17,
        "endLineNumber" : 57,
        "endColumnNumber" : 48
      },
      "nodeContext" : "Map.Entry<String,Object> entry",
      "nodeType" : "SingleVariableDeclaration",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.Map"
  }, {
    "nodeContext" : "Map",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 68,
      "startColumnNumber" : 20,
      "endLineNumber" : 68,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SimpleType,name]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 68,
        "startColumnNumber" : 20,
        "endLineNumber" : 68,
        "endColumnNumber" : 29
      },
      "nodeContext" : "Map.Entry",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,type]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 68,
        "startColumnNumber" : 20,
        "endLineNumber" : 68,
        "endColumnNumber" : 29
      },
      "nodeContext" : "Map.Entry",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 68,
        "startColumnNumber" : 20,
        "endLineNumber" : 68,
        "endColumnNumber" : 60
      },
      "nodeContext" : "Map.Entry tmp=(Map.Entry)iter.next();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 989,
        "startLineNumber" : 67,
        "startColumnNumber" : 39,
        "endLineNumber" : 83,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  Map.Entry tmp=(Map.Entry)iter.next();\n  String flowControlType=(String)tmp.getKey();\n  List jsonList=(ArrayList)tmp.getValue();\n  if (jsonList != null) {\n    for (    Object json : jsonList) {\n      Map map=(LinkedHashMap)json;\n      FlowControlRule flowControlRule=JSON.parseObject(JSON.toJSONString(map),FlowControlRule.class);\n      List<FlowControlRule> flowControlRules=flowControlTypeMap.get(flowControlType);\n      if (flowControlRules == null) {\n        flowControlRules=new ArrayList<FlowControlRule>();\n        flowControlTypeMap.put(flowControlType,flowControlRules);\n      }\n      flowControlRules.add(flowControlRule);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1012,
        "startLineNumber" : 67,
        "startColumnNumber" : 16,
        "endLineNumber" : 83,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while (iter.hasNext()) {\n  Map.Entry tmp=(Map.Entry)iter.next();\n  String flowControlType=(String)tmp.getKey();\n  List jsonList=(ArrayList)tmp.getValue();\n  if (jsonList != null) {\n    for (    Object json : jsonList) {\n      Map map=(LinkedHashMap)json;\n      FlowControlRule flowControlRule=JSON.parseObject(JSON.toJSONString(map),FlowControlRule.class);\n      List<FlowControlRule> flowControlRules=flowControlTypeMap.get(flowControlType);\n      if (flowControlRules == null) {\n        flowControlRules=new ArrayList<FlowControlRule>();\n        flowControlTypeMap.put(flowControlType,flowControlRules);\n      }\n      flowControlRules.add(flowControlRule);\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 115,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1613,
        "startLineNumber" : 57,
        "startColumnNumber" : 60,
        "endLineNumber" : 84,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String serverName=entry.getKey();\n  Map<String,List<FlowControlRule>> flowControlTypeMap=plainFlowControlRules.get(serverName);\n  if (flowControlTypeMap == null) {\n    flowControlTypeMap=new HashMap<String,List<FlowControlRule>>();\n    plainFlowControlRules.put(serverName,flowControlTypeMap);\n  }\n  LinkedHashMap flowControlMap=(LinkedHashMap)entry.getValue();\n  Iterator iter=flowControlMap.entrySet().iterator();\n  while (iter.hasNext()) {\n    Map.Entry tmp=(Map.Entry)iter.next();\n    String flowControlType=(String)tmp.getKey();\n    List jsonList=(ArrayList)tmp.getValue();\n    if (jsonList != null) {\n      for (      Object json : jsonList) {\n        Map map=(LinkedHashMap)json;\n        FlowControlRule flowControlRule=JSON.parseObject(JSON.toJSONString(map),FlowControlRule.class);\n        List<FlowControlRule> flowControlRules=flowControlTypeMap.get(flowControlType);\n        if (flowControlRules == null) {\n          flowControlRules=new ArrayList<FlowControlRule>();\n          flowControlTypeMap.put(flowControlType,flowControlRules);\n        }\n        flowControlRules.add(flowControlRule);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 187,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1661,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Map.Entry<String,Object> entry : entries) {\n  String serverName=entry.getKey();\n  Map<String,List<FlowControlRule>> flowControlTypeMap=plainFlowControlRules.get(serverName);\n  if (flowControlTypeMap == null) {\n    flowControlTypeMap=new HashMap<String,List<FlowControlRule>>();\n    plainFlowControlRules.put(serverName,flowControlTypeMap);\n  }\n  LinkedHashMap flowControlMap=(LinkedHashMap)entry.getValue();\n  Iterator iter=flowControlMap.entrySet().iterator();\n  while (iter.hasNext()) {\n    Map.Entry tmp=(Map.Entry)iter.next();\n    String flowControlType=(String)tmp.getKey();\n    List jsonList=(ArrayList)tmp.getValue();\n    if (jsonList != null) {\n      for (      Object json : jsonList) {\n        Map map=(LinkedHashMap)json;\n        FlowControlRule flowControlRule=JSON.parseObject(JSON.toJSONString(map),FlowControlRule.class);\n        List<FlowControlRule> flowControlRules=flowControlTypeMap.get(flowControlType);\n        if (flowControlRules == null) {\n          flowControlRules=new ArrayList<FlowControlRule>();\n          flowControlTypeMap.put(flowControlType,flowControlRules);\n        }\n        flowControlRules.add(flowControlRule);\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 200,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1891,
        "startLineNumber" : 54,
        "startColumnNumber" : 57,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  plainFlowControlRules=new HashMap<String,Map<String,List<FlowControlRule>>>();\n  Set<Map.Entry<String,Object>> entries=jsonObject.entrySet();\n  for (  Map.Entry<String,Object> entry : entries) {\n    String serverName=entry.getKey();\n    Map<String,List<FlowControlRule>> flowControlTypeMap=plainFlowControlRules.get(serverName);\n    if (flowControlTypeMap == null) {\n      flowControlTypeMap=new HashMap<String,List<FlowControlRule>>();\n      plainFlowControlRules.put(serverName,flowControlTypeMap);\n    }\n    LinkedHashMap flowControlMap=(LinkedHashMap)entry.getValue();\n    Iterator iter=flowControlMap.entrySet().iterator();\n    while (iter.hasNext()) {\n      Map.Entry tmp=(Map.Entry)iter.next();\n      String flowControlType=(String)tmp.getKey();\n      List jsonList=(ArrayList)tmp.getValue();\n      if (jsonList != null) {\n        for (        Object json : jsonList) {\n          Map map=(LinkedHashMap)json;\n          FlowControlRule flowControlRule=JSON.parseObject(JSON.toJSONString(map),FlowControlRule.class);\n          List<FlowControlRule> flowControlRules=flowControlTypeMap.get(flowControlType);\n          if (flowControlRules == null) {\n            flowControlRules=new ArrayList<FlowControlRule>();\n            flowControlTypeMap.put(flowControlType,flowControlRules);\n          }\n          flowControlRules.add(flowControlRule);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 238,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1940,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (jsonObject != null && jsonObject.size() > 0) {\n  plainFlowControlRules=new HashMap<String,Map<String,List<FlowControlRule>>>();\n  Set<Map.Entry<String,Object>> entries=jsonObject.entrySet();\n  for (  Map.Entry<String,Object> entry : entries) {\n    String serverName=entry.getKey();\n    Map<String,List<FlowControlRule>> flowControlTypeMap=plainFlowControlRules.get(serverName);\n    if (flowControlTypeMap == null) {\n      flowControlTypeMap=new HashMap<String,List<FlowControlRule>>();\n      plainFlowControlRules.put(serverName,flowControlTypeMap);\n    }\n    LinkedHashMap flowControlMap=(LinkedHashMap)entry.getValue();\n    Iterator iter=flowControlMap.entrySet().iterator();\n    while (iter.hasNext()) {\n      Map.Entry tmp=(Map.Entry)iter.next();\n      String flowControlType=(String)tmp.getKey();\n      List jsonList=(ArrayList)tmp.getValue();\n      if (jsonList != null) {\n        for (        Object json : jsonList) {\n          Map map=(LinkedHashMap)json;\n          FlowControlRule flowControlRule=JSON.parseObject(JSON.toJSONString(map),FlowControlRule.class);\n          List<FlowControlRule> flowControlRules=flowControlTypeMap.get(flowControlType);\n          if (flowControlRules == null) {\n            flowControlRules=new ArrayList<FlowControlRule>();\n            flowControlTypeMap.put(flowControlType,flowControlRules);\n          }\n          flowControlRules.add(flowControlRule);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 248,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2176,
        "startLineNumber" : 51,
        "startColumnNumber" : 40,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  JSONObject jsonObject=UtilAll.getYamlDataObject(flowControlFileHome + File.separator + flowControlFileName,JSONObject.class);\n  if (jsonObject != null && jsonObject.size() > 0) {\n    plainFlowControlRules=new HashMap<String,Map<String,List<FlowControlRule>>>();\n    Set<Map.Entry<String,Object>> entries=jsonObject.entrySet();\n    for (    Map.Entry<String,Object> entry : entries) {\n      String serverName=entry.getKey();\n      Map<String,List<FlowControlRule>> flowControlTypeMap=plainFlowControlRules.get(serverName);\n      if (flowControlTypeMap == null) {\n        flowControlTypeMap=new HashMap<String,List<FlowControlRule>>();\n        plainFlowControlRules.put(serverName,flowControlTypeMap);\n      }\n      LinkedHashMap flowControlMap=(LinkedHashMap)entry.getValue();\n      Iterator iter=flowControlMap.entrySet().iterator();\n      while (iter.hasNext()) {\n        Map.Entry tmp=(Map.Entry)iter.next();\n        String flowControlType=(String)tmp.getKey();\n        List jsonList=(ArrayList)tmp.getValue();\n        if (jsonList != null) {\n          for (          Object json : jsonList) {\n            Map map=(LinkedHashMap)json;\n            FlowControlRule flowControlRule=JSON.parseObject(JSON.toJSONString(map),FlowControlRule.class);\n            List<FlowControlRule> flowControlRules=flowControlTypeMap.get(flowControlType);\n            if (flowControlRules == null) {\n              flowControlRules=new ArrayList<FlowControlRule>();\n              flowControlTypeMap.put(flowControlType,flowControlRules);\n            }\n            flowControlRules.add(flowControlRule);\n          }\n        }\n      }\n    }\n  }\n  log.warn(\"Load topic config: {}\",this.plainFlowControlRules);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 274,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2212,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void loadFlowControlConfig(){\n  JSONObject jsonObject=UtilAll.getYamlDataObject(flowControlFileHome + File.separator + flowControlFileName,JSONObject.class);\n  if (jsonObject != null && jsonObject.size() > 0) {\n    plainFlowControlRules=new HashMap<String,Map<String,List<FlowControlRule>>>();\n    Set<Map.Entry<String,Object>> entries=jsonObject.entrySet();\n    for (    Map.Entry<String,Object> entry : entries) {\n      String serverName=entry.getKey();\n      Map<String,List<FlowControlRule>> flowControlTypeMap=plainFlowControlRules.get(serverName);\n      if (flowControlTypeMap == null) {\n        flowControlTypeMap=new HashMap<String,List<FlowControlRule>>();\n        plainFlowControlRules.put(serverName,flowControlTypeMap);\n      }\n      LinkedHashMap flowControlMap=(LinkedHashMap)entry.getValue();\n      Iterator iter=flowControlMap.entrySet().iterator();\n      while (iter.hasNext()) {\n        Map.Entry tmp=(Map.Entry)iter.next();\n        String flowControlType=(String)tmp.getKey();\n        List jsonList=(ArrayList)tmp.getValue();\n        if (jsonList != null) {\n          for (          Object json : jsonList) {\n            Map map=(LinkedHashMap)json;\n            FlowControlRule flowControlRule=JSON.parseObject(JSON.toJSONString(map),FlowControlRule.class);\n            List<FlowControlRule> flowControlRules=flowControlTypeMap.get(flowControlType);\n            if (flowControlRules == null) {\n              flowControlRules=new ArrayList<FlowControlRule>();\n              flowControlTypeMap.put(flowControlType,flowControlRules);\n            }\n            flowControlRules.add(flowControlRule);\n          }\n        }\n      }\n    }\n  }\n  log.warn(\"Load topic config: {}\",this.plainFlowControlRules);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 278,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 68,
        "startColumnNumber" : 20,
        "endLineNumber" : 68,
        "endColumnNumber" : 60
      },
      "nodeContext" : "Map.Entry tmp=(Map.Entry)iter.next();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.Map"
  }, {
    "nodeContext" : "Map",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 68,
      "startColumnNumber" : 37,
      "endLineNumber" : 68,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SimpleType,name]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 68,
        "startColumnNumber" : 37,
        "endLineNumber" : 68,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Map.Entry",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,type]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 68,
        "startColumnNumber" : 37,
        "endLineNumber" : 68,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Map.Entry",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 68,
        "startColumnNumber" : 36,
        "endLineNumber" : 68,
        "endColumnNumber" : 59
      },
      "nodeContext" : "(Map.Entry)iter.next()",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 68,
        "startColumnNumber" : 30,
        "endLineNumber" : 68,
        "endColumnNumber" : 59
      },
      "nodeContext" : "tmp=(Map.Entry)iter.next()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 68,
        "startColumnNumber" : 20,
        "endLineNumber" : 68,
        "endColumnNumber" : 60
      },
      "nodeContext" : "Map.Entry tmp=(Map.Entry)iter.next();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 989,
        "startLineNumber" : 67,
        "startColumnNumber" : 39,
        "endLineNumber" : 83,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  Map.Entry tmp=(Map.Entry)iter.next();\n  String flowControlType=(String)tmp.getKey();\n  List jsonList=(ArrayList)tmp.getValue();\n  if (jsonList != null) {\n    for (    Object json : jsonList) {\n      Map map=(LinkedHashMap)json;\n      FlowControlRule flowControlRule=JSON.parseObject(JSON.toJSONString(map),FlowControlRule.class);\n      List<FlowControlRule> flowControlRules=flowControlTypeMap.get(flowControlType);\n      if (flowControlRules == null) {\n        flowControlRules=new ArrayList<FlowControlRule>();\n        flowControlTypeMap.put(flowControlType,flowControlRules);\n      }\n      flowControlRules.add(flowControlRule);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1012,
        "startLineNumber" : 67,
        "startColumnNumber" : 16,
        "endLineNumber" : 83,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while (iter.hasNext()) {\n  Map.Entry tmp=(Map.Entry)iter.next();\n  String flowControlType=(String)tmp.getKey();\n  List jsonList=(ArrayList)tmp.getValue();\n  if (jsonList != null) {\n    for (    Object json : jsonList) {\n      Map map=(LinkedHashMap)json;\n      FlowControlRule flowControlRule=JSON.parseObject(JSON.toJSONString(map),FlowControlRule.class);\n      List<FlowControlRule> flowControlRules=flowControlTypeMap.get(flowControlType);\n      if (flowControlRules == null) {\n        flowControlRules=new ArrayList<FlowControlRule>();\n        flowControlTypeMap.put(flowControlType,flowControlRules);\n      }\n      flowControlRules.add(flowControlRule);\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 115,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1613,
        "startLineNumber" : 57,
        "startColumnNumber" : 60,
        "endLineNumber" : 84,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String serverName=entry.getKey();\n  Map<String,List<FlowControlRule>> flowControlTypeMap=plainFlowControlRules.get(serverName);\n  if (flowControlTypeMap == null) {\n    flowControlTypeMap=new HashMap<String,List<FlowControlRule>>();\n    plainFlowControlRules.put(serverName,flowControlTypeMap);\n  }\n  LinkedHashMap flowControlMap=(LinkedHashMap)entry.getValue();\n  Iterator iter=flowControlMap.entrySet().iterator();\n  while (iter.hasNext()) {\n    Map.Entry tmp=(Map.Entry)iter.next();\n    String flowControlType=(String)tmp.getKey();\n    List jsonList=(ArrayList)tmp.getValue();\n    if (jsonList != null) {\n      for (      Object json : jsonList) {\n        Map map=(LinkedHashMap)json;\n        FlowControlRule flowControlRule=JSON.parseObject(JSON.toJSONString(map),FlowControlRule.class);\n        List<FlowControlRule> flowControlRules=flowControlTypeMap.get(flowControlType);\n        if (flowControlRules == null) {\n          flowControlRules=new ArrayList<FlowControlRule>();\n          flowControlTypeMap.put(flowControlType,flowControlRules);\n        }\n        flowControlRules.add(flowControlRule);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 187,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1661,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Map.Entry<String,Object> entry : entries) {\n  String serverName=entry.getKey();\n  Map<String,List<FlowControlRule>> flowControlTypeMap=plainFlowControlRules.get(serverName);\n  if (flowControlTypeMap == null) {\n    flowControlTypeMap=new HashMap<String,List<FlowControlRule>>();\n    plainFlowControlRules.put(serverName,flowControlTypeMap);\n  }\n  LinkedHashMap flowControlMap=(LinkedHashMap)entry.getValue();\n  Iterator iter=flowControlMap.entrySet().iterator();\n  while (iter.hasNext()) {\n    Map.Entry tmp=(Map.Entry)iter.next();\n    String flowControlType=(String)tmp.getKey();\n    List jsonList=(ArrayList)tmp.getValue();\n    if (jsonList != null) {\n      for (      Object json : jsonList) {\n        Map map=(LinkedHashMap)json;\n        FlowControlRule flowControlRule=JSON.parseObject(JSON.toJSONString(map),FlowControlRule.class);\n        List<FlowControlRule> flowControlRules=flowControlTypeMap.get(flowControlType);\n        if (flowControlRules == null) {\n          flowControlRules=new ArrayList<FlowControlRule>();\n          flowControlTypeMap.put(flowControlType,flowControlRules);\n        }\n        flowControlRules.add(flowControlRule);\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 200,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1891,
        "startLineNumber" : 54,
        "startColumnNumber" : 57,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  plainFlowControlRules=new HashMap<String,Map<String,List<FlowControlRule>>>();\n  Set<Map.Entry<String,Object>> entries=jsonObject.entrySet();\n  for (  Map.Entry<String,Object> entry : entries) {\n    String serverName=entry.getKey();\n    Map<String,List<FlowControlRule>> flowControlTypeMap=plainFlowControlRules.get(serverName);\n    if (flowControlTypeMap == null) {\n      flowControlTypeMap=new HashMap<String,List<FlowControlRule>>();\n      plainFlowControlRules.put(serverName,flowControlTypeMap);\n    }\n    LinkedHashMap flowControlMap=(LinkedHashMap)entry.getValue();\n    Iterator iter=flowControlMap.entrySet().iterator();\n    while (iter.hasNext()) {\n      Map.Entry tmp=(Map.Entry)iter.next();\n      String flowControlType=(String)tmp.getKey();\n      List jsonList=(ArrayList)tmp.getValue();\n      if (jsonList != null) {\n        for (        Object json : jsonList) {\n          Map map=(LinkedHashMap)json;\n          FlowControlRule flowControlRule=JSON.parseObject(JSON.toJSONString(map),FlowControlRule.class);\n          List<FlowControlRule> flowControlRules=flowControlTypeMap.get(flowControlType);\n          if (flowControlRules == null) {\n            flowControlRules=new ArrayList<FlowControlRule>();\n            flowControlTypeMap.put(flowControlType,flowControlRules);\n          }\n          flowControlRules.add(flowControlRule);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 238,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1940,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (jsonObject != null && jsonObject.size() > 0) {\n  plainFlowControlRules=new HashMap<String,Map<String,List<FlowControlRule>>>();\n  Set<Map.Entry<String,Object>> entries=jsonObject.entrySet();\n  for (  Map.Entry<String,Object> entry : entries) {\n    String serverName=entry.getKey();\n    Map<String,List<FlowControlRule>> flowControlTypeMap=plainFlowControlRules.get(serverName);\n    if (flowControlTypeMap == null) {\n      flowControlTypeMap=new HashMap<String,List<FlowControlRule>>();\n      plainFlowControlRules.put(serverName,flowControlTypeMap);\n    }\n    LinkedHashMap flowControlMap=(LinkedHashMap)entry.getValue();\n    Iterator iter=flowControlMap.entrySet().iterator();\n    while (iter.hasNext()) {\n      Map.Entry tmp=(Map.Entry)iter.next();\n      String flowControlType=(String)tmp.getKey();\n      List jsonList=(ArrayList)tmp.getValue();\n      if (jsonList != null) {\n        for (        Object json : jsonList) {\n          Map map=(LinkedHashMap)json;\n          FlowControlRule flowControlRule=JSON.parseObject(JSON.toJSONString(map),FlowControlRule.class);\n          List<FlowControlRule> flowControlRules=flowControlTypeMap.get(flowControlType);\n          if (flowControlRules == null) {\n            flowControlRules=new ArrayList<FlowControlRule>();\n            flowControlTypeMap.put(flowControlType,flowControlRules);\n          }\n          flowControlRules.add(flowControlRule);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 248,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2176,
        "startLineNumber" : 51,
        "startColumnNumber" : 40,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  JSONObject jsonObject=UtilAll.getYamlDataObject(flowControlFileHome + File.separator + flowControlFileName,JSONObject.class);\n  if (jsonObject != null && jsonObject.size() > 0) {\n    plainFlowControlRules=new HashMap<String,Map<String,List<FlowControlRule>>>();\n    Set<Map.Entry<String,Object>> entries=jsonObject.entrySet();\n    for (    Map.Entry<String,Object> entry : entries) {\n      String serverName=entry.getKey();\n      Map<String,List<FlowControlRule>> flowControlTypeMap=plainFlowControlRules.get(serverName);\n      if (flowControlTypeMap == null) {\n        flowControlTypeMap=new HashMap<String,List<FlowControlRule>>();\n        plainFlowControlRules.put(serverName,flowControlTypeMap);\n      }\n      LinkedHashMap flowControlMap=(LinkedHashMap)entry.getValue();\n      Iterator iter=flowControlMap.entrySet().iterator();\n      while (iter.hasNext()) {\n        Map.Entry tmp=(Map.Entry)iter.next();\n        String flowControlType=(String)tmp.getKey();\n        List jsonList=(ArrayList)tmp.getValue();\n        if (jsonList != null) {\n          for (          Object json : jsonList) {\n            Map map=(LinkedHashMap)json;\n            FlowControlRule flowControlRule=JSON.parseObject(JSON.toJSONString(map),FlowControlRule.class);\n            List<FlowControlRule> flowControlRules=flowControlTypeMap.get(flowControlType);\n            if (flowControlRules == null) {\n              flowControlRules=new ArrayList<FlowControlRule>();\n              flowControlTypeMap.put(flowControlType,flowControlRules);\n            }\n            flowControlRules.add(flowControlRule);\n          }\n        }\n      }\n    }\n  }\n  log.warn(\"Load topic config: {}\",this.plainFlowControlRules);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 274,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2212,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void loadFlowControlConfig(){\n  JSONObject jsonObject=UtilAll.getYamlDataObject(flowControlFileHome + File.separator + flowControlFileName,JSONObject.class);\n  if (jsonObject != null && jsonObject.size() > 0) {\n    plainFlowControlRules=new HashMap<String,Map<String,List<FlowControlRule>>>();\n    Set<Map.Entry<String,Object>> entries=jsonObject.entrySet();\n    for (    Map.Entry<String,Object> entry : entries) {\n      String serverName=entry.getKey();\n      Map<String,List<FlowControlRule>> flowControlTypeMap=plainFlowControlRules.get(serverName);\n      if (flowControlTypeMap == null) {\n        flowControlTypeMap=new HashMap<String,List<FlowControlRule>>();\n        plainFlowControlRules.put(serverName,flowControlTypeMap);\n      }\n      LinkedHashMap flowControlMap=(LinkedHashMap)entry.getValue();\n      Iterator iter=flowControlMap.entrySet().iterator();\n      while (iter.hasNext()) {\n        Map.Entry tmp=(Map.Entry)iter.next();\n        String flowControlType=(String)tmp.getKey();\n        List jsonList=(ArrayList)tmp.getValue();\n        if (jsonList != null) {\n          for (          Object json : jsonList) {\n            Map map=(LinkedHashMap)json;\n            FlowControlRule flowControlRule=JSON.parseObject(JSON.toJSONString(map),FlowControlRule.class);\n            List<FlowControlRule> flowControlRules=flowControlTypeMap.get(flowControlType);\n            if (flowControlRules == null) {\n              flowControlRules=new ArrayList<FlowControlRule>();\n              flowControlTypeMap.put(flowControlType,flowControlRules);\n            }\n            flowControlRules.add(flowControlRule);\n          }\n        }\n      }\n    }\n  }\n  log.warn(\"Load topic config: {}\",this.plainFlowControlRules);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 278,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 68,
        "startColumnNumber" : 20,
        "endLineNumber" : 68,
        "endColumnNumber" : 60
      },
      "nodeContext" : "Map.Entry tmp=(Map.Entry)iter.next();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.Map"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 56,
    "startColumnNumber" : 16,
    "endLineNumber" : 56,
    "endColumnNumber" : 19
  }, {
    "charLength" : 3,
    "startLineNumber" : 57,
    "startColumnNumber" : 17,
    "endLineNumber" : 57,
    "endColumnNumber" : 20
  }, {
    "charLength" : 3,
    "startLineNumber" : 68,
    "startColumnNumber" : 20,
    "endLineNumber" : 68,
    "endColumnNumber" : 23
  }, {
    "charLength" : 3,
    "startLineNumber" : 68,
    "startColumnNumber" : 37,
    "endLineNumber" : 68,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  } ]
}