{
  "id" : 314,
  "expression" : "uriComponents.getHost()",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-web/src/main/java/org/springframework/web/filter/ForwardedHeaderFilter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "uriComponents.getHost()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 235,
      "startColumnNumber" : 15,
      "endLineNumber" : 235,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 235,
        "startColumnNumber" : 3,
        "endLineNumber" : 235,
        "endColumnNumber" : 38
      },
      "nodeContext" : "this.host=uriComponents.getHost()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 235,
        "startColumnNumber" : 3,
        "endLineNumber" : 235,
        "endColumnNumber" : 39
      },
      "nodeContext" : "this.host=uriComponents.getHost();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 699,
        "startLineNumber" : 226,
        "startColumnNumber" : 89,
        "endLineNumber" : 241,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  super(request);\n  HttpRequest httpRequest=new ServletServerHttpRequest(request);\n  UriComponents uriComponents=UriComponentsBuilder.fromHttpRequest(httpRequest).build();\n  int port=uriComponents.getPort();\n  this.scheme=uriComponents.getScheme();\n  this.secure=\"https\".equals(this.scheme);\n  this.host=uriComponents.getHost();\n  this.port=(port == -1 ? (this.secure ? 443 : 80) : port);\n  String baseUrl=this.scheme + \"://\" + this.host+ (port == -1 ? \"\" : \":\" + port);\n  Supplier<HttpServletRequest> delegateRequest=() -> (HttpServletRequest)getRequest();\n  this.forwardedPrefixExtractor=new ForwardedPrefixExtractor(delegateRequest,pathHelper,baseUrl);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 786,
        "startLineNumber" : 226,
        "startColumnNumber" : 2,
        "endLineNumber" : 241,
        "endColumnNumber" : 3
      },
      "nodeContext" : "ForwardedHeaderExtractingRequest(HttpServletRequest request,UrlPathHelper pathHelper){\n  super(request);\n  HttpRequest httpRequest=new ServletServerHttpRequest(request);\n  UriComponents uriComponents=UriComponentsBuilder.fromHttpRequest(httpRequest).build();\n  int port=uriComponents.getPort();\n  this.scheme=uriComponents.getScheme();\n  this.secure=\"https\".equals(this.scheme);\n  this.host=uriComponents.getHost();\n  this.port=(port == -1 ? (this.secure ? 443 : 80) : port);\n  String baseUrl=this.scheme + \"://\" + this.host+ (port == -1 ? \"\" : \":\" + port);\n  Supplier<HttpServletRequest> delegateRequest=() -> (HttpServletRequest)getRequest();\n  this.forwardedPrefixExtractor=new ForwardedPrefixExtractor(delegateRequest,pathHelper,baseUrl);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 235,
        "startColumnNumber" : 3,
        "endLineNumber" : 235,
        "endColumnNumber" : 39
      },
      "nodeContext" : "this.host=uriComponents.getHost();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 235,
    "startColumnNumber" : 15,
    "endLineNumber" : 235,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}