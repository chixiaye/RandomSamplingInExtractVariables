{
  "id" : 379,
  "expression" : "\"concat(\\\"Bar \\\", '\\\"', \\\"Rock'n'Roll\\\", '\\\"')\"",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/client/test/org/openqa/selenium/support/ui/QuotesTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"concat(\\\"Bar \\\", '\\\"', \\\"Rock'n'Roll\\\", '\\\"')\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 47,
      "startLineNumber" : 56,
      "startColumnNumber" : 42,
      "endLineNumber" : 56,
      "endColumnNumber" : 89
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 90
      },
      "nodeContext" : "assertThat(escape(\"Bar \\\"Rock'n'Roll\\\"\")).isEqualTo(\"concat(\\\"Bar \\\", '\\\"', \\\"Rock'n'Roll\\\", '\\\"')\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 91
      },
      "nodeContext" : "assertThat(escape(\"Bar \\\"Rock'n'Roll\\\"\")).isEqualTo(\"concat(\\\"Bar \\\", '\\\"', \\\"Rock'n'Roll\\\", '\\\"')\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 54,
        "startColumnNumber" : 72,
        "endLineNumber" : 57,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertThat(escape(\"Bar \\\"Rock'n'Roll\\\"\")).isEqualTo(\"concat(\\\"Bar \\\", '\\\"', \\\"Rock'n'Roll\\\", '\\\"')\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 339,
        "startLineNumber" : 49,
        "startColumnNumber" : 2,
        "endLineNumber" : 57,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Tests that Quotes.escape returns concatenated strings when the given string contains a tick and and ends with a quote.\n */\n@Test public void shouldProvideConcatenatedStringsWhenStringEndsWithQuote(){\n  assertThat(escape(\"Bar \\\"Rock'n'Roll\\\"\")).isEqualTo(\"concat(\\\"Bar \\\", '\\\"', \\\"Rock'n'Roll\\\", '\\\"')\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 17,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 90
      },
      "nodeContext" : "assertThat(escape(\"Bar \\\"Rock'n'Roll\\\"\")).isEqualTo(\"concat(\\\"Bar \\\", '\\\"', \\\"Rock'n'Roll\\\", '\\\"')\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 47,
    "startLineNumber" : 56,
    "startColumnNumber" : 42,
    "endLineNumber" : 56,
    "endColumnNumber" : 89
  } ],
  "layoutRelationDataList" : [ ]
}