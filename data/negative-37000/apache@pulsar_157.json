{
  "id" : 157,
  "expression" : "subscriptionName",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyForwardAuthDataTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "subscriptionName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 121,
      "startColumnNumber" : 76,
      "endLineNumber" : 121,
      "endColumnNumber" : 92
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 121,
        "startColumnNumber" : 16,
        "endLineNumber" : 121,
        "endColumnNumber" : 93
      },
      "nodeContext" : "proxyClient.newConsumer().topic(topicName).subscriptionName(subscriptionName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 121,
        "startColumnNumber" : 16,
        "endLineNumber" : 121,
        "endColumnNumber" : 105
      },
      "nodeContext" : "proxyClient.newConsumer().topic(topicName).subscriptionName(subscriptionName).subscribe()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 121,
        "startColumnNumber" : 16,
        "endLineNumber" : 121,
        "endColumnNumber" : 106
      },
      "nodeContext" : "proxyClient.newConsumer().topic(topicName).subscriptionName(subscriptionName).subscribe();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 120,
        "startColumnNumber" : 112,
        "endLineNumber" : 123,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  proxyClient.newConsumer().topic(topicName).subscriptionName(subscriptionName).subscribe();\n  Assert.fail(\"Shouldn't be able to subscribe, auth required\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 374,
        "startLineNumber" : 120,
        "startColumnNumber" : 12,
        "endLineNumber" : 125,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try (PulsarClient proxyClient=createPulsarClient(proxyService.getServiceUrl(),clientAuthParams)){\n  proxyClient.newConsumer().topic(topicName).subscriptionName(subscriptionName).subscribe();\n  Assert.fail(\"Shouldn't be able to subscribe, auth required\");\n}\n catch (Exception e) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 36,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 432,
        "startLineNumber" : 118,
        "startColumnNumber" : 95,
        "endLineNumber" : 126,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  proxyService.start();\n  try (PulsarClient proxyClient=createPulsarClient(proxyService.getServiceUrl(),clientAuthParams)){\n    proxyClient.newConsumer().topic(topicName).subscriptionName(subscriptionName).subscribe();\n    Assert.fail(\"Shouldn't be able to subscribe, auth required\");\n  }\n catch (  Exception e) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 519,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (ProxyService proxyService=new ProxyService(proxyConfig,authenticationService)){\n  proxyService.start();\n  try (PulsarClient proxyClient=createPulsarClient(proxyService.getServiceUrl(),clientAuthParams)){\n    proxyClient.newConsumer().topic(topicName).subscriptionName(subscriptionName).subscribe();\n    Assert.fail(\"Shouldn't be able to subscribe, auth required\");\n  }\n catch (  Exception e) {\n  }\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 52,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2792,
        "startLineNumber" : 85,
        "startColumnNumber" : 55,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  log.info(\"-- Starting {} test --\",methodName);\n  String namespaceName=\"my-property/my-ns\";\n  String topicName=\"persistent://my-property/my-ns/my-topic1\";\n  String subscriptionName=\"my-subscriber-name\";\n  String clientAuthParams=\"authParam:client\";\n  String proxyAuthParams=\"authParam:proxy\";\n  admin.namespaces().grantPermissionOnNamespace(namespaceName,\"proxy\",Sets.newHashSet(AuthAction.consume,AuthAction.produce));\n  admin.namespaces().grantPermissionOnNamespace(namespaceName,\"client\",Sets.newHashSet(AuthAction.consume,AuthAction.produce));\n  ProxyConfiguration proxyConfig=new ProxyConfiguration();\n  proxyConfig.setAuthenticationEnabled(true);\n  proxyConfig.setServicePort(Optional.of(0));\n  proxyConfig.setWebServicePort(Optional.of(0));\n  proxyConfig.setBrokerServiceURL(pulsar.getBrokerServiceUrl());\n  proxyConfig.setBrokerClientAuthenticationPlugin(BasicAuthentication.class.getName());\n  proxyConfig.setBrokerClientAuthenticationParameters(proxyAuthParams);\n  Set<String> providers=new HashSet<>();\n  providers.add(BasicAuthenticationProvider.class.getName());\n  proxyConfig.setAuthenticationProviders(providers);\n  AuthenticationService authenticationService=new AuthenticationService(PulsarConfigurationLoader.convertFrom(proxyConfig));\n  try (ProxyService proxyService=new ProxyService(proxyConfig,authenticationService)){\n    proxyService.start();\n    try (PulsarClient proxyClient=createPulsarClient(proxyService.getServiceUrl(),clientAuthParams)){\n      proxyClient.newConsumer().topic(topicName).subscriptionName(subscriptionName).subscribe();\n      Assert.fail(\"Shouldn't be able to subscribe, auth required\");\n    }\n catch (    Exception e) {\n    }\n  }\n   proxyConfig.setForwardAuthorizationCredentials(true);\n  authenticationService=new AuthenticationService(PulsarConfigurationLoader.convertFrom(proxyConfig));\n  @Cleanup ProxyService proxyService=new ProxyService(proxyConfig,authenticationService);\n  proxyService.start();\n  @Cleanup PulsarClient proxyClient=createPulsarClient(proxyService.getServiceUrl(),clientAuthParams);\n  proxyClient.newConsumer().topic(topicName).subscriptionName(subscriptionName).subscribe().close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 269,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2853,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testForwardAuthData() throws Exception {\n  log.info(\"-- Starting {} test --\",methodName);\n  String namespaceName=\"my-property/my-ns\";\n  String topicName=\"persistent://my-property/my-ns/my-topic1\";\n  String subscriptionName=\"my-subscriber-name\";\n  String clientAuthParams=\"authParam:client\";\n  String proxyAuthParams=\"authParam:proxy\";\n  admin.namespaces().grantPermissionOnNamespace(namespaceName,\"proxy\",Sets.newHashSet(AuthAction.consume,AuthAction.produce));\n  admin.namespaces().grantPermissionOnNamespace(namespaceName,\"client\",Sets.newHashSet(AuthAction.consume,AuthAction.produce));\n  ProxyConfiguration proxyConfig=new ProxyConfiguration();\n  proxyConfig.setAuthenticationEnabled(true);\n  proxyConfig.setServicePort(Optional.of(0));\n  proxyConfig.setWebServicePort(Optional.of(0));\n  proxyConfig.setBrokerServiceURL(pulsar.getBrokerServiceUrl());\n  proxyConfig.setBrokerClientAuthenticationPlugin(BasicAuthentication.class.getName());\n  proxyConfig.setBrokerClientAuthenticationParameters(proxyAuthParams);\n  Set<String> providers=new HashSet<>();\n  providers.add(BasicAuthenticationProvider.class.getName());\n  proxyConfig.setAuthenticationProviders(providers);\n  AuthenticationService authenticationService=new AuthenticationService(PulsarConfigurationLoader.convertFrom(proxyConfig));\n  try (ProxyService proxyService=new ProxyService(proxyConfig,authenticationService)){\n    proxyService.start();\n    try (PulsarClient proxyClient=createPulsarClient(proxyService.getServiceUrl(),clientAuthParams)){\n      proxyClient.newConsumer().topic(topicName).subscriptionName(subscriptionName).subscribe();\n      Assert.fail(\"Shouldn't be able to subscribe, auth required\");\n    }\n catch (    Exception e) {\n    }\n  }\n   proxyConfig.setForwardAuthorizationCredentials(true);\n  authenticationService=new AuthenticationService(PulsarConfigurationLoader.convertFrom(proxyConfig));\n  @Cleanup ProxyService proxyService=new ProxyService(proxyConfig,authenticationService);\n  proxyService.start();\n  @Cleanup PulsarClient proxyClient=createPulsarClient(proxyService.getServiceUrl(),clientAuthParams);\n  proxyClient.newConsumer().topic(topicName).subscriptionName(subscriptionName).subscribe().close();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 277,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 121,
        "startColumnNumber" : 16,
        "endLineNumber" : 121,
        "endColumnNumber" : 106
      },
      "nodeContext" : "proxyClient.newConsumer().topic(topicName).subscriptionName(subscriptionName).subscribe();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "subscriptionName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 139,
      "startColumnNumber" : 68,
      "endLineNumber" : 139,
      "endColumnNumber" : 84
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 85
      },
      "nodeContext" : "proxyClient.newConsumer().topic(topicName).subscriptionName(subscriptionName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 97
      },
      "nodeContext" : "proxyClient.newConsumer().topic(topicName).subscriptionName(subscriptionName).subscribe()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 105
      },
      "nodeContext" : "proxyClient.newConsumer().topic(topicName).subscriptionName(subscriptionName).subscribe().close()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 106
      },
      "nodeContext" : "proxyClient.newConsumer().topic(topicName).subscriptionName(subscriptionName).subscribe().close();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2792,
        "startLineNumber" : 85,
        "startColumnNumber" : 55,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  log.info(\"-- Starting {} test --\",methodName);\n  String namespaceName=\"my-property/my-ns\";\n  String topicName=\"persistent://my-property/my-ns/my-topic1\";\n  String subscriptionName=\"my-subscriber-name\";\n  String clientAuthParams=\"authParam:client\";\n  String proxyAuthParams=\"authParam:proxy\";\n  admin.namespaces().grantPermissionOnNamespace(namespaceName,\"proxy\",Sets.newHashSet(AuthAction.consume,AuthAction.produce));\n  admin.namespaces().grantPermissionOnNamespace(namespaceName,\"client\",Sets.newHashSet(AuthAction.consume,AuthAction.produce));\n  ProxyConfiguration proxyConfig=new ProxyConfiguration();\n  proxyConfig.setAuthenticationEnabled(true);\n  proxyConfig.setServicePort(Optional.of(0));\n  proxyConfig.setWebServicePort(Optional.of(0));\n  proxyConfig.setBrokerServiceURL(pulsar.getBrokerServiceUrl());\n  proxyConfig.setBrokerClientAuthenticationPlugin(BasicAuthentication.class.getName());\n  proxyConfig.setBrokerClientAuthenticationParameters(proxyAuthParams);\n  Set<String> providers=new HashSet<>();\n  providers.add(BasicAuthenticationProvider.class.getName());\n  proxyConfig.setAuthenticationProviders(providers);\n  AuthenticationService authenticationService=new AuthenticationService(PulsarConfigurationLoader.convertFrom(proxyConfig));\n  try (ProxyService proxyService=new ProxyService(proxyConfig,authenticationService)){\n    proxyService.start();\n    try (PulsarClient proxyClient=createPulsarClient(proxyService.getServiceUrl(),clientAuthParams)){\n      proxyClient.newConsumer().topic(topicName).subscriptionName(subscriptionName).subscribe();\n      Assert.fail(\"Shouldn't be able to subscribe, auth required\");\n    }\n catch (    Exception e) {\n    }\n  }\n   proxyConfig.setForwardAuthorizationCredentials(true);\n  authenticationService=new AuthenticationService(PulsarConfigurationLoader.convertFrom(proxyConfig));\n  @Cleanup ProxyService proxyService=new ProxyService(proxyConfig,authenticationService);\n  proxyService.start();\n  @Cleanup PulsarClient proxyClient=createPulsarClient(proxyService.getServiceUrl(),clientAuthParams);\n  proxyClient.newConsumer().topic(topicName).subscriptionName(subscriptionName).subscribe().close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 269,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2853,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testForwardAuthData() throws Exception {\n  log.info(\"-- Starting {} test --\",methodName);\n  String namespaceName=\"my-property/my-ns\";\n  String topicName=\"persistent://my-property/my-ns/my-topic1\";\n  String subscriptionName=\"my-subscriber-name\";\n  String clientAuthParams=\"authParam:client\";\n  String proxyAuthParams=\"authParam:proxy\";\n  admin.namespaces().grantPermissionOnNamespace(namespaceName,\"proxy\",Sets.newHashSet(AuthAction.consume,AuthAction.produce));\n  admin.namespaces().grantPermissionOnNamespace(namespaceName,\"client\",Sets.newHashSet(AuthAction.consume,AuthAction.produce));\n  ProxyConfiguration proxyConfig=new ProxyConfiguration();\n  proxyConfig.setAuthenticationEnabled(true);\n  proxyConfig.setServicePort(Optional.of(0));\n  proxyConfig.setWebServicePort(Optional.of(0));\n  proxyConfig.setBrokerServiceURL(pulsar.getBrokerServiceUrl());\n  proxyConfig.setBrokerClientAuthenticationPlugin(BasicAuthentication.class.getName());\n  proxyConfig.setBrokerClientAuthenticationParameters(proxyAuthParams);\n  Set<String> providers=new HashSet<>();\n  providers.add(BasicAuthenticationProvider.class.getName());\n  proxyConfig.setAuthenticationProviders(providers);\n  AuthenticationService authenticationService=new AuthenticationService(PulsarConfigurationLoader.convertFrom(proxyConfig));\n  try (ProxyService proxyService=new ProxyService(proxyConfig,authenticationService)){\n    proxyService.start();\n    try (PulsarClient proxyClient=createPulsarClient(proxyService.getServiceUrl(),clientAuthParams)){\n      proxyClient.newConsumer().topic(topicName).subscriptionName(subscriptionName).subscribe();\n      Assert.fail(\"Shouldn't be able to subscribe, auth required\");\n    }\n catch (    Exception e) {\n    }\n  }\n   proxyConfig.setForwardAuthorizationCredentials(true);\n  authenticationService=new AuthenticationService(PulsarConfigurationLoader.convertFrom(proxyConfig));\n  @Cleanup ProxyService proxyService=new ProxyService(proxyConfig,authenticationService);\n  proxyService.start();\n  @Cleanup PulsarClient proxyClient=createPulsarClient(proxyService.getServiceUrl(),clientAuthParams);\n  proxyClient.newConsumer().topic(topicName).subscriptionName(subscriptionName).subscribe().close();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 277,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 106
      },
      "nodeContext" : "proxyClient.newConsumer().topic(topicName).subscriptionName(subscriptionName).subscribe().close();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 121,
    "startColumnNumber" : 76,
    "endLineNumber" : 121,
    "endColumnNumber" : 92
  }, {
    "charLength" : 16,
    "startLineNumber" : 139,
    "startColumnNumber" : 68,
    "endLineNumber" : 139,
    "endColumnNumber" : 84
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}