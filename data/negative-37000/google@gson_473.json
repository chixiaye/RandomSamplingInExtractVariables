{
  "id" : 473,
  "expression" : "noEscapeHtmlGson.toJson(target)",
  "projectName" : "google@gson",
  "commitID" : "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
  "filePath" : "/gson/src/test/java/com/google/gson/functional/EscapingTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "noEscapeHtmlGson.toJson(target)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 78,
      "startColumnNumber" : 32,
      "endLineNumber" : 78,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 78,
        "startColumnNumber" : 11,
        "endLineNumber" : 78,
        "endColumnNumber" : 63
      },
      "nodeContext" : "nonEscapedJsonForm=noEscapeHtmlGson.toJson(target)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 64
      },
      "nodeContext" : "String nonEscapedJsonForm=noEscapeHtmlGson.toJson(target);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 616,
        "startLineNumber" : 72,
        "startColumnNumber" : 88,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Gson escapeHtmlGson=new GsonBuilder().create();\n  Gson noEscapeHtmlGson=new GsonBuilder().disableHtmlEscaping().create();\n  BagOfPrimitives target=new BagOfPrimitives(1L,1,true,\"test' / w'ith\\\" / \\\\ <script>\");\n  String escapedJsonForm=escapeHtmlGson.toJson(target);\n  String nonEscapedJsonForm=noEscapeHtmlGson.toJson(target);\n  assertFalse(escapedJsonForm.equals(nonEscapedJsonForm));\n  assertEquals(target,noEscapeHtmlGson.fromJson(escapedJsonForm,BagOfPrimitives.class));\n  assertEquals(target,escapeHtmlGson.fromJson(nonEscapedJsonForm,BagOfPrimitives.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 82,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 702,
        "startLineNumber" : 72,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testGsonAcceptsEscapedAndNonEscapedJsonDeserialization() throws Exception {\n  Gson escapeHtmlGson=new GsonBuilder().create();\n  Gson noEscapeHtmlGson=new GsonBuilder().disableHtmlEscaping().create();\n  BagOfPrimitives target=new BagOfPrimitives(1L,1,true,\"test' / w'ith\\\" / \\\\ <script>\");\n  String escapedJsonForm=escapeHtmlGson.toJson(target);\n  String nonEscapedJsonForm=noEscapeHtmlGson.toJson(target);\n  assertFalse(escapedJsonForm.equals(nonEscapedJsonForm));\n  assertEquals(target,noEscapeHtmlGson.fromJson(escapedJsonForm,BagOfPrimitives.class));\n  assertEquals(target,escapeHtmlGson.fromJson(nonEscapedJsonForm,BagOfPrimitives.class));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 88,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 64
      },
      "nodeContext" : "String nonEscapedJsonForm=noEscapeHtmlGson.toJson(target);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 78,
    "startColumnNumber" : 32,
    "endLineNumber" : 78,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ]
}