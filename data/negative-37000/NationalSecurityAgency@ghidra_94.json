{
  "id" : 94,
  "expression" : "i",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/pcode/BlockMultiGoto.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 52,
      "startColumnNumber" : 14,
      "endLineNumber" : 52,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 52,
        "startColumnNumber" : 14,
        "endLineNumber" : 52,
        "endColumnNumber" : 30
      },
      "nodeContext" : "i < targets.size()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 542,
        "startLineNumber" : 52,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < targets.size(); ++i) {\n  PcodeBlock gototarget=targets.get(i);\n  StringBuilder buf=new StringBuilder();\n  buf.append(\"<target\");\n  PcodeBlock leaf=gototarget.getFrontLeaf();\n  int depth=gototarget.calcDepth(leaf);\n  SpecXmlUtils.encodeSignedIntegerAttribute(buf,\"index\",leaf.getIndex());\n  SpecXmlUtils.encodeSignedIntegerAttribute(buf,\"depth\",depth);\n  buf.append(\"/>\\n\");\n  writer.write(buf.toString());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 80,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 581,
        "startLineNumber" : 50,
        "startColumnNumber" : 59,
        "endLineNumber" : 65,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  super.saveXmlBody(writer);\n  for (int i=0; i < targets.size(); ++i) {\n    PcodeBlock gototarget=targets.get(i);\n    StringBuilder buf=new StringBuilder();\n    buf.append(\"<target\");\n    PcodeBlock leaf=gototarget.getFrontLeaf();\n    int depth=gototarget.calcDepth(leaf);\n    SpecXmlUtils.encodeSignedIntegerAttribute(buf,\"index\",leaf.getIndex());\n    SpecXmlUtils.encodeSignedIntegerAttribute(buf,\"depth\",depth);\n    buf.append(\"/>\\n\");\n    writer.write(buf.toString());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 651,
        "startLineNumber" : 49,
        "startColumnNumber" : 1,
        "endLineNumber" : 65,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void saveXmlBody(Writer writer) throws IOException {\n  super.saveXmlBody(writer);\n  for (int i=0; i < targets.size(); ++i) {\n    PcodeBlock gototarget=targets.get(i);\n    StringBuilder buf=new StringBuilder();\n    buf.append(\"<target\");\n    PcodeBlock leaf=gototarget.getFrontLeaf();\n    int depth=gototarget.calcDepth(leaf);\n    SpecXmlUtils.encodeSignedIntegerAttribute(buf,\"index\",leaf.getIndex());\n    SpecXmlUtils.encodeSignedIntegerAttribute(buf,\"depth\",depth);\n    buf.append(\"/>\\n\");\n    writer.write(buf.toString());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 52,
        "startColumnNumber" : 14,
        "endLineNumber" : 52,
        "endColumnNumber" : 30
      },
      "nodeContext" : "i < targets.size()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 54,
      "startColumnNumber" : 39,
      "endLineNumber" : 54,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 54,
        "startColumnNumber" : 27,
        "endLineNumber" : 54,
        "endColumnNumber" : 41
      },
      "nodeContext" : "targets.get(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 54,
        "startColumnNumber" : 14,
        "endLineNumber" : 54,
        "endColumnNumber" : 41
      },
      "nodeContext" : "gototarget=targets.get(i)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 54,
        "startColumnNumber" : 3,
        "endLineNumber" : 54,
        "endColumnNumber" : 42
      },
      "nodeContext" : "PcodeBlock gototarget=targets.get(i);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 508,
        "startLineNumber" : 52,
        "startColumnNumber" : 36,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  PcodeBlock gototarget=targets.get(i);\n  StringBuilder buf=new StringBuilder();\n  buf.append(\"<target\");\n  PcodeBlock leaf=gototarget.getFrontLeaf();\n  int depth=gototarget.calcDepth(leaf);\n  SpecXmlUtils.encodeSignedIntegerAttribute(buf,\"index\",leaf.getIndex());\n  SpecXmlUtils.encodeSignedIntegerAttribute(buf,\"depth\",depth);\n  buf.append(\"/>\\n\");\n  writer.write(buf.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 542,
        "startLineNumber" : 52,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < targets.size(); ++i) {\n  PcodeBlock gototarget=targets.get(i);\n  StringBuilder buf=new StringBuilder();\n  buf.append(\"<target\");\n  PcodeBlock leaf=gototarget.getFrontLeaf();\n  int depth=gototarget.calcDepth(leaf);\n  SpecXmlUtils.encodeSignedIntegerAttribute(buf,\"index\",leaf.getIndex());\n  SpecXmlUtils.encodeSignedIntegerAttribute(buf,\"depth\",depth);\n  buf.append(\"/>\\n\");\n  writer.write(buf.toString());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 80,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 581,
        "startLineNumber" : 50,
        "startColumnNumber" : 59,
        "endLineNumber" : 65,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  super.saveXmlBody(writer);\n  for (int i=0; i < targets.size(); ++i) {\n    PcodeBlock gototarget=targets.get(i);\n    StringBuilder buf=new StringBuilder();\n    buf.append(\"<target\");\n    PcodeBlock leaf=gototarget.getFrontLeaf();\n    int depth=gototarget.calcDepth(leaf);\n    SpecXmlUtils.encodeSignedIntegerAttribute(buf,\"index\",leaf.getIndex());\n    SpecXmlUtils.encodeSignedIntegerAttribute(buf,\"depth\",depth);\n    buf.append(\"/>\\n\");\n    writer.write(buf.toString());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 651,
        "startLineNumber" : 49,
        "startColumnNumber" : 1,
        "endLineNumber" : 65,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void saveXmlBody(Writer writer) throws IOException {\n  super.saveXmlBody(writer);\n  for (int i=0; i < targets.size(); ++i) {\n    PcodeBlock gototarget=targets.get(i);\n    StringBuilder buf=new StringBuilder();\n    buf.append(\"<target\");\n    PcodeBlock leaf=gototarget.getFrontLeaf();\n    int depth=gototarget.calcDepth(leaf);\n    SpecXmlUtils.encodeSignedIntegerAttribute(buf,\"index\",leaf.getIndex());\n    SpecXmlUtils.encodeSignedIntegerAttribute(buf,\"depth\",depth);\n    buf.append(\"/>\\n\");\n    writer.write(buf.toString());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 54,
        "startColumnNumber" : 3,
        "endLineNumber" : 54,
        "endColumnNumber" : 42
      },
      "nodeContext" : "PcodeBlock gototarget=targets.get(i);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 52,
    "startColumnNumber" : 14,
    "endLineNumber" : 52,
    "endColumnNumber" : 15
  }, {
    "charLength" : 1,
    "startLineNumber" : 54,
    "startColumnNumber" : 39,
    "endLineNumber" : 54,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}