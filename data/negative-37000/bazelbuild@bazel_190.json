{
  "id" : 190,
  "expression" : "allowedDerivedInputsBuilder",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/main/java/com/google/devtools/build/lib/bazel/rules/ninja/actions/NinjaAction.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "allowedDerivedInputsBuilder",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 105,
      "startColumnNumber" : 8,
      "endLineNumber" : 105,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 105,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 67
      },
      "nodeContext" : "allowedDerivedInputsBuilder.put(input.getExecPath(),input)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 105,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 68
      },
      "nodeContext" : "allowedDerivedInputsBuilder.put(input.getExecPath(),input);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 104,
        "startColumnNumber" : 37,
        "endLineNumber" : 106,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  allowedDerivedInputsBuilder.put(input.getExecPath(),input);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 104,
        "startColumnNumber" : 6,
        "endLineNumber" : 106,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (!input.isSourceArtifact()) {\n  allowedDerivedInputsBuilder.put(input.getExecPath(),input);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 103,
        "startColumnNumber" : 43,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!input.isSourceArtifact()) {\n    allowedDerivedInputsBuilder.put(input.getExecPath(),input);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 103,
        "startColumnNumber" : 4,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (Artifact input : inputs.toList()) {\n  if (!input.isSourceArtifact()) {\n    allowedDerivedInputsBuilder.put(input.getExecPath(),input);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 23,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1292,
        "startLineNumber" : 79,
        "startColumnNumber" : 38,
        "endLineNumber" : 113,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  super(owner,tools,inputs,outputs,Iterables.getFirst(outputs,null),AbstractAction.DEFAULT_RESOURCE_SET,commandLines,CommandLineLimits.UNLIMITED,true,env,executionInfo,progressMessage,runfilesSupplier,MNEMONIC,executeUnconditionally,null,null);\n  this.sourceRoot=sourceRoot;\n  this.depFile=depFile;\n  ImmutableMap.Builder<PathFragment,Artifact> allowedDerivedInputsBuilder=ImmutableMap.builder();\n  for (  Artifact input : inputs.toList()) {\n    if (!input.isSourceArtifact()) {\n      allowedDerivedInputsBuilder.put(input.getExecPath(),input);\n    }\n  }\n  this.allowedDerivedInputs=allowedDerivedInputsBuilder.build();\n  this.derivedOutputRoot=derivedOutputRoot;\n  this.originalInputs=inputs;\n  this.orderOnlyInputs=orderOnlyInputs;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1809,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 113,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public NinjaAction(ActionOwner owner,Root sourceRoot,NestedSet<Artifact> tools,NestedSet<Artifact> inputs,NestedSet<Artifact> orderOnlyInputs,List<? extends Artifact> outputs,CommandLines commandLines,ActionEnvironment env,ImmutableMap<String,String> executionInfo,CharSequence progressMessage,RunfilesSupplier runfilesSupplier,boolean executeUnconditionally,@Nullable Artifact depFile,ArtifactRoot derivedOutputRoot){\n  super(owner,tools,inputs,outputs,Iterables.getFirst(outputs,null),AbstractAction.DEFAULT_RESOURCE_SET,commandLines,CommandLineLimits.UNLIMITED,true,env,executionInfo,progressMessage,runfilesSupplier,MNEMONIC,executeUnconditionally,null,null);\n  this.sourceRoot=sourceRoot;\n  this.depFile=depFile;\n  ImmutableMap.Builder<PathFragment,Artifact> allowedDerivedInputsBuilder=ImmutableMap.builder();\n  for (  Artifact input : inputs.toList()) {\n    if (!input.isSourceArtifact()) {\n      allowedDerivedInputsBuilder.put(input.getExecPath(),input);\n    }\n  }\n  this.allowedDerivedInputs=allowedDerivedInputsBuilder.build();\n  this.derivedOutputRoot=derivedOutputRoot;\n  this.originalInputs=inputs;\n  this.orderOnlyInputs=orderOnlyInputs;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 181,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 105,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 68
      },
      "nodeContext" : "allowedDerivedInputsBuilder.put(input.getExecPath(),input);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "allowedDerivedInputsBuilder",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 108,
      "startColumnNumber" : 32,
      "endLineNumber" : 108,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 108,
        "startColumnNumber" : 32,
        "endLineNumber" : 108,
        "endColumnNumber" : 67
      },
      "nodeContext" : "allowedDerivedInputsBuilder.build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 108,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 67
      },
      "nodeContext" : "this.allowedDerivedInputs=allowedDerivedInputsBuilder.build()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 108,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 68
      },
      "nodeContext" : "this.allowedDerivedInputs=allowedDerivedInputsBuilder.build();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1292,
        "startLineNumber" : 79,
        "startColumnNumber" : 38,
        "endLineNumber" : 113,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  super(owner,tools,inputs,outputs,Iterables.getFirst(outputs,null),AbstractAction.DEFAULT_RESOURCE_SET,commandLines,CommandLineLimits.UNLIMITED,true,env,executionInfo,progressMessage,runfilesSupplier,MNEMONIC,executeUnconditionally,null,null);\n  this.sourceRoot=sourceRoot;\n  this.depFile=depFile;\n  ImmutableMap.Builder<PathFragment,Artifact> allowedDerivedInputsBuilder=ImmutableMap.builder();\n  for (  Artifact input : inputs.toList()) {\n    if (!input.isSourceArtifact()) {\n      allowedDerivedInputsBuilder.put(input.getExecPath(),input);\n    }\n  }\n  this.allowedDerivedInputs=allowedDerivedInputsBuilder.build();\n  this.derivedOutputRoot=derivedOutputRoot;\n  this.originalInputs=inputs;\n  this.orderOnlyInputs=orderOnlyInputs;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1809,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 113,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public NinjaAction(ActionOwner owner,Root sourceRoot,NestedSet<Artifact> tools,NestedSet<Artifact> inputs,NestedSet<Artifact> orderOnlyInputs,List<? extends Artifact> outputs,CommandLines commandLines,ActionEnvironment env,ImmutableMap<String,String> executionInfo,CharSequence progressMessage,RunfilesSupplier runfilesSupplier,boolean executeUnconditionally,@Nullable Artifact depFile,ArtifactRoot derivedOutputRoot){\n  super(owner,tools,inputs,outputs,Iterables.getFirst(outputs,null),AbstractAction.DEFAULT_RESOURCE_SET,commandLines,CommandLineLimits.UNLIMITED,true,env,executionInfo,progressMessage,runfilesSupplier,MNEMONIC,executeUnconditionally,null,null);\n  this.sourceRoot=sourceRoot;\n  this.depFile=depFile;\n  ImmutableMap.Builder<PathFragment,Artifact> allowedDerivedInputsBuilder=ImmutableMap.builder();\n  for (  Artifact input : inputs.toList()) {\n    if (!input.isSourceArtifact()) {\n      allowedDerivedInputsBuilder.put(input.getExecPath(),input);\n    }\n  }\n  this.allowedDerivedInputs=allowedDerivedInputsBuilder.build();\n  this.derivedOutputRoot=derivedOutputRoot;\n  this.originalInputs=inputs;\n  this.orderOnlyInputs=orderOnlyInputs;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 181,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 108,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 68
      },
      "nodeContext" : "this.allowedDerivedInputs=allowedDerivedInputsBuilder.build();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 105,
    "startColumnNumber" : 8,
    "endLineNumber" : 105,
    "endColumnNumber" : 35
  }, {
    "charLength" : 27,
    "startLineNumber" : 108,
    "startColumnNumber" : 32,
    "endLineNumber" : 108,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}