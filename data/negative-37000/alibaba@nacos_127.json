{
  "id" : 127,
  "expression" : "super.getDefaultResponseInstance(handlerClazz)",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/core/src/main/java/com/alibaba/nacos/core/remote/control/TpsControlRequestFilter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "super.getDefaultResponseInstance(handlerClazz)",
    "nodeType" : "SuperMethodInvocation",
    "nodePosition" : {
      "charLength" : 46,
      "startLineNumber" : 82,
      "startColumnNumber" : 31,
      "endLineNumber" : 82,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 82,
        "startColumnNumber" : 20,
        "endLineNumber" : 82,
        "endColumnNumber" : 77
      },
      "nodeContext" : "response=super.getDefaultResponseInstance(handlerClazz)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 82,
        "startColumnNumber" : 20,
        "endLineNumber" : 82,
        "endColumnNumber" : 78
      },
      "nodeContext" : "response=super.getDefaultResponseInstance(handlerClazz);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 232,
        "startLineNumber" : 81,
        "startColumnNumber" : 20,
        "endLineNumber" : 85,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  response=super.getDefaultResponseInstance(handlerClazz);\n  response.setErrorInfo(NacosException.OVER_THRESHOLD,\"Tps Flow restricted\");\n  return response;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 477,
        "startLineNumber" : 81,
        "startColumnNumber" : 16,
        "endLineNumber" : 89,
        "endColumnNumber" : 17
      },
      "nodeContext" : "try {\n  response=super.getDefaultResponseInstance(handlerClazz);\n  response.setErrorInfo(NacosException.OVER_THRESHOLD,\"Tps Flow restricted\");\n  return response;\n}\n catch (Exception e) {\n  Loggers.TPS_CONTROL_DETAIL.warn(\"Tps monitor fail , request: {},exception:{}\",request.getClass().getSimpleName(),e);\n  return null;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 568,
        "startLineNumber" : 79,
        "startColumnNumber" : 23,
        "endLineNumber" : 91,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Response response=null;\n  try {\n    response=super.getDefaultResponseInstance(handlerClazz);\n    response.setErrorInfo(NacosException.OVER_THRESHOLD,\"Tps Flow restricted\");\n    return response;\n  }\n catch (  Exception e) {\n    Loggers.TPS_CONTROL_DETAIL.warn(\"Tps monitor fail , request: {},exception:{}\",request.getClass().getSimpleName(),e);\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 579,
        "startLineNumber" : 79,
        "startColumnNumber" : 12,
        "endLineNumber" : 91,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!pass) {\n  Response response=null;\n  try {\n    response=super.getDefaultResponseInstance(handlerClazz);\n    response.setErrorInfo(NacosException.OVER_THRESHOLD,\"Tps Flow restricted\");\n    return response;\n  }\n catch (  Exception e) {\n    Loggers.TPS_CONTROL_DETAIL.warn(\"Tps monitor fail , request: {},exception:{}\",request.getClass().getSimpleName(),e);\n    return null;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1682,
        "startLineNumber" : 54,
        "startColumnNumber" : 100,
        "endLineNumber" : 92,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  TpsControl tpsControl=method.getAnnotation(TpsControl.class);\n  String pointName=tpsControl.pointName();\n  Class[] parsers=tpsControl.parsers();\n  List<MonitorKey> monitorKeys=new ArrayList<>();\n  monitorKeys.add(new ClientIpMonitorKey(meta.getClientIp()));\n  if (parsers != null) {\n    for (    Class clazz : parsers) {\n      try {\n        if (MonitorKeyParser.class.isAssignableFrom(clazz)) {\n          MonitorKey parseKey=((MonitorKeyParser)(clazz.newInstance())).parse(request,meta);\n          if (parseKey != null) {\n            monitorKeys.add(parseKey);\n          }\n        }\n      }\n catch (      Throwable throwable) {\n      }\n    }\n  }\n  boolean pass=tpsMonitorManager.applyTps(pointName,meta.getConnectionId(),monitorKeys);\n  if (!pass) {\n    Response response=null;\n    try {\n      response=super.getDefaultResponseInstance(handlerClazz);\n      response.setErrorInfo(NacosException.OVER_THRESHOLD,\"Tps Flow restricted\");\n      return response;\n    }\n catch (    Exception e) {\n      Loggers.TPS_CONTROL_DETAIL.warn(\"Tps monitor fail , request: {},exception:{}\",request.getClass().getSimpleName(),e);\n      return null;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 168,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1774,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 92,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (method.isAnnotationPresent(TpsControl.class) && TpsControlConfig.isTpsControlEnabled()) {\n  TpsControl tpsControl=method.getAnnotation(TpsControl.class);\n  String pointName=tpsControl.pointName();\n  Class[] parsers=tpsControl.parsers();\n  List<MonitorKey> monitorKeys=new ArrayList<>();\n  monitorKeys.add(new ClientIpMonitorKey(meta.getClientIp()));\n  if (parsers != null) {\n    for (    Class clazz : parsers) {\n      try {\n        if (MonitorKeyParser.class.isAssignableFrom(clazz)) {\n          MonitorKey parseKey=((MonitorKeyParser)(clazz.newInstance())).parse(request,meta);\n          if (parseKey != null) {\n            monitorKeys.add(parseKey);\n          }\n        }\n      }\n catch (      Throwable throwable) {\n      }\n    }\n  }\n  boolean pass=tpsMonitorManager.applyTps(pointName,meta.getConnectionId(),monitorKeys);\n  if (!pass) {\n    Response response=null;\n    try {\n      response=super.getDefaultResponseInstance(handlerClazz);\n      response.setErrorInfo(NacosException.OVER_THRESHOLD,\"Tps Flow restricted\");\n      return response;\n    }\n catch (    Exception e) {\n      Loggers.TPS_CONTROL_DETAIL.warn(\"Tps monitor fail , request: {},exception:{}\",request.getClass().getSimpleName(),e);\n      return null;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 179,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2006,
        "startLineNumber" : 45,
        "startColumnNumber" : 85,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Method method=null;\n  try {\n    method=getHandleMethod(handlerClazz);\n  }\n catch (  NacosException e) {\n    return null;\n  }\n  if (method.isAnnotationPresent(TpsControl.class) && TpsControlConfig.isTpsControlEnabled()) {\n    TpsControl tpsControl=method.getAnnotation(TpsControl.class);\n    String pointName=tpsControl.pointName();\n    Class[] parsers=tpsControl.parsers();\n    List<MonitorKey> monitorKeys=new ArrayList<>();\n    monitorKeys.add(new ClientIpMonitorKey(meta.getClientIp()));\n    if (parsers != null) {\n      for (      Class clazz : parsers) {\n        try {\n          if (MonitorKeyParser.class.isAssignableFrom(clazz)) {\n            MonitorKey parseKey=((MonitorKeyParser)(clazz.newInstance())).parse(request,meta);\n            if (parseKey != null) {\n              monitorKeys.add(parseKey);\n            }\n          }\n        }\n catch (        Throwable throwable) {\n        }\n      }\n    }\n    boolean pass=tpsMonitorManager.applyTps(pointName,meta.getConnectionId(),monitorKeys);\n    if (!pass) {\n      Response response=null;\n      try {\n        response=super.getDefaultResponseInstance(handlerClazz);\n        response.setErrorInfo(NacosException.OVER_THRESHOLD,\"Tps Flow restricted\");\n        return response;\n      }\n catch (      Exception e) {\n        Loggers.TPS_CONTROL_DETAIL.warn(\"Tps monitor fail , request: {},exception:{}\",request.getClass().getSimpleName(),e);\n        return null;\n      }\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 204,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2101,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected Response filter(Request request,RequestMeta meta,Class handlerClazz){\n  Method method=null;\n  try {\n    method=getHandleMethod(handlerClazz);\n  }\n catch (  NacosException e) {\n    return null;\n  }\n  if (method.isAnnotationPresent(TpsControl.class) && TpsControlConfig.isTpsControlEnabled()) {\n    TpsControl tpsControl=method.getAnnotation(TpsControl.class);\n    String pointName=tpsControl.pointName();\n    Class[] parsers=tpsControl.parsers();\n    List<MonitorKey> monitorKeys=new ArrayList<>();\n    monitorKeys.add(new ClientIpMonitorKey(meta.getClientIp()));\n    if (parsers != null) {\n      for (      Class clazz : parsers) {\n        try {\n          if (MonitorKeyParser.class.isAssignableFrom(clazz)) {\n            MonitorKey parseKey=((MonitorKeyParser)(clazz.newInstance())).parse(request,meta);\n            if (parseKey != null) {\n              monitorKeys.add(parseKey);\n            }\n          }\n        }\n catch (        Throwable throwable) {\n        }\n      }\n    }\n    boolean pass=tpsMonitorManager.applyTps(pointName,meta.getConnectionId(),monitorKeys);\n    if (!pass) {\n      Response response=null;\n      try {\n        response=super.getDefaultResponseInstance(handlerClazz);\n        response.setErrorInfo(NacosException.OVER_THRESHOLD,\"Tps Flow restricted\");\n        return response;\n      }\n catch (      Exception e) {\n        Loggers.TPS_CONTROL_DETAIL.warn(\"Tps monitor fail , request: {},exception:{}\",request.getClass().getSimpleName(),e);\n        return null;\n      }\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 223,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 82,
        "startColumnNumber" : 20,
        "endLineNumber" : 82,
        "endColumnNumber" : 78
      },
      "nodeContext" : "response=super.getDefaultResponseInstance(handlerClazz);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "com.alibaba.nacos.api.remote.response.Response"
  } ],
  "positionList" : [ {
    "charLength" : 46,
    "startLineNumber" : 82,
    "startColumnNumber" : 31,
    "endLineNumber" : 82,
    "endColumnNumber" : 77
  } ],
  "layoutRelationDataList" : [ ]
}