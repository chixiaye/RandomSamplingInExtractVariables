{
  "id" : 63,
  "expression" : "rangeNbp.flatMap(new Function<Integer,Observable<Integer>>(){\n  @Override public Observable<Integer> apply(  Integer v){\n    return Observable.just(v);\n  }\n}\n)",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/perf/java/io/reactivex/RxVsStreamPerf.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "rangeNbp.flatMap(new Function<Integer,Observable<Integer>>(){\n  @Override public Observable<Integer> apply(  Integer v){\n    return Observable.just(v);\n  }\n}\n)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 216,
      "startLineNumber" : 69,
      "startColumnNumber" : 30,
      "endLineNumber" : 74,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 35,
    "astHeight" : 8,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 238,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 10
      },
      "nodeContext" : "rangeNbpFlatMapJust=rangeNbp.flatMap(new Function<Integer,Observable<Integer>>(){\n  @Override public Observable<Integer> apply(  Integer v){\n    return Observable.just(v);\n  }\n}\n)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 37,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 239,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 11
      },
      "nodeContext" : "rangeNbpFlatMapJust=rangeNbp.flatMap(new Function<Integer,Observable<Integer>>(){\n  @Override public Observable<Integer> apply(  Integer v){\n    return Observable.just(v);\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 38,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1166,
        "startLineNumber" : 50,
        "startColumnNumber" : 24,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  range=Flowable.range(1,times);\n  rangeFlatMapJust=range.flatMap(new Function<Integer,Publisher<Integer>>(){\n    @Override public Publisher<Integer> apply(    Integer v){\n      return Flowable.just(v);\n    }\n  }\n);\n  rangeFlatMap=range.flatMap(new Function<Integer,Publisher<Integer>>(){\n    @Override public Publisher<Integer> apply(    Integer v){\n      return Flowable.range(v,2);\n    }\n  }\n);\n  rangeNbp=Observable.range(1,times);\n  rangeNbpFlatMapJust=rangeNbp.flatMap(new Function<Integer,Observable<Integer>>(){\n    @Override public Observable<Integer> apply(    Integer v){\n      return Observable.just(v);\n    }\n  }\n);\n  rangeNbpFlatMap=rangeNbp.flatMap(new Function<Integer,Observable<Integer>>(){\n    @Override public Observable<Integer> apply(    Integer v){\n      return Observable.range(v,2);\n    }\n  }\n);\n  values=range.toList().toBlocking().first();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 181,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1198,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Setup public void setup(){\n  range=Flowable.range(1,times);\n  rangeFlatMapJust=range.flatMap(new Function<Integer,Publisher<Integer>>(){\n    @Override public Publisher<Integer> apply(    Integer v){\n      return Flowable.just(v);\n    }\n  }\n);\n  rangeFlatMap=range.flatMap(new Function<Integer,Publisher<Integer>>(){\n    @Override public Publisher<Integer> apply(    Integer v){\n      return Flowable.range(v,2);\n    }\n  }\n);\n  rangeNbp=Observable.range(1,times);\n  rangeNbpFlatMapJust=rangeNbp.flatMap(new Function<Integer,Observable<Integer>>(){\n    @Override public Observable<Integer> apply(    Integer v){\n      return Observable.just(v);\n    }\n  }\n);\n  rangeNbpFlatMap=rangeNbp.flatMap(new Function<Integer,Observable<Integer>>(){\n    @Override public Observable<Integer> apply(    Integer v){\n      return Observable.range(v,2);\n    }\n  }\n);\n  values=range.toList().toBlocking().first();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 187,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 239,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 11
      },
      "nodeContext" : "rangeNbpFlatMapJust=rangeNbp.flatMap(new Function<Integer,Observable<Integer>>(){\n  @Override public Observable<Integer> apply(  Integer v){\n    return Observable.just(v);\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 38,
      "astHeight" : 10
    },
    "tokenLength" : 12,
    "type" : "io.reactivex.Observable<java.lang.Integer>"
  } ],
  "positionList" : [ {
    "charLength" : 216,
    "startLineNumber" : 69,
    "startColumnNumber" : 30,
    "endLineNumber" : 74,
    "endColumnNumber" : 10
  } ],
  "layoutRelationDataList" : [ ]
}