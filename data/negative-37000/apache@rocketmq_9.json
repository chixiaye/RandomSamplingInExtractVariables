{
  "id" : 9,
  "expression" : "compareEncode",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/common/src/test/java/org/apache/rocketmq/common/RegisterBrokerBodyTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "compareEncode",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 44,
      "startColumnNumber" : 27,
      "endLineNumber" : 44,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 44,
        "startColumnNumber" : 27,
        "endLineNumber" : 44,
        "endColumnNumber" : 47
      },
      "nodeContext" : "compareEncode.length",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 48
      },
      "nodeContext" : "System.out.println(compareEncode.length)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 49
      },
      "nodeContext" : "System.out.println(compareEncode.length);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1118,
        "startLineNumber" : 30,
        "startColumnNumber" : 56,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  RegisterBrokerBody registerBrokerBody=new RegisterBrokerBody();\n  TopicConfigSerializeWrapper topicConfigSerializeWrapper=new TopicConfigSerializeWrapper();\n  registerBrokerBody.setTopicConfigSerializeWrapper(topicConfigSerializeWrapper);\n  ConcurrentMap<String,TopicConfig> topicConfigTable=new ConcurrentHashMap<String,TopicConfig>();\n  for (int i=0; i < 10000; i++) {\n    topicConfigTable.put(String.valueOf(i),new TopicConfig(String.valueOf(i)));\n  }\n  topicConfigSerializeWrapper.setTopicConfigTable(topicConfigTable);\n  byte[] compareEncode=registerBrokerBody.encode(true);\n  byte[] encode2=registerBrokerBody.encode(false);\n  System.out.println(compareEncode.length);\n  System.out.println(encode2.length);\n  RegisterBrokerBody decodeRegisterBrokerBody=RegisterBrokerBody.decode(compareEncode,true);\n  assertEquals(registerBrokerBody.getTopicConfigSerializeWrapper().getTopicConfigTable().size(),decodeRegisterBrokerBody.getTopicConfigSerializeWrapper().getTopicConfigTable().size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1180,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void test_encode_decode() throws IOException {\n  RegisterBrokerBody registerBrokerBody=new RegisterBrokerBody();\n  TopicConfigSerializeWrapper topicConfigSerializeWrapper=new TopicConfigSerializeWrapper();\n  registerBrokerBody.setTopicConfigSerializeWrapper(topicConfigSerializeWrapper);\n  ConcurrentMap<String,TopicConfig> topicConfigTable=new ConcurrentHashMap<String,TopicConfig>();\n  for (int i=0; i < 10000; i++) {\n    topicConfigTable.put(String.valueOf(i),new TopicConfig(String.valueOf(i)));\n  }\n  topicConfigSerializeWrapper.setTopicConfigTable(topicConfigTable);\n  byte[] compareEncode=registerBrokerBody.encode(true);\n  byte[] encode2=registerBrokerBody.encode(false);\n  System.out.println(compareEncode.length);\n  System.out.println(encode2.length);\n  RegisterBrokerBody decodeRegisterBrokerBody=RegisterBrokerBody.decode(compareEncode,true);\n  assertEquals(registerBrokerBody.getTopicConfigSerializeWrapper().getTopicConfigTable().size(),decodeRegisterBrokerBody.getTopicConfigSerializeWrapper().getTopicConfigTable().size());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 145,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 49
      },
      "nodeContext" : "System.out.println(compareEncode.length);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "byte[]"
  }, {
    "nodeContext" : "compareEncode",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 46,
      "startColumnNumber" : 80,
      "endLineNumber" : 46,
      "endColumnNumber" : 93
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 46,
        "startColumnNumber" : 54,
        "endLineNumber" : 46,
        "endColumnNumber" : 100
      },
      "nodeContext" : "RegisterBrokerBody.decode(compareEncode,true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 46,
        "startColumnNumber" : 27,
        "endLineNumber" : 46,
        "endColumnNumber" : 100
      },
      "nodeContext" : "decodeRegisterBrokerBody=RegisterBrokerBody.decode(compareEncode,true)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 101
      },
      "nodeContext" : "RegisterBrokerBody decodeRegisterBrokerBody=RegisterBrokerBody.decode(compareEncode,true);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1118,
        "startLineNumber" : 30,
        "startColumnNumber" : 56,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  RegisterBrokerBody registerBrokerBody=new RegisterBrokerBody();\n  TopicConfigSerializeWrapper topicConfigSerializeWrapper=new TopicConfigSerializeWrapper();\n  registerBrokerBody.setTopicConfigSerializeWrapper(topicConfigSerializeWrapper);\n  ConcurrentMap<String,TopicConfig> topicConfigTable=new ConcurrentHashMap<String,TopicConfig>();\n  for (int i=0; i < 10000; i++) {\n    topicConfigTable.put(String.valueOf(i),new TopicConfig(String.valueOf(i)));\n  }\n  topicConfigSerializeWrapper.setTopicConfigTable(topicConfigTable);\n  byte[] compareEncode=registerBrokerBody.encode(true);\n  byte[] encode2=registerBrokerBody.encode(false);\n  System.out.println(compareEncode.length);\n  System.out.println(encode2.length);\n  RegisterBrokerBody decodeRegisterBrokerBody=RegisterBrokerBody.decode(compareEncode,true);\n  assertEquals(registerBrokerBody.getTopicConfigSerializeWrapper().getTopicConfigTable().size(),decodeRegisterBrokerBody.getTopicConfigSerializeWrapper().getTopicConfigTable().size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1180,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void test_encode_decode() throws IOException {\n  RegisterBrokerBody registerBrokerBody=new RegisterBrokerBody();\n  TopicConfigSerializeWrapper topicConfigSerializeWrapper=new TopicConfigSerializeWrapper();\n  registerBrokerBody.setTopicConfigSerializeWrapper(topicConfigSerializeWrapper);\n  ConcurrentMap<String,TopicConfig> topicConfigTable=new ConcurrentHashMap<String,TopicConfig>();\n  for (int i=0; i < 10000; i++) {\n    topicConfigTable.put(String.valueOf(i),new TopicConfig(String.valueOf(i)));\n  }\n  topicConfigSerializeWrapper.setTopicConfigTable(topicConfigTable);\n  byte[] compareEncode=registerBrokerBody.encode(true);\n  byte[] encode2=registerBrokerBody.encode(false);\n  System.out.println(compareEncode.length);\n  System.out.println(encode2.length);\n  RegisterBrokerBody decodeRegisterBrokerBody=RegisterBrokerBody.decode(compareEncode,true);\n  assertEquals(registerBrokerBody.getTopicConfigSerializeWrapper().getTopicConfigTable().size(),decodeRegisterBrokerBody.getTopicConfigSerializeWrapper().getTopicConfigTable().size());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 145,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 101
      },
      "nodeContext" : "RegisterBrokerBody decodeRegisterBrokerBody=RegisterBrokerBody.decode(compareEncode,true);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "byte[]"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 44,
    "startColumnNumber" : 27,
    "endLineNumber" : 44,
    "endColumnNumber" : 40
  }, {
    "charLength" : 13,
    "startLineNumber" : 46,
    "startColumnNumber" : 80,
    "endLineNumber" : 46,
    "endColumnNumber" : 93
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}