{
  "id" : 32,
  "expression" : "Observable.just(1,2,3,4,5,6).window(3)",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/observable/ObservableWindowTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Observable.just(1,2,3,4,5,6).window(3)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 57,
      "startLineNumber" : 32,
      "startColumnNumber" : 12,
      "endLineNumber" : 33,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 12,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 325,
        "startLineNumber" : 32,
        "startColumnNumber" : 12,
        "endLineNumber" : 39,
        "endColumnNumber" : 14
      },
      "nodeContext" : "Observable.just(1,2,3,4,5,6).window(3).map(new Function<Observable<Integer>,Observable<List<Integer>>>(){\n  @Override public Observable<List<Integer>> apply(  Observable<Integer> xs){\n    return xs.toList();\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 57,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 368,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 9
      },
      "nodeContext" : "Observable.concat(Observable.just(1,2,3,4,5,6).window(3).map(new Function<Observable<Integer>,Observable<List<Integer>>>(){\n  @Override public Observable<List<Integer>> apply(  Observable<Integer> xs){\n    return xs.toList();\n  }\n}\n))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 60,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 391,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 21
      },
      "nodeContext" : "Observable.concat(Observable.just(1,2,3,4,5,6).window(3).map(new Function<Observable<Integer>,Observable<List<Integer>>>(){\n  @Override public Observable<List<Integer>> apply(  Observable<Integer> xs){\n    return xs.toList();\n  }\n}\n)).toBlocking()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 62,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 565,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 10
      },
      "nodeContext" : "Observable.concat(Observable.just(1,2,3,4,5,6).window(3).map(new Function<Observable<Integer>,Observable<List<Integer>>>(){\n  @Override public Observable<List<Integer>> apply(  Observable<Integer> xs){\n    return xs.toList();\n  }\n}\n)).toBlocking().forEach(new Consumer<List<Integer>>(){\n  @Override public void accept(  List<Integer> xs){\n    lists.add(xs);\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 93,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 566,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 11
      },
      "nodeContext" : "Observable.concat(Observable.just(1,2,3,4,5,6).window(3).map(new Function<Observable<Integer>,Observable<List<Integer>>>(){\n  @Override public Observable<List<Integer>> apply(  Observable<Integer> xs){\n    return xs.toList();\n  }\n}\n)).toBlocking().forEach(new Consumer<List<Integer>>(){\n  @Override public void accept(  List<Integer> xs){\n    lists.add(xs);\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 94,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 896,
        "startLineNumber" : 28,
        "startColumnNumber" : 29,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final ArrayList<List<Integer>> lists=new ArrayList<List<Integer>>();\n  Observable.concat(Observable.just(1,2,3,4,5,6).window(3).map(new Function<Observable<Integer>,Observable<List<Integer>>>(){\n    @Override public Observable<List<Integer>> apply(    Observable<Integer> xs){\n      return xs.toList();\n    }\n  }\n)).toBlocking().forEach(new Consumer<List<Integer>>(){\n    @Override public void accept(    List<Integer> xs){\n      lists.add(xs);\n    }\n  }\n);\n  assertArrayEquals(lists.get(0).toArray(new Integer[3]),new Integer[]{1,2,3});\n  assertArrayEquals(lists.get(1).toArray(new Integer[3]),new Integer[]{4,5,6});\n  assertEquals(2,lists.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 932,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testWindow(){\n  final ArrayList<List<Integer>> lists=new ArrayList<List<Integer>>();\n  Observable.concat(Observable.just(1,2,3,4,5,6).window(3).map(new Function<Observable<Integer>,Observable<List<Integer>>>(){\n    @Override public Observable<List<Integer>> apply(    Observable<Integer> xs){\n      return xs.toList();\n    }\n  }\n)).toBlocking().forEach(new Consumer<List<Integer>>(){\n    @Override public void accept(    List<Integer> xs){\n      lists.add(xs);\n    }\n  }\n);\n  assertArrayEquals(lists.get(0).toArray(new Integer[3]),new Integer[]{1,2,3});\n  assertArrayEquals(lists.get(1).toArray(new Integer[3]),new Integer[]{4,5,6});\n  assertEquals(2,lists.size());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 177,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 325,
        "startLineNumber" : 32,
        "startColumnNumber" : 12,
        "endLineNumber" : 39,
        "endColumnNumber" : 14
      },
      "nodeContext" : "Observable.just(1,2,3,4,5,6).window(3).map(new Function<Observable<Integer>,Observable<List<Integer>>>(){\n  @Override public Observable<List<Integer>> apply(  Observable<Integer> xs){\n    return xs.toList();\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 57,
      "astHeight" : 8
    },
    "tokenLength" : 10,
    "type" : "io.reactivex.Observable<io.reactivex.Observable<java.lang.Integer>>"
  } ],
  "positionList" : [ {
    "charLength" : 57,
    "startLineNumber" : 32,
    "startColumnNumber" : 12,
    "endLineNumber" : 33,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ ]
}