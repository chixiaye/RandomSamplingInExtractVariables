{
  "id" : 220,
  "expression" : "\"Unexpected throttle time field: \"",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/test/java/org/apache/kafka/common/protocol/ApiKeysTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Unexpected throttle time field: \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 71,
      "startColumnNumber" : 46,
      "endLineNumber" : 71,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 71,
        "startColumnNumber" : 46,
        "endLineNumber" : 71,
        "endColumnNumber" : 89
      },
      "nodeContext" : "\"Unexpected throttle time field: \" + apiKey",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 71,
        "startColumnNumber" : 16,
        "endLineNumber" : 71,
        "endColumnNumber" : 90
      },
      "nodeContext" : "assertNull(throttleTimeField,\"Unexpected throttle time field: \" + apiKey)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 71,
        "startColumnNumber" : 16,
        "endLineNumber" : 71,
        "endColumnNumber" : 91
      },
      "nodeContext" : "assertNull(throttleTimeField,\"Unexpected throttle time field: \" + apiKey);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 337,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 73,
        "endColumnNumber" : 91
      },
      "nodeContext" : "if ((apiKey.clusterAction && !clusterActionsWithThrottleTimeMs.contains(apiKey)) || authenticationKeys.contains(apiKey)) assertNull(throttleTimeField,\"Unexpected throttle time field: \" + apiKey);\n else assertNotNull(throttleTimeField,\"Throttle time field missing: \" + apiKey);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 542,
        "startLineNumber" : 66,
        "startColumnNumber" : 53,
        "endLineNumber" : 74,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Schema responseSchema=apiKey.messageType.responseSchemas()[apiKey.latestVersion()];\n  BoundField throttleTimeField=responseSchema.get(\"throttle_time_ms\");\n  if ((apiKey.clusterAction && !clusterActionsWithThrottleTimeMs.contains(apiKey)) || authenticationKeys.contains(apiKey))   assertNull(throttleTimeField,\"Unexpected throttle time field: \" + apiKey);\n else   assertNotNull(throttleTimeField,\"Throttle time field missing: \" + apiKey);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 587,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (ApiKeys apiKey : ApiKeys.zkBrokerApis()) {\n  Schema responseSchema=apiKey.messageType.responseSchemas()[apiKey.latestVersion()];\n  BoundField throttleTimeField=responseSchema.get(\"throttle_time_ms\");\n  if ((apiKey.clusterAction && !clusterActionsWithThrottleTimeMs.contains(apiKey)) || authenticationKeys.contains(apiKey))   assertNull(throttleTimeField,\"Unexpected throttle time field: \" + apiKey);\n else   assertNotNull(throttleTimeField,\"Throttle time field missing: \" + apiKey);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 62,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 62,
        "startColumnNumber" : 43,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Set<ApiKeys> authenticationKeys=EnumSet.of(ApiKeys.SASL_HANDSHAKE,ApiKeys.SASL_AUTHENTICATE);\n  Set<ApiKeys> clusterActionsWithThrottleTimeMs=EnumSet.of(ApiKeys.ALTER_ISR,ApiKeys.ALLOCATE_PRODUCER_IDS);\n  for (  ApiKeys apiKey : ApiKeys.zkBrokerApis()) {\n    Schema responseSchema=apiKey.messageType.responseSchemas()[apiKey.latestVersion()];\n    BoundField throttleTimeField=responseSchema.get(\"throttle_time_ms\");\n    if ((apiKey.clusterAction && !clusterActionsWithThrottleTimeMs.contains(apiKey)) || authenticationKeys.contains(apiKey))     assertNull(throttleTimeField,\"Unexpected throttle time field: \" + apiKey);\n else     assertNotNull(throttleTimeField,\"Throttle time field missing: \" + apiKey);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1542,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * All valid client responses which may be throttled should have a field named 'throttle_time_ms' to return the throttle time to the client. Exclusions are <ul> <li> Cluster actions used only for inter-broker are throttled only if unauthorized <li> SASL_HANDSHAKE and SASL_AUTHENTICATE are not throttled when used for authentication when a connection is established or for re-authentication thereafter; these requests return an error response that may be throttled if they are sent otherwise. </ul>\n */\n@Test public void testResponseThrottleTime(){\n  Set<ApiKeys> authenticationKeys=EnumSet.of(ApiKeys.SASL_HANDSHAKE,ApiKeys.SASL_AUTHENTICATE);\n  Set<ApiKeys> clusterActionsWithThrottleTimeMs=EnumSet.of(ApiKeys.ALTER_ISR,ApiKeys.ALLOCATE_PRODUCER_IDS);\n  for (  ApiKeys apiKey : ApiKeys.zkBrokerApis()) {\n    Schema responseSchema=apiKey.messageType.responseSchemas()[apiKey.latestVersion()];\n    BoundField throttleTimeField=responseSchema.get(\"throttle_time_ms\");\n    if ((apiKey.clusterAction && !clusterActionsWithThrottleTimeMs.contains(apiKey)) || authenticationKeys.contains(apiKey))     assertNull(throttleTimeField,\"Unexpected throttle time field: \" + apiKey);\n else     assertNotNull(throttleTimeField,\"Throttle time field missing: \" + apiKey);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 71,
        "startColumnNumber" : 16,
        "endLineNumber" : 71,
        "endColumnNumber" : 91
      },
      "nodeContext" : "assertNull(throttleTimeField,\"Unexpected throttle time field: \" + apiKey);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 71,
    "startColumnNumber" : 46,
    "endLineNumber" : 71,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ ]
}