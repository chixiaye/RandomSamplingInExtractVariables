{
  "id" : 65,
  "expression" : "lastTokenBufferStart",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/runtime/Java/src/org/antlr/v4/runtime/UnbufferedTokenStream.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "lastTokenBufferStart",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 266,
      "startColumnNumber" : 15,
      "endLineNumber" : 266,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 266,
        "startColumnNumber" : 3,
        "endLineNumber" : 266,
        "endColumnNumber" : 35
      },
      "nodeContext" : "lastToken=lastTokenBufferStart",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 266,
        "startColumnNumber" : 3,
        "endLineNumber" : 266,
        "endColumnNumber" : 36
      },
      "nodeContext" : "lastToken=lastTokenBufferStart;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 265,
        "startColumnNumber" : 14,
        "endLineNumber" : 267,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  lastToken=lastTokenBufferStart;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 265,
        "startColumnNumber" : 2,
        "endLineNumber" : 270,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (p == 0) {\n  lastToken=lastTokenBufferStart;\n}\n else {\n  lastToken=tokens[p - 1];\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 748,
        "startLineNumber" : 243,
        "startColumnNumber" : 29,
        "endLineNumber" : 271,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (index == currentTokenIndex) {\n    return;\n  }\n  if (index > currentTokenIndex) {\n    sync(index - currentTokenIndex);\n    index=Math.min(index,getBufferStartIndex() + n - 1);\n  }\n  int bufferStartIndex=getBufferStartIndex();\n  int i=index - bufferStartIndex;\n  if (i < 0) {\n    throw new IllegalArgumentException(\"cannot seek to negative index \" + index);\n  }\n else   if (i >= n) {\n    throw new UnsupportedOperationException(\"seek to index outside buffer: \" + index + \" not in \"+ bufferStartIndex+ \"..\"+ (bufferStartIndex + n));\n  }\n  p=i;\n  currentTokenIndex=index;\n  if (p == 0) {\n    lastToken=lastTokenBufferStart;\n  }\n else {\n    lastToken=tokens[p - 1];\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 788,
        "startLineNumber" : 242,
        "startColumnNumber" : 1,
        "endLineNumber" : 271,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void seek(int index){\n  if (index == currentTokenIndex) {\n    return;\n  }\n  if (index > currentTokenIndex) {\n    sync(index - currentTokenIndex);\n    index=Math.min(index,getBufferStartIndex() + n - 1);\n  }\n  int bufferStartIndex=getBufferStartIndex();\n  int i=index - bufferStartIndex;\n  if (i < 0) {\n    throw new IllegalArgumentException(\"cannot seek to negative index \" + index);\n  }\n else   if (i >= n) {\n    throw new UnsupportedOperationException(\"seek to index outside buffer: \" + index + \" not in \"+ bufferStartIndex+ \"..\"+ (bufferStartIndex + n));\n  }\n  p=i;\n  currentTokenIndex=index;\n  if (p == 0) {\n    lastToken=lastTokenBufferStart;\n  }\n else {\n    lastToken=tokens[p - 1];\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 110,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 266,
        "startColumnNumber" : 3,
        "endLineNumber" : 266,
        "endColumnNumber" : 36
      },
      "nodeContext" : "lastToken=lastTokenBufferStart;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.antlr.v4.runtime.Token"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 266,
    "startColumnNumber" : 15,
    "endLineNumber" : 266,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}