{
  "id" : 455,
  "expression" : "fracMap.get(frac)",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/main/java/cn/hutool/core/text/Simhash.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "fracMap.get(frac)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 143,
      "startColumnNumber" : 5,
      "endLineNumber" : 143,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 143,
        "startColumnNumber" : 5,
        "endLineNumber" : 143,
        "endColumnNumber" : 35
      },
      "nodeContext" : "fracMap.get(frac).add(simhash)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 143,
        "startColumnNumber" : 5,
        "endLineNumber" : 143,
        "endColumnNumber" : 36
      },
      "nodeContext" : "fracMap.get(frac).add(simhash);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 142,
        "startColumnNumber" : 35,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  fracMap.get(frac).add(simhash);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 190,
        "startLineNumber" : 142,
        "startColumnNumber" : 4,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (fracMap.containsKey(frac)) {\n  fracMap.get(frac).add(simhash);\n}\n else {\n  final List<Long> ls=new ArrayList<>();\n  ls.add(simhash);\n  fracMap.put(frac,ls);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 260,
        "startLineNumber" : 139,
        "startColumnNumber" : 39,
        "endLineNumber" : 149,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  frac=lFrac.get(i);\n  fracMap=storage.get(i);\n  if (fracMap.containsKey(frac)) {\n    fracMap.get(frac).add(simhash);\n  }\n else {\n    final List<Long> ls=new ArrayList<>();\n    ls.add(simhash);\n    fracMap.put(frac,ls);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 296,
        "startLineNumber" : 139,
        "startColumnNumber" : 3,
        "endLineNumber" : 149,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (int i=0; i < fracCount; i++) {\n  frac=lFrac.get(i);\n  fracMap=storage.get(i);\n  if (fracMap.containsKey(frac)) {\n    fracMap.get(frac).add(simhash);\n  }\n else {\n    final List<Long> ls=new ArrayList<>();\n    ls.add(simhash);\n    fracMap.put(frac,ls);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 307,
        "startLineNumber" : 138,
        "startColumnNumber" : 6,
        "endLineNumber" : 150,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int i=0; i < fracCount; i++) {\n    frac=lFrac.get(i);\n    fracMap=storage.get(i);\n    if (fracMap.containsKey(frac)) {\n      fracMap.get(frac).add(simhash);\n    }\n else {\n      final List<Long> ls=new ArrayList<>();\n      ls.add(simhash);\n      fracMap.put(frac,ls);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 360,
        "startLineNumber" : 138,
        "startColumnNumber" : 2,
        "endLineNumber" : 152,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  for (int i=0; i < fracCount; i++) {\n    frac=lFrac.get(i);\n    fracMap=storage.get(i);\n    if (fracMap.containsKey(frac)) {\n      fracMap.get(frac).add(simhash);\n    }\n else {\n      final List<Long> ls=new ArrayList<>();\n      ls.add(simhash);\n      fracMap.put(frac,ls);\n    }\n  }\n}\n  finally {\n  this.lock.unlockWrite(stamp);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 75,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 627,
        "startLineNumber" : 130,
        "startColumnNumber" : 33,
        "endLineNumber" : 153,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  final int fracCount=this.fracCount;\n  final List<Map<String,List<Long>>> storage=this.storage;\n  final List<String> lFrac=splitSimhash(simhash);\n  String frac;\n  Map<String,List<Long>> fracMap;\n  final long stamp=this.lock.writeLock();\n  try {\n    for (int i=0; i < fracCount; i++) {\n      frac=lFrac.get(i);\n      fracMap=storage.get(i);\n      if (fracMap.containsKey(frac)) {\n        fracMap.get(frac).add(simhash);\n      }\n else {\n        final List<Long> ls=new ArrayList<>();\n        ls.add(simhash);\n        fracMap.put(frac,ls);\n      }\n    }\n  }\n  finally {\n    this.lock.unlockWrite(stamp);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 745,
        "startLineNumber" : 125,
        "startColumnNumber" : 1,
        "endLineNumber" : 153,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 按照(frac, 《simhash, content》)索引进行存储\n * @param simhash Simhash值\n */\npublic void store(Long simhash){\n  final int fracCount=this.fracCount;\n  final List<Map<String,List<Long>>> storage=this.storage;\n  final List<String> lFrac=splitSimhash(simhash);\n  String frac;\n  Map<String,List<Long>> fracMap;\n  final long stamp=this.lock.writeLock();\n  try {\n    for (int i=0; i < fracCount; i++) {\n      frac=lFrac.get(i);\n      fracMap=storage.get(i);\n      if (fracMap.containsKey(frac)) {\n        fracMap.get(frac).add(simhash);\n      }\n else {\n        final List<Long> ls=new ArrayList<>();\n        ls.add(simhash);\n        fracMap.put(frac,ls);\n      }\n    }\n  }\n  finally {\n    this.lock.unlockWrite(stamp);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 153,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 143,
        "startColumnNumber" : 5,
        "endLineNumber" : 143,
        "endColumnNumber" : 36
      },
      "nodeContext" : "fracMap.get(frac).add(simhash);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.util.List<java.lang.Long>"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 143,
    "startColumnNumber" : 5,
    "endLineNumber" : 143,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ ]
}