{
  "id" : 243,
  "expression" : "cy + result.height / 2",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/maps/generators/BaseGenerator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "cy + result.height / 2",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 237,
      "startColumnNumber" : 54,
      "endLineNumber" : 237,
      "endColumnNumber" : 74
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 237,
        "startColumnNumber" : 8,
        "endLineNumber" : 237,
        "endColumnNumber" : 81
      },
      "nodeContext" : "Schematics.place(result,cx + result.width / 2,cy + result.height / 2,team)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 237,
        "startColumnNumber" : 8,
        "endLineNumber" : 237,
        "endColumnNumber" : 82
      },
      "nodeContext" : "Schematics.place(result,cx + result.width / 2,cy + result.height / 2,team);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2033,
        "startLineNumber" : 195,
        "startColumnNumber" : 96,
        "endLineNumber" : 254,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int rotation=Mathf.range(2);\n  axis.set((int)(part.schematic.width / 2f),(int)(part.schematic.height / 2f));\n  Schematic result=Schematics.rotate(part.schematic,rotation);\n  int rotdeg=rotation * 90;\n  rotator.set(part.centerX,part.centerY).rotateAround(axis,rotdeg);\n  int cx=x - (int)rotator.x;\n  int cy=y - (int)rotator.y;\n  for (  Stile tile : result.tiles) {\n    int realX=tile.x + cx, realY=tile.y + cy;\n    if (isTaken(tile.block,realX,realY)) {\n      return false;\n    }\n    if (posc != null) {\n      posc.get(realX,realY);\n    }\n  }\n  if (part.required instanceof   Item item) {\n    for (    Stile tile : result.tiles) {\n      if (tile.block instanceof Drill) {\n        tile.block.iterateTaken(tile.x + cx,tile.y + cy,(ex,ey) -> {\n          if (world.tiles.getn(ex,ey).floor().hasSurface()) {\n            set(world.tiles.getn(ex,ey),item);\n          }\n          Tile rand=world.tiles.getc(ex + Mathf.range(1),ey + Mathf.range(1));\n          if (rand.floor().hasSurface()) {\n            set(rand,item);\n          }\n        }\n);\n      }\n    }\n  }\n  Schematics.place(result,cx + result.width / 2,cy + result.height / 2,team);\n  if (part.required instanceof   Item item) {\n    for (    Stile tile : result.tiles) {\n      if (tile.block instanceof Drill) {\n        Building build=world.tile(tile.x + cx,tile.y + cy).build;\n        if (build != null) {\n          build.items.add(item,build.block.itemCapacity);\n        }\n      }\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 328,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2249,
        "startLineNumber" : 191,
        "startColumnNumber" : 4,
        "endLineNumber" : 254,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Tries to place a base part at a certain location with a certain team.\n * @return success state\n */\npublic static boolean tryPlace(BasePart part,int x,int y,Team team,@Nullable Intc2 posc){\n  int rotation=Mathf.range(2);\n  axis.set((int)(part.schematic.width / 2f),(int)(part.schematic.height / 2f));\n  Schematic result=Schematics.rotate(part.schematic,rotation);\n  int rotdeg=rotation * 90;\n  rotator.set(part.centerX,part.centerY).rotateAround(axis,rotdeg);\n  int cx=x - (int)rotator.x;\n  int cy=y - (int)rotator.y;\n  for (  Stile tile : result.tiles) {\n    int realX=tile.x + cx, realY=tile.y + cy;\n    if (isTaken(tile.block,realX,realY)) {\n      return false;\n    }\n    if (posc != null) {\n      posc.get(realX,realY);\n    }\n  }\n  if (part.required instanceof   Item item) {\n    for (    Stile tile : result.tiles) {\n      if (tile.block instanceof Drill) {\n        tile.block.iterateTaken(tile.x + cx,tile.y + cy,(ex,ey) -> {\n          if (world.tiles.getn(ex,ey).floor().hasSurface()) {\n            set(world.tiles.getn(ex,ey),item);\n          }\n          Tile rand=world.tiles.getc(ex + Mathf.range(1),ey + Mathf.range(1));\n          if (rand.floor().hasSurface()) {\n            set(rand,item);\n          }\n        }\n);\n      }\n    }\n  }\n  Schematics.place(result,cx + result.width / 2,cy + result.height / 2,team);\n  if (part.required instanceof   Item item) {\n    for (    Stile tile : result.tiles) {\n      if (tile.block instanceof Drill) {\n        Building build=world.tile(tile.x + cx,tile.y + cy).build;\n        if (build != null) {\n          build.items.add(item,build.block.itemCapacity);\n        }\n      }\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 354,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 237,
        "startColumnNumber" : 8,
        "endLineNumber" : 237,
        "endColumnNumber" : 82
      },
      "nodeContext" : "Schematics.place(result,cx + result.width / 2,cy + result.height / 2,team);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    },
    "tokenLength" : 6,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 237,
    "startColumnNumber" : 54,
    "endLineNumber" : 237,
    "endColumnNumber" : 74
  } ],
  "layoutRelationDataList" : [ ]
}