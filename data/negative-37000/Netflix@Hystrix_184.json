{
  "id" : 184,
  "expression" : "!PlatformSpecific.isAppEngineStandardEnvironment()",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-core/src/main/java/com/netflix/hystrix/strategy/concurrency/HystrixConcurrencyStrategy.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!PlatformSpecific.isAppEngineStandardEnvironment()",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 50,
      "startLineNumber" : 119,
      "startColumnNumber" : 12,
      "endLineNumber" : 119,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 590,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!PlatformSpecific.isAppEngineStandardEnvironment()) {\n  return new ThreadFactory(){\n    private final AtomicInteger threadNumber=new AtomicInteger(0);\n    @Override public Thread newThread(    Runnable r){\n      Thread thread=new Thread(r,\"hystrix-\" + threadPoolKey.name() + \"-\"+ threadNumber.incrementAndGet());\n      thread.setDaemon(true);\n      return thread;\n    }\n  }\n;\n}\n else {\n  return PlatformSpecific.getAppEngineThreadFactory();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 64,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 606,
        "startLineNumber" : 118,
        "startColumnNumber" : 92,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!PlatformSpecific.isAppEngineStandardEnvironment()) {\n    return new ThreadFactory(){\n      private final AtomicInteger threadNumber=new AtomicInteger(0);\n      @Override public Thread newThread(      Runnable r){\n        Thread thread=new Thread(r,\"hystrix-\" + threadPoolKey.name() + \"-\"+ threadNumber.incrementAndGet());\n        thread.setDaemon(true);\n        return thread;\n      }\n    }\n;\n  }\n else {\n    return PlatformSpecific.getAppEngineThreadFactory();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 694,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static ThreadFactory getThreadFactory(final HystrixThreadPoolKey threadPoolKey){\n  if (!PlatformSpecific.isAppEngineStandardEnvironment()) {\n    return new ThreadFactory(){\n      private final AtomicInteger threadNumber=new AtomicInteger(0);\n      @Override public Thread newThread(      Runnable r){\n        Thread thread=new Thread(r,\"hystrix-\" + threadPoolKey.name() + \"-\"+ threadNumber.incrementAndGet());\n        thread.setDaemon(true);\n        return thread;\n      }\n    }\n;\n  }\n else {\n    return PlatformSpecific.getAppEngineThreadFactory();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 76,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 590,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!PlatformSpecific.isAppEngineStandardEnvironment()) {\n  return new ThreadFactory(){\n    private final AtomicInteger threadNumber=new AtomicInteger(0);\n    @Override public Thread newThread(    Runnable r){\n      Thread thread=new Thread(r,\"hystrix-\" + threadPoolKey.name() + \"-\"+ threadNumber.incrementAndGet());\n      thread.setDaemon(true);\n      return thread;\n    }\n  }\n;\n}\n else {\n  return PlatformSpecific.getAppEngineThreadFactory();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 64,
      "astHeight" : 13
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 50,
    "startLineNumber" : 119,
    "startColumnNumber" : 12,
    "endLineNumber" : 119,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}