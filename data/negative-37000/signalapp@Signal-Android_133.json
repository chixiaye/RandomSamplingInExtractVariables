{
  "id" : 133,
  "expression" : "recipient.getExpiresInSeconds() > 0",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/app/src/main/java/org/thoughtcrime/securesms/jobs/MultiDeviceContactUpdateJob.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "recipient.getExpiresInSeconds() > 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 160,
      "startColumnNumber" : 34,
      "endLineNumber" : 160,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 160,
        "startColumnNumber" : 34,
        "endLineNumber" : 161,
        "endColumnNumber" : 89
      },
      "nodeContext" : "recipient.getExpiresInSeconds() > 0 ? Optional.of(recipient.getExpiresInSeconds()) : Optional.absent()",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1007,
        "startLineNumber" : 153,
        "startColumnNumber" : 16,
        "endLineNumber" : 163,
        "endColumnNumber" : 65
      },
      "nodeContext" : "new DeviceContact(RecipientUtil.toSignalServiceAddress(context,recipient),Optional.fromNullable(recipient.isGroup() || recipient.isSystemContact() ? recipient.getDisplayName(context) : null),getAvatar(recipient.getId(),recipient.getContactUri()),Optional.of(ChatColorsMapper.getMaterialColor(recipient.getChatColors()).serialize()),verifiedMessage,ProfileKeyUtil.profileKeyOptional(recipient.getProfileKey()),recipient.isBlocked(),recipient.getExpiresInSeconds() > 0 ? Optional.of(recipient.getExpiresInSeconds()) : Optional.absent(),Optional.fromNullable(inboxPositions.get(recipientId)),archived.contains(recipientId))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 79,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 1018,
        "startLineNumber" : 153,
        "startColumnNumber" : 6,
        "endLineNumber" : 163,
        "endColumnNumber" : 66
      },
      "nodeContext" : "out.write(new DeviceContact(RecipientUtil.toSignalServiceAddress(context,recipient),Optional.fromNullable(recipient.isGroup() || recipient.isSystemContact() ? recipient.getDisplayName(context) : null),getAvatar(recipient.getId(),recipient.getContactUri()),Optional.of(ChatColorsMapper.getMaterialColor(recipient.getChatColors()).serialize()),verifiedMessage,ProfileKeyUtil.profileKeyOptional(recipient.getProfileKey()),recipient.isBlocked(),recipient.getExpiresInSeconds() > 0 ? Optional.of(recipient.getExpiresInSeconds()) : Optional.absent(),Optional.fromNullable(inboxPositions.get(recipientId)),archived.contains(recipientId)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 82,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1019,
        "startLineNumber" : 153,
        "startColumnNumber" : 6,
        "endLineNumber" : 163,
        "endColumnNumber" : 67
      },
      "nodeContext" : "out.write(new DeviceContact(RecipientUtil.toSignalServiceAddress(context,recipient),Optional.fromNullable(recipient.isGroup() || recipient.isSystemContact() ? recipient.getDisplayName(context) : null),getAvatar(recipient.getId(),recipient.getContactUri()),Optional.of(ChatColorsMapper.getMaterialColor(recipient.getChatColors()).serialize()),verifiedMessage,ProfileKeyUtil.profileKeyOptional(recipient.getProfileKey()),recipient.isBlocked(),recipient.getExpiresInSeconds() > 0 ? Optional.of(recipient.getExpiresInSeconds()) : Optional.absent(),Optional.fromNullable(inboxPositions.get(recipientId)),archived.contains(recipientId)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 83,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2169,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DeviceContactsOutputStream out=new DeviceContactsOutputStream(writeDetails.outputStream);\n  Recipient recipient=Recipient.resolved(recipientId);\n  if (recipient.getRegistered() == RecipientDatabase.RegisteredState.NOT_REGISTERED) {\n    Log.w(TAG,recipientId + \" not registered!\");\n    return;\n  }\n  Optional<IdentityRecord> identityRecord=ApplicationDependencies.getIdentityStore().getIdentityRecord(recipient.getId());\n  Optional<VerifiedMessage> verifiedMessage=getVerifiedMessage(recipient,identityRecord);\n  Map<RecipientId,Integer> inboxPositions=DatabaseFactory.getThreadDatabase(context).getInboxPositions();\n  Set<RecipientId> archived=DatabaseFactory.getThreadDatabase(context).getArchivedRecipients();\n  out.write(new DeviceContact(RecipientUtil.toSignalServiceAddress(context,recipient),Optional.fromNullable(recipient.isGroup() || recipient.isSystemContact() ? recipient.getDisplayName(context) : null),getAvatar(recipient.getId(),recipient.getContactUri()),Optional.of(ChatColorsMapper.getMaterialColor(recipient.getChatColors()).serialize()),verifiedMessage,ProfileKeyUtil.profileKeyOptional(recipient.getProfileKey()),recipient.isBlocked(),recipient.getExpiresInSeconds() > 0 ? Optional.of(recipient.getExpiresInSeconds()) : Optional.absent(),Optional.fromNullable(inboxPositions.get(recipientId)),archived.contains(recipientId)));\n  out.close();\n  long length=BlobProvider.getInstance().calculateFileSize(context,writeDetails.uri);\n  sendUpdate(ApplicationDependencies.getSignalServiceMessageSender(),BlobProvider.getInstance().getStream(context,writeDetails.uri),length,false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 216,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2318,
        "startLineNumber" : 139,
        "startColumnNumber" : 4,
        "endLineNumber" : 178,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  DeviceContactsOutputStream out=new DeviceContactsOutputStream(writeDetails.outputStream);\n  Recipient recipient=Recipient.resolved(recipientId);\n  if (recipient.getRegistered() == RecipientDatabase.RegisteredState.NOT_REGISTERED) {\n    Log.w(TAG,recipientId + \" not registered!\");\n    return;\n  }\n  Optional<IdentityRecord> identityRecord=ApplicationDependencies.getIdentityStore().getIdentityRecord(recipient.getId());\n  Optional<VerifiedMessage> verifiedMessage=getVerifiedMessage(recipient,identityRecord);\n  Map<RecipientId,Integer> inboxPositions=DatabaseFactory.getThreadDatabase(context).getInboxPositions();\n  Set<RecipientId> archived=DatabaseFactory.getThreadDatabase(context).getArchivedRecipients();\n  out.write(new DeviceContact(RecipientUtil.toSignalServiceAddress(context,recipient),Optional.fromNullable(recipient.isGroup() || recipient.isSystemContact() ? recipient.getDisplayName(context) : null),getAvatar(recipient.getId(),recipient.getContactUri()),Optional.of(ChatColorsMapper.getMaterialColor(recipient.getChatColors()).serialize()),verifiedMessage,ProfileKeyUtil.profileKeyOptional(recipient.getProfileKey()),recipient.isBlocked(),recipient.getExpiresInSeconds() > 0 ? Optional.of(recipient.getExpiresInSeconds()) : Optional.absent(),Optional.fromNullable(inboxPositions.get(recipientId)),archived.contains(recipientId)));\n  out.close();\n  long length=BlobProvider.getInstance().calculateFileSize(context,writeDetails.uri);\n  sendUpdate(ApplicationDependencies.getSignalServiceMessageSender(),BlobProvider.getInstance().getStream(context,writeDetails.uri),length,false);\n}\n catch (InvalidNumberException e) {\n  Log.w(TAG,e);\n}\n finally {\n  BlobProvider.getInstance().delete(context,writeDetails.uri);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 240,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2379,
        "startLineNumber" : 136,
        "startColumnNumber" : 2,
        "endLineNumber" : 179,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  WriteDetails writeDetails=createTempFile();\n  try {\n    DeviceContactsOutputStream out=new DeviceContactsOutputStream(writeDetails.outputStream);\n    Recipient recipient=Recipient.resolved(recipientId);\n    if (recipient.getRegistered() == RecipientDatabase.RegisteredState.NOT_REGISTERED) {\n      Log.w(TAG,recipientId + \" not registered!\");\n      return;\n    }\n    Optional<IdentityRecord> identityRecord=ApplicationDependencies.getIdentityStore().getIdentityRecord(recipient.getId());\n    Optional<VerifiedMessage> verifiedMessage=getVerifiedMessage(recipient,identityRecord);\n    Map<RecipientId,Integer> inboxPositions=DatabaseFactory.getThreadDatabase(context).getInboxPositions();\n    Set<RecipientId> archived=DatabaseFactory.getThreadDatabase(context).getArchivedRecipients();\n    out.write(new DeviceContact(RecipientUtil.toSignalServiceAddress(context,recipient),Optional.fromNullable(recipient.isGroup() || recipient.isSystemContact() ? recipient.getDisplayName(context) : null),getAvatar(recipient.getId(),recipient.getContactUri()),Optional.of(ChatColorsMapper.getMaterialColor(recipient.getChatColors()).serialize()),verifiedMessage,ProfileKeyUtil.profileKeyOptional(recipient.getProfileKey()),recipient.isBlocked(),recipient.getExpiresInSeconds() > 0 ? Optional.of(recipient.getExpiresInSeconds()) : Optional.absent(),Optional.fromNullable(inboxPositions.get(recipientId)),archived.contains(recipientId)));\n    out.close();\n    long length=BlobProvider.getInstance().calculateFileSize(context,writeDetails.uri);\n    sendUpdate(ApplicationDependencies.getSignalServiceMessageSender(),BlobProvider.getInstance().getStream(context,writeDetails.uri),length,false);\n  }\n catch (  InvalidNumberException e) {\n    Log.w(TAG,e);\n  }\n finally {\n    BlobProvider.getInstance().delete(context,writeDetails.uri);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2527,
        "startLineNumber" : 134,
        "startColumnNumber" : 2,
        "endLineNumber" : 179,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void generateSingleContactUpdate(@NonNull RecipientId recipientId) throws IOException, UntrustedIdentityException, NetworkException {\n  WriteDetails writeDetails=createTempFile();\n  try {\n    DeviceContactsOutputStream out=new DeviceContactsOutputStream(writeDetails.outputStream);\n    Recipient recipient=Recipient.resolved(recipientId);\n    if (recipient.getRegistered() == RecipientDatabase.RegisteredState.NOT_REGISTERED) {\n      Log.w(TAG,recipientId + \" not registered!\");\n      return;\n    }\n    Optional<IdentityRecord> identityRecord=ApplicationDependencies.getIdentityStore().getIdentityRecord(recipient.getId());\n    Optional<VerifiedMessage> verifiedMessage=getVerifiedMessage(recipient,identityRecord);\n    Map<RecipientId,Integer> inboxPositions=DatabaseFactory.getThreadDatabase(context).getInboxPositions();\n    Set<RecipientId> archived=DatabaseFactory.getThreadDatabase(context).getArchivedRecipients();\n    out.write(new DeviceContact(RecipientUtil.toSignalServiceAddress(context,recipient),Optional.fromNullable(recipient.isGroup() || recipient.isSystemContact() ? recipient.getDisplayName(context) : null),getAvatar(recipient.getId(),recipient.getContactUri()),Optional.of(ChatColorsMapper.getMaterialColor(recipient.getChatColors()).serialize()),verifiedMessage,ProfileKeyUtil.profileKeyOptional(recipient.getProfileKey()),recipient.isBlocked(),recipient.getExpiresInSeconds() > 0 ? Optional.of(recipient.getExpiresInSeconds()) : Optional.absent(),Optional.fromNullable(inboxPositions.get(recipientId)),archived.contains(recipientId)));\n    out.close();\n    long length=BlobProvider.getInstance().calculateFileSize(context,writeDetails.uri);\n    sendUpdate(ApplicationDependencies.getSignalServiceMessageSender(),BlobProvider.getInstance().getStream(context,writeDetails.uri),length,false);\n  }\n catch (  InvalidNumberException e) {\n    Log.w(TAG,e);\n  }\n finally {\n    BlobProvider.getInstance().delete(context,writeDetails.uri);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 264,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 160,
        "startColumnNumber" : 34,
        "endLineNumber" : 161,
        "endColumnNumber" : 89
      },
      "nodeContext" : "recipient.getExpiresInSeconds() > 0 ? Optional.of(recipient.getExpiresInSeconds()) : Optional.absent()",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 15,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 160,
    "startColumnNumber" : 34,
    "endLineNumber" : 160,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ ]
}