{
  "id" : 431,
  "expression" : "someEurekaUrlFromSystemProperty",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-biz/src/test/java/com/ctrip/framework/apollo/biz/eureka/ApolloEurekaClientConfigTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "someEurekaUrlFromSystemProperty",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 59,
      "startColumnNumber" : 20,
      "endLineNumber" : 59,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 52
      },
      "nodeContext" : "when(environment.getProperty(ApolloEurekaClientConfig.EUREKA_URL_CONFIG)).thenReturn(someEurekaUrlFromSystemProperty)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 53
      },
      "nodeContext" : "when(environment.getProperty(ApolloEurekaClientConfig.EUREKA_URL_CONFIG)).thenReturn(someEurekaUrlFromSystemProperty);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 687,
        "startLineNumber" : 53,
        "startColumnNumber" : 76,
        "endLineNumber" : 70,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String someEurekaUrl=\"http://xxx,http://yyy\";\n  String myZone=\"xx\";\n  String someEurekaUrlFromSystemProperty=\"http://zzz\";\n  when(environment.getProperty(ApolloEurekaClientConfig.EUREKA_URL_CONFIG)).thenReturn(someEurekaUrlFromSystemProperty);\n  when(serverConfigService.getValue(ApolloEurekaClientConfig.EUREKA_URL_CONFIG)).thenReturn(someEurekaUrl);\n  List<String> eurekaUrls=eurekaClientConfig.getEurekaServerServiceUrls(myZone);\n  String[] expected=someEurekaUrlFromSystemProperty.split(\",\");\n  assertEquals(expected.length,eurekaUrls.size());\n  for (  String url : expected) {\n    assertTrue(eurekaUrls.contains(url));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 769,
        "startLineNumber" : 52,
        "startColumnNumber" : 2,
        "endLineNumber" : 70,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testGetEurekaServiceUrlsFromSystemProperty() throws Exception {\n  String someEurekaUrl=\"http://xxx,http://yyy\";\n  String myZone=\"xx\";\n  String someEurekaUrlFromSystemProperty=\"http://zzz\";\n  when(environment.getProperty(ApolloEurekaClientConfig.EUREKA_URL_CONFIG)).thenReturn(someEurekaUrlFromSystemProperty);\n  when(serverConfigService.getValue(ApolloEurekaClientConfig.EUREKA_URL_CONFIG)).thenReturn(someEurekaUrl);\n  List<String> eurekaUrls=eurekaClientConfig.getEurekaServerServiceUrls(myZone);\n  String[] expected=someEurekaUrlFromSystemProperty.split(\",\");\n  assertEquals(expected.length,eurekaUrls.size());\n  for (  String url : expected) {\n    assertTrue(eurekaUrls.contains(url));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 52
      },
      "nodeContext" : "when(environment.getProperty(ApolloEurekaClientConfig.EUREKA_URL_CONFIG)).thenReturn(someEurekaUrlFromSystemProperty)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "someEurekaUrlFromSystemProperty",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 65,
      "startColumnNumber" : 24,
      "endLineNumber" : 65,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 65,
        "startColumnNumber" : 24,
        "endLineNumber" : 65,
        "endColumnNumber" : 66
      },
      "nodeContext" : "someEurekaUrlFromSystemProperty.split(\",\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 65,
        "startColumnNumber" : 13,
        "endLineNumber" : 65,
        "endColumnNumber" : 66
      },
      "nodeContext" : "expected=someEurekaUrlFromSystemProperty.split(\",\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 67
      },
      "nodeContext" : "String[] expected=someEurekaUrlFromSystemProperty.split(\",\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 687,
        "startLineNumber" : 53,
        "startColumnNumber" : 76,
        "endLineNumber" : 70,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String someEurekaUrl=\"http://xxx,http://yyy\";\n  String myZone=\"xx\";\n  String someEurekaUrlFromSystemProperty=\"http://zzz\";\n  when(environment.getProperty(ApolloEurekaClientConfig.EUREKA_URL_CONFIG)).thenReturn(someEurekaUrlFromSystemProperty);\n  when(serverConfigService.getValue(ApolloEurekaClientConfig.EUREKA_URL_CONFIG)).thenReturn(someEurekaUrl);\n  List<String> eurekaUrls=eurekaClientConfig.getEurekaServerServiceUrls(myZone);\n  String[] expected=someEurekaUrlFromSystemProperty.split(\",\");\n  assertEquals(expected.length,eurekaUrls.size());\n  for (  String url : expected) {\n    assertTrue(eurekaUrls.contains(url));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 769,
        "startLineNumber" : 52,
        "startColumnNumber" : 2,
        "endLineNumber" : 70,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testGetEurekaServiceUrlsFromSystemProperty() throws Exception {\n  String someEurekaUrl=\"http://xxx,http://yyy\";\n  String myZone=\"xx\";\n  String someEurekaUrlFromSystemProperty=\"http://zzz\";\n  when(environment.getProperty(ApolloEurekaClientConfig.EUREKA_URL_CONFIG)).thenReturn(someEurekaUrlFromSystemProperty);\n  when(serverConfigService.getValue(ApolloEurekaClientConfig.EUREKA_URL_CONFIG)).thenReturn(someEurekaUrl);\n  List<String> eurekaUrls=eurekaClientConfig.getEurekaServerServiceUrls(myZone);\n  String[] expected=someEurekaUrlFromSystemProperty.split(\",\");\n  assertEquals(expected.length,eurekaUrls.size());\n  for (  String url : expected) {\n    assertTrue(eurekaUrls.contains(url));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 67
      },
      "nodeContext" : "String[] expected=someEurekaUrlFromSystemProperty.split(\",\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 59,
    "startColumnNumber" : 20,
    "endLineNumber" : 59,
    "endColumnNumber" : 51
  }, {
    "charLength" : 31,
    "startLineNumber" : 65,
    "startColumnNumber" : 24,
    "endLineNumber" : 65,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}