{
  "id" : 492,
  "expression" : "true",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/status/SpringStatusCheckerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "true",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 71,
      "startColumnNumber" : 59,
      "endLineNumber" : 71,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 64
      },
      "nodeContext" : "given(applicationLifeCycle.isRunning()).willReturn(true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 65
      },
      "nodeContext" : "given(applicationLifeCycle.isRunning()).willReturn(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 562,
        "startLineNumber" : 66,
        "startColumnNumber" : 43,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SpringExtensionFactory.clearContexts();\n  ApplicationLifeCycle applicationLifeCycle=mock(ApplicationLifeCycle.class);\n  new ServiceBean<Object>().setApplicationContext(applicationLifeCycle);\n  given(applicationLifeCycle.getConfigLocations()).willReturn(new String[]{\"test1\",\"test2\"});\n  given(applicationLifeCycle.isRunning()).willReturn(true);\n  Status status=springStatusChecker.check();\n  assertThat(status.getLevel(),is(Status.Level.OK));\n  assertThat(status.getMessage(),is(\"test1,test2\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 611,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testWithLifeCycleRunning(){\n  SpringExtensionFactory.clearContexts();\n  ApplicationLifeCycle applicationLifeCycle=mock(ApplicationLifeCycle.class);\n  new ServiceBean<Object>().setApplicationContext(applicationLifeCycle);\n  given(applicationLifeCycle.getConfigLocations()).willReturn(new String[]{\"test1\",\"test2\"});\n  given(applicationLifeCycle.isRunning()).willReturn(true);\n  Status status=springStatusChecker.check();\n  assertThat(status.getLevel(),is(Status.Level.OK));\n  assertThat(status.getMessage(),is(\"test1,test2\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 86,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 65
      },
      "nodeContext" : "given(applicationLifeCycle.isRunning()).willReturn(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 71,
    "startColumnNumber" : 59,
    "endLineNumber" : 71,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ]
}