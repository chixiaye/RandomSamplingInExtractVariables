{
  "id" : 303,
  "expression" : "5",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-discovery-service/src/test/java/org/apache/pulsar/discovery/service/web/MetadataStoreCacheLoaderTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "5",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 83,
      "startColumnNumber" : 28,
      "endLineNumber" : 83,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 83,
        "startColumnNumber" : 24,
        "endLineNumber" : 83,
        "endColumnNumber" : 29
      },
      "nodeContext" : "i < 5",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 180,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 5; i++) {\n  if (zkLoader.getAvailableBrokers().size() == 3 || i == 4) {\n    break;\n  }\n  Thread.sleep(1000);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 31,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2377,
        "startLineNumber" : 64,
        "startColumnNumber" : 99,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PulsarResources resources=new PulsarResources(zkStore,null);\n  @SuppressWarnings(\"resource\") MetadataStoreCacheLoader zkLoader=new MetadataStoreCacheLoader(resources,30_000);\n  List<String> brokers=Lists.newArrayList(\"broker-1:15000\",\"broker-2:15000\",\"broker-3:15000\");\n  for (int i=0; i < brokers.size(); i++) {\n    try {\n      LoadManagerReport report=i % 2 == 0 ? getSimpleLoadManagerLoadReport(brokers.get(i)) : getModularLoadManagerLoadReport(brokers.get(i));\n      zkStore.put(LOADBALANCE_BROKERS_ROOT + \"/\" + brokers.get(i),ObjectMapperFactory.getThreadLocal().writeValueAsBytes(report),Optional.of(-1L));\n    }\n catch (    Exception e) {\n      fail(\"failed while creating broker znodes\");\n    }\n  }\n  for (int i=0; i < 5; i++) {\n    if (zkLoader.getAvailableBrokers().size() == 3 || i == 4) {\n      break;\n    }\n    Thread.sleep(1000);\n  }\n  List<LoadManagerReport> list=zkLoader.getAvailableBrokers();\n  Set<String> cachedBrokers=list.stream().map(loadReport -> loadReport.getWebServiceUrl()).collect(Collectors.toSet());\n  Assert.assertEquals(list.size(),brokers.size());\n  Assert.assertTrue(brokers.containsAll(cachedBrokers));\n  final String newBroker=\"broker-4:15000\";\n  LoadManagerReport report=getSimpleLoadManagerLoadReport(newBroker);\n  zkStore.put(LOADBALANCE_BROKERS_ROOT + \"/\" + newBroker,ObjectMapperFactory.getThreadLocal().writeValueAsBytes(report),Optional.of(-1L));\n  brokers.add(newBroker);\n  Thread.sleep(100);\n  list=zkLoader.getAvailableBrokers();\n  cachedBrokers=list.stream().map(loadReport -> loadReport.getWebServiceUrl()).collect(Collectors.toSet());\n  Assert.assertEquals(list.size(),brokers.size());\n  Assert.assertTrue(brokers.containsAll(cachedBrokers));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 280,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2707,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Create znode for available broker in ZooKeeper and updates it again to verify ZooKeeper cache update\n * @throws InterruptedException\n * @throws KeeperException\n * @throws IOException\n */\n@Test public void testZookeeperCacheLoader() throws InterruptedException, KeeperException, Exception {\n  PulsarResources resources=new PulsarResources(zkStore,null);\n  @SuppressWarnings(\"resource\") MetadataStoreCacheLoader zkLoader=new MetadataStoreCacheLoader(resources,30_000);\n  List<String> brokers=Lists.newArrayList(\"broker-1:15000\",\"broker-2:15000\",\"broker-3:15000\");\n  for (int i=0; i < brokers.size(); i++) {\n    try {\n      LoadManagerReport report=i % 2 == 0 ? getSimpleLoadManagerLoadReport(brokers.get(i)) : getModularLoadManagerLoadReport(brokers.get(i));\n      zkStore.put(LOADBALANCE_BROKERS_ROOT + \"/\" + brokers.get(i),ObjectMapperFactory.getThreadLocal().writeValueAsBytes(report),Optional.of(-1L));\n    }\n catch (    Exception e) {\n      fail(\"failed while creating broker znodes\");\n    }\n  }\n  for (int i=0; i < 5; i++) {\n    if (zkLoader.getAvailableBrokers().size() == 3 || i == 4) {\n      break;\n    }\n    Thread.sleep(1000);\n  }\n  List<LoadManagerReport> list=zkLoader.getAvailableBrokers();\n  Set<String> cachedBrokers=list.stream().map(loadReport -> loadReport.getWebServiceUrl()).collect(Collectors.toSet());\n  Assert.assertEquals(list.size(),brokers.size());\n  Assert.assertTrue(brokers.containsAll(cachedBrokers));\n  final String newBroker=\"broker-4:15000\";\n  LoadManagerReport report=getSimpleLoadManagerLoadReport(newBroker);\n  zkStore.put(LOADBALANCE_BROKERS_ROOT + \"/\" + newBroker,ObjectMapperFactory.getThreadLocal().writeValueAsBytes(report),Optional.of(-1L));\n  brokers.add(newBroker);\n  Thread.sleep(100);\n  list=zkLoader.getAvailableBrokers();\n  cachedBrokers=list.stream().map(loadReport -> loadReport.getWebServiceUrl()).collect(Collectors.toSet());\n  Assert.assertEquals(list.size(),brokers.size());\n  Assert.assertTrue(brokers.containsAll(cachedBrokers));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 293,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 83,
        "startColumnNumber" : 24,
        "endLineNumber" : 83,
        "endColumnNumber" : 29
      },
      "nodeContext" : "i < 5",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 83,
    "startColumnNumber" : 28,
    "endLineNumber" : 83,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ ]
}