{
  "id" : 189,
  "expression" : "\"[AsyncTesting] Starting thread that will execute the runnable after \" + delayMillis + \" millis. Threads so far: \"+ threads.size()",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitoutil/async/AsyncTesting.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"[AsyncTesting] Starting thread that will execute the runnable after \" + delayMillis + \" millis. Threads so far: \"+ threads.size()",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 206,
      "startLineNumber" : 53,
      "startColumnNumber" : 16,
      "endLineNumber" : 56,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 244,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 41
      },
      "nodeContext" : "System.out.println(\"[AsyncTesting] Starting thread that will execute the runnable after \" + delayMillis + \" millis. Threads so far: \"+ threads.size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 245,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 42
      },
      "nodeContext" : "System.out.println(\"[AsyncTesting] Starting thread that will execute the runnable after \" + delayMillis + \" millis. Threads so far: \"+ threads.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1102,
        "startLineNumber" : 33,
        "startColumnNumber" : 73,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (threads.size() == MAX_THREADS) {\n    throw new RuntimeException(\"Please don't schedule any more threads. Figure out how to test the code with minimum amount of threads\");\n  }\n  Thread t=new Thread(){\n    public void run(){\n      try {\n        Thread.sleep(delayMillis);\n        runnable.run();\n      }\n catch (      Exception e) {\n        boolean cleanStop=e instanceof InterruptedException && stopping;\n        if (!cleanStop) {\n          problems.add(e);\n        }\n      }\n    }\n  }\n;\n  System.out.println(\"[AsyncTesting] Starting thread that will execute the runnable after \" + delayMillis + \" millis. Threads so far: \"+ threads.size());\n  threads.add(t);\n  t.start();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1489,
        "startLineNumber" : 25,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Schedules execution of runnable with some delay. Starts thread immediately and returns. The thread will execute the runnable after given delay in millis.\n * @param delayMillis - the delay in millis\n * @param runnable - to be executed in a thread after delay\n */\npublic void runAfter(final int delayMillis,final Runnable runnable){\n  if (threads.size() == MAX_THREADS) {\n    throw new RuntimeException(\"Please don't schedule any more threads. Figure out how to test the code with minimum amount of threads\");\n  }\n  Thread t=new Thread(){\n    public void run(){\n      try {\n        Thread.sleep(delayMillis);\n        runnable.run();\n      }\n catch (      Exception e) {\n        boolean cleanStop=e instanceof InterruptedException && stopping;\n        if (!cleanStop) {\n          problems.add(e);\n        }\n      }\n    }\n  }\n;\n  System.out.println(\"[AsyncTesting] Starting thread that will execute the runnable after \" + delayMillis + \" millis. Threads so far: \"+ threads.size());\n  threads.add(t);\n  t.start();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 99,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 244,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 41
      },
      "nodeContext" : "System.out.println(\"[AsyncTesting] Starting thread that will execute the runnable after \" + delayMillis + \" millis. Threads so far: \"+ threads.size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 19,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 206,
    "startLineNumber" : 53,
    "startColumnNumber" : 16,
    "endLineNumber" : 56,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}