{
  "id" : 234,
  "expression" : "i",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/test/java/com/alibaba/json/bvt/serializer/stream/StreamWriterTest_writeChar.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 27,
      "startColumnNumber" : 24,
      "endLineNumber" : 27,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 27,
        "startColumnNumber" : 24,
        "endLineNumber" : 27,
        "endColumnNumber" : 30
      },
      "nodeContext" : "i < 26",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 26; ++i) {\n  Assert.assertEquals(text.charAt(i),(char)('a' + i));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 548,
        "startLineNumber" : 13,
        "startColumnNumber" : 42,
        "endLineNumber" : 30,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringWriter out=new StringWriter();\n  SerializeWriter writer=new SerializeWriter(out,10);\n  Assert.assertEquals(10,SerializeWriterTestUtils.getBufferLength(writer));\n  for (char ch='a'; ch <= 'z'; ++ch) {\n    writer.write(ch);\n  }\n  writer.close();\n  String text=out.toString();\n  Assert.assertEquals(26,text.length());\n  for (int i=0; i < 26; ++i) {\n    Assert.assertEquals(text.charAt(i),(char)('a' + i));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 586,
        "startLineNumber" : 13,
        "startColumnNumber" : 4,
        "endLineNumber" : 30,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_0() throws Exception {\n  StringWriter out=new StringWriter();\n  SerializeWriter writer=new SerializeWriter(out,10);\n  Assert.assertEquals(10,SerializeWriterTestUtils.getBufferLength(writer));\n  for (char ch='a'; ch <= 'z'; ++ch) {\n    writer.write(ch);\n  }\n  writer.close();\n  String text=out.toString();\n  Assert.assertEquals(26,text.length());\n  for (int i=0; i < 26; ++i) {\n    Assert.assertEquals(text.charAt(i),(char)('a' + i));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 27,
        "startColumnNumber" : 24,
        "endLineNumber" : 27,
        "endColumnNumber" : 30
      },
      "nodeContext" : "i < 26",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 28,
      "startColumnNumber" : 44,
      "endLineNumber" : 28,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 28,
        "startColumnNumber" : 32,
        "endLineNumber" : 28,
        "endColumnNumber" : 46
      },
      "nodeContext" : "text.charAt(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 28,
        "startColumnNumber" : 12,
        "endLineNumber" : 28,
        "endColumnNumber" : 64
      },
      "nodeContext" : "Assert.assertEquals(text.charAt(i),(char)('a' + i))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 28,
        "startColumnNumber" : 12,
        "endLineNumber" : 28,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Assert.assertEquals(text.charAt(i),(char)('a' + i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 27,
        "startColumnNumber" : 37,
        "endLineNumber" : 29,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Assert.assertEquals(text.charAt(i),(char)('a' + i));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 26; ++i) {\n  Assert.assertEquals(text.charAt(i),(char)('a' + i));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 548,
        "startLineNumber" : 13,
        "startColumnNumber" : 42,
        "endLineNumber" : 30,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringWriter out=new StringWriter();\n  SerializeWriter writer=new SerializeWriter(out,10);\n  Assert.assertEquals(10,SerializeWriterTestUtils.getBufferLength(writer));\n  for (char ch='a'; ch <= 'z'; ++ch) {\n    writer.write(ch);\n  }\n  writer.close();\n  String text=out.toString();\n  Assert.assertEquals(26,text.length());\n  for (int i=0; i < 26; ++i) {\n    Assert.assertEquals(text.charAt(i),(char)('a' + i));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 586,
        "startLineNumber" : 13,
        "startColumnNumber" : 4,
        "endLineNumber" : 30,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_0() throws Exception {\n  StringWriter out=new StringWriter();\n  SerializeWriter writer=new SerializeWriter(out,10);\n  Assert.assertEquals(10,SerializeWriterTestUtils.getBufferLength(writer));\n  for (char ch='a'; ch <= 'z'; ++ch) {\n    writer.write(ch);\n  }\n  writer.close();\n  String text=out.toString();\n  Assert.assertEquals(26,text.length());\n  for (int i=0; i < 26; ++i) {\n    Assert.assertEquals(text.charAt(i),(char)('a' + i));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 28,
        "startColumnNumber" : 12,
        "endLineNumber" : 28,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Assert.assertEquals(text.charAt(i),(char)('a' + i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 28,
      "startColumnNumber" : 61,
      "endLineNumber" : 28,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 28,
        "startColumnNumber" : 55,
        "endLineNumber" : 28,
        "endColumnNumber" : 62
      },
      "nodeContext" : "'a' + i",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 28,
        "startColumnNumber" : 54,
        "endLineNumber" : 28,
        "endColumnNumber" : 63
      },
      "nodeContext" : "('a' + i)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 28,
        "startColumnNumber" : 48,
        "endLineNumber" : 28,
        "endColumnNumber" : 63
      },
      "nodeContext" : "(char)('a' + i)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 28,
        "startColumnNumber" : 12,
        "endLineNumber" : 28,
        "endColumnNumber" : 64
      },
      "nodeContext" : "Assert.assertEquals(text.charAt(i),(char)('a' + i))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 28,
        "startColumnNumber" : 12,
        "endLineNumber" : 28,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Assert.assertEquals(text.charAt(i),(char)('a' + i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 27,
        "startColumnNumber" : 37,
        "endLineNumber" : 29,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Assert.assertEquals(text.charAt(i),(char)('a' + i));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 26; ++i) {\n  Assert.assertEquals(text.charAt(i),(char)('a' + i));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 548,
        "startLineNumber" : 13,
        "startColumnNumber" : 42,
        "endLineNumber" : 30,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringWriter out=new StringWriter();\n  SerializeWriter writer=new SerializeWriter(out,10);\n  Assert.assertEquals(10,SerializeWriterTestUtils.getBufferLength(writer));\n  for (char ch='a'; ch <= 'z'; ++ch) {\n    writer.write(ch);\n  }\n  writer.close();\n  String text=out.toString();\n  Assert.assertEquals(26,text.length());\n  for (int i=0; i < 26; ++i) {\n    Assert.assertEquals(text.charAt(i),(char)('a' + i));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 586,
        "startLineNumber" : 13,
        "startColumnNumber" : 4,
        "endLineNumber" : 30,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_0() throws Exception {\n  StringWriter out=new StringWriter();\n  SerializeWriter writer=new SerializeWriter(out,10);\n  Assert.assertEquals(10,SerializeWriterTestUtils.getBufferLength(writer));\n  for (char ch='a'; ch <= 'z'; ++ch) {\n    writer.write(ch);\n  }\n  writer.close();\n  String text=out.toString();\n  Assert.assertEquals(26,text.length());\n  for (int i=0; i < 26; ++i) {\n    Assert.assertEquals(text.charAt(i),(char)('a' + i));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 28,
        "startColumnNumber" : 12,
        "endLineNumber" : 28,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Assert.assertEquals(text.charAt(i),(char)('a' + i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 27,
    "startColumnNumber" : 24,
    "endLineNumber" : 27,
    "endColumnNumber" : 25
  }, {
    "charLength" : 1,
    "startLineNumber" : 28,
    "startColumnNumber" : 44,
    "endLineNumber" : 28,
    "endColumnNumber" : 45
  }, {
    "charLength" : 1,
    "startLineNumber" : 28,
    "startColumnNumber" : 61,
    "endLineNumber" : 28,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}