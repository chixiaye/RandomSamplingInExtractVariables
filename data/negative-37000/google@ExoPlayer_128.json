{
  "id" : 128,
  "expression" : "!isLegacySegmented",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/core/src/main/java/com/google/android/exoplayer2/offline/ActionFile.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!isLegacySegmented",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 132,
      "startColumnNumber" : 8,
      "endLineNumber" : 132,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 132,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!isLegacySegmented) {\n  customCacheKey=input.readBoolean() ? input.readUTF() : null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1753,
        "startLineNumber" : 99,
        "startColumnNumber" : 95,
        "endLineNumber" : 150,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String downloadType=input.readUTF();\n  int version=input.readInt();\n  Uri uri=Uri.parse(input.readUTF());\n  boolean isRemoveAction=input.readBoolean();\n  int dataLength=input.readInt();\n  @Nullable byte[] data;\n  if (dataLength != 0) {\n    data=new byte[dataLength];\n    input.readFully(data);\n  }\n else {\n    data=null;\n  }\n  boolean isLegacyProgressive=version == 0 && DOWNLOAD_TYPE_PROGRESSIVE.equals(downloadType);\n  List<StreamKey> keys=new ArrayList<>();\n  if (!isLegacyProgressive) {\n    int keyCount=input.readInt();\n    for (int i=0; i < keyCount; i++) {\n      keys.add(readKey(downloadType,version,input));\n    }\n  }\n  boolean isLegacySegmented=version < 2 && (DOWNLOAD_TYPE_DASH.equals(downloadType) || DOWNLOAD_TYPE_HLS.equals(downloadType) || DOWNLOAD_TYPE_SS.equals(downloadType));\n  @Nullable String customCacheKey=null;\n  if (!isLegacySegmented) {\n    customCacheKey=input.readBoolean() ? input.readUTF() : null;\n  }\n  String id=version < 3 ? generateDownloadId(uri,customCacheKey) : input.readUTF();\n  if (isRemoveAction) {\n    throw new UnsupportedRequestException();\n  }\n  return new DownloadRequest.Builder(id,uri).setMimeType(inferMimeType(downloadType)).setStreamKeys(keys).setCustomCacheKey(customCacheKey).setData(data).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 220,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1846,
        "startLineNumber" : 99,
        "startColumnNumber" : 2,
        "endLineNumber" : 150,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static DownloadRequest readDownloadRequest(DataInputStream input) throws IOException {\n  String downloadType=input.readUTF();\n  int version=input.readInt();\n  Uri uri=Uri.parse(input.readUTF());\n  boolean isRemoveAction=input.readBoolean();\n  int dataLength=input.readInt();\n  @Nullable byte[] data;\n  if (dataLength != 0) {\n    data=new byte[dataLength];\n    input.readFully(data);\n  }\n else {\n    data=null;\n  }\n  boolean isLegacyProgressive=version == 0 && DOWNLOAD_TYPE_PROGRESSIVE.equals(downloadType);\n  List<StreamKey> keys=new ArrayList<>();\n  if (!isLegacyProgressive) {\n    int keyCount=input.readInt();\n    for (int i=0; i < keyCount; i++) {\n      keys.add(readKey(downloadType,version,input));\n    }\n  }\n  boolean isLegacySegmented=version < 2 && (DOWNLOAD_TYPE_DASH.equals(downloadType) || DOWNLOAD_TYPE_HLS.equals(downloadType) || DOWNLOAD_TYPE_SS.equals(downloadType));\n  @Nullable String customCacheKey=null;\n  if (!isLegacySegmented) {\n    customCacheKey=input.readBoolean() ? input.readUTF() : null;\n  }\n  String id=version < 3 ? generateDownloadId(uri,customCacheKey) : input.readUTF();\n  if (isRemoveAction) {\n    throw new UnsupportedRequestException();\n  }\n  return new DownloadRequest.Builder(id,uri).setMimeType(inferMimeType(downloadType)).setStreamKeys(keys).setCustomCacheKey(customCacheKey).setData(data).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 232,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 132,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!isLegacySegmented) {\n  customCacheKey=input.readBoolean() ? input.readUTF() : null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 132,
    "startColumnNumber" : 8,
    "endLineNumber" : 132,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}