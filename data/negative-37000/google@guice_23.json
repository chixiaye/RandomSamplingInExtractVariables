{
  "id" : 23,
  "expression" : "0",
  "projectName" : "google@guice",
  "commitID" : "ed8825fb8c7cdae7f8e24a8d224344e19f562513",
  "filePath" : "/test/com/google/inject/util/ReferenceMapTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 100,
      "startColumnNumber" : 17,
      "endLineNumber" : 100,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 100,
        "startColumnNumber" : 13,
        "endLineNumber" : 100,
        "endColumnNumber" : 18
      },
      "nodeContext" : "i=0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 100,
        "startColumnNumber" : 9,
        "endLineNumber" : 100,
        "endColumnNumber" : 18
      },
      "nodeContext" : "int i=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 100,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < 500; i++) {\n  if (mode == CleanupMode.GC) {\n    System.gc();\n  }\n  if (map.size() == 0) {\n    return;\n  }\n  try {\n    Thread.sleep(10);\n  }\n catch (  InterruptedException e) {\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 44,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 868,
        "startLineNumber" : 79,
        "startColumnNumber" : 24,
        "endLineNumber" : 112,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertEquals(1,map.delegate.size());\nswitch (mode) {\ncase ENQUEUE_KEY:{\n      ConcurrentMap delegate=map.delegate;\n      Iterator keyIterator=delegate.keySet().iterator();\n      Reference reference=((Reference)keyIterator.next());\n      reference.enqueue();\n      break;\n    }\ncase ENQUEUE_VALUE:{\n    ConcurrentMap delegate=map.delegate;\n    Iterator valueIterator=delegate.values().iterator();\n    Reference reference=((Reference)valueIterator.next());\n    reference.enqueue();\n    break;\n  }\n}\nfor (int i=0; i < 500; i++) {\nif (mode == CleanupMode.GC) {\n  System.gc();\n}\nif (map.size() == 0) {\n  return;\n}\ntry {\n  Thread.sleep(10);\n}\n catch (InterruptedException e) {\n}\n}\nfail();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 950,
        "startLineNumber" : 78,
        "startColumnNumber" : 2,
        "endLineNumber" : 112,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void assertCleanup(ReferenceMap<?,?> map,CleanupMode mode){\n  assertEquals(1,map.delegate.size());\nswitch (mode) {\ncase ENQUEUE_KEY:{\n      ConcurrentMap delegate=map.delegate;\n      Iterator keyIterator=delegate.keySet().iterator();\n      Reference reference=((Reference)keyIterator.next());\n      reference.enqueue();\n      break;\n    }\ncase ENQUEUE_VALUE:{\n    ConcurrentMap delegate=map.delegate;\n    Iterator valueIterator=delegate.values().iterator();\n    Reference reference=((Reference)valueIterator.next());\n    reference.enqueue();\n    break;\n  }\n}\nfor (int i=0; i < 500; i++) {\nif (mode == CleanupMode.GC) {\n  System.gc();\n}\nif (map.size() == 0) {\n  return;\n}\ntry {\n  Thread.sleep(10);\n}\n catch (InterruptedException e) {\n}\n}\nfail();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 100,
        "startColumnNumber" : 9,
        "endLineNumber" : 100,
        "endColumnNumber" : 18
      },
      "nodeContext" : "int i=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 104,
      "startColumnNumber" : 24,
      "endLineNumber" : 104,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 104,
        "startColumnNumber" : 10,
        "endLineNumber" : 104,
        "endColumnNumber" : 25
      },
      "nodeContext" : "map.size() == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 104,
        "startColumnNumber" : 6,
        "endLineNumber" : 106,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (map.size() == 0) {\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 219,
        "startLineNumber" : 100,
        "startColumnNumber" : 34,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mode == CleanupMode.GC) {\n    System.gc();\n  }\n  if (map.size() == 0) {\n    return;\n  }\n  try {\n    Thread.sleep(10);\n  }\n catch (  InterruptedException e) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 100,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < 500; i++) {\n  if (mode == CleanupMode.GC) {\n    System.gc();\n  }\n  if (map.size() == 0) {\n    return;\n  }\n  try {\n    Thread.sleep(10);\n  }\n catch (  InterruptedException e) {\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 44,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 868,
        "startLineNumber" : 79,
        "startColumnNumber" : 24,
        "endLineNumber" : 112,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertEquals(1,map.delegate.size());\nswitch (mode) {\ncase ENQUEUE_KEY:{\n      ConcurrentMap delegate=map.delegate;\n      Iterator keyIterator=delegate.keySet().iterator();\n      Reference reference=((Reference)keyIterator.next());\n      reference.enqueue();\n      break;\n    }\ncase ENQUEUE_VALUE:{\n    ConcurrentMap delegate=map.delegate;\n    Iterator valueIterator=delegate.values().iterator();\n    Reference reference=((Reference)valueIterator.next());\n    reference.enqueue();\n    break;\n  }\n}\nfor (int i=0; i < 500; i++) {\nif (mode == CleanupMode.GC) {\n  System.gc();\n}\nif (map.size() == 0) {\n  return;\n}\ntry {\n  Thread.sleep(10);\n}\n catch (InterruptedException e) {\n}\n}\nfail();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 950,
        "startLineNumber" : 78,
        "startColumnNumber" : 2,
        "endLineNumber" : 112,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void assertCleanup(ReferenceMap<?,?> map,CleanupMode mode){\n  assertEquals(1,map.delegate.size());\nswitch (mode) {\ncase ENQUEUE_KEY:{\n      ConcurrentMap delegate=map.delegate;\n      Iterator keyIterator=delegate.keySet().iterator();\n      Reference reference=((Reference)keyIterator.next());\n      reference.enqueue();\n      break;\n    }\ncase ENQUEUE_VALUE:{\n    ConcurrentMap delegate=map.delegate;\n    Iterator valueIterator=delegate.values().iterator();\n    Reference reference=((Reference)valueIterator.next());\n    reference.enqueue();\n    break;\n  }\n}\nfor (int i=0; i < 500; i++) {\nif (mode == CleanupMode.GC) {\n  System.gc();\n}\nif (map.size() == 0) {\n  return;\n}\ntry {\n  Thread.sleep(10);\n}\n catch (InterruptedException e) {\n}\n}\nfail();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 104,
        "startColumnNumber" : 10,
        "endLineNumber" : 104,
        "endColumnNumber" : 25
      },
      "nodeContext" : "map.size() == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 100,
    "startColumnNumber" : 17,
    "endLineNumber" : 100,
    "endColumnNumber" : 18
  }, {
    "charLength" : 1,
    "startLineNumber" : 104,
    "startColumnNumber" : 24,
    "endLineNumber" : 104,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}