{
  "id" : 75,
  "expression" : "p.lrange(\"list\",0,-1)",
  "projectName" : "redis@jedis",
  "commitID" : "eaa5b16af93d575cd1f340c2cd23595dc29d5638",
  "filePath" : "/src/test/java/redis/clients/jedis/tests/ShardedJedisPipelineTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "p.lrange(\"list\",0,-1)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 90,
      "startColumnNumber" : 36,
      "endLineNumber" : 90,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 90,
        "startColumnNumber" : 27,
        "endLineNumber" : 90,
        "endColumnNumber" : 59
      },
      "nodeContext" : "lrange=p.lrange(\"list\",0,-1)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 60
      },
      "nodeContext" : "Response<List<String>> lrange=p.lrange(\"list\",0,-1);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1634,
        "startLineNumber" : 71,
        "startColumnNumber" : 33,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  jedis.set(\"string\",\"foo\");\n  jedis.lpush(\"list\",\"foo\");\n  jedis.hset(\"hash\",\"foo\",\"bar\");\n  jedis.zadd(\"zset\",1,\"foo\");\n  jedis.sadd(\"set\",\"foo\");\n  ShardedJedisPipeline p=jedis.pipelined();\n  Response<String> string=p.get(\"string\");\n  Response<Long> del=p.del(\"string\");\n  Response<String> emptyString=p.get(\"string\");\n  Response<String> list=p.lpop(\"list\");\n  Response<String> hash=p.hget(\"hash\",\"foo\");\n  Response<Set<String>> zset=p.zrange(\"zset\",0,-1);\n  Response<String> set=p.spop(\"set\");\n  Response<Boolean> blist=p.exists(\"list\");\n  Response<Double> zincrby=p.zincrby(\"zset\",1,\"foo\");\n  Response<Long> zcard=p.zcard(\"zset\");\n  p.lpush(\"list\",\"bar\");\n  Response<List<String>> lrange=p.lrange(\"list\",0,-1);\n  Response<Map<String,String>> hgetAll=p.hgetAll(\"hash\");\n  p.sadd(\"set\",\"foo\");\n  Response<Set<String>> smembers=p.smembers(\"set\");\n  Response<Set<Tuple>> zrangeWithScores=p.zrangeWithScores(\"zset\",0,-1);\n  p.sync();\n  assertEquals(\"foo\",string.get());\n  assertEquals(Long.valueOf(1),del.get());\n  assertNull(emptyString.get());\n  assertEquals(\"foo\",list.get());\n  assertEquals(\"bar\",hash.get());\n  assertEquals(\"foo\",zset.get().iterator().next());\n  assertEquals(\"foo\",set.get());\n  assertFalse(blist.get());\n  assertEquals(Double.valueOf(2),zincrby.get());\n  assertEquals(Long.valueOf(1),zcard.get());\n  assertEquals(1,lrange.get().size());\n  assertNotNull(hgetAll.get().get(\"foo\"));\n  assertEquals(1,smembers.get().size());\n  assertEquals(1,zrangeWithScores.get().size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 371,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1673,
        "startLineNumber" : 70,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void pipelineResponse(){\n  jedis.set(\"string\",\"foo\");\n  jedis.lpush(\"list\",\"foo\");\n  jedis.hset(\"hash\",\"foo\",\"bar\");\n  jedis.zadd(\"zset\",1,\"foo\");\n  jedis.sadd(\"set\",\"foo\");\n  ShardedJedisPipeline p=jedis.pipelined();\n  Response<String> string=p.get(\"string\");\n  Response<Long> del=p.del(\"string\");\n  Response<String> emptyString=p.get(\"string\");\n  Response<String> list=p.lpop(\"list\");\n  Response<String> hash=p.hget(\"hash\",\"foo\");\n  Response<Set<String>> zset=p.zrange(\"zset\",0,-1);\n  Response<String> set=p.spop(\"set\");\n  Response<Boolean> blist=p.exists(\"list\");\n  Response<Double> zincrby=p.zincrby(\"zset\",1,\"foo\");\n  Response<Long> zcard=p.zcard(\"zset\");\n  p.lpush(\"list\",\"bar\");\n  Response<List<String>> lrange=p.lrange(\"list\",0,-1);\n  Response<Map<String,String>> hgetAll=p.hgetAll(\"hash\");\n  p.sadd(\"set\",\"foo\");\n  Response<Set<String>> smembers=p.smembers(\"set\");\n  Response<Set<Tuple>> zrangeWithScores=p.zrangeWithScores(\"zset\",0,-1);\n  p.sync();\n  assertEquals(\"foo\",string.get());\n  assertEquals(Long.valueOf(1),del.get());\n  assertNull(emptyString.get());\n  assertEquals(\"foo\",list.get());\n  assertEquals(\"bar\",hash.get());\n  assertEquals(\"foo\",zset.get().iterator().next());\n  assertEquals(\"foo\",set.get());\n  assertFalse(blist.get());\n  assertEquals(Double.valueOf(2),zincrby.get());\n  assertEquals(Long.valueOf(1),zcard.get());\n  assertEquals(1,lrange.get().size());\n  assertNotNull(hgetAll.get().get(\"foo\"));\n  assertEquals(1,smembers.get().size());\n  assertEquals(1,zrangeWithScores.get().size());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 377,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 60
      },
      "nodeContext" : "Response<List<String>> lrange=p.lrange(\"list\",0,-1);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "redis.clients.jedis.Response<java.util.List<java.lang.String>>"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 90,
    "startColumnNumber" : 36,
    "endLineNumber" : 90,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ ]
}