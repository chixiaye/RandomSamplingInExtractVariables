{
  "id" : 455,
  "expression" : "\"sendCredentialsOverHttp\"",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-core/src/main/java/com/google/cloud/tools/jib/registry/RegistryEndpointCaller.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"sendCredentialsOverHttp\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 214,
      "startColumnNumber" : 73,
      "endLineNumber" : 214,
      "endColumnNumber" : 98
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 214,
        "startColumnNumber" : 54,
        "endLineNumber" : 214,
        "endColumnNumber" : 99
      },
      "nodeContext" : "Boolean.getBoolean(\"sendCredentialsOverHttp\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 214,
        "startColumnNumber" : 30,
        "endLineNumber" : 214,
        "endColumnNumber" : 99
      },
      "nodeContext" : "isHttpsProtocol(url) || Boolean.getBoolean(\"sendCredentialsOverHttp\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 214,
        "startColumnNumber" : 12,
        "endLineNumber" : 214,
        "endColumnNumber" : 99
      },
      "nodeContext" : "sendCredentials=isHttpsProtocol(url) || Boolean.getBoolean(\"sendCredentialsOverHttp\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 214,
        "startColumnNumber" : 4,
        "endLineNumber" : 214,
        "endColumnNumber" : 100
      },
      "nodeContext" : "boolean sendCredentials=isHttpsProtocol(url) || Boolean.getBoolean(\"sendCredentialsOverHttp\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3794,
        "startLineNumber" : 212,
        "startColumnNumber" : 44,
        "endLineNumber" : 291,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  boolean sendCredentials=isHttpsProtocol(url) || Boolean.getBoolean(\"sendCredentialsOverHttp\");\n  try (Connection connection=connectionFactory.apply(url)){\n    Request.Builder requestBuilder=Request.builder().setUserAgent(userAgent).setHttpTimeout(Integer.getInteger(\"jib.httpTimeout\")).setAccept(registryEndpointProvider.getAccept()).setBody(registryEndpointProvider.getContent());\n    if (sendCredentials) {\n      requestBuilder.setAuthorization(authorization);\n    }\n    Response response=connection.send(registryEndpointProvider.getHttpMethod(),requestBuilder.build());\n    return registryEndpointProvider.handleResponse(response);\n  }\n catch (  HttpResponseException ex) {\n    try {\n      return registryEndpointProvider.handleHttpResponseException(ex);\n    }\n catch (    HttpResponseException httpResponseException) {\n      if (httpResponseException.getStatusCode() == HttpStatusCodes.STATUS_CODE_BAD_REQUEST || httpResponseException.getStatusCode() == HttpStatusCodes.STATUS_CODE_NOT_FOUND || httpResponseException.getStatusCode() == HttpStatusCodes.STATUS_CODE_METHOD_NOT_ALLOWED) {\n        ErrorResponseTemplate errorResponse=JsonTemplateMapper.readJson(httpResponseException.getContent(),ErrorResponseTemplate.class);\n        RegistryErrorExceptionBuilder registryErrorExceptionBuilder=new RegistryErrorExceptionBuilder(registryEndpointProvider.getActionDescription(),httpResponseException);\n        for (        ErrorEntryTemplate errorEntry : errorResponse.getErrors()) {\n          registryErrorExceptionBuilder.addReason(errorEntry);\n        }\n        throw registryErrorExceptionBuilder.build();\n      }\n else       if (httpResponseException.getStatusCode() == HttpStatusCodes.STATUS_CODE_FORBIDDEN) {\n        throw new RegistryUnauthorizedException(registryEndpointRequestProperties.getServerUrl(),registryEndpointRequestProperties.getImageName(),httpResponseException);\n      }\n else       if (httpResponseException.getStatusCode() == HttpStatusCodes.STATUS_CODE_UNAUTHORIZED) {\n        if (sendCredentials) {\n          throw new RegistryUnauthorizedException(registryEndpointRequestProperties.getServerUrl(),registryEndpointRequestProperties.getImageName(),httpResponseException);\n        }\n else {\n          throw new RegistryCredentialsNotSentException(registryEndpointRequestProperties.getServerUrl(),registryEndpointRequestProperties.getImageName());\n        }\n      }\n else       if (httpResponseException.getStatusCode() == HttpStatusCodes.STATUS_CODE_TEMPORARY_REDIRECT || httpResponseException.getStatusCode() == HttpStatusCodes.STATUS_CODE_MOVED_PERMANENTLY || httpResponseException.getStatusCode() == STATUS_CODE_PERMANENT_REDIRECT) {\n        URL redirectLocation=new URL(url,httpResponseException.getHeaders().getLocation());\n        return callWithAllowInsecureRegistryHandling(redirectLocation);\n      }\n else {\n        throw httpResponseException;\n      }\n    }\n  }\ncatch (  NoHttpResponseException ex) {\n    throw new RegistryNoResponseException(ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 277,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4264,
        "startLineNumber" : 202,
        "startColumnNumber" : 2,
        "endLineNumber" : 291,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Calls the registry endpoint with a certain  {@link URL}.\n * @param url the endpoint URL to call\n * @return an object representing the response, or {@code null}\n * @throws IOException for most I/O exceptions when making the request\n * @throws RegistryException for known exceptions when interacting with the registry\n */\n@Nullable private T call(URL url,Function<URL,Connection> connectionFactory) throws IOException, RegistryException {\n  boolean sendCredentials=isHttpsProtocol(url) || Boolean.getBoolean(\"sendCredentialsOverHttp\");\n  try (Connection connection=connectionFactory.apply(url)){\n    Request.Builder requestBuilder=Request.builder().setUserAgent(userAgent).setHttpTimeout(Integer.getInteger(\"jib.httpTimeout\")).setAccept(registryEndpointProvider.getAccept()).setBody(registryEndpointProvider.getContent());\n    if (sendCredentials) {\n      requestBuilder.setAuthorization(authorization);\n    }\n    Response response=connection.send(registryEndpointProvider.getHttpMethod(),requestBuilder.build());\n    return registryEndpointProvider.handleResponse(response);\n  }\n catch (  HttpResponseException ex) {\n    try {\n      return registryEndpointProvider.handleHttpResponseException(ex);\n    }\n catch (    HttpResponseException httpResponseException) {\n      if (httpResponseException.getStatusCode() == HttpStatusCodes.STATUS_CODE_BAD_REQUEST || httpResponseException.getStatusCode() == HttpStatusCodes.STATUS_CODE_NOT_FOUND || httpResponseException.getStatusCode() == HttpStatusCodes.STATUS_CODE_METHOD_NOT_ALLOWED) {\n        ErrorResponseTemplate errorResponse=JsonTemplateMapper.readJson(httpResponseException.getContent(),ErrorResponseTemplate.class);\n        RegistryErrorExceptionBuilder registryErrorExceptionBuilder=new RegistryErrorExceptionBuilder(registryEndpointProvider.getActionDescription(),httpResponseException);\n        for (        ErrorEntryTemplate errorEntry : errorResponse.getErrors()) {\n          registryErrorExceptionBuilder.addReason(errorEntry);\n        }\n        throw registryErrorExceptionBuilder.build();\n      }\n else       if (httpResponseException.getStatusCode() == HttpStatusCodes.STATUS_CODE_FORBIDDEN) {\n        throw new RegistryUnauthorizedException(registryEndpointRequestProperties.getServerUrl(),registryEndpointRequestProperties.getImageName(),httpResponseException);\n      }\n else       if (httpResponseException.getStatusCode() == HttpStatusCodes.STATUS_CODE_UNAUTHORIZED) {\n        if (sendCredentials) {\n          throw new RegistryUnauthorizedException(registryEndpointRequestProperties.getServerUrl(),registryEndpointRequestProperties.getImageName(),httpResponseException);\n        }\n else {\n          throw new RegistryCredentialsNotSentException(registryEndpointRequestProperties.getServerUrl(),registryEndpointRequestProperties.getImageName());\n        }\n      }\n else       if (httpResponseException.getStatusCode() == HttpStatusCodes.STATUS_CODE_TEMPORARY_REDIRECT || httpResponseException.getStatusCode() == HttpStatusCodes.STATUS_CODE_MOVED_PERMANENTLY || httpResponseException.getStatusCode() == STATUS_CODE_PERMANENT_REDIRECT) {\n        URL redirectLocation=new URL(url,httpResponseException.getHeaders().getLocation());\n        return callWithAllowInsecureRegistryHandling(redirectLocation);\n      }\n else {\n        throw httpResponseException;\n      }\n    }\n  }\ncatch (  NoHttpResponseException ex) {\n    throw new RegistryNoResponseException(ex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 302,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 214,
        "startColumnNumber" : 4,
        "endLineNumber" : 214,
        "endColumnNumber" : 100
      },
      "nodeContext" : "boolean sendCredentials=isHttpsProtocol(url) || Boolean.getBoolean(\"sendCredentialsOverHttp\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 214,
    "startColumnNumber" : 73,
    "endLineNumber" : 214,
    "endColumnNumber" : 98
  } ],
  "layoutRelationDataList" : [ ]
}