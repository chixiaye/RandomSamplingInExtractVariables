{
  "id" : 100,
  "expression" : "toRemove",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-build/tinker-patch-lib/src/main/java/org/jf/dexlib2/builder/BuilderMutableMethodImplementation.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "toRemove",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 387,
      "startColumnNumber" : 8,
      "endLineNumber" : 387,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 387,
        "startColumnNumber" : 8,
        "endLineNumber" : 387,
        "endColumnNumber" : 28
      },
      "nodeContext" : "toRemove.instruction",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 387,
        "startColumnNumber" : 8,
        "endLineNumber" : 387,
        "endColumnNumber" : 35
      },
      "nodeContext" : "toRemove.instruction=null",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 387,
        "startColumnNumber" : 8,
        "endLineNumber" : 387,
        "endColumnNumber" : 36
      },
      "nodeContext" : "toRemove.instruction=null;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 911,
        "startLineNumber" : 381,
        "startColumnNumber" : 45,
        "endLineNumber" : 407,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (index >= instructionList.size() - 1) {\n    throw new IndexOutOfBoundsException();\n  }\n  MethodLocation toRemove=instructionList.get(index);\n  toRemove.instruction=null;\n  MethodLocation next=instructionList.get(index + 1);\n  toRemove.mergeInto(next);\n  instructionList.remove(index);\n  int codeAddress=toRemove.codeAddress;\n  for (int i=index; i < instructionList.size(); i++) {\n    MethodLocation location=instructionList.get(i);\n    location.index=i;\n    location.codeAddress=codeAddress;\n    Instruction instruction=location.getInstruction();\n    if (instruction != null) {\n      codeAddress+=instruction.getCodeUnits();\n    }\n else {\n      assert i == instructionList.size() - 1;\n    }\n  }\n  this.fixInstructions=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 952,
        "startLineNumber" : 381,
        "startColumnNumber" : 4,
        "endLineNumber" : 407,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void removeInstruction(int index){\n  if (index >= instructionList.size() - 1) {\n    throw new IndexOutOfBoundsException();\n  }\n  MethodLocation toRemove=instructionList.get(index);\n  toRemove.instruction=null;\n  MethodLocation next=instructionList.get(index + 1);\n  toRemove.mergeInto(next);\n  instructionList.remove(index);\n  int codeAddress=toRemove.codeAddress;\n  for (int i=index; i < instructionList.size(); i++) {\n    MethodLocation location=instructionList.get(i);\n    location.index=i;\n    location.codeAddress=codeAddress;\n    Instruction instruction=location.getInstruction();\n    if (instruction != null) {\n      codeAddress+=instruction.getCodeUnits();\n    }\n else {\n      assert i == instructionList.size() - 1;\n    }\n  }\n  this.fixInstructions=true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 133,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 387,
        "startColumnNumber" : 8,
        "endLineNumber" : 387,
        "endColumnNumber" : 36
      },
      "nodeContext" : "toRemove.instruction=null;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "toRemove",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 389,
      "startColumnNumber" : 8,
      "endLineNumber" : 389,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 389,
        "startColumnNumber" : 8,
        "endLineNumber" : 389,
        "endColumnNumber" : 32
      },
      "nodeContext" : "toRemove.mergeInto(next)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 389,
        "startColumnNumber" : 8,
        "endLineNumber" : 389,
        "endColumnNumber" : 33
      },
      "nodeContext" : "toRemove.mergeInto(next);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 911,
        "startLineNumber" : 381,
        "startColumnNumber" : 45,
        "endLineNumber" : 407,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (index >= instructionList.size() - 1) {\n    throw new IndexOutOfBoundsException();\n  }\n  MethodLocation toRemove=instructionList.get(index);\n  toRemove.instruction=null;\n  MethodLocation next=instructionList.get(index + 1);\n  toRemove.mergeInto(next);\n  instructionList.remove(index);\n  int codeAddress=toRemove.codeAddress;\n  for (int i=index; i < instructionList.size(); i++) {\n    MethodLocation location=instructionList.get(i);\n    location.index=i;\n    location.codeAddress=codeAddress;\n    Instruction instruction=location.getInstruction();\n    if (instruction != null) {\n      codeAddress+=instruction.getCodeUnits();\n    }\n else {\n      assert i == instructionList.size() - 1;\n    }\n  }\n  this.fixInstructions=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 952,
        "startLineNumber" : 381,
        "startColumnNumber" : 4,
        "endLineNumber" : 407,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void removeInstruction(int index){\n  if (index >= instructionList.size() - 1) {\n    throw new IndexOutOfBoundsException();\n  }\n  MethodLocation toRemove=instructionList.get(index);\n  toRemove.instruction=null;\n  MethodLocation next=instructionList.get(index + 1);\n  toRemove.mergeInto(next);\n  instructionList.remove(index);\n  int codeAddress=toRemove.codeAddress;\n  for (int i=index; i < instructionList.size(); i++) {\n    MethodLocation location=instructionList.get(i);\n    location.index=i;\n    location.codeAddress=codeAddress;\n    Instruction instruction=location.getInstruction();\n    if (instruction != null) {\n      codeAddress+=instruction.getCodeUnits();\n    }\n else {\n      assert i == instructionList.size() - 1;\n    }\n  }\n  this.fixInstructions=true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 133,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 389,
        "startColumnNumber" : 8,
        "endLineNumber" : 389,
        "endColumnNumber" : 33
      },
      "nodeContext" : "toRemove.mergeInto(next);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.jf.dexlib2.builder.MethodLocation"
  }, {
    "nodeContext" : "toRemove",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 392,
      "startColumnNumber" : 26,
      "endLineNumber" : 392,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 392,
        "startColumnNumber" : 26,
        "endLineNumber" : 392,
        "endColumnNumber" : 46
      },
      "nodeContext" : "toRemove.codeAddress",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 392,
        "startColumnNumber" : 12,
        "endLineNumber" : 392,
        "endColumnNumber" : 46
      },
      "nodeContext" : "codeAddress=toRemove.codeAddress",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 392,
        "startColumnNumber" : 8,
        "endLineNumber" : 392,
        "endColumnNumber" : 47
      },
      "nodeContext" : "int codeAddress=toRemove.codeAddress;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 911,
        "startLineNumber" : 381,
        "startColumnNumber" : 45,
        "endLineNumber" : 407,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (index >= instructionList.size() - 1) {\n    throw new IndexOutOfBoundsException();\n  }\n  MethodLocation toRemove=instructionList.get(index);\n  toRemove.instruction=null;\n  MethodLocation next=instructionList.get(index + 1);\n  toRemove.mergeInto(next);\n  instructionList.remove(index);\n  int codeAddress=toRemove.codeAddress;\n  for (int i=index; i < instructionList.size(); i++) {\n    MethodLocation location=instructionList.get(i);\n    location.index=i;\n    location.codeAddress=codeAddress;\n    Instruction instruction=location.getInstruction();\n    if (instruction != null) {\n      codeAddress+=instruction.getCodeUnits();\n    }\n else {\n      assert i == instructionList.size() - 1;\n    }\n  }\n  this.fixInstructions=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 952,
        "startLineNumber" : 381,
        "startColumnNumber" : 4,
        "endLineNumber" : 407,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void removeInstruction(int index){\n  if (index >= instructionList.size() - 1) {\n    throw new IndexOutOfBoundsException();\n  }\n  MethodLocation toRemove=instructionList.get(index);\n  toRemove.instruction=null;\n  MethodLocation next=instructionList.get(index + 1);\n  toRemove.mergeInto(next);\n  instructionList.remove(index);\n  int codeAddress=toRemove.codeAddress;\n  for (int i=index; i < instructionList.size(); i++) {\n    MethodLocation location=instructionList.get(i);\n    location.index=i;\n    location.codeAddress=codeAddress;\n    Instruction instruction=location.getInstruction();\n    if (instruction != null) {\n      codeAddress+=instruction.getCodeUnits();\n    }\n else {\n      assert i == instructionList.size() - 1;\n    }\n  }\n  this.fixInstructions=true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 133,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 392,
        "startColumnNumber" : 8,
        "endLineNumber" : 392,
        "endColumnNumber" : 47
      },
      "nodeContext" : "int codeAddress=toRemove.codeAddress;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 387,
    "startColumnNumber" : 8,
    "endLineNumber" : 387,
    "endColumnNumber" : 16
  }, {
    "charLength" : 8,
    "startLineNumber" : 389,
    "startColumnNumber" : 8,
    "endLineNumber" : 389,
    "endColumnNumber" : 16
  }, {
    "charLength" : 8,
    "startLineNumber" : 392,
    "startColumnNumber" : 26,
    "endLineNumber" : 392,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}