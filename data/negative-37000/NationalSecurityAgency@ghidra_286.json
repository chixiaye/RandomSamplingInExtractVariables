{
  "id" : 286,
  "expression" : "program",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Processors/PIC/src/main/java/ghidra/app/util/bin/format/elf/relocation/PIC30_ElfRelocationHandler.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "program",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 134,
      "startColumnNumber" : 18,
      "endLineNumber" : 134,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 134,
        "startColumnNumber" : 18,
        "endLineNumber" : 134,
        "endColumnNumber" : 37
      },
      "nodeContext" : "program.getMemory()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 134,
        "startColumnNumber" : 9,
        "endLineNumber" : 134,
        "endColumnNumber" : 37
      },
      "nodeContext" : "memory=program.getMemory()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 134,
        "startColumnNumber" : 2,
        "endLineNumber" : 134,
        "endColumnNumber" : 38
      },
      "nodeContext" : "Memory memory=program.getMemory();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2776,
        "startLineNumber" : 126,
        "startColumnNumber" : 51,
        "endLineNumber" : 215,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int type=relocation.getType();\n  if (type == R_PIC30_NONE) {\n    return;\n  }\n  Program program=elfRelocationContext.getProgram();\n  Memory memory=program.getMemory();\n  int symbolIndex=relocation.getSymbolIndex();\n  int addend=(int)relocation.getAddend();\n  if (symbolIndex == 0) {\n    return;\n  }\n  long relocWordOffset=(int)relocationAddress.getAddressableWordOffset();\n  ElfSymbol sym=elfRelocationContext.getSymbol(symbolIndex);\n  int symbolValue=(int)elfRelocationContext.getSymbolValue(sym);\n  int oldValue=memory.getInt(relocationAddress);\n  short oldShortValue=memory.getShort(relocationAddress);\n  int newValue;\n  ElfHeader elf=elfRelocationContext.getElfHeader();\n  if (elf.e_machine() == ElfConstants.EM_DSPIC30F) {\nswitch (type) {\ncase R_PIC30_16:case R_PIC30_FILE_REG_WORD:      newValue=(symbolValue + addend + oldShortValue);\n    memory.setShort(relocationAddress,(short)newValue);\n  break;\ncase R_PIC30_32:newValue=symbolValue + addend + oldValue;\nmemory.setInt(relocationAddress,newValue);\nbreak;\ncase R_PIC30_FILE_REG_BYTE:case R_PIC30_FILE_REG:int reloc=symbolValue;\nreloc+=addend;\nreloc+=oldShortValue;\nreloc&=0x1fff;\nnewValue=reloc | (oldShortValue & ~0x1fff);\nmemory.setShort(relocationAddress,(short)newValue);\nbreak;\ncase R_PIC30_FILE_REG_WORD_WITH_DST:reloc=symbolValue >> 1;\nreloc+=addend;\nreloc+=oldValue >> 4;\nreloc&=0x7fff;\nnewValue=(reloc << 4) | (oldValue & ~0x7fff0);\nmemory.setInt(relocationAddress,newValue);\nbreak;\ncase R_PIC30_WORD:case R_PIC30_WORD_TBLOFFSET:reloc=symbolValue;\nreloc+=addend;\nreloc+=oldValue >> 4;\nreloc&=0xffff;\nnewValue=(reloc << 4) | (oldValue & ~0x0ffff0);\nmemory.setInt(relocationAddress,newValue);\nbreak;\ncase R_PIC30_WORD_TBLPAGE:reloc=symbolValue >> 16;\nreloc+=addend;\nreloc+=oldValue >> 4;\nreloc&=0xffff;\nif (isEDSVariant(elfRelocationContext)) {\nreloc|=0x100;\n}\nnewValue=(reloc << 4) | (oldValue & ~0x0ffff0);\nmemory.setInt(relocationAddress,newValue);\nbreak;\ncase R_PIC30_PCREL_BRANCH:newValue=(int)(symbolValue - relocWordOffset + oldShortValue - 2);\nnewValue>>>=1;\nmemory.setShort(relocationAddress,(short)(newValue & 0xffff));\nbreak;\ndefault:String symbolName=sym.getNameAsString();\nmarkAsUnhandled(program,relocationAddress,type,symbolIndex,symbolName,elfRelocationContext.getLog());\nbreak;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 383,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2957,
        "startLineNumber" : 124,
        "startColumnNumber" : 1,
        "endLineNumber" : 215,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void relocate(ElfRelocationContext elfRelocationContext,ElfRelocation relocation,Address relocationAddress) throws MemoryAccessException, NotFoundException {\n  int type=relocation.getType();\n  if (type == R_PIC30_NONE) {\n    return;\n  }\n  Program program=elfRelocationContext.getProgram();\n  Memory memory=program.getMemory();\n  int symbolIndex=relocation.getSymbolIndex();\n  int addend=(int)relocation.getAddend();\n  if (symbolIndex == 0) {\n    return;\n  }\n  long relocWordOffset=(int)relocationAddress.getAddressableWordOffset();\n  ElfSymbol sym=elfRelocationContext.getSymbol(symbolIndex);\n  int symbolValue=(int)elfRelocationContext.getSymbolValue(sym);\n  int oldValue=memory.getInt(relocationAddress);\n  short oldShortValue=memory.getShort(relocationAddress);\n  int newValue;\n  ElfHeader elf=elfRelocationContext.getElfHeader();\n  if (elf.e_machine() == ElfConstants.EM_DSPIC30F) {\nswitch (type) {\ncase R_PIC30_16:case R_PIC30_FILE_REG_WORD:      newValue=(symbolValue + addend + oldShortValue);\n    memory.setShort(relocationAddress,(short)newValue);\n  break;\ncase R_PIC30_32:newValue=symbolValue + addend + oldValue;\nmemory.setInt(relocationAddress,newValue);\nbreak;\ncase R_PIC30_FILE_REG_BYTE:case R_PIC30_FILE_REG:int reloc=symbolValue;\nreloc+=addend;\nreloc+=oldShortValue;\nreloc&=0x1fff;\nnewValue=reloc | (oldShortValue & ~0x1fff);\nmemory.setShort(relocationAddress,(short)newValue);\nbreak;\ncase R_PIC30_FILE_REG_WORD_WITH_DST:reloc=symbolValue >> 1;\nreloc+=addend;\nreloc+=oldValue >> 4;\nreloc&=0x7fff;\nnewValue=(reloc << 4) | (oldValue & ~0x7fff0);\nmemory.setInt(relocationAddress,newValue);\nbreak;\ncase R_PIC30_WORD:case R_PIC30_WORD_TBLOFFSET:reloc=symbolValue;\nreloc+=addend;\nreloc+=oldValue >> 4;\nreloc&=0xffff;\nnewValue=(reloc << 4) | (oldValue & ~0x0ffff0);\nmemory.setInt(relocationAddress,newValue);\nbreak;\ncase R_PIC30_WORD_TBLPAGE:reloc=symbolValue >> 16;\nreloc+=addend;\nreloc+=oldValue >> 4;\nreloc&=0xffff;\nif (isEDSVariant(elfRelocationContext)) {\nreloc|=0x100;\n}\nnewValue=(reloc << 4) | (oldValue & ~0x0ffff0);\nmemory.setInt(relocationAddress,newValue);\nbreak;\ncase R_PIC30_PCREL_BRANCH:newValue=(int)(symbolValue - relocWordOffset + oldShortValue - 2);\nnewValue>>>=1;\nmemory.setShort(relocationAddress,(short)(newValue & 0xffff));\nbreak;\ndefault:String symbolName=sym.getNameAsString();\nmarkAsUnhandled(program,relocationAddress,type,symbolIndex,symbolName,elfRelocationContext.getLog());\nbreak;\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 405,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 134,
        "startColumnNumber" : 2,
        "endLineNumber" : 134,
        "endColumnNumber" : 38
      },
      "nodeContext" : "Memory memory=program.getMemory();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "ghidra.program.model.listing.Program"
  }, {
    "nodeContext" : "program",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 210,
      "startColumnNumber" : 20,
      "endLineNumber" : 210,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 210,
        "startColumnNumber" : 4,
        "endLineNumber" : 211,
        "endColumnNumber" : 36
      },
      "nodeContext" : "markAsUnhandled(program,relocationAddress,type,symbolIndex,symbolName,elfRelocationContext.getLog())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 210,
        "startColumnNumber" : 4,
        "endLineNumber" : 211,
        "endColumnNumber" : 37
      },
      "nodeContext" : "markAsUnhandled(program,relocationAddress,type,symbolIndex,symbolName,elfRelocationContext.getLog());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1948,
        "startLineNumber" : 156,
        "startColumnNumber" : 3,
        "endLineNumber" : 213,
        "endColumnNumber" : 4
      },
      "nodeContext" : "switch (type) {\ncase R_PIC30_16:case R_PIC30_FILE_REG_WORD:  newValue=(symbolValue + addend + oldShortValue);\nmemory.setShort(relocationAddress,(short)newValue);\nbreak;\ncase R_PIC30_32:newValue=symbolValue + addend + oldValue;\nmemory.setInt(relocationAddress,newValue);\nbreak;\ncase R_PIC30_FILE_REG_BYTE:case R_PIC30_FILE_REG:int reloc=symbolValue;\nreloc+=addend;\nreloc+=oldShortValue;\nreloc&=0x1fff;\nnewValue=reloc | (oldShortValue & ~0x1fff);\nmemory.setShort(relocationAddress,(short)newValue);\nbreak;\ncase R_PIC30_FILE_REG_WORD_WITH_DST:reloc=symbolValue >> 1;\nreloc+=addend;\nreloc+=oldValue >> 4;\nreloc&=0x7fff;\nnewValue=(reloc << 4) | (oldValue & ~0x7fff0);\nmemory.setInt(relocationAddress,newValue);\nbreak;\ncase R_PIC30_WORD:case R_PIC30_WORD_TBLOFFSET:reloc=symbolValue;\nreloc+=addend;\nreloc+=oldValue >> 4;\nreloc&=0xffff;\nnewValue=(reloc << 4) | (oldValue & ~0x0ffff0);\nmemory.setInt(relocationAddress,newValue);\nbreak;\ncase R_PIC30_WORD_TBLPAGE:reloc=symbolValue >> 16;\nreloc+=addend;\nreloc+=oldValue >> 4;\nreloc&=0xffff;\nif (isEDSVariant(elfRelocationContext)) {\nreloc|=0x100;\n}\nnewValue=(reloc << 4) | (oldValue & ~0x0ffff0);\nmemory.setInt(relocationAddress,newValue);\nbreak;\ncase R_PIC30_PCREL_BRANCH:newValue=(int)(symbolValue - relocWordOffset + oldShortValue - 2);\nnewValue>>>=1;\nmemory.setShort(relocationAddress,(short)(newValue & 0xffff));\nbreak;\ndefault:String symbolName=sym.getNameAsString();\nmarkAsUnhandled(program,relocationAddress,type,symbolIndex,symbolName,elfRelocationContext.getLog());\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 266,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1959,
        "startLineNumber" : 155,
        "startColumnNumber" : 51,
        "endLineNumber" : 214,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\nswitch (type) {\ncase R_PIC30_16:case R_PIC30_FILE_REG_WORD:    newValue=(symbolValue + addend + oldShortValue);\n  memory.setShort(relocationAddress,(short)newValue);\nbreak;\ncase R_PIC30_32:newValue=symbolValue + addend + oldValue;\nmemory.setInt(relocationAddress,newValue);\nbreak;\ncase R_PIC30_FILE_REG_BYTE:case R_PIC30_FILE_REG:int reloc=symbolValue;\nreloc+=addend;\nreloc+=oldShortValue;\nreloc&=0x1fff;\nnewValue=reloc | (oldShortValue & ~0x1fff);\nmemory.setShort(relocationAddress,(short)newValue);\nbreak;\ncase R_PIC30_FILE_REG_WORD_WITH_DST:reloc=symbolValue >> 1;\nreloc+=addend;\nreloc+=oldValue >> 4;\nreloc&=0x7fff;\nnewValue=(reloc << 4) | (oldValue & ~0x7fff0);\nmemory.setInt(relocationAddress,newValue);\nbreak;\ncase R_PIC30_WORD:case R_PIC30_WORD_TBLOFFSET:reloc=symbolValue;\nreloc+=addend;\nreloc+=oldValue >> 4;\nreloc&=0xffff;\nnewValue=(reloc << 4) | (oldValue & ~0x0ffff0);\nmemory.setInt(relocationAddress,newValue);\nbreak;\ncase R_PIC30_WORD_TBLPAGE:reloc=symbolValue >> 16;\nreloc+=addend;\nreloc+=oldValue >> 4;\nreloc&=0xffff;\nif (isEDSVariant(elfRelocationContext)) {\nreloc|=0x100;\n}\nnewValue=(reloc << 4) | (oldValue & ~0x0ffff0);\nmemory.setInt(relocationAddress,newValue);\nbreak;\ncase R_PIC30_PCREL_BRANCH:newValue=(int)(symbolValue - relocWordOffset + oldShortValue - 2);\nnewValue>>>=1;\nmemory.setShort(relocationAddress,(short)(newValue & 0xffff));\nbreak;\ndefault:String symbolName=sym.getNameAsString();\nmarkAsUnhandled(program,relocationAddress,type,symbolIndex,symbolName,elfRelocationContext.getLog());\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 267,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2008,
        "startLineNumber" : 155,
        "startColumnNumber" : 2,
        "endLineNumber" : 214,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (elf.e_machine() == ElfConstants.EM_DSPIC30F) {\nswitch (type) {\ncase R_PIC30_16:case R_PIC30_FILE_REG_WORD:    newValue=(symbolValue + addend + oldShortValue);\n  memory.setShort(relocationAddress,(short)newValue);\nbreak;\ncase R_PIC30_32:newValue=symbolValue + addend + oldValue;\nmemory.setInt(relocationAddress,newValue);\nbreak;\ncase R_PIC30_FILE_REG_BYTE:case R_PIC30_FILE_REG:int reloc=symbolValue;\nreloc+=addend;\nreloc+=oldShortValue;\nreloc&=0x1fff;\nnewValue=reloc | (oldShortValue & ~0x1fff);\nmemory.setShort(relocationAddress,(short)newValue);\nbreak;\ncase R_PIC30_FILE_REG_WORD_WITH_DST:reloc=symbolValue >> 1;\nreloc+=addend;\nreloc+=oldValue >> 4;\nreloc&=0x7fff;\nnewValue=(reloc << 4) | (oldValue & ~0x7fff0);\nmemory.setInt(relocationAddress,newValue);\nbreak;\ncase R_PIC30_WORD:case R_PIC30_WORD_TBLOFFSET:reloc=symbolValue;\nreloc+=addend;\nreloc+=oldValue >> 4;\nreloc&=0xffff;\nnewValue=(reloc << 4) | (oldValue & ~0x0ffff0);\nmemory.setInt(relocationAddress,newValue);\nbreak;\ncase R_PIC30_WORD_TBLPAGE:reloc=symbolValue >> 16;\nreloc+=addend;\nreloc+=oldValue >> 4;\nreloc&=0xffff;\nif (isEDSVariant(elfRelocationContext)) {\nreloc|=0x100;\n}\nnewValue=(reloc << 4) | (oldValue & ~0x0ffff0);\nmemory.setInt(relocationAddress,newValue);\nbreak;\ncase R_PIC30_PCREL_BRANCH:newValue=(int)(symbolValue - relocWordOffset + oldShortValue - 2);\nnewValue>>>=1;\nmemory.setShort(relocationAddress,(short)(newValue & 0xffff));\nbreak;\ndefault:String symbolName=sym.getNameAsString();\nmarkAsUnhandled(program,relocationAddress,type,symbolIndex,symbolName,elfRelocationContext.getLog());\nbreak;\n}\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 275,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2776,
        "startLineNumber" : 126,
        "startColumnNumber" : 51,
        "endLineNumber" : 215,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int type=relocation.getType();\n  if (type == R_PIC30_NONE) {\n    return;\n  }\n  Program program=elfRelocationContext.getProgram();\n  Memory memory=program.getMemory();\n  int symbolIndex=relocation.getSymbolIndex();\n  int addend=(int)relocation.getAddend();\n  if (symbolIndex == 0) {\n    return;\n  }\n  long relocWordOffset=(int)relocationAddress.getAddressableWordOffset();\n  ElfSymbol sym=elfRelocationContext.getSymbol(symbolIndex);\n  int symbolValue=(int)elfRelocationContext.getSymbolValue(sym);\n  int oldValue=memory.getInt(relocationAddress);\n  short oldShortValue=memory.getShort(relocationAddress);\n  int newValue;\n  ElfHeader elf=elfRelocationContext.getElfHeader();\n  if (elf.e_machine() == ElfConstants.EM_DSPIC30F) {\nswitch (type) {\ncase R_PIC30_16:case R_PIC30_FILE_REG_WORD:      newValue=(symbolValue + addend + oldShortValue);\n    memory.setShort(relocationAddress,(short)newValue);\n  break;\ncase R_PIC30_32:newValue=symbolValue + addend + oldValue;\nmemory.setInt(relocationAddress,newValue);\nbreak;\ncase R_PIC30_FILE_REG_BYTE:case R_PIC30_FILE_REG:int reloc=symbolValue;\nreloc+=addend;\nreloc+=oldShortValue;\nreloc&=0x1fff;\nnewValue=reloc | (oldShortValue & ~0x1fff);\nmemory.setShort(relocationAddress,(short)newValue);\nbreak;\ncase R_PIC30_FILE_REG_WORD_WITH_DST:reloc=symbolValue >> 1;\nreloc+=addend;\nreloc+=oldValue >> 4;\nreloc&=0x7fff;\nnewValue=(reloc << 4) | (oldValue & ~0x7fff0);\nmemory.setInt(relocationAddress,newValue);\nbreak;\ncase R_PIC30_WORD:case R_PIC30_WORD_TBLOFFSET:reloc=symbolValue;\nreloc+=addend;\nreloc+=oldValue >> 4;\nreloc&=0xffff;\nnewValue=(reloc << 4) | (oldValue & ~0x0ffff0);\nmemory.setInt(relocationAddress,newValue);\nbreak;\ncase R_PIC30_WORD_TBLPAGE:reloc=symbolValue >> 16;\nreloc+=addend;\nreloc+=oldValue >> 4;\nreloc&=0xffff;\nif (isEDSVariant(elfRelocationContext)) {\nreloc|=0x100;\n}\nnewValue=(reloc << 4) | (oldValue & ~0x0ffff0);\nmemory.setInt(relocationAddress,newValue);\nbreak;\ncase R_PIC30_PCREL_BRANCH:newValue=(int)(symbolValue - relocWordOffset + oldShortValue - 2);\nnewValue>>>=1;\nmemory.setShort(relocationAddress,(short)(newValue & 0xffff));\nbreak;\ndefault:String symbolName=sym.getNameAsString();\nmarkAsUnhandled(program,relocationAddress,type,symbolIndex,symbolName,elfRelocationContext.getLog());\nbreak;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 383,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2957,
        "startLineNumber" : 124,
        "startColumnNumber" : 1,
        "endLineNumber" : 215,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void relocate(ElfRelocationContext elfRelocationContext,ElfRelocation relocation,Address relocationAddress) throws MemoryAccessException, NotFoundException {\n  int type=relocation.getType();\n  if (type == R_PIC30_NONE) {\n    return;\n  }\n  Program program=elfRelocationContext.getProgram();\n  Memory memory=program.getMemory();\n  int symbolIndex=relocation.getSymbolIndex();\n  int addend=(int)relocation.getAddend();\n  if (symbolIndex == 0) {\n    return;\n  }\n  long relocWordOffset=(int)relocationAddress.getAddressableWordOffset();\n  ElfSymbol sym=elfRelocationContext.getSymbol(symbolIndex);\n  int symbolValue=(int)elfRelocationContext.getSymbolValue(sym);\n  int oldValue=memory.getInt(relocationAddress);\n  short oldShortValue=memory.getShort(relocationAddress);\n  int newValue;\n  ElfHeader elf=elfRelocationContext.getElfHeader();\n  if (elf.e_machine() == ElfConstants.EM_DSPIC30F) {\nswitch (type) {\ncase R_PIC30_16:case R_PIC30_FILE_REG_WORD:      newValue=(symbolValue + addend + oldShortValue);\n    memory.setShort(relocationAddress,(short)newValue);\n  break;\ncase R_PIC30_32:newValue=symbolValue + addend + oldValue;\nmemory.setInt(relocationAddress,newValue);\nbreak;\ncase R_PIC30_FILE_REG_BYTE:case R_PIC30_FILE_REG:int reloc=symbolValue;\nreloc+=addend;\nreloc+=oldShortValue;\nreloc&=0x1fff;\nnewValue=reloc | (oldShortValue & ~0x1fff);\nmemory.setShort(relocationAddress,(short)newValue);\nbreak;\ncase R_PIC30_FILE_REG_WORD_WITH_DST:reloc=symbolValue >> 1;\nreloc+=addend;\nreloc+=oldValue >> 4;\nreloc&=0x7fff;\nnewValue=(reloc << 4) | (oldValue & ~0x7fff0);\nmemory.setInt(relocationAddress,newValue);\nbreak;\ncase R_PIC30_WORD:case R_PIC30_WORD_TBLOFFSET:reloc=symbolValue;\nreloc+=addend;\nreloc+=oldValue >> 4;\nreloc&=0xffff;\nnewValue=(reloc << 4) | (oldValue & ~0x0ffff0);\nmemory.setInt(relocationAddress,newValue);\nbreak;\ncase R_PIC30_WORD_TBLPAGE:reloc=symbolValue >> 16;\nreloc+=addend;\nreloc+=oldValue >> 4;\nreloc&=0xffff;\nif (isEDSVariant(elfRelocationContext)) {\nreloc|=0x100;\n}\nnewValue=(reloc << 4) | (oldValue & ~0x0ffff0);\nmemory.setInt(relocationAddress,newValue);\nbreak;\ncase R_PIC30_PCREL_BRANCH:newValue=(int)(symbolValue - relocWordOffset + oldShortValue - 2);\nnewValue>>>=1;\nmemory.setShort(relocationAddress,(short)(newValue & 0xffff));\nbreak;\ndefault:String symbolName=sym.getNameAsString();\nmarkAsUnhandled(program,relocationAddress,type,symbolIndex,symbolName,elfRelocationContext.getLog());\nbreak;\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 405,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 210,
        "startColumnNumber" : 4,
        "endLineNumber" : 211,
        "endColumnNumber" : 36
      },
      "nodeContext" : "markAsUnhandled(program,relocationAddress,type,symbolIndex,symbolName,elfRelocationContext.getLog())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "ghidra.program.model.listing.Program"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 134,
    "startColumnNumber" : 18,
    "endLineNumber" : 134,
    "endColumnNumber" : 25
  }, {
    "charLength" : 7,
    "startLineNumber" : 210,
    "startColumnNumber" : 20,
    "endLineNumber" : 210,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}