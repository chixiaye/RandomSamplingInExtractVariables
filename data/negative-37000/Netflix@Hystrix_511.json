{
  "id" : 511,
  "expression" : "testSubscriber1",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-core/src/test/java/com/netflix/hystrix/HystrixObservableCollapserTest.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "testSubscriber1",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 178,
      "startColumnNumber" : 39,
      "endLineNumber" : 178,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 178,
        "startColumnNumber" : 8,
        "endLineNumber" : 178,
        "endColumnNumber" : 55
      },
      "nodeContext" : "collapser1.observe().subscribe(testSubscriber1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 178,
        "startColumnNumber" : 8,
        "endLineNumber" : 178,
        "endColumnNumber" : 56
      },
      "nodeContext" : "collapser1.observe().subscribe(testSubscriber1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1463,
        "startLineNumber" : 168,
        "startColumnNumber" : 75,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CollapserTimer timer=new RealCollapserTimer();\n  HystrixObservableCollapser<String,String,String,String> collapser1=new TestCollapserWithMultipleResponses(timer,1,3,false,false,prefixMapper,onMissingComplete);\n  HystrixObservableCollapser<String,String,String,String> collapser2=new TestCollapserWithMultipleResponses(timer,2,3,false,false,prefixMapper,onMissingComplete);\n  TestSubscriber<String> testSubscriber1=new TestSubscriber<String>();\n  TestSubscriber<String> testSubscriber2=new TestSubscriber<String>();\n  System.out.println(System.currentTimeMillis() + \"Starting to observe collapser1\");\n  collapser1.observe().subscribe(testSubscriber1);\n  collapser2.observe().subscribe(testSubscriber2);\n  System.out.println(System.currentTimeMillis() + \"Done with collapser observe()s\");\n  testSubscriber1.awaitTerminalEvent();\n  testSubscriber2.awaitTerminalEvent();\n  testSubscriber1.assertCompleted();\n  testSubscriber1.assertNoErrors();\n  testSubscriber1.assertValues(\"1:1\",\"1:2\",\"1:3\");\n  testSubscriber2.assertCompleted();\n  testSubscriber2.assertNoErrors();\n  testSubscriber2.assertValues(\"2:2\",\"2:4\",\"2:6\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 159,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1544,
        "startLineNumber" : 167,
        "startColumnNumber" : 4,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testTwoRequestsWhichShouldEachEmitTwice() throws Exception {\n  CollapserTimer timer=new RealCollapserTimer();\n  HystrixObservableCollapser<String,String,String,String> collapser1=new TestCollapserWithMultipleResponses(timer,1,3,false,false,prefixMapper,onMissingComplete);\n  HystrixObservableCollapser<String,String,String,String> collapser2=new TestCollapserWithMultipleResponses(timer,2,3,false,false,prefixMapper,onMissingComplete);\n  TestSubscriber<String> testSubscriber1=new TestSubscriber<String>();\n  TestSubscriber<String> testSubscriber2=new TestSubscriber<String>();\n  System.out.println(System.currentTimeMillis() + \"Starting to observe collapser1\");\n  collapser1.observe().subscribe(testSubscriber1);\n  collapser2.observe().subscribe(testSubscriber2);\n  System.out.println(System.currentTimeMillis() + \"Done with collapser observe()s\");\n  testSubscriber1.awaitTerminalEvent();\n  testSubscriber2.awaitTerminalEvent();\n  testSubscriber1.assertCompleted();\n  testSubscriber1.assertNoErrors();\n  testSubscriber1.assertValues(\"1:1\",\"1:2\",\"1:3\");\n  testSubscriber2.assertCompleted();\n  testSubscriber2.assertNoErrors();\n  testSubscriber2.assertValues(\"2:2\",\"2:4\",\"2:6\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 167,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 178,
        "startColumnNumber" : 8,
        "endLineNumber" : 178,
        "endColumnNumber" : 56
      },
      "nodeContext" : "collapser1.observe().subscribe(testSubscriber1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.TestSubscriber<java.lang.String>"
  }, {
    "nodeContext" : "testSubscriber1",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 183,
      "startColumnNumber" : 8,
      "endLineNumber" : 183,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 183,
        "startColumnNumber" : 8,
        "endLineNumber" : 183,
        "endColumnNumber" : 44
      },
      "nodeContext" : "testSubscriber1.awaitTerminalEvent()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 183,
        "startColumnNumber" : 8,
        "endLineNumber" : 183,
        "endColumnNumber" : 45
      },
      "nodeContext" : "testSubscriber1.awaitTerminalEvent();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1463,
        "startLineNumber" : 168,
        "startColumnNumber" : 75,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CollapserTimer timer=new RealCollapserTimer();\n  HystrixObservableCollapser<String,String,String,String> collapser1=new TestCollapserWithMultipleResponses(timer,1,3,false,false,prefixMapper,onMissingComplete);\n  HystrixObservableCollapser<String,String,String,String> collapser2=new TestCollapserWithMultipleResponses(timer,2,3,false,false,prefixMapper,onMissingComplete);\n  TestSubscriber<String> testSubscriber1=new TestSubscriber<String>();\n  TestSubscriber<String> testSubscriber2=new TestSubscriber<String>();\n  System.out.println(System.currentTimeMillis() + \"Starting to observe collapser1\");\n  collapser1.observe().subscribe(testSubscriber1);\n  collapser2.observe().subscribe(testSubscriber2);\n  System.out.println(System.currentTimeMillis() + \"Done with collapser observe()s\");\n  testSubscriber1.awaitTerminalEvent();\n  testSubscriber2.awaitTerminalEvent();\n  testSubscriber1.assertCompleted();\n  testSubscriber1.assertNoErrors();\n  testSubscriber1.assertValues(\"1:1\",\"1:2\",\"1:3\");\n  testSubscriber2.assertCompleted();\n  testSubscriber2.assertNoErrors();\n  testSubscriber2.assertValues(\"2:2\",\"2:4\",\"2:6\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 159,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1544,
        "startLineNumber" : 167,
        "startColumnNumber" : 4,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testTwoRequestsWhichShouldEachEmitTwice() throws Exception {\n  CollapserTimer timer=new RealCollapserTimer();\n  HystrixObservableCollapser<String,String,String,String> collapser1=new TestCollapserWithMultipleResponses(timer,1,3,false,false,prefixMapper,onMissingComplete);\n  HystrixObservableCollapser<String,String,String,String> collapser2=new TestCollapserWithMultipleResponses(timer,2,3,false,false,prefixMapper,onMissingComplete);\n  TestSubscriber<String> testSubscriber1=new TestSubscriber<String>();\n  TestSubscriber<String> testSubscriber2=new TestSubscriber<String>();\n  System.out.println(System.currentTimeMillis() + \"Starting to observe collapser1\");\n  collapser1.observe().subscribe(testSubscriber1);\n  collapser2.observe().subscribe(testSubscriber2);\n  System.out.println(System.currentTimeMillis() + \"Done with collapser observe()s\");\n  testSubscriber1.awaitTerminalEvent();\n  testSubscriber2.awaitTerminalEvent();\n  testSubscriber1.assertCompleted();\n  testSubscriber1.assertNoErrors();\n  testSubscriber1.assertValues(\"1:1\",\"1:2\",\"1:3\");\n  testSubscriber2.assertCompleted();\n  testSubscriber2.assertNoErrors();\n  testSubscriber2.assertValues(\"2:2\",\"2:4\",\"2:6\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 167,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 183,
        "startColumnNumber" : 8,
        "endLineNumber" : 183,
        "endColumnNumber" : 45
      },
      "nodeContext" : "testSubscriber1.awaitTerminalEvent();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.TestSubscriber<java.lang.String>"
  }, {
    "nodeContext" : "testSubscriber1",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 186,
      "startColumnNumber" : 8,
      "endLineNumber" : 186,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 186,
        "endColumnNumber" : 41
      },
      "nodeContext" : "testSubscriber1.assertCompleted()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 186,
        "endColumnNumber" : 42
      },
      "nodeContext" : "testSubscriber1.assertCompleted();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1463,
        "startLineNumber" : 168,
        "startColumnNumber" : 75,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CollapserTimer timer=new RealCollapserTimer();\n  HystrixObservableCollapser<String,String,String,String> collapser1=new TestCollapserWithMultipleResponses(timer,1,3,false,false,prefixMapper,onMissingComplete);\n  HystrixObservableCollapser<String,String,String,String> collapser2=new TestCollapserWithMultipleResponses(timer,2,3,false,false,prefixMapper,onMissingComplete);\n  TestSubscriber<String> testSubscriber1=new TestSubscriber<String>();\n  TestSubscriber<String> testSubscriber2=new TestSubscriber<String>();\n  System.out.println(System.currentTimeMillis() + \"Starting to observe collapser1\");\n  collapser1.observe().subscribe(testSubscriber1);\n  collapser2.observe().subscribe(testSubscriber2);\n  System.out.println(System.currentTimeMillis() + \"Done with collapser observe()s\");\n  testSubscriber1.awaitTerminalEvent();\n  testSubscriber2.awaitTerminalEvent();\n  testSubscriber1.assertCompleted();\n  testSubscriber1.assertNoErrors();\n  testSubscriber1.assertValues(\"1:1\",\"1:2\",\"1:3\");\n  testSubscriber2.assertCompleted();\n  testSubscriber2.assertNoErrors();\n  testSubscriber2.assertValues(\"2:2\",\"2:4\",\"2:6\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 159,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1544,
        "startLineNumber" : 167,
        "startColumnNumber" : 4,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testTwoRequestsWhichShouldEachEmitTwice() throws Exception {\n  CollapserTimer timer=new RealCollapserTimer();\n  HystrixObservableCollapser<String,String,String,String> collapser1=new TestCollapserWithMultipleResponses(timer,1,3,false,false,prefixMapper,onMissingComplete);\n  HystrixObservableCollapser<String,String,String,String> collapser2=new TestCollapserWithMultipleResponses(timer,2,3,false,false,prefixMapper,onMissingComplete);\n  TestSubscriber<String> testSubscriber1=new TestSubscriber<String>();\n  TestSubscriber<String> testSubscriber2=new TestSubscriber<String>();\n  System.out.println(System.currentTimeMillis() + \"Starting to observe collapser1\");\n  collapser1.observe().subscribe(testSubscriber1);\n  collapser2.observe().subscribe(testSubscriber2);\n  System.out.println(System.currentTimeMillis() + \"Done with collapser observe()s\");\n  testSubscriber1.awaitTerminalEvent();\n  testSubscriber2.awaitTerminalEvent();\n  testSubscriber1.assertCompleted();\n  testSubscriber1.assertNoErrors();\n  testSubscriber1.assertValues(\"1:1\",\"1:2\",\"1:3\");\n  testSubscriber2.assertCompleted();\n  testSubscriber2.assertNoErrors();\n  testSubscriber2.assertValues(\"2:2\",\"2:4\",\"2:6\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 167,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 186,
        "endColumnNumber" : 42
      },
      "nodeContext" : "testSubscriber1.assertCompleted();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.TestSubscriber<java.lang.String>"
  }, {
    "nodeContext" : "testSubscriber1",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 187,
      "startColumnNumber" : 8,
      "endLineNumber" : 187,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 187,
        "startColumnNumber" : 8,
        "endLineNumber" : 187,
        "endColumnNumber" : 40
      },
      "nodeContext" : "testSubscriber1.assertNoErrors()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 187,
        "startColumnNumber" : 8,
        "endLineNumber" : 187,
        "endColumnNumber" : 41
      },
      "nodeContext" : "testSubscriber1.assertNoErrors();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1463,
        "startLineNumber" : 168,
        "startColumnNumber" : 75,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CollapserTimer timer=new RealCollapserTimer();\n  HystrixObservableCollapser<String,String,String,String> collapser1=new TestCollapserWithMultipleResponses(timer,1,3,false,false,prefixMapper,onMissingComplete);\n  HystrixObservableCollapser<String,String,String,String> collapser2=new TestCollapserWithMultipleResponses(timer,2,3,false,false,prefixMapper,onMissingComplete);\n  TestSubscriber<String> testSubscriber1=new TestSubscriber<String>();\n  TestSubscriber<String> testSubscriber2=new TestSubscriber<String>();\n  System.out.println(System.currentTimeMillis() + \"Starting to observe collapser1\");\n  collapser1.observe().subscribe(testSubscriber1);\n  collapser2.observe().subscribe(testSubscriber2);\n  System.out.println(System.currentTimeMillis() + \"Done with collapser observe()s\");\n  testSubscriber1.awaitTerminalEvent();\n  testSubscriber2.awaitTerminalEvent();\n  testSubscriber1.assertCompleted();\n  testSubscriber1.assertNoErrors();\n  testSubscriber1.assertValues(\"1:1\",\"1:2\",\"1:3\");\n  testSubscriber2.assertCompleted();\n  testSubscriber2.assertNoErrors();\n  testSubscriber2.assertValues(\"2:2\",\"2:4\",\"2:6\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 159,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1544,
        "startLineNumber" : 167,
        "startColumnNumber" : 4,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testTwoRequestsWhichShouldEachEmitTwice() throws Exception {\n  CollapserTimer timer=new RealCollapserTimer();\n  HystrixObservableCollapser<String,String,String,String> collapser1=new TestCollapserWithMultipleResponses(timer,1,3,false,false,prefixMapper,onMissingComplete);\n  HystrixObservableCollapser<String,String,String,String> collapser2=new TestCollapserWithMultipleResponses(timer,2,3,false,false,prefixMapper,onMissingComplete);\n  TestSubscriber<String> testSubscriber1=new TestSubscriber<String>();\n  TestSubscriber<String> testSubscriber2=new TestSubscriber<String>();\n  System.out.println(System.currentTimeMillis() + \"Starting to observe collapser1\");\n  collapser1.observe().subscribe(testSubscriber1);\n  collapser2.observe().subscribe(testSubscriber2);\n  System.out.println(System.currentTimeMillis() + \"Done with collapser observe()s\");\n  testSubscriber1.awaitTerminalEvent();\n  testSubscriber2.awaitTerminalEvent();\n  testSubscriber1.assertCompleted();\n  testSubscriber1.assertNoErrors();\n  testSubscriber1.assertValues(\"1:1\",\"1:2\",\"1:3\");\n  testSubscriber2.assertCompleted();\n  testSubscriber2.assertNoErrors();\n  testSubscriber2.assertValues(\"2:2\",\"2:4\",\"2:6\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 167,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 187,
        "startColumnNumber" : 8,
        "endLineNumber" : 187,
        "endColumnNumber" : 41
      },
      "nodeContext" : "testSubscriber1.assertNoErrors();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.TestSubscriber<java.lang.String>"
  }, {
    "nodeContext" : "testSubscriber1",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 188,
      "startColumnNumber" : 8,
      "endLineNumber" : 188,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 188,
        "startColumnNumber" : 8,
        "endLineNumber" : 188,
        "endColumnNumber" : 57
      },
      "nodeContext" : "testSubscriber1.assertValues(\"1:1\",\"1:2\",\"1:3\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 188,
        "startColumnNumber" : 8,
        "endLineNumber" : 188,
        "endColumnNumber" : 58
      },
      "nodeContext" : "testSubscriber1.assertValues(\"1:1\",\"1:2\",\"1:3\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1463,
        "startLineNumber" : 168,
        "startColumnNumber" : 75,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CollapserTimer timer=new RealCollapserTimer();\n  HystrixObservableCollapser<String,String,String,String> collapser1=new TestCollapserWithMultipleResponses(timer,1,3,false,false,prefixMapper,onMissingComplete);\n  HystrixObservableCollapser<String,String,String,String> collapser2=new TestCollapserWithMultipleResponses(timer,2,3,false,false,prefixMapper,onMissingComplete);\n  TestSubscriber<String> testSubscriber1=new TestSubscriber<String>();\n  TestSubscriber<String> testSubscriber2=new TestSubscriber<String>();\n  System.out.println(System.currentTimeMillis() + \"Starting to observe collapser1\");\n  collapser1.observe().subscribe(testSubscriber1);\n  collapser2.observe().subscribe(testSubscriber2);\n  System.out.println(System.currentTimeMillis() + \"Done with collapser observe()s\");\n  testSubscriber1.awaitTerminalEvent();\n  testSubscriber2.awaitTerminalEvent();\n  testSubscriber1.assertCompleted();\n  testSubscriber1.assertNoErrors();\n  testSubscriber1.assertValues(\"1:1\",\"1:2\",\"1:3\");\n  testSubscriber2.assertCompleted();\n  testSubscriber2.assertNoErrors();\n  testSubscriber2.assertValues(\"2:2\",\"2:4\",\"2:6\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 159,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1544,
        "startLineNumber" : 167,
        "startColumnNumber" : 4,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testTwoRequestsWhichShouldEachEmitTwice() throws Exception {\n  CollapserTimer timer=new RealCollapserTimer();\n  HystrixObservableCollapser<String,String,String,String> collapser1=new TestCollapserWithMultipleResponses(timer,1,3,false,false,prefixMapper,onMissingComplete);\n  HystrixObservableCollapser<String,String,String,String> collapser2=new TestCollapserWithMultipleResponses(timer,2,3,false,false,prefixMapper,onMissingComplete);\n  TestSubscriber<String> testSubscriber1=new TestSubscriber<String>();\n  TestSubscriber<String> testSubscriber2=new TestSubscriber<String>();\n  System.out.println(System.currentTimeMillis() + \"Starting to observe collapser1\");\n  collapser1.observe().subscribe(testSubscriber1);\n  collapser2.observe().subscribe(testSubscriber2);\n  System.out.println(System.currentTimeMillis() + \"Done with collapser observe()s\");\n  testSubscriber1.awaitTerminalEvent();\n  testSubscriber2.awaitTerminalEvent();\n  testSubscriber1.assertCompleted();\n  testSubscriber1.assertNoErrors();\n  testSubscriber1.assertValues(\"1:1\",\"1:2\",\"1:3\");\n  testSubscriber2.assertCompleted();\n  testSubscriber2.assertNoErrors();\n  testSubscriber2.assertValues(\"2:2\",\"2:4\",\"2:6\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 167,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 188,
        "startColumnNumber" : 8,
        "endLineNumber" : 188,
        "endColumnNumber" : 58
      },
      "nodeContext" : "testSubscriber1.assertValues(\"1:1\",\"1:2\",\"1:3\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.TestSubscriber<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 178,
    "startColumnNumber" : 39,
    "endLineNumber" : 178,
    "endColumnNumber" : 54
  }, {
    "charLength" : 15,
    "startLineNumber" : 183,
    "startColumnNumber" : 8,
    "endLineNumber" : 183,
    "endColumnNumber" : 23
  }, {
    "charLength" : 15,
    "startLineNumber" : 186,
    "startColumnNumber" : 8,
    "endLineNumber" : 186,
    "endColumnNumber" : 23
  }, {
    "charLength" : 15,
    "startLineNumber" : 187,
    "startColumnNumber" : 8,
    "endLineNumber" : 187,
    "endColumnNumber" : 23
  }, {
    "charLength" : 15,
    "startLineNumber" : 188,
    "startColumnNumber" : 8,
    "endLineNumber" : 188,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  } ]
}