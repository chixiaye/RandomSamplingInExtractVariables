{
  "id" : 208,
  "expression" : "decoder.decode(utf8BytesIn,utf16CodeUnitsOut,endOfInput)",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/runtime/Java/src/org/antlr/v4/runtime/CharStreams.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "decoder.decode(utf8BytesIn,utf16CodeUnitsOut,endOfInput)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 77,
      "startLineNumber" : 278,
      "startColumnNumber" : 25,
      "endLineNumber" : 281,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 6,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 278,
        "startColumnNumber" : 16,
        "endLineNumber" : 281,
        "endColumnNumber" : 16
      },
      "nodeContext" : "result=decoder.decode(utf8BytesIn,utf16CodeUnitsOut,endOfInput)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 278,
        "startColumnNumber" : 4,
        "endLineNumber" : 281,
        "endColumnNumber" : 17
      },
      "nodeContext" : "CoderResult result=decoder.decode(utf8BytesIn,utf16CodeUnitsOut,endOfInput);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 493,
        "startLineNumber" : 274,
        "startColumnNumber" : 23,
        "endLineNumber" : 289,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  int bytesRead=channel.read(utf8BytesIn);\n  endOfInput=(bytesRead == -1);\n  utf8BytesIn.flip();\n  CoderResult result=decoder.decode(utf8BytesIn,utf16CodeUnitsOut,endOfInput);\n  if (result.isError() && decodingErrorAction.equals(CodingErrorAction.REPORT)) {\n    result.throwException();\n  }\n  utf16CodeUnitsOut.flip();\n  codePointBufferBuilder.append(utf16CodeUnitsOut);\n  utf8BytesIn.compact();\n  utf16CodeUnitsOut.compact();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 513,
        "startLineNumber" : 274,
        "startColumnNumber" : 3,
        "endLineNumber" : 289,
        "endColumnNumber" : 4
      },
      "nodeContext" : "while (!endOfInput) {\n  int bytesRead=channel.read(utf8BytesIn);\n  endOfInput=(bytesRead == -1);\n  utf8BytesIn.flip();\n  CoderResult result=decoder.decode(utf8BytesIn,utf16CodeUnitsOut,endOfInput);\n  if (result.isError() && decodingErrorAction.equals(CodingErrorAction.REPORT)) {\n    result.throwException();\n  }\n  utf16CodeUnitsOut.flip();\n  codePointBufferBuilder.append(utf16CodeUnitsOut);\n  utf8BytesIn.compact();\n  utf16CodeUnitsOut.compact();\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 68,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1747,
        "startLineNumber" : 258,
        "startColumnNumber" : 6,
        "endLineNumber" : 301,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ByteBuffer utf8BytesIn=ByteBuffer.allocate(bufferSize);\n  CharBuffer utf16CodeUnitsOut=CharBuffer.allocate(bufferSize);\n  if (inputSize == -1) {\n    inputSize=bufferSize;\n  }\n else   if (inputSize > Integer.MAX_VALUE) {\n    throw new IOException(String.format(\"inputSize %d larger than max %d\",inputSize,Integer.MAX_VALUE));\n  }\n  CodePointBuffer.Builder codePointBufferBuilder=CodePointBuffer.builder((int)inputSize);\n  CharsetDecoder decoder=charset.newDecoder().onMalformedInput(decodingErrorAction).onUnmappableCharacter(decodingErrorAction);\n  boolean endOfInput=false;\n  while (!endOfInput) {\n    int bytesRead=channel.read(utf8BytesIn);\n    endOfInput=(bytesRead == -1);\n    utf8BytesIn.flip();\n    CoderResult result=decoder.decode(utf8BytesIn,utf16CodeUnitsOut,endOfInput);\n    if (result.isError() && decodingErrorAction.equals(CodingErrorAction.REPORT)) {\n      result.throwException();\n    }\n    utf16CodeUnitsOut.flip();\n    codePointBufferBuilder.append(utf16CodeUnitsOut);\n    utf8BytesIn.compact();\n    utf16CodeUnitsOut.compact();\n  }\n  CoderResult flushResult=decoder.flush(utf16CodeUnitsOut);\n  if (flushResult.isError() && decodingErrorAction.equals(CodingErrorAction.REPORT)) {\n    flushResult.throwException();\n  }\n  utf16CodeUnitsOut.flip();\n  codePointBufferBuilder.append(utf16CodeUnitsOut);\n  CodePointBuffer codePointBuffer=codePointBufferBuilder.build();\n  return CodePointCharStream.fromBuffer(codePointBuffer,sourceName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 196,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1790,
        "startLineNumber" : 258,
        "startColumnNumber" : 2,
        "endLineNumber" : 304,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  ByteBuffer utf8BytesIn=ByteBuffer.allocate(bufferSize);\n  CharBuffer utf16CodeUnitsOut=CharBuffer.allocate(bufferSize);\n  if (inputSize == -1) {\n    inputSize=bufferSize;\n  }\n else   if (inputSize > Integer.MAX_VALUE) {\n    throw new IOException(String.format(\"inputSize %d larger than max %d\",inputSize,Integer.MAX_VALUE));\n  }\n  CodePointBuffer.Builder codePointBufferBuilder=CodePointBuffer.builder((int)inputSize);\n  CharsetDecoder decoder=charset.newDecoder().onMalformedInput(decodingErrorAction).onUnmappableCharacter(decodingErrorAction);\n  boolean endOfInput=false;\n  while (!endOfInput) {\n    int bytesRead=channel.read(utf8BytesIn);\n    endOfInput=(bytesRead == -1);\n    utf8BytesIn.flip();\n    CoderResult result=decoder.decode(utf8BytesIn,utf16CodeUnitsOut,endOfInput);\n    if (result.isError() && decodingErrorAction.equals(CodingErrorAction.REPORT)) {\n      result.throwException();\n    }\n    utf16CodeUnitsOut.flip();\n    codePointBufferBuilder.append(utf16CodeUnitsOut);\n    utf8BytesIn.compact();\n    utf16CodeUnitsOut.compact();\n  }\n  CoderResult flushResult=decoder.flush(utf16CodeUnitsOut);\n  if (flushResult.isError() && decodingErrorAction.equals(CodingErrorAction.REPORT)) {\n    flushResult.throwException();\n  }\n  utf16CodeUnitsOut.flip();\n  codePointBufferBuilder.append(utf16CodeUnitsOut);\n  CodePointBuffer codePointBuffer=codePointBufferBuilder.build();\n  return CodePointCharStream.fromBuffer(codePointBuffer,sourceName);\n}\n  finally {\n  channel.close();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 202,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1799,
        "startLineNumber" : 257,
        "startColumnNumber" : 1,
        "endLineNumber" : 305,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  try {\n    ByteBuffer utf8BytesIn=ByteBuffer.allocate(bufferSize);\n    CharBuffer utf16CodeUnitsOut=CharBuffer.allocate(bufferSize);\n    if (inputSize == -1) {\n      inputSize=bufferSize;\n    }\n else     if (inputSize > Integer.MAX_VALUE) {\n      throw new IOException(String.format(\"inputSize %d larger than max %d\",inputSize,Integer.MAX_VALUE));\n    }\n    CodePointBuffer.Builder codePointBufferBuilder=CodePointBuffer.builder((int)inputSize);\n    CharsetDecoder decoder=charset.newDecoder().onMalformedInput(decodingErrorAction).onUnmappableCharacter(decodingErrorAction);\n    boolean endOfInput=false;\n    while (!endOfInput) {\n      int bytesRead=channel.read(utf8BytesIn);\n      endOfInput=(bytesRead == -1);\n      utf8BytesIn.flip();\n      CoderResult result=decoder.decode(utf8BytesIn,utf16CodeUnitsOut,endOfInput);\n      if (result.isError() && decodingErrorAction.equals(CodingErrorAction.REPORT)) {\n        result.throwException();\n      }\n      utf16CodeUnitsOut.flip();\n      codePointBufferBuilder.append(utf16CodeUnitsOut);\n      utf8BytesIn.compact();\n      utf16CodeUnitsOut.compact();\n    }\n    CoderResult flushResult=decoder.flush(utf16CodeUnitsOut);\n    if (flushResult.isError() && decodingErrorAction.equals(CodingErrorAction.REPORT)) {\n      flushResult.throwException();\n    }\n    utf16CodeUnitsOut.flip();\n    codePointBufferBuilder.append(utf16CodeUnitsOut);\n    CodePointBuffer codePointBuffer=codePointBufferBuilder.build();\n    return CodePointCharStream.fromBuffer(codePointBuffer,sourceName);\n  }\n  finally {\n    channel.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 203,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2024,
        "startLineNumber" : 249,
        "startColumnNumber" : 1,
        "endLineNumber" : 305,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public static CodePointCharStream fromChannel(ReadableByteChannel channel,Charset charset,int bufferSize,CodingErrorAction decodingErrorAction,String sourceName,long inputSize) throws IOException {\n  try {\n    ByteBuffer utf8BytesIn=ByteBuffer.allocate(bufferSize);\n    CharBuffer utf16CodeUnitsOut=CharBuffer.allocate(bufferSize);\n    if (inputSize == -1) {\n      inputSize=bufferSize;\n    }\n else     if (inputSize > Integer.MAX_VALUE) {\n      throw new IOException(String.format(\"inputSize %d larger than max %d\",inputSize,Integer.MAX_VALUE));\n    }\n    CodePointBuffer.Builder codePointBufferBuilder=CodePointBuffer.builder((int)inputSize);\n    CharsetDecoder decoder=charset.newDecoder().onMalformedInput(decodingErrorAction).onUnmappableCharacter(decodingErrorAction);\n    boolean endOfInput=false;\n    while (!endOfInput) {\n      int bytesRead=channel.read(utf8BytesIn);\n      endOfInput=(bytesRead == -1);\n      utf8BytesIn.flip();\n      CoderResult result=decoder.decode(utf8BytesIn,utf16CodeUnitsOut,endOfInput);\n      if (result.isError() && decodingErrorAction.equals(CodingErrorAction.REPORT)) {\n        result.throwException();\n      }\n      utf16CodeUnitsOut.flip();\n      codePointBufferBuilder.append(utf16CodeUnitsOut);\n      utf8BytesIn.compact();\n      utf16CodeUnitsOut.compact();\n    }\n    CoderResult flushResult=decoder.flush(utf16CodeUnitsOut);\n    if (flushResult.isError() && decodingErrorAction.equals(CodingErrorAction.REPORT)) {\n      flushResult.throwException();\n    }\n    utf16CodeUnitsOut.flip();\n    codePointBufferBuilder.append(utf16CodeUnitsOut);\n    CodePointBuffer codePointBuffer=codePointBufferBuilder.build();\n    return CodePointCharStream.fromBuffer(codePointBuffer,sourceName);\n  }\n  finally {\n    channel.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 233,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 278,
        "startColumnNumber" : 4,
        "endLineNumber" : 281,
        "endColumnNumber" : 17
      },
      "nodeContext" : "CoderResult result=decoder.decode(utf8BytesIn,utf16CodeUnitsOut,endOfInput);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.nio.charset.CoderResult"
  } ],
  "positionList" : [ {
    "charLength" : 77,
    "startLineNumber" : 278,
    "startColumnNumber" : 25,
    "endLineNumber" : 281,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ ]
}