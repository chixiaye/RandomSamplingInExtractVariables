{
  "id" : 277,
  "expression" : "new DefaultPasswordProvider(\"secretKeySample\")",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/extensions-core/s3-extensions/src/test/java/org/apache/druid/storage/s3/TestAWSCredentialsProvider.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new DefaultPasswordProvider(\"secretKeySample\")",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 46,
      "startLineNumber" : 56,
      "startColumnNumber" : 53,
      "endLineNumber" : 56,
      "endColumnNumber" : 99
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 100
      },
      "nodeContext" : "EasyMock.expect(config.getSecretKey()).andReturn(new DefaultPasswordProvider(\"secretKeySample\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 114
      },
      "nodeContext" : "EasyMock.expect(config.getSecretKey()).andReturn(new DefaultPasswordProvider(\"secretKeySample\")).atLeastOnce()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 115
      },
      "nodeContext" : "EasyMock.expect(config.getSecretKey()).andReturn(new DefaultPasswordProvider(\"secretKeySample\")).atLeastOnce();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1030,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 76,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  AWSCredentialsConfig config=EasyMock.createMock(AWSCredentialsConfig.class);\n  EasyMock.expect(config.getAccessKey()).andReturn(new DefaultPasswordProvider(\"accessKeySample\")).atLeastOnce();\n  EasyMock.expect(config.getSecretKey()).andReturn(new DefaultPasswordProvider(\"secretKeySample\")).atLeastOnce();\n  EasyMock.replay(config);\n  AWSCredentialsProvider provider=awsModule.getAWSCredentialsProvider(config);\n  AWSCredentials credentials=provider.getCredentials();\n  Assert.assertEquals(\"accessKeySample\",credentials.getAWSAccessKeyId());\n  Assert.assertEquals(\"secretKeySample\",credentials.getAWSSecretKey());\n  ServerSideEncryptingAmazonS3.Builder amazonS3ClientBuilder=s3Module.getServerSideEncryptingAmazonS3Builder(provider,new AWSProxyConfig(),new AWSEndpointConfig(),new AWSClientConfig(),new S3StorageConfig(new NoopServerSideEncryption()));\n  s3Module.getAmazonS3Client(amazonS3ClientBuilder);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1075,
        "startLineNumber" : 51,
        "startColumnNumber" : 2,
        "endLineNumber" : 76,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testWithFixedAWSKeys(){\n  AWSCredentialsConfig config=EasyMock.createMock(AWSCredentialsConfig.class);\n  EasyMock.expect(config.getAccessKey()).andReturn(new DefaultPasswordProvider(\"accessKeySample\")).atLeastOnce();\n  EasyMock.expect(config.getSecretKey()).andReturn(new DefaultPasswordProvider(\"secretKeySample\")).atLeastOnce();\n  EasyMock.replay(config);\n  AWSCredentialsProvider provider=awsModule.getAWSCredentialsProvider(config);\n  AWSCredentials credentials=provider.getCredentials();\n  Assert.assertEquals(\"accessKeySample\",credentials.getAWSAccessKeyId());\n  Assert.assertEquals(\"secretKeySample\",credentials.getAWSSecretKey());\n  ServerSideEncryptingAmazonS3.Builder amazonS3ClientBuilder=s3Module.getServerSideEncryptingAmazonS3Builder(provider,new AWSProxyConfig(),new AWSEndpointConfig(),new AWSClientConfig(),new S3StorageConfig(new NoopServerSideEncryption()));\n  s3Module.getAmazonS3Client(amazonS3ClientBuilder);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 117,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 115
      },
      "nodeContext" : "EasyMock.expect(config.getSecretKey()).andReturn(new DefaultPasswordProvider(\"secretKeySample\")).atLeastOnce();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "org.apache.druid.metadata.DefaultPasswordProvider"
  } ],
  "positionList" : [ {
    "charLength" : 46,
    "startLineNumber" : 56,
    "startColumnNumber" : 53,
    "endLineNumber" : 56,
    "endColumnNumber" : 99
  } ],
  "layoutRelationDataList" : [ ]
}