{
  "id" : 169,
  "expression" : "vo1.getCalendar().get(Calendar.YEAR)",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/test/java/com/alibaba/json/bvt/bug/Bug_for_cnhans.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "vo1.getCalendar().get(Calendar.YEAR)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 41,
      "startColumnNumber" : 65,
      "endLineNumber" : 41,
      "endColumnNumber" : 101
    },
    "astNodeNumber" : 8,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 102
      },
      "nodeContext" : "Assert.assertEquals(vo.getCalendar().get(Calendar.YEAR),vo1.getCalendar().get(Calendar.YEAR))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 103
      },
      "nodeContext" : "Assert.assertEquals(vo.getCalendar().get(Calendar.YEAR),vo1.getCalendar().get(Calendar.YEAR));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 950,
        "startLineNumber" : 33,
        "startColumnNumber" : 47,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  VO vo=new VO();\n  vo.setCalendar(Calendar.getInstance(JSON.defaultTimeZone,JSON.defaultLocale));\n  String text=JSON.toJSONString(vo,SerializerFeature.WriteDateUseDateFormat);\n  VO vo1=JSON.parseObject(text,VO.class);\n  Assert.assertEquals(vo.getCalendar().get(Calendar.YEAR),vo1.getCalendar().get(Calendar.YEAR));\n  Assert.assertEquals(vo.getCalendar().get(Calendar.MONTH),vo1.getCalendar().get(Calendar.MONTH));\n  Assert.assertEquals(vo.getCalendar().get(Calendar.DAY_OF_MONTH),vo1.getCalendar().get(Calendar.DAY_OF_MONTH));\n  Assert.assertEquals(vo.getCalendar().get(Calendar.HOUR_OF_DAY),vo1.getCalendar().get(Calendar.HOUR_OF_DAY));\n  Assert.assertEquals(vo.getCalendar().get(Calendar.MINUTE),vo1.getCalendar().get(Calendar.MINUTE));\n  Assert.assertEquals(vo.getCalendar().get(Calendar.SECOND),vo1.getCalendar().get(Calendar.SECOND));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 993,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_format() throws Exception {\n  VO vo=new VO();\n  vo.setCalendar(Calendar.getInstance(JSON.defaultTimeZone,JSON.defaultLocale));\n  String text=JSON.toJSONString(vo,SerializerFeature.WriteDateUseDateFormat);\n  VO vo1=JSON.parseObject(text,VO.class);\n  Assert.assertEquals(vo.getCalendar().get(Calendar.YEAR),vo1.getCalendar().get(Calendar.YEAR));\n  Assert.assertEquals(vo.getCalendar().get(Calendar.MONTH),vo1.getCalendar().get(Calendar.MONTH));\n  Assert.assertEquals(vo.getCalendar().get(Calendar.DAY_OF_MONTH),vo1.getCalendar().get(Calendar.DAY_OF_MONTH));\n  Assert.assertEquals(vo.getCalendar().get(Calendar.HOUR_OF_DAY),vo1.getCalendar().get(Calendar.HOUR_OF_DAY));\n  Assert.assertEquals(vo.getCalendar().get(Calendar.MINUTE),vo1.getCalendar().get(Calendar.MINUTE));\n  Assert.assertEquals(vo.getCalendar().get(Calendar.SECOND),vo1.getCalendar().get(Calendar.SECOND));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 172,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 103
      },
      "nodeContext" : "Assert.assertEquals(vo.getCalendar().get(Calendar.YEAR),vo1.getCalendar().get(Calendar.YEAR));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 41,
    "startColumnNumber" : 65,
    "endLineNumber" : 41,
    "endColumnNumber" : 101
  } ],
  "layoutRelationDataList" : [ ]
}