{
  "id" : 113,
  "expression" : "oppositeControlPointOnElement[0]",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/image-editor/lib/src/main/java/org/signal/imageeditor/core/ThumbDragEditSession.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "oppositeControlPointOnElement[0]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 60,
      "startColumnNumber" : 14,
      "endLineNumber" : 60,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 60,
        "startColumnNumber" : 10,
        "endLineNumber" : 60,
        "endColumnNumber" : 46
      },
      "nodeContext" : "x=oppositeControlPointOnElement[0]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 47
      },
      "nodeContext" : "float x=oppositeControlPointOnElement[0];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2268,
        "startLineNumber" : 46,
        "startColumnNumber" : 54,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  setScreenEndPoint(p,point);\n  Matrix editorMatrix=selected.getEditorMatrix();\n  editorMatrix.reset();\n  oppositeControlPointOnControlParent[0]=controlPoint.opposite().getX();\n  oppositeControlPointOnControlParent[1]=controlPoint.opposite().getY();\n  thumbContainerRelativeMatrix.mapPoints(oppositeControlPointOnElement,oppositeControlPointOnControlParent);\n  float x=oppositeControlPointOnElement[0];\n  float y=oppositeControlPointOnElement[1];\n  oppositeControlPoint.set(x,y);\n  float dx=endPointElement[0].x - startPointElement[0].x;\n  float dy=endPointElement[0].y - startPointElement[0].y;\n  float xEnd=controlPoint.getX() + dx;\n  float yEnd=controlPoint.getY() + dy;\n  if (controlPoint.isScaleAndRotateThumb()) {\n    float scale=findScale(oppositeControlPoint,startPointElement[0],endPointElement[0]);\n    editorMatrix.postTranslate(-oppositeControlPoint.x,-oppositeControlPoint.y);\n    editorMatrix.postScale(scale,scale);\n    double angle=angle(endPointElement[0],oppositeControlPoint) - angle(startPointElement[0],oppositeControlPoint);\n    rotate(editorMatrix,angle);\n    editorMatrix.postTranslate(oppositeControlPoint.x,oppositeControlPoint.y);\n  }\n else {\n    boolean aspectLocked=selected.getFlags().isAspectLocked() && !controlPoint.isCenter();\n    float defaultScale=aspectLocked ? 2 : 1;\n    float scaleX=controlPoint.isVerticalCenter() ? defaultScale : (xEnd - x) / (controlPoint.getX() - x);\n    float scaleY=controlPoint.isHorizontalCenter() ? defaultScale : (yEnd - y) / (controlPoint.getY() - y);\n    scale(editorMatrix,aspectLocked,scaleX,scaleY,controlPoint.opposite());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 253,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2332,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void movePoint(int p,@NonNull PointF point){\n  setScreenEndPoint(p,point);\n  Matrix editorMatrix=selected.getEditorMatrix();\n  editorMatrix.reset();\n  oppositeControlPointOnControlParent[0]=controlPoint.opposite().getX();\n  oppositeControlPointOnControlParent[1]=controlPoint.opposite().getY();\n  thumbContainerRelativeMatrix.mapPoints(oppositeControlPointOnElement,oppositeControlPointOnControlParent);\n  float x=oppositeControlPointOnElement[0];\n  float y=oppositeControlPointOnElement[1];\n  oppositeControlPoint.set(x,y);\n  float dx=endPointElement[0].x - startPointElement[0].x;\n  float dy=endPointElement[0].y - startPointElement[0].y;\n  float xEnd=controlPoint.getX() + dx;\n  float yEnd=controlPoint.getY() + dy;\n  if (controlPoint.isScaleAndRotateThumb()) {\n    float scale=findScale(oppositeControlPoint,startPointElement[0],endPointElement[0]);\n    editorMatrix.postTranslate(-oppositeControlPoint.x,-oppositeControlPoint.y);\n    editorMatrix.postScale(scale,scale);\n    double angle=angle(endPointElement[0],oppositeControlPoint) - angle(startPointElement[0],oppositeControlPoint);\n    rotate(editorMatrix,angle);\n    editorMatrix.postTranslate(oppositeControlPoint.x,oppositeControlPoint.y);\n  }\n else {\n    boolean aspectLocked=selected.getFlags().isAspectLocked() && !controlPoint.isCenter();\n    float defaultScale=aspectLocked ? 2 : 1;\n    float scaleX=controlPoint.isVerticalCenter() ? defaultScale : (xEnd - x) / (controlPoint.getX() - x);\n    float scaleY=controlPoint.isHorizontalCenter() ? defaultScale : (yEnd - y) / (controlPoint.getY() - y);\n    scale(editorMatrix,aspectLocked,scaleX,scaleY,controlPoint.opposite());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 268,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 47
      },
      "nodeContext" : "float x=oppositeControlPointOnElement[0];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 60,
    "startColumnNumber" : 14,
    "endLineNumber" : 60,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}