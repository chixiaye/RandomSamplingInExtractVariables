{
  "id" : 62,
  "expression" : "BackoffPolicy",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-connectors/flink-connector-elasticsearch6/src/main/java/org/apache/flink/connector/elasticsearch/sink/Elasticsearch6SinkBuilder.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "BackoffPolicy",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 112,
      "startColumnNumber" : 40,
      "endLineNumber" : 112,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 112,
        "startColumnNumber" : 40,
        "endLineNumber" : 112,
        "endColumnNumber" : 98
      },
      "nodeContext" : "BackoffPolicy.constantBackoff(backoffDelay,maxRetryCount)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 112,
        "startColumnNumber" : 24,
        "endLineNumber" : 112,
        "endColumnNumber" : 98
      },
      "nodeContext" : "backoffPolicy=BackoffPolicy.constantBackoff(backoffDelay,maxRetryCount)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 112,
        "startColumnNumber" : 24,
        "endLineNumber" : 112,
        "endColumnNumber" : 99
      },
      "nodeContext" : "backoffPolicy=BackoffPolicy.constantBackoff(backoffDelay,maxRetryCount);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 816,
        "startLineNumber" : 110,
        "startColumnNumber" : 16,
        "endLineNumber" : 125,
        "endColumnNumber" : 17
      },
      "nodeContext" : "switch (bulkProcessorConfig.getFlushBackoffType()) {\ncase CONSTANT:  backoffPolicy=BackoffPolicy.constantBackoff(backoffDelay,maxRetryCount);\nbreak;\ncase EXPONENTIAL:backoffPolicy=BackoffPolicy.exponentialBackoff(backoffDelay,maxRetryCount);\nbreak;\ncase NONE:backoffPolicy=BackoffPolicy.noBackoff();\nbreak;\ndefault:throw new IllegalArgumentException(\"Received unknown backoff policy type \" + bulkProcessorConfig.getFlushBackoffType());\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 45,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2744,
        "startLineNumber" : 74,
        "startColumnNumber" : 53,
        "endLineNumber" : 128,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  BulkProcessor.Builder builder=BulkProcessor.builder(new BulkRequestConsumerFactory(){\n    @Override public void accept(    BulkRequest bulkRequest,    ActionListener<BulkResponse> bulkResponseActionListener){\n      client.bulkAsync(bulkRequest,bulkResponseActionListener);\n    }\n  }\n,listener);\n  if (bulkProcessorConfig.getBulkFlushMaxActions() != -1) {\n    builder.setBulkActions(bulkProcessorConfig.getBulkFlushMaxActions());\n  }\n  if (bulkProcessorConfig.getBulkFlushMaxMb() != -1) {\n    builder.setBulkSize(new ByteSizeValue(bulkProcessorConfig.getBulkFlushMaxMb(),ByteSizeUnit.MB));\n  }\n  if (bulkProcessorConfig.getBulkFlushInterval() != -1) {\n    builder.setFlushInterval(new TimeValue(bulkProcessorConfig.getBulkFlushInterval()));\n  }\n  BackoffPolicy backoffPolicy;\n  final TimeValue backoffDelay=new TimeValue(bulkProcessorConfig.getBulkFlushBackOffDelay());\n  final int maxRetryCount=bulkProcessorConfig.getBulkFlushBackoffRetries();\nswitch (bulkProcessorConfig.getFlushBackoffType()) {\ncase CONSTANT:    backoffPolicy=BackoffPolicy.constantBackoff(backoffDelay,maxRetryCount);\n  break;\ncase EXPONENTIAL:backoffPolicy=BackoffPolicy.exponentialBackoff(backoffDelay,maxRetryCount);\nbreak;\ncase NONE:backoffPolicy=BackoffPolicy.noBackoff();\nbreak;\ndefault:throw new IllegalArgumentException(\"Received unknown backoff policy type \" + bulkProcessorConfig.getFlushBackoffType());\n}\nbuilder.setBackoffPolicy(backoffPolicy);\nreturn builder;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2964,
        "startLineNumber" : 70,
        "startColumnNumber" : 12,
        "endLineNumber" : 128,
        "endColumnNumber" : 13
      },
      "nodeContext" : "@Override public BulkProcessor.Builder apply(RestHighLevelClient client,BulkProcessorConfig bulkProcessorConfig,BulkProcessor.Listener listener){\n  BulkProcessor.Builder builder=BulkProcessor.builder(new BulkRequestConsumerFactory(){\n    @Override public void accept(    BulkRequest bulkRequest,    ActionListener<BulkResponse> bulkResponseActionListener){\n      client.bulkAsync(bulkRequest,bulkResponseActionListener);\n    }\n  }\n,listener);\n  if (bulkProcessorConfig.getBulkFlushMaxActions() != -1) {\n    builder.setBulkActions(bulkProcessorConfig.getBulkFlushMaxActions());\n  }\n  if (bulkProcessorConfig.getBulkFlushMaxMb() != -1) {\n    builder.setBulkSize(new ByteSizeValue(bulkProcessorConfig.getBulkFlushMaxMb(),ByteSizeUnit.MB));\n  }\n  if (bulkProcessorConfig.getBulkFlushInterval() != -1) {\n    builder.setFlushInterval(new TimeValue(bulkProcessorConfig.getBulkFlushInterval()));\n  }\n  BackoffPolicy backoffPolicy;\n  final TimeValue backoffDelay=new TimeValue(bulkProcessorConfig.getBulkFlushBackOffDelay());\n  final int maxRetryCount=bulkProcessorConfig.getBulkFlushBackoffRetries();\nswitch (bulkProcessorConfig.getFlushBackoffType()) {\ncase CONSTANT:    backoffPolicy=BackoffPolicy.constantBackoff(backoffDelay,maxRetryCount);\n  break;\ncase EXPONENTIAL:backoffPolicy=BackoffPolicy.exponentialBackoff(backoffDelay,maxRetryCount);\nbreak;\ncase NONE:backoffPolicy=BackoffPolicy.noBackoff();\nbreak;\ndefault:throw new IllegalArgumentException(\"Received unknown backoff policy type \" + bulkProcessorConfig.getFlushBackoffType());\n}\nbuilder.setBackoffPolicy(backoffPolicy);\nreturn builder;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 194,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 112,
        "startColumnNumber" : 24,
        "endLineNumber" : 112,
        "endColumnNumber" : 99
      },
      "nodeContext" : "backoffPolicy=BackoffPolicy.constantBackoff(backoffDelay,maxRetryCount);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "BackoffPolicy",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 116,
      "startColumnNumber" : 32,
      "endLineNumber" : 116,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 116,
        "startColumnNumber" : 32,
        "endLineNumber" : 116,
        "endColumnNumber" : 93
      },
      "nodeContext" : "BackoffPolicy.exponentialBackoff(backoffDelay,maxRetryCount)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 115,
        "startColumnNumber" : 24,
        "endLineNumber" : 116,
        "endColumnNumber" : 93
      },
      "nodeContext" : "backoffPolicy=BackoffPolicy.exponentialBackoff(backoffDelay,maxRetryCount)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 115,
        "startColumnNumber" : 24,
        "endLineNumber" : 116,
        "endColumnNumber" : 94
      },
      "nodeContext" : "backoffPolicy=BackoffPolicy.exponentialBackoff(backoffDelay,maxRetryCount);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 816,
        "startLineNumber" : 110,
        "startColumnNumber" : 16,
        "endLineNumber" : 125,
        "endColumnNumber" : 17
      },
      "nodeContext" : "switch (bulkProcessorConfig.getFlushBackoffType()) {\ncase CONSTANT:  backoffPolicy=BackoffPolicy.constantBackoff(backoffDelay,maxRetryCount);\nbreak;\ncase EXPONENTIAL:backoffPolicy=BackoffPolicy.exponentialBackoff(backoffDelay,maxRetryCount);\nbreak;\ncase NONE:backoffPolicy=BackoffPolicy.noBackoff();\nbreak;\ndefault:throw new IllegalArgumentException(\"Received unknown backoff policy type \" + bulkProcessorConfig.getFlushBackoffType());\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 45,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2744,
        "startLineNumber" : 74,
        "startColumnNumber" : 53,
        "endLineNumber" : 128,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  BulkProcessor.Builder builder=BulkProcessor.builder(new BulkRequestConsumerFactory(){\n    @Override public void accept(    BulkRequest bulkRequest,    ActionListener<BulkResponse> bulkResponseActionListener){\n      client.bulkAsync(bulkRequest,bulkResponseActionListener);\n    }\n  }\n,listener);\n  if (bulkProcessorConfig.getBulkFlushMaxActions() != -1) {\n    builder.setBulkActions(bulkProcessorConfig.getBulkFlushMaxActions());\n  }\n  if (bulkProcessorConfig.getBulkFlushMaxMb() != -1) {\n    builder.setBulkSize(new ByteSizeValue(bulkProcessorConfig.getBulkFlushMaxMb(),ByteSizeUnit.MB));\n  }\n  if (bulkProcessorConfig.getBulkFlushInterval() != -1) {\n    builder.setFlushInterval(new TimeValue(bulkProcessorConfig.getBulkFlushInterval()));\n  }\n  BackoffPolicy backoffPolicy;\n  final TimeValue backoffDelay=new TimeValue(bulkProcessorConfig.getBulkFlushBackOffDelay());\n  final int maxRetryCount=bulkProcessorConfig.getBulkFlushBackoffRetries();\nswitch (bulkProcessorConfig.getFlushBackoffType()) {\ncase CONSTANT:    backoffPolicy=BackoffPolicy.constantBackoff(backoffDelay,maxRetryCount);\n  break;\ncase EXPONENTIAL:backoffPolicy=BackoffPolicy.exponentialBackoff(backoffDelay,maxRetryCount);\nbreak;\ncase NONE:backoffPolicy=BackoffPolicy.noBackoff();\nbreak;\ndefault:throw new IllegalArgumentException(\"Received unknown backoff policy type \" + bulkProcessorConfig.getFlushBackoffType());\n}\nbuilder.setBackoffPolicy(backoffPolicy);\nreturn builder;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2964,
        "startLineNumber" : 70,
        "startColumnNumber" : 12,
        "endLineNumber" : 128,
        "endColumnNumber" : 13
      },
      "nodeContext" : "@Override public BulkProcessor.Builder apply(RestHighLevelClient client,BulkProcessorConfig bulkProcessorConfig,BulkProcessor.Listener listener){\n  BulkProcessor.Builder builder=BulkProcessor.builder(new BulkRequestConsumerFactory(){\n    @Override public void accept(    BulkRequest bulkRequest,    ActionListener<BulkResponse> bulkResponseActionListener){\n      client.bulkAsync(bulkRequest,bulkResponseActionListener);\n    }\n  }\n,listener);\n  if (bulkProcessorConfig.getBulkFlushMaxActions() != -1) {\n    builder.setBulkActions(bulkProcessorConfig.getBulkFlushMaxActions());\n  }\n  if (bulkProcessorConfig.getBulkFlushMaxMb() != -1) {\n    builder.setBulkSize(new ByteSizeValue(bulkProcessorConfig.getBulkFlushMaxMb(),ByteSizeUnit.MB));\n  }\n  if (bulkProcessorConfig.getBulkFlushInterval() != -1) {\n    builder.setFlushInterval(new TimeValue(bulkProcessorConfig.getBulkFlushInterval()));\n  }\n  BackoffPolicy backoffPolicy;\n  final TimeValue backoffDelay=new TimeValue(bulkProcessorConfig.getBulkFlushBackOffDelay());\n  final int maxRetryCount=bulkProcessorConfig.getBulkFlushBackoffRetries();\nswitch (bulkProcessorConfig.getFlushBackoffType()) {\ncase CONSTANT:    backoffPolicy=BackoffPolicy.constantBackoff(backoffDelay,maxRetryCount);\n  break;\ncase EXPONENTIAL:backoffPolicy=BackoffPolicy.exponentialBackoff(backoffDelay,maxRetryCount);\nbreak;\ncase NONE:backoffPolicy=BackoffPolicy.noBackoff();\nbreak;\ndefault:throw new IllegalArgumentException(\"Received unknown backoff policy type \" + bulkProcessorConfig.getFlushBackoffType());\n}\nbuilder.setBackoffPolicy(backoffPolicy);\nreturn builder;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 194,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 116,
        "startColumnNumber" : 32,
        "endLineNumber" : 116,
        "endColumnNumber" : 93
      },
      "nodeContext" : "BackoffPolicy.exponentialBackoff(backoffDelay,maxRetryCount)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "BackoffPolicy",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 119,
      "startColumnNumber" : 40,
      "endLineNumber" : 119,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 119,
        "startColumnNumber" : 40,
        "endLineNumber" : 119,
        "endColumnNumber" : 65
      },
      "nodeContext" : "BackoffPolicy.noBackoff()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 119,
        "startColumnNumber" : 24,
        "endLineNumber" : 119,
        "endColumnNumber" : 65
      },
      "nodeContext" : "backoffPolicy=BackoffPolicy.noBackoff()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 119,
        "startColumnNumber" : 24,
        "endLineNumber" : 119,
        "endColumnNumber" : 66
      },
      "nodeContext" : "backoffPolicy=BackoffPolicy.noBackoff();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 816,
        "startLineNumber" : 110,
        "startColumnNumber" : 16,
        "endLineNumber" : 125,
        "endColumnNumber" : 17
      },
      "nodeContext" : "switch (bulkProcessorConfig.getFlushBackoffType()) {\ncase CONSTANT:  backoffPolicy=BackoffPolicy.constantBackoff(backoffDelay,maxRetryCount);\nbreak;\ncase EXPONENTIAL:backoffPolicy=BackoffPolicy.exponentialBackoff(backoffDelay,maxRetryCount);\nbreak;\ncase NONE:backoffPolicy=BackoffPolicy.noBackoff();\nbreak;\ndefault:throw new IllegalArgumentException(\"Received unknown backoff policy type \" + bulkProcessorConfig.getFlushBackoffType());\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 45,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2744,
        "startLineNumber" : 74,
        "startColumnNumber" : 53,
        "endLineNumber" : 128,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  BulkProcessor.Builder builder=BulkProcessor.builder(new BulkRequestConsumerFactory(){\n    @Override public void accept(    BulkRequest bulkRequest,    ActionListener<BulkResponse> bulkResponseActionListener){\n      client.bulkAsync(bulkRequest,bulkResponseActionListener);\n    }\n  }\n,listener);\n  if (bulkProcessorConfig.getBulkFlushMaxActions() != -1) {\n    builder.setBulkActions(bulkProcessorConfig.getBulkFlushMaxActions());\n  }\n  if (bulkProcessorConfig.getBulkFlushMaxMb() != -1) {\n    builder.setBulkSize(new ByteSizeValue(bulkProcessorConfig.getBulkFlushMaxMb(),ByteSizeUnit.MB));\n  }\n  if (bulkProcessorConfig.getBulkFlushInterval() != -1) {\n    builder.setFlushInterval(new TimeValue(bulkProcessorConfig.getBulkFlushInterval()));\n  }\n  BackoffPolicy backoffPolicy;\n  final TimeValue backoffDelay=new TimeValue(bulkProcessorConfig.getBulkFlushBackOffDelay());\n  final int maxRetryCount=bulkProcessorConfig.getBulkFlushBackoffRetries();\nswitch (bulkProcessorConfig.getFlushBackoffType()) {\ncase CONSTANT:    backoffPolicy=BackoffPolicy.constantBackoff(backoffDelay,maxRetryCount);\n  break;\ncase EXPONENTIAL:backoffPolicy=BackoffPolicy.exponentialBackoff(backoffDelay,maxRetryCount);\nbreak;\ncase NONE:backoffPolicy=BackoffPolicy.noBackoff();\nbreak;\ndefault:throw new IllegalArgumentException(\"Received unknown backoff policy type \" + bulkProcessorConfig.getFlushBackoffType());\n}\nbuilder.setBackoffPolicy(backoffPolicy);\nreturn builder;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2964,
        "startLineNumber" : 70,
        "startColumnNumber" : 12,
        "endLineNumber" : 128,
        "endColumnNumber" : 13
      },
      "nodeContext" : "@Override public BulkProcessor.Builder apply(RestHighLevelClient client,BulkProcessorConfig bulkProcessorConfig,BulkProcessor.Listener listener){\n  BulkProcessor.Builder builder=BulkProcessor.builder(new BulkRequestConsumerFactory(){\n    @Override public void accept(    BulkRequest bulkRequest,    ActionListener<BulkResponse> bulkResponseActionListener){\n      client.bulkAsync(bulkRequest,bulkResponseActionListener);\n    }\n  }\n,listener);\n  if (bulkProcessorConfig.getBulkFlushMaxActions() != -1) {\n    builder.setBulkActions(bulkProcessorConfig.getBulkFlushMaxActions());\n  }\n  if (bulkProcessorConfig.getBulkFlushMaxMb() != -1) {\n    builder.setBulkSize(new ByteSizeValue(bulkProcessorConfig.getBulkFlushMaxMb(),ByteSizeUnit.MB));\n  }\n  if (bulkProcessorConfig.getBulkFlushInterval() != -1) {\n    builder.setFlushInterval(new TimeValue(bulkProcessorConfig.getBulkFlushInterval()));\n  }\n  BackoffPolicy backoffPolicy;\n  final TimeValue backoffDelay=new TimeValue(bulkProcessorConfig.getBulkFlushBackOffDelay());\n  final int maxRetryCount=bulkProcessorConfig.getBulkFlushBackoffRetries();\nswitch (bulkProcessorConfig.getFlushBackoffType()) {\ncase CONSTANT:    backoffPolicy=BackoffPolicy.constantBackoff(backoffDelay,maxRetryCount);\n  break;\ncase EXPONENTIAL:backoffPolicy=BackoffPolicy.exponentialBackoff(backoffDelay,maxRetryCount);\nbreak;\ncase NONE:backoffPolicy=BackoffPolicy.noBackoff();\nbreak;\ndefault:throw new IllegalArgumentException(\"Received unknown backoff policy type \" + bulkProcessorConfig.getFlushBackoffType());\n}\nbuilder.setBackoffPolicy(backoffPolicy);\nreturn builder;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 194,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 119,
        "startColumnNumber" : 24,
        "endLineNumber" : 119,
        "endColumnNumber" : 66
      },
      "nodeContext" : "backoffPolicy=BackoffPolicy.noBackoff();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 112,
    "startColumnNumber" : 40,
    "endLineNumber" : 112,
    "endColumnNumber" : 53
  }, {
    "charLength" : 13,
    "startLineNumber" : 116,
    "startColumnNumber" : 32,
    "endLineNumber" : 116,
    "endColumnNumber" : 45
  }, {
    "charLength" : 13,
    "startLineNumber" : 119,
    "startColumnNumber" : 40,
    "endLineNumber" : 119,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}