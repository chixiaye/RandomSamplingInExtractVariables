{
  "id" : 43,
  "expression" : "c",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/Others/PasswordGen.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "c",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 32,
      "startColumnNumber" : 24,
      "endLineNumber" : 32,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 32,
        "startColumnNumber" : 12,
        "endLineNumber" : 32,
        "endColumnNumber" : 26
      },
      "nodeContext" : "letters.add(c)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 32,
        "startColumnNumber" : 12,
        "endLineNumber" : 32,
        "endColumnNumber" : 27
      },
      "nodeContext" : "letters.add(c);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 27
      },
      "nodeContext" : "for (char c : allChars.toCharArray()) letters.add(c);\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 816,
        "startLineNumber" : 20,
        "startColumnNumber" : 66,
        "endLineNumber" : 44,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Random random=new Random();\n  String upper=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  String lower=\"abcdefghijklmnopqrstuvwxyz\";\n  String numbers=\"0123456789\";\n  String specialChars=\"!@#$%^&*(){}?\";\n  String allChars=upper + lower + numbers+ specialChars;\n  List<Character> letters=new ArrayList<Character>();\n  for (  char c : allChars.toCharArray())   letters.add(c);\n  Collections.shuffle(letters);\n  String password=\"\";\n  for (int i=random.nextInt(max_length - min_length) + min_length; i > 0; --i) {\n    password+=letters.get(random.nextInt(letters.size()));\n  }\n  return password;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 878,
        "startLineNumber" : 20,
        "startColumnNumber" : 4,
        "endLineNumber" : 44,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static String generatePassword(int min_length,int max_length){\n  Random random=new Random();\n  String upper=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  String lower=\"abcdefghijklmnopqrstuvwxyz\";\n  String numbers=\"0123456789\";\n  String specialChars=\"!@#$%^&*(){}?\";\n  String allChars=upper + lower + numbers+ specialChars;\n  List<Character> letters=new ArrayList<Character>();\n  for (  char c : allChars.toCharArray())   letters.add(c);\n  Collections.shuffle(letters);\n  String password=\"\";\n  for (int i=random.nextInt(max_length - min_length) + min_length; i > 0; --i) {\n    password+=letters.get(random.nextInt(letters.size()));\n  }\n  return password;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 32,
        "startColumnNumber" : 12,
        "endLineNumber" : 32,
        "endColumnNumber" : 27
      },
      "nodeContext" : "letters.add(c);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 32,
    "startColumnNumber" : 24,
    "endLineNumber" : 32,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ ]
}