{
  "id" : 498,
  "expression" : "s.length() - 4",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/filter/src/main/java/org/apache/rocketmq/filter/parser/TokenMgrError.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "s.length() - 4",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 102,
      "startColumnNumber" : 58,
      "endLineNumber" : 102,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 102,
        "startColumnNumber" : 46,
        "endLineNumber" : 102,
        "endColumnNumber" : 85
      },
      "nodeContext" : "s.substring(s.length() - 4,s.length())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 102,
        "startColumnNumber" : 38,
        "endLineNumber" : 102,
        "endColumnNumber" : 85
      },
      "nodeContext" : "\"\\\\u\" + s.substring(s.length() - 4,s.length())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 102,
        "startColumnNumber" : 24,
        "endLineNumber" : 102,
        "endColumnNumber" : 86
      },
      "nodeContext" : "retval.append(\"\\\\u\" + s.substring(s.length() - 4,s.length()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 102,
        "startColumnNumber" : 24,
        "endLineNumber" : 102,
        "endColumnNumber" : 87
      },
      "nodeContext" : "retval.append(\"\\\\u\" + s.substring(s.length() - 4,s.length()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 100,
        "startColumnNumber" : 66,
        "endLineNumber" : 103,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  String s=\"0000\" + Integer.toString(ch,16);\n  retval.append(\"\\\\u\" + s.substring(s.length() - 4,s.length()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 299,
        "startLineNumber" : 100,
        "startColumnNumber" : 20,
        "endLineNumber" : 105,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if ((ch=str.charAt(i)) < 0x20 || ch > 0x7e) {\n  String s=\"0000\" + Integer.toString(ch,16);\n  retval.append(\"\\\\u\" + s.substring(s.length() - 4,s.length()));\n}\n else {\n  retval.append(ch);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 50,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1262,
        "startLineNumber" : 72,
        "startColumnNumber" : 12,
        "endLineNumber" : 107,
        "endColumnNumber" : 13
      },
      "nodeContext" : "switch (str.charAt(i)) {\ncase 0:  continue;\ncase '\\b':retval.append(\"\\\\b\");\ncontinue;\ncase '\\t':retval.append(\"\\\\t\");\ncontinue;\ncase '\\n':retval.append(\"\\\\n\");\ncontinue;\ncase '\\f':retval.append(\"\\\\f\");\ncontinue;\ncase '\\r':retval.append(\"\\\\r\");\ncontinue;\ncase '\\\"':retval.append(\"\\\\\\\"\");\ncontinue;\ncase '\\'':retval.append(\"\\\\\\'\");\ncontinue;\ncase '\\\\':retval.append(\"\\\\\\\\\");\ncontinue;\ndefault:if ((ch=str.charAt(i)) < 0x20 || ch > 0x7e) {\nString s=\"0000\" + Integer.toString(ch,16);\nretval.append(\"\\\\u\" + s.substring(s.length() - 4,s.length()));\n}\n else {\nretval.append(ch);\n}\ncontinue;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 124,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1286,
        "startLineNumber" : 71,
        "startColumnNumber" : 47,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\nswitch (str.charAt(i)) {\ncase 0:    continue;\ncase '\\b':  retval.append(\"\\\\b\");\ncontinue;\ncase '\\t':retval.append(\"\\\\t\");\ncontinue;\ncase '\\n':retval.append(\"\\\\n\");\ncontinue;\ncase '\\f':retval.append(\"\\\\f\");\ncontinue;\ncase '\\r':retval.append(\"\\\\r\");\ncontinue;\ncase '\\\"':retval.append(\"\\\\\\\"\");\ncontinue;\ncase '\\'':retval.append(\"\\\\\\'\");\ncontinue;\ncase '\\\\':retval.append(\"\\\\\\\\\");\ncontinue;\ndefault:if ((ch=str.charAt(i)) < 0x20 || ch > 0x7e) {\nString s=\"0000\" + Integer.toString(ch,16);\nretval.append(\"\\\\u\" + s.substring(s.length() - 4,s.length()));\n}\n else {\nretval.append(ch);\n}\ncontinue;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1325,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < str.length(); i++) {\nswitch (str.charAt(i)) {\ncase 0:    continue;\ncase '\\b':  retval.append(\"\\\\b\");\ncontinue;\ncase '\\t':retval.append(\"\\\\t\");\ncontinue;\ncase '\\n':retval.append(\"\\\\n\");\ncontinue;\ncase '\\f':retval.append(\"\\\\f\");\ncontinue;\ncase '\\r':retval.append(\"\\\\r\");\ncontinue;\ncase '\\\"':retval.append(\"\\\\\\\"\");\ncontinue;\ncase '\\'':retval.append(\"\\\\\\'\");\ncontinue;\ncase '\\\\':retval.append(\"\\\\\\\\\");\ncontinue;\ndefault:if ((ch=str.charAt(i)) < 0x20 || ch > 0x7e) {\nString s=\"0000\" + Integer.toString(ch,16);\nretval.append(\"\\\\u\" + s.substring(s.length() - 4,s.length()));\n}\n else {\nretval.append(ch);\n}\ncontinue;\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 138,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1442,
        "startLineNumber" : 68,
        "startColumnNumber" : 57,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringBuffer retval=new StringBuffer();\n  char ch;\n  for (int i=0; i < str.length(); i++) {\nswitch (str.charAt(i)) {\ncase 0:      continue;\ncase '\\b':    retval.append(\"\\\\b\");\n  continue;\ncase '\\t':retval.append(\"\\\\t\");\ncontinue;\ncase '\\n':retval.append(\"\\\\n\");\ncontinue;\ncase '\\f':retval.append(\"\\\\f\");\ncontinue;\ncase '\\r':retval.append(\"\\\\r\");\ncontinue;\ncase '\\\"':retval.append(\"\\\\\\\"\");\ncontinue;\ncase '\\'':retval.append(\"\\\\\\'\");\ncontinue;\ncase '\\\\':retval.append(\"\\\\\\\\\");\ncontinue;\ndefault:if ((ch=str.charAt(i)) < 0x20 || ch > 0x7e) {\nString s=\"0000\" + Integer.toString(ch,16);\nretval.append(\"\\\\u\" + s.substring(s.length() - 4,s.length()));\n}\n else {\nretval.append(ch);\n}\ncontinue;\n}\n}\nreturn retval.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 155,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1627,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Replaces unprintable characters by their escaped (or unicode escaped) equivalents in the given string\n */\nprotected static final String addEscapes(String str){\n  StringBuffer retval=new StringBuffer();\n  char ch;\n  for (int i=0; i < str.length(); i++) {\nswitch (str.charAt(i)) {\ncase 0:      continue;\ncase '\\b':    retval.append(\"\\\\b\");\n  continue;\ncase '\\t':retval.append(\"\\\\t\");\ncontinue;\ncase '\\n':retval.append(\"\\\\n\");\ncontinue;\ncase '\\f':retval.append(\"\\\\f\");\ncontinue;\ncase '\\r':retval.append(\"\\\\r\");\ncontinue;\ncase '\\\"':retval.append(\"\\\\\\\"\");\ncontinue;\ncase '\\'':retval.append(\"\\\\\\'\");\ncontinue;\ncase '\\\\':retval.append(\"\\\\\\\\\");\ncontinue;\ndefault:if ((ch=str.charAt(i)) < 0x20 || ch > 0x7e) {\nString s=\"0000\" + Integer.toString(ch,16);\nretval.append(\"\\\\u\" + s.substring(s.length() - 4,s.length()));\n}\n else {\nretval.append(ch);\n}\ncontinue;\n}\n}\nreturn retval.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 167,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 102,
        "startColumnNumber" : 24,
        "endLineNumber" : 102,
        "endColumnNumber" : 87
      },
      "nodeContext" : "retval.append(\"\\\\u\" + s.substring(s.length() - 4,s.length()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    },
    "tokenLength" : 4,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 102,
    "startColumnNumber" : 58,
    "endLineNumber" : 102,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ ]
}