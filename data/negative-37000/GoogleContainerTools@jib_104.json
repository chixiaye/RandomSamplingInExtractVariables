{
  "id" : 104,
  "expression" : "mavenProjectProperties",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-maven-plugin/src/main/java/com/google/cloud/tools/jib/maven/BuildImageMojo.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mavenProjectProperties",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 82,
      "startColumnNumber" : 34,
      "endLineNumber" : 82,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 57
      },
      "nodeContext" : "PluginConfigurationProcessor.processCommonConfiguration(mavenJibLogger,this,mavenProjectProperties)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 80,
        "startColumnNumber" : 33,
        "endLineNumber" : 82,
        "endColumnNumber" : 57
      },
      "nodeContext" : "pluginConfigurationProcessor=PluginConfigurationProcessor.processCommonConfiguration(mavenJibLogger,this,mavenProjectProperties)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 58
      },
      "nodeContext" : "PluginConfigurationProcessor pluginConfigurationProcessor=PluginConfigurationProcessor.processCommonConfiguration(mavenJibLogger,this,mavenProjectProperties);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3101,
        "startLineNumber" : 50,
        "startColumnNumber" : 76,
        "endLineNumber" : 119,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (\"pom\".equals(getProject().getPackaging())) {\n    getLog().info(\"Skipping containerization because packaging is 'pom'...\");\n    return;\n  }\n  if (Arrays.stream(ImageFormat.values()).noneMatch(value -> value.name().equals(getFormat()))) {\n    throw new MojoFailureException(\"<format> parameter is configured with value '\" + getFormat() + \"', but the only valid configuration options are '\"+ ImageFormat.Docker+ \"' and '\"+ ImageFormat.OCI+ \"'.\");\n  }\n  if (Strings.isNullOrEmpty(getTargetImage())) {\n    throw new MojoFailureException(HelpfulSuggestionsProvider.get(\"Missing target image parameter\").forToNotConfigured(\"<to><image>\",\"pom.xml\",\"mvn compile jib:build -Dimage=<your image name>\"));\n  }\n  MavenJibLogger mavenJibLogger=new MavenJibLogger(getLog());\n  MavenProjectProperties mavenProjectProperties=MavenProjectProperties.getForProject(getProject(),mavenJibLogger,getExtraDirectory());\n  PluginConfigurationProcessor pluginConfigurationProcessor=PluginConfigurationProcessor.processCommonConfiguration(mavenJibLogger,this,mavenProjectProperties);\n  ImageReference targetImage=PluginConfigurationProcessor.parseImageReference(getTargetImage(),\"to\");\n  Authorization toAuthorization=ConfigurationPropertyValidator.getImageAuth(mavenJibLogger,\"jib.to.auth.username\",\"jib.to.auth.password\",getTargetImageAuth());\n  RegistryCredentials knownTargetRegistryCredentials=toAuthorization != null ? new RegistryCredentials(\"jib-maven-plugin <to><auth> configuration\",toAuthorization) : pluginConfigurationProcessor.getMavenSettingsServerCredentials().retrieve(targetImage.getRegistry());\n  ImageConfiguration targetImageConfiguration=ImageConfiguration.builder(targetImage).setCredentialHelper(getTargetImageCredentialHelperName()).setKnownRegistryCredentials(knownTargetRegistryCredentials).build();\n  BuildConfiguration buildConfiguration=pluginConfigurationProcessor.getBuildConfigurationBuilder().setBaseImageConfiguration(pluginConfigurationProcessor.getBaseImageConfigurationBuilder().build()).setTargetImageConfiguration(targetImageConfiguration).setContainerConfiguration(pluginConfigurationProcessor.getContainerConfigurationBuilder().build()).setTargetFormat(ImageFormat.valueOf(getFormat()).getManifestTemplateClass()).build();\n  try {\n    BuildStepsRunner.forBuildImage(buildConfiguration).build(HELPFUL_SUGGESTIONS);\n    getLog().info(\"\");\n  }\n catch (  CacheDirectoryCreationException|BuildStepsExecutionException ex) {\n    throw new MojoExecutionException(ex.getMessage(),ex.getCause());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 243,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3187,
        "startLineNumber" : 49,
        "startColumnNumber" : 2,
        "endLineNumber" : 119,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void execute() throws MojoExecutionException, MojoFailureException {\n  if (\"pom\".equals(getProject().getPackaging())) {\n    getLog().info(\"Skipping containerization because packaging is 'pom'...\");\n    return;\n  }\n  if (Arrays.stream(ImageFormat.values()).noneMatch(value -> value.name().equals(getFormat()))) {\n    throw new MojoFailureException(\"<format> parameter is configured with value '\" + getFormat() + \"', but the only valid configuration options are '\"+ ImageFormat.Docker+ \"' and '\"+ ImageFormat.OCI+ \"'.\");\n  }\n  if (Strings.isNullOrEmpty(getTargetImage())) {\n    throw new MojoFailureException(HelpfulSuggestionsProvider.get(\"Missing target image parameter\").forToNotConfigured(\"<to><image>\",\"pom.xml\",\"mvn compile jib:build -Dimage=<your image name>\"));\n  }\n  MavenJibLogger mavenJibLogger=new MavenJibLogger(getLog());\n  MavenProjectProperties mavenProjectProperties=MavenProjectProperties.getForProject(getProject(),mavenJibLogger,getExtraDirectory());\n  PluginConfigurationProcessor pluginConfigurationProcessor=PluginConfigurationProcessor.processCommonConfiguration(mavenJibLogger,this,mavenProjectProperties);\n  ImageReference targetImage=PluginConfigurationProcessor.parseImageReference(getTargetImage(),\"to\");\n  Authorization toAuthorization=ConfigurationPropertyValidator.getImageAuth(mavenJibLogger,\"jib.to.auth.username\",\"jib.to.auth.password\",getTargetImageAuth());\n  RegistryCredentials knownTargetRegistryCredentials=toAuthorization != null ? new RegistryCredentials(\"jib-maven-plugin <to><auth> configuration\",toAuthorization) : pluginConfigurationProcessor.getMavenSettingsServerCredentials().retrieve(targetImage.getRegistry());\n  ImageConfiguration targetImageConfiguration=ImageConfiguration.builder(targetImage).setCredentialHelper(getTargetImageCredentialHelperName()).setKnownRegistryCredentials(knownTargetRegistryCredentials).build();\n  BuildConfiguration buildConfiguration=pluginConfigurationProcessor.getBuildConfigurationBuilder().setBaseImageConfiguration(pluginConfigurationProcessor.getBaseImageConfigurationBuilder().build()).setTargetImageConfiguration(targetImageConfiguration).setContainerConfiguration(pluginConfigurationProcessor.getContainerConfigurationBuilder().build()).setTargetFormat(ImageFormat.valueOf(getFormat()).getManifestTemplateClass()).build();\n  try {\n    BuildStepsRunner.forBuildImage(buildConfiguration).build(HELPFUL_SUGGESTIONS);\n    getLog().info(\"\");\n  }\n catch (  CacheDirectoryCreationException|BuildStepsExecutionException ex) {\n    throw new MojoExecutionException(ex.getMessage(),ex.getCause());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 253,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 57
      },
      "nodeContext" : "PluginConfigurationProcessor.processCommonConfiguration(mavenJibLogger,this,mavenProjectProperties)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.google.cloud.tools.jib.maven.MavenProjectProperties"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 82,
    "startColumnNumber" : 34,
    "endLineNumber" : 82,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}