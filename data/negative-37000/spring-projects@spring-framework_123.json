{
  "id" : 123,
  "expression" : "null",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-context/src/test/java/org/springframework/scheduling/annotation/AnnotationAsyncExecutionInterceptorTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 38,
      "startColumnNumber" : 82,
      "endLineNumber" : 38,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 38,
        "startColumnNumber" : 42,
        "endLineNumber" : 38,
        "endColumnNumber" : 87
      },
      "nodeContext" : "new AnnotationAsyncExecutionInterceptor(null)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 38,
        "startColumnNumber" : 38,
        "endLineNumber" : 38,
        "endColumnNumber" : 87
      },
      "nodeContext" : "i=new AnnotationAsyncExecutionInterceptor(null)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 38,
        "startColumnNumber" : 2,
        "endLineNumber" : 38,
        "endColumnNumber" : 88
      },
      "nodeContext" : "AnnotationAsyncExecutionInterceptor i=new AnnotationAsyncExecutionInterceptor(null);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 981,
        "startLineNumber" : 37,
        "startColumnNumber" : 88,
        "endLineNumber" : 59,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  AnnotationAsyncExecutionInterceptor i=new AnnotationAsyncExecutionInterceptor(null);\n{\nclass C {\n      @Async(\"qMethod\") void m(){\n      }\n    }\n    assertThat(i.getExecutorQualifier(C.class.getDeclaredMethod(\"m\")),is(\"qMethod\"));\n  }\n{\n@Async(\"qClass\") class C {\n      void m(){\n      }\n    }\n    assertThat(i.getExecutorQualifier(C.class.getDeclaredMethod(\"m\")),is(\"qClass\"));\n  }\n{\n@Async(\"qClass\") class C {\n      @Async(\"qMethod\") void m(){\n      }\n    }\n    assertThat(i.getExecutorQualifier(C.class.getDeclaredMethod(\"m\")),is(\"qMethod\"));\n  }\n{\n@Async(\"qClass\") class C {\n      @Async void m(){\n      }\n    }\n    assertThat(i.getExecutorQualifier(C.class.getDeclaredMethod(\"m\")),is(\"\"));\n  }\n{\n@MyAsync class C {\n      void m(){\n      }\n    }\n    assertThat(i.getExecutorQualifier(C.class.getDeclaredMethod(\"m\")),is(\"qMeta\"));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1104,
        "startLineNumber" : 35,
        "startColumnNumber" : 1,
        "endLineNumber" : 59,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test @SuppressWarnings(\"unused\") public void testGetExecutorQualifier() throws SecurityException, NoSuchMethodException {\n  AnnotationAsyncExecutionInterceptor i=new AnnotationAsyncExecutionInterceptor(null);\n{\nclass C {\n      @Async(\"qMethod\") void m(){\n      }\n    }\n    assertThat(i.getExecutorQualifier(C.class.getDeclaredMethod(\"m\")),is(\"qMethod\"));\n  }\n{\n@Async(\"qClass\") class C {\n      void m(){\n      }\n    }\n    assertThat(i.getExecutorQualifier(C.class.getDeclaredMethod(\"m\")),is(\"qClass\"));\n  }\n{\n@Async(\"qClass\") class C {\n      @Async(\"qMethod\") void m(){\n      }\n    }\n    assertThat(i.getExecutorQualifier(C.class.getDeclaredMethod(\"m\")),is(\"qMethod\"));\n  }\n{\n@Async(\"qClass\") class C {\n      @Async void m(){\n      }\n    }\n    assertThat(i.getExecutorQualifier(C.class.getDeclaredMethod(\"m\")),is(\"\"));\n  }\n{\n@MyAsync class C {\n      void m(){\n      }\n    }\n    assertThat(i.getExecutorQualifier(C.class.getDeclaredMethod(\"m\")),is(\"qMeta\"));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 157,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 38,
        "startColumnNumber" : 2,
        "endLineNumber" : 38,
        "endColumnNumber" : 88
      },
      "nodeContext" : "AnnotationAsyncExecutionInterceptor i=new AnnotationAsyncExecutionInterceptor(null);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "null"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 38,
    "startColumnNumber" : 82,
    "endLineNumber" : 38,
    "endColumnNumber" : 86
  } ],
  "layoutRelationDataList" : [ ]
}