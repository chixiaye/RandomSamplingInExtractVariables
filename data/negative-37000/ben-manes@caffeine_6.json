{
  "id" : 6,
  "expression" : "remappingFunction.apply(k,oldWeightedValue.value)",
  "projectName" : "ben-manes@caffeine",
  "commitID" : "30ca3d80d9dc7aa20adceacfc5fff1659bbadb8e",
  "filePath" : "/src/main/java/com/github/benmanes/caffeine/cache/BoundedLocalCache.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "remappingFunction.apply(k,oldWeightedValue.value)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 50,
      "startLineNumber" : 957,
      "startColumnNumber" : 21,
      "endLineNumber" : 957,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 957,
        "startColumnNumber" : 10,
        "endLineNumber" : 957,
        "endColumnNumber" : 71
      },
      "nodeContext" : "newValue=remappingFunction.apply(k,oldWeightedValue.value)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 957,
        "startColumnNumber" : 8,
        "endLineNumber" : 957,
        "endColumnNumber" : 72
      },
      "nodeContext" : "V newValue=remappingFunction.apply(k,oldWeightedValue.value);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 981,
        "startLineNumber" : 955,
        "startColumnNumber" : 27,
        "endLineNumber" : 978,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  WeightedValue<V> oldWeightedValue=prior.get();\n  V newValue=remappingFunction.apply(k,oldWeightedValue.value);\n  if (newValue == null) {\n    makeRetired(prior);\n    task[0]=new RemovalTask(prior);\n    if (hasRemovalListener()) {\n      notifyRemoval(prior.key,prior.getValue(),RemovalCause.EXPLICIT);\n    }\n    return null;\n  }\n  int weight=weigher.weigh(key,newValue);\n  WeightedValue<V> newWeightedValue=new WeightedValue<V>(newValue,weight);\n  prior.lazySet(newWeightedValue);\n  weightedValue[0]=newWeightedValue;\n  final int weightedDifference=weight - oldWeightedValue.weight;\n  if (weightedDifference != 0) {\n    task[0]=new UpdateTask(prior,weightedDifference);\n  }\n  if (hasRemovalListener()) {\n    notifyRemoval(prior.key,prior.getValue(),RemovalCause.REPLACED);\n  }\n  return prior;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1002,
        "startLineNumber" : 955,
        "startColumnNumber" : 6,
        "endLineNumber" : 978,
        "endColumnNumber" : 7
      },
      "nodeContext" : "synchronized (prior) {\n  WeightedValue<V> oldWeightedValue=prior.get();\n  V newValue=remappingFunction.apply(k,oldWeightedValue.value);\n  if (newValue == null) {\n    makeRetired(prior);\n    task[0]=new RemovalTask(prior);\n    if (hasRemovalListener()) {\n      notifyRemoval(prior.key,prior.getValue(),RemovalCause.EXPLICIT);\n    }\n    return null;\n  }\n  int weight=weigher.weigh(key,newValue);\n  WeightedValue<V> newWeightedValue=new WeightedValue<V>(newValue,weight);\n  prior.lazySet(newWeightedValue);\n  weightedValue[0]=newWeightedValue;\n  final int weightedDifference=weight - oldWeightedValue.weight;\n  if (weightedDifference != 0) {\n    task[0]=new UpdateTask(prior,weightedDifference);\n  }\n  if (hasRemovalListener()) {\n    notifyRemoval(prior.key,prior.getValue(),RemovalCause.REPLACED);\n  }\n  return prior;\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 141,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1018,
        "startLineNumber" : 954,
        "startColumnNumber" : 63,
        "endLineNumber" : 979,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nsynchronized (prior) {\n    WeightedValue<V> oldWeightedValue=prior.get();\n    V newValue=remappingFunction.apply(k,oldWeightedValue.value);\n    if (newValue == null) {\n      makeRetired(prior);\n      task[0]=new RemovalTask(prior);\n      if (hasRemovalListener()) {\n        notifyRemoval(prior.key,prior.getValue(),RemovalCause.EXPLICIT);\n      }\n      return null;\n    }\n    int weight=weigher.weigh(key,newValue);\n    WeightedValue<V> newWeightedValue=new WeightedValue<V>(newValue,weight);\n    prior.lazySet(newWeightedValue);\n    weightedValue[0]=newWeightedValue;\n    final int weightedDifference=weight - oldWeightedValue.weight;\n    if (weightedDifference != 0) {\n      task[0]=new UpdateTask(prior,weightedDifference);\n    }\n    if (hasRemovalListener()) {\n      notifyRemoval(prior.key,prior.getValue(),RemovalCause.REPLACED);\n    }\n    return prior;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1032,
        "startLineNumber" : 954,
        "startColumnNumber" : 49,
        "endLineNumber" : 979,
        "endColumnNumber" : 5
      },
      "nodeContext" : "(k,prior) -> {\nsynchronized (prior) {\n    WeightedValue<V> oldWeightedValue=prior.get();\n    V newValue=remappingFunction.apply(k,oldWeightedValue.value);\n    if (newValue == null) {\n      makeRetired(prior);\n      task[0]=new RemovalTask(prior);\n      if (hasRemovalListener()) {\n        notifyRemoval(prior.key,prior.getValue(),RemovalCause.EXPLICIT);\n      }\n      return null;\n    }\n    int weight=weigher.weigh(key,newValue);\n    WeightedValue<V> newWeightedValue=new WeightedValue<V>(newValue,weight);\n    prior.lazySet(newWeightedValue);\n    weightedValue[0]=newWeightedValue;\n    final int weightedDifference=weight - oldWeightedValue.weight;\n    if (weightedDifference != 0) {\n      task[0]=new UpdateTask(prior,weightedDifference);\n    }\n    if (hasRemovalListener()) {\n      notifyRemoval(prior.key,prior.getValue(),RemovalCause.REPLACED);\n    }\n    return prior;\n  }\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 147,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 957,
        "startColumnNumber" : 8,
        "endLineNumber" : 957,
        "endColumnNumber" : 72
      },
      "nodeContext" : "V newValue=remappingFunction.apply(k,oldWeightedValue.value);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 50,
    "startLineNumber" : 957,
    "startColumnNumber" : 21,
    "endLineNumber" : 957,
    "endColumnNumber" : 71
  } ],
  "layoutRelationDataList" : [ ]
}