{
  "id" : 508,
  "expression" : "Arrays.copyOf(data,data.length * 2)",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/datasource/src/main/java/com/google/android/exoplayer2/upstream/DataSourceUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Arrays.copyOf(data,data.length * 2)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 42,
      "startColumnNumber" : 15,
      "endLineNumber" : 42,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 42,
        "endColumnNumber" : 51
      },
      "nodeContext" : "data=Arrays.copyOf(data,data.length * 2)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 42,
        "endColumnNumber" : 52
      },
      "nodeContext" : "data=Arrays.copyOf(data,data.length * 2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 41,
        "startColumnNumber" : 35,
        "endLineNumber" : 43,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  data=Arrays.copyOf(data,data.length * 2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 41,
        "startColumnNumber" : 6,
        "endLineNumber" : 43,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (position == data.length) {\n  data=Arrays.copyOf(data,data.length * 2);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 267,
        "startLineNumber" : 40,
        "startColumnNumber" : 47,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (position == data.length) {\n    data=Arrays.copyOf(data,data.length * 2);\n  }\n  bytesRead=dataSource.read(data,position,data.length - position);\n  if (bytesRead != C.RESULT_END_OF_INPUT) {\n    position+=bytesRead;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 310,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (bytesRead != C.RESULT_END_OF_INPUT) {\n  if (position == data.length) {\n    data=Arrays.copyOf(data,data.length * 2);\n  }\n  bytesRead=dataSource.read(data,position,data.length - position);\n  if (bytesRead != C.RESULT_END_OF_INPUT) {\n    position+=bytesRead;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 50,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 441,
        "startLineNumber" : 36,
        "startColumnNumber" : 75,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  byte[] data=new byte[1024];\n  int position=0;\n  int bytesRead=0;\n  while (bytesRead != C.RESULT_END_OF_INPUT) {\n    if (position == data.length) {\n      data=Arrays.copyOf(data,data.length * 2);\n    }\n    bytesRead=dataSource.read(data,position,data.length - position);\n    if (bytesRead != C.RESULT_END_OF_INPUT) {\n      position+=bytesRead;\n    }\n  }\n  return Arrays.copyOf(data,position);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 78,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 835,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Reads data from the specified opened  {@link DataSource} until it ends, and returns a byte arraycontaining the read data.\n * @param dataSource The source from which to read.\n * @return The concatenation of all read data.\n * @throws IOException If an error occurs reading from the source.\n */\npublic static byte[] readToEnd(DataSource dataSource) throws IOException {\n  byte[] data=new byte[1024];\n  int position=0;\n  int bytesRead=0;\n  while (bytesRead != C.RESULT_END_OF_INPUT) {\n    if (position == data.length) {\n      data=Arrays.copyOf(data,data.length * 2);\n    }\n    bytesRead=dataSource.read(data,position,data.length - position);\n    if (bytesRead != C.RESULT_END_OF_INPUT) {\n      position+=bytesRead;\n    }\n  }\n  return Arrays.copyOf(data,position);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 42,
        "endColumnNumber" : 52
      },
      "nodeContext" : "data=Arrays.copyOf(data,data.length * 2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 7,
    "type" : "byte[]"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 42,
    "startColumnNumber" : 15,
    "endLineNumber" : 42,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}