{
  "id" : 449,
  "expression" : "\"Actual table should not exist.\"",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-test/shardingsphere-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/asserts/statement/dcl/impl/mysql/MySQLGrantStatementAssert.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Actual table should not exist.\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 50,
      "startColumnNumber" : 45,
      "endLineNumber" : 50,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 50,
        "startColumnNumber" : 23,
        "endLineNumber" : 50,
        "endColumnNumber" : 78
      },
      "nodeContext" : "assertContext.getText(\"Actual table should not exist.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 128
      },
      "nodeContext" : "assertThat(assertContext.getText(\"Actual table should not exist.\"),actual.getTables(),is(Collections.emptyList()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 129
      },
      "nodeContext" : "assertThat(assertContext.getText(\"Actual table should not exist.\"),actual.getTables(),is(Collections.emptyList()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 49,
        "startColumnNumber" : 15,
        "endLineNumber" : 51,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  assertThat(assertContext.getText(\"Actual table should not exist.\"),actual.getTables(),is(Collections.emptyList()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 389,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (null != expected.getTables() && !expected.getTables().isEmpty()) {\n  assertThat(expected.getTables().size(),is(1));\n  GrantLevelSegmentAssert.assertIs(assertContext,actual.getLevel(),expected.getTables());\n}\n else {\n  assertThat(assertContext.getText(\"Actual table should not exist.\"),actual.getTables(),is(Collections.emptyList()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 52,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 405,
        "startLineNumber" : 45,
        "startColumnNumber" : 147,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (null != expected.getTables() && !expected.getTables().isEmpty()) {\n    assertThat(expected.getTables().size(),is(1));\n    GrantLevelSegmentAssert.assertIs(assertContext,actual.getLevel(),expected.getTables());\n  }\n else {\n    assertThat(assertContext.getText(\"Actual table should not exist.\"),actual.getTables(),is(Collections.emptyList()));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 798,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Assert MySQL grant statement is correct with expected parser result.\n * @param assertContext assert context\n * @param actual actual MySQL grant statement\n * @param expected expected grant statement test case\n */\npublic static void assertIs(final SQLCaseAssertContext assertContext,final MySQLGrantStatement actual,final GrantStatementTestCase expected){\n  if (null != expected.getTables() && !expected.getTables().isEmpty()) {\n    assertThat(expected.getTables().size(),is(1));\n    GrantLevelSegmentAssert.assertIs(assertContext,actual.getLevel(),expected.getTables());\n  }\n else {\n    assertThat(assertContext.getText(\"Actual table should not exist.\"),actual.getTables(),is(Collections.emptyList()));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 129
      },
      "nodeContext" : "assertThat(assertContext.getText(\"Actual table should not exist.\"),actual.getTables(),is(Collections.emptyList()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 50,
    "startColumnNumber" : 45,
    "endLineNumber" : 50,
    "endColumnNumber" : 77
  } ],
  "layoutRelationDataList" : [ ]
}