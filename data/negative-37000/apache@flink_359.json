{
  "id" : 359,
  "expression" : "numEventLoopThreads",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-queryable-state/flink-queryable-state-client-java/src/main/java/org/apache/flink/queryablestate/network/AbstractServerBase.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "numEventLoopThreads",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 123,
      "startColumnNumber" : 16,
      "endLineNumber" : 123,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 123,
        "startColumnNumber" : 16,
        "endLineNumber" : 123,
        "endColumnNumber" : 40
      },
      "nodeContext" : "numEventLoopThreads >= 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Preconditions.checkArgument(numEventLoopThreads >= 1,\"Non-positive number of event loop threads.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 88
      },
      "nodeContext" : "Preconditions.checkArgument(numEventLoopThreads >= 1,\"Non-positive number of event loop threads.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 967,
        "startLineNumber" : 119,
        "startColumnNumber" : 43,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Preconditions.checkNotNull(bindPortIterator);\n  Preconditions.checkArgument(numEventLoopThreads >= 1,\"Non-positive number of event loop threads.\");\n  Preconditions.checkArgument(numQueryThreads >= 1,\"Non-positive number of query threads.\");\n  this.serverName=Preconditions.checkNotNull(serverName);\n  this.bindAddress=Preconditions.checkNotNull(bindAddress);\n  this.numEventLoopThreads=numEventLoopThreads;\n  this.numQueryThreads=numQueryThreads;\n  this.bindPortRange=new HashSet<>();\n  while (bindPortIterator.hasNext()) {\n    int port=bindPortIterator.next();\n    Preconditions.checkArgument(port >= 0 && port <= 65535,\"Invalid port configuration. Port must be between 0 and 65535, but was \" + port + \".\");\n    bindPortRange.add(port);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1559,
        "startLineNumber" : 104,
        "startColumnNumber" : 4,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Creates the  {@link AbstractServerBase}. <p>The server needs to be started via  {@link #start()}.\n * @param serverName the name of the server\n * @param bindAddress address to bind to\n * @param bindPortIterator port to bind to\n * @param numEventLoopThreads number of event loop threads\n */\nprotected AbstractServerBase(final String serverName,final String bindAddress,final Iterator<Integer> bindPortIterator,final Integer numEventLoopThreads,final Integer numQueryThreads){\n  Preconditions.checkNotNull(bindPortIterator);\n  Preconditions.checkArgument(numEventLoopThreads >= 1,\"Non-positive number of event loop threads.\");\n  Preconditions.checkArgument(numQueryThreads >= 1,\"Non-positive number of query threads.\");\n  this.serverName=Preconditions.checkNotNull(serverName);\n  this.bindAddress=Preconditions.checkNotNull(bindAddress);\n  this.numEventLoopThreads=numEventLoopThreads;\n  this.numQueryThreads=numQueryThreads;\n  this.bindPortRange=new HashSet<>();\n  while (bindPortIterator.hasNext()) {\n    int port=bindPortIterator.next();\n    Preconditions.checkArgument(port >= 0 && port <= 65535,\"Invalid port configuration. Port must be between 0 and 65535, but was \" + port + \".\");\n    bindPortRange.add(port);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 123,
        "startColumnNumber" : 16,
        "endLineNumber" : 123,
        "endColumnNumber" : 40
      },
      "nodeContext" : "numEventLoopThreads >= 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.Integer"
  }, {
    "nodeContext" : "numEventLoopThreads",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 128,
      "startColumnNumber" : 35,
      "endLineNumber" : 128,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 54
      },
      "nodeContext" : "this.numEventLoopThreads=numEventLoopThreads",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 55
      },
      "nodeContext" : "this.numEventLoopThreads=numEventLoopThreads;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 967,
        "startLineNumber" : 119,
        "startColumnNumber" : 43,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Preconditions.checkNotNull(bindPortIterator);\n  Preconditions.checkArgument(numEventLoopThreads >= 1,\"Non-positive number of event loop threads.\");\n  Preconditions.checkArgument(numQueryThreads >= 1,\"Non-positive number of query threads.\");\n  this.serverName=Preconditions.checkNotNull(serverName);\n  this.bindAddress=Preconditions.checkNotNull(bindAddress);\n  this.numEventLoopThreads=numEventLoopThreads;\n  this.numQueryThreads=numQueryThreads;\n  this.bindPortRange=new HashSet<>();\n  while (bindPortIterator.hasNext()) {\n    int port=bindPortIterator.next();\n    Preconditions.checkArgument(port >= 0 && port <= 65535,\"Invalid port configuration. Port must be between 0 and 65535, but was \" + port + \".\");\n    bindPortRange.add(port);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1559,
        "startLineNumber" : 104,
        "startColumnNumber" : 4,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Creates the  {@link AbstractServerBase}. <p>The server needs to be started via  {@link #start()}.\n * @param serverName the name of the server\n * @param bindAddress address to bind to\n * @param bindPortIterator port to bind to\n * @param numEventLoopThreads number of event loop threads\n */\nprotected AbstractServerBase(final String serverName,final String bindAddress,final Iterator<Integer> bindPortIterator,final Integer numEventLoopThreads,final Integer numQueryThreads){\n  Preconditions.checkNotNull(bindPortIterator);\n  Preconditions.checkArgument(numEventLoopThreads >= 1,\"Non-positive number of event loop threads.\");\n  Preconditions.checkArgument(numQueryThreads >= 1,\"Non-positive number of query threads.\");\n  this.serverName=Preconditions.checkNotNull(serverName);\n  this.bindAddress=Preconditions.checkNotNull(bindAddress);\n  this.numEventLoopThreads=numEventLoopThreads;\n  this.numQueryThreads=numQueryThreads;\n  this.bindPortRange=new HashSet<>();\n  while (bindPortIterator.hasNext()) {\n    int port=bindPortIterator.next();\n    Preconditions.checkArgument(port >= 0 && port <= 65535,\"Invalid port configuration. Port must be between 0 and 65535, but was \" + port + \".\");\n    bindPortRange.add(port);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 55
      },
      "nodeContext" : "this.numEventLoopThreads=numEventLoopThreads;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Integer"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 123,
    "startColumnNumber" : 16,
    "endLineNumber" : 123,
    "endColumnNumber" : 35
  }, {
    "charLength" : 19,
    "startLineNumber" : 128,
    "startColumnNumber" : 35,
    "endLineNumber" : 128,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}