{
  "id" : 88,
  "expression" : "\"12\"",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/datastructures/trie/TrieTest.java",
  "occurrences" : 8,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"12\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 335,
      "startColumnNumber" : 24,
      "endLineNumber" : 335,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 335,
        "startColumnNumber" : 15,
        "endLineNumber" : 335,
        "endColumnNumber" : 32
      },
      "nodeContext" : "t.delete(\"12\",6)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 335,
        "startColumnNumber" : 4,
        "endLineNumber" : 335,
        "endColumnNumber" : 33
      },
      "nodeContext" : "assertTrue(t.delete(\"12\",6))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 335,
        "startColumnNumber" : 4,
        "endLineNumber" : 335,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertTrue(t.delete(\"12\",6));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3188,
        "startLineNumber" : 237,
        "startColumnNumber" : 27,
        "endLineNumber" : 384,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Trie t=new Trie();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AAC\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertTrue(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"A\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertFalse(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AA\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",3));\n  assertFalse(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.contains(\"$\"));\n  assertTrue(t.contains(\"$A\"));\n  assertTrue(t.contains(\"$B\"));\n  assertTrue(t.contains(\"$C\"));\n  assertTrue(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"CAT\",3);\n  t.insert(\"DOG\",3);\n  assertFalse(t.delete(\"parrot\",50));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"12\",6));\n  assertFalse(t.delete(\"12\"));\n  assertFalse(t.delete(\"1\"));\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"1234\"));\n  assertTrue(t.delete(\"123\",4));\n  assertTrue(t.delete(\"122\",2));\n  assertFalse(t.contains(\"1\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"122\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"1234\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 688,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3221,
        "startLineNumber" : 236,
        "startColumnNumber" : 2,
        "endLineNumber" : 384,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testDelete(){\n  Trie t=new Trie();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AAC\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertTrue(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"A\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertFalse(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AA\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",3));\n  assertFalse(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.contains(\"$\"));\n  assertTrue(t.contains(\"$A\"));\n  assertTrue(t.contains(\"$B\"));\n  assertTrue(t.contains(\"$C\"));\n  assertTrue(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"CAT\",3);\n  t.insert(\"DOG\",3);\n  assertFalse(t.delete(\"parrot\",50));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"12\",6));\n  assertFalse(t.delete(\"12\"));\n  assertFalse(t.delete(\"1\"));\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"1234\"));\n  assertTrue(t.delete(\"123\",4));\n  assertTrue(t.delete(\"122\",2));\n  assertFalse(t.contains(\"1\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"122\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"1234\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 694,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 335,
        "startColumnNumber" : 4,
        "endLineNumber" : 335,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertTrue(t.delete(\"12\",6));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"12\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 336,
      "startColumnNumber" : 25,
      "endLineNumber" : 336,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 336,
        "startColumnNumber" : 16,
        "endLineNumber" : 336,
        "endColumnNumber" : 30
      },
      "nodeContext" : "t.delete(\"12\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 336,
        "startColumnNumber" : 4,
        "endLineNumber" : 336,
        "endColumnNumber" : 31
      },
      "nodeContext" : "assertFalse(t.delete(\"12\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 336,
        "startColumnNumber" : 4,
        "endLineNumber" : 336,
        "endColumnNumber" : 32
      },
      "nodeContext" : "assertFalse(t.delete(\"12\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3188,
        "startLineNumber" : 237,
        "startColumnNumber" : 27,
        "endLineNumber" : 384,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Trie t=new Trie();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AAC\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertTrue(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"A\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertFalse(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AA\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",3));\n  assertFalse(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.contains(\"$\"));\n  assertTrue(t.contains(\"$A\"));\n  assertTrue(t.contains(\"$B\"));\n  assertTrue(t.contains(\"$C\"));\n  assertTrue(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"CAT\",3);\n  t.insert(\"DOG\",3);\n  assertFalse(t.delete(\"parrot\",50));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"12\",6));\n  assertFalse(t.delete(\"12\"));\n  assertFalse(t.delete(\"1\"));\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"1234\"));\n  assertTrue(t.delete(\"123\",4));\n  assertTrue(t.delete(\"122\",2));\n  assertFalse(t.contains(\"1\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"122\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"1234\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 688,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3221,
        "startLineNumber" : 236,
        "startColumnNumber" : 2,
        "endLineNumber" : 384,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testDelete(){\n  Trie t=new Trie();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AAC\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertTrue(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"A\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertFalse(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AA\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",3));\n  assertFalse(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.contains(\"$\"));\n  assertTrue(t.contains(\"$A\"));\n  assertTrue(t.contains(\"$B\"));\n  assertTrue(t.contains(\"$C\"));\n  assertTrue(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"CAT\",3);\n  t.insert(\"DOG\",3);\n  assertFalse(t.delete(\"parrot\",50));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"12\",6));\n  assertFalse(t.delete(\"12\"));\n  assertFalse(t.delete(\"1\"));\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"1234\"));\n  assertTrue(t.delete(\"123\",4));\n  assertTrue(t.delete(\"122\",2));\n  assertFalse(t.contains(\"1\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"122\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"1234\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 694,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 336,
        "startColumnNumber" : 4,
        "endLineNumber" : 336,
        "endColumnNumber" : 32
      },
      "nodeContext" : "assertFalse(t.delete(\"12\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"12\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 340,
      "startColumnNumber" : 27,
      "endLineNumber" : 340,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 340,
        "startColumnNumber" : 16,
        "endLineNumber" : 340,
        "endColumnNumber" : 32
      },
      "nodeContext" : "t.contains(\"12\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 340,
        "startColumnNumber" : 4,
        "endLineNumber" : 340,
        "endColumnNumber" : 33
      },
      "nodeContext" : "assertFalse(t.contains(\"12\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 340,
        "startColumnNumber" : 4,
        "endLineNumber" : 340,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertFalse(t.contains(\"12\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3188,
        "startLineNumber" : 237,
        "startColumnNumber" : 27,
        "endLineNumber" : 384,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Trie t=new Trie();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AAC\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertTrue(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"A\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertFalse(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AA\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",3));\n  assertFalse(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.contains(\"$\"));\n  assertTrue(t.contains(\"$A\"));\n  assertTrue(t.contains(\"$B\"));\n  assertTrue(t.contains(\"$C\"));\n  assertTrue(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"CAT\",3);\n  t.insert(\"DOG\",3);\n  assertFalse(t.delete(\"parrot\",50));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"12\",6));\n  assertFalse(t.delete(\"12\"));\n  assertFalse(t.delete(\"1\"));\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"1234\"));\n  assertTrue(t.delete(\"123\",4));\n  assertTrue(t.delete(\"122\",2));\n  assertFalse(t.contains(\"1\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"122\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"1234\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 688,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3221,
        "startLineNumber" : 236,
        "startColumnNumber" : 2,
        "endLineNumber" : 384,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testDelete(){\n  Trie t=new Trie();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AAC\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertTrue(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"A\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertFalse(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AA\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",3));\n  assertFalse(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.contains(\"$\"));\n  assertTrue(t.contains(\"$A\"));\n  assertTrue(t.contains(\"$B\"));\n  assertTrue(t.contains(\"$C\"));\n  assertTrue(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"CAT\",3);\n  t.insert(\"DOG\",3);\n  assertFalse(t.delete(\"parrot\",50));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"12\",6));\n  assertFalse(t.delete(\"12\"));\n  assertFalse(t.delete(\"1\"));\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"1234\"));\n  assertTrue(t.delete(\"123\",4));\n  assertTrue(t.delete(\"122\",2));\n  assertFalse(t.contains(\"1\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"122\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"1234\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 694,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 340,
        "startColumnNumber" : 4,
        "endLineNumber" : 340,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertFalse(t.contains(\"12\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"12\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 349,
      "startColumnNumber" : 13,
      "endLineNumber" : 349,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 349,
        "startColumnNumber" : 4,
        "endLineNumber" : 349,
        "endColumnNumber" : 26
      },
      "nodeContext" : "t.delete(\"12\",999999)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 349,
        "startColumnNumber" : 4,
        "endLineNumber" : 349,
        "endColumnNumber" : 27
      },
      "nodeContext" : "t.delete(\"12\",999999);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3188,
        "startLineNumber" : 237,
        "startColumnNumber" : 27,
        "endLineNumber" : 384,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Trie t=new Trie();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AAC\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertTrue(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"A\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertFalse(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AA\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",3));\n  assertFalse(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.contains(\"$\"));\n  assertTrue(t.contains(\"$A\"));\n  assertTrue(t.contains(\"$B\"));\n  assertTrue(t.contains(\"$C\"));\n  assertTrue(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"CAT\",3);\n  t.insert(\"DOG\",3);\n  assertFalse(t.delete(\"parrot\",50));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"12\",6));\n  assertFalse(t.delete(\"12\"));\n  assertFalse(t.delete(\"1\"));\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"1234\"));\n  assertTrue(t.delete(\"123\",4));\n  assertTrue(t.delete(\"122\",2));\n  assertFalse(t.contains(\"1\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"122\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"1234\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 688,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3221,
        "startLineNumber" : 236,
        "startColumnNumber" : 2,
        "endLineNumber" : 384,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testDelete(){\n  Trie t=new Trie();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AAC\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertTrue(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"A\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertFalse(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AA\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",3));\n  assertFalse(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.contains(\"$\"));\n  assertTrue(t.contains(\"$A\"));\n  assertTrue(t.contains(\"$B\"));\n  assertTrue(t.contains(\"$C\"));\n  assertTrue(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"CAT\",3);\n  t.insert(\"DOG\",3);\n  assertFalse(t.delete(\"parrot\",50));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"12\",6));\n  assertFalse(t.delete(\"12\"));\n  assertFalse(t.delete(\"1\"));\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"1234\"));\n  assertTrue(t.delete(\"123\",4));\n  assertTrue(t.delete(\"122\",2));\n  assertFalse(t.contains(\"1\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"122\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"1234\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 694,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 349,
        "startColumnNumber" : 4,
        "endLineNumber" : 349,
        "endColumnNumber" : 27
      },
      "nodeContext" : "t.delete(\"12\",999999);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"12\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 353,
      "startColumnNumber" : 27,
      "endLineNumber" : 353,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 353,
        "startColumnNumber" : 16,
        "endLineNumber" : 353,
        "endColumnNumber" : 32
      },
      "nodeContext" : "t.contains(\"12\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 353,
        "startColumnNumber" : 4,
        "endLineNumber" : 353,
        "endColumnNumber" : 33
      },
      "nodeContext" : "assertFalse(t.contains(\"12\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 353,
        "startColumnNumber" : 4,
        "endLineNumber" : 353,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertFalse(t.contains(\"12\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3188,
        "startLineNumber" : 237,
        "startColumnNumber" : 27,
        "endLineNumber" : 384,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Trie t=new Trie();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AAC\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertTrue(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"A\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertFalse(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AA\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",3));\n  assertFalse(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.contains(\"$\"));\n  assertTrue(t.contains(\"$A\"));\n  assertTrue(t.contains(\"$B\"));\n  assertTrue(t.contains(\"$C\"));\n  assertTrue(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"CAT\",3);\n  t.insert(\"DOG\",3);\n  assertFalse(t.delete(\"parrot\",50));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"12\",6));\n  assertFalse(t.delete(\"12\"));\n  assertFalse(t.delete(\"1\"));\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"1234\"));\n  assertTrue(t.delete(\"123\",4));\n  assertTrue(t.delete(\"122\",2));\n  assertFalse(t.contains(\"1\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"122\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"1234\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 688,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3221,
        "startLineNumber" : 236,
        "startColumnNumber" : 2,
        "endLineNumber" : 384,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testDelete(){\n  Trie t=new Trie();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AAC\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertTrue(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"A\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertFalse(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AA\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",3));\n  assertFalse(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.contains(\"$\"));\n  assertTrue(t.contains(\"$A\"));\n  assertTrue(t.contains(\"$B\"));\n  assertTrue(t.contains(\"$C\"));\n  assertTrue(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"CAT\",3);\n  t.insert(\"DOG\",3);\n  assertFalse(t.delete(\"parrot\",50));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"12\",6));\n  assertFalse(t.delete(\"12\"));\n  assertFalse(t.delete(\"1\"));\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"1234\"));\n  assertTrue(t.delete(\"123\",4));\n  assertTrue(t.delete(\"122\",2));\n  assertFalse(t.contains(\"1\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"122\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"1234\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 694,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 353,
        "startColumnNumber" : 4,
        "endLineNumber" : 353,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertFalse(t.contains(\"12\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"12\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 362,
      "startColumnNumber" : 13,
      "endLineNumber" : 362,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 362,
        "startColumnNumber" : 4,
        "endLineNumber" : 362,
        "endColumnNumber" : 26
      },
      "nodeContext" : "t.delete(\"12\",999999)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 362,
        "startColumnNumber" : 4,
        "endLineNumber" : 362,
        "endColumnNumber" : 27
      },
      "nodeContext" : "t.delete(\"12\",999999);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3188,
        "startLineNumber" : 237,
        "startColumnNumber" : 27,
        "endLineNumber" : 384,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Trie t=new Trie();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AAC\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertTrue(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"A\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertFalse(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AA\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",3));\n  assertFalse(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.contains(\"$\"));\n  assertTrue(t.contains(\"$A\"));\n  assertTrue(t.contains(\"$B\"));\n  assertTrue(t.contains(\"$C\"));\n  assertTrue(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"CAT\",3);\n  t.insert(\"DOG\",3);\n  assertFalse(t.delete(\"parrot\",50));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"12\",6));\n  assertFalse(t.delete(\"12\"));\n  assertFalse(t.delete(\"1\"));\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"1234\"));\n  assertTrue(t.delete(\"123\",4));\n  assertTrue(t.delete(\"122\",2));\n  assertFalse(t.contains(\"1\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"122\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"1234\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 688,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3221,
        "startLineNumber" : 236,
        "startColumnNumber" : 2,
        "endLineNumber" : 384,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testDelete(){\n  Trie t=new Trie();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AAC\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertTrue(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"A\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertFalse(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AA\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",3));\n  assertFalse(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.contains(\"$\"));\n  assertTrue(t.contains(\"$A\"));\n  assertTrue(t.contains(\"$B\"));\n  assertTrue(t.contains(\"$C\"));\n  assertTrue(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"CAT\",3);\n  t.insert(\"DOG\",3);\n  assertFalse(t.delete(\"parrot\",50));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"12\",6));\n  assertFalse(t.delete(\"12\"));\n  assertFalse(t.delete(\"1\"));\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"1234\"));\n  assertTrue(t.delete(\"123\",4));\n  assertTrue(t.delete(\"122\",2));\n  assertFalse(t.contains(\"1\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"122\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"1234\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 694,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 362,
        "startColumnNumber" : 4,
        "endLineNumber" : 362,
        "endColumnNumber" : 27
      },
      "nodeContext" : "t.delete(\"12\",999999);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"12\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 366,
      "startColumnNumber" : 27,
      "endLineNumber" : 366,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 366,
        "startColumnNumber" : 16,
        "endLineNumber" : 366,
        "endColumnNumber" : 32
      },
      "nodeContext" : "t.contains(\"12\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 366,
        "startColumnNumber" : 4,
        "endLineNumber" : 366,
        "endColumnNumber" : 33
      },
      "nodeContext" : "assertFalse(t.contains(\"12\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 366,
        "startColumnNumber" : 4,
        "endLineNumber" : 366,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertFalse(t.contains(\"12\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3188,
        "startLineNumber" : 237,
        "startColumnNumber" : 27,
        "endLineNumber" : 384,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Trie t=new Trie();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AAC\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertTrue(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"A\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertFalse(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AA\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",3));\n  assertFalse(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.contains(\"$\"));\n  assertTrue(t.contains(\"$A\"));\n  assertTrue(t.contains(\"$B\"));\n  assertTrue(t.contains(\"$C\"));\n  assertTrue(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"CAT\",3);\n  t.insert(\"DOG\",3);\n  assertFalse(t.delete(\"parrot\",50));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"12\",6));\n  assertFalse(t.delete(\"12\"));\n  assertFalse(t.delete(\"1\"));\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"1234\"));\n  assertTrue(t.delete(\"123\",4));\n  assertTrue(t.delete(\"122\",2));\n  assertFalse(t.contains(\"1\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"122\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"1234\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 688,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3221,
        "startLineNumber" : 236,
        "startColumnNumber" : 2,
        "endLineNumber" : 384,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testDelete(){\n  Trie t=new Trie();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AAC\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertTrue(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"A\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertFalse(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AA\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",3));\n  assertFalse(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.contains(\"$\"));\n  assertTrue(t.contains(\"$A\"));\n  assertTrue(t.contains(\"$B\"));\n  assertTrue(t.contains(\"$C\"));\n  assertTrue(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"CAT\",3);\n  t.insert(\"DOG\",3);\n  assertFalse(t.delete(\"parrot\",50));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"12\",6));\n  assertFalse(t.delete(\"12\"));\n  assertFalse(t.delete(\"1\"));\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"1234\"));\n  assertTrue(t.delete(\"123\",4));\n  assertTrue(t.delete(\"122\",2));\n  assertFalse(t.contains(\"1\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"122\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"1234\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 694,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 366,
        "startColumnNumber" : 4,
        "endLineNumber" : 366,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertFalse(t.contains(\"12\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"12\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 380,
      "startColumnNumber" : 27,
      "endLineNumber" : 380,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 380,
        "startColumnNumber" : 16,
        "endLineNumber" : 380,
        "endColumnNumber" : 32
      },
      "nodeContext" : "t.contains(\"12\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 380,
        "startColumnNumber" : 4,
        "endLineNumber" : 380,
        "endColumnNumber" : 33
      },
      "nodeContext" : "assertFalse(t.contains(\"12\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 380,
        "startColumnNumber" : 4,
        "endLineNumber" : 380,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertFalse(t.contains(\"12\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3188,
        "startLineNumber" : 237,
        "startColumnNumber" : 27,
        "endLineNumber" : 384,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Trie t=new Trie();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AAC\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertTrue(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"A\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertFalse(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AA\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",3));\n  assertFalse(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.contains(\"$\"));\n  assertTrue(t.contains(\"$A\"));\n  assertTrue(t.contains(\"$B\"));\n  assertTrue(t.contains(\"$C\"));\n  assertTrue(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"CAT\",3);\n  t.insert(\"DOG\",3);\n  assertFalse(t.delete(\"parrot\",50));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"12\",6));\n  assertFalse(t.delete(\"12\"));\n  assertFalse(t.delete(\"1\"));\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"1234\"));\n  assertTrue(t.delete(\"123\",4));\n  assertTrue(t.delete(\"122\",2));\n  assertFalse(t.contains(\"1\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"122\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"1234\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 688,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3221,
        "startLineNumber" : 236,
        "startColumnNumber" : 2,
        "endLineNumber" : 384,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testDelete(){\n  Trie t=new Trie();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AAC\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertTrue(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  assertTrue(t.delete(\"A\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertFalse(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"AAC\");\n  t.insert(\"AA\");\n  t.insert(\"A\");\n  assertTrue(t.delete(\"AA\"));\n  assertTrue(t.delete(\"AA\"));\n  assertFalse(t.contains(\"AAC\"));\n  assertFalse(t.contains(\"AA\"));\n  assertTrue(t.contains(\"A\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",3));\n  assertFalse(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.delete(\"$\"));\n  assertFalse(t.contains(\"$\"));\n  assertFalse(t.contains(\"$A\"));\n  assertFalse(t.contains(\"$B\"));\n  assertFalse(t.contains(\"$C\"));\n  assertFalse(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"$A\");\n  t.insert(\"$B\");\n  t.insert(\"$C\");\n  assertTrue(t.delete(\"$\",2));\n  assertTrue(t.contains(\"$\"));\n  assertTrue(t.contains(\"$A\"));\n  assertTrue(t.contains(\"$B\"));\n  assertTrue(t.contains(\"$C\"));\n  assertTrue(t.delete(\"$A\"));\n  assertFalse(t.delete(\"$B\"));\n  assertFalse(t.delete(\"$C\"));\n  t.clear();\n  t.insert(\"CAT\",3);\n  t.insert(\"DOG\",3);\n  assertFalse(t.delete(\"parrot\",50));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"12\",6));\n  assertFalse(t.delete(\"12\"));\n  assertFalse(t.delete(\"1\"));\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  t.delete(\"12\",999999);\n  assertFalse(t.contains(\"1234\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"1\"));\n  t.clear();\n  t.insert(\"1234\");\n  t.insert(\"122\",2);\n  t.insert(\"123\",3);\n  assertTrue(t.delete(\"1234\"));\n  assertTrue(t.delete(\"123\",4));\n  assertTrue(t.delete(\"122\",2));\n  assertFalse(t.contains(\"1\"));\n  assertFalse(t.contains(\"12\"));\n  assertFalse(t.contains(\"122\"));\n  assertFalse(t.contains(\"123\"));\n  assertFalse(t.contains(\"1234\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 694,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 380,
        "startColumnNumber" : 4,
        "endLineNumber" : 380,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertFalse(t.contains(\"12\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 335,
    "startColumnNumber" : 24,
    "endLineNumber" : 335,
    "endColumnNumber" : 28
  }, {
    "charLength" : 4,
    "startLineNumber" : 336,
    "startColumnNumber" : 25,
    "endLineNumber" : 336,
    "endColumnNumber" : 29
  }, {
    "charLength" : 4,
    "startLineNumber" : 340,
    "startColumnNumber" : 27,
    "endLineNumber" : 340,
    "endColumnNumber" : 31
  }, {
    "charLength" : 4,
    "startLineNumber" : 349,
    "startColumnNumber" : 13,
    "endLineNumber" : 349,
    "endColumnNumber" : 17
  }, {
    "charLength" : 4,
    "startLineNumber" : 353,
    "startColumnNumber" : 27,
    "endLineNumber" : 353,
    "endColumnNumber" : 31
  }, {
    "charLength" : 4,
    "startLineNumber" : 362,
    "startColumnNumber" : 13,
    "endLineNumber" : 362,
    "endColumnNumber" : 17
  }, {
    "charLength" : 4,
    "startLineNumber" : 366,
    "startColumnNumber" : 27,
    "endLineNumber" : 366,
    "endColumnNumber" : 31
  }, {
    "charLength" : 4,
    "startLineNumber" : 380,
    "startColumnNumber" : 27,
    "endLineNumber" : 380,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 3
  } ]
}