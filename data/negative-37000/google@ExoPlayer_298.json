{
  "id" : 298,
  "expression" : "C",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/rtsp/src/test/java/com/google/android/exoplayer2/source/rtsp/RtspTrackTimingTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "C",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 59,
      "startColumnNumber" : 51,
      "endLineNumber" : 59,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 59,
        "startColumnNumber" : 51,
        "endLineNumber" : 59,
        "endColumnNumber" : 63
      },
      "nodeContext" : "C.TIME_UNSET",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 64
      },
      "nodeContext" : "assertThat(trackTiming.rtpTimestamp).isEqualTo(C.TIME_UNSET)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertThat(trackTiming.rtpTimestamp).isEqualTo(C.TIME_UNSET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 860,
        "startLineNumber" : 48,
        "startColumnNumber" : 63,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String rtpInfoString=\"url=rtsp://foo.com/bar.avi/streamid=0;seq=45102,url=rtsp://foo.com/bar.avi/streamid=1;seq=30211\";\n  ImmutableList<RtspTrackTiming> trackTimingList=RtspTrackTiming.parseTrackTiming(rtpInfoString,Uri.parse(\"rtsp://foo.com\"));\n  assertThat(trackTimingList).hasSize(2);\n  RtspTrackTiming trackTiming=trackTimingList.get(0);\n  assertThat(trackTiming.uri).isEqualTo(Uri.parse(\"rtsp://foo.com/bar.avi/streamid=0\"));\n  assertThat(trackTiming.sequenceNumber).isEqualTo(45102);\n  assertThat(trackTiming.rtpTimestamp).isEqualTo(C.TIME_UNSET);\n  trackTiming=trackTimingList.get(1);\n  assertThat(trackTiming.uri).isEqualTo(Uri.parse(\"rtsp://foo.com/bar.avi/streamid=1\"));\n  assertThat(trackTiming.sequenceNumber).isEqualTo(30211);\n  assertThat(trackTiming.rtpTimestamp).isEqualTo(C.TIME_UNSET);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 929,
        "startLineNumber" : 47,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void parseTiming_withSeqNumberOnly() throws Exception {\n  String rtpInfoString=\"url=rtsp://foo.com/bar.avi/streamid=0;seq=45102,url=rtsp://foo.com/bar.avi/streamid=1;seq=30211\";\n  ImmutableList<RtspTrackTiming> trackTimingList=RtspTrackTiming.parseTrackTiming(rtpInfoString,Uri.parse(\"rtsp://foo.com\"));\n  assertThat(trackTimingList).hasSize(2);\n  RtspTrackTiming trackTiming=trackTimingList.get(0);\n  assertThat(trackTiming.uri).isEqualTo(Uri.parse(\"rtsp://foo.com/bar.avi/streamid=0\"));\n  assertThat(trackTiming.sequenceNumber).isEqualTo(45102);\n  assertThat(trackTiming.rtpTimestamp).isEqualTo(C.TIME_UNSET);\n  trackTiming=trackTimingList.get(1);\n  assertThat(trackTiming.uri).isEqualTo(Uri.parse(\"rtsp://foo.com/bar.avi/streamid=1\"));\n  assertThat(trackTiming.sequenceNumber).isEqualTo(30211);\n  assertThat(trackTiming.rtpTimestamp).isEqualTo(C.TIME_UNSET);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertThat(trackTiming.rtpTimestamp).isEqualTo(C.TIME_UNSET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.C"
  }, {
    "nodeContext" : "C",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 63,
      "startColumnNumber" : 51,
      "endLineNumber" : 63,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 63,
        "startColumnNumber" : 51,
        "endLineNumber" : 63,
        "endColumnNumber" : 63
      },
      "nodeContext" : "C.TIME_UNSET",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 64
      },
      "nodeContext" : "assertThat(trackTiming.rtpTimestamp).isEqualTo(C.TIME_UNSET)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertThat(trackTiming.rtpTimestamp).isEqualTo(C.TIME_UNSET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 860,
        "startLineNumber" : 48,
        "startColumnNumber" : 63,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String rtpInfoString=\"url=rtsp://foo.com/bar.avi/streamid=0;seq=45102,url=rtsp://foo.com/bar.avi/streamid=1;seq=30211\";\n  ImmutableList<RtspTrackTiming> trackTimingList=RtspTrackTiming.parseTrackTiming(rtpInfoString,Uri.parse(\"rtsp://foo.com\"));\n  assertThat(trackTimingList).hasSize(2);\n  RtspTrackTiming trackTiming=trackTimingList.get(0);\n  assertThat(trackTiming.uri).isEqualTo(Uri.parse(\"rtsp://foo.com/bar.avi/streamid=0\"));\n  assertThat(trackTiming.sequenceNumber).isEqualTo(45102);\n  assertThat(trackTiming.rtpTimestamp).isEqualTo(C.TIME_UNSET);\n  trackTiming=trackTimingList.get(1);\n  assertThat(trackTiming.uri).isEqualTo(Uri.parse(\"rtsp://foo.com/bar.avi/streamid=1\"));\n  assertThat(trackTiming.sequenceNumber).isEqualTo(30211);\n  assertThat(trackTiming.rtpTimestamp).isEqualTo(C.TIME_UNSET);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 929,
        "startLineNumber" : 47,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void parseTiming_withSeqNumberOnly() throws Exception {\n  String rtpInfoString=\"url=rtsp://foo.com/bar.avi/streamid=0;seq=45102,url=rtsp://foo.com/bar.avi/streamid=1;seq=30211\";\n  ImmutableList<RtspTrackTiming> trackTimingList=RtspTrackTiming.parseTrackTiming(rtpInfoString,Uri.parse(\"rtsp://foo.com\"));\n  assertThat(trackTimingList).hasSize(2);\n  RtspTrackTiming trackTiming=trackTimingList.get(0);\n  assertThat(trackTiming.uri).isEqualTo(Uri.parse(\"rtsp://foo.com/bar.avi/streamid=0\"));\n  assertThat(trackTiming.sequenceNumber).isEqualTo(45102);\n  assertThat(trackTiming.rtpTimestamp).isEqualTo(C.TIME_UNSET);\n  trackTiming=trackTimingList.get(1);\n  assertThat(trackTiming.uri).isEqualTo(Uri.parse(\"rtsp://foo.com/bar.avi/streamid=1\"));\n  assertThat(trackTiming.sequenceNumber).isEqualTo(30211);\n  assertThat(trackTiming.rtpTimestamp).isEqualTo(C.TIME_UNSET);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertThat(trackTiming.rtpTimestamp).isEqualTo(C.TIME_UNSET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.C"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 59,
    "startColumnNumber" : 51,
    "endLineNumber" : 59,
    "endColumnNumber" : 52
  }, {
    "charLength" : 1,
    "startLineNumber" : 63,
    "startColumnNumber" : 51,
    "endLineNumber" : 63,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}