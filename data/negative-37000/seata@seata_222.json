{
  "id" : 222,
  "expression" : "getRedisPasswordFileKey()",
  "projectName" : "seata@seata",
  "commitID" : "42d41623178ab076b11b27a0f049ac3ed7f1a9dc",
  "filePath" : "/discovery/seata-discovery-redis/src/main/java/io/seata/discovery/registry/redis/RedisRegistryServiceImpl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getRedisPasswordFileKey()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 73,
      "startColumnNumber" : 48,
      "endLineNumber" : 73,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 73,
        "startColumnNumber" : 26,
        "endLineNumber" : 73,
        "endColumnNumber" : 74
      },
      "nodeContext" : "seataConfig.getConfig(getRedisPasswordFileKey())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 73,
        "startColumnNumber" : 15,
        "endLineNumber" : 73,
        "endColumnNumber" : 74
      },
      "nodeContext" : "password=seataConfig.getConfig(getRedisPasswordFileKey())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 75
      },
      "nodeContext" : "String password=seataConfig.getConfig(getRedisPasswordFileKey());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2925,
        "startLineNumber" : 70,
        "startColumnNumber" : 39,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Configuration seataConfig=ConfigurationFactory.FILE_INSTANCE;\n  this.clusterName=seataConfig.getConfig(REDIS_FILEKEY_PREFIX + REGISTRY_CLUSTER_KEY,DEFAULT_CLUSTER);\n  String password=seataConfig.getConfig(getRedisPasswordFileKey());\n  String serverAddr=seataConfig.getConfig(getRedisAddrFileKey());\n  String[] serverArr=serverAddr.split(\":\");\n  String host=serverArr[0];\n  int port=Integer.parseInt(serverArr[1]);\n  int db=seataConfig.getInt(getRedisDbFileKey());\n  GenericObjectPoolConfig redisConfig=new GenericObjectPoolConfig();\n  redisConfig.setTestOnBorrow(seataConfig.getBoolean(REDIS_FILEKEY_PREFIX + \"test.on.borrow\",true));\n  redisConfig.setTestOnReturn(seataConfig.getBoolean(REDIS_FILEKEY_PREFIX + \"test.on.return\",false));\n  redisConfig.setTestWhileIdle(seataConfig.getBoolean(REDIS_FILEKEY_PREFIX + \"test.while.idle\",false));\n  int maxIdle=seataConfig.getInt(REDIS_FILEKEY_PREFIX + \"max.idle\",0);\n  if (maxIdle > 0) {\n    redisConfig.setMaxIdle(maxIdle);\n  }\n  int minIdle=seataConfig.getInt(REDIS_FILEKEY_PREFIX + \"min.idle\",0);\n  if (minIdle > 0) {\n    redisConfig.setMinIdle(minIdle);\n  }\n  int maxActive=seataConfig.getInt(REDIS_FILEKEY_PREFIX + \"max.active\",0);\n  if (maxActive > 0) {\n    redisConfig.setMaxTotal(maxActive);\n  }\n  int maxTotal=seataConfig.getInt(REDIS_FILEKEY_PREFIX + \"max.total\",0);\n  if (maxTotal > 0) {\n    redisConfig.setMaxTotal(maxTotal);\n  }\n  int maxWait=seataConfig.getInt(REDIS_FILEKEY_PREFIX + \"max.wait\",seataConfig.getInt(REDIS_FILEKEY_PREFIX + \"timeout\",0));\n  if (maxWait > 0) {\n    redisConfig.setMaxWaitMillis(maxWait);\n  }\n  int numTestsPerEvictionRun=seataConfig.getInt(REDIS_FILEKEY_PREFIX + \"num.tests.per.eviction.run\",0);\n  if (numTestsPerEvictionRun > 0) {\n    redisConfig.setNumTestsPerEvictionRun(numTestsPerEvictionRun);\n  }\n  int timeBetweenEvictionRunsMillis=seataConfig.getInt(REDIS_FILEKEY_PREFIX + \"time.between.eviction.runs.millis\",0);\n  if (timeBetweenEvictionRunsMillis > 0) {\n    redisConfig.setTimeBetweenEvictionRunsMillis(timeBetweenEvictionRunsMillis);\n  }\n  int minEvictableIdleTimeMillis=seataConfig.getInt(REDIS_FILEKEY_PREFIX + \"min.evictable.idle.time.millis\",0);\n  if (minEvictableIdleTimeMillis > 0) {\n    redisConfig.setMinEvictableIdleTimeMillis(minEvictableIdleTimeMillis);\n  }\n  if (StringUtils.isNullOrEmpty(password)) {\n    jedisPool=new JedisPool(redisConfig,host,port,Protocol.DEFAULT_TIMEOUT,null,db);\n  }\n else {\n    jedisPool=new JedisPool(redisConfig,host,port,Protocol.DEFAULT_TIMEOUT,password,db);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 329,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2960,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private RedisRegistryServiceImpl(){\n  Configuration seataConfig=ConfigurationFactory.FILE_INSTANCE;\n  this.clusterName=seataConfig.getConfig(REDIS_FILEKEY_PREFIX + REGISTRY_CLUSTER_KEY,DEFAULT_CLUSTER);\n  String password=seataConfig.getConfig(getRedisPasswordFileKey());\n  String serverAddr=seataConfig.getConfig(getRedisAddrFileKey());\n  String[] serverArr=serverAddr.split(\":\");\n  String host=serverArr[0];\n  int port=Integer.parseInt(serverArr[1]);\n  int db=seataConfig.getInt(getRedisDbFileKey());\n  GenericObjectPoolConfig redisConfig=new GenericObjectPoolConfig();\n  redisConfig.setTestOnBorrow(seataConfig.getBoolean(REDIS_FILEKEY_PREFIX + \"test.on.borrow\",true));\n  redisConfig.setTestOnReturn(seataConfig.getBoolean(REDIS_FILEKEY_PREFIX + \"test.on.return\",false));\n  redisConfig.setTestWhileIdle(seataConfig.getBoolean(REDIS_FILEKEY_PREFIX + \"test.while.idle\",false));\n  int maxIdle=seataConfig.getInt(REDIS_FILEKEY_PREFIX + \"max.idle\",0);\n  if (maxIdle > 0) {\n    redisConfig.setMaxIdle(maxIdle);\n  }\n  int minIdle=seataConfig.getInt(REDIS_FILEKEY_PREFIX + \"min.idle\",0);\n  if (minIdle > 0) {\n    redisConfig.setMinIdle(minIdle);\n  }\n  int maxActive=seataConfig.getInt(REDIS_FILEKEY_PREFIX + \"max.active\",0);\n  if (maxActive > 0) {\n    redisConfig.setMaxTotal(maxActive);\n  }\n  int maxTotal=seataConfig.getInt(REDIS_FILEKEY_PREFIX + \"max.total\",0);\n  if (maxTotal > 0) {\n    redisConfig.setMaxTotal(maxTotal);\n  }\n  int maxWait=seataConfig.getInt(REDIS_FILEKEY_PREFIX + \"max.wait\",seataConfig.getInt(REDIS_FILEKEY_PREFIX + \"timeout\",0));\n  if (maxWait > 0) {\n    redisConfig.setMaxWaitMillis(maxWait);\n  }\n  int numTestsPerEvictionRun=seataConfig.getInt(REDIS_FILEKEY_PREFIX + \"num.tests.per.eviction.run\",0);\n  if (numTestsPerEvictionRun > 0) {\n    redisConfig.setNumTestsPerEvictionRun(numTestsPerEvictionRun);\n  }\n  int timeBetweenEvictionRunsMillis=seataConfig.getInt(REDIS_FILEKEY_PREFIX + \"time.between.eviction.runs.millis\",0);\n  if (timeBetweenEvictionRunsMillis > 0) {\n    redisConfig.setTimeBetweenEvictionRunsMillis(timeBetweenEvictionRunsMillis);\n  }\n  int minEvictableIdleTimeMillis=seataConfig.getInt(REDIS_FILEKEY_PREFIX + \"min.evictable.idle.time.millis\",0);\n  if (minEvictableIdleTimeMillis > 0) {\n    redisConfig.setMinEvictableIdleTimeMillis(minEvictableIdleTimeMillis);\n  }\n  if (StringUtils.isNullOrEmpty(password)) {\n    jedisPool=new JedisPool(redisConfig,host,port,Protocol.DEFAULT_TIMEOUT,null,db);\n  }\n else {\n    jedisPool=new JedisPool(redisConfig,host,port,Protocol.DEFAULT_TIMEOUT,password,db);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 332,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 75
      },
      "nodeContext" : "String password=seataConfig.getConfig(getRedisPasswordFileKey());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 73,
    "startColumnNumber" : 48,
    "endLineNumber" : 73,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ ]
}