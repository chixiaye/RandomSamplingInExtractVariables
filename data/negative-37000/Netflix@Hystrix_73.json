{
  "id" : 73,
  "expression" : "getCurrentConnections().get()",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-contrib/hystrix-metrics-event-stream-jaxrs/src/main/java/com/netflix/hystrix/contrib/metrics/controller/AbstractHystrixStreamController.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getCurrentConnections().get()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 68,
      "startColumnNumber" : 26,
      "endLineNumber" : 68,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 68,
        "startColumnNumber" : 6,
        "endLineNumber" : 68,
        "endColumnNumber" : 55
      },
      "nodeContext" : "numberConnections=getCurrentConnections().get()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 56
      },
      "nodeContext" : "int numberConnections=getCurrentConnections().get();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 969,
        "startLineNumber" : 65,
        "startColumnNumber" : 36,
        "endLineNumber" : 83,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ResponseBuilder builder=null;\n  int numberConnections=getCurrentConnections().get();\n  int maxNumberConnectionsAllowed=getMaxNumberConcurrentConnectionsAllowed();\n  if (numberConnections >= maxNumberConnectionsAllowed) {\n    builder=Response.status(Status.SERVICE_UNAVAILABLE).entity(\"MaxConcurrentConnections reached: \" + maxNumberConnectionsAllowed);\n  }\n else {\n    builder=Response.status(Status.OK);\n    builder.header(HttpHeaders.CONTENT_TYPE,\"text/event-stream;charset=UTF-8\");\n    builder.header(HttpHeaders.CACHE_CONTROL,\"no-cache, no-store, max-age=0, must-revalidate\");\n    builder.header(\"Pragma\",\"no-cache\");\n    getCurrentConnections().incrementAndGet();\n    builder.entity(new HystrixStream(sampleStream,pausePollerThreadDelayInMs,getCurrentConnections()));\n  }\n  return builder.build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 92,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1303,
        "startLineNumber" : 60,
        "startColumnNumber" : 1,
        "endLineNumber" : 83,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Maintain an open connection with the client. On initial connection send latest data of each requested event type and subsequently send all changes for each requested event type.\n * @return JAX-RS Response - Serialization will be handled by {@link HystrixStreamingOutputProvider}\n */\nprotected Response handleRequest(){\n  ResponseBuilder builder=null;\n  int numberConnections=getCurrentConnections().get();\n  int maxNumberConnectionsAllowed=getMaxNumberConcurrentConnectionsAllowed();\n  if (numberConnections >= maxNumberConnectionsAllowed) {\n    builder=Response.status(Status.SERVICE_UNAVAILABLE).entity(\"MaxConcurrentConnections reached: \" + maxNumberConnectionsAllowed);\n  }\n else {\n    builder=Response.status(Status.OK);\n    builder.header(HttpHeaders.CONTENT_TYPE,\"text/event-stream;charset=UTF-8\");\n    builder.header(HttpHeaders.CACHE_CONTROL,\"no-cache, no-store, max-age=0, must-revalidate\");\n    builder.header(\"Pragma\",\"no-cache\");\n    getCurrentConnections().incrementAndGet();\n    builder.entity(new HystrixStream(sampleStream,pausePollerThreadDelayInMs,getCurrentConnections()));\n  }\n  return builder.build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 98,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 56
      },
      "nodeContext" : "int numberConnections=getCurrentConnections().get();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 68,
    "startColumnNumber" : 26,
    "endLineNumber" : 68,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}