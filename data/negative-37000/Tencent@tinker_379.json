{
  "id" : 379,
  "expression" : "(long)argsRef[1]",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-android/tinker-android-loader-no-op/src/main/java/com/tencent/tinker/loader/shareutil/TinkerLogInlineFence.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(long)argsRef[1]",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 133,
      "startColumnNumber" : 82,
      "endLineNumber" : 133,
      "endColumnNumber" : 99
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 133,
        "startColumnNumber" : 73,
        "endLineNumber" : 133,
        "endColumnNumber" : 100
      },
      "nodeContext" : "new Date((long)argsRef[1])",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 133,
        "startColumnNumber" : 53,
        "endLineNumber" : 133,
        "endColumnNumber" : 101
      },
      "nodeContext" : "timestampFmt.format(new Date((long)argsRef[1]))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 133,
        "startColumnNumber" : 41,
        "endLineNumber" : 133,
        "endColumnNumber" : 101
      },
      "nodeContext" : "timestamp=timestampFmt.format(new Date((long)argsRef[1]))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 133,
        "startColumnNumber" : 28,
        "endLineNumber" : 133,
        "endColumnNumber" : 102
      },
      "nodeContext" : "final String timestamp=timestampFmt.format(new Date((long)argsRef[1]));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2023,
        "startLineNumber" : 132,
        "startColumnNumber" : 42,
        "endLineNumber" : 165,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  final String timestamp=timestampFmt.format(new Date((long)argsRef[1]));\n  final String prefix=\"[PendingLog @ \" + timestamp + \"] \";\nswitch ((int)argsRef[0]) {\ncase Log.VERBOSE:{\n      logImp.v((String)argsRef[2],prefix + (String)argsRef[3],(Object[])argsRef[4]);\n      break;\n    }\ncase Log.DEBUG:{\n    logImp.d((String)argsRef[2],prefix + (String)argsRef[3],(Object[])argsRef[4]);\n    break;\n  }\ncase Log.INFO:{\n  logImp.i((String)argsRef[2],prefix + (String)argsRef[3],(Object[])argsRef[4]);\n  break;\n}\ncase Log.WARN:{\nlogImp.w((String)argsRef[2],prefix + (String)argsRef[3],(Object[])argsRef[4]);\nbreak;\n}\ncase Log.ERROR:{\nlogImp.e((String)argsRef[2],prefix + (String)argsRef[3],(Object[])argsRef[4]);\nbreak;\n}\ncase ShareTinkerLog.FN_LOG_PRINT_STACKTRACE:{\nlogImp.printErrStackTrace((String)argsRef[2],(Throwable)argsRef[3],prefix + (String)argsRef[4],(Object[])argsRef[5]);\nbreak;\n}\ndefault:{\nbreak;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 235,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2075,
        "startLineNumber" : 131,
        "startColumnNumber" : 24,
        "endLineNumber" : 165,
        "endColumnNumber" : 25
      },
      "nodeContext" : "@Override public void run(){\n  final String timestamp=timestampFmt.format(new Date((long)argsRef[1]));\n  final String prefix=\"[PendingLog @ \" + timestamp + \"] \";\nswitch ((int)argsRef[0]) {\ncase Log.VERBOSE:{\n      logImp.v((String)argsRef[2],prefix + (String)argsRef[3],(Object[])argsRef[4]);\n      break;\n    }\ncase Log.DEBUG:{\n    logImp.d((String)argsRef[2],prefix + (String)argsRef[3],(Object[])argsRef[4]);\n    break;\n  }\ncase Log.INFO:{\n  logImp.i((String)argsRef[2],prefix + (String)argsRef[3],(Object[])argsRef[4]);\n  break;\n}\ncase Log.WARN:{\nlogImp.w((String)argsRef[2],prefix + (String)argsRef[3],(Object[])argsRef[4]);\nbreak;\n}\ncase Log.ERROR:{\nlogImp.e((String)argsRef[2],prefix + (String)argsRef[3],(Object[])argsRef[4]);\nbreak;\n}\ncase ShareTinkerLog.FN_LOG_PRINT_STACKTRACE:{\nlogImp.printErrStackTrace((String)argsRef[2],(Throwable)argsRef[3],prefix + (String)argsRef[4],(Object[])argsRef[5]);\nbreak;\n}\ndefault:{\nbreak;\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 241,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 133,
        "startColumnNumber" : 28,
        "endLineNumber" : 133,
        "endColumnNumber" : 102
      },
      "nodeContext" : "final String timestamp=timestampFmt.format(new Date((long)argsRef[1]));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 133,
    "startColumnNumber" : 82,
    "endLineNumber" : 133,
    "endColumnNumber" : 99
  } ],
  "layoutRelationDataList" : [ ]
}