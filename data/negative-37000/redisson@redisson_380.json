{
  "id" : 380,
  "expression" : "\"pong\"",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson-spring-data/redisson-spring-data-16/src/main/java/org/redisson/spring/data/connection/RedissonConnectionFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"pong\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 116,
      "startColumnNumber" : 20,
      "endLineNumber" : 116,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 116,
        "startColumnNumber" : 20,
        "endLineNumber" : 116,
        "endColumnNumber" : 48
      },
      "nodeContext" : "\"pong\".equalsIgnoreCase(res)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 116,
        "startColumnNumber" : 16,
        "endLineNumber" : 118,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (\"pong\".equalsIgnoreCase(res)) {\n  return new RedissonSentinelConnection(connection);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 222,
        "startLineNumber" : 114,
        "startColumnNumber" : 16,
        "endLineNumber" : 119,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String res=connection.sync(RedisCommands.PING);\n  if (\"pong\".equalsIgnoreCase(res)) {\n    return new RedissonSentinelConnection(connection);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 362,
        "startLineNumber" : 114,
        "startColumnNumber" : 12,
        "endLineNumber" : 122,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  String res=connection.sync(RedisCommands.PING);\n  if (\"pong\".equalsIgnoreCase(res)) {\n    return new RedissonSentinelConnection(connection);\n  }\n}\n catch (Exception e) {\n  log.warn(\"Can't connect to \" + client,e);\n  connection.closeAsync();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 42,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 465,
        "startLineNumber" : 112,
        "startColumnNumber" : 58,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  org.redisson.client.RedisConnection connection=client.connect();\n  try {\n    String res=connection.sync(RedisCommands.PING);\n    if (\"pong\".equalsIgnoreCase(res)) {\n      return new RedissonSentinelConnection(connection);\n    }\n  }\n catch (  Exception e) {\n    log.warn(\"Can't connect to \" + client,e);\n    connection.closeAsync();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 515,
        "startLineNumber" : 112,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (RedisClient client : manager.getSentinels()) {\n  org.redisson.client.RedisConnection connection=client.connect();\n  try {\n    String res=connection.sync(RedisCommands.PING);\n    if (\"pong\".equalsIgnoreCase(res)) {\n      return new RedissonSentinelConnection(connection);\n    }\n  }\n catch (  Exception e) {\n    log.warn(\"Can't connect to \" + client,e);\n    connection.closeAsync();\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 932,
        "startLineNumber" : 106,
        "startColumnNumber" : 59,
        "endLineNumber" : 126,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!redisson.getConfig().isSentinelConfig()) {\n    throw new InvalidDataAccessResourceUsageException(\"Redisson is not in Sentinel mode\");\n  }\n  SentinelConnectionManager manager=((SentinelConnectionManager)((RedissonKeys)redisson.getKeys()).getConnectionManager());\n  for (  RedisClient client : manager.getSentinels()) {\n    org.redisson.client.RedisConnection connection=client.connect();\n    try {\n      String res=connection.sync(RedisCommands.PING);\n      if (\"pong\".equalsIgnoreCase(res)) {\n        return new RedissonSentinelConnection(connection);\n      }\n    }\n catch (    Exception e) {\n      log.warn(\"Can't connect to \" + client,e);\n      connection.closeAsync();\n    }\n  }\n  throw new InvalidDataAccessResourceUsageException(\"Sentinels are not found\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1001,
        "startLineNumber" : 105,
        "startColumnNumber" : 4,
        "endLineNumber" : 126,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public RedisSentinelConnection getSentinelConnection(){\n  if (!redisson.getConfig().isSentinelConfig()) {\n    throw new InvalidDataAccessResourceUsageException(\"Redisson is not in Sentinel mode\");\n  }\n  SentinelConnectionManager manager=((SentinelConnectionManager)((RedissonKeys)redisson.getKeys()).getConnectionManager());\n  for (  RedisClient client : manager.getSentinels()) {\n    org.redisson.client.RedisConnection connection=client.connect();\n    try {\n      String res=connection.sync(RedisCommands.PING);\n      if (\"pong\".equalsIgnoreCase(res)) {\n        return new RedissonSentinelConnection(connection);\n      }\n    }\n catch (    Exception e) {\n      log.warn(\"Can't connect to \" + client,e);\n      connection.closeAsync();\n    }\n  }\n  throw new InvalidDataAccessResourceUsageException(\"Sentinels are not found\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 109,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 116,
        "startColumnNumber" : 20,
        "endLineNumber" : 116,
        "endColumnNumber" : 48
      },
      "nodeContext" : "\"pong\".equalsIgnoreCase(res)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 116,
    "startColumnNumber" : 20,
    "endLineNumber" : 116,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}