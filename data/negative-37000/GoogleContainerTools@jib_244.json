{
  "id" : 244,
  "expression" : "Instant",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-core/src/test/java/com/google/cloud/tools/jib/cache/CacheTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Instant",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 111,
      "startColumnNumber" : 70,
      "endLineNumber" : 111,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 111,
        "startColumnNumber" : 70,
        "endLineNumber" : 111,
        "endColumnNumber" : 83
      },
      "nodeContext" : "Instant.now()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 111,
        "startColumnNumber" : 56,
        "endLineNumber" : 111,
        "endColumnNumber" : 84
      },
      "nodeContext" : "FileTime.from(Instant.now())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 110,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 85
      },
      "nodeContext" : "LayerMetadata.from(ImmutableList.of(layerEntry1,layerEntry2),FileTime.from(Instant.now()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 109,
        "startColumnNumber" : 18,
        "endLineNumber" : 111,
        "endColumnNumber" : 85
      },
      "nodeContext" : "layerMetadata1=LayerMetadata.from(ImmutableList.of(layerEntry1,layerEntry2),FileTime.from(Instant.now()))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 109,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 86
      },
      "nodeContext" : "LayerMetadata layerMetadata1=LayerMetadata.from(ImmutableList.of(layerEntry1,layerEntry2),FileTime.from(Instant.now()));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3731,
        "startLineNumber" : 86,
        "startColumnNumber" : 95,
        "endLineNumber" : 167,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Path cacheDirectory=temporaryCacheDirectory.newFolder().toPath();\n  Path resourceMetadataJsonPath=PlatformSpecificMetadataJson.getMetadataJsonFile();\n  Path testMetadataJsonPath=cacheDirectory.resolve(CacheFiles.METADATA_FILENAME);\n  Files.copy(resourceMetadataJsonPath,testMetadataJsonPath);\n  DescriptorDigest descriptorDigest1=DescriptorDigest.fromHash(\"8c662931926fa990b41da3c9f42663a537ccd498130030f9149173a0493832ad\");\n  DescriptorDigest descriptorDigest2=DescriptorDigest.fromHash(\"6f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef\");\n  LayerEntry layerEntry1=new LayerEntry(ImmutableList.of(Paths.get(\"some\",\"file\"),Paths.get(\"some\",\"other\",\"file\")),\"extractionPath1\");\n  LayerEntry layerEntry2=new LayerEntry(ImmutableList.of(Paths.get(\"another\",\"file\"),Paths.get(\"yet\",\"another\",\"file\")),\"extractionPath2\");\n  LayerMetadata layerMetadata1=LayerMetadata.from(ImmutableList.of(layerEntry1,layerEntry2),FileTime.from(Instant.now()));\n  LayerMetadata layerMetadata2=LayerMetadata.from(ImmutableList.of(layerEntry2),FileTime.from(Instant.EPOCH));\n  DescriptorDigest mockDiffId=DescriptorDigest.fromHash(\"91e0cae00b86c289b33fee303a807ae72dd9f0315c16b74e6ab0cdbe9d996c10\");\n  List<CachedLayerWithMetadata> cachedLayersWithMetadata=Arrays.asList(new CachedLayerWithMetadata(new CachedLayer(Paths.get(\"nonexistent\"),new BlobDescriptor(descriptorDigest1),mockDiffId),layerMetadata1),new CachedLayerWithMetadata(new CachedLayer(Paths.get(\"nonexistent\"),new BlobDescriptor(descriptorDigest2),mockDiffId),layerMetadata2),new CachedLayerWithMetadata(new CachedLayer(Paths.get(\"nonexistent\"),new BlobDescriptor(descriptorDigest1),mockDiffId),layerMetadata2));\n  try (Cache cache=Cache.init(cacheDirectory)){\n    cache.addCachedLayersWithMetadataToMetadata(cachedLayersWithMetadata);\n  }\n   try (Cache cache=Cache.init(cacheDirectory)){\n    Set<DescriptorDigest> encounteredDigests=new HashSet<>();\n    for (    CachedLayerWithMetadata layer : cache.getMetadata().getLayers()) {\n      DescriptorDigest layerDigest=layer.getBlobDescriptor().getDigest();\n      Assert.assertFalse(encounteredDigests.contains(layerDigest));\n      encounteredDigests.add(layerDigest);\n    }\n    CachedLayerWithMetadata descriptorDigest1Layer=cache.getMetadata().getLayers().get(descriptorDigest1);\n    Assert.assertNotNull(descriptorDigest1Layer);\n    LayerMetadata layerMetadata=descriptorDigest1Layer.getMetadata();\n    Assert.assertNotNull(layerMetadata);\n    Assert.assertEquals(1,layerMetadata.getEntries().size());\n    Assert.assertEquals(FileTime.from(Instant.EPOCH),layerMetadata.getLastModifiedTime());\n    Assert.assertEquals(layerEntry2.getSourceFiles().stream().map(Path::toString).collect(ImmutableList.toImmutableList()),layerMetadata.getEntries().get(0).getSourceFilesStrings());\n    Assert.assertEquals(layerEntry2.getExtractionPath(),layerMetadata.getEntries().get(0).getExtractionPath());\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 374,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3879,
        "startLineNumber" : 84,
        "startColumnNumber" : 2,
        "endLineNumber" : 167,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void test_saveMetadata_noDuplicates() throws IOException, CacheMetadataCorruptedException, DigestException, URISyntaxException {\n  Path cacheDirectory=temporaryCacheDirectory.newFolder().toPath();\n  Path resourceMetadataJsonPath=PlatformSpecificMetadataJson.getMetadataJsonFile();\n  Path testMetadataJsonPath=cacheDirectory.resolve(CacheFiles.METADATA_FILENAME);\n  Files.copy(resourceMetadataJsonPath,testMetadataJsonPath);\n  DescriptorDigest descriptorDigest1=DescriptorDigest.fromHash(\"8c662931926fa990b41da3c9f42663a537ccd498130030f9149173a0493832ad\");\n  DescriptorDigest descriptorDigest2=DescriptorDigest.fromHash(\"6f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef\");\n  LayerEntry layerEntry1=new LayerEntry(ImmutableList.of(Paths.get(\"some\",\"file\"),Paths.get(\"some\",\"other\",\"file\")),\"extractionPath1\");\n  LayerEntry layerEntry2=new LayerEntry(ImmutableList.of(Paths.get(\"another\",\"file\"),Paths.get(\"yet\",\"another\",\"file\")),\"extractionPath2\");\n  LayerMetadata layerMetadata1=LayerMetadata.from(ImmutableList.of(layerEntry1,layerEntry2),FileTime.from(Instant.now()));\n  LayerMetadata layerMetadata2=LayerMetadata.from(ImmutableList.of(layerEntry2),FileTime.from(Instant.EPOCH));\n  DescriptorDigest mockDiffId=DescriptorDigest.fromHash(\"91e0cae00b86c289b33fee303a807ae72dd9f0315c16b74e6ab0cdbe9d996c10\");\n  List<CachedLayerWithMetadata> cachedLayersWithMetadata=Arrays.asList(new CachedLayerWithMetadata(new CachedLayer(Paths.get(\"nonexistent\"),new BlobDescriptor(descriptorDigest1),mockDiffId),layerMetadata1),new CachedLayerWithMetadata(new CachedLayer(Paths.get(\"nonexistent\"),new BlobDescriptor(descriptorDigest2),mockDiffId),layerMetadata2),new CachedLayerWithMetadata(new CachedLayer(Paths.get(\"nonexistent\"),new BlobDescriptor(descriptorDigest1),mockDiffId),layerMetadata2));\n  try (Cache cache=Cache.init(cacheDirectory)){\n    cache.addCachedLayersWithMetadataToMetadata(cachedLayersWithMetadata);\n  }\n   try (Cache cache=Cache.init(cacheDirectory)){\n    Set<DescriptorDigest> encounteredDigests=new HashSet<>();\n    for (    CachedLayerWithMetadata layer : cache.getMetadata().getLayers()) {\n      DescriptorDigest layerDigest=layer.getBlobDescriptor().getDigest();\n      Assert.assertFalse(encounteredDigests.contains(layerDigest));\n      encounteredDigests.add(layerDigest);\n    }\n    CachedLayerWithMetadata descriptorDigest1Layer=cache.getMetadata().getLayers().get(descriptorDigest1);\n    Assert.assertNotNull(descriptorDigest1Layer);\n    LayerMetadata layerMetadata=descriptorDigest1Layer.getMetadata();\n    Assert.assertNotNull(layerMetadata);\n    Assert.assertEquals(1,layerMetadata.getEntries().size());\n    Assert.assertEquals(FileTime.from(Instant.EPOCH),layerMetadata.getLastModifiedTime());\n    Assert.assertEquals(layerEntry2.getSourceFiles().stream().map(Path::toString).collect(ImmutableList.toImmutableList()),layerMetadata.getEntries().get(0).getSourceFilesStrings());\n    Assert.assertEquals(layerEntry2.getExtractionPath(),layerMetadata.getEntries().get(0).getExtractionPath());\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 388,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 111,
        "startColumnNumber" : 56,
        "endLineNumber" : 111,
        "endColumnNumber" : 84
      },
      "nodeContext" : "FileTime.from(Instant.now())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.time.Instant"
  }, {
    "nodeContext" : "Instant",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 113,
      "startColumnNumber" : 72,
      "endLineNumber" : 113,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 113,
        "startColumnNumber" : 72,
        "endLineNumber" : 113,
        "endColumnNumber" : 85
      },
      "nodeContext" : "Instant.EPOCH",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 113,
        "startColumnNumber" : 58,
        "endLineNumber" : 113,
        "endColumnNumber" : 86
      },
      "nodeContext" : "FileTime.from(Instant.EPOCH)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 113,
        "startColumnNumber" : 8,
        "endLineNumber" : 113,
        "endColumnNumber" : 87
      },
      "nodeContext" : "LayerMetadata.from(ImmutableList.of(layerEntry2),FileTime.from(Instant.EPOCH))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 112,
        "startColumnNumber" : 18,
        "endLineNumber" : 113,
        "endColumnNumber" : 87
      },
      "nodeContext" : "layerMetadata2=LayerMetadata.from(ImmutableList.of(layerEntry2),FileTime.from(Instant.EPOCH))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 112,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 88
      },
      "nodeContext" : "LayerMetadata layerMetadata2=LayerMetadata.from(ImmutableList.of(layerEntry2),FileTime.from(Instant.EPOCH));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3731,
        "startLineNumber" : 86,
        "startColumnNumber" : 95,
        "endLineNumber" : 167,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Path cacheDirectory=temporaryCacheDirectory.newFolder().toPath();\n  Path resourceMetadataJsonPath=PlatformSpecificMetadataJson.getMetadataJsonFile();\n  Path testMetadataJsonPath=cacheDirectory.resolve(CacheFiles.METADATA_FILENAME);\n  Files.copy(resourceMetadataJsonPath,testMetadataJsonPath);\n  DescriptorDigest descriptorDigest1=DescriptorDigest.fromHash(\"8c662931926fa990b41da3c9f42663a537ccd498130030f9149173a0493832ad\");\n  DescriptorDigest descriptorDigest2=DescriptorDigest.fromHash(\"6f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef\");\n  LayerEntry layerEntry1=new LayerEntry(ImmutableList.of(Paths.get(\"some\",\"file\"),Paths.get(\"some\",\"other\",\"file\")),\"extractionPath1\");\n  LayerEntry layerEntry2=new LayerEntry(ImmutableList.of(Paths.get(\"another\",\"file\"),Paths.get(\"yet\",\"another\",\"file\")),\"extractionPath2\");\n  LayerMetadata layerMetadata1=LayerMetadata.from(ImmutableList.of(layerEntry1,layerEntry2),FileTime.from(Instant.now()));\n  LayerMetadata layerMetadata2=LayerMetadata.from(ImmutableList.of(layerEntry2),FileTime.from(Instant.EPOCH));\n  DescriptorDigest mockDiffId=DescriptorDigest.fromHash(\"91e0cae00b86c289b33fee303a807ae72dd9f0315c16b74e6ab0cdbe9d996c10\");\n  List<CachedLayerWithMetadata> cachedLayersWithMetadata=Arrays.asList(new CachedLayerWithMetadata(new CachedLayer(Paths.get(\"nonexistent\"),new BlobDescriptor(descriptorDigest1),mockDiffId),layerMetadata1),new CachedLayerWithMetadata(new CachedLayer(Paths.get(\"nonexistent\"),new BlobDescriptor(descriptorDigest2),mockDiffId),layerMetadata2),new CachedLayerWithMetadata(new CachedLayer(Paths.get(\"nonexistent\"),new BlobDescriptor(descriptorDigest1),mockDiffId),layerMetadata2));\n  try (Cache cache=Cache.init(cacheDirectory)){\n    cache.addCachedLayersWithMetadataToMetadata(cachedLayersWithMetadata);\n  }\n   try (Cache cache=Cache.init(cacheDirectory)){\n    Set<DescriptorDigest> encounteredDigests=new HashSet<>();\n    for (    CachedLayerWithMetadata layer : cache.getMetadata().getLayers()) {\n      DescriptorDigest layerDigest=layer.getBlobDescriptor().getDigest();\n      Assert.assertFalse(encounteredDigests.contains(layerDigest));\n      encounteredDigests.add(layerDigest);\n    }\n    CachedLayerWithMetadata descriptorDigest1Layer=cache.getMetadata().getLayers().get(descriptorDigest1);\n    Assert.assertNotNull(descriptorDigest1Layer);\n    LayerMetadata layerMetadata=descriptorDigest1Layer.getMetadata();\n    Assert.assertNotNull(layerMetadata);\n    Assert.assertEquals(1,layerMetadata.getEntries().size());\n    Assert.assertEquals(FileTime.from(Instant.EPOCH),layerMetadata.getLastModifiedTime());\n    Assert.assertEquals(layerEntry2.getSourceFiles().stream().map(Path::toString).collect(ImmutableList.toImmutableList()),layerMetadata.getEntries().get(0).getSourceFilesStrings());\n    Assert.assertEquals(layerEntry2.getExtractionPath(),layerMetadata.getEntries().get(0).getExtractionPath());\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 374,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3879,
        "startLineNumber" : 84,
        "startColumnNumber" : 2,
        "endLineNumber" : 167,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void test_saveMetadata_noDuplicates() throws IOException, CacheMetadataCorruptedException, DigestException, URISyntaxException {\n  Path cacheDirectory=temporaryCacheDirectory.newFolder().toPath();\n  Path resourceMetadataJsonPath=PlatformSpecificMetadataJson.getMetadataJsonFile();\n  Path testMetadataJsonPath=cacheDirectory.resolve(CacheFiles.METADATA_FILENAME);\n  Files.copy(resourceMetadataJsonPath,testMetadataJsonPath);\n  DescriptorDigest descriptorDigest1=DescriptorDigest.fromHash(\"8c662931926fa990b41da3c9f42663a537ccd498130030f9149173a0493832ad\");\n  DescriptorDigest descriptorDigest2=DescriptorDigest.fromHash(\"6f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef\");\n  LayerEntry layerEntry1=new LayerEntry(ImmutableList.of(Paths.get(\"some\",\"file\"),Paths.get(\"some\",\"other\",\"file\")),\"extractionPath1\");\n  LayerEntry layerEntry2=new LayerEntry(ImmutableList.of(Paths.get(\"another\",\"file\"),Paths.get(\"yet\",\"another\",\"file\")),\"extractionPath2\");\n  LayerMetadata layerMetadata1=LayerMetadata.from(ImmutableList.of(layerEntry1,layerEntry2),FileTime.from(Instant.now()));\n  LayerMetadata layerMetadata2=LayerMetadata.from(ImmutableList.of(layerEntry2),FileTime.from(Instant.EPOCH));\n  DescriptorDigest mockDiffId=DescriptorDigest.fromHash(\"91e0cae00b86c289b33fee303a807ae72dd9f0315c16b74e6ab0cdbe9d996c10\");\n  List<CachedLayerWithMetadata> cachedLayersWithMetadata=Arrays.asList(new CachedLayerWithMetadata(new CachedLayer(Paths.get(\"nonexistent\"),new BlobDescriptor(descriptorDigest1),mockDiffId),layerMetadata1),new CachedLayerWithMetadata(new CachedLayer(Paths.get(\"nonexistent\"),new BlobDescriptor(descriptorDigest2),mockDiffId),layerMetadata2),new CachedLayerWithMetadata(new CachedLayer(Paths.get(\"nonexistent\"),new BlobDescriptor(descriptorDigest1),mockDiffId),layerMetadata2));\n  try (Cache cache=Cache.init(cacheDirectory)){\n    cache.addCachedLayersWithMetadataToMetadata(cachedLayersWithMetadata);\n  }\n   try (Cache cache=Cache.init(cacheDirectory)){\n    Set<DescriptorDigest> encounteredDigests=new HashSet<>();\n    for (    CachedLayerWithMetadata layer : cache.getMetadata().getLayers()) {\n      DescriptorDigest layerDigest=layer.getBlobDescriptor().getDigest();\n      Assert.assertFalse(encounteredDigests.contains(layerDigest));\n      encounteredDigests.add(layerDigest);\n    }\n    CachedLayerWithMetadata descriptorDigest1Layer=cache.getMetadata().getLayers().get(descriptorDigest1);\n    Assert.assertNotNull(descriptorDigest1Layer);\n    LayerMetadata layerMetadata=descriptorDigest1Layer.getMetadata();\n    Assert.assertNotNull(layerMetadata);\n    Assert.assertEquals(1,layerMetadata.getEntries().size());\n    Assert.assertEquals(FileTime.from(Instant.EPOCH),layerMetadata.getLastModifiedTime());\n    Assert.assertEquals(layerEntry2.getSourceFiles().stream().map(Path::toString).collect(ImmutableList.toImmutableList()),layerMetadata.getEntries().get(0).getSourceFilesStrings());\n    Assert.assertEquals(layerEntry2.getExtractionPath(),layerMetadata.getEntries().get(0).getExtractionPath());\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 388,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 113,
        "startColumnNumber" : 8,
        "endLineNumber" : 113,
        "endColumnNumber" : 87
      },
      "nodeContext" : "LayerMetadata.from(ImmutableList.of(layerEntry2),FileTime.from(Instant.EPOCH))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.time.Instant"
  }, {
    "nodeContext" : "Instant",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 156,
      "startColumnNumber" : 40,
      "endLineNumber" : 156,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 156,
        "startColumnNumber" : 40,
        "endLineNumber" : 156,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Instant.EPOCH",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 156,
        "startColumnNumber" : 26,
        "endLineNumber" : 156,
        "endColumnNumber" : 54
      },
      "nodeContext" : "FileTime.from(Instant.EPOCH)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 156,
        "startColumnNumber" : 6,
        "endLineNumber" : 156,
        "endColumnNumber" : 92
      },
      "nodeContext" : "Assert.assertEquals(FileTime.from(Instant.EPOCH),layerMetadata.getLastModifiedTime())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 156,
        "startColumnNumber" : 6,
        "endLineNumber" : 156,
        "endColumnNumber" : 93
      },
      "nodeContext" : "Assert.assertEquals(FileTime.from(Instant.EPOCH),layerMetadata.getLastModifiedTime());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1289,
        "startLineNumber" : 141,
        "startColumnNumber" : 51,
        "endLineNumber" : 166,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Set<DescriptorDigest> encounteredDigests=new HashSet<>();\n  for (  CachedLayerWithMetadata layer : cache.getMetadata().getLayers()) {\n    DescriptorDigest layerDigest=layer.getBlobDescriptor().getDigest();\n    Assert.assertFalse(encounteredDigests.contains(layerDigest));\n    encounteredDigests.add(layerDigest);\n  }\n  CachedLayerWithMetadata descriptorDigest1Layer=cache.getMetadata().getLayers().get(descriptorDigest1);\n  Assert.assertNotNull(descriptorDigest1Layer);\n  LayerMetadata layerMetadata=descriptorDigest1Layer.getMetadata();\n  Assert.assertNotNull(layerMetadata);\n  Assert.assertEquals(1,layerMetadata.getEntries().size());\n  Assert.assertEquals(FileTime.from(Instant.EPOCH),layerMetadata.getLastModifiedTime());\n  Assert.assertEquals(layerEntry2.getSourceFiles().stream().map(Path::toString).collect(ImmutableList.toImmutableList()),layerMetadata.getEntries().get(0).getSourceFilesStrings());\n  Assert.assertEquals(layerEntry2.getExtractionPath(),layerMetadata.getEntries().get(0).getExtractionPath());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 143,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1336,
        "startLineNumber" : 141,
        "startColumnNumber" : 4,
        "endLineNumber" : 166,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (Cache cache=Cache.init(cacheDirectory)){\n  Set<DescriptorDigest> encounteredDigests=new HashSet<>();\n  for (  CachedLayerWithMetadata layer : cache.getMetadata().getLayers()) {\n    DescriptorDigest layerDigest=layer.getBlobDescriptor().getDigest();\n    Assert.assertFalse(encounteredDigests.contains(layerDigest));\n    encounteredDigests.add(layerDigest);\n  }\n  CachedLayerWithMetadata descriptorDigest1Layer=cache.getMetadata().getLayers().get(descriptorDigest1);\n  Assert.assertNotNull(descriptorDigest1Layer);\n  LayerMetadata layerMetadata=descriptorDigest1Layer.getMetadata();\n  Assert.assertNotNull(layerMetadata);\n  Assert.assertEquals(1,layerMetadata.getEntries().size());\n  Assert.assertEquals(FileTime.from(Instant.EPOCH),layerMetadata.getLastModifiedTime());\n  Assert.assertEquals(layerEntry2.getSourceFiles().stream().map(Path::toString).collect(ImmutableList.toImmutableList()),layerMetadata.getEntries().get(0).getSourceFilesStrings());\n  Assert.assertEquals(layerEntry2.getExtractionPath(),layerMetadata.getEntries().get(0).getExtractionPath());\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 153,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3731,
        "startLineNumber" : 86,
        "startColumnNumber" : 95,
        "endLineNumber" : 167,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Path cacheDirectory=temporaryCacheDirectory.newFolder().toPath();\n  Path resourceMetadataJsonPath=PlatformSpecificMetadataJson.getMetadataJsonFile();\n  Path testMetadataJsonPath=cacheDirectory.resolve(CacheFiles.METADATA_FILENAME);\n  Files.copy(resourceMetadataJsonPath,testMetadataJsonPath);\n  DescriptorDigest descriptorDigest1=DescriptorDigest.fromHash(\"8c662931926fa990b41da3c9f42663a537ccd498130030f9149173a0493832ad\");\n  DescriptorDigest descriptorDigest2=DescriptorDigest.fromHash(\"6f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef\");\n  LayerEntry layerEntry1=new LayerEntry(ImmutableList.of(Paths.get(\"some\",\"file\"),Paths.get(\"some\",\"other\",\"file\")),\"extractionPath1\");\n  LayerEntry layerEntry2=new LayerEntry(ImmutableList.of(Paths.get(\"another\",\"file\"),Paths.get(\"yet\",\"another\",\"file\")),\"extractionPath2\");\n  LayerMetadata layerMetadata1=LayerMetadata.from(ImmutableList.of(layerEntry1,layerEntry2),FileTime.from(Instant.now()));\n  LayerMetadata layerMetadata2=LayerMetadata.from(ImmutableList.of(layerEntry2),FileTime.from(Instant.EPOCH));\n  DescriptorDigest mockDiffId=DescriptorDigest.fromHash(\"91e0cae00b86c289b33fee303a807ae72dd9f0315c16b74e6ab0cdbe9d996c10\");\n  List<CachedLayerWithMetadata> cachedLayersWithMetadata=Arrays.asList(new CachedLayerWithMetadata(new CachedLayer(Paths.get(\"nonexistent\"),new BlobDescriptor(descriptorDigest1),mockDiffId),layerMetadata1),new CachedLayerWithMetadata(new CachedLayer(Paths.get(\"nonexistent\"),new BlobDescriptor(descriptorDigest2),mockDiffId),layerMetadata2),new CachedLayerWithMetadata(new CachedLayer(Paths.get(\"nonexistent\"),new BlobDescriptor(descriptorDigest1),mockDiffId),layerMetadata2));\n  try (Cache cache=Cache.init(cacheDirectory)){\n    cache.addCachedLayersWithMetadataToMetadata(cachedLayersWithMetadata);\n  }\n   try (Cache cache=Cache.init(cacheDirectory)){\n    Set<DescriptorDigest> encounteredDigests=new HashSet<>();\n    for (    CachedLayerWithMetadata layer : cache.getMetadata().getLayers()) {\n      DescriptorDigest layerDigest=layer.getBlobDescriptor().getDigest();\n      Assert.assertFalse(encounteredDigests.contains(layerDigest));\n      encounteredDigests.add(layerDigest);\n    }\n    CachedLayerWithMetadata descriptorDigest1Layer=cache.getMetadata().getLayers().get(descriptorDigest1);\n    Assert.assertNotNull(descriptorDigest1Layer);\n    LayerMetadata layerMetadata=descriptorDigest1Layer.getMetadata();\n    Assert.assertNotNull(layerMetadata);\n    Assert.assertEquals(1,layerMetadata.getEntries().size());\n    Assert.assertEquals(FileTime.from(Instant.EPOCH),layerMetadata.getLastModifiedTime());\n    Assert.assertEquals(layerEntry2.getSourceFiles().stream().map(Path::toString).collect(ImmutableList.toImmutableList()),layerMetadata.getEntries().get(0).getSourceFilesStrings());\n    Assert.assertEquals(layerEntry2.getExtractionPath(),layerMetadata.getEntries().get(0).getExtractionPath());\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 374,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3879,
        "startLineNumber" : 84,
        "startColumnNumber" : 2,
        "endLineNumber" : 167,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void test_saveMetadata_noDuplicates() throws IOException, CacheMetadataCorruptedException, DigestException, URISyntaxException {\n  Path cacheDirectory=temporaryCacheDirectory.newFolder().toPath();\n  Path resourceMetadataJsonPath=PlatformSpecificMetadataJson.getMetadataJsonFile();\n  Path testMetadataJsonPath=cacheDirectory.resolve(CacheFiles.METADATA_FILENAME);\n  Files.copy(resourceMetadataJsonPath,testMetadataJsonPath);\n  DescriptorDigest descriptorDigest1=DescriptorDigest.fromHash(\"8c662931926fa990b41da3c9f42663a537ccd498130030f9149173a0493832ad\");\n  DescriptorDigest descriptorDigest2=DescriptorDigest.fromHash(\"6f70bf18a086007016e948b04aed3b82103a36bea41755b6cddfaf10ace3c6ef\");\n  LayerEntry layerEntry1=new LayerEntry(ImmutableList.of(Paths.get(\"some\",\"file\"),Paths.get(\"some\",\"other\",\"file\")),\"extractionPath1\");\n  LayerEntry layerEntry2=new LayerEntry(ImmutableList.of(Paths.get(\"another\",\"file\"),Paths.get(\"yet\",\"another\",\"file\")),\"extractionPath2\");\n  LayerMetadata layerMetadata1=LayerMetadata.from(ImmutableList.of(layerEntry1,layerEntry2),FileTime.from(Instant.now()));\n  LayerMetadata layerMetadata2=LayerMetadata.from(ImmutableList.of(layerEntry2),FileTime.from(Instant.EPOCH));\n  DescriptorDigest mockDiffId=DescriptorDigest.fromHash(\"91e0cae00b86c289b33fee303a807ae72dd9f0315c16b74e6ab0cdbe9d996c10\");\n  List<CachedLayerWithMetadata> cachedLayersWithMetadata=Arrays.asList(new CachedLayerWithMetadata(new CachedLayer(Paths.get(\"nonexistent\"),new BlobDescriptor(descriptorDigest1),mockDiffId),layerMetadata1),new CachedLayerWithMetadata(new CachedLayer(Paths.get(\"nonexistent\"),new BlobDescriptor(descriptorDigest2),mockDiffId),layerMetadata2),new CachedLayerWithMetadata(new CachedLayer(Paths.get(\"nonexistent\"),new BlobDescriptor(descriptorDigest1),mockDiffId),layerMetadata2));\n  try (Cache cache=Cache.init(cacheDirectory)){\n    cache.addCachedLayersWithMetadataToMetadata(cachedLayersWithMetadata);\n  }\n   try (Cache cache=Cache.init(cacheDirectory)){\n    Set<DescriptorDigest> encounteredDigests=new HashSet<>();\n    for (    CachedLayerWithMetadata layer : cache.getMetadata().getLayers()) {\n      DescriptorDigest layerDigest=layer.getBlobDescriptor().getDigest();\n      Assert.assertFalse(encounteredDigests.contains(layerDigest));\n      encounteredDigests.add(layerDigest);\n    }\n    CachedLayerWithMetadata descriptorDigest1Layer=cache.getMetadata().getLayers().get(descriptorDigest1);\n    Assert.assertNotNull(descriptorDigest1Layer);\n    LayerMetadata layerMetadata=descriptorDigest1Layer.getMetadata();\n    Assert.assertNotNull(layerMetadata);\n    Assert.assertEquals(1,layerMetadata.getEntries().size());\n    Assert.assertEquals(FileTime.from(Instant.EPOCH),layerMetadata.getLastModifiedTime());\n    Assert.assertEquals(layerEntry2.getSourceFiles().stream().map(Path::toString).collect(ImmutableList.toImmutableList()),layerMetadata.getEntries().get(0).getSourceFilesStrings());\n    Assert.assertEquals(layerEntry2.getExtractionPath(),layerMetadata.getEntries().get(0).getExtractionPath());\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 388,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 156,
        "startColumnNumber" : 6,
        "endLineNumber" : 156,
        "endColumnNumber" : 93
      },
      "nodeContext" : "Assert.assertEquals(FileTime.from(Instant.EPOCH),layerMetadata.getLastModifiedTime());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.time.Instant"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 111,
    "startColumnNumber" : 70,
    "endLineNumber" : 111,
    "endColumnNumber" : 77
  }, {
    "charLength" : 7,
    "startLineNumber" : 113,
    "startColumnNumber" : 72,
    "endLineNumber" : 113,
    "endColumnNumber" : 79
  }, {
    "charLength" : 7,
    "startLineNumber" : 156,
    "startColumnNumber" : 40,
    "endLineNumber" : 156,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 6
  } ]
}