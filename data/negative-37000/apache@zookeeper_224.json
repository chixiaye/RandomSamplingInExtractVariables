{
  "id" : 224,
  "expression" : "results.get(3)",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/src/java/test/org/apache/zookeeper/test/AsyncTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "results.get(3)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 225,
      "startColumnNumber" : 34,
      "endLineNumber" : 225,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 225,
        "startColumnNumber" : 28,
        "endLineNumber" : 225,
        "endColumnNumber" : 48
      },
      "nodeContext" : "(int)results.get(3)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 225,
        "startColumnNumber" : 12,
        "endLineNumber" : 225,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertEquals(0,(int)results.get(3))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 225,
        "startColumnNumber" : 12,
        "endLineNumber" : 225,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertEquals(0,(int)results.get(3));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 916,
        "startLineNumber" : 210,
        "startColumnNumber" : 12,
        "endLineNumber" : 227,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  zk.addAuthInfo(\"digest\",\"ben:passwd\".getBytes());\n  zk.create(\"/ben\",new byte[0],Ids.READ_ACL_UNSAFE,CreateMode.PERSISTENT,this,results);\n  zk.create(\"/ben/2\",new byte[0],Ids.CREATOR_ALL_ACL,CreateMode.PERSISTENT,this,results);\n  zk.delete(\"/ben\",-1,this,results);\n  zk.create(\"/ben2\",new byte[0],Ids.CREATOR_ALL_ACL,CreateMode.PERSISTENT,this,results);\n  zk.getData(\"/ben2\",false,this,results);\nsynchronized (results) {\n    while (results.size() < 5) {\n      results.wait();\n    }\n  }\n  assertEquals(0,(int)results.get(0));\n  assertEquals(Code.NOAUTH,Code.get((int)results.get(1)));\n  assertEquals(0,(int)results.get(2));\n  assertEquals(0,(int)results.get(3));\n  assertEquals(0,(int)results.get(4));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 149,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 964,
        "startLineNumber" : 210,
        "startColumnNumber" : 8,
        "endLineNumber" : 229,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  zk.addAuthInfo(\"digest\",\"ben:passwd\".getBytes());\n  zk.create(\"/ben\",new byte[0],Ids.READ_ACL_UNSAFE,CreateMode.PERSISTENT,this,results);\n  zk.create(\"/ben/2\",new byte[0],Ids.CREATOR_ALL_ACL,CreateMode.PERSISTENT,this,results);\n  zk.delete(\"/ben\",-1,this,results);\n  zk.create(\"/ben2\",new byte[0],Ids.CREATOR_ALL_ACL,CreateMode.PERSISTENT,this,results);\n  zk.getData(\"/ben2\",false,this,results);\nsynchronized (results) {\n    while (results.size() < 5) {\n      results.wait();\n    }\n  }\n  assertEquals(0,(int)results.get(0));\n  assertEquals(Code.NOAUTH,Code.get((int)results.get(1)));\n  assertEquals(0,(int)results.get(2));\n  assertEquals(0,(int)results.get(3));\n  assertEquals(0,(int)results.get(4));\n}\n  finally {\n  zk.close();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 155,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1661,
        "startLineNumber" : 207,
        "startColumnNumber" : 4,
        "endLineNumber" : 251,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ZooKeeper zk=null;\n  zk=createClient();\n  try {\n    zk.addAuthInfo(\"digest\",\"ben:passwd\".getBytes());\n    zk.create(\"/ben\",new byte[0],Ids.READ_ACL_UNSAFE,CreateMode.PERSISTENT,this,results);\n    zk.create(\"/ben/2\",new byte[0],Ids.CREATOR_ALL_ACL,CreateMode.PERSISTENT,this,results);\n    zk.delete(\"/ben\",-1,this,results);\n    zk.create(\"/ben2\",new byte[0],Ids.CREATOR_ALL_ACL,CreateMode.PERSISTENT,this,results);\n    zk.getData(\"/ben2\",false,this,results);\nsynchronized (results) {\n      while (results.size() < 5) {\n        results.wait();\n      }\n    }\n    assertEquals(0,(int)results.get(0));\n    assertEquals(Code.NOAUTH,Code.get((int)results.get(1)));\n    assertEquals(0,(int)results.get(2));\n    assertEquals(0,(int)results.get(3));\n    assertEquals(0,(int)results.get(4));\n  }\n  finally {\n    zk.close();\n  }\n  zk=createClient();\n  try {\n    zk.addAuthInfo(\"digest\",\"ben:passwd2\".getBytes());\n    try {\n      zk.getData(\"/ben2\",false,new Stat());\n      fail(\"Should have received a permission error\");\n    }\n catch (    KeeperException e) {\n      assertEquals(Code.NOAUTH,e.code());\n    }\n  }\n  finally {\n    zk.close();\n  }\n  zk=createClient();\n  try {\n    zk.addAuthInfo(\"digest\",\"ben:passwd\".getBytes());\n    zk.getData(\"/ben2\",false,new Stat());\n  }\n  finally {\n    zk.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 246,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1765,
        "startLineNumber" : 204,
        "startColumnNumber" : 4,
        "endLineNumber" : 251,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testAsync() throws IOException, InterruptedException, KeeperException {\n  ZooKeeper zk=null;\n  zk=createClient();\n  try {\n    zk.addAuthInfo(\"digest\",\"ben:passwd\".getBytes());\n    zk.create(\"/ben\",new byte[0],Ids.READ_ACL_UNSAFE,CreateMode.PERSISTENT,this,results);\n    zk.create(\"/ben/2\",new byte[0],Ids.CREATOR_ALL_ACL,CreateMode.PERSISTENT,this,results);\n    zk.delete(\"/ben\",-1,this,results);\n    zk.create(\"/ben2\",new byte[0],Ids.CREATOR_ALL_ACL,CreateMode.PERSISTENT,this,results);\n    zk.getData(\"/ben2\",false,this,results);\nsynchronized (results) {\n      while (results.size() < 5) {\n        results.wait();\n      }\n    }\n    assertEquals(0,(int)results.get(0));\n    assertEquals(Code.NOAUTH,Code.get((int)results.get(1)));\n    assertEquals(0,(int)results.get(2));\n    assertEquals(0,(int)results.get(3));\n    assertEquals(0,(int)results.get(4));\n  }\n  finally {\n    zk.close();\n  }\n  zk=createClient();\n  try {\n    zk.addAuthInfo(\"digest\",\"ben:passwd2\".getBytes());\n    try {\n      zk.getData(\"/ben2\",false,new Stat());\n      fail(\"Should have received a permission error\");\n    }\n catch (    KeeperException e) {\n      assertEquals(Code.NOAUTH,e.code());\n    }\n  }\n  finally {\n    zk.close();\n  }\n  zk=createClient();\n  try {\n    zk.addAuthInfo(\"digest\",\"ben:passwd\".getBytes());\n    zk.getData(\"/ben2\",false,new Stat());\n  }\n  finally {\n    zk.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 258,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 225,
        "startColumnNumber" : 12,
        "endLineNumber" : 225,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertEquals(0,(int)results.get(3));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.Integer"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 225,
    "startColumnNumber" : 34,
    "endLineNumber" : 225,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}