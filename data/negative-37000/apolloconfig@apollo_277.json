{
  "id" : 277,
  "expression" : "keys.iterator()",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-configservice/src/test/java/com/ctrip/framework/apollo/configservice/integration/ConfigFileControllerIntegrationTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "keys.iterator()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 153,
      "startColumnNumber" : 76,
      "endLineNumber" : 153,
      "endColumnNumber" : 91
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 153,
        "startColumnNumber" : 21,
        "endLineNumber" : 153,
        "endColumnNumber" : 92
      },
      "nodeContext" : "Strings.join(ConfigConsts.CLUSTER_NAMESPACE_SEPARATOR,keys.iterator())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 153,
        "startColumnNumber" : 11,
        "endLineNumber" : 153,
        "endColumnNumber" : 92
      },
      "nodeContext" : "message=Strings.join(ConfigConsts.CLUSTER_NAMESPACE_SEPARATOR,keys.iterator())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 153,
        "startColumnNumber" : 4,
        "endLineNumber" : 153,
        "endColumnNumber" : 93
      },
      "nodeContext" : "String message=Strings.join(ConfigConsts.CLUSTER_NAMESPACE_SEPARATOR,keys.iterator());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1862,
        "startLineNumber" : 122,
        "startColumnNumber" : 51,
        "endLineNumber" : 167,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ResponseEntity<String> response=restTemplate.getForEntity(\"{baseurl}/configfiles/{appId}/{clusterName}/{namespace}\",String.class,getHostUrl(),someAppId,someCluster,someNamespace);\n  String result=response.getBody();\n  assertEquals(HttpStatus.OK,response.getStatusCode());\n  assertTrue(result.contains(\"k2=v2\"));\n  String someReleaseName=\"someReleaseName\";\n  String someReleaseComment=\"someReleaseComment\";\n  Namespace namespace=new Namespace();\n  namespace.setAppId(someAppId);\n  namespace.setClusterName(someCluster);\n  namespace.setNamespaceName(someNamespace);\n  String someOwner=\"someOwner\";\n  Map<String,String> newConfigurations=ImmutableMap.of(\"k1\",\"v1-changed\",\"k2\",\"v2-changed\");\n  buildRelease(someReleaseName,someReleaseComment,namespace,newConfigurations,someOwner);\n  ResponseEntity<String> anotherResponse=restTemplate.getForEntity(\"{baseurl}/configfiles/{appId}/{clusterName}/{namespace}\",String.class,getHostUrl(),someAppId,someCluster,someNamespace);\n  assertEquals(response.getBody(),anotherResponse.getBody());\n  List<String> keys=Lists.newArrayList(someAppId,someCluster,someNamespace);\n  String message=Strings.join(ConfigConsts.CLUSTER_NAMESPACE_SEPARATOR,keys.iterator());\n  sendReleaseMessage(message);\n  TimeUnit.MILLISECONDS.sleep(500);\n  ResponseEntity<String> newResponse=restTemplate.getForEntity(\"{baseurl}/configfiles/{appId}/{clusterName}/{namespace}\",String.class,getHostUrl(),someAppId,someCluster,someNamespace);\n  result=newResponse.getBody();\n  assertEquals(HttpStatus.OK,response.getStatusCode());\n  assertTrue(result.contains(\"k1=v1-changed\"));\n  assertTrue(result.contains(\"k2=v2-changed\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 228,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2135,
        "startLineNumber" : 119,
        "startColumnNumber" : 2,
        "endLineNumber" : 167,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test @Sql(scripts=\"/integration-test/test-release.sql\",executionPhase=Sql.ExecutionPhase.BEFORE_TEST_METHOD) @Sql(scripts=\"/integration-test/cleanup.sql\",executionPhase=Sql.ExecutionPhase.AFTER_TEST_METHOD) public void testConfigChanged() throws Exception {\n  ResponseEntity<String> response=restTemplate.getForEntity(\"{baseurl}/configfiles/{appId}/{clusterName}/{namespace}\",String.class,getHostUrl(),someAppId,someCluster,someNamespace);\n  String result=response.getBody();\n  assertEquals(HttpStatus.OK,response.getStatusCode());\n  assertTrue(result.contains(\"k2=v2\"));\n  String someReleaseName=\"someReleaseName\";\n  String someReleaseComment=\"someReleaseComment\";\n  Namespace namespace=new Namespace();\n  namespace.setAppId(someAppId);\n  namespace.setClusterName(someCluster);\n  namespace.setNamespaceName(someNamespace);\n  String someOwner=\"someOwner\";\n  Map<String,String> newConfigurations=ImmutableMap.of(\"k1\",\"v1-changed\",\"k2\",\"v2-changed\");\n  buildRelease(someReleaseName,someReleaseComment,namespace,newConfigurations,someOwner);\n  ResponseEntity<String> anotherResponse=restTemplate.getForEntity(\"{baseurl}/configfiles/{appId}/{clusterName}/{namespace}\",String.class,getHostUrl(),someAppId,someCluster,someNamespace);\n  assertEquals(response.getBody(),anotherResponse.getBody());\n  List<String> keys=Lists.newArrayList(someAppId,someCluster,someNamespace);\n  String message=Strings.join(ConfigConsts.CLUSTER_NAMESPACE_SEPARATOR,keys.iterator());\n  sendReleaseMessage(message);\n  TimeUnit.MILLISECONDS.sleep(500);\n  ResponseEntity<String> newResponse=restTemplate.getForEntity(\"{baseurl}/configfiles/{appId}/{clusterName}/{namespace}\",String.class,getHostUrl(),someAppId,someCluster,someNamespace);\n  result=newResponse.getBody();\n  assertEquals(HttpStatus.OK,response.getStatusCode());\n  assertTrue(result.contains(\"k1=v1-changed\"));\n  assertTrue(result.contains(\"k2=v2-changed\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 260,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 153,
        "startColumnNumber" : 4,
        "endLineNumber" : 153,
        "endColumnNumber" : 93
      },
      "nodeContext" : "String message=Strings.join(ConfigConsts.CLUSTER_NAMESPACE_SEPARATOR,keys.iterator());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.util.Iterator<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 153,
    "startColumnNumber" : 76,
    "endLineNumber" : 153,
    "endColumnNumber" : 91
  } ],
  "layoutRelationDataList" : [ ]
}