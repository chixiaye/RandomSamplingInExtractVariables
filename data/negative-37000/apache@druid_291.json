{
  "id" : 291,
  "expression" : "new Property<>(PartitionsSpec.MAX_ROWS_PER_SEGMENT,adjustedMaxRowsPerSegment)",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/core/src/main/java/org/apache/druid/indexer/partitions/HashedPartitionsSpec.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Property<>(PartitionsSpec.MAX_ROWS_PER_SEGMENT,adjustedMaxRowsPerSegment)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 78,
      "startLineNumber" : 84,
      "startColumnNumber" : 8,
      "endLineNumber" : 84,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 82,
        "startColumnNumber" : 13,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "Checks.checkAtMostOneNotNull(target,new Property<>(PartitionsSpec.MAX_ROWS_PER_SEGMENT,adjustedMaxRowsPerSegment))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "target=Checks.checkAtMostOneNotNull(target,new Property<>(PartitionsSpec.MAX_ROWS_PER_SEGMENT,adjustedMaxRowsPerSegment))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 6
      },
      "nodeContext" : "target=Checks.checkAtMostOneNotNull(target,new Property<>(PartitionsSpec.MAX_ROWS_PER_SEGMENT,adjustedMaxRowsPerSegment));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2073,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 113,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Integer adjustedTargetRowsPerSegment=PartitionsSpec.resolveHistoricalNullIfNeeded(targetRowsPerSegment);\n  Integer adjustedNumShards=PartitionsSpec.resolveHistoricalNullIfNeeded(numShards);\n  Integer adjustedTargetPartitionSize=PartitionsSpec.resolveHistoricalNullIfNeeded(targetPartitionSize);\n  Integer adjustedMaxRowsPerSegment=PartitionsSpec.resolveHistoricalNullIfNeeded(maxRowsPerSegment);\n  Property<Integer> target=Checks.checkAtMostOneNotNull(DimensionBasedPartitionsSpec.TARGET_ROWS_PER_SEGMENT,adjustedTargetRowsPerSegment,DimensionBasedPartitionsSpec.TARGET_PARTITION_SIZE,adjustedTargetPartitionSize);\n  target=Checks.checkAtMostOneNotNull(target,new Property<>(PartitionsSpec.MAX_ROWS_PER_SEGMENT,adjustedMaxRowsPerSegment));\n  Checks.checkAtMostOneNotNull(target,new Property<>(NUM_SHARDS,adjustedNumShards));\n  this.partitionDimensions=partitionDimensions == null ? Collections.emptyList() : partitionDimensions;\n  this.partitionFunction=partitionFunction == null ? DEFAULT_HASH_FUNCTION : partitionFunction;\n  this.numShards=adjustedNumShards;\n  if (target.getValue() == null) {\n    this.maxRowsPerSegment=(this.numShards == null ? PartitionsSpec.DEFAULT_MAX_ROWS_PER_SEGMENT : null);\n  }\n else {\n    this.maxRowsPerSegment=target.getValue();\n  }\n  Preconditions.checkArgument(this.maxRowsPerSegment == null || this.maxRowsPerSegment > 0,\"%s[%s] should be positive\",target.getName(),target.getValue());\n  Preconditions.checkArgument(this.numShards == null || this.numShards > 0,\"numShards[%s] should be positive\",this.numShards);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 185,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2859,
        "startLineNumber" : 56,
        "startColumnNumber" : 2,
        "endLineNumber" : 113,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@JsonCreator public HashedPartitionsSpec(@JsonProperty(DimensionBasedPartitionsSpec.TARGET_ROWS_PER_SEGMENT) @Nullable Integer targetRowsPerSegment,@JsonProperty(NUM_SHARDS) @Nullable Integer numShards,@JsonProperty(\"partitionDimensions\") @Nullable List<String> partitionDimensions,@JsonProperty(\"partitionFunction\") @Nullable HashPartitionFunction partitionFunction,@Deprecated @JsonProperty(DimensionBasedPartitionsSpec.TARGET_PARTITION_SIZE) @Nullable Integer targetPartitionSize,@Deprecated @JsonProperty(PartitionsSpec.MAX_ROWS_PER_SEGMENT) @Nullable Integer maxRowsPerSegment){\n  Integer adjustedTargetRowsPerSegment=PartitionsSpec.resolveHistoricalNullIfNeeded(targetRowsPerSegment);\n  Integer adjustedNumShards=PartitionsSpec.resolveHistoricalNullIfNeeded(numShards);\n  Integer adjustedTargetPartitionSize=PartitionsSpec.resolveHistoricalNullIfNeeded(targetPartitionSize);\n  Integer adjustedMaxRowsPerSegment=PartitionsSpec.resolveHistoricalNullIfNeeded(maxRowsPerSegment);\n  Property<Integer> target=Checks.checkAtMostOneNotNull(DimensionBasedPartitionsSpec.TARGET_ROWS_PER_SEGMENT,adjustedTargetRowsPerSegment,DimensionBasedPartitionsSpec.TARGET_PARTITION_SIZE,adjustedTargetPartitionSize);\n  target=Checks.checkAtMostOneNotNull(target,new Property<>(PartitionsSpec.MAX_ROWS_PER_SEGMENT,adjustedMaxRowsPerSegment));\n  Checks.checkAtMostOneNotNull(target,new Property<>(NUM_SHARDS,adjustedNumShards));\n  this.partitionDimensions=partitionDimensions == null ? Collections.emptyList() : partitionDimensions;\n  this.partitionFunction=partitionFunction == null ? DEFAULT_HASH_FUNCTION : partitionFunction;\n  this.numShards=adjustedNumShards;\n  if (target.getValue() == null) {\n    this.maxRowsPerSegment=(this.numShards == null ? PartitionsSpec.DEFAULT_MAX_ROWS_PER_SEGMENT : null);\n  }\n else {\n    this.maxRowsPerSegment=target.getValue();\n  }\n  Preconditions.checkArgument(this.maxRowsPerSegment == null || this.maxRowsPerSegment > 0,\"%s[%s] should be positive\",target.getName(),target.getValue());\n  Preconditions.checkArgument(this.numShards == null || this.numShards > 0,\"numShards[%s] should be positive\",this.numShards);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 257,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 82,
        "startColumnNumber" : 13,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "Checks.checkAtMostOneNotNull(target,new Property<>(PartitionsSpec.MAX_ROWS_PER_SEGMENT,adjustedMaxRowsPerSegment))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 7,
    "type" : "org.apache.druid.indexer.Property<java.lang.Integer>"
  } ],
  "positionList" : [ {
    "charLength" : 78,
    "startLineNumber" : 84,
    "startColumnNumber" : 8,
    "endLineNumber" : 84,
    "endColumnNumber" : 86
  } ],
  "layoutRelationDataList" : [ ]
}