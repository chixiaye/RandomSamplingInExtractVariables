{
  "id" : 287,
  "expression" : "\"Unsupported type: \" + existingValue.getClass().getName()",
  "projectName" : "facebook@stetho",
  "commitID" : "fee68519d93899dc5cfe6b992f56916a03b279f2",
  "filePath" : "/stetho/src/main/java/com/facebook/stetho/inspector/domstorage/SharedPreferencesHelper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Unsupported type: \" + existingValue.getClass().getName()",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 57,
      "startLineNumber" : 89,
      "startColumnNumber" : 10,
      "endLineNumber" : 89,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 88,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 68
      },
      "nodeContext" : "new IllegalArgumentException(\"Unsupported type: \" + existingValue.getClass().getName())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 88,
        "startColumnNumber" : 6,
        "endLineNumber" : 89,
        "endColumnNumber" : 69
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Unsupported type: \" + existingValue.getClass().getName());\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 87,
        "startColumnNumber" : 11,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  throw new IllegalArgumentException(\"Unsupported type: \" + existingValue.getClass().getName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 514,
        "startLineNumber" : 75,
        "startColumnNumber" : 11,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (existingValue instanceof Set) {\n  try {\n    JSONArray obj=new JSONArray(newValue);\n    int objN=obj.length();\n    HashSet<String> set=new HashSet<String>(objN);\n    for (int i=0; i < objN; i++) {\n      set.add(obj.getString(i));\n    }\n    return set;\n  }\n catch (  JSONException e) {\n    throw new IllegalArgumentException(e);\n  }\n}\n else {\n  throw new IllegalArgumentException(\"Unsupported type: \" + existingValue.getClass().getName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 84,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 587,
        "startLineNumber" : 73,
        "startColumnNumber" : 11,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (existingValue instanceof String) {\n  return newValue;\n}\n else if (existingValue instanceof Set) {\n  try {\n    JSONArray obj=new JSONArray(newValue);\n    int objN=obj.length();\n    HashSet<String> set=new HashSet<String>(objN);\n    for (int i=0; i < objN; i++) {\n      set.add(obj.getString(i));\n    }\n    return set;\n  }\n catch (  JSONException e) {\n    throw new IllegalArgumentException(e);\n  }\n}\n else {\n  throw new IllegalArgumentException(\"Unsupported type: \" + existingValue.getClass().getName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 92,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 675,
        "startLineNumber" : 71,
        "startColumnNumber" : 11,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (existingValue instanceof Boolean) {\n  return parseBoolean(newValue);\n}\n else if (existingValue instanceof String) {\n  return newValue;\n}\n else if (existingValue instanceof Set) {\n  try {\n    JSONArray obj=new JSONArray(newValue);\n    int objN=obj.length();\n    HashSet<String> set=new HashSet<String>(objN);\n    for (int i=0; i < objN; i++) {\n      set.add(obj.getString(i));\n    }\n    return set;\n  }\n catch (  JSONException e) {\n    throw new IllegalArgumentException(e);\n  }\n}\n else {\n  throw new IllegalArgumentException(\"Unsupported type: \" + existingValue.getClass().getName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 102,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 765,
        "startLineNumber" : 69,
        "startColumnNumber" : 11,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (existingValue instanceof Float) {\n  return Float.parseFloat(newValue);\n}\n else if (existingValue instanceof Boolean) {\n  return parseBoolean(newValue);\n}\n else if (existingValue instanceof String) {\n  return newValue;\n}\n else if (existingValue instanceof Set) {\n  try {\n    JSONArray obj=new JSONArray(newValue);\n    int objN=obj.length();\n    HashSet<String> set=new HashSet<String>(objN);\n    for (int i=0; i < objN; i++) {\n      set.add(obj.getString(i));\n    }\n    return set;\n  }\n catch (  JSONException e) {\n    throw new IllegalArgumentException(e);\n  }\n}\n else {\n  throw new IllegalArgumentException(\"Unsupported type: \" + existingValue.getClass().getName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 113,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 852,
        "startLineNumber" : 67,
        "startColumnNumber" : 11,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (existingValue instanceof Long) {\n  return Long.parseLong(newValue);\n}\n else if (existingValue instanceof Float) {\n  return Float.parseFloat(newValue);\n}\n else if (existingValue instanceof Boolean) {\n  return parseBoolean(newValue);\n}\n else if (existingValue instanceof String) {\n  return newValue;\n}\n else if (existingValue instanceof Set) {\n  try {\n    JSONArray obj=new JSONArray(newValue);\n    int objN=obj.length();\n    HashSet<String> set=new HashSet<String>(objN);\n    for (int i=0; i < objN; i++) {\n      set.add(obj.getString(i));\n    }\n    return set;\n  }\n catch (  JSONException e) {\n    throw new IllegalArgumentException(e);\n  }\n}\n else {\n  throw new IllegalArgumentException(\"Unsupported type: \" + existingValue.getClass().getName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 944,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (existingValue instanceof Integer) {\n  return Integer.parseInt(newValue);\n}\n else if (existingValue instanceof Long) {\n  return Long.parseLong(newValue);\n}\n else if (existingValue instanceof Float) {\n  return Float.parseFloat(newValue);\n}\n else if (existingValue instanceof Boolean) {\n  return parseBoolean(newValue);\n}\n else if (existingValue instanceof String) {\n  return newValue;\n}\n else if (existingValue instanceof Set) {\n  try {\n    JSONArray obj=new JSONArray(newValue);\n    int objN=obj.length();\n    HashSet<String> set=new HashSet<String>(objN);\n    for (int i=0; i < objN; i++) {\n      set.add(obj.getString(i));\n    }\n    return set;\n  }\n catch (  JSONException e) {\n    throw new IllegalArgumentException(e);\n  }\n}\n else {\n  throw new IllegalArgumentException(\"Unsupported type: \" + existingValue.getClass().getName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 135,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 954,
        "startLineNumber" : 64,
        "startColumnNumber" : 38,
        "endLineNumber" : 91,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (existingValue instanceof Integer) {\n    return Integer.parseInt(newValue);\n  }\n else   if (existingValue instanceof Long) {\n    return Long.parseLong(newValue);\n  }\n else   if (existingValue instanceof Float) {\n    return Float.parseFloat(newValue);\n  }\n else   if (existingValue instanceof Boolean) {\n    return parseBoolean(newValue);\n  }\n else   if (existingValue instanceof String) {\n    return newValue;\n  }\n else   if (existingValue instanceof Set) {\n    try {\n      JSONArray obj=new JSONArray(newValue);\n      int objN=obj.length();\n      HashSet<String> set=new HashSet<String>(objN);\n      for (int i=0; i < objN; i++) {\n        set.add(obj.getString(i));\n      }\n      return set;\n    }\n catch (    JSONException e) {\n      throw new IllegalArgumentException(e);\n    }\n  }\n else {\n    throw new IllegalArgumentException(\"Unsupported type: \" + existingValue.getClass().getName());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1080,
        "startLineNumber" : 62,
        "startColumnNumber" : 2,
        "endLineNumber" : 91,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Nullable public static Object valueFromString(String newValue,Object existingValue) throws IllegalArgumentException {\n  if (existingValue instanceof Integer) {\n    return Integer.parseInt(newValue);\n  }\n else   if (existingValue instanceof Long) {\n    return Long.parseLong(newValue);\n  }\n else   if (existingValue instanceof Float) {\n    return Float.parseFloat(newValue);\n  }\n else   if (existingValue instanceof Boolean) {\n    return parseBoolean(newValue);\n  }\n else   if (existingValue instanceof String) {\n    return newValue;\n  }\n else   if (existingValue instanceof Set) {\n    try {\n      JSONArray obj=new JSONArray(newValue);\n      int objN=obj.length();\n      HashSet<String> set=new HashSet<String>(objN);\n      for (int i=0; i < objN; i++) {\n        set.add(obj.getString(i));\n      }\n      return set;\n    }\n catch (    JSONException e) {\n      throw new IllegalArgumentException(e);\n    }\n  }\n else {\n    throw new IllegalArgumentException(\"Unsupported type: \" + existingValue.getClass().getName());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 154,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 88,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 68
      },
      "nodeContext" : "new IllegalArgumentException(\"Unsupported type: \" + existingValue.getClass().getName())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 6,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 57,
    "startLineNumber" : 89,
    "startColumnNumber" : 10,
    "endLineNumber" : 89,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}