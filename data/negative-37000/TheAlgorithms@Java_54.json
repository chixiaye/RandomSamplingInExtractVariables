{
  "id" : 54,
  "expression" : "decryptedText",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/ciphers/AESEncryption.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "decryptedText",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 37,
      "startColumnNumber" : 42,
      "endLineNumber" : 37,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 37,
        "startColumnNumber" : 21,
        "endLineNumber" : 37,
        "endColumnNumber" : 55
      },
      "nodeContext" : "\"Descrypted Text:\" + decryptedText",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 37,
        "startColumnNumber" : 2,
        "endLineNumber" : 37,
        "endColumnNumber" : 56
      },
      "nodeContext" : "System.out.println(\"Descrypted Text:\" + decryptedText)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 37,
        "startColumnNumber" : 2,
        "endLineNumber" : 37,
        "endColumnNumber" : 57
      },
      "nodeContext" : "System.out.println(\"Descrypted Text:\" + decryptedText);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 467,
        "startLineNumber" : 28,
        "startColumnNumber" : 57,
        "endLineNumber" : 39,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String plainText=\"Hello World\";\n  SecretKey secKey=getSecretEncryptionKey();\n  byte[] cipherText=encryptText(plainText,secKey);\n  String decryptedText=decryptText(cipherText,secKey);\n  System.out.println(\"Original Text:\" + plainText);\n  System.out.println(\"AES Key (Hex Form):\" + bytesToHex(secKey.getEncoded()));\n  System.out.println(\"Encrypted Text (Hex Form):\" + bytesToHex(cipherText));\n  System.out.println(\"Descrypted Text:\" + decryptedText);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 734,
        "startLineNumber" : 22,
        "startColumnNumber" : 1,
        "endLineNumber" : 39,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 1. Generate a plain text for encryption 2. Get a secret key (printed in hexadecimal form). In actual use this must by encrypted and kept safe. The same key is required for decryption.\n */\npublic static void main(String[] args) throws Exception {\n  String plainText=\"Hello World\";\n  SecretKey secKey=getSecretEncryptionKey();\n  byte[] cipherText=encryptText(plainText,secKey);\n  String decryptedText=decryptText(cipherText,secKey);\n  System.out.println(\"Original Text:\" + plainText);\n  System.out.println(\"AES Key (Hex Form):\" + bytesToHex(secKey.getEncoded()));\n  System.out.println(\"Encrypted Text (Hex Form):\" + bytesToHex(cipherText));\n  System.out.println(\"Descrypted Text:\" + decryptedText);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 89,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 37,
        "startColumnNumber" : 2,
        "endLineNumber" : 37,
        "endColumnNumber" : 57
      },
      "nodeContext" : "System.out.println(\"Descrypted Text:\" + decryptedText);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 37,
    "startColumnNumber" : 42,
    "endLineNumber" : 37,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}