{
  "id" : 386,
  "expression" : "key",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-io/redis/src/main/java/org/apache/pulsar/io/redis/sink/RedisSink.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "key",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 128,
      "startColumnNumber" : 37,
      "endLineNumber" : 128,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 128,
        "startColumnNumber" : 20,
        "endLineNumber" : 128,
        "endColumnNumber" : 48
      },
      "nodeContext" : "recordsToSet.put(key,value)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 128,
        "startColumnNumber" : 20,
        "endLineNumber" : 128,
        "endColumnNumber" : 49
      },
      "nodeContext" : "recordsToSet.put(key,value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 368,
        "startLineNumber" : 123,
        "startColumnNumber" : 20,
        "endLineNumber" : 129,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  String recordKey=record.getKey().isPresent() ? record.getKey().get() : \"\";\n  byte[] key=recordKey.getBytes(StandardCharsets.UTF_8);\n  byte[] value=record.getValue();\n  recordsToSet.put(key,value);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 569,
        "startLineNumber" : 123,
        "startColumnNumber" : 16,
        "endLineNumber" : 133,
        "endColumnNumber" : 17
      },
      "nodeContext" : "try {\n  String recordKey=record.getKey().isPresent() ? record.getKey().get() : \"\";\n  byte[] key=recordKey.getBytes(StandardCharsets.UTF_8);\n  byte[] value=record.getValue();\n  recordsToSet.put(key,value);\n}\n catch (Exception e) {\n  record.fail();\n  recordsToFlush.remove(record);\n  log.warn(\"Record flush thread was exception \",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 67,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 601,
        "startLineNumber" : 122,
        "startColumnNumber" : 56,
        "endLineNumber" : 134,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  try {\n    String recordKey=record.getKey().isPresent() ? record.getKey().get() : \"\";\n    byte[] key=recordKey.getBytes(StandardCharsets.UTF_8);\n    byte[] value=record.getValue();\n    recordsToSet.put(key,value);\n  }\n catch (  Exception e) {\n    record.fail();\n    recordsToFlush.remove(record);\n    log.warn(\"Record flush thread was exception \",e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 645,
        "startLineNumber" : 122,
        "startColumnNumber" : 12,
        "endLineNumber" : 134,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Record<byte[]> record : recordsToFlush) {\n  try {\n    String recordKey=record.getKey().isPresent() ? record.getKey().get() : \"\";\n    byte[] key=recordKey.getBytes(StandardCharsets.UTF_8);\n    byte[] value=record.getValue();\n    recordsToSet.put(key,value);\n  }\n catch (  Exception e) {\n    record.fail();\n    recordsToFlush.remove(record);\n    log.warn(\"Record flush thread was exception \",e);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 78,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 669,
        "startLineNumber" : 121,
        "startColumnNumber" : 56,
        "endLineNumber" : 135,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  Record<byte[]> record : recordsToFlush) {\n    try {\n      String recordKey=record.getKey().isPresent() ? record.getKey().get() : \"\";\n      byte[] key=recordKey.getBytes(StandardCharsets.UTF_8);\n      byte[] value=record.getValue();\n      recordsToSet.put(key,value);\n    }\n catch (    Exception e) {\n      record.fail();\n      recordsToFlush.remove(record);\n      log.warn(\"Record flush thread was exception \",e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 717,
        "startLineNumber" : 121,
        "startColumnNumber" : 8,
        "endLineNumber" : 135,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (CollectionUtils.isNotEmpty(recordsToFlush)) {\n  for (  Record<byte[]> record : recordsToFlush) {\n    try {\n      String recordKey=record.getKey().isPresent() ? record.getKey().get() : \"\";\n      byte[] key=recordKey.getBytes(StandardCharsets.UTF_8);\n      byte[] value=record.getValue();\n      recordsToSet.put(key,value);\n    }\n catch (    Exception e) {\n      record.fail();\n      recordsToFlush.remove(record);\n      log.warn(\"Record flush thread was exception \",e);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 84,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2053,
        "startLineNumber" : 109,
        "startColumnNumber" : 25,
        "endLineNumber" : 158,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Map<byte[],byte[]> recordsToSet=new ConcurrentHashMap<>();\n  final List<Record<byte[]>> recordsToFlush;\nsynchronized (this) {\n    if (incomingList.isEmpty()) {\n      return;\n    }\n    recordsToFlush=incomingList;\n    incomingList=Lists.newArrayList();\n  }\n  if (CollectionUtils.isNotEmpty(recordsToFlush)) {\n    for (    Record<byte[]> record : recordsToFlush) {\n      try {\n        String recordKey=record.getKey().isPresent() ? record.getKey().get() : \"\";\n        byte[] key=recordKey.getBytes(StandardCharsets.UTF_8);\n        byte[] value=record.getValue();\n        recordsToSet.put(key,value);\n      }\n catch (      Exception e) {\n        record.fail();\n        recordsToFlush.remove(record);\n        log.warn(\"Record flush thread was exception \",e);\n      }\n    }\n  }\n  try {\n    if (recordsToSet.size() > 0) {\n      if (log.isDebugEnabled()) {\n        log.debug(\"Calling mset with {} values\",recordsToSet.size());\n      }\n      RedisFuture<?> future=redisSession.asyncCommands().mset(recordsToSet);\n      if (!future.await(operationTimeoutMs,TimeUnit.MILLISECONDS) || future.getError() != null) {\n        log.warn(\"Operation failed with error {} or timeout {} is exceeded\",future.getError(),operationTimeoutMs);\n        recordsToFlush.forEach(tRecord -> tRecord.fail());\n        return;\n      }\n    }\n    recordsToFlush.forEach(tRecord -> tRecord.ack());\n    recordsToSet.clear();\n    recordsToFlush.clear();\n  }\n catch (  InterruptedException e) {\n    recordsToFlush.forEach(tRecord -> tRecord.fail());\n    log.error(\"Redis mset data interrupted exception \",e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 245,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2074,
        "startLineNumber" : 109,
        "startColumnNumber" : 4,
        "endLineNumber" : 158,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void flush(){\n  final Map<byte[],byte[]> recordsToSet=new ConcurrentHashMap<>();\n  final List<Record<byte[]>> recordsToFlush;\nsynchronized (this) {\n    if (incomingList.isEmpty()) {\n      return;\n    }\n    recordsToFlush=incomingList;\n    incomingList=Lists.newArrayList();\n  }\n  if (CollectionUtils.isNotEmpty(recordsToFlush)) {\n    for (    Record<byte[]> record : recordsToFlush) {\n      try {\n        String recordKey=record.getKey().isPresent() ? record.getKey().get() : \"\";\n        byte[] key=recordKey.getBytes(StandardCharsets.UTF_8);\n        byte[] value=record.getValue();\n        recordsToSet.put(key,value);\n      }\n catch (      Exception e) {\n        record.fail();\n        recordsToFlush.remove(record);\n        log.warn(\"Record flush thread was exception \",e);\n      }\n    }\n  }\n  try {\n    if (recordsToSet.size() > 0) {\n      if (log.isDebugEnabled()) {\n        log.debug(\"Calling mset with {} values\",recordsToSet.size());\n      }\n      RedisFuture<?> future=redisSession.asyncCommands().mset(recordsToSet);\n      if (!future.await(operationTimeoutMs,TimeUnit.MILLISECONDS) || future.getError() != null) {\n        log.warn(\"Operation failed with error {} or timeout {} is exceeded\",future.getError(),operationTimeoutMs);\n        recordsToFlush.forEach(tRecord -> tRecord.fail());\n        return;\n      }\n    }\n    recordsToFlush.forEach(tRecord -> tRecord.ack());\n    recordsToSet.clear();\n    recordsToFlush.clear();\n  }\n catch (  InterruptedException e) {\n    recordsToFlush.forEach(tRecord -> tRecord.fail());\n    log.error(\"Redis mset data interrupted exception \",e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 249,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 128,
        "startColumnNumber" : 20,
        "endLineNumber" : 128,
        "endColumnNumber" : 49
      },
      "nodeContext" : "recordsToSet.put(key,value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "byte[]"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 128,
    "startColumnNumber" : 37,
    "endLineNumber" : 128,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}