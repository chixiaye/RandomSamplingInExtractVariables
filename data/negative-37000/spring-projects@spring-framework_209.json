{
  "id" : 209,
  "expression" : "new IllegalStateException(\"Values mismatch, value parameter at position \" + parameterPosition + \" cannot be matched against \"+ values.length+ \" value(s)\")",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-context-support/src/main/java/org/springframework/cache/jcache/interceptor/CachePutOperation.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new IllegalStateException(\"Values mismatch, value parameter at position \" + parameterPosition + \" cannot be matched against \"+ values.length+ \" value(s)\")",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 161,
      "startLineNumber" : 86,
      "startColumnNumber" : 9,
      "endLineNumber" : 87,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 11,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 86,
        "startColumnNumber" : 3,
        "endLineNumber" : 87,
        "endColumnNumber" : 86
      },
      "nodeContext" : "throw new IllegalStateException(\"Values mismatch, value parameter at position \" + parameterPosition + \" cannot be matched against \"+ values.length+ \" value(s)\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 85,
        "startColumnNumber" : 42,
        "endLineNumber" : 88,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  throw new IllegalStateException(\"Values mismatch, value parameter at position \" + parameterPosition + \" cannot be matched against \"+ values.length+ \" value(s)\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 85,
        "startColumnNumber" : 2,
        "endLineNumber" : 88,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (parameterPosition >= values.length) {\n  throw new IllegalStateException(\"Values mismatch, value parameter at position \" + parameterPosition + \" cannot be matched against \"+ values.length+ \" value(s)\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 390,
        "startLineNumber" : 83,
        "startColumnNumber" : 69,
        "endLineNumber" : 90,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int parameterPosition=this.valueParameterDetail.getParameterPosition();\n  if (parameterPosition >= values.length) {\n    throw new IllegalStateException(\"Values mismatch, value parameter at position \" + parameterPosition + \" cannot be matched against \"+ values.length+ \" value(s)\");\n  }\n  return this.valueParameterDetail.toCacheInvocationParameter(values[parameterPosition]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 801,
        "startLineNumber" : 76,
        "startColumnNumber" : 1,
        "endLineNumber" : 90,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Return the  {@link CacheInvocationParameter} for the parameter holding the valueto cache. <p>The method arguments must match the signature of the related method invocation\n * @param values the parameters value for a particular invocation\n * @return the {@link CacheInvocationParameter} instance for the value parameter\n */\npublic CacheInvocationParameter getValueParameter(Object... values){\n  int parameterPosition=this.valueParameterDetail.getParameterPosition();\n  if (parameterPosition >= values.length) {\n    throw new IllegalStateException(\"Values mismatch, value parameter at position \" + parameterPosition + \" cannot be matched against \"+ values.length+ \" value(s)\");\n  }\n  return this.valueParameterDetail.toCacheInvocationParameter(values[parameterPosition]);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 48,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 86,
        "startColumnNumber" : 3,
        "endLineNumber" : 87,
        "endColumnNumber" : 86
      },
      "nodeContext" : "throw new IllegalStateException(\"Values mismatch, value parameter at position \" + parameterPosition + \" cannot be matched against \"+ values.length+ \" value(s)\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 19,
    "type" : "java.lang.IllegalStateException"
  } ],
  "positionList" : [ {
    "charLength" : 161,
    "startLineNumber" : 86,
    "startColumnNumber" : 9,
    "endLineNumber" : 87,
    "endColumnNumber" : 85
  } ],
  "layoutRelationDataList" : [ ]
}