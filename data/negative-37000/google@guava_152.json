{
  "id" : 152,
  "expression" : "random.nextInt(nKeys)",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava-tests/test/com/google/common/collect/ConcurrentHashMultisetBasherTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "random.nextInt(nKeys)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 120,
      "startColumnNumber" : 23,
      "endLineNumber" : 120,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 120,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 44
      },
      "nodeContext" : "keyIndex=random.nextInt(nKeys)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 120,
        "endColumnNumber" : 45
      },
      "nodeContext" : "int keyIndex=random.nextInt(nKeys);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1492,
        "startLineNumber" : 119,
        "startColumnNumber" : 43,
        "endLineNumber" : 163,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  int keyIndex=random.nextInt(nKeys);\n  String key=keys.get(keyIndex);\n  Operation op=operations[random.nextInt(operations.length)];\nswitch (op) {\ncase ADD:{\n      int delta=random.nextInt(10);\n      multiset.add(key,delta);\n      deltas[keyIndex]+=delta;\n      break;\n    }\ncase SET_COUNT:{\n    int newValue=random.nextInt(3);\n    int oldValue=multiset.setCount(key,newValue);\n    deltas[keyIndex]+=(newValue - oldValue);\n    break;\n  }\ncase SET_COUNT_IF:{\n  int newValue=random.nextInt(3);\n  int oldValue=multiset.count(key);\n  if (multiset.setCount(key,oldValue,newValue)) {\n    deltas[keyIndex]+=(newValue - oldValue);\n  }\n  break;\n}\ncase REMOVE:{\nint delta=random.nextInt(6);\nint oldValue=multiset.remove(key,delta);\ndeltas[keyIndex]-=Math.min(delta,oldValue);\nbreak;\n}\ncase REMOVE_EXACTLY:{\nint delta=random.nextInt(5);\nif (multiset.removeExactly(key,delta)) {\ndeltas[keyIndex]-=delta;\n}\nbreak;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1529,
        "startLineNumber" : 119,
        "startColumnNumber" : 6,
        "endLineNumber" : 163,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=0; i < iterations; i++) {\n  int keyIndex=random.nextInt(nKeys);\n  String key=keys.get(keyIndex);\n  Operation op=operations[random.nextInt(operations.length)];\nswitch (op) {\ncase ADD:{\n      int delta=random.nextInt(10);\n      multiset.add(key,delta);\n      deltas[keyIndex]+=delta;\n      break;\n    }\ncase SET_COUNT:{\n    int newValue=random.nextInt(3);\n    int oldValue=multiset.setCount(key,newValue);\n    deltas[keyIndex]+=(newValue - oldValue);\n    break;\n  }\ncase SET_COUNT_IF:{\n  int newValue=random.nextInt(3);\n  int oldValue=multiset.count(key);\n  if (multiset.setCount(key,oldValue,newValue)) {\n    deltas[keyIndex]+=(newValue - oldValue);\n  }\n  break;\n}\ncase REMOVE:{\nint delta=random.nextInt(6);\nint oldValue=multiset.remove(key,delta);\ndeltas[keyIndex]-=Math.min(delta,oldValue);\nbreak;\n}\ncase REMOVE_EXACTLY:{\nint delta=random.nextInt(5);\nif (multiset.removeExactly(key,delta)) {\ndeltas[keyIndex]-=delta;\n}\nbreak;\n}\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 191,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1721,
        "startLineNumber" : 114,
        "startColumnNumber" : 41,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int iterations=100000;\n  int nKeys=keys.size();\n  int[] deltas=new int[nKeys];\n  Operation[] operations=Operation.values();\n  for (int i=0; i < iterations; i++) {\n    int keyIndex=random.nextInt(nKeys);\n    String key=keys.get(keyIndex);\n    Operation op=operations[random.nextInt(operations.length)];\nswitch (op) {\ncase ADD:{\n        int delta=random.nextInt(10);\n        multiset.add(key,delta);\n        deltas[keyIndex]+=delta;\n        break;\n      }\ncase SET_COUNT:{\n      int newValue=random.nextInt(3);\n      int oldValue=multiset.setCount(key,newValue);\n      deltas[keyIndex]+=(newValue - oldValue);\n      break;\n    }\ncase SET_COUNT_IF:{\n    int newValue=random.nextInt(3);\n    int oldValue=multiset.count(key);\n    if (multiset.setCount(key,oldValue,newValue)) {\n      deltas[keyIndex]+=(newValue - oldValue);\n    }\n    break;\n  }\ncase REMOVE:{\n  int delta=random.nextInt(6);\n  int oldValue=multiset.remove(key,delta);\n  deltas[keyIndex]-=Math.min(delta,oldValue);\n  break;\n}\ncase REMOVE_EXACTLY:{\nint delta=random.nextInt(5);\nif (multiset.removeExactly(key,delta)) {\n  deltas[keyIndex]-=delta;\n}\nbreak;\n}\n}\n}\nreturn deltas;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 227,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1773,
        "startLineNumber" : 113,
        "startColumnNumber" : 4,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public int[] call() throws Exception {\n  int iterations=100000;\n  int nKeys=keys.size();\n  int[] deltas=new int[nKeys];\n  Operation[] operations=Operation.values();\n  for (int i=0; i < iterations; i++) {\n    int keyIndex=random.nextInt(nKeys);\n    String key=keys.get(keyIndex);\n    Operation op=operations[random.nextInt(operations.length)];\nswitch (op) {\ncase ADD:{\n        int delta=random.nextInt(10);\n        multiset.add(key,delta);\n        deltas[keyIndex]+=delta;\n        break;\n      }\ncase SET_COUNT:{\n      int newValue=random.nextInt(3);\n      int oldValue=multiset.setCount(key,newValue);\n      deltas[keyIndex]+=(newValue - oldValue);\n      break;\n    }\ncase SET_COUNT_IF:{\n    int newValue=random.nextInt(3);\n    int oldValue=multiset.count(key);\n    if (multiset.setCount(key,oldValue,newValue)) {\n      deltas[keyIndex]+=(newValue - oldValue);\n    }\n    break;\n  }\ncase REMOVE:{\n  int delta=random.nextInt(6);\n  int oldValue=multiset.remove(key,delta);\n  deltas[keyIndex]-=Math.min(delta,oldValue);\n  break;\n}\ncase REMOVE_EXACTLY:{\nint delta=random.nextInt(5);\nif (multiset.removeExactly(key,delta)) {\n  deltas[keyIndex]-=delta;\n}\nbreak;\n}\n}\n}\nreturn deltas;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 237,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 120,
        "endColumnNumber" : 45
      },
      "nodeContext" : "int keyIndex=random.nextInt(nKeys);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 120,
    "startColumnNumber" : 23,
    "endLineNumber" : 120,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}