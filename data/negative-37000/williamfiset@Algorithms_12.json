{
  "id" : 12,
  "expression" : "nCols",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/linearalgebra/MatrixInverse.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "nCols",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 37,
      "startColumnNumber" : 18,
      "endLineNumber" : 37,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 37,
        "startColumnNumber" : 10,
        "endLineNumber" : 37,
        "endColumnNumber" : 23
      },
      "nodeContext" : "lead >= nCols",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 37,
        "startColumnNumber" : 6,
        "endLineNumber" : 37,
        "endColumnNumber" : 31
      },
      "nodeContext" : "if (lead >= nCols) break;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 674,
        "startLineNumber" : 36,
        "startColumnNumber" : 36,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (lead >= nCols)   break;\n  int i=r;\n  while (Math.abs(augmentedMatrix[i][lead]) < EPS) {\n    if (++i == nRows) {\n      i=r;\n      if (++lead == nCols)       return;\n    }\n  }\n  double[] temp=augmentedMatrix[r];\n  augmentedMatrix[r]=augmentedMatrix[i];\n  augmentedMatrix[i]=temp;\n  double lv=augmentedMatrix[r][lead];\n  for (int j=0; j < nCols; j++)   augmentedMatrix[r][j]/=lv;\n  for (i=0; i < nRows; i++) {\n    if (i != r) {\n      lv=augmentedMatrix[i][lead];\n      for (int j=0; j < nCols; j++)       augmentedMatrix[i][j]-=lv * augmentedMatrix[r][j];\n    }\n  }\n  lead++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 706,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int r=0; r < nRows; r++) {\n  if (lead >= nCols)   break;\n  int i=r;\n  while (Math.abs(augmentedMatrix[i][lead]) < EPS) {\n    if (++i == nRows) {\n      i=r;\n      if (++lead == nCols)       return;\n    }\n  }\n  double[] temp=augmentedMatrix[r];\n  augmentedMatrix[r]=augmentedMatrix[i];\n  augmentedMatrix[i]=temp;\n  double lv=augmentedMatrix[r][lead];\n  for (int j=0; j < nCols; j++)   augmentedMatrix[r][j]/=lv;\n  for (i=0; i < nRows; i++) {\n    if (i != r) {\n      lv=augmentedMatrix[i][lead];\n      for (int j=0; j < nCols; j++)       augmentedMatrix[i][j]-=lv * augmentedMatrix[r][j];\n    }\n  }\n  lead++;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 152,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 801,
        "startLineNumber" : 34,
        "startColumnNumber" : 48,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int nRows=augmentedMatrix.length, nCols=augmentedMatrix[0].length, lead=0;\n  for (int r=0; r < nRows; r++) {\n    if (lead >= nCols)     break;\n    int i=r;\n    while (Math.abs(augmentedMatrix[i][lead]) < EPS) {\n      if (++i == nRows) {\n        i=r;\n        if (++lead == nCols)         return;\n      }\n    }\n    double[] temp=augmentedMatrix[r];\n    augmentedMatrix[r]=augmentedMatrix[i];\n    augmentedMatrix[i]=temp;\n    double lv=augmentedMatrix[r][lead];\n    for (int j=0; j < nCols; j++)     augmentedMatrix[r][j]/=lv;\n    for (i=0; i < nRows; i++) {\n      if (i != r) {\n        lv=augmentedMatrix[i][lead];\n        for (int j=0; j < nCols; j++)         augmentedMatrix[i][j]-=lv * augmentedMatrix[r][j];\n      }\n    }\n    lead++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 847,
        "startLineNumber" : 34,
        "startColumnNumber" : 2,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static void solve(double[][] augmentedMatrix){\n  int nRows=augmentedMatrix.length, nCols=augmentedMatrix[0].length, lead=0;\n  for (int r=0; r < nRows; r++) {\n    if (lead >= nCols)     break;\n    int i=r;\n    while (Math.abs(augmentedMatrix[i][lead]) < EPS) {\n      if (++i == nRows) {\n        i=r;\n        if (++lead == nCols)         return;\n      }\n    }\n    double[] temp=augmentedMatrix[r];\n    augmentedMatrix[r]=augmentedMatrix[i];\n    augmentedMatrix[i]=temp;\n    double lv=augmentedMatrix[r][lead];\n    for (int j=0; j < nCols; j++)     augmentedMatrix[r][j]/=lv;\n    for (i=0; i < nRows; i++) {\n      if (i != r) {\n        lv=augmentedMatrix[i][lead];\n        for (int j=0; j < nCols; j++)         augmentedMatrix[i][j]-=lv * augmentedMatrix[r][j];\n      }\n    }\n    lead++;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 37,
        "startColumnNumber" : 6,
        "endLineNumber" : 37,
        "endColumnNumber" : 31
      },
      "nodeContext" : "if (lead >= nCols) break;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "nCols",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 42,
      "startColumnNumber" : 24,
      "endLineNumber" : 42,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 42,
        "startColumnNumber" : 14,
        "endLineNumber" : 42,
        "endColumnNumber" : 29
      },
      "nodeContext" : "++lead == nCols",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 42,
        "startColumnNumber" : 10,
        "endLineNumber" : 42,
        "endColumnNumber" : 38
      },
      "nodeContext" : "if (++lead == nCols) return;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 40,
        "startColumnNumber" : 26,
        "endLineNumber" : 43,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  i=r;\n  if (++lead == nCols)   return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (++i == nRows) {\n  i=r;\n  if (++lead == nCols)   return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 39,
        "startColumnNumber" : 55,
        "endLineNumber" : 44,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (++i == nRows) {\n    i=r;\n    if (++lead == nCols)     return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 39,
        "startColumnNumber" : 6,
        "endLineNumber" : 44,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (Math.abs(augmentedMatrix[i][lead]) < EPS) {\n  if (++i == nRows) {\n    i=r;\n    if (++lead == nCols)     return;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 674,
        "startLineNumber" : 36,
        "startColumnNumber" : 36,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (lead >= nCols)   break;\n  int i=r;\n  while (Math.abs(augmentedMatrix[i][lead]) < EPS) {\n    if (++i == nRows) {\n      i=r;\n      if (++lead == nCols)       return;\n    }\n  }\n  double[] temp=augmentedMatrix[r];\n  augmentedMatrix[r]=augmentedMatrix[i];\n  augmentedMatrix[i]=temp;\n  double lv=augmentedMatrix[r][lead];\n  for (int j=0; j < nCols; j++)   augmentedMatrix[r][j]/=lv;\n  for (i=0; i < nRows; i++) {\n    if (i != r) {\n      lv=augmentedMatrix[i][lead];\n      for (int j=0; j < nCols; j++)       augmentedMatrix[i][j]-=lv * augmentedMatrix[r][j];\n    }\n  }\n  lead++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 706,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int r=0; r < nRows; r++) {\n  if (lead >= nCols)   break;\n  int i=r;\n  while (Math.abs(augmentedMatrix[i][lead]) < EPS) {\n    if (++i == nRows) {\n      i=r;\n      if (++lead == nCols)       return;\n    }\n  }\n  double[] temp=augmentedMatrix[r];\n  augmentedMatrix[r]=augmentedMatrix[i];\n  augmentedMatrix[i]=temp;\n  double lv=augmentedMatrix[r][lead];\n  for (int j=0; j < nCols; j++)   augmentedMatrix[r][j]/=lv;\n  for (i=0; i < nRows; i++) {\n    if (i != r) {\n      lv=augmentedMatrix[i][lead];\n      for (int j=0; j < nCols; j++)       augmentedMatrix[i][j]-=lv * augmentedMatrix[r][j];\n    }\n  }\n  lead++;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 152,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 801,
        "startLineNumber" : 34,
        "startColumnNumber" : 48,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int nRows=augmentedMatrix.length, nCols=augmentedMatrix[0].length, lead=0;\n  for (int r=0; r < nRows; r++) {\n    if (lead >= nCols)     break;\n    int i=r;\n    while (Math.abs(augmentedMatrix[i][lead]) < EPS) {\n      if (++i == nRows) {\n        i=r;\n        if (++lead == nCols)         return;\n      }\n    }\n    double[] temp=augmentedMatrix[r];\n    augmentedMatrix[r]=augmentedMatrix[i];\n    augmentedMatrix[i]=temp;\n    double lv=augmentedMatrix[r][lead];\n    for (int j=0; j < nCols; j++)     augmentedMatrix[r][j]/=lv;\n    for (i=0; i < nRows; i++) {\n      if (i != r) {\n        lv=augmentedMatrix[i][lead];\n        for (int j=0; j < nCols; j++)         augmentedMatrix[i][j]-=lv * augmentedMatrix[r][j];\n      }\n    }\n    lead++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 847,
        "startLineNumber" : 34,
        "startColumnNumber" : 2,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static void solve(double[][] augmentedMatrix){\n  int nRows=augmentedMatrix.length, nCols=augmentedMatrix[0].length, lead=0;\n  for (int r=0; r < nRows; r++) {\n    if (lead >= nCols)     break;\n    int i=r;\n    while (Math.abs(augmentedMatrix[i][lead]) < EPS) {\n      if (++i == nRows) {\n        i=r;\n        if (++lead == nCols)         return;\n      }\n    }\n    double[] temp=augmentedMatrix[r];\n    augmentedMatrix[r]=augmentedMatrix[i];\n    augmentedMatrix[i]=temp;\n    double lv=augmentedMatrix[r][lead];\n    for (int j=0; j < nCols; j++)     augmentedMatrix[r][j]/=lv;\n    for (i=0; i < nRows; i++) {\n      if (i != r) {\n        lv=augmentedMatrix[i][lead];\n        for (int j=0; j < nCols; j++)         augmentedMatrix[i][j]-=lv * augmentedMatrix[r][j];\n      }\n    }\n    lead++;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 42,
        "startColumnNumber" : 10,
        "endLineNumber" : 42,
        "endColumnNumber" : 38
      },
      "nodeContext" : "if (++lead == nCols) return;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "nCols",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 49,
      "startColumnNumber" : 26,
      "endLineNumber" : 49,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 49,
        "startColumnNumber" : 22,
        "endLineNumber" : 49,
        "endColumnNumber" : 31
      },
      "nodeContext" : "j < nCols",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 49,
        "startColumnNumber" : 6,
        "endLineNumber" : 49,
        "endColumnNumber" : 66
      },
      "nodeContext" : "for (int j=0; j < nCols; j++) augmentedMatrix[r][j]/=lv;\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 674,
        "startLineNumber" : 36,
        "startColumnNumber" : 36,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (lead >= nCols)   break;\n  int i=r;\n  while (Math.abs(augmentedMatrix[i][lead]) < EPS) {\n    if (++i == nRows) {\n      i=r;\n      if (++lead == nCols)       return;\n    }\n  }\n  double[] temp=augmentedMatrix[r];\n  augmentedMatrix[r]=augmentedMatrix[i];\n  augmentedMatrix[i]=temp;\n  double lv=augmentedMatrix[r][lead];\n  for (int j=0; j < nCols; j++)   augmentedMatrix[r][j]/=lv;\n  for (i=0; i < nRows; i++) {\n    if (i != r) {\n      lv=augmentedMatrix[i][lead];\n      for (int j=0; j < nCols; j++)       augmentedMatrix[i][j]-=lv * augmentedMatrix[r][j];\n    }\n  }\n  lead++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 706,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int r=0; r < nRows; r++) {\n  if (lead >= nCols)   break;\n  int i=r;\n  while (Math.abs(augmentedMatrix[i][lead]) < EPS) {\n    if (++i == nRows) {\n      i=r;\n      if (++lead == nCols)       return;\n    }\n  }\n  double[] temp=augmentedMatrix[r];\n  augmentedMatrix[r]=augmentedMatrix[i];\n  augmentedMatrix[i]=temp;\n  double lv=augmentedMatrix[r][lead];\n  for (int j=0; j < nCols; j++)   augmentedMatrix[r][j]/=lv;\n  for (i=0; i < nRows; i++) {\n    if (i != r) {\n      lv=augmentedMatrix[i][lead];\n      for (int j=0; j < nCols; j++)       augmentedMatrix[i][j]-=lv * augmentedMatrix[r][j];\n    }\n  }\n  lead++;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 152,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 801,
        "startLineNumber" : 34,
        "startColumnNumber" : 48,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int nRows=augmentedMatrix.length, nCols=augmentedMatrix[0].length, lead=0;\n  for (int r=0; r < nRows; r++) {\n    if (lead >= nCols)     break;\n    int i=r;\n    while (Math.abs(augmentedMatrix[i][lead]) < EPS) {\n      if (++i == nRows) {\n        i=r;\n        if (++lead == nCols)         return;\n      }\n    }\n    double[] temp=augmentedMatrix[r];\n    augmentedMatrix[r]=augmentedMatrix[i];\n    augmentedMatrix[i]=temp;\n    double lv=augmentedMatrix[r][lead];\n    for (int j=0; j < nCols; j++)     augmentedMatrix[r][j]/=lv;\n    for (i=0; i < nRows; i++) {\n      if (i != r) {\n        lv=augmentedMatrix[i][lead];\n        for (int j=0; j < nCols; j++)         augmentedMatrix[i][j]-=lv * augmentedMatrix[r][j];\n      }\n    }\n    lead++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 847,
        "startLineNumber" : 34,
        "startColumnNumber" : 2,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static void solve(double[][] augmentedMatrix){\n  int nRows=augmentedMatrix.length, nCols=augmentedMatrix[0].length, lead=0;\n  for (int r=0; r < nRows; r++) {\n    if (lead >= nCols)     break;\n    int i=r;\n    while (Math.abs(augmentedMatrix[i][lead]) < EPS) {\n      if (++i == nRows) {\n        i=r;\n        if (++lead == nCols)         return;\n      }\n    }\n    double[] temp=augmentedMatrix[r];\n    augmentedMatrix[r]=augmentedMatrix[i];\n    augmentedMatrix[i]=temp;\n    double lv=augmentedMatrix[r][lead];\n    for (int j=0; j < nCols; j++)     augmentedMatrix[r][j]/=lv;\n    for (i=0; i < nRows; i++) {\n      if (i != r) {\n        lv=augmentedMatrix[i][lead];\n        for (int j=0; j < nCols; j++)         augmentedMatrix[i][j]-=lv * augmentedMatrix[r][j];\n      }\n    }\n    lead++;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 49,
        "startColumnNumber" : 6,
        "endLineNumber" : 49,
        "endColumnNumber" : 66
      },
      "nodeContext" : "for (int j=0; j < nCols; j++) augmentedMatrix[r][j]/=lv;\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "nCols",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 53,
      "startColumnNumber" : 30,
      "endLineNumber" : 53,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 53,
        "startColumnNumber" : 26,
        "endLineNumber" : 53,
        "endColumnNumber" : 35
      },
      "nodeContext" : "j < nCols",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 53,
        "startColumnNumber" : 10,
        "endLineNumber" : 53,
        "endColumnNumber" : 94
      },
      "nodeContext" : "for (int j=0; j < nCols; j++) augmentedMatrix[i][j]-=lv * augmentedMatrix[r][j];\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 51,
        "startColumnNumber" : 20,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  lv=augmentedMatrix[i][lead];\n  for (int j=0; j < nCols; j++)   augmentedMatrix[i][j]-=lv * augmentedMatrix[r][j];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (i != r) {\n  lv=augmentedMatrix[i][lead];\n  for (int j=0; j < nCols; j++)   augmentedMatrix[i][j]-=lv * augmentedMatrix[r][j];\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 50,
        "startColumnNumber" : 34,
        "endLineNumber" : 55,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (i != r) {\n    lv=augmentedMatrix[i][lead];\n    for (int j=0; j < nCols; j++)     augmentedMatrix[i][j]-=lv * augmentedMatrix[r][j];\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 205,
        "startLineNumber" : 50,
        "startColumnNumber" : 6,
        "endLineNumber" : 55,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (i=0; i < nRows; i++) {\n  if (i != r) {\n    lv=augmentedMatrix[i][lead];\n    for (int j=0; j < nCols; j++)     augmentedMatrix[i][j]-=lv * augmentedMatrix[r][j];\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 48,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 674,
        "startLineNumber" : 36,
        "startColumnNumber" : 36,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (lead >= nCols)   break;\n  int i=r;\n  while (Math.abs(augmentedMatrix[i][lead]) < EPS) {\n    if (++i == nRows) {\n      i=r;\n      if (++lead == nCols)       return;\n    }\n  }\n  double[] temp=augmentedMatrix[r];\n  augmentedMatrix[r]=augmentedMatrix[i];\n  augmentedMatrix[i]=temp;\n  double lv=augmentedMatrix[r][lead];\n  for (int j=0; j < nCols; j++)   augmentedMatrix[r][j]/=lv;\n  for (i=0; i < nRows; i++) {\n    if (i != r) {\n      lv=augmentedMatrix[i][lead];\n      for (int j=0; j < nCols; j++)       augmentedMatrix[i][j]-=lv * augmentedMatrix[r][j];\n    }\n  }\n  lead++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 706,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int r=0; r < nRows; r++) {\n  if (lead >= nCols)   break;\n  int i=r;\n  while (Math.abs(augmentedMatrix[i][lead]) < EPS) {\n    if (++i == nRows) {\n      i=r;\n      if (++lead == nCols)       return;\n    }\n  }\n  double[] temp=augmentedMatrix[r];\n  augmentedMatrix[r]=augmentedMatrix[i];\n  augmentedMatrix[i]=temp;\n  double lv=augmentedMatrix[r][lead];\n  for (int j=0; j < nCols; j++)   augmentedMatrix[r][j]/=lv;\n  for (i=0; i < nRows; i++) {\n    if (i != r) {\n      lv=augmentedMatrix[i][lead];\n      for (int j=0; j < nCols; j++)       augmentedMatrix[i][j]-=lv * augmentedMatrix[r][j];\n    }\n  }\n  lead++;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 152,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 801,
        "startLineNumber" : 34,
        "startColumnNumber" : 48,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int nRows=augmentedMatrix.length, nCols=augmentedMatrix[0].length, lead=0;\n  for (int r=0; r < nRows; r++) {\n    if (lead >= nCols)     break;\n    int i=r;\n    while (Math.abs(augmentedMatrix[i][lead]) < EPS) {\n      if (++i == nRows) {\n        i=r;\n        if (++lead == nCols)         return;\n      }\n    }\n    double[] temp=augmentedMatrix[r];\n    augmentedMatrix[r]=augmentedMatrix[i];\n    augmentedMatrix[i]=temp;\n    double lv=augmentedMatrix[r][lead];\n    for (int j=0; j < nCols; j++)     augmentedMatrix[r][j]/=lv;\n    for (i=0; i < nRows; i++) {\n      if (i != r) {\n        lv=augmentedMatrix[i][lead];\n        for (int j=0; j < nCols; j++)         augmentedMatrix[i][j]-=lv * augmentedMatrix[r][j];\n      }\n    }\n    lead++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 847,
        "startLineNumber" : 34,
        "startColumnNumber" : 2,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static void solve(double[][] augmentedMatrix){\n  int nRows=augmentedMatrix.length, nCols=augmentedMatrix[0].length, lead=0;\n  for (int r=0; r < nRows; r++) {\n    if (lead >= nCols)     break;\n    int i=r;\n    while (Math.abs(augmentedMatrix[i][lead]) < EPS) {\n      if (++i == nRows) {\n        i=r;\n        if (++lead == nCols)         return;\n      }\n    }\n    double[] temp=augmentedMatrix[r];\n    augmentedMatrix[r]=augmentedMatrix[i];\n    augmentedMatrix[i]=temp;\n    double lv=augmentedMatrix[r][lead];\n    for (int j=0; j < nCols; j++)     augmentedMatrix[r][j]/=lv;\n    for (i=0; i < nRows; i++) {\n      if (i != r) {\n        lv=augmentedMatrix[i][lead];\n        for (int j=0; j < nCols; j++)         augmentedMatrix[i][j]-=lv * augmentedMatrix[r][j];\n      }\n    }\n    lead++;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 53,
        "startColumnNumber" : 10,
        "endLineNumber" : 53,
        "endColumnNumber" : 94
      },
      "nodeContext" : "for (int j=0; j < nCols; j++) augmentedMatrix[i][j]-=lv * augmentedMatrix[r][j];\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 37,
    "startColumnNumber" : 18,
    "endLineNumber" : 37,
    "endColumnNumber" : 23
  }, {
    "charLength" : 5,
    "startLineNumber" : 42,
    "startColumnNumber" : 24,
    "endLineNumber" : 42,
    "endColumnNumber" : 29
  }, {
    "charLength" : 5,
    "startLineNumber" : 49,
    "startColumnNumber" : 26,
    "endLineNumber" : 49,
    "endColumnNumber" : 31
  }, {
    "charLength" : 5,
    "startLineNumber" : 53,
    "startColumnNumber" : 30,
    "endLineNumber" : 53,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 6
  } ]
}