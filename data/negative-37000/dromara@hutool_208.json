{
  "id" : 208,
  "expression" : "lastDotIndex",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/main/java/cn/hutool/core/net/Ipv4Util.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "lastDotIndex",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 94,
      "startColumnNumber" : 36,
      "endLineNumber" : 94,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "StrUtil.subPre(startIp,lastDotIndex)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 95,
        "endColumnNumber" : 89
      },
      "nodeContext" : "StrUtil.subPre(startIp,lastDotIndex) + (Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(startIp,lastDotIndex))) + 1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 94,
        "startColumnNumber" : 2,
        "endLineNumber" : 95,
        "endColumnNumber" : 89
      },
      "nodeContext" : "startIp=StrUtil.subPre(startIp,lastDotIndex) + (Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(startIp,lastDotIndex))) + 1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 22,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 94,
        "startColumnNumber" : 2,
        "endLineNumber" : 95,
        "endColumnNumber" : 90
      },
      "nodeContext" : "startIp=StrUtil.subPre(startIp,lastDotIndex) + (Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(startIp,lastDotIndex))) + 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 23,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 711,
        "startLineNumber" : 78,
        "startColumnNumber" : 72,
        "endLineNumber" : 100,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (maskBit == IP_MASK_MAX) {\n    final List<String> list=new ArrayList<>();\n    if (isAll) {\n      list.add(ip);\n    }\n    return list;\n  }\n  String startIp=getBeginIpStr(ip,maskBit);\n  String endIp=getEndIpStr(ip,maskBit);\n  if (isAll) {\n    return list(startIp,endIp);\n  }\n  int lastDotIndex=startIp.lastIndexOf(CharUtil.DOT) + 1;\n  startIp=StrUtil.subPre(startIp,lastDotIndex) + (Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(startIp,lastDotIndex))) + 1);\n  lastDotIndex=endIp.lastIndexOf(CharUtil.DOT) + 1;\n  endIp=StrUtil.subPre(endIp,lastDotIndex) + (Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(endIp,lastDotIndex))) - 1);\n  return list(startIp,endIp);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 932,
        "startLineNumber" : 70,
        "startColumnNumber" : 1,
        "endLineNumber" : 100,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 根据IP地址、子网掩码获取IP地址区间\n * @param ip      IP地址\n * @param maskBit 掩码位，例如24、32\n * @param isAll   true:全量地址，false:可用地址\n * @return 区间地址\n */\npublic static List<String> list(String ip,int maskBit,boolean isAll){\n  if (maskBit == IP_MASK_MAX) {\n    final List<String> list=new ArrayList<>();\n    if (isAll) {\n      list.add(ip);\n    }\n    return list;\n  }\n  String startIp=getBeginIpStr(ip,maskBit);\n  String endIp=getEndIpStr(ip,maskBit);\n  if (isAll) {\n    return list(startIp,endIp);\n  }\n  int lastDotIndex=startIp.lastIndexOf(CharUtil.DOT) + 1;\n  startIp=StrUtil.subPre(startIp,lastDotIndex) + (Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(startIp,lastDotIndex))) + 1);\n  lastDotIndex=endIp.lastIndexOf(CharUtil.DOT) + 1;\n  endIp=StrUtil.subPre(endIp,lastDotIndex) + (Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(endIp,lastDotIndex))) - 1);\n  return list(startIp,endIp);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "StrUtil.subPre(startIp,lastDotIndex)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "lastDotIndex",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 95,
      "startColumnNumber" : 69,
      "endLineNumber" : 95,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 95,
        "startColumnNumber" : 45,
        "endLineNumber" : 95,
        "endColumnNumber" : 82
      },
      "nodeContext" : "StrUtil.subSuf(startIp,lastDotIndex)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 95,
        "startColumnNumber" : 22,
        "endLineNumber" : 95,
        "endColumnNumber" : 83
      },
      "nodeContext" : "Objects.requireNonNull(StrUtil.subSuf(startIp,lastDotIndex))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 95,
        "startColumnNumber" : 5,
        "endLineNumber" : 95,
        "endColumnNumber" : 84
      },
      "nodeContext" : "Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(startIp,lastDotIndex)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 95,
        "startColumnNumber" : 5,
        "endLineNumber" : 95,
        "endColumnNumber" : 88
      },
      "nodeContext" : "Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(startIp,lastDotIndex))) + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 89
      },
      "nodeContext" : "(Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(startIp,lastDotIndex))) + 1)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 95,
        "endColumnNumber" : 89
      },
      "nodeContext" : "StrUtil.subPre(startIp,lastDotIndex) + (Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(startIp,lastDotIndex))) + 1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 94,
        "startColumnNumber" : 2,
        "endLineNumber" : 95,
        "endColumnNumber" : 89
      },
      "nodeContext" : "startIp=StrUtil.subPre(startIp,lastDotIndex) + (Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(startIp,lastDotIndex))) + 1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 22,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 94,
        "startColumnNumber" : 2,
        "endLineNumber" : 95,
        "endColumnNumber" : 90
      },
      "nodeContext" : "startIp=StrUtil.subPre(startIp,lastDotIndex) + (Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(startIp,lastDotIndex))) + 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 23,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 711,
        "startLineNumber" : 78,
        "startColumnNumber" : 72,
        "endLineNumber" : 100,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (maskBit == IP_MASK_MAX) {\n    final List<String> list=new ArrayList<>();\n    if (isAll) {\n      list.add(ip);\n    }\n    return list;\n  }\n  String startIp=getBeginIpStr(ip,maskBit);\n  String endIp=getEndIpStr(ip,maskBit);\n  if (isAll) {\n    return list(startIp,endIp);\n  }\n  int lastDotIndex=startIp.lastIndexOf(CharUtil.DOT) + 1;\n  startIp=StrUtil.subPre(startIp,lastDotIndex) + (Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(startIp,lastDotIndex))) + 1);\n  lastDotIndex=endIp.lastIndexOf(CharUtil.DOT) + 1;\n  endIp=StrUtil.subPre(endIp,lastDotIndex) + (Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(endIp,lastDotIndex))) - 1);\n  return list(startIp,endIp);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 932,
        "startLineNumber" : 70,
        "startColumnNumber" : 1,
        "endLineNumber" : 100,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 根据IP地址、子网掩码获取IP地址区间\n * @param ip      IP地址\n * @param maskBit 掩码位，例如24、32\n * @param isAll   true:全量地址，false:可用地址\n * @return 区间地址\n */\npublic static List<String> list(String ip,int maskBit,boolean isAll){\n  if (maskBit == IP_MASK_MAX) {\n    final List<String> list=new ArrayList<>();\n    if (isAll) {\n      list.add(ip);\n    }\n    return list;\n  }\n  String startIp=getBeginIpStr(ip,maskBit);\n  String endIp=getEndIpStr(ip,maskBit);\n  if (isAll) {\n    return list(startIp,endIp);\n  }\n  int lastDotIndex=startIp.lastIndexOf(CharUtil.DOT) + 1;\n  startIp=StrUtil.subPre(startIp,lastDotIndex) + (Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(startIp,lastDotIndex))) + 1);\n  lastDotIndex=endIp.lastIndexOf(CharUtil.DOT) + 1;\n  endIp=StrUtil.subPre(endIp,lastDotIndex) + (Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(endIp,lastDotIndex))) - 1);\n  return list(startIp,endIp);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 89
      },
      "nodeContext" : "(Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(startIp,lastDotIndex))) + 1)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "lastDotIndex",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 97,
      "startColumnNumber" : 32,
      "endLineNumber" : 97,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 97,
        "startColumnNumber" : 10,
        "endLineNumber" : 97,
        "endColumnNumber" : 45
      },
      "nodeContext" : "StrUtil.subPre(endIp,lastDotIndex)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 97,
        "startColumnNumber" : 10,
        "endLineNumber" : 98,
        "endColumnNumber" : 87
      },
      "nodeContext" : "StrUtil.subPre(endIp,lastDotIndex) + (Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(endIp,lastDotIndex))) - 1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 97,
        "startColumnNumber" : 2,
        "endLineNumber" : 98,
        "endColumnNumber" : 87
      },
      "nodeContext" : "endIp=StrUtil.subPre(endIp,lastDotIndex) + (Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(endIp,lastDotIndex))) - 1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 22,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 97,
        "startColumnNumber" : 2,
        "endLineNumber" : 98,
        "endColumnNumber" : 88
      },
      "nodeContext" : "endIp=StrUtil.subPre(endIp,lastDotIndex) + (Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(endIp,lastDotIndex))) - 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 23,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 711,
        "startLineNumber" : 78,
        "startColumnNumber" : 72,
        "endLineNumber" : 100,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (maskBit == IP_MASK_MAX) {\n    final List<String> list=new ArrayList<>();\n    if (isAll) {\n      list.add(ip);\n    }\n    return list;\n  }\n  String startIp=getBeginIpStr(ip,maskBit);\n  String endIp=getEndIpStr(ip,maskBit);\n  if (isAll) {\n    return list(startIp,endIp);\n  }\n  int lastDotIndex=startIp.lastIndexOf(CharUtil.DOT) + 1;\n  startIp=StrUtil.subPre(startIp,lastDotIndex) + (Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(startIp,lastDotIndex))) + 1);\n  lastDotIndex=endIp.lastIndexOf(CharUtil.DOT) + 1;\n  endIp=StrUtil.subPre(endIp,lastDotIndex) + (Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(endIp,lastDotIndex))) - 1);\n  return list(startIp,endIp);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 932,
        "startLineNumber" : 70,
        "startColumnNumber" : 1,
        "endLineNumber" : 100,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 根据IP地址、子网掩码获取IP地址区间\n * @param ip      IP地址\n * @param maskBit 掩码位，例如24、32\n * @param isAll   true:全量地址，false:可用地址\n * @return 区间地址\n */\npublic static List<String> list(String ip,int maskBit,boolean isAll){\n  if (maskBit == IP_MASK_MAX) {\n    final List<String> list=new ArrayList<>();\n    if (isAll) {\n      list.add(ip);\n    }\n    return list;\n  }\n  String startIp=getBeginIpStr(ip,maskBit);\n  String endIp=getEndIpStr(ip,maskBit);\n  if (isAll) {\n    return list(startIp,endIp);\n  }\n  int lastDotIndex=startIp.lastIndexOf(CharUtil.DOT) + 1;\n  startIp=StrUtil.subPre(startIp,lastDotIndex) + (Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(startIp,lastDotIndex))) + 1);\n  lastDotIndex=endIp.lastIndexOf(CharUtil.DOT) + 1;\n  endIp=StrUtil.subPre(endIp,lastDotIndex) + (Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(endIp,lastDotIndex))) - 1);\n  return list(startIp,endIp);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 97,
        "startColumnNumber" : 10,
        "endLineNumber" : 97,
        "endColumnNumber" : 45
      },
      "nodeContext" : "StrUtil.subPre(endIp,lastDotIndex)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "lastDotIndex",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 98,
      "startColumnNumber" : 67,
      "endLineNumber" : 98,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 98,
        "startColumnNumber" : 45,
        "endLineNumber" : 98,
        "endColumnNumber" : 80
      },
      "nodeContext" : "StrUtil.subSuf(endIp,lastDotIndex)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 98,
        "startColumnNumber" : 22,
        "endLineNumber" : 98,
        "endColumnNumber" : 81
      },
      "nodeContext" : "Objects.requireNonNull(StrUtil.subSuf(endIp,lastDotIndex))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 98,
        "startColumnNumber" : 5,
        "endLineNumber" : 98,
        "endColumnNumber" : 82
      },
      "nodeContext" : "Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(endIp,lastDotIndex)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 98,
        "startColumnNumber" : 5,
        "endLineNumber" : 98,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(endIp,lastDotIndex))) - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 87
      },
      "nodeContext" : "(Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(endIp,lastDotIndex))) - 1)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 97,
        "startColumnNumber" : 10,
        "endLineNumber" : 98,
        "endColumnNumber" : 87
      },
      "nodeContext" : "StrUtil.subPre(endIp,lastDotIndex) + (Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(endIp,lastDotIndex))) - 1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 97,
        "startColumnNumber" : 2,
        "endLineNumber" : 98,
        "endColumnNumber" : 87
      },
      "nodeContext" : "endIp=StrUtil.subPre(endIp,lastDotIndex) + (Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(endIp,lastDotIndex))) - 1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 22,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 97,
        "startColumnNumber" : 2,
        "endLineNumber" : 98,
        "endColumnNumber" : 88
      },
      "nodeContext" : "endIp=StrUtil.subPre(endIp,lastDotIndex) + (Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(endIp,lastDotIndex))) - 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 23,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 711,
        "startLineNumber" : 78,
        "startColumnNumber" : 72,
        "endLineNumber" : 100,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (maskBit == IP_MASK_MAX) {\n    final List<String> list=new ArrayList<>();\n    if (isAll) {\n      list.add(ip);\n    }\n    return list;\n  }\n  String startIp=getBeginIpStr(ip,maskBit);\n  String endIp=getEndIpStr(ip,maskBit);\n  if (isAll) {\n    return list(startIp,endIp);\n  }\n  int lastDotIndex=startIp.lastIndexOf(CharUtil.DOT) + 1;\n  startIp=StrUtil.subPre(startIp,lastDotIndex) + (Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(startIp,lastDotIndex))) + 1);\n  lastDotIndex=endIp.lastIndexOf(CharUtil.DOT) + 1;\n  endIp=StrUtil.subPre(endIp,lastDotIndex) + (Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(endIp,lastDotIndex))) - 1);\n  return list(startIp,endIp);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 932,
        "startLineNumber" : 70,
        "startColumnNumber" : 1,
        "endLineNumber" : 100,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 根据IP地址、子网掩码获取IP地址区间\n * @param ip      IP地址\n * @param maskBit 掩码位，例如24、32\n * @param isAll   true:全量地址，false:可用地址\n * @return 区间地址\n */\npublic static List<String> list(String ip,int maskBit,boolean isAll){\n  if (maskBit == IP_MASK_MAX) {\n    final List<String> list=new ArrayList<>();\n    if (isAll) {\n      list.add(ip);\n    }\n    return list;\n  }\n  String startIp=getBeginIpStr(ip,maskBit);\n  String endIp=getEndIpStr(ip,maskBit);\n  if (isAll) {\n    return list(startIp,endIp);\n  }\n  int lastDotIndex=startIp.lastIndexOf(CharUtil.DOT) + 1;\n  startIp=StrUtil.subPre(startIp,lastDotIndex) + (Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(startIp,lastDotIndex))) + 1);\n  lastDotIndex=endIp.lastIndexOf(CharUtil.DOT) + 1;\n  endIp=StrUtil.subPre(endIp,lastDotIndex) + (Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(endIp,lastDotIndex))) - 1);\n  return list(startIp,endIp);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 87
      },
      "nodeContext" : "(Integer.parseInt(Objects.requireNonNull(StrUtil.subSuf(endIp,lastDotIndex))) - 1)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 94,
    "startColumnNumber" : 36,
    "endLineNumber" : 94,
    "endColumnNumber" : 48
  }, {
    "charLength" : 12,
    "startLineNumber" : 95,
    "startColumnNumber" : 69,
    "endLineNumber" : 95,
    "endColumnNumber" : 81
  }, {
    "charLength" : 12,
    "startLineNumber" : 97,
    "startColumnNumber" : 32,
    "endLineNumber" : 97,
    "endColumnNumber" : 44
  }, {
    "charLength" : 12,
    "startLineNumber" : 98,
    "startColumnNumber" : 67,
    "endLineNumber" : 98,
    "endColumnNumber" : 79
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 5
  } ]
}