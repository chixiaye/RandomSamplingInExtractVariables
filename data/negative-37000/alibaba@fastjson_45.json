{
  "id" : 45,
  "expression" : "\"\\0\\0\"",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/test/java/com/alibaba/json/bvt/bug/Bug_for_huling.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"\\0\\0\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 13,
      "startColumnNumber" : 20,
      "endLineNumber" : 13,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 13,
        "startColumnNumber" : 8,
        "endLineNumber" : 13,
        "endColumnNumber" : 27
      },
      "nodeContext" : "vo.setValue(\"\\0\\0\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 13,
        "startColumnNumber" : 8,
        "endLineNumber" : 13,
        "endColumnNumber" : 28
      },
      "nodeContext" : "vo.setValue(\"\\0\\0\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 393,
        "startLineNumber" : 11,
        "startColumnNumber" : 46,
        "endLineNumber" : 23,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  VO vo=new VO();\n  vo.setValue(\"\\0\\0\");\n  Assert.assertEquals('\\0',vo.getValue().charAt(0));\n  String text=JSON.toJSONString(vo);\n  System.out.println(text);\n  Assert.assertEquals(\"{\\\"value\\\":\\\"\\\\u0000\\\\u0000\\\"}\",text);\n  VO vo2=JSON.parseObject(text,VO.class);\n  Assert.assertEquals(\"\\0\\0\",vo2.getValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 435,
        "startLineNumber" : 11,
        "startColumnNumber" : 4,
        "endLineNumber" : 23,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_for_0() throws Exception {\n  VO vo=new VO();\n  vo.setValue(\"\\0\\0\");\n  Assert.assertEquals('\\0',vo.getValue().charAt(0));\n  String text=JSON.toJSONString(vo);\n  System.out.println(text);\n  Assert.assertEquals(\"{\\\"value\\\":\\\"\\\\u0000\\\\u0000\\\"}\",text);\n  VO vo2=JSON.parseObject(text,VO.class);\n  Assert.assertEquals(\"\\0\\0\",vo2.getValue());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 73,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 13,
        "startColumnNumber" : 8,
        "endLineNumber" : 13,
        "endColumnNumber" : 28
      },
      "nodeContext" : "vo.setValue(\"\\0\\0\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"\\0\\0\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 22,
      "startColumnNumber" : 28,
      "endLineNumber" : 22,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 22,
        "startColumnNumber" : 8,
        "endLineNumber" : 22,
        "endColumnNumber" : 51
      },
      "nodeContext" : "Assert.assertEquals(\"\\0\\0\",vo2.getValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 22,
        "startColumnNumber" : 8,
        "endLineNumber" : 22,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Assert.assertEquals(\"\\0\\0\",vo2.getValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 393,
        "startLineNumber" : 11,
        "startColumnNumber" : 46,
        "endLineNumber" : 23,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  VO vo=new VO();\n  vo.setValue(\"\\0\\0\");\n  Assert.assertEquals('\\0',vo.getValue().charAt(0));\n  String text=JSON.toJSONString(vo);\n  System.out.println(text);\n  Assert.assertEquals(\"{\\\"value\\\":\\\"\\\\u0000\\\\u0000\\\"}\",text);\n  VO vo2=JSON.parseObject(text,VO.class);\n  Assert.assertEquals(\"\\0\\0\",vo2.getValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 435,
        "startLineNumber" : 11,
        "startColumnNumber" : 4,
        "endLineNumber" : 23,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_for_0() throws Exception {\n  VO vo=new VO();\n  vo.setValue(\"\\0\\0\");\n  Assert.assertEquals('\\0',vo.getValue().charAt(0));\n  String text=JSON.toJSONString(vo);\n  System.out.println(text);\n  Assert.assertEquals(\"{\\\"value\\\":\\\"\\\\u0000\\\\u0000\\\"}\",text);\n  VO vo2=JSON.parseObject(text,VO.class);\n  Assert.assertEquals(\"\\0\\0\",vo2.getValue());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 73,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 22,
        "startColumnNumber" : 8,
        "endLineNumber" : 22,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Assert.assertEquals(\"\\0\\0\",vo2.getValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 13,
    "startColumnNumber" : 20,
    "endLineNumber" : 13,
    "endColumnNumber" : 26
  }, {
    "charLength" : 6,
    "startLineNumber" : 22,
    "startColumnNumber" : 28,
    "endLineNumber" : 22,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}