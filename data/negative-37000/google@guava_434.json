{
  "id" : 434,
  "expression" : "spy",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava-tests/test/com/google/common/util/concurrent/JdkFutureAdaptersTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "spy",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 82,
      "startColumnNumber" : 83,
      "endLineNumber" : 82,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 82,
        "startColumnNumber" : 48,
        "endLineNumber" : 82,
        "endColumnNumber" : 87
      },
      "nodeContext" : "listenInPoolThread(abstractFuture,spy)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 82,
        "startColumnNumber" : 29,
        "endLineNumber" : 82,
        "endColumnNumber" : 87
      },
      "nodeContext" : "listenableFuture=listenInPoolThread(abstractFuture,spy)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 88
      },
      "nodeContext" : "ListenableFuture<String> listenableFuture=listenInPoolThread(abstractFuture,spy);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1072,
        "startLineNumber" : 78,
        "startColumnNumber" : 89,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  NonListenableSettableFuture<String> abstractFuture=NonListenableSettableFuture.create();\n  abstractFuture.set(DATA1);\n  ExecutorSpy spy=new ExecutorSpy(directExecutor());\n  ListenableFuture<String> listenableFuture=listenInPoolThread(abstractFuture,spy);\n  SingleCallListener singleCallListener=new SingleCallListener();\n  singleCallListener.expectCall();\n  assertFalse(spy.wasExecuted);\n  assertFalse(singleCallListener.wasCalled());\n  assertTrue(listenableFuture.isDone());\n  listenableFuture.addListener(singleCallListener,directExecutor());\n  assertEquals(DATA1,listenableFuture.get());\n  assertFalse(spy.wasExecuted);\n  assertTrue(singleCallListener.wasCalled());\n  assertTrue(listenableFuture.isDone());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1159,
        "startLineNumber" : 78,
        "startColumnNumber" : 2,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testListenInPoolThreadIgnoresExecutorWhenDelegateIsDone() throws Exception {\n  NonListenableSettableFuture<String> abstractFuture=NonListenableSettableFuture.create();\n  abstractFuture.set(DATA1);\n  ExecutorSpy spy=new ExecutorSpy(directExecutor());\n  ListenableFuture<String> listenableFuture=listenInPoolThread(abstractFuture,spy);\n  SingleCallListener singleCallListener=new SingleCallListener();\n  singleCallListener.expectCall();\n  assertFalse(spy.wasExecuted);\n  assertFalse(singleCallListener.wasCalled());\n  assertTrue(listenableFuture.isDone());\n  listenableFuture.addListener(singleCallListener,directExecutor());\n  assertEquals(DATA1,listenableFuture.get());\n  assertFalse(spy.wasExecuted);\n  assertTrue(singleCallListener.wasCalled());\n  assertTrue(listenableFuture.isDone());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 88
      },
      "nodeContext" : "ListenableFuture<String> listenableFuture=listenInPoolThread(abstractFuture,spy);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.common.util.concurrent.FuturesTest.ExecutorSpy"
  }, {
    "nodeContext" : "spy",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 87,
      "startColumnNumber" : 16,
      "endLineNumber" : 87,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 87,
        "startColumnNumber" : 16,
        "endLineNumber" : 87,
        "endColumnNumber" : 31
      },
      "nodeContext" : "spy.wasExecuted",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 87,
        "endColumnNumber" : 32
      },
      "nodeContext" : "assertFalse(spy.wasExecuted)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 87,
        "endColumnNumber" : 33
      },
      "nodeContext" : "assertFalse(spy.wasExecuted);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1072,
        "startLineNumber" : 78,
        "startColumnNumber" : 89,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  NonListenableSettableFuture<String> abstractFuture=NonListenableSettableFuture.create();\n  abstractFuture.set(DATA1);\n  ExecutorSpy spy=new ExecutorSpy(directExecutor());\n  ListenableFuture<String> listenableFuture=listenInPoolThread(abstractFuture,spy);\n  SingleCallListener singleCallListener=new SingleCallListener();\n  singleCallListener.expectCall();\n  assertFalse(spy.wasExecuted);\n  assertFalse(singleCallListener.wasCalled());\n  assertTrue(listenableFuture.isDone());\n  listenableFuture.addListener(singleCallListener,directExecutor());\n  assertEquals(DATA1,listenableFuture.get());\n  assertFalse(spy.wasExecuted);\n  assertTrue(singleCallListener.wasCalled());\n  assertTrue(listenableFuture.isDone());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1159,
        "startLineNumber" : 78,
        "startColumnNumber" : 2,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testListenInPoolThreadIgnoresExecutorWhenDelegateIsDone() throws Exception {\n  NonListenableSettableFuture<String> abstractFuture=NonListenableSettableFuture.create();\n  abstractFuture.set(DATA1);\n  ExecutorSpy spy=new ExecutorSpy(directExecutor());\n  ListenableFuture<String> listenableFuture=listenInPoolThread(abstractFuture,spy);\n  SingleCallListener singleCallListener=new SingleCallListener();\n  singleCallListener.expectCall();\n  assertFalse(spy.wasExecuted);\n  assertFalse(singleCallListener.wasCalled());\n  assertTrue(listenableFuture.isDone());\n  listenableFuture.addListener(singleCallListener,directExecutor());\n  assertEquals(DATA1,listenableFuture.get());\n  assertFalse(spy.wasExecuted);\n  assertTrue(singleCallListener.wasCalled());\n  assertTrue(listenableFuture.isDone());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 87,
        "endColumnNumber" : 33
      },
      "nodeContext" : "assertFalse(spy.wasExecuted);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.common.util.concurrent.FuturesTest.ExecutorSpy"
  }, {
    "nodeContext" : "spy",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 98,
      "startColumnNumber" : 16,
      "endLineNumber" : 98,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 98,
        "startColumnNumber" : 16,
        "endLineNumber" : 98,
        "endColumnNumber" : 31
      },
      "nodeContext" : "spy.wasExecuted",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 32
      },
      "nodeContext" : "assertFalse(spy.wasExecuted)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 33
      },
      "nodeContext" : "assertFalse(spy.wasExecuted);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1072,
        "startLineNumber" : 78,
        "startColumnNumber" : 89,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  NonListenableSettableFuture<String> abstractFuture=NonListenableSettableFuture.create();\n  abstractFuture.set(DATA1);\n  ExecutorSpy spy=new ExecutorSpy(directExecutor());\n  ListenableFuture<String> listenableFuture=listenInPoolThread(abstractFuture,spy);\n  SingleCallListener singleCallListener=new SingleCallListener();\n  singleCallListener.expectCall();\n  assertFalse(spy.wasExecuted);\n  assertFalse(singleCallListener.wasCalled());\n  assertTrue(listenableFuture.isDone());\n  listenableFuture.addListener(singleCallListener,directExecutor());\n  assertEquals(DATA1,listenableFuture.get());\n  assertFalse(spy.wasExecuted);\n  assertTrue(singleCallListener.wasCalled());\n  assertTrue(listenableFuture.isDone());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1159,
        "startLineNumber" : 78,
        "startColumnNumber" : 2,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testListenInPoolThreadIgnoresExecutorWhenDelegateIsDone() throws Exception {\n  NonListenableSettableFuture<String> abstractFuture=NonListenableSettableFuture.create();\n  abstractFuture.set(DATA1);\n  ExecutorSpy spy=new ExecutorSpy(directExecutor());\n  ListenableFuture<String> listenableFuture=listenInPoolThread(abstractFuture,spy);\n  SingleCallListener singleCallListener=new SingleCallListener();\n  singleCallListener.expectCall();\n  assertFalse(spy.wasExecuted);\n  assertFalse(singleCallListener.wasCalled());\n  assertTrue(listenableFuture.isDone());\n  listenableFuture.addListener(singleCallListener,directExecutor());\n  assertEquals(DATA1,listenableFuture.get());\n  assertFalse(spy.wasExecuted);\n  assertTrue(singleCallListener.wasCalled());\n  assertTrue(listenableFuture.isDone());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 33
      },
      "nodeContext" : "assertFalse(spy.wasExecuted);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.common.util.concurrent.FuturesTest.ExecutorSpy"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 82,
    "startColumnNumber" : 83,
    "endLineNumber" : 82,
    "endColumnNumber" : 86
  }, {
    "charLength" : 3,
    "startLineNumber" : 87,
    "startColumnNumber" : 16,
    "endLineNumber" : 87,
    "endColumnNumber" : 19
  }, {
    "charLength" : 3,
    "startLineNumber" : 98,
    "startColumnNumber" : 16,
    "endLineNumber" : 98,
    "endColumnNumber" : 19
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}