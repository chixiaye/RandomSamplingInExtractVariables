{
  "id" : 31,
  "expression" : "collectionProperty instanceof Collection",
  "projectName" : "mybatis@mybatis-3",
  "commitID" : "a84ece4f08bb04fa6a5babd800113fe7338a9880",
  "filePath" : "/src/main/java/org/apache/ibatis/executor/resultset/NestedResultSetHandler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "collectionProperty instanceof Collection",
    "nodeType" : "InstanceofExpression",
    "nodePosition" : {
      "charLength" : 40,
      "startLineNumber" : 141,
      "startColumnNumber" : 46,
      "endLineNumber" : 141,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 141,
        "startColumnNumber" : 16,
        "endLineNumber" : 141,
        "endColumnNumber" : 86
      },
      "nodeContext" : "collectionProperty != null && collectionProperty instanceof Collection",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 306,
        "startLineNumber" : 141,
        "startColumnNumber" : 12,
        "endLineNumber" : 147,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (collectionProperty != null && collectionProperty instanceof Collection) {\n  if (!knownValue) {\n    ((Collection)collectionProperty).add(rowValue);\n  }\n}\n else {\n  metaObject.setValue(resultMapping.getProperty(),rowValue);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 367,
        "startLineNumber" : 140,
        "startColumnNumber" : 61,
        "endLineNumber" : 149,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  if (collectionProperty != null && collectionProperty instanceof Collection) {\n    if (!knownValue) {\n      ((Collection)collectionProperty).add(rowValue);\n    }\n  }\n else {\n    metaObject.setValue(resultMapping.getProperty(),rowValue);\n  }\n  foundValues=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 418,
        "startLineNumber" : 140,
        "startColumnNumber" : 10,
        "endLineNumber" : 149,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (rowValue != null && anyNotNullColumnIsNotNull) {\n  if (collectionProperty != null && collectionProperty instanceof Collection) {\n    if (!knownValue) {\n      ((Collection)collectionProperty).add(rowValue);\n    }\n  }\n else {\n    metaObject.setValue(resultMapping.getProperty(),rowValue);\n  }\n  foundValues=true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1534,
        "startLineNumber" : 118,
        "startColumnNumber" : 12,
        "endLineNumber" : 151,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final ResultMap nestedResultMap=getNestedResultMap(rs,nestedResultMapId);\n  final Object collectionProperty=instantiateCollectionPropertyIfAppropriate(resultMapping,metaObject);\n  final CacheKey parentRowKey=createRowKey(resultMap,rs);\n  final CacheKey rowKey=createRowKey(nestedResultMap,rs);\n  final Set<CacheKey> localRowValueCache=getRowValueCache(parentRowKey);\n  final boolean knownValue=localRowValueCache.contains(rowKey);\n  localRowValueCache.add(rowKey);\n  Object rowValue=getRowValue(rs,nestedResultMap,rowKey);\n  Set<String> notNullColumns=resultMapping.getNotNullColumns();\n  boolean anyNotNullColumnIsNotNull=true;\n  if (notNullColumns != null && !notNullColumns.isEmpty()) {\n    anyNotNullColumnIsNotNull=false;\n    for (    String column : notNullColumns) {\n      rs.getObject(column);\n      if (!rs.wasNull()) {\n        anyNotNullColumnIsNotNull=true;\n      }\n    }\n  }\n  if (rowValue != null && anyNotNullColumnIsNotNull) {\n    if (collectionProperty != null && collectionProperty instanceof Collection) {\n      if (!knownValue) {\n        ((Collection)collectionProperty).add(rowValue);\n      }\n    }\n else {\n      metaObject.setValue(resultMapping.getProperty(),rowValue);\n    }\n    foundValues=true;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 172,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1712,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 153,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  final ResultMap nestedResultMap=getNestedResultMap(rs,nestedResultMapId);\n  final Object collectionProperty=instantiateCollectionPropertyIfAppropriate(resultMapping,metaObject);\n  final CacheKey parentRowKey=createRowKey(resultMap,rs);\n  final CacheKey rowKey=createRowKey(nestedResultMap,rs);\n  final Set<CacheKey> localRowValueCache=getRowValueCache(parentRowKey);\n  final boolean knownValue=localRowValueCache.contains(rowKey);\n  localRowValueCache.add(rowKey);\n  Object rowValue=getRowValue(rs,nestedResultMap,rowKey);\n  Set<String> notNullColumns=resultMapping.getNotNullColumns();\n  boolean anyNotNullColumnIsNotNull=true;\n  if (notNullColumns != null && !notNullColumns.isEmpty()) {\n    anyNotNullColumnIsNotNull=false;\n    for (    String column : notNullColumns) {\n      rs.getObject(column);\n      if (!rs.wasNull()) {\n        anyNotNullColumnIsNotNull=true;\n      }\n    }\n  }\n  if (rowValue != null && anyNotNullColumnIsNotNull) {\n    if (collectionProperty != null && collectionProperty instanceof Collection) {\n      if (!knownValue) {\n        ((Collection)collectionProperty).add(rowValue);\n      }\n    }\n else {\n      metaObject.setValue(resultMapping.getProperty(),rowValue);\n    }\n    foundValues=true;\n  }\n}\n catch (Exception e) {\n  throw new ExecutorException(\"Error getting nested result map values for '\" + resultMapping.getProperty() + \"'.  Cause: \"+ e,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 191,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1732,
        "startLineNumber" : 117,
        "startColumnNumber" : 37,
        "endLineNumber" : 154,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  try {\n    final ResultMap nestedResultMap=getNestedResultMap(rs,nestedResultMapId);\n    final Object collectionProperty=instantiateCollectionPropertyIfAppropriate(resultMapping,metaObject);\n    final CacheKey parentRowKey=createRowKey(resultMap,rs);\n    final CacheKey rowKey=createRowKey(nestedResultMap,rs);\n    final Set<CacheKey> localRowValueCache=getRowValueCache(parentRowKey);\n    final boolean knownValue=localRowValueCache.contains(rowKey);\n    localRowValueCache.add(rowKey);\n    Object rowValue=getRowValue(rs,nestedResultMap,rowKey);\n    Set<String> notNullColumns=resultMapping.getNotNullColumns();\n    boolean anyNotNullColumnIsNotNull=true;\n    if (notNullColumns != null && !notNullColumns.isEmpty()) {\n      anyNotNullColumnIsNotNull=false;\n      for (      String column : notNullColumns) {\n        rs.getObject(column);\n        if (!rs.wasNull()) {\n          anyNotNullColumnIsNotNull=true;\n        }\n      }\n    }\n    if (rowValue != null && anyNotNullColumnIsNotNull) {\n      if (collectionProperty != null && collectionProperty instanceof Collection) {\n        if (!knownValue) {\n          ((Collection)collectionProperty).add(rowValue);\n        }\n      }\n else {\n        metaObject.setValue(resultMapping.getProperty(),rowValue);\n      }\n      foundValues=true;\n    }\n  }\n catch (  Exception e) {\n    throw new ExecutorException(\"Error getting nested result map values for '\" + resultMapping.getProperty() + \"'.  Cause: \"+ e,e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 192,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1763,
        "startLineNumber" : 117,
        "startColumnNumber" : 6,
        "endLineNumber" : 154,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (nestedResultMapId != null) {\n  try {\n    final ResultMap nestedResultMap=getNestedResultMap(rs,nestedResultMapId);\n    final Object collectionProperty=instantiateCollectionPropertyIfAppropriate(resultMapping,metaObject);\n    final CacheKey parentRowKey=createRowKey(resultMap,rs);\n    final CacheKey rowKey=createRowKey(nestedResultMap,rs);\n    final Set<CacheKey> localRowValueCache=getRowValueCache(parentRowKey);\n    final boolean knownValue=localRowValueCache.contains(rowKey);\n    localRowValueCache.add(rowKey);\n    Object rowValue=getRowValue(rs,nestedResultMap,rowKey);\n    Set<String> notNullColumns=resultMapping.getNotNullColumns();\n    boolean anyNotNullColumnIsNotNull=true;\n    if (notNullColumns != null && !notNullColumns.isEmpty()) {\n      anyNotNullColumnIsNotNull=false;\n      for (      String column : notNullColumns) {\n        rs.getObject(column);\n        if (!rs.wasNull()) {\n          anyNotNullColumnIsNotNull=true;\n        }\n      }\n    }\n    if (rowValue != null && anyNotNullColumnIsNotNull) {\n      if (collectionProperty != null && collectionProperty instanceof Collection) {\n        if (!knownValue) {\n          ((Collection)collectionProperty).add(rowValue);\n        }\n      }\n else {\n        metaObject.setValue(resultMapping.getProperty(),rowValue);\n      }\n      foundValues=true;\n    }\n  }\n catch (  Exception e) {\n    throw new ExecutorException(\"Error getting nested result map values for '\" + resultMapping.getProperty() + \"'.  Cause: \"+ e,e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 196,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1857,
        "startLineNumber" : 115,
        "startColumnNumber" : 78,
        "endLineNumber" : 155,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String nestedResultMapId=resultMapping.getNestedResultMapId();\n  if (nestedResultMapId != null) {\n    try {\n      final ResultMap nestedResultMap=getNestedResultMap(rs,nestedResultMapId);\n      final Object collectionProperty=instantiateCollectionPropertyIfAppropriate(resultMapping,metaObject);\n      final CacheKey parentRowKey=createRowKey(resultMap,rs);\n      final CacheKey rowKey=createRowKey(nestedResultMap,rs);\n      final Set<CacheKey> localRowValueCache=getRowValueCache(parentRowKey);\n      final boolean knownValue=localRowValueCache.contains(rowKey);\n      localRowValueCache.add(rowKey);\n      Object rowValue=getRowValue(rs,nestedResultMap,rowKey);\n      Set<String> notNullColumns=resultMapping.getNotNullColumns();\n      boolean anyNotNullColumnIsNotNull=true;\n      if (notNullColumns != null && !notNullColumns.isEmpty()) {\n        anyNotNullColumnIsNotNull=false;\n        for (        String column : notNullColumns) {\n          rs.getObject(column);\n          if (!rs.wasNull()) {\n            anyNotNullColumnIsNotNull=true;\n          }\n        }\n      }\n      if (rowValue != null && anyNotNullColumnIsNotNull) {\n        if (collectionProperty != null && collectionProperty instanceof Collection) {\n          if (!knownValue) {\n            ((Collection)collectionProperty).add(rowValue);\n          }\n        }\n else {\n          metaObject.setValue(resultMapping.getProperty(),rowValue);\n        }\n        foundValues=true;\n      }\n    }\n catch (    Exception e) {\n      throw new ExecutorException(\"Error getting nested result map values for '\" + resultMapping.getProperty() + \"'.  Cause: \"+ e,e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 206,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1931,
        "startLineNumber" : 115,
        "startColumnNumber" : 4,
        "endLineNumber" : 155,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (ResultMapping resultMapping : resultMap.getPropertyResultMappings()) {\n  final String nestedResultMapId=resultMapping.getNestedResultMapId();\n  if (nestedResultMapId != null) {\n    try {\n      final ResultMap nestedResultMap=getNestedResultMap(rs,nestedResultMapId);\n      final Object collectionProperty=instantiateCollectionPropertyIfAppropriate(resultMapping,metaObject);\n      final CacheKey parentRowKey=createRowKey(resultMap,rs);\n      final CacheKey rowKey=createRowKey(nestedResultMap,rs);\n      final Set<CacheKey> localRowValueCache=getRowValueCache(parentRowKey);\n      final boolean knownValue=localRowValueCache.contains(rowKey);\n      localRowValueCache.add(rowKey);\n      Object rowValue=getRowValue(rs,nestedResultMap,rowKey);\n      Set<String> notNullColumns=resultMapping.getNotNullColumns();\n      boolean anyNotNullColumnIsNotNull=true;\n      if (notNullColumns != null && !notNullColumns.isEmpty()) {\n        anyNotNullColumnIsNotNull=false;\n        for (        String column : notNullColumns) {\n          rs.getObject(column);\n          if (!rs.wasNull()) {\n            anyNotNullColumnIsNotNull=true;\n          }\n        }\n      }\n      if (rowValue != null && anyNotNullColumnIsNotNull) {\n        if (collectionProperty != null && collectionProperty instanceof Collection) {\n          if (!knownValue) {\n            ((Collection)collectionProperty).add(rowValue);\n          }\n        }\n else {\n          metaObject.setValue(resultMapping.getProperty(),rowValue);\n        }\n        foundValues=true;\n      }\n    }\n catch (    Exception e) {\n      throw new ExecutorException(\"Error getting nested result map values for '\" + resultMapping.getProperty() + \"'.  Cause: \"+ e,e);\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 214,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2002,
        "startLineNumber" : 113,
        "startColumnNumber" : 102,
        "endLineNumber" : 157,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  boolean foundValues=false;\n  for (  ResultMapping resultMapping : resultMap.getPropertyResultMappings()) {\n    final String nestedResultMapId=resultMapping.getNestedResultMapId();\n    if (nestedResultMapId != null) {\n      try {\n        final ResultMap nestedResultMap=getNestedResultMap(rs,nestedResultMapId);\n        final Object collectionProperty=instantiateCollectionPropertyIfAppropriate(resultMapping,metaObject);\n        final CacheKey parentRowKey=createRowKey(resultMap,rs);\n        final CacheKey rowKey=createRowKey(nestedResultMap,rs);\n        final Set<CacheKey> localRowValueCache=getRowValueCache(parentRowKey);\n        final boolean knownValue=localRowValueCache.contains(rowKey);\n        localRowValueCache.add(rowKey);\n        Object rowValue=getRowValue(rs,nestedResultMap,rowKey);\n        Set<String> notNullColumns=resultMapping.getNotNullColumns();\n        boolean anyNotNullColumnIsNotNull=true;\n        if (notNullColumns != null && !notNullColumns.isEmpty()) {\n          anyNotNullColumnIsNotNull=false;\n          for (          String column : notNullColumns) {\n            rs.getObject(column);\n            if (!rs.wasNull()) {\n              anyNotNullColumnIsNotNull=true;\n            }\n          }\n        }\n        if (rowValue != null && anyNotNullColumnIsNotNull) {\n          if (collectionProperty != null && collectionProperty instanceof Collection) {\n            if (!knownValue) {\n              ((Collection)collectionProperty).add(rowValue);\n            }\n          }\n else {\n            metaObject.setValue(resultMapping.getProperty(),rowValue);\n          }\n          foundValues=true;\n        }\n      }\n catch (      Exception e) {\n        throw new ExecutorException(\"Error getting nested result map values for '\" + resultMapping.getProperty() + \"'.  Cause: \"+ e,e);\n      }\n    }\n  }\n  return foundValues;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 222,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2102,
        "startLineNumber" : 113,
        "startColumnNumber" : 2,
        "endLineNumber" : 157,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private boolean applyNestedResultMappings(ResultSet rs,ResultMap resultMap,MetaObject metaObject){\n  boolean foundValues=false;\n  for (  ResultMapping resultMapping : resultMap.getPropertyResultMappings()) {\n    final String nestedResultMapId=resultMapping.getNestedResultMapId();\n    if (nestedResultMapId != null) {\n      try {\n        final ResultMap nestedResultMap=getNestedResultMap(rs,nestedResultMapId);\n        final Object collectionProperty=instantiateCollectionPropertyIfAppropriate(resultMapping,metaObject);\n        final CacheKey parentRowKey=createRowKey(resultMap,rs);\n        final CacheKey rowKey=createRowKey(nestedResultMap,rs);\n        final Set<CacheKey> localRowValueCache=getRowValueCache(parentRowKey);\n        final boolean knownValue=localRowValueCache.contains(rowKey);\n        localRowValueCache.add(rowKey);\n        Object rowValue=getRowValue(rs,nestedResultMap,rowKey);\n        Set<String> notNullColumns=resultMapping.getNotNullColumns();\n        boolean anyNotNullColumnIsNotNull=true;\n        if (notNullColumns != null && !notNullColumns.isEmpty()) {\n          anyNotNullColumnIsNotNull=false;\n          for (          String column : notNullColumns) {\n            rs.getObject(column);\n            if (!rs.wasNull()) {\n              anyNotNullColumnIsNotNull=true;\n            }\n          }\n        }\n        if (rowValue != null && anyNotNullColumnIsNotNull) {\n          if (collectionProperty != null && collectionProperty instanceof Collection) {\n            if (!knownValue) {\n              ((Collection)collectionProperty).add(rowValue);\n            }\n          }\n else {\n            metaObject.setValue(resultMapping.getProperty(),rowValue);\n          }\n          foundValues=true;\n        }\n      }\n catch (      Exception e) {\n        throw new ExecutorException(\"Error getting nested result map values for '\" + resultMapping.getProperty() + \"'.  Cause: \"+ e,e);\n      }\n    }\n  }\n  return foundValues;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 238,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 141,
        "startColumnNumber" : 16,
        "endLineNumber" : 141,
        "endColumnNumber" : 86
      },
      "nodeContext" : "collectionProperty != null && collectionProperty instanceof Collection",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 40,
    "startLineNumber" : 141,
    "startColumnNumber" : 46,
    "endLineNumber" : 141,
    "endColumnNumber" : 86
  } ],
  "layoutRelationDataList" : [ ]
}