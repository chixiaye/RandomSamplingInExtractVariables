{
  "id" : 279,
  "expression" : "mock.longObjectReturningMethod()",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitousage/stubbing/ReturningDefaultValuesTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mock.longObjectReturningMethod()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 44,
      "startColumnNumber" : 35,
      "endLineNumber" : 44,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 68
      },
      "nodeContext" : "assertEquals(new Long(0L),mock.longObjectReturningMethod())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 69
      },
      "nodeContext" : "assertEquals(new Long(0L),mock.longObjectReturningMethod());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 632,
        "startLineNumber" : 40,
        "startColumnNumber" : 78,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertEquals(new Byte((byte)0),mock.byteObjectReturningMethod());\n  assertEquals(new Short((short)0),mock.shortObjectReturningMethod());\n  assertEquals(new Integer(0),mock.integerReturningMethod());\n  assertEquals(new Long(0L),mock.longObjectReturningMethod());\n  assertEquals(new Float(0.0F),mock.floatObjectReturningMethod(),0.0F);\n  assertEquals(new Double(0.0D),mock.doubleObjectReturningMethod(),0.0D);\n  assertEquals(new Character((char)0),mock.charObjectReturningMethod());\n  assertEquals(new Boolean(false),mock.booleanObjectReturningMethod());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 717,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnTheSameValuesForWrapperClasses() throws Exception {\n  assertEquals(new Byte((byte)0),mock.byteObjectReturningMethod());\n  assertEquals(new Short((short)0),mock.shortObjectReturningMethod());\n  assertEquals(new Integer(0),mock.integerReturningMethod());\n  assertEquals(new Long(0L),mock.longObjectReturningMethod());\n  assertEquals(new Float(0.0F),mock.floatObjectReturningMethod(),0.0F);\n  assertEquals(new Double(0.0D),mock.doubleObjectReturningMethod(),0.0D);\n  assertEquals(new Character((char)0),mock.charObjectReturningMethod());\n  assertEquals(new Boolean(false),mock.booleanObjectReturningMethod());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 69
      },
      "nodeContext" : "assertEquals(new Long(0L),mock.longObjectReturningMethod());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.Long"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 44,
    "startColumnNumber" : 35,
    "endLineNumber" : 44,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}