{
  "id" : 340,
  "expression" : "FILTER_SPI_HOLDER",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/filter/src/main/java/org/apache/rocketmq/filter/FilterFactory.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "FILTER_SPI_HOLDER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 43,
      "startColumnNumber" : 12,
      "endLineNumber" : 43,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 43,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 61
      },
      "nodeContext" : "FILTER_SPI_HOLDER.containsKey(filterSpi.ofType())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 187,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (FILTER_SPI_HOLDER.containsKey(filterSpi.ofType())) {\n  throw new IllegalArgumentException(String.format(\"Filter spi type(%s) already exist!\",filterSpi.ofType()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 266,
        "startLineNumber" : 42,
        "startColumnNumber" : 46,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (FILTER_SPI_HOLDER.containsKey(filterSpi.ofType())) {\n    throw new IllegalArgumentException(String.format(\"Filter spi type(%s) already exist!\",filterSpi.ofType()));\n  }\n  FILTER_SPI_HOLDER.put(filterSpi.ofType(),filterSpi);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 493,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Register a filter. <br> Note: <li>1. Filter registered will be used in broker server, so take care of it's reliability and performance.</li>\n */\npublic void register(FilterSpi filterSpi){\n  if (FILTER_SPI_HOLDER.containsKey(filterSpi.ofType())) {\n    throw new IllegalArgumentException(String.format(\"Filter spi type(%s) already exist!\",filterSpi.ofType()));\n  }\n  FILTER_SPI_HOLDER.put(filterSpi.ofType(),filterSpi);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 37,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 43,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 61
      },
      "nodeContext" : "FILTER_SPI_HOLDER.containsKey(filterSpi.ofType())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "java.util.Map<java.lang.String,org.apache.rocketmq.filter.FilterSpi>"
  }, {
    "nodeContext" : "FILTER_SPI_HOLDER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 47,
      "startColumnNumber" : 8,
      "endLineNumber" : 47,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 60
      },
      "nodeContext" : "FILTER_SPI_HOLDER.put(filterSpi.ofType(),filterSpi)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 61
      },
      "nodeContext" : "FILTER_SPI_HOLDER.put(filterSpi.ofType(),filterSpi);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 266,
        "startLineNumber" : 42,
        "startColumnNumber" : 46,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (FILTER_SPI_HOLDER.containsKey(filterSpi.ofType())) {\n    throw new IllegalArgumentException(String.format(\"Filter spi type(%s) already exist!\",filterSpi.ofType()));\n  }\n  FILTER_SPI_HOLDER.put(filterSpi.ofType(),filterSpi);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 493,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Register a filter. <br> Note: <li>1. Filter registered will be used in broker server, so take care of it's reliability and performance.</li>\n */\npublic void register(FilterSpi filterSpi){\n  if (FILTER_SPI_HOLDER.containsKey(filterSpi.ofType())) {\n    throw new IllegalArgumentException(String.format(\"Filter spi type(%s) already exist!\",filterSpi.ofType()));\n  }\n  FILTER_SPI_HOLDER.put(filterSpi.ofType(),filterSpi);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 37,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 61
      },
      "nodeContext" : "FILTER_SPI_HOLDER.put(filterSpi.ofType(),filterSpi);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.util.Map<java.lang.String,org.apache.rocketmq.filter.FilterSpi>"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 43,
    "startColumnNumber" : 12,
    "endLineNumber" : 43,
    "endColumnNumber" : 29
  }, {
    "charLength" : 17,
    "startLineNumber" : 47,
    "startColumnNumber" : 8,
    "endLineNumber" : 47,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}