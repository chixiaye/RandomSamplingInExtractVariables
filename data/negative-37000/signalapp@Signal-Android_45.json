{
  "id" : 45,
  "expression" : "uuidBytes.length + 1",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/libsignal/service/src/test/java/org/whispersystems/signalservice/api/groupsv2/ProtoTestUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "uuidBytes.length + 1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 39,
      "startColumnNumber" : 56,
      "endLineNumber" : 39,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 39,
        "startColumnNumber" : 31,
        "endLineNumber" : 39,
        "endColumnNumber" : 77
      },
      "nodeContext" : "Arrays.copyOf(uuidBytes,uuidBytes.length + 1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 39,
        "startColumnNumber" : 11,
        "endLineNumber" : 39,
        "endColumnNumber" : 78
      },
      "nodeContext" : "ByteString.copyFrom(Arrays.copyOf(uuidBytes,uuidBytes.length + 1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 79
      },
      "nodeContext" : "return ByteString.copyFrom(Arrays.copyOf(uuidBytes,uuidBytes.length + 1));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 37,
        "startColumnNumber" : 39,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  byte[] uuidBytes=UuidUtil.toByteArray(uuid);\n  return ByteString.copyFrom(Arrays.copyOf(uuidBytes,uuidBytes.length + 1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 312,
        "startLineNumber" : 34,
        "startColumnNumber" : 2,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Emulates encryption by creating a unique  {@link ByteString} that won't equal a byte string created from the {@link UUID}.\n */\nstatic ByteString encrypt(UUID uuid){\n  byte[] uuidBytes=UuidUtil.toByteArray(uuid);\n  return ByteString.copyFrom(Arrays.copyOf(uuidBytes,uuidBytes.length + 1));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 34,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 79
      },
      "nodeContext" : "return ByteString.copyFrom(Arrays.copyOf(uuidBytes,uuidBytes.length + 1));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 39,
    "startColumnNumber" : 56,
    "endLineNumber" : 39,
    "endColumnNumber" : 76
  } ],
  "layoutRelationDataList" : [ ]
}