{
  "id" : 275,
  "expression" : "frameworkMethod",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-test-autoconfigure/src/test/java/org/springframework/boot/test/autoconfigure/web/servlet/mockmvc/WebMvcTestPrintDefaultRunner.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "frameworkMethod",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 42,
      "startColumnNumber" : 42,
      "endLineNumber" : 42,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 42,
        "startColumnNumber" : 24,
        "endLineNumber" : 42,
        "endColumnNumber" : 58
      },
      "nodeContext" : "super.methodBlock(frameworkMethod)",
      "nodeType" : "SuperMethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 42,
        "endColumnNumber" : 58
      },
      "nodeContext" : "statement=super.methodBlock(frameworkMethod)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 42,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Statement statement=super.methodBlock(frameworkMethod);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 585,
        "startLineNumber" : 41,
        "startColumnNumber" : 66,
        "endLineNumber" : 56,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Statement statement=super.methodBlock(frameworkMethod);\n  statement=new AlwaysPassStatement(statement);\n  OutputCapture outputCapture=new OutputCapture();\n  if (frameworkMethod.getName().equals(\"shouldPrint\")) {\n    outputCapture.expect(containsString(\"HTTP Method\"));\n  }\n else   if (frameworkMethod.getName().equals(\"shouldNotPrint\")) {\n    outputCapture.expect(not(containsString(\"HTTP Method\")));\n  }\n else {\n    throw new IllegalStateException(\"Unexpected test method\");\n  }\n  System.err.println(frameworkMethod.getName());\n  return outputCapture.apply(statement,null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 661,
        "startLineNumber" : 40,
        "startColumnNumber" : 1,
        "endLineNumber" : 56,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected Statement methodBlock(FrameworkMethod frameworkMethod){\n  Statement statement=super.methodBlock(frameworkMethod);\n  statement=new AlwaysPassStatement(statement);\n  OutputCapture outputCapture=new OutputCapture();\n  if (frameworkMethod.getName().equals(\"shouldPrint\")) {\n    outputCapture.expect(containsString(\"HTTP Method\"));\n  }\n else   if (frameworkMethod.getName().equals(\"shouldNotPrint\")) {\n    outputCapture.expect(not(containsString(\"HTTP Method\")));\n  }\n else {\n    throw new IllegalStateException(\"Unexpected test method\");\n  }\n  System.err.println(frameworkMethod.getName());\n  return outputCapture.apply(statement,null);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 88,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 42,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Statement statement=super.methodBlock(frameworkMethod);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.FrameworkMethod"
  }, {
    "nodeContext" : "frameworkMethod",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 45,
      "startColumnNumber" : 6,
      "endLineNumber" : 45,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 45,
        "startColumnNumber" : 6,
        "endLineNumber" : 45,
        "endColumnNumber" : 31
      },
      "nodeContext" : "frameworkMethod.getName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 45,
        "startColumnNumber" : 6,
        "endLineNumber" : 45,
        "endColumnNumber" : 53
      },
      "nodeContext" : "frameworkMethod.getName().equals(\"shouldPrint\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 319,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 53,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (frameworkMethod.getName().equals(\"shouldPrint\")) {\n  outputCapture.expect(containsString(\"HTTP Method\"));\n}\n else if (frameworkMethod.getName().equals(\"shouldNotPrint\")) {\n  outputCapture.expect(not(containsString(\"HTTP Method\")));\n}\n else {\n  throw new IllegalStateException(\"Unexpected test method\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 585,
        "startLineNumber" : 41,
        "startColumnNumber" : 66,
        "endLineNumber" : 56,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Statement statement=super.methodBlock(frameworkMethod);\n  statement=new AlwaysPassStatement(statement);\n  OutputCapture outputCapture=new OutputCapture();\n  if (frameworkMethod.getName().equals(\"shouldPrint\")) {\n    outputCapture.expect(containsString(\"HTTP Method\"));\n  }\n else   if (frameworkMethod.getName().equals(\"shouldNotPrint\")) {\n    outputCapture.expect(not(containsString(\"HTTP Method\")));\n  }\n else {\n    throw new IllegalStateException(\"Unexpected test method\");\n  }\n  System.err.println(frameworkMethod.getName());\n  return outputCapture.apply(statement,null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 661,
        "startLineNumber" : 40,
        "startColumnNumber" : 1,
        "endLineNumber" : 56,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected Statement methodBlock(FrameworkMethod frameworkMethod){\n  Statement statement=super.methodBlock(frameworkMethod);\n  statement=new AlwaysPassStatement(statement);\n  OutputCapture outputCapture=new OutputCapture();\n  if (frameworkMethod.getName().equals(\"shouldPrint\")) {\n    outputCapture.expect(containsString(\"HTTP Method\"));\n  }\n else   if (frameworkMethod.getName().equals(\"shouldNotPrint\")) {\n    outputCapture.expect(not(containsString(\"HTTP Method\")));\n  }\n else {\n    throw new IllegalStateException(\"Unexpected test method\");\n  }\n  System.err.println(frameworkMethod.getName());\n  return outputCapture.apply(statement,null);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 88,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 45,
        "startColumnNumber" : 6,
        "endLineNumber" : 45,
        "endColumnNumber" : 53
      },
      "nodeContext" : "frameworkMethod.getName().equals(\"shouldPrint\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.FrameworkMethod"
  }, {
    "nodeContext" : "frameworkMethod",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 48,
      "startColumnNumber" : 11,
      "endLineNumber" : 48,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 48,
        "startColumnNumber" : 11,
        "endLineNumber" : 48,
        "endColumnNumber" : 36
      },
      "nodeContext" : "frameworkMethod.getName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 48,
        "startColumnNumber" : 11,
        "endLineNumber" : 48,
        "endColumnNumber" : 61
      },
      "nodeContext" : "frameworkMethod.getName().equals(\"shouldNotPrint\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 48,
        "startColumnNumber" : 7,
        "endLineNumber" : 53,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (frameworkMethod.getName().equals(\"shouldNotPrint\")) {\n  outputCapture.expect(not(containsString(\"HTTP Method\")));\n}\n else {\n  throw new IllegalStateException(\"Unexpected test method\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 319,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 53,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (frameworkMethod.getName().equals(\"shouldPrint\")) {\n  outputCapture.expect(containsString(\"HTTP Method\"));\n}\n else if (frameworkMethod.getName().equals(\"shouldNotPrint\")) {\n  outputCapture.expect(not(containsString(\"HTTP Method\")));\n}\n else {\n  throw new IllegalStateException(\"Unexpected test method\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 585,
        "startLineNumber" : 41,
        "startColumnNumber" : 66,
        "endLineNumber" : 56,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Statement statement=super.methodBlock(frameworkMethod);\n  statement=new AlwaysPassStatement(statement);\n  OutputCapture outputCapture=new OutputCapture();\n  if (frameworkMethod.getName().equals(\"shouldPrint\")) {\n    outputCapture.expect(containsString(\"HTTP Method\"));\n  }\n else   if (frameworkMethod.getName().equals(\"shouldNotPrint\")) {\n    outputCapture.expect(not(containsString(\"HTTP Method\")));\n  }\n else {\n    throw new IllegalStateException(\"Unexpected test method\");\n  }\n  System.err.println(frameworkMethod.getName());\n  return outputCapture.apply(statement,null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 661,
        "startLineNumber" : 40,
        "startColumnNumber" : 1,
        "endLineNumber" : 56,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected Statement methodBlock(FrameworkMethod frameworkMethod){\n  Statement statement=super.methodBlock(frameworkMethod);\n  statement=new AlwaysPassStatement(statement);\n  OutputCapture outputCapture=new OutputCapture();\n  if (frameworkMethod.getName().equals(\"shouldPrint\")) {\n    outputCapture.expect(containsString(\"HTTP Method\"));\n  }\n else   if (frameworkMethod.getName().equals(\"shouldNotPrint\")) {\n    outputCapture.expect(not(containsString(\"HTTP Method\")));\n  }\n else {\n    throw new IllegalStateException(\"Unexpected test method\");\n  }\n  System.err.println(frameworkMethod.getName());\n  return outputCapture.apply(statement,null);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 88,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 48,
        "startColumnNumber" : 11,
        "endLineNumber" : 48,
        "endColumnNumber" : 61
      },
      "nodeContext" : "frameworkMethod.getName().equals(\"shouldNotPrint\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.FrameworkMethod"
  }, {
    "nodeContext" : "frameworkMethod",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 54,
      "startColumnNumber" : 21,
      "endLineNumber" : 54,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 54,
        "startColumnNumber" : 21,
        "endLineNumber" : 54,
        "endColumnNumber" : 46
      },
      "nodeContext" : "frameworkMethod.getName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 54,
        "endColumnNumber" : 47
      },
      "nodeContext" : "System.err.println(frameworkMethod.getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 54,
        "endColumnNumber" : 48
      },
      "nodeContext" : "System.err.println(frameworkMethod.getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 585,
        "startLineNumber" : 41,
        "startColumnNumber" : 66,
        "endLineNumber" : 56,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Statement statement=super.methodBlock(frameworkMethod);\n  statement=new AlwaysPassStatement(statement);\n  OutputCapture outputCapture=new OutputCapture();\n  if (frameworkMethod.getName().equals(\"shouldPrint\")) {\n    outputCapture.expect(containsString(\"HTTP Method\"));\n  }\n else   if (frameworkMethod.getName().equals(\"shouldNotPrint\")) {\n    outputCapture.expect(not(containsString(\"HTTP Method\")));\n  }\n else {\n    throw new IllegalStateException(\"Unexpected test method\");\n  }\n  System.err.println(frameworkMethod.getName());\n  return outputCapture.apply(statement,null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 661,
        "startLineNumber" : 40,
        "startColumnNumber" : 1,
        "endLineNumber" : 56,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected Statement methodBlock(FrameworkMethod frameworkMethod){\n  Statement statement=super.methodBlock(frameworkMethod);\n  statement=new AlwaysPassStatement(statement);\n  OutputCapture outputCapture=new OutputCapture();\n  if (frameworkMethod.getName().equals(\"shouldPrint\")) {\n    outputCapture.expect(containsString(\"HTTP Method\"));\n  }\n else   if (frameworkMethod.getName().equals(\"shouldNotPrint\")) {\n    outputCapture.expect(not(containsString(\"HTTP Method\")));\n  }\n else {\n    throw new IllegalStateException(\"Unexpected test method\");\n  }\n  System.err.println(frameworkMethod.getName());\n  return outputCapture.apply(statement,null);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 88,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 54,
        "endColumnNumber" : 48
      },
      "nodeContext" : "System.err.println(frameworkMethod.getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.springframework.boot.test.autoconfigure.web.servlet.mockmvc.FrameworkMethod"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 42,
    "startColumnNumber" : 42,
    "endLineNumber" : 42,
    "endColumnNumber" : 57
  }, {
    "charLength" : 15,
    "startLineNumber" : 45,
    "startColumnNumber" : 6,
    "endLineNumber" : 45,
    "endColumnNumber" : 21
  }, {
    "charLength" : 15,
    "startLineNumber" : 48,
    "startColumnNumber" : 11,
    "endLineNumber" : 48,
    "endColumnNumber" : 26
  }, {
    "charLength" : 15,
    "startLineNumber" : 54,
    "startColumnNumber" : 21,
    "endLineNumber" : 54,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}