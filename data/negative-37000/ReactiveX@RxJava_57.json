{
  "id" : 57,
  "expression" : "result.toBlocking()",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/flowable/FlowableZipTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "result.toBlocking()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 104,
      "startColumnNumber" : 28,
      "endLineNumber" : 104,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 104,
        "startColumnNumber" : 28,
        "endLineNumber" : 104,
        "endColumnNumber" : 54
      },
      "nodeContext" : "result.toBlocking().last()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertSame(invoked,result.toBlocking().last())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 56
      },
      "nodeContext" : "assertSame(invoked,result.toBlocking().last());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 571,
        "startLineNumber" : 89,
        "startColumnNumber" : 40,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Object invoked=new Object();\n  Collection<Flowable<Object>> observables=Collections.emptyList();\n  Flowable<Object> result=Flowable.zip(observables,new Function<Object[],Object>(){\n    @Override public Object apply(    Object[] args){\n      System.out.println(\"received: \" + args);\n      assertEquals(\"No argument should have been passed\",0,args.length);\n      return invoked;\n    }\n  }\n);\n  assertSame(invoked,result.toBlocking().last());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 963,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Occasionally zip may be invoked with 0 observables. Test that we don't block indefinitely instead of immediately invoking zip with 0 argument. We now expect an NoSuchElementException since last() requires at least one value and nothing will be emitted.\n */\n@Test(expected=NoSuchElementException.class) public void nonBlockingObservable(){\n  final Object invoked=new Object();\n  Collection<Flowable<Object>> observables=Collections.emptyList();\n  Flowable<Object> result=Flowable.zip(observables,new Function<Object[],Object>(){\n    @Override public Object apply(    Object[] args){\n      System.out.println(\"received: \" + args);\n      assertEquals(\"No argument should have been passed\",0,args.length);\n      return invoked;\n    }\n  }\n);\n  assertSame(invoked,result.toBlocking().last());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 56
      },
      "nodeContext" : "assertSame(invoked,result.toBlocking().last());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "io.reactivex.flowables.BlockingFlowable<java.lang.Object>"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 104,
    "startColumnNumber" : 28,
    "endLineNumber" : 104,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ ]
}