{
  "id" : 451,
  "expression" : "data",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/telegram/messenger/audioinfo/m4a/MP4Box.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "data",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 67,
      "startColumnNumber" : 19,
      "endLineNumber" : 67,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 67,
        "startColumnNumber" : 19,
        "endLineNumber" : 67,
        "endColumnNumber" : 33
      },
      "nodeContext" : "data.readInt()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 67,
        "startColumnNumber" : 6,
        "endLineNumber" : 67,
        "endColumnNumber" : 33
      },
      "nodeContext" : "atomLength=data.readInt()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 67,
        "startColumnNumber" : 2,
        "endLineNumber" : 67,
        "endColumnNumber" : 34
      },
      "nodeContext" : "int atomLength=data.readInt();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 475,
        "startLineNumber" : 63,
        "startColumnNumber" : 47,
        "endLineNumber" : 78,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (child != null) {\n    child.skip();\n  }\n  int atomLength=data.readInt();\n  byte[] typeBytes=new byte[4];\n  data.readFully(typeBytes);\n  String atomType=new String(typeBytes,ASCII);\n  RangeInputStream atomInput;\n  if (atomLength == 1) {\n    atomInput=new RangeInputStream(input,16,data.readLong() - 16);\n  }\n else {\n    atomInput=new RangeInputStream(input,8,atomLength - 8);\n  }\n  return child=new MP4Atom(atomInput,this,atomType);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 521,
        "startLineNumber" : 63,
        "startColumnNumber" : 1,
        "endLineNumber" : 78,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public MP4Atom nextChild() throws IOException {\n  if (child != null) {\n    child.skip();\n  }\n  int atomLength=data.readInt();\n  byte[] typeBytes=new byte[4];\n  data.readFully(typeBytes);\n  String atomType=new String(typeBytes,ASCII);\n  RangeInputStream atomInput;\n  if (atomLength == 1) {\n    atomInput=new RangeInputStream(input,16,data.readLong() - 16);\n  }\n else {\n    atomInput=new RangeInputStream(input,8,atomLength - 8);\n  }\n  return child=new MP4Atom(atomInput,this,atomType);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 94,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 67,
        "startColumnNumber" : 2,
        "endLineNumber" : 67,
        "endColumnNumber" : 34
      },
      "nodeContext" : "int atomLength=data.readInt();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.io.DataInput"
  }, {
    "nodeContext" : "data",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 69,
      "startColumnNumber" : 2,
      "endLineNumber" : 69,
      "endColumnNumber" : 6
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 69,
        "endColumnNumber" : 27
      },
      "nodeContext" : "data.readFully(typeBytes)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 69,
        "endColumnNumber" : 28
      },
      "nodeContext" : "data.readFully(typeBytes);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 475,
        "startLineNumber" : 63,
        "startColumnNumber" : 47,
        "endLineNumber" : 78,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (child != null) {\n    child.skip();\n  }\n  int atomLength=data.readInt();\n  byte[] typeBytes=new byte[4];\n  data.readFully(typeBytes);\n  String atomType=new String(typeBytes,ASCII);\n  RangeInputStream atomInput;\n  if (atomLength == 1) {\n    atomInput=new RangeInputStream(input,16,data.readLong() - 16);\n  }\n else {\n    atomInput=new RangeInputStream(input,8,atomLength - 8);\n  }\n  return child=new MP4Atom(atomInput,this,atomType);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 521,
        "startLineNumber" : 63,
        "startColumnNumber" : 1,
        "endLineNumber" : 78,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public MP4Atom nextChild() throws IOException {\n  if (child != null) {\n    child.skip();\n  }\n  int atomLength=data.readInt();\n  byte[] typeBytes=new byte[4];\n  data.readFully(typeBytes);\n  String atomType=new String(typeBytes,ASCII);\n  RangeInputStream atomInput;\n  if (atomLength == 1) {\n    atomInput=new RangeInputStream(input,16,data.readLong() - 16);\n  }\n else {\n    atomInput=new RangeInputStream(input,8,atomLength - 8);\n  }\n  return child=new MP4Atom(atomInput,this,atomType);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 94,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 69,
        "endColumnNumber" : 28
      },
      "nodeContext" : "data.readFully(typeBytes);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.io.DataInput"
  }, {
    "nodeContext" : "data",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 73,
      "startColumnNumber" : 47,
      "endLineNumber" : 73,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 73,
        "startColumnNumber" : 47,
        "endLineNumber" : 73,
        "endColumnNumber" : 62
      },
      "nodeContext" : "data.readLong()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 73,
        "startColumnNumber" : 47,
        "endLineNumber" : 73,
        "endColumnNumber" : 67
      },
      "nodeContext" : "data.readLong() - 16",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 73,
        "startColumnNumber" : 15,
        "endLineNumber" : 73,
        "endColumnNumber" : 68
      },
      "nodeContext" : "new RangeInputStream(input,16,data.readLong() - 16)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 73,
        "startColumnNumber" : 3,
        "endLineNumber" : 73,
        "endColumnNumber" : 68
      },
      "nodeContext" : "atomInput=new RangeInputStream(input,16,data.readLong() - 16)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 73,
        "startColumnNumber" : 3,
        "endLineNumber" : 73,
        "endColumnNumber" : 69
      },
      "nodeContext" : "atomInput=new RangeInputStream(input,16,data.readLong() - 16);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 72,
        "startColumnNumber" : 23,
        "endLineNumber" : 74,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  atomInput=new RangeInputStream(input,16,data.readLong() - 16);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 72,
        "startColumnNumber" : 2,
        "endLineNumber" : 76,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (atomLength == 1) {\n  atomInput=new RangeInputStream(input,16,data.readLong() - 16);\n}\n else {\n  atomInput=new RangeInputStream(input,8,atomLength - 8);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 475,
        "startLineNumber" : 63,
        "startColumnNumber" : 47,
        "endLineNumber" : 78,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (child != null) {\n    child.skip();\n  }\n  int atomLength=data.readInt();\n  byte[] typeBytes=new byte[4];\n  data.readFully(typeBytes);\n  String atomType=new String(typeBytes,ASCII);\n  RangeInputStream atomInput;\n  if (atomLength == 1) {\n    atomInput=new RangeInputStream(input,16,data.readLong() - 16);\n  }\n else {\n    atomInput=new RangeInputStream(input,8,atomLength - 8);\n  }\n  return child=new MP4Atom(atomInput,this,atomType);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 521,
        "startLineNumber" : 63,
        "startColumnNumber" : 1,
        "endLineNumber" : 78,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public MP4Atom nextChild() throws IOException {\n  if (child != null) {\n    child.skip();\n  }\n  int atomLength=data.readInt();\n  byte[] typeBytes=new byte[4];\n  data.readFully(typeBytes);\n  String atomType=new String(typeBytes,ASCII);\n  RangeInputStream atomInput;\n  if (atomLength == 1) {\n    atomInput=new RangeInputStream(input,16,data.readLong() - 16);\n  }\n else {\n    atomInput=new RangeInputStream(input,8,atomLength - 8);\n  }\n  return child=new MP4Atom(atomInput,this,atomType);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 94,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 73,
        "startColumnNumber" : 3,
        "endLineNumber" : 73,
        "endColumnNumber" : 69
      },
      "nodeContext" : "atomInput=new RangeInputStream(input,16,data.readLong() - 16);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.io.DataInput"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 67,
    "startColumnNumber" : 19,
    "endLineNumber" : 67,
    "endColumnNumber" : 23
  }, {
    "charLength" : 4,
    "startLineNumber" : 69,
    "startColumnNumber" : 2,
    "endLineNumber" : 69,
    "endColumnNumber" : 6
  }, {
    "charLength" : 4,
    "startLineNumber" : 73,
    "startColumnNumber" : 47,
    "endLineNumber" : 73,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 7
  } ]
}