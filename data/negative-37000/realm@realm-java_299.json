{
  "id" : 299,
  "expression" : "table.hasSearchIndex(table.getColumnKey(\"indexLong\"))",
  "projectName" : "realm@realm-java",
  "commitID" : "9da3b229a46407f73e2003fb40857cadf062086b",
  "filePath" : "/realm/realm-library/src/androidTest/java/io/realm/RealmAnnotationTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "table.hasSearchIndex(table.getColumnKey(\"indexLong\"))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 53,
      "startLineNumber" : 93,
      "startColumnNumber" : 19,
      "endLineNumber" : 93,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 73
      },
      "nodeContext" : "assertTrue(table.hasSearchIndex(table.getColumnKey(\"indexLong\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 74
      },
      "nodeContext" : "assertTrue(table.hasSearchIndex(table.getColumnKey(\"indexLong\")));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1168,
        "startLineNumber" : 78,
        "startColumnNumber" : 24,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Table table=realm.getTable(AnnotationIndexTypes.class);\n  assertTrue(table.hasSearchIndex(table.getColumnKey(\"indexString\")));\n  assertFalse(table.hasSearchIndex(table.getColumnKey(\"notIndexString\")));\n  assertTrue(table.hasSearchIndex(table.getColumnKey(\"indexInt\")));\n  assertFalse(table.hasSearchIndex(table.getColumnKey(\"notIndexInt\")));\n  assertTrue(table.hasSearchIndex(table.getColumnKey(\"indexByte\")));\n  assertFalse(table.hasSearchIndex(table.getColumnKey(\"notIndexByte\")));\n  assertTrue(table.hasSearchIndex(table.getColumnKey(\"indexShort\")));\n  assertFalse(table.hasSearchIndex(table.getColumnKey(\"notIndexShort\")));\n  assertTrue(table.hasSearchIndex(table.getColumnKey(\"indexLong\")));\n  assertFalse(table.hasSearchIndex(table.getColumnKey(\"notIndexLong\")));\n  assertTrue(table.hasSearchIndex(table.getColumnKey(\"indexBoolean\")));\n  assertFalse(table.hasSearchIndex(table.getColumnKey(\"notIndexBoolean\")));\n  assertTrue(table.hasSearchIndex(table.getColumnKey(\"indexDate\")));\n  assertFalse(table.hasSearchIndex(table.getColumnKey(\"notIndexDate\")));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1198,
        "startLineNumber" : 77,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void index(){\n  Table table=realm.getTable(AnnotationIndexTypes.class);\n  assertTrue(table.hasSearchIndex(table.getColumnKey(\"indexString\")));\n  assertFalse(table.hasSearchIndex(table.getColumnKey(\"notIndexString\")));\n  assertTrue(table.hasSearchIndex(table.getColumnKey(\"indexInt\")));\n  assertFalse(table.hasSearchIndex(table.getColumnKey(\"notIndexInt\")));\n  assertTrue(table.hasSearchIndex(table.getColumnKey(\"indexByte\")));\n  assertFalse(table.hasSearchIndex(table.getColumnKey(\"notIndexByte\")));\n  assertTrue(table.hasSearchIndex(table.getColumnKey(\"indexShort\")));\n  assertFalse(table.hasSearchIndex(table.getColumnKey(\"notIndexShort\")));\n  assertTrue(table.hasSearchIndex(table.getColumnKey(\"indexLong\")));\n  assertFalse(table.hasSearchIndex(table.getColumnKey(\"notIndexLong\")));\n  assertTrue(table.hasSearchIndex(table.getColumnKey(\"indexBoolean\")));\n  assertFalse(table.hasSearchIndex(table.getColumnKey(\"notIndexBoolean\")));\n  assertTrue(table.hasSearchIndex(table.getColumnKey(\"indexDate\")));\n  assertFalse(table.hasSearchIndex(table.getColumnKey(\"notIndexDate\")));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 158,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 74
      },
      "nodeContext" : "assertTrue(table.hasSearchIndex(table.getColumnKey(\"indexLong\")));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 53,
    "startLineNumber" : 93,
    "startColumnNumber" : 19,
    "endLineNumber" : 93,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ ]
}