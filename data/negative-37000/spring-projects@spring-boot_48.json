{
  "id" : 48,
  "expression" : "\"spring.activemq.pool.reconnectOnException=false\"",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-autoconfigure/src/test/java/org/springframework/boot/autoconfigure/jms/activemq/ActiveMQAutoConfigurationTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"spring.activemq.pool.reconnectOnException=false\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 49,
      "startLineNumber" : 173,
      "startColumnNumber" : 6,
      "endLineNumber" : 173,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 679,
        "startLineNumber" : 164,
        "startColumnNumber" : 2,
        "endLineNumber" : 175,
        "endColumnNumber" : 57
      },
      "nodeContext" : "this.contextRunner.withUserConfiguration(EmptyConfiguration.class).withPropertyValues(\"spring.activemq.pool.enabled=true\",\"spring.activemq.pool.blockIfFull=false\",\"spring.activemq.pool.blockIfFullTimeout=64\",\"spring.activemq.pool.createConnectionOnStartup=false\",\"spring.activemq.pool.expiryTimeout=4096\",\"spring.activemq.pool.idleTimeout=512\",\"spring.activemq.pool.maxConnections=256\",\"spring.activemq.pool.maximumActiveSessionPerConnection=1024\",\"spring.activemq.pool.reconnectOnException=false\",\"spring.activemq.pool.timeBetweenExpirationCheck=2048\",\"spring.activemq.pool.useAnonymousProducers=false\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 1762,
        "startLineNumber" : 164,
        "startColumnNumber" : 2,
        "endLineNumber" : 198,
        "endColumnNumber" : 6
      },
      "nodeContext" : "this.contextRunner.withUserConfiguration(EmptyConfiguration.class).withPropertyValues(\"spring.activemq.pool.enabled=true\",\"spring.activemq.pool.blockIfFull=false\",\"spring.activemq.pool.blockIfFullTimeout=64\",\"spring.activemq.pool.createConnectionOnStartup=false\",\"spring.activemq.pool.expiryTimeout=4096\",\"spring.activemq.pool.idleTimeout=512\",\"spring.activemq.pool.maxConnections=256\",\"spring.activemq.pool.maximumActiveSessionPerConnection=1024\",\"spring.activemq.pool.reconnectOnException=false\",\"spring.activemq.pool.timeBetweenExpirationCheck=2048\",\"spring.activemq.pool.useAnonymousProducers=false\").run((context) -> {\n  assertThat(context.getBeansOfType(PooledConnectionFactory.class)).hasSize(1);\n  PooledConnectionFactory connectionFactory=context.getBean(PooledConnectionFactory.class);\n  assertThat(connectionFactory.isBlockIfSessionPoolIsFull()).isEqualTo(false);\n  assertThat(connectionFactory.getBlockIfSessionPoolIsFullTimeout()).isEqualTo(64);\n  assertThat(connectionFactory.isCreateConnectionOnStartup()).isEqualTo(false);\n  assertThat(connectionFactory.getExpiryTimeout()).isEqualTo(4096);\n  assertThat(connectionFactory.getIdleTimeout()).isEqualTo(512);\n  assertThat(connectionFactory.getMaxConnections()).isEqualTo(256);\n  assertThat(connectionFactory.getMaximumActiveSessionPerConnection()).isEqualTo(1024);\n  assertThat(connectionFactory.isReconnectOnException()).isEqualTo(false);\n  assertThat(connectionFactory.getTimeBetweenExpirationCheckMillis()).isEqualTo(2048);\n  assertThat(connectionFactory.isUseAnonymousProducers()).isEqualTo(false);\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 140,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1763,
        "startLineNumber" : 164,
        "startColumnNumber" : 2,
        "endLineNumber" : 198,
        "endColumnNumber" : 7
      },
      "nodeContext" : "this.contextRunner.withUserConfiguration(EmptyConfiguration.class).withPropertyValues(\"spring.activemq.pool.enabled=true\",\"spring.activemq.pool.blockIfFull=false\",\"spring.activemq.pool.blockIfFullTimeout=64\",\"spring.activemq.pool.createConnectionOnStartup=false\",\"spring.activemq.pool.expiryTimeout=4096\",\"spring.activemq.pool.idleTimeout=512\",\"spring.activemq.pool.maxConnections=256\",\"spring.activemq.pool.maximumActiveSessionPerConnection=1024\",\"spring.activemq.pool.reconnectOnException=false\",\"spring.activemq.pool.timeBetweenExpirationCheck=2048\",\"spring.activemq.pool.useAnonymousProducers=false\").run((context) -> {\n  assertThat(context.getBeansOfType(PooledConnectionFactory.class)).hasSize(1);\n  PooledConnectionFactory connectionFactory=context.getBean(PooledConnectionFactory.class);\n  assertThat(connectionFactory.isBlockIfSessionPoolIsFull()).isEqualTo(false);\n  assertThat(connectionFactory.getBlockIfSessionPoolIsFullTimeout()).isEqualTo(64);\n  assertThat(connectionFactory.isCreateConnectionOnStartup()).isEqualTo(false);\n  assertThat(connectionFactory.getExpiryTimeout()).isEqualTo(4096);\n  assertThat(connectionFactory.getIdleTimeout()).isEqualTo(512);\n  assertThat(connectionFactory.getMaxConnections()).isEqualTo(256);\n  assertThat(connectionFactory.getMaximumActiveSessionPerConnection()).isEqualTo(1024);\n  assertThat(connectionFactory.isReconnectOnException()).isEqualTo(false);\n  assertThat(connectionFactory.getTimeBetweenExpirationCheckMillis()).isEqualTo(2048);\n  assertThat(connectionFactory.isUseAnonymousProducers()).isEqualTo(false);\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 141,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1770,
        "startLineNumber" : 163,
        "startColumnNumber" : 54,
        "endLineNumber" : 199,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  this.contextRunner.withUserConfiguration(EmptyConfiguration.class).withPropertyValues(\"spring.activemq.pool.enabled=true\",\"spring.activemq.pool.blockIfFull=false\",\"spring.activemq.pool.blockIfFullTimeout=64\",\"spring.activemq.pool.createConnectionOnStartup=false\",\"spring.activemq.pool.expiryTimeout=4096\",\"spring.activemq.pool.idleTimeout=512\",\"spring.activemq.pool.maxConnections=256\",\"spring.activemq.pool.maximumActiveSessionPerConnection=1024\",\"spring.activemq.pool.reconnectOnException=false\",\"spring.activemq.pool.timeBetweenExpirationCheck=2048\",\"spring.activemq.pool.useAnonymousProducers=false\").run((context) -> {\n    assertThat(context.getBeansOfType(PooledConnectionFactory.class)).hasSize(1);\n    PooledConnectionFactory connectionFactory=context.getBean(PooledConnectionFactory.class);\n    assertThat(connectionFactory.isBlockIfSessionPoolIsFull()).isEqualTo(false);\n    assertThat(connectionFactory.getBlockIfSessionPoolIsFullTimeout()).isEqualTo(64);\n    assertThat(connectionFactory.isCreateConnectionOnStartup()).isEqualTo(false);\n    assertThat(connectionFactory.getExpiryTimeout()).isEqualTo(4096);\n    assertThat(connectionFactory.getIdleTimeout()).isEqualTo(512);\n    assertThat(connectionFactory.getMaxConnections()).isEqualTo(256);\n    assertThat(connectionFactory.getMaximumActiveSessionPerConnection()).isEqualTo(1024);\n    assertThat(connectionFactory.isReconnectOnException()).isEqualTo(false);\n    assertThat(connectionFactory.getTimeBetweenExpirationCheckMillis()).isEqualTo(2048);\n    assertThat(connectionFactory.isUseAnonymousProducers()).isEqualTo(false);\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1830,
        "startLineNumber" : 162,
        "startColumnNumber" : 1,
        "endLineNumber" : 199,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void customPooledConnectionFactoryIsApplied(){\n  this.contextRunner.withUserConfiguration(EmptyConfiguration.class).withPropertyValues(\"spring.activemq.pool.enabled=true\",\"spring.activemq.pool.blockIfFull=false\",\"spring.activemq.pool.blockIfFullTimeout=64\",\"spring.activemq.pool.createConnectionOnStartup=false\",\"spring.activemq.pool.expiryTimeout=4096\",\"spring.activemq.pool.idleTimeout=512\",\"spring.activemq.pool.maxConnections=256\",\"spring.activemq.pool.maximumActiveSessionPerConnection=1024\",\"spring.activemq.pool.reconnectOnException=false\",\"spring.activemq.pool.timeBetweenExpirationCheck=2048\",\"spring.activemq.pool.useAnonymousProducers=false\").run((context) -> {\n    assertThat(context.getBeansOfType(PooledConnectionFactory.class)).hasSize(1);\n    PooledConnectionFactory connectionFactory=context.getBean(PooledConnectionFactory.class);\n    assertThat(connectionFactory.isBlockIfSessionPoolIsFull()).isEqualTo(false);\n    assertThat(connectionFactory.getBlockIfSessionPoolIsFullTimeout()).isEqualTo(64);\n    assertThat(connectionFactory.isCreateConnectionOnStartup()).isEqualTo(false);\n    assertThat(connectionFactory.getExpiryTimeout()).isEqualTo(4096);\n    assertThat(connectionFactory.getIdleTimeout()).isEqualTo(512);\n    assertThat(connectionFactory.getMaxConnections()).isEqualTo(256);\n    assertThat(connectionFactory.getMaximumActiveSessionPerConnection()).isEqualTo(1024);\n    assertThat(connectionFactory.isReconnectOnException()).isEqualTo(false);\n    assertThat(connectionFactory.getTimeBetweenExpirationCheckMillis()).isEqualTo(2048);\n    assertThat(connectionFactory.isUseAnonymousProducers()).isEqualTo(false);\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 148,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 679,
        "startLineNumber" : 164,
        "startColumnNumber" : 2,
        "endLineNumber" : 175,
        "endColumnNumber" : 57
      },
      "nodeContext" : "this.contextRunner.withUserConfiguration(EmptyConfiguration.class).withPropertyValues(\"spring.activemq.pool.enabled=true\",\"spring.activemq.pool.blockIfFull=false\",\"spring.activemq.pool.blockIfFullTimeout=64\",\"spring.activemq.pool.createConnectionOnStartup=false\",\"spring.activemq.pool.expiryTimeout=4096\",\"spring.activemq.pool.idleTimeout=512\",\"spring.activemq.pool.maxConnections=256\",\"spring.activemq.pool.maximumActiveSessionPerConnection=1024\",\"spring.activemq.pool.reconnectOnException=false\",\"spring.activemq.pool.timeBetweenExpirationCheck=2048\",\"spring.activemq.pool.useAnonymousProducers=false\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 49,
    "startLineNumber" : 173,
    "startColumnNumber" : 6,
    "endLineNumber" : 173,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}