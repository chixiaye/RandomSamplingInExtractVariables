{
  "id" : 355,
  "expression" : "1",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/independent-projects/resteasy-reactive/server/vertx/src/test/java/org/jboss/resteasy/reactive/server/vertx/test/simple/SimpleBeanParam.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 75,
      "startColumnNumber" : 53,
      "endLineNumber" : 75,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 75,
        "startColumnNumber" : 39,
        "endLineNumber" : 75,
        "endColumnNumber" : 55
      },
      "nodeContext" : "queryList.get(1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Assertions.assertEquals(\"two\",queryList.get(1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Assertions.assertEquals(\"two\",queryList.get(1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1370,
        "startLineNumber" : 65,
        "startColumnNumber" : 35,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assertions.assertEquals(\"one-query\",query);\n  Assertions.assertEquals(\"one-query\",privateQuery);\n  Assertions.assertEquals(\"one-query\",protectedQuery);\n  Assertions.assertEquals(\"one-query\",publicQuery);\n  Assertions.assertEquals(\"one-header\",header);\n  Assertions.assertNotNull(otherBeanParam);\n  otherBeanParam.check(path);\n  Assertions.assertNotNull(queryList);\n  Assertions.assertEquals(\"one\",queryList.get(0));\n  Assertions.assertEquals(\"two\",queryList.get(1));\n  Assertions.assertNotNull(parameterWithFromString);\n  Assertions.assertEquals(\"ParameterWithFromString[val=one-query]\",parameterWithFromString.toString());\n  Assertions.assertNull(missing);\n  Assertions.assertEquals(\"there\",missingWithDefaultValue);\n  Assertions.assertNull(missingParameterWithFromString);\n  Assertions.assertEquals(\"ParameterWithFromString[val=there]\",missingParameterWithFromStringAndDefaultValue.toString());\n  Assertions.assertEquals(666,primitiveParam);\n  Assertions.assertEquals(0,missingPrimitiveParam);\n  Assertions.assertEquals(42,missingPrimitiveParamWithDefaultValue);\n  Assertions.assertEquals(\"one-queryone-query\",myParameter.toString());\n  Assertions.assertEquals(\"one-queryone-query\",myParameterList.get(0).toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1401,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void check(String path){\n  Assertions.assertEquals(\"one-query\",query);\n  Assertions.assertEquals(\"one-query\",privateQuery);\n  Assertions.assertEquals(\"one-query\",protectedQuery);\n  Assertions.assertEquals(\"one-query\",publicQuery);\n  Assertions.assertEquals(\"one-header\",header);\n  Assertions.assertNotNull(otherBeanParam);\n  otherBeanParam.check(path);\n  Assertions.assertNotNull(queryList);\n  Assertions.assertEquals(\"one\",queryList.get(0));\n  Assertions.assertEquals(\"two\",queryList.get(1));\n  Assertions.assertNotNull(parameterWithFromString);\n  Assertions.assertEquals(\"ParameterWithFromString[val=one-query]\",parameterWithFromString.toString());\n  Assertions.assertNull(missing);\n  Assertions.assertEquals(\"there\",missingWithDefaultValue);\n  Assertions.assertNull(missingParameterWithFromString);\n  Assertions.assertEquals(\"ParameterWithFromString[val=there]\",missingParameterWithFromStringAndDefaultValue.toString());\n  Assertions.assertEquals(666,primitiveParam);\n  Assertions.assertEquals(0,missingPrimitiveParam);\n  Assertions.assertEquals(42,missingPrimitiveParamWithDefaultValue);\n  Assertions.assertEquals(\"one-queryone-query\",myParameter.toString());\n  Assertions.assertEquals(\"one-queryone-query\",myParameterList.get(0).toString());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Assertions.assertEquals(\"two\",queryList.get(1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 75,
    "startColumnNumber" : 53,
    "endLineNumber" : 75,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}