{
  "id" : 73,
  "expression" : "\"Empty input reading List<Span>\"",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin/src/test/java/zipkin/CodecTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Empty input reading List<Span>\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 76,
      "startColumnNumber" : 25,
      "endLineNumber" : 76,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 58
      },
      "nodeContext" : "thrown.expectMessage(\"Empty input reading List<Span>\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 59
      },
      "nodeContext" : "thrown.expectMessage(\"Empty input reading List<Span>\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 74,
        "startColumnNumber" : 72,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  thrown.expect(IllegalArgumentException.class);\n  thrown.expectMessage(\"Empty input reading List<Span>\");\n  codec().readSpans(new byte[0]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 231,
        "startLineNumber" : 73,
        "startColumnNumber" : 2,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void decentErrorMessageOnEmptyInput_spans() throws IOException {\n  thrown.expect(IllegalArgumentException.class);\n  thrown.expectMessage(\"Empty input reading List<Span>\");\n  codec().readSpans(new byte[0]);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 31,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 59
      },
      "nodeContext" : "thrown.expectMessage(\"Empty input reading List<Span>\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 76,
    "startColumnNumber" : 25,
    "endLineNumber" : 76,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}