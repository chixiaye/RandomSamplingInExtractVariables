{
  "id" : 132,
  "expression" : "new MockDirInvocation()",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/directory/StaticDirectoryTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new MockDirInvocation()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 61,
      "startColumnNumber" : 65,
      "endLineNumber" : 61,
      "endColumnNumber" : 88
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 61,
        "startColumnNumber" : 44,
        "endLineNumber" : 61,
        "endColumnNumber" : 89
      },
      "nodeContext" : "staticDirectory.list(new MockDirInvocation())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 61,
        "startColumnNumber" : 30,
        "endLineNumber" : 61,
        "endColumnNumber" : 89
      },
      "nodeContext" : "newInvokers=staticDirectory.list(new MockDirInvocation())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 90
      },
      "nodeContext" : "List<Invoker<String>> newInvokers=staticDirectory.list(new MockDirInvocation());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1394,
        "startLineNumber" : 46,
        "startColumnNumber" : 38,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Router router=new ConditionRouterFactory().getRouter(getRouteUrl(\" => \" + \" host = \" + NetUtils.getLocalHost()));\n  List<Router> routers=new ArrayList<Router>();\n  routers.add(router);\n  List<Invoker<String>> invokers=new ArrayList<Invoker<String>>();\n  Invoker<String> invoker1=new MockInvoker<String>(URL.valueOf(\"dubbo://10.20.3.3:20880/com.foo.BarService\"));\n  Invoker<String> invoker2=new MockInvoker<String>(URL.valueOf(\"dubbo://\" + NetUtils.getLocalHost() + \":20880/com.foo.BarService\"));\n  Invoker<String> invoker3=new MockInvoker<String>(URL.valueOf(\"dubbo://\" + NetUtils.getLocalHost() + \":20880/com.foo.BarService\"));\n  invokers.add(invoker1);\n  invokers.add(invoker2);\n  invokers.add(invoker3);\n  List<Invoker<String>> filteredInvokers=router.route(invokers,URL.valueOf(\"consumer://\" + NetUtils.getLocalHost() + \"/com.foo.BarService\"),new RpcInvocation());\n  StaticDirectory<String> staticDirectory=new StaticDirectory<>(filteredInvokers);\n  boolean isAvailable=staticDirectory.isAvailable();\n  Assertions.assertTrue(!isAvailable);\n  List<Invoker<String>> newInvokers=staticDirectory.list(new MockDirInvocation());\n  Assertions.assertTrue(newInvokers.size() > 0);\n  staticDirectory.destroy();\n  Assertions.assertEquals(0,newInvokers.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 228,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1438,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testStaticDirectory(){\n  Router router=new ConditionRouterFactory().getRouter(getRouteUrl(\" => \" + \" host = \" + NetUtils.getLocalHost()));\n  List<Router> routers=new ArrayList<Router>();\n  routers.add(router);\n  List<Invoker<String>> invokers=new ArrayList<Invoker<String>>();\n  Invoker<String> invoker1=new MockInvoker<String>(URL.valueOf(\"dubbo://10.20.3.3:20880/com.foo.BarService\"));\n  Invoker<String> invoker2=new MockInvoker<String>(URL.valueOf(\"dubbo://\" + NetUtils.getLocalHost() + \":20880/com.foo.BarService\"));\n  Invoker<String> invoker3=new MockInvoker<String>(URL.valueOf(\"dubbo://\" + NetUtils.getLocalHost() + \":20880/com.foo.BarService\"));\n  invokers.add(invoker1);\n  invokers.add(invoker2);\n  invokers.add(invoker3);\n  List<Invoker<String>> filteredInvokers=router.route(invokers,URL.valueOf(\"consumer://\" + NetUtils.getLocalHost() + \"/com.foo.BarService\"),new RpcInvocation());\n  StaticDirectory<String> staticDirectory=new StaticDirectory<>(filteredInvokers);\n  boolean isAvailable=staticDirectory.isAvailable();\n  Assertions.assertTrue(!isAvailable);\n  List<Invoker<String>> newInvokers=staticDirectory.list(new MockDirInvocation());\n  Assertions.assertTrue(newInvokers.size() > 0);\n  staticDirectory.destroy();\n  Assertions.assertEquals(0,newInvokers.size());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 234,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 90
      },
      "nodeContext" : "List<Invoker<String>> newInvokers=staticDirectory.list(new MockDirInvocation());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.rpc.cluster.directory.MockDirInvocation"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 61,
    "startColumnNumber" : 65,
    "endLineNumber" : 61,
    "endColumnNumber" : 88
  } ],
  "layoutRelationDataList" : [ ]
}