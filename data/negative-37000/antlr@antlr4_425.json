{
  "id" : 425,
  "expression" : "(BlockAST)mainAlt.getChild(1).getChild(0)",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/tool/src/org/antlr/v4/analysis/LeftRecursiveRuleTransformer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(BlockAST)mainAlt.getChild(1).getChild(0)",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 41,
      "startLineNumber" : 232,
      "startColumnNumber" : 20,
      "endLineNumber" : 232,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 10,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 232,
        "startColumnNumber" : 11,
        "endLineNumber" : 232,
        "endColumnNumber" : 61
      },
      "nodeContext" : "opsBlk=(BlockAST)mainAlt.getChild(1).getChild(0)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 232,
        "startColumnNumber" : 2,
        "endLineNumber" : 232,
        "endColumnNumber" : 62
      },
      "nodeContext" : "BlockAST opsBlk=(BlockAST)mainAlt.getChild(1).getChild(0);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1122,
        "startLineNumber" : 227,
        "startColumnNumber" : 63,
        "endLineNumber" : 249,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  BlockAST ruleBlk=(BlockAST)t.getFirstChildWithType(ANTLRParser.BLOCK);\n  AltAST mainAlt=(AltAST)ruleBlk.getChild(0);\n  BlockAST primaryBlk=(BlockAST)mainAlt.getChild(0);\n  BlockAST opsBlk=(BlockAST)mainAlt.getChild(1).getChild(0);\n  for (int i=0; i < r.recPrimaryAlts.size(); i++) {\n    LeftRecursiveRuleAltInfo altInfo=r.recPrimaryAlts.get(i);\n    altInfo.altAST=(AltAST)primaryBlk.getChild(i);\n    altInfo.altAST.leftRecursiveAltInfo=altInfo;\n    altInfo.originalAltAST.leftRecursiveAltInfo=altInfo;\n  }\n  for (int i=0; i < r.recOpAlts.size(); i++) {\n    LeftRecursiveRuleAltInfo altInfo=r.recOpAlts.getElement(i);\n    altInfo.altAST=(AltAST)opsBlk.getChild(i);\n    altInfo.altAST.leftRecursiveAltInfo=altInfo;\n    altInfo.originalAltAST.leftRecursiveAltInfo=altInfo;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 164,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1616,
        "startLineNumber" : 211,
        "startColumnNumber" : 1,
        "endLineNumber" : 249,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * <pre> (RULE e int _p (returns int v) (BLOCK (ALT (BLOCK (ALT INT {$v = $INT.int;}) (ALT '(' (= x e) ')' {$v = $x.v;}) (ALT ID)) (* (BLOCK (OPTIONS ...) (ALT {7 &gt;= $_p}? '*' (= b e) {$v = $a.v * $b.v;}) (ALT {6 &gt;= $_p}? '+' (= b e) {$v = $a.v + $b.v;}) (ALT {3 &gt;= $_p}? '++') (ALT {2 &gt;= $_p}? '--')))))) </pre>\n */\npublic void setAltASTPointers(LeftRecursiveRule r,RuleAST t){\n  BlockAST ruleBlk=(BlockAST)t.getFirstChildWithType(ANTLRParser.BLOCK);\n  AltAST mainAlt=(AltAST)ruleBlk.getChild(0);\n  BlockAST primaryBlk=(BlockAST)mainAlt.getChild(0);\n  BlockAST opsBlk=(BlockAST)mainAlt.getChild(1).getChild(0);\n  for (int i=0; i < r.recPrimaryAlts.size(); i++) {\n    LeftRecursiveRuleAltInfo altInfo=r.recPrimaryAlts.get(i);\n    altInfo.altAST=(AltAST)primaryBlk.getChild(i);\n    altInfo.altAST.leftRecursiveAltInfo=altInfo;\n    altInfo.originalAltAST.leftRecursiveAltInfo=altInfo;\n  }\n  for (int i=0; i < r.recOpAlts.size(); i++) {\n    LeftRecursiveRuleAltInfo altInfo=r.recOpAlts.getElement(i);\n    altInfo.altAST=(AltAST)opsBlk.getChild(i);\n    altInfo.altAST.leftRecursiveAltInfo=altInfo;\n    altInfo.originalAltAST.leftRecursiveAltInfo=altInfo;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 177,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 232,
        "startColumnNumber" : 2,
        "endLineNumber" : 232,
        "endColumnNumber" : 62
      },
      "nodeContext" : "BlockAST opsBlk=(BlockAST)mainAlt.getChild(1).getChild(0);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 6,
    "type" : "org.antlr.v4.tool.ast.BlockAST"
  } ],
  "positionList" : [ {
    "charLength" : 41,
    "startLineNumber" : 232,
    "startColumnNumber" : 20,
    "endLineNumber" : 232,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}