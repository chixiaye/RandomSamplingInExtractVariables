{
  "id" : 289,
  "expression" : "\"isolation\"",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/rule/DestinationRuleTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"isolation\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 62,
      "startColumnNumber" : 21,
      "endLineNumber" : 62,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 90
      },
      "nodeContext" : "assertEquals(\"isolation\",destinationRule.getSpec().getSubsets().get(0).getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 91
      },
      "nodeContext" : "assertEquals(\"isolation\",destinationRule.getSpec().getSubsets().get(0).getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2237,
        "startLineNumber" : 35,
        "startColumnNumber" : 29,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Yaml yaml=new Yaml();\n  DestinationRule destinationRule=yaml.loadAs(this.getClass().getClassLoader().getResourceAsStream(\"DestinationRuleTest.yaml\"),DestinationRule.class);\n  System.out.println(destinationRule);\n  assertEquals(\"service.dubbo.apache.org/v1alpha1\",destinationRule.getApiVersion());\n  assertEquals(\"DestinationRule\",destinationRule.getKind());\n  assertEquals(\"demo-route\",destinationRule.getMetadata().get(\"name\"));\n  assertEquals(\"demo\",destinationRule.getSpec().getHost());\n  assertEquals(3,destinationRule.getSpec().getSubsets().size());\n  assertEquals(\"isolation\",destinationRule.getSpec().getSubsets().get(0).getName());\n  assertEquals(2,destinationRule.getSpec().getSubsets().get(0).getLabels().size());\n  assertEquals(\"xxx\",destinationRule.getSpec().getSubsets().get(0).getLabels().get(\"env-sign\"));\n  assertEquals(\"hello\",destinationRule.getSpec().getSubsets().get(0).getLabels().get(\"tag1\"));\n  assertEquals(\"testing-trunk\",destinationRule.getSpec().getSubsets().get(1).getName());\n  assertEquals(1,destinationRule.getSpec().getSubsets().get(1).getLabels().size());\n  assertEquals(\"yyy\",destinationRule.getSpec().getSubsets().get(1).getLabels().get(\"env-sign\"));\n  assertEquals(\"testing\",destinationRule.getSpec().getSubsets().get(2).getName());\n  assertEquals(1,destinationRule.getSpec().getSubsets().get(2).getLabels().size());\n  assertEquals(\"zzz\",destinationRule.getSpec().getSubsets().get(2).getLabels().get(\"env-sign\"));\n  assertEquals(SimpleLB.ROUND_ROBIN,destinationRule.getSpec().getTrafficPolicy().getLoadBalancer().getSimple());\n  assertEquals(null,destinationRule.getSpec().getTrafficPolicy().getLoadBalancer().getConsistentHash());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 265,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2272,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void parserTest(){\n  Yaml yaml=new Yaml();\n  DestinationRule destinationRule=yaml.loadAs(this.getClass().getClassLoader().getResourceAsStream(\"DestinationRuleTest.yaml\"),DestinationRule.class);\n  System.out.println(destinationRule);\n  assertEquals(\"service.dubbo.apache.org/v1alpha1\",destinationRule.getApiVersion());\n  assertEquals(\"DestinationRule\",destinationRule.getKind());\n  assertEquals(\"demo-route\",destinationRule.getMetadata().get(\"name\"));\n  assertEquals(\"demo\",destinationRule.getSpec().getHost());\n  assertEquals(3,destinationRule.getSpec().getSubsets().size());\n  assertEquals(\"isolation\",destinationRule.getSpec().getSubsets().get(0).getName());\n  assertEquals(2,destinationRule.getSpec().getSubsets().get(0).getLabels().size());\n  assertEquals(\"xxx\",destinationRule.getSpec().getSubsets().get(0).getLabels().get(\"env-sign\"));\n  assertEquals(\"hello\",destinationRule.getSpec().getSubsets().get(0).getLabels().get(\"tag1\"));\n  assertEquals(\"testing-trunk\",destinationRule.getSpec().getSubsets().get(1).getName());\n  assertEquals(1,destinationRule.getSpec().getSubsets().get(1).getLabels().size());\n  assertEquals(\"yyy\",destinationRule.getSpec().getSubsets().get(1).getLabels().get(\"env-sign\"));\n  assertEquals(\"testing\",destinationRule.getSpec().getSubsets().get(2).getName());\n  assertEquals(1,destinationRule.getSpec().getSubsets().get(2).getLabels().size());\n  assertEquals(\"zzz\",destinationRule.getSpec().getSubsets().get(2).getLabels().get(\"env-sign\"));\n  assertEquals(SimpleLB.ROUND_ROBIN,destinationRule.getSpec().getTrafficPolicy().getLoadBalancer().getSimple());\n  assertEquals(null,destinationRule.getSpec().getTrafficPolicy().getLoadBalancer().getConsistentHash());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 271,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 91
      },
      "nodeContext" : "assertEquals(\"isolation\",destinationRule.getSpec().getSubsets().get(0).getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 62,
    "startColumnNumber" : 21,
    "endLineNumber" : 62,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}