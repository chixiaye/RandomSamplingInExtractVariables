{
  "id" : 173,
  "expression" : "TypeUtils.cast(\"\",new TypeReference<Pair<Object,Object>>(){\n}\n.getType(),null)",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/test/java/com/alibaba/json/bvt/parser/TypeUtilsTest2.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TypeUtils.cast(\"\",new TypeReference<Pair<Object,Object>>(){\n}\n.getType(),null)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 90,
      "startLineNumber" : 39,
      "startColumnNumber" : 34,
      "endLineNumber" : 41,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 19,
    "astHeight" : 7,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 27
      },
      "nodeContext" : "Assert.assertEquals(null,TypeUtils.cast(\"\",new TypeReference<Pair<Object,Object>>(){\n}\n.getType(),null))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 28
      },
      "nodeContext" : "Assert.assertEquals(null,TypeUtils.cast(\"\",new TypeReference<Pair<Object,Object>>(){\n}\n.getType(),null));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 24,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1471,
        "startLineNumber" : 15,
        "startColumnNumber" : 42,
        "endLineNumber" : 42,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertNull(TypeUtils.cast(\"\",Entity.class,null));\n  Assert.assertNull(TypeUtils.cast(\"\",Type.class,null));\n  Assert.assertNull(TypeUtils.cast(\"\",Byte.class,null));\n  Assert.assertNull(TypeUtils.cast(\"\",Short.class,null));\n  Assert.assertNull(TypeUtils.cast(\"\",Integer.class,null));\n  Assert.assertNull(TypeUtils.cast(\"\",Long.class,null));\n  Assert.assertNull(TypeUtils.cast(\"\",Float.class,null));\n  Assert.assertNull(TypeUtils.cast(\"\",Double.class,null));\n  Assert.assertNull(TypeUtils.cast(\"\",Character.class,null));\n  Assert.assertNull(TypeUtils.cast(\"\",java.util.Date.class,null));\n  Assert.assertNull(TypeUtils.cast(\"\",java.sql.Date.class,null));\n  Assert.assertNull(TypeUtils.cast(\"\",java.sql.Timestamp.class,null));\n  Assert.assertNull(TypeUtils.castToChar(\"\"));\n  Assert.assertNull(TypeUtils.castToChar(null));\n  Assert.assertEquals('A',TypeUtils.castToChar('A').charValue());\n  Assert.assertEquals('A',TypeUtils.castToChar(\"A\").charValue());\n  Assert.assertNull(TypeUtils.castToBigDecimal(\"\"));\n  Assert.assertNull(TypeUtils.castToBigInteger(\"\"));\n  Assert.assertNull(TypeUtils.castToBoolean(\"\"));\n  Assert.assertNull(TypeUtils.castToEnum(\"\",Type.class,null));\n  Assert.assertEquals(null,TypeUtils.cast(\"\",new TypeReference<Pair<Object,Object>>(){\n  }\n.getType(),null));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 255,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1509,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 42,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_0() throws Exception {\n  Assert.assertNull(TypeUtils.cast(\"\",Entity.class,null));\n  Assert.assertNull(TypeUtils.cast(\"\",Type.class,null));\n  Assert.assertNull(TypeUtils.cast(\"\",Byte.class,null));\n  Assert.assertNull(TypeUtils.cast(\"\",Short.class,null));\n  Assert.assertNull(TypeUtils.cast(\"\",Integer.class,null));\n  Assert.assertNull(TypeUtils.cast(\"\",Long.class,null));\n  Assert.assertNull(TypeUtils.cast(\"\",Float.class,null));\n  Assert.assertNull(TypeUtils.cast(\"\",Double.class,null));\n  Assert.assertNull(TypeUtils.cast(\"\",Character.class,null));\n  Assert.assertNull(TypeUtils.cast(\"\",java.util.Date.class,null));\n  Assert.assertNull(TypeUtils.cast(\"\",java.sql.Date.class,null));\n  Assert.assertNull(TypeUtils.cast(\"\",java.sql.Timestamp.class,null));\n  Assert.assertNull(TypeUtils.castToChar(\"\"));\n  Assert.assertNull(TypeUtils.castToChar(null));\n  Assert.assertEquals('A',TypeUtils.castToChar('A').charValue());\n  Assert.assertEquals('A',TypeUtils.castToChar(\"A\").charValue());\n  Assert.assertNull(TypeUtils.castToBigDecimal(\"\"));\n  Assert.assertNull(TypeUtils.castToBigInteger(\"\"));\n  Assert.assertNull(TypeUtils.castToBoolean(\"\"));\n  Assert.assertNull(TypeUtils.castToEnum(\"\",Type.class,null));\n  Assert.assertEquals(null,TypeUtils.cast(\"\",new TypeReference<Pair<Object,Object>>(){\n  }\n.getType(),null));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 261,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 28
      },
      "nodeContext" : "Assert.assertEquals(null,TypeUtils.cast(\"\",new TypeReference<Pair<Object,Object>>(){\n}\n.getType(),null));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 24,
      "astHeight" : 9
    },
    "tokenLength" : 6,
    "type" : "java.lang.Object"
  } ],
  "positionList" : [ {
    "charLength" : 90,
    "startLineNumber" : 39,
    "startColumnNumber" : 34,
    "endLineNumber" : 41,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}