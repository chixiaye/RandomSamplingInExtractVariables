{
  "id" : 77,
  "expression" : "true",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/main/java/cn/hutool/core/text/escape/NumericEntityUnescaper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "true",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 26,
      "startColumnNumber" : 12,
      "endLineNumber" : 26,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 26,
        "endColumnNumber" : 16
      },
      "nodeContext" : "isHex=true",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 26,
        "endColumnNumber" : 17
      },
      "nodeContext" : "isHex=true;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 24,
        "startColumnNumber" : 45,
        "endLineNumber" : 27,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  start++;\n  isHex=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 24,
        "startColumnNumber" : 3,
        "endLineNumber" : 27,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (firstChar == 'x' || firstChar == 'X') {\n  start++;\n  isHex=true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 860,
        "startLineNumber" : 20,
        "startColumnNumber" : 77,
        "endLineNumber" : 53,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int start=pos + 2;\n  boolean isHex=false;\n  final char firstChar=str.charAt(start);\n  if (firstChar == 'x' || firstChar == 'X') {\n    start++;\n    isHex=true;\n  }\n  if (start == len) {\n    return 0;\n  }\n  int end=start;\n  while (end < len && CharUtil.isHexChar(str.charAt(end))) {\n    end++;\n  }\n  final boolean isSemiNext=(end != len) && (str.charAt(end) == ';');\n  if (isSemiNext) {\n    int entityValue;\n    try {\n      if (isHex) {\n        entityValue=Integer.parseInt(str.subSequence(start,end).toString(),16);\n      }\n else {\n        entityValue=Integer.parseInt(str.subSequence(start,end).toString(),10);\n      }\n    }\n catch (    final NumberFormatException nfe) {\n      return 0;\n    }\n    out.append((char)entityValue);\n    return 2 + end - start + (isHex ? 1 : 0) + 1;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 154,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 935,
        "startLineNumber" : 20,
        "startColumnNumber" : 2,
        "endLineNumber" : 53,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (str.charAt(pos) == '&' && pos < len - 2 && str.charAt(pos + 1) == '#') {\n  int start=pos + 2;\n  boolean isHex=false;\n  final char firstChar=str.charAt(start);\n  if (firstChar == 'x' || firstChar == 'X') {\n    start++;\n    isHex=true;\n  }\n  if (start == len) {\n    return 0;\n  }\n  int end=start;\n  while (end < len && CharUtil.isHexChar(str.charAt(end))) {\n    end++;\n  }\n  final boolean isSemiNext=(end != len) && (str.charAt(end) == ';');\n  if (isSemiNext) {\n    int entityValue;\n    try {\n      if (isHex) {\n        entityValue=Integer.parseInt(str.subSequence(start,end).toString(),16);\n      }\n else {\n        entityValue=Integer.parseInt(str.subSequence(start,end).toString(),10);\n      }\n    }\n catch (    final NumberFormatException nfe) {\n      return 0;\n    }\n    out.append((char)entityValue);\n    return 2 + end - start + (isHex ? 1 : 0) + 1;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 176,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1007,
        "startLineNumber" : 17,
        "startColumnNumber" : 66,
        "endLineNumber" : 55,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  final int len=str.length();\n  if (str.charAt(pos) == '&' && pos < len - 2 && str.charAt(pos + 1) == '#') {\n    int start=pos + 2;\n    boolean isHex=false;\n    final char firstChar=str.charAt(start);\n    if (firstChar == 'x' || firstChar == 'X') {\n      start++;\n      isHex=true;\n    }\n    if (start == len) {\n      return 0;\n    }\n    int end=start;\n    while (end < len && CharUtil.isHexChar(str.charAt(end))) {\n      end++;\n    }\n    final boolean isSemiNext=(end != len) && (str.charAt(end) == ';');\n    if (isSemiNext) {\n      int entityValue;\n      try {\n        if (isHex) {\n          entityValue=Integer.parseInt(str.subSequence(start,end).toString(),16);\n        }\n else {\n          entityValue=Integer.parseInt(str.subSequence(start,end).toString(),10);\n        }\n      }\n catch (      final NumberFormatException nfe) {\n        return 0;\n      }\n      out.append((char)entityValue);\n      return 2 + end - start + (isHex ? 1 : 0) + 1;\n    }\n  }\n  return 0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 187,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1084,
        "startLineNumber" : 16,
        "startColumnNumber" : 1,
        "endLineNumber" : 55,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected int replace(CharSequence str,int pos,StrBuilder out){\n  final int len=str.length();\n  if (str.charAt(pos) == '&' && pos < len - 2 && str.charAt(pos + 1) == '#') {\n    int start=pos + 2;\n    boolean isHex=false;\n    final char firstChar=str.charAt(start);\n    if (firstChar == 'x' || firstChar == 'X') {\n      start++;\n      isHex=true;\n    }\n    if (start == len) {\n      return 0;\n    }\n    int end=start;\n    while (end < len && CharUtil.isHexChar(str.charAt(end))) {\n      end++;\n    }\n    final boolean isSemiNext=(end != len) && (str.charAt(end) == ';');\n    if (isSemiNext) {\n      int entityValue;\n      try {\n        if (isHex) {\n          entityValue=Integer.parseInt(str.subSequence(start,end).toString(),16);\n        }\n else {\n          entityValue=Integer.parseInt(str.subSequence(start,end).toString(),10);\n        }\n      }\n catch (      final NumberFormatException nfe) {\n        return 0;\n      }\n      out.append((char)entityValue);\n      return 2 + end - start + (isHex ? 1 : 0) + 1;\n    }\n  }\n  return 0;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 204,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 26,
        "endColumnNumber" : 17
      },
      "nodeContext" : "isHex=true;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 26,
    "startColumnNumber" : 12,
    "endLineNumber" : 26,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ ]
}