{
  "id" : 236,
  "expression" : "httpHandler",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/server/src/org/openqa/selenium/grid/commands/Standalone.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "httpHandler",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 207,
      "startColumnNumber" : 24,
      "endLineNumber" : 207,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 207,
        "startColumnNumber" : 11,
        "endLineNumber" : 207,
        "endColumnNumber" : 75
      },
      "nodeContext" : "new Handlers(httpHandler,new ProxyNodeCdp(clientFactory,node))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 207,
        "startColumnNumber" : 4,
        "endLineNumber" : 207,
        "endColumnNumber" : 76
      },
      "nodeContext" : "return new Handlers(httpHandler,new ProxyNodeCdp(clientFactory,node));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3276,
        "startLineNumber" : 117,
        "startColumnNumber" : 51,
        "endLineNumber" : 208,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  LoggingOptions loggingOptions=new LoggingOptions(config);\n  Tracer tracer=loggingOptions.getTracer();\n  EventBusOptions events=new EventBusOptions(config);\n  EventBus bus=events.getEventBus();\n  BaseServerOptions serverOptions=new BaseServerOptions(config);\n  SecretOptions secretOptions=new SecretOptions(config);\n  Secret registrationSecret=secretOptions.getRegistrationSecret();\n  URI localhost=serverOptions.getExternalUri();\n  URL localhostUrl;\n  try {\n    localhostUrl=localhost.toURL();\n  }\n catch (  MalformedURLException e) {\n    throw new IllegalArgumentException(e);\n  }\n  NetworkOptions networkOptions=new NetworkOptions(config);\n  CombinedHandler combinedHandler=new CombinedHandler();\n  HttpClient.Factory clientFactory=new RoutableHttpClientFactory(localhostUrl,combinedHandler,networkOptions.getHttpClientFactory(tracer));\n  SessionMap sessions=new LocalSessionMap(tracer,bus);\n  combinedHandler.addHandler(sessions);\n  NewSessionQueueOptions newSessionQueueOptions=new NewSessionQueueOptions(config);\n  NewSessionQueue sessionRequests=new LocalNewSessionQueue(tracer,bus,newSessionQueueOptions.getSessionRequestRetryInterval(),newSessionQueueOptions.getSessionRequestTimeout());\n  NewSessionQueuer queuer=new LocalNewSessionQueuer(tracer,bus,sessionRequests,registrationSecret);\n  combinedHandler.addHandler(queuer);\n  Distributor distributor=new LocalDistributor(tracer,bus,clientFactory,sessions,queuer,registrationSecret);\n  combinedHandler.addHandler(distributor);\n  Routable router=new Router(tracer,clientFactory,sessions,queuer,distributor).with(networkOptions.getSpecComplianceChecks());\n  HttpHandler readinessCheck=req -> {\n    boolean ready=sessions.isReady() && distributor.isReady() && bus.isReady();\n    return new HttpResponse().setStatus(ready ? HTTP_OK : HTTP_INTERNAL_ERROR).setContent(Contents.utf8String(\"Standalone is \" + ready));\n  }\n;\n  GraphqlHandler graphqlHandler=new GraphqlHandler(tracer,distributor,queuer,serverOptions.getExternalUri());\n  Routable ui;\n  URL uiRoot=getClass().getResource(\"/javascript/grid-ui/build\");\n  if (uiRoot != null) {\n    ResourceHandler uiHandler=new ResourceHandler(new ClassPathResource(uiRoot,\"javascript/grid-ui/build\"));\n    ui=Route.combine(get(\"/\").to(() -> req -> new HttpResponse().setStatus(HTTP_MOVED_TEMP).addHeader(\"Location\",\"/ui/index.html\")),Route.prefix(\"/ui/\").to(Route.matching(req -> true).to(() -> uiHandler)));\n  }\n else {\n    Json json=new Json();\n    ui=Route.matching(req -> false).to(() -> new NoHandler(json));\n  }\n  HttpHandler httpHandler=combine(ui,router,Route.prefix(\"/wd/hub\").to(combine(router)),Route.post(\"/graphql\").to(() -> graphqlHandler),Route.get(\"/readyz\").to(() -> readinessCheck));\n  Node node=new NodeOptions(config).getNode();\n  combinedHandler.addHandler(node);\n  distributor.add(node);\n  return new Handlers(httpHandler,new ProxyNodeCdp(clientFactory,node));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 441,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3337,
        "startLineNumber" : 116,
        "startColumnNumber" : 2,
        "endLineNumber" : 208,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override protected Handlers createHandlers(Config config){\n  LoggingOptions loggingOptions=new LoggingOptions(config);\n  Tracer tracer=loggingOptions.getTracer();\n  EventBusOptions events=new EventBusOptions(config);\n  EventBus bus=events.getEventBus();\n  BaseServerOptions serverOptions=new BaseServerOptions(config);\n  SecretOptions secretOptions=new SecretOptions(config);\n  Secret registrationSecret=secretOptions.getRegistrationSecret();\n  URI localhost=serverOptions.getExternalUri();\n  URL localhostUrl;\n  try {\n    localhostUrl=localhost.toURL();\n  }\n catch (  MalformedURLException e) {\n    throw new IllegalArgumentException(e);\n  }\n  NetworkOptions networkOptions=new NetworkOptions(config);\n  CombinedHandler combinedHandler=new CombinedHandler();\n  HttpClient.Factory clientFactory=new RoutableHttpClientFactory(localhostUrl,combinedHandler,networkOptions.getHttpClientFactory(tracer));\n  SessionMap sessions=new LocalSessionMap(tracer,bus);\n  combinedHandler.addHandler(sessions);\n  NewSessionQueueOptions newSessionQueueOptions=new NewSessionQueueOptions(config);\n  NewSessionQueue sessionRequests=new LocalNewSessionQueue(tracer,bus,newSessionQueueOptions.getSessionRequestRetryInterval(),newSessionQueueOptions.getSessionRequestTimeout());\n  NewSessionQueuer queuer=new LocalNewSessionQueuer(tracer,bus,sessionRequests,registrationSecret);\n  combinedHandler.addHandler(queuer);\n  Distributor distributor=new LocalDistributor(tracer,bus,clientFactory,sessions,queuer,registrationSecret);\n  combinedHandler.addHandler(distributor);\n  Routable router=new Router(tracer,clientFactory,sessions,queuer,distributor).with(networkOptions.getSpecComplianceChecks());\n  HttpHandler readinessCheck=req -> {\n    boolean ready=sessions.isReady() && distributor.isReady() && bus.isReady();\n    return new HttpResponse().setStatus(ready ? HTTP_OK : HTTP_INTERNAL_ERROR).setContent(Contents.utf8String(\"Standalone is \" + ready));\n  }\n;\n  GraphqlHandler graphqlHandler=new GraphqlHandler(tracer,distributor,queuer,serverOptions.getExternalUri());\n  Routable ui;\n  URL uiRoot=getClass().getResource(\"/javascript/grid-ui/build\");\n  if (uiRoot != null) {\n    ResourceHandler uiHandler=new ResourceHandler(new ClassPathResource(uiRoot,\"javascript/grid-ui/build\"));\n    ui=Route.combine(get(\"/\").to(() -> req -> new HttpResponse().setStatus(HTTP_MOVED_TEMP).addHeader(\"Location\",\"/ui/index.html\")),Route.prefix(\"/ui/\").to(Route.matching(req -> true).to(() -> uiHandler)));\n  }\n else {\n    Json json=new Json();\n    ui=Route.matching(req -> false).to(() -> new NoHandler(json));\n  }\n  HttpHandler httpHandler=combine(ui,router,Route.prefix(\"/wd/hub\").to(combine(router)),Route.post(\"/graphql\").to(() -> graphqlHandler),Route.get(\"/readyz\").to(() -> readinessCheck));\n  Node node=new NodeOptions(config).getNode();\n  combinedHandler.addHandler(node);\n  distributor.add(node);\n  return new Handlers(httpHandler,new ProxyNodeCdp(clientFactory,node));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 452,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 207,
        "startColumnNumber" : 4,
        "endLineNumber" : 207,
        "endColumnNumber" : 76
      },
      "nodeContext" : "return new Handlers(httpHandler,new ProxyNodeCdp(clientFactory,node));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.openqa.selenium.remote.http.HttpHandler"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 207,
    "startColumnNumber" : 24,
    "endLineNumber" : 207,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}