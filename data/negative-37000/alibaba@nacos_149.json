{
  "id" : 149,
  "expression" : "packet.getAddress()",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/client/src/main/java/com/alibaba/nacos/client/naming/core/PushReceiver.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "packet.getAddress()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 87,
      "startColumnNumber" : 78,
      "endLineNumber" : 87,
      "endColumnNumber" : 97
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 87,
        "startColumnNumber" : 78,
        "endLineNumber" : 87,
        "endColumnNumber" : 108
      },
      "nodeContext" : "packet.getAddress().toString()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 87,
        "startColumnNumber" : 35,
        "endLineNumber" : 87,
        "endColumnNumber" : 108
      },
      "nodeContext" : "\"received push data: \" + json + \" from \"+ packet.getAddress().toString()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 87,
        "startColumnNumber" : 16,
        "endLineNumber" : 87,
        "endColumnNumber" : 109
      },
      "nodeContext" : "NAMING_LOGGER.info(\"received push data: \" + json + \" from \"+ packet.getAddress().toString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 87,
        "startColumnNumber" : 16,
        "endLineNumber" : 87,
        "endColumnNumber" : 110
      },
      "nodeContext" : "NAMING_LOGGER.info(\"received push data: \" + json + \" from \"+ packet.getAddress().toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1848,
        "startLineNumber" : 78,
        "startColumnNumber" : 16,
        "endLineNumber" : 110,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  byte[] buffer=new byte[UDP_MSS];\n  DatagramPacket packet=new DatagramPacket(buffer,buffer.length);\n  udpSocket.receive(packet);\n  String json=new String(IoUtils.tryDecompress(packet.getData()),UTF_8).trim();\n  NAMING_LOGGER.info(\"received push data: \" + json + \" from \"+ packet.getAddress().toString());\n  PushPacket pushPacket=JacksonUtils.toObj(json,PushPacket.class);\n  String ack;\n  if (\"dom\".equals(pushPacket.type) || \"service\".equals(pushPacket.type)) {\n    serviceInfoHolder.processServiceInfo(pushPacket.data);\n    ack=\"{\\\"type\\\": \\\"push-ack\\\"\" + \", \\\"lastRefTime\\\":\\\"\" + pushPacket.lastRefTime + \"\\\", \\\"data\\\":\"+ \"\\\"\\\"}\";\n  }\n else   if (\"dump\".equals(pushPacket.type)) {\n    ack=\"{\\\"type\\\": \\\"dump-ack\\\"\" + \", \\\"lastRefTime\\\": \\\"\" + pushPacket.lastRefTime + \"\\\", \\\"data\\\":\"+ \"\\\"\"+ StringUtils.escapeJavaScript(JacksonUtils.toJson(serviceInfoHolder.getServiceInfoMap()))+ \"\\\"}\";\n  }\n else {\n    ack=\"{\\\"type\\\": \\\"unknown-ack\\\"\" + \", \\\"lastRefTime\\\":\\\"\" + pushPacket.lastRefTime + \"\\\", \\\"data\\\":\"+ \"\\\"\\\"}\";\n  }\n  udpSocket.send(new DatagramPacket(ack.getBytes(UTF_8),ack.getBytes(UTF_8).length,packet.getSocketAddress()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 173,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2044,
        "startLineNumber" : 78,
        "startColumnNumber" : 12,
        "endLineNumber" : 115,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  byte[] buffer=new byte[UDP_MSS];\n  DatagramPacket packet=new DatagramPacket(buffer,buffer.length);\n  udpSocket.receive(packet);\n  String json=new String(IoUtils.tryDecompress(packet.getData()),UTF_8).trim();\n  NAMING_LOGGER.info(\"received push data: \" + json + \" from \"+ packet.getAddress().toString());\n  PushPacket pushPacket=JacksonUtils.toObj(json,PushPacket.class);\n  String ack;\n  if (\"dom\".equals(pushPacket.type) || \"service\".equals(pushPacket.type)) {\n    serviceInfoHolder.processServiceInfo(pushPacket.data);\n    ack=\"{\\\"type\\\": \\\"push-ack\\\"\" + \", \\\"lastRefTime\\\":\\\"\" + pushPacket.lastRefTime + \"\\\", \\\"data\\\":\"+ \"\\\"\\\"}\";\n  }\n else   if (\"dump\".equals(pushPacket.type)) {\n    ack=\"{\\\"type\\\": \\\"dump-ack\\\"\" + \", \\\"lastRefTime\\\": \\\"\" + pushPacket.lastRefTime + \"\\\", \\\"data\\\":\"+ \"\\\"\"+ StringUtils.escapeJavaScript(JacksonUtils.toJson(serviceInfoHolder.getServiceInfoMap()))+ \"\\\"}\";\n  }\n else {\n    ack=\"{\\\"type\\\": \\\"unknown-ack\\\"\" + \", \\\"lastRefTime\\\":\\\"\" + pushPacket.lastRefTime + \"\\\", \\\"data\\\":\"+ \"\\\"\\\"}\";\n  }\n  udpSocket.send(new DatagramPacket(ack.getBytes(UTF_8),ack.getBytes(UTF_8).length,packet.getSocketAddress()));\n}\n catch (Exception e) {\n  if (closed) {\n    return;\n  }\n  NAMING_LOGGER.error(\"[NA] error while receiving push data\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 190,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 2068,
        "startLineNumber" : 77,
        "startColumnNumber" : 24,
        "endLineNumber" : 116,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    byte[] buffer=new byte[UDP_MSS];\n    DatagramPacket packet=new DatagramPacket(buffer,buffer.length);\n    udpSocket.receive(packet);\n    String json=new String(IoUtils.tryDecompress(packet.getData()),UTF_8).trim();\n    NAMING_LOGGER.info(\"received push data: \" + json + \" from \"+ packet.getAddress().toString());\n    PushPacket pushPacket=JacksonUtils.toObj(json,PushPacket.class);\n    String ack;\n    if (\"dom\".equals(pushPacket.type) || \"service\".equals(pushPacket.type)) {\n      serviceInfoHolder.processServiceInfo(pushPacket.data);\n      ack=\"{\\\"type\\\": \\\"push-ack\\\"\" + \", \\\"lastRefTime\\\":\\\"\" + pushPacket.lastRefTime + \"\\\", \\\"data\\\":\"+ \"\\\"\\\"}\";\n    }\n else     if (\"dump\".equals(pushPacket.type)) {\n      ack=\"{\\\"type\\\": \\\"dump-ack\\\"\" + \", \\\"lastRefTime\\\": \\\"\" + pushPacket.lastRefTime + \"\\\", \\\"data\\\":\"+ \"\\\"\"+ StringUtils.escapeJavaScript(JacksonUtils.toJson(serviceInfoHolder.getServiceInfoMap()))+ \"\\\"}\";\n    }\n else {\n      ack=\"{\\\"type\\\": \\\"unknown-ack\\\"\" + \", \\\"lastRefTime\\\":\\\"\" + pushPacket.lastRefTime + \"\\\", \\\"data\\\":\"+ \"\\\"\\\"}\";\n    }\n    udpSocket.send(new DatagramPacket(ack.getBytes(UTF_8),ack.getBytes(UTF_8).length,packet.getSocketAddress()));\n  }\n catch (  Exception e) {\n    if (closed) {\n      return;\n    }\n    NAMING_LOGGER.error(\"[NA] error while receiving push data\",e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 191,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2084,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 116,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (!closed) {\n  try {\n    byte[] buffer=new byte[UDP_MSS];\n    DatagramPacket packet=new DatagramPacket(buffer,buffer.length);\n    udpSocket.receive(packet);\n    String json=new String(IoUtils.tryDecompress(packet.getData()),UTF_8).trim();\n    NAMING_LOGGER.info(\"received push data: \" + json + \" from \"+ packet.getAddress().toString());\n    PushPacket pushPacket=JacksonUtils.toObj(json,PushPacket.class);\n    String ack;\n    if (\"dom\".equals(pushPacket.type) || \"service\".equals(pushPacket.type)) {\n      serviceInfoHolder.processServiceInfo(pushPacket.data);\n      ack=\"{\\\"type\\\": \\\"push-ack\\\"\" + \", \\\"lastRefTime\\\":\\\"\" + pushPacket.lastRefTime + \"\\\", \\\"data\\\":\"+ \"\\\"\\\"}\";\n    }\n else     if (\"dump\".equals(pushPacket.type)) {\n      ack=\"{\\\"type\\\": \\\"dump-ack\\\"\" + \", \\\"lastRefTime\\\": \\\"\" + pushPacket.lastRefTime + \"\\\", \\\"data\\\":\"+ \"\\\"\"+ StringUtils.escapeJavaScript(JacksonUtils.toJson(serviceInfoHolder.getServiceInfoMap()))+ \"\\\"}\";\n    }\n else {\n      ack=\"{\\\"type\\\": \\\"unknown-ack\\\"\" + \", \\\"lastRefTime\\\":\\\"\" + pushPacket.lastRefTime + \"\\\", \\\"data\\\":\"+ \"\\\"\\\"}\";\n    }\n    udpSocket.send(new DatagramPacket(ack.getBytes(UTF_8),ack.getBytes(UTF_8).length,packet.getSocketAddress()));\n  }\n catch (  Exception e) {\n    if (closed) {\n      return;\n    }\n    NAMING_LOGGER.error(\"[NA] error while receiving push data\",e);\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 194,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2100,
        "startLineNumber" : 76,
        "startColumnNumber" : 22,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  while (!closed) {\n    try {\n      byte[] buffer=new byte[UDP_MSS];\n      DatagramPacket packet=new DatagramPacket(buffer,buffer.length);\n      udpSocket.receive(packet);\n      String json=new String(IoUtils.tryDecompress(packet.getData()),UTF_8).trim();\n      NAMING_LOGGER.info(\"received push data: \" + json + \" from \"+ packet.getAddress().toString());\n      PushPacket pushPacket=JacksonUtils.toObj(json,PushPacket.class);\n      String ack;\n      if (\"dom\".equals(pushPacket.type) || \"service\".equals(pushPacket.type)) {\n        serviceInfoHolder.processServiceInfo(pushPacket.data);\n        ack=\"{\\\"type\\\": \\\"push-ack\\\"\" + \", \\\"lastRefTime\\\":\\\"\" + pushPacket.lastRefTime + \"\\\", \\\"data\\\":\"+ \"\\\"\\\"}\";\n      }\n else       if (\"dump\".equals(pushPacket.type)) {\n        ack=\"{\\\"type\\\": \\\"dump-ack\\\"\" + \", \\\"lastRefTime\\\": \\\"\" + pushPacket.lastRefTime + \"\\\", \\\"data\\\":\"+ \"\\\"\"+ StringUtils.escapeJavaScript(JacksonUtils.toJson(serviceInfoHolder.getServiceInfoMap()))+ \"\\\"}\";\n      }\n else {\n        ack=\"{\\\"type\\\": \\\"unknown-ack\\\"\" + \", \\\"lastRefTime\\\":\\\"\" + pushPacket.lastRefTime + \"\\\", \\\"data\\\":\"+ \"\\\"\\\"}\";\n      }\n      udpSocket.send(new DatagramPacket(ack.getBytes(UTF_8),ack.getBytes(UTF_8).length,packet.getSocketAddress()));\n    }\n catch (    Exception e) {\n      if (closed) {\n        return;\n      }\n      NAMING_LOGGER.error(\"[NA] error while receiving push data\",e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 195,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2132,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void run(){\n  while (!closed) {\n    try {\n      byte[] buffer=new byte[UDP_MSS];\n      DatagramPacket packet=new DatagramPacket(buffer,buffer.length);\n      udpSocket.receive(packet);\n      String json=new String(IoUtils.tryDecompress(packet.getData()),UTF_8).trim();\n      NAMING_LOGGER.info(\"received push data: \" + json + \" from \"+ packet.getAddress().toString());\n      PushPacket pushPacket=JacksonUtils.toObj(json,PushPacket.class);\n      String ack;\n      if (\"dom\".equals(pushPacket.type) || \"service\".equals(pushPacket.type)) {\n        serviceInfoHolder.processServiceInfo(pushPacket.data);\n        ack=\"{\\\"type\\\": \\\"push-ack\\\"\" + \", \\\"lastRefTime\\\":\\\"\" + pushPacket.lastRefTime + \"\\\", \\\"data\\\":\"+ \"\\\"\\\"}\";\n      }\n else       if (\"dump\".equals(pushPacket.type)) {\n        ack=\"{\\\"type\\\": \\\"dump-ack\\\"\" + \", \\\"lastRefTime\\\": \\\"\" + pushPacket.lastRefTime + \"\\\", \\\"data\\\":\"+ \"\\\"\"+ StringUtils.escapeJavaScript(JacksonUtils.toJson(serviceInfoHolder.getServiceInfoMap()))+ \"\\\"}\";\n      }\n else {\n        ack=\"{\\\"type\\\": \\\"unknown-ack\\\"\" + \", \\\"lastRefTime\\\":\\\"\" + pushPacket.lastRefTime + \"\\\", \\\"data\\\":\"+ \"\\\"\\\"}\";\n      }\n      udpSocket.send(new DatagramPacket(ack.getBytes(UTF_8),ack.getBytes(UTF_8).length,packet.getSocketAddress()));\n    }\n catch (    Exception e) {\n      if (closed) {\n        return;\n      }\n      NAMING_LOGGER.error(\"[NA] error while receiving push data\",e);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 201,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 87,
        "startColumnNumber" : 16,
        "endLineNumber" : 87,
        "endColumnNumber" : 110
      },
      "nodeContext" : "NAMING_LOGGER.info(\"received push data: \" + json + \" from \"+ packet.getAddress().toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.net.InetAddress"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 87,
    "startColumnNumber" : 78,
    "endLineNumber" : 87,
    "endColumnNumber" : 97
  } ],
  "layoutRelationDataList" : [ ]
}