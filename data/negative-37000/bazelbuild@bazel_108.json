{
  "id" : 108,
  "expression" : "ruleContext.getPrerequisiteArtifact(\"timezone_data\")",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/main/java/com/google/devtools/build/lib/rules/java/JavaToolchain.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ruleContext.getPrerequisiteArtifact(\"timezone_data\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 52,
      "startLineNumber" : 84,
      "startColumnNumber" : 28,
      "endLineNumber" : 84,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 84,
        "startColumnNumber" : 13,
        "endLineNumber" : 84,
        "endColumnNumber" : 80
      },
      "nodeContext" : "timezoneData=ruleContext.getPrerequisiteArtifact(\"timezone_data\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 81
      },
      "nodeContext" : "Artifact timezoneData=ruleContext.getPrerequisiteArtifact(\"timezone_data\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6412,
        "startLineNumber" : 60,
        "startColumnNumber" : 79,
        "endLineNumber" : 197,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ImmutableList<String> javacopts=getJavacOpts(ruleContext);\n  BootClassPathInfo bootclasspath=getBootClassPathInfo(ruleContext);\n  boolean javacSupportsWorkers=ruleContext.attributes().get(\"javac_supports_workers\",Type.BOOLEAN);\n  boolean javacSupportsMultiplexWorkers=ruleContext.attributes().get(\"javac_supports_multiplex_workers\",Type.BOOLEAN);\n  boolean javacSupportsWorkerCancellation=ruleContext.attributes().get(\"javac_supports_worker_cancellation\",Type.BOOLEAN);\n  ImmutableSet<String> headerCompilerBuiltinProcessors=ImmutableSet.copyOf(ruleContext.attributes().get(\"header_compiler_builtin_processors\",Type.STRING_LIST));\n  ImmutableSet<String> reducedClasspathIncompatibleProcessors=ImmutableSet.copyOf(ruleContext.attributes().get(\"reduced_classpath_incompatible_processors\",Type.STRING_LIST));\n  boolean forciblyDisableHeaderCompilation=ruleContext.attributes().get(\"forcibly_disable_header_compilation\",Type.BOOLEAN);\n  Artifact singleJar=ruleContext.getPrerequisiteArtifact(\"singlejar\");\n  Artifact oneVersion=ruleContext.getPrerequisiteArtifact(\"oneversion\");\n  Artifact oneVersionAllowlist=ruleContext.getPrerequisiteArtifact(\"oneversion_whitelist\");\n  Artifact genClass=ruleContext.getPrerequisiteArtifact(\"genclass\");\n  Artifact resourceJarBuilder=ruleContext.getPrerequisiteArtifact(\"resourcejar\");\n  Artifact timezoneData=ruleContext.getPrerequisiteArtifact(\"timezone_data\");\n  FilesToRunProvider ijar=ruleContext.getExecutablePrerequisite(\"ijar\");\n  FilesToRunProvider proguardAllowlister=ruleContext.getExecutablePrerequisite(\"proguard_allowlister\");\n  ImmutableListMultimap<String,String> compatibleJavacOptions=getCompatibleJavacOptions(ruleContext);\n  NestedSet<Artifact> tools=PrerequisiteArtifacts.nestedSet(ruleContext,\"tools\");\n  NestedSet<String> jvmOpts=NestedSetBuilder.wrap(Order.STABLE_ORDER,ruleContext.getExpander().withExecLocations(ImmutableMap.of()).list(\"jvm_opts\"));\n  JavaToolchainTool javabuilder=JavaToolchainTool.fromRuleContext(ruleContext,\"javabuilder\",\"javabuilder_data\",\"javabuilder_jvm_opts\");\n  JavaToolchainTool headerCompiler=JavaToolchainTool.fromRuleContext(ruleContext,\"header_compiler\",\"turbine_data\",\"turbine_jvm_opts\");\n  JavaToolchainTool headerCompilerDirect=JavaToolchainTool.fromFilesToRunProvider(ruleContext.getExecutablePrerequisite(\"header_compiler_direct\"));\n  JspecifyInfo jspecifyInfo;\n  String jspecifyProcessorClass=ruleContext.attributes().get(\"jspecify_processor_class\",STRING);\n  if (jspecifyProcessorClass.isEmpty()) {\n    jspecifyInfo=null;\n  }\n else {\n    ImmutableList<Artifact> jspecifyStubs=ruleContext.getPrerequisiteArtifacts(\"jspecify_stubs\").list();\n    JavaPluginData jspecifyProcessor=JavaPluginData.create(NestedSetBuilder.create(STABLE_ORDER,jspecifyProcessorClass),NestedSetBuilder.create(STABLE_ORDER,ruleContext.getPrerequisiteArtifact(\"jspecify_processor\")),NestedSetBuilder.wrap(STABLE_ORDER,jspecifyStubs));\n    NestedSet<Artifact> jspecifyImplicitDeps=NestedSetBuilder.create(STABLE_ORDER,ruleContext.getPrerequisiteArtifact(\"jspecify_implicit_deps\"));\n    ImmutableList.Builder<String> jspecifyJavacopts=ImmutableList.<String>builder().addAll(ruleContext.attributes().get(\"jspecify_javacopts\",Type.STRING_LIST));\n    if (!jspecifyStubs.isEmpty()) {\n      jspecifyJavacopts.add(jspecifyStubs.stream().map(Artifact::getExecPathString).collect(joining(\":\",\"-Astubs=\",\"\")));\n    }\n    ImmutableList<PackageSpecificationProvider> jspecifyPackages=ImmutableList.copyOf(ruleContext.getPrerequisites(\"jspecify_packages\",PackageGroupConfiguredTarget.class));\n    jspecifyInfo=JspecifyInfo.create(jspecifyProcessor,jspecifyImplicitDeps,jspecifyJavacopts.build(),jspecifyPackages);\n  }\n  AndroidLintTool androidLint=AndroidLintTool.fromRuleContext(ruleContext);\n  ImmutableList<JavaPackageConfigurationProvider> packageConfiguration=ImmutableList.copyOf(ruleContext.getPrerequisites(\"package_configuration\",JavaPackageConfigurationProvider.class));\n  FilesToRunProvider jacocoRunner=ruleContext.getExecutablePrerequisite(\"jacocorunner\");\n  JavaRuntimeInfo javaRuntime=JavaRuntimeInfo.from(ruleContext,\"java_runtime\");\n  JavaToolchainProvider provider=JavaToolchainProvider.create(ruleContext.getLabel(),javacopts,jvmOpts,javacSupportsWorkers,javacSupportsMultiplexWorkers,javacSupportsWorkerCancellation,bootclasspath,tools,javabuilder,headerCompiler,headerCompilerDirect,androidLint,jspecifyInfo,headerCompilerBuiltinProcessors,reducedClasspathIncompatibleProcessors,forciblyDisableHeaderCompilation,singleJar,oneVersion,oneVersionAllowlist,genClass,resourceJarBuilder,timezoneData,ijar,compatibleJavacOptions,packageConfiguration,jacocoRunner,proguardAllowlister,semantics,javaRuntime);\n  ToolchainInfo toolchainInfo=new ToolchainInfo(ImmutableMap.<String,Object>builder().put(\"java\",provider).build());\n  RuleConfiguredTargetBuilder builder=new RuleConfiguredTargetBuilder(ruleContext).addStarlarkTransitiveInfo(JavaToolchainProvider.LEGACY_NAME,provider).addNativeDeclaredProvider(provider).addNativeDeclaredProvider(toolchainInfo).addProvider(RunfilesProvider.class,RunfilesProvider.simple(Runfiles.EMPTY)).setFilesToBuild(new NestedSetBuilder<Artifact>(Order.STABLE_ORDER).build());\n  return builder.build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 590,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 6559,
        "startLineNumber" : 58,
        "startColumnNumber" : 2,
        "endLineNumber" : 197,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public ConfiguredTarget create(RuleContext ruleContext) throws InterruptedException, RuleErrorException, ActionConflictException {\n  ImmutableList<String> javacopts=getJavacOpts(ruleContext);\n  BootClassPathInfo bootclasspath=getBootClassPathInfo(ruleContext);\n  boolean javacSupportsWorkers=ruleContext.attributes().get(\"javac_supports_workers\",Type.BOOLEAN);\n  boolean javacSupportsMultiplexWorkers=ruleContext.attributes().get(\"javac_supports_multiplex_workers\",Type.BOOLEAN);\n  boolean javacSupportsWorkerCancellation=ruleContext.attributes().get(\"javac_supports_worker_cancellation\",Type.BOOLEAN);\n  ImmutableSet<String> headerCompilerBuiltinProcessors=ImmutableSet.copyOf(ruleContext.attributes().get(\"header_compiler_builtin_processors\",Type.STRING_LIST));\n  ImmutableSet<String> reducedClasspathIncompatibleProcessors=ImmutableSet.copyOf(ruleContext.attributes().get(\"reduced_classpath_incompatible_processors\",Type.STRING_LIST));\n  boolean forciblyDisableHeaderCompilation=ruleContext.attributes().get(\"forcibly_disable_header_compilation\",Type.BOOLEAN);\n  Artifact singleJar=ruleContext.getPrerequisiteArtifact(\"singlejar\");\n  Artifact oneVersion=ruleContext.getPrerequisiteArtifact(\"oneversion\");\n  Artifact oneVersionAllowlist=ruleContext.getPrerequisiteArtifact(\"oneversion_whitelist\");\n  Artifact genClass=ruleContext.getPrerequisiteArtifact(\"genclass\");\n  Artifact resourceJarBuilder=ruleContext.getPrerequisiteArtifact(\"resourcejar\");\n  Artifact timezoneData=ruleContext.getPrerequisiteArtifact(\"timezone_data\");\n  FilesToRunProvider ijar=ruleContext.getExecutablePrerequisite(\"ijar\");\n  FilesToRunProvider proguardAllowlister=ruleContext.getExecutablePrerequisite(\"proguard_allowlister\");\n  ImmutableListMultimap<String,String> compatibleJavacOptions=getCompatibleJavacOptions(ruleContext);\n  NestedSet<Artifact> tools=PrerequisiteArtifacts.nestedSet(ruleContext,\"tools\");\n  NestedSet<String> jvmOpts=NestedSetBuilder.wrap(Order.STABLE_ORDER,ruleContext.getExpander().withExecLocations(ImmutableMap.of()).list(\"jvm_opts\"));\n  JavaToolchainTool javabuilder=JavaToolchainTool.fromRuleContext(ruleContext,\"javabuilder\",\"javabuilder_data\",\"javabuilder_jvm_opts\");\n  JavaToolchainTool headerCompiler=JavaToolchainTool.fromRuleContext(ruleContext,\"header_compiler\",\"turbine_data\",\"turbine_jvm_opts\");\n  JavaToolchainTool headerCompilerDirect=JavaToolchainTool.fromFilesToRunProvider(ruleContext.getExecutablePrerequisite(\"header_compiler_direct\"));\n  JspecifyInfo jspecifyInfo;\n  String jspecifyProcessorClass=ruleContext.attributes().get(\"jspecify_processor_class\",STRING);\n  if (jspecifyProcessorClass.isEmpty()) {\n    jspecifyInfo=null;\n  }\n else {\n    ImmutableList<Artifact> jspecifyStubs=ruleContext.getPrerequisiteArtifacts(\"jspecify_stubs\").list();\n    JavaPluginData jspecifyProcessor=JavaPluginData.create(NestedSetBuilder.create(STABLE_ORDER,jspecifyProcessorClass),NestedSetBuilder.create(STABLE_ORDER,ruleContext.getPrerequisiteArtifact(\"jspecify_processor\")),NestedSetBuilder.wrap(STABLE_ORDER,jspecifyStubs));\n    NestedSet<Artifact> jspecifyImplicitDeps=NestedSetBuilder.create(STABLE_ORDER,ruleContext.getPrerequisiteArtifact(\"jspecify_implicit_deps\"));\n    ImmutableList.Builder<String> jspecifyJavacopts=ImmutableList.<String>builder().addAll(ruleContext.attributes().get(\"jspecify_javacopts\",Type.STRING_LIST));\n    if (!jspecifyStubs.isEmpty()) {\n      jspecifyJavacopts.add(jspecifyStubs.stream().map(Artifact::getExecPathString).collect(joining(\":\",\"-Astubs=\",\"\")));\n    }\n    ImmutableList<PackageSpecificationProvider> jspecifyPackages=ImmutableList.copyOf(ruleContext.getPrerequisites(\"jspecify_packages\",PackageGroupConfiguredTarget.class));\n    jspecifyInfo=JspecifyInfo.create(jspecifyProcessor,jspecifyImplicitDeps,jspecifyJavacopts.build(),jspecifyPackages);\n  }\n  AndroidLintTool androidLint=AndroidLintTool.fromRuleContext(ruleContext);\n  ImmutableList<JavaPackageConfigurationProvider> packageConfiguration=ImmutableList.copyOf(ruleContext.getPrerequisites(\"package_configuration\",JavaPackageConfigurationProvider.class));\n  FilesToRunProvider jacocoRunner=ruleContext.getExecutablePrerequisite(\"jacocorunner\");\n  JavaRuntimeInfo javaRuntime=JavaRuntimeInfo.from(ruleContext,\"java_runtime\");\n  JavaToolchainProvider provider=JavaToolchainProvider.create(ruleContext.getLabel(),javacopts,jvmOpts,javacSupportsWorkers,javacSupportsMultiplexWorkers,javacSupportsWorkerCancellation,bootclasspath,tools,javabuilder,headerCompiler,headerCompilerDirect,androidLint,jspecifyInfo,headerCompilerBuiltinProcessors,reducedClasspathIncompatibleProcessors,forciblyDisableHeaderCompilation,singleJar,oneVersion,oneVersionAllowlist,genClass,resourceJarBuilder,timezoneData,ijar,compatibleJavacOptions,packageConfiguration,jacocoRunner,proguardAllowlister,semantics,javaRuntime);\n  ToolchainInfo toolchainInfo=new ToolchainInfo(ImmutableMap.<String,Object>builder().put(\"java\",provider).build());\n  RuleConfiguredTargetBuilder builder=new RuleConfiguredTargetBuilder(ruleContext).addStarlarkTransitiveInfo(JavaToolchainProvider.LEGACY_NAME,provider).addNativeDeclaredProvider(provider).addNativeDeclaredProvider(toolchainInfo).addProvider(RunfilesProvider.class,RunfilesProvider.simple(Runfiles.EMPTY)).setFilesToBuild(new NestedSetBuilder<Artifact>(Order.STABLE_ORDER).build());\n  return builder.build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 607,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 81
      },
      "nodeContext" : "Artifact timezoneData=ruleContext.getPrerequisiteArtifact(\"timezone_data\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "com.google.devtools.build.lib.actions.Artifact"
  } ],
  "positionList" : [ {
    "charLength" : 52,
    "startLineNumber" : 84,
    "startColumnNumber" : 28,
    "endLineNumber" : 84,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ ]
}