{
  "id" : 51,
  "expression" : "Executors",
  "projectName" : "ReactiveX@RxAndroid",
  "commitID" : "6b7cfe2a0acb8903ea10014d2f66386954a37813",
  "filePath" : "/src/test/java/rx/android/observables/AndroidObservableTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Executors",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 91,
      "startColumnNumber" : 38,
      "endLineNumber" : 91,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 91,
        "startColumnNumber" : 38,
        "endLineNumber" : 91,
        "endColumnNumber" : 73
      },
      "nodeContext" : "Executors.newSingleThreadExecutor()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 273,
        "startLineNumber" : 91,
        "startColumnNumber" : 38,
        "endLineNumber" : 97,
        "endColumnNumber" : 10
      },
      "nodeContext" : "Executors.newSingleThreadExecutor().submit(new Callable<Object>(){\n  @Override public Object call() throws Exception {\n    AndroidObservable.bindFragment(fragment,Observable.empty());\n    return null;\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 32,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 282,
        "startLineNumber" : 91,
        "startColumnNumber" : 29,
        "endLineNumber" : 97,
        "endColumnNumber" : 10
      },
      "nodeContext" : "future=Executors.newSingleThreadExecutor().submit(new Callable<Object>(){\n  @Override public Object call() throws Exception {\n    AndroidObservable.bindFragment(fragment,Observable.empty());\n    return null;\n  }\n}\n)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 34,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 304,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 11
      },
      "nodeContext" : "final Future<Object> future=Executors.newSingleThreadExecutor().submit(new Callable<Object>(){\n  @Override public Object call() throws Exception {\n    AndroidObservable.bindFragment(fragment,Observable.empty());\n    return null;\n  }\n}\n);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 41,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 462,
        "startLineNumber" : 90,
        "startColumnNumber" : 91,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Future<Object> future=Executors.newSingleThreadExecutor().submit(new Callable<Object>(){\n    @Override public Object call() throws Exception {\n      AndroidObservable.bindFragment(fragment,Observable.empty());\n      return null;\n    }\n  }\n);\n  try {\n    future.get(1,TimeUnit.SECONDS);\n  }\n catch (  ExecutionException e) {\n    throw e.getCause();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 599,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test(expected=IllegalStateException.class) public void itThrowsIfObserverCallsFromFragmentFromBackgroundThread() throws Throwable {\n  final Future<Object> future=Executors.newSingleThreadExecutor().submit(new Callable<Object>(){\n    @Override public Object call() throws Exception {\n      AndroidObservable.bindFragment(fragment,Observable.empty());\n      return null;\n    }\n  }\n);\n  try {\n    future.get(1,TimeUnit.SECONDS);\n  }\n catch (  ExecutionException e) {\n    throw e.getCause();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 75,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 91,
        "startColumnNumber" : 38,
        "endLineNumber" : 91,
        "endColumnNumber" : 73
      },
      "nodeContext" : "Executors.newSingleThreadExecutor()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.Executors"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 91,
    "startColumnNumber" : 38,
    "endLineNumber" : 91,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ ]
}