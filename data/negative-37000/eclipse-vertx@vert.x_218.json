{
  "id" : 218,
  "expression" : "delim",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/java/io/vertx/core/parsetools/RecordParser.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "delim",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 77,
      "startColumnNumber" : 41,
      "endLineNumber" : 77,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 77,
        "startColumnNumber" : 11,
        "endLineNumber" : 77,
        "endColumnNumber" : 55
      },
      "nodeContext" : "RecordParserImpl.newDelimited(delim,output)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 77,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 56
      },
      "nodeContext" : "return RecordParserImpl.newDelimited(delim,output);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 76,
        "startColumnNumber" : 73,
        "endLineNumber" : 78,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  return RecordParserImpl.newDelimited(delim,output);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 581,
        "startLineNumber" : 67,
        "startColumnNumber" : 2,
        "endLineNumber" : 78,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Create a new  {@code RecordParser} instance, initially in delimited mode, and where the delimiter can be representedby the String  {@code} delim endcoded in latin-1 . Don't use this if your String contains other than latin-1 characters.<p> {@code output} Will receive whole records which have been parsed.\n * @param delim  the initial delimiter string\n * @param output  handler that will receive the output\n */\nstatic RecordParser newDelimited(String delim,Handler<Buffer> output){\n  return RecordParserImpl.newDelimited(delim,output);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 24,
      "astHeight" : 5
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 77,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 56
      },
      "nodeContext" : "return RecordParserImpl.newDelimited(delim,output);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 77,
    "startColumnNumber" : 41,
    "endLineNumber" : 77,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}