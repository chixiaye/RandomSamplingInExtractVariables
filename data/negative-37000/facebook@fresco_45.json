{
  "id" : 45,
  "expression" : "val3a",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/fbcore/src/test/java/com/facebook/datasource/IncreasingQualityDataSourceSupplierTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "val3a",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 201,
      "startColumnNumber" : 59,
      "endLineNumber" : 201,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 201,
        "startColumnNumber" : 4,
        "endLineNumber" : 201,
        "endColumnNumber" : 83
      },
      "nodeContext" : "setState(mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3a,NOT_FAILED,null)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 201,
        "startColumnNumber" : 4,
        "endLineNumber" : 201,
        "endColumnNumber" : 84
      },
      "nodeContext" : "setState(mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3a,NOT_FAILED,null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2519,
        "startLineNumber" : 194,
        "startColumnNumber" : 50,
        "endLineNumber" : 242,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  DataSource<Object> dataSource=getAndSubscribe();\n  DataSubscriber<Object> subscriber1=verifyGetAndSubscribeM(mDataSourceSupplier1,mSrc1);\n  DataSubscriber<Object> subscriber2=verifyGetAndSubscribeM(mDataSourceSupplier2,mSrc2);\n  DataSubscriber<Object> subscriber3=verifyGetAndSubscribe(mDataSourceSupplier3,mSrc3);\n  Object val3a=mock(Object.class);\n  setState(mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3a,NOT_FAILED,null);\n  subscriber3.onNewResult(mSrc3);\n  verifySubscriber(dataSource,mSrc3,ON_NEW_RESULT);\n  verifyState(dataSource,mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3a,NOT_FAILED,null);\n  Object val2a=mock(Object.class);\n  setState(mSrc2,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val2a,NOT_FAILED,null);\n  subscriber2.onNewResult(mSrc2);\n  verifySubscriber(dataSource,mSrc2,NO_INTERACTIONS);\n  verifyState(dataSource,mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3a,NOT_FAILED,null);\n  Object val3b=mock(Object.class);\n  setState(mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3b,NOT_FAILED,null);\n  subscriber3.onNewResult(mSrc3);\n  verifySubscriber(dataSource,mSrc3,ON_NEW_RESULT);\n  verifyState(dataSource,mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3b,NOT_FAILED,null);\n  Object val2b=mock(Object.class);\n  setState(mSrc2,NOT_CLOSED,FINISHED,WITH_RESULT,val2b,NOT_FAILED,null);\n  subscriber2.onNewResult(mSrc2);\n  mInOrder.verify(mSrc3).close();\n  verifySubscriber(dataSource,mSrc2,ON_NEW_RESULT);\n  verifyState(dataSource,mSrc2,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val2b,NOT_FAILED,null);\n  Object val1a=mock(Object.class);\n  setState(mSrc1,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val1a,NOT_FAILED,null);\n  subscriber1.onNewResult(mSrc1);\n  verifySubscriber(dataSource,mSrc1,NO_INTERACTIONS);\n  verifyState(dataSource,mSrc2,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val2b,NOT_FAILED,null);\n  Object val1b=mock(Object.class);\n  setState(mSrc1,NOT_CLOSED,FINISHED,WITH_RESULT,val1b,NOT_FAILED,null);\n  subscriber1.onNewResult(mSrc1);\n  mInOrder.verify(mSrc2).close();\n  verifySubscriber(dataSource,mSrc1,ON_NEW_RESULT);\n  verifyState(dataSource,mSrc1,NOT_CLOSED,FINISHED,WITH_RESULT,val1b,NOT_FAILED,null);\n  testClose(dataSource,mSrc1);\n  verifyState(dataSource,null,CLOSED,FINISHED,WITHOUT_RESULT,null,NOT_FAILED,null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 329,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2605,
        "startLineNumber" : 192,
        "startColumnNumber" : 2,
        "endLineNumber" : 242,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Interleaved results. \n */\n@Test public void testLifecycle_I3_I2_I3_S2_I1_S1_C(){\n  DataSource<Object> dataSource=getAndSubscribe();\n  DataSubscriber<Object> subscriber1=verifyGetAndSubscribeM(mDataSourceSupplier1,mSrc1);\n  DataSubscriber<Object> subscriber2=verifyGetAndSubscribeM(mDataSourceSupplier2,mSrc2);\n  DataSubscriber<Object> subscriber3=verifyGetAndSubscribe(mDataSourceSupplier3,mSrc3);\n  Object val3a=mock(Object.class);\n  setState(mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3a,NOT_FAILED,null);\n  subscriber3.onNewResult(mSrc3);\n  verifySubscriber(dataSource,mSrc3,ON_NEW_RESULT);\n  verifyState(dataSource,mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3a,NOT_FAILED,null);\n  Object val2a=mock(Object.class);\n  setState(mSrc2,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val2a,NOT_FAILED,null);\n  subscriber2.onNewResult(mSrc2);\n  verifySubscriber(dataSource,mSrc2,NO_INTERACTIONS);\n  verifyState(dataSource,mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3a,NOT_FAILED,null);\n  Object val3b=mock(Object.class);\n  setState(mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3b,NOT_FAILED,null);\n  subscriber3.onNewResult(mSrc3);\n  verifySubscriber(dataSource,mSrc3,ON_NEW_RESULT);\n  verifyState(dataSource,mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3b,NOT_FAILED,null);\n  Object val2b=mock(Object.class);\n  setState(mSrc2,NOT_CLOSED,FINISHED,WITH_RESULT,val2b,NOT_FAILED,null);\n  subscriber2.onNewResult(mSrc2);\n  mInOrder.verify(mSrc3).close();\n  verifySubscriber(dataSource,mSrc2,ON_NEW_RESULT);\n  verifyState(dataSource,mSrc2,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val2b,NOT_FAILED,null);\n  Object val1a=mock(Object.class);\n  setState(mSrc1,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val1a,NOT_FAILED,null);\n  subscriber1.onNewResult(mSrc1);\n  verifySubscriber(dataSource,mSrc1,NO_INTERACTIONS);\n  verifyState(dataSource,mSrc2,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val2b,NOT_FAILED,null);\n  Object val1b=mock(Object.class);\n  setState(mSrc1,NOT_CLOSED,FINISHED,WITH_RESULT,val1b,NOT_FAILED,null);\n  subscriber1.onNewResult(mSrc1);\n  mInOrder.verify(mSrc2).close();\n  verifySubscriber(dataSource,mSrc1,ON_NEW_RESULT);\n  verifyState(dataSource,mSrc1,NOT_CLOSED,FINISHED,WITH_RESULT,val1b,NOT_FAILED,null);\n  testClose(dataSource,mSrc1);\n  verifyState(dataSource,null,CLOSED,FINISHED,WITHOUT_RESULT,null,NOT_FAILED,null);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 336,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 201,
        "startColumnNumber" : 4,
        "endLineNumber" : 201,
        "endColumnNumber" : 84
      },
      "nodeContext" : "setState(mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3a,NOT_FAILED,null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.Object"
  }, {
    "nodeContext" : "val3a",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 204,
      "startColumnNumber" : 74,
      "endLineNumber" : 204,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 204,
        "startColumnNumber" : 4,
        "endLineNumber" : 204,
        "endColumnNumber" : 98
      },
      "nodeContext" : "verifyState(dataSource,mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3a,NOT_FAILED,null)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 204,
        "startColumnNumber" : 4,
        "endLineNumber" : 204,
        "endColumnNumber" : 99
      },
      "nodeContext" : "verifyState(dataSource,mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3a,NOT_FAILED,null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2519,
        "startLineNumber" : 194,
        "startColumnNumber" : 50,
        "endLineNumber" : 242,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  DataSource<Object> dataSource=getAndSubscribe();\n  DataSubscriber<Object> subscriber1=verifyGetAndSubscribeM(mDataSourceSupplier1,mSrc1);\n  DataSubscriber<Object> subscriber2=verifyGetAndSubscribeM(mDataSourceSupplier2,mSrc2);\n  DataSubscriber<Object> subscriber3=verifyGetAndSubscribe(mDataSourceSupplier3,mSrc3);\n  Object val3a=mock(Object.class);\n  setState(mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3a,NOT_FAILED,null);\n  subscriber3.onNewResult(mSrc3);\n  verifySubscriber(dataSource,mSrc3,ON_NEW_RESULT);\n  verifyState(dataSource,mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3a,NOT_FAILED,null);\n  Object val2a=mock(Object.class);\n  setState(mSrc2,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val2a,NOT_FAILED,null);\n  subscriber2.onNewResult(mSrc2);\n  verifySubscriber(dataSource,mSrc2,NO_INTERACTIONS);\n  verifyState(dataSource,mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3a,NOT_FAILED,null);\n  Object val3b=mock(Object.class);\n  setState(mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3b,NOT_FAILED,null);\n  subscriber3.onNewResult(mSrc3);\n  verifySubscriber(dataSource,mSrc3,ON_NEW_RESULT);\n  verifyState(dataSource,mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3b,NOT_FAILED,null);\n  Object val2b=mock(Object.class);\n  setState(mSrc2,NOT_CLOSED,FINISHED,WITH_RESULT,val2b,NOT_FAILED,null);\n  subscriber2.onNewResult(mSrc2);\n  mInOrder.verify(mSrc3).close();\n  verifySubscriber(dataSource,mSrc2,ON_NEW_RESULT);\n  verifyState(dataSource,mSrc2,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val2b,NOT_FAILED,null);\n  Object val1a=mock(Object.class);\n  setState(mSrc1,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val1a,NOT_FAILED,null);\n  subscriber1.onNewResult(mSrc1);\n  verifySubscriber(dataSource,mSrc1,NO_INTERACTIONS);\n  verifyState(dataSource,mSrc2,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val2b,NOT_FAILED,null);\n  Object val1b=mock(Object.class);\n  setState(mSrc1,NOT_CLOSED,FINISHED,WITH_RESULT,val1b,NOT_FAILED,null);\n  subscriber1.onNewResult(mSrc1);\n  mInOrder.verify(mSrc2).close();\n  verifySubscriber(dataSource,mSrc1,ON_NEW_RESULT);\n  verifyState(dataSource,mSrc1,NOT_CLOSED,FINISHED,WITH_RESULT,val1b,NOT_FAILED,null);\n  testClose(dataSource,mSrc1);\n  verifyState(dataSource,null,CLOSED,FINISHED,WITHOUT_RESULT,null,NOT_FAILED,null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 329,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2605,
        "startLineNumber" : 192,
        "startColumnNumber" : 2,
        "endLineNumber" : 242,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Interleaved results. \n */\n@Test public void testLifecycle_I3_I2_I3_S2_I1_S1_C(){\n  DataSource<Object> dataSource=getAndSubscribe();\n  DataSubscriber<Object> subscriber1=verifyGetAndSubscribeM(mDataSourceSupplier1,mSrc1);\n  DataSubscriber<Object> subscriber2=verifyGetAndSubscribeM(mDataSourceSupplier2,mSrc2);\n  DataSubscriber<Object> subscriber3=verifyGetAndSubscribe(mDataSourceSupplier3,mSrc3);\n  Object val3a=mock(Object.class);\n  setState(mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3a,NOT_FAILED,null);\n  subscriber3.onNewResult(mSrc3);\n  verifySubscriber(dataSource,mSrc3,ON_NEW_RESULT);\n  verifyState(dataSource,mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3a,NOT_FAILED,null);\n  Object val2a=mock(Object.class);\n  setState(mSrc2,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val2a,NOT_FAILED,null);\n  subscriber2.onNewResult(mSrc2);\n  verifySubscriber(dataSource,mSrc2,NO_INTERACTIONS);\n  verifyState(dataSource,mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3a,NOT_FAILED,null);\n  Object val3b=mock(Object.class);\n  setState(mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3b,NOT_FAILED,null);\n  subscriber3.onNewResult(mSrc3);\n  verifySubscriber(dataSource,mSrc3,ON_NEW_RESULT);\n  verifyState(dataSource,mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3b,NOT_FAILED,null);\n  Object val2b=mock(Object.class);\n  setState(mSrc2,NOT_CLOSED,FINISHED,WITH_RESULT,val2b,NOT_FAILED,null);\n  subscriber2.onNewResult(mSrc2);\n  mInOrder.verify(mSrc3).close();\n  verifySubscriber(dataSource,mSrc2,ON_NEW_RESULT);\n  verifyState(dataSource,mSrc2,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val2b,NOT_FAILED,null);\n  Object val1a=mock(Object.class);\n  setState(mSrc1,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val1a,NOT_FAILED,null);\n  subscriber1.onNewResult(mSrc1);\n  verifySubscriber(dataSource,mSrc1,NO_INTERACTIONS);\n  verifyState(dataSource,mSrc2,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val2b,NOT_FAILED,null);\n  Object val1b=mock(Object.class);\n  setState(mSrc1,NOT_CLOSED,FINISHED,WITH_RESULT,val1b,NOT_FAILED,null);\n  subscriber1.onNewResult(mSrc1);\n  mInOrder.verify(mSrc2).close();\n  verifySubscriber(dataSource,mSrc1,ON_NEW_RESULT);\n  verifyState(dataSource,mSrc1,NOT_CLOSED,FINISHED,WITH_RESULT,val1b,NOT_FAILED,null);\n  testClose(dataSource,mSrc1);\n  verifyState(dataSource,null,CLOSED,FINISHED,WITHOUT_RESULT,null,NOT_FAILED,null);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 336,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 204,
        "startColumnNumber" : 4,
        "endLineNumber" : 204,
        "endColumnNumber" : 99
      },
      "nodeContext" : "verifyState(dataSource,mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3a,NOT_FAILED,null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.Object"
  }, {
    "nodeContext" : "val3a",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 211,
      "startColumnNumber" : 74,
      "endLineNumber" : 211,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 211,
        "startColumnNumber" : 4,
        "endLineNumber" : 211,
        "endColumnNumber" : 98
      },
      "nodeContext" : "verifyState(dataSource,mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3a,NOT_FAILED,null)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 211,
        "startColumnNumber" : 4,
        "endLineNumber" : 211,
        "endColumnNumber" : 99
      },
      "nodeContext" : "verifyState(dataSource,mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3a,NOT_FAILED,null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2519,
        "startLineNumber" : 194,
        "startColumnNumber" : 50,
        "endLineNumber" : 242,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  DataSource<Object> dataSource=getAndSubscribe();\n  DataSubscriber<Object> subscriber1=verifyGetAndSubscribeM(mDataSourceSupplier1,mSrc1);\n  DataSubscriber<Object> subscriber2=verifyGetAndSubscribeM(mDataSourceSupplier2,mSrc2);\n  DataSubscriber<Object> subscriber3=verifyGetAndSubscribe(mDataSourceSupplier3,mSrc3);\n  Object val3a=mock(Object.class);\n  setState(mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3a,NOT_FAILED,null);\n  subscriber3.onNewResult(mSrc3);\n  verifySubscriber(dataSource,mSrc3,ON_NEW_RESULT);\n  verifyState(dataSource,mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3a,NOT_FAILED,null);\n  Object val2a=mock(Object.class);\n  setState(mSrc2,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val2a,NOT_FAILED,null);\n  subscriber2.onNewResult(mSrc2);\n  verifySubscriber(dataSource,mSrc2,NO_INTERACTIONS);\n  verifyState(dataSource,mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3a,NOT_FAILED,null);\n  Object val3b=mock(Object.class);\n  setState(mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3b,NOT_FAILED,null);\n  subscriber3.onNewResult(mSrc3);\n  verifySubscriber(dataSource,mSrc3,ON_NEW_RESULT);\n  verifyState(dataSource,mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3b,NOT_FAILED,null);\n  Object val2b=mock(Object.class);\n  setState(mSrc2,NOT_CLOSED,FINISHED,WITH_RESULT,val2b,NOT_FAILED,null);\n  subscriber2.onNewResult(mSrc2);\n  mInOrder.verify(mSrc3).close();\n  verifySubscriber(dataSource,mSrc2,ON_NEW_RESULT);\n  verifyState(dataSource,mSrc2,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val2b,NOT_FAILED,null);\n  Object val1a=mock(Object.class);\n  setState(mSrc1,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val1a,NOT_FAILED,null);\n  subscriber1.onNewResult(mSrc1);\n  verifySubscriber(dataSource,mSrc1,NO_INTERACTIONS);\n  verifyState(dataSource,mSrc2,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val2b,NOT_FAILED,null);\n  Object val1b=mock(Object.class);\n  setState(mSrc1,NOT_CLOSED,FINISHED,WITH_RESULT,val1b,NOT_FAILED,null);\n  subscriber1.onNewResult(mSrc1);\n  mInOrder.verify(mSrc2).close();\n  verifySubscriber(dataSource,mSrc1,ON_NEW_RESULT);\n  verifyState(dataSource,mSrc1,NOT_CLOSED,FINISHED,WITH_RESULT,val1b,NOT_FAILED,null);\n  testClose(dataSource,mSrc1);\n  verifyState(dataSource,null,CLOSED,FINISHED,WITHOUT_RESULT,null,NOT_FAILED,null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 329,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2605,
        "startLineNumber" : 192,
        "startColumnNumber" : 2,
        "endLineNumber" : 242,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Interleaved results. \n */\n@Test public void testLifecycle_I3_I2_I3_S2_I1_S1_C(){\n  DataSource<Object> dataSource=getAndSubscribe();\n  DataSubscriber<Object> subscriber1=verifyGetAndSubscribeM(mDataSourceSupplier1,mSrc1);\n  DataSubscriber<Object> subscriber2=verifyGetAndSubscribeM(mDataSourceSupplier2,mSrc2);\n  DataSubscriber<Object> subscriber3=verifyGetAndSubscribe(mDataSourceSupplier3,mSrc3);\n  Object val3a=mock(Object.class);\n  setState(mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3a,NOT_FAILED,null);\n  subscriber3.onNewResult(mSrc3);\n  verifySubscriber(dataSource,mSrc3,ON_NEW_RESULT);\n  verifyState(dataSource,mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3a,NOT_FAILED,null);\n  Object val2a=mock(Object.class);\n  setState(mSrc2,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val2a,NOT_FAILED,null);\n  subscriber2.onNewResult(mSrc2);\n  verifySubscriber(dataSource,mSrc2,NO_INTERACTIONS);\n  verifyState(dataSource,mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3a,NOT_FAILED,null);\n  Object val3b=mock(Object.class);\n  setState(mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3b,NOT_FAILED,null);\n  subscriber3.onNewResult(mSrc3);\n  verifySubscriber(dataSource,mSrc3,ON_NEW_RESULT);\n  verifyState(dataSource,mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3b,NOT_FAILED,null);\n  Object val2b=mock(Object.class);\n  setState(mSrc2,NOT_CLOSED,FINISHED,WITH_RESULT,val2b,NOT_FAILED,null);\n  subscriber2.onNewResult(mSrc2);\n  mInOrder.verify(mSrc3).close();\n  verifySubscriber(dataSource,mSrc2,ON_NEW_RESULT);\n  verifyState(dataSource,mSrc2,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val2b,NOT_FAILED,null);\n  Object val1a=mock(Object.class);\n  setState(mSrc1,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val1a,NOT_FAILED,null);\n  subscriber1.onNewResult(mSrc1);\n  verifySubscriber(dataSource,mSrc1,NO_INTERACTIONS);\n  verifyState(dataSource,mSrc2,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val2b,NOT_FAILED,null);\n  Object val1b=mock(Object.class);\n  setState(mSrc1,NOT_CLOSED,FINISHED,WITH_RESULT,val1b,NOT_FAILED,null);\n  subscriber1.onNewResult(mSrc1);\n  mInOrder.verify(mSrc2).close();\n  verifySubscriber(dataSource,mSrc1,ON_NEW_RESULT);\n  verifyState(dataSource,mSrc1,NOT_CLOSED,FINISHED,WITH_RESULT,val1b,NOT_FAILED,null);\n  testClose(dataSource,mSrc1);\n  verifyState(dataSource,null,CLOSED,FINISHED,WITHOUT_RESULT,null,NOT_FAILED,null);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 336,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 211,
        "startColumnNumber" : 4,
        "endLineNumber" : 211,
        "endColumnNumber" : 99
      },
      "nodeContext" : "verifyState(dataSource,mSrc3,NOT_CLOSED,NOT_FINISHED,WITH_RESULT,val3a,NOT_FAILED,null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.Object"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 201,
    "startColumnNumber" : 59,
    "endLineNumber" : 201,
    "endColumnNumber" : 64
  }, {
    "charLength" : 5,
    "startLineNumber" : 204,
    "startColumnNumber" : 74,
    "endLineNumber" : 204,
    "endColumnNumber" : 79
  }, {
    "charLength" : 5,
    "startLineNumber" : 211,
    "startColumnNumber" : 74,
    "endLineNumber" : 211,
    "endColumnNumber" : 79
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}