{
  "id" : 367,
  "expression" : "CollUtil.isNotEmpty(rowList) || false == ignoreEmptyRow",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-poi/src/main/java/cn/hutool/poi/excel/reader/ListSheetReader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "CollUtil.isNotEmpty(rowList) || false == ignoreEmptyRow",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 55,
      "startLineNumber" : 42,
      "startColumnNumber" : 7,
      "endLineNumber" : 42,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 8,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 245,
        "startLineNumber" : 42,
        "startColumnNumber" : 3,
        "endLineNumber" : 48,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (CollUtil.isNotEmpty(rowList) || false == ignoreEmptyRow) {\n  if (aliasFirstLine && i == startRowIndex) {\n    rowList=Convert.toList(Object.class,aliasHeader(rowList));\n  }\n  resultList.add(rowList);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 289,
        "startLineNumber" : 40,
        "startColumnNumber" : 53,
        "endLineNumber" : 49,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  rowList=readRow(sheet,i);\n  if (CollUtil.isNotEmpty(rowList) || false == ignoreEmptyRow) {\n    if (aliasFirstLine && i == startRowIndex) {\n      rowList=Convert.toList(Object.class,aliasHeader(rowList));\n    }\n    resultList.add(rowList);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 340,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 49,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=startRowIndex; i <= endRowIndex; i++) {\n  rowList=readRow(sheet,i);\n  if (CollUtil.isNotEmpty(rowList) || false == ignoreEmptyRow) {\n    if (aliasFirstLine && i == startRowIndex) {\n      rowList=Convert.toList(Object.class,aliasHeader(rowList));\n    }\n    resultList.add(rowList);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 53,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 631,
        "startLineNumber" : 34,
        "startColumnNumber" : 45,
        "endLineNumber" : 51,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  final List<List<Object>> resultList=new ArrayList<>();\n  int startRowIndex=Math.max(this.startRowIndex,sheet.getFirstRowNum());\n  int endRowIndex=Math.min(this.endRowIndex,sheet.getLastRowNum());\n  List<Object> rowList;\n  for (int i=startRowIndex; i <= endRowIndex; i++) {\n    rowList=readRow(sheet,i);\n    if (CollUtil.isNotEmpty(rowList) || false == ignoreEmptyRow) {\n      if (aliasFirstLine && i == startRowIndex) {\n        rowList=Convert.toList(Object.class,aliasHeader(rowList));\n      }\n      resultList.add(rowList);\n    }\n  }\n  return resultList;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 687,
        "startLineNumber" : 33,
        "startColumnNumber" : 1,
        "endLineNumber" : 51,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public List<List<Object>> read(Sheet sheet){\n  final List<List<Object>> resultList=new ArrayList<>();\n  int startRowIndex=Math.max(this.startRowIndex,sheet.getFirstRowNum());\n  int endRowIndex=Math.min(this.endRowIndex,sheet.getLastRowNum());\n  List<Object> rowList;\n  for (int i=startRowIndex; i <= endRowIndex; i++) {\n    rowList=readRow(sheet,i);\n    if (CollUtil.isNotEmpty(rowList) || false == ignoreEmptyRow) {\n      if (aliasFirstLine && i == startRowIndex) {\n        rowList=Convert.toList(Object.class,aliasHeader(rowList));\n      }\n      resultList.add(rowList);\n    }\n  }\n  return resultList;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 123,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 245,
        "startLineNumber" : 42,
        "startColumnNumber" : 3,
        "endLineNumber" : 48,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (CollUtil.isNotEmpty(rowList) || false == ignoreEmptyRow) {\n  if (aliasFirstLine && i == startRowIndex) {\n    rowList=Convert.toList(Object.class,aliasHeader(rowList));\n  }\n  resultList.add(rowList);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 10
    },
    "tokenLength" : 7,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 55,
    "startLineNumber" : 42,
    "startColumnNumber" : 7,
    "endLineNumber" : 42,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}