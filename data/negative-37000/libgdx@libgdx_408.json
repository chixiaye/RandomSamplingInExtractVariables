{
  "id" : 408,
  "expression" : "y3 - (y2 - y1)",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/gdx/src/com/badlogic/gdx/graphics/g2d/CpuSpriteBatch.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "y3 - (y2 - y1)",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 345,
      "startColumnNumber" : 8,
      "endLineNumber" : 345,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 345,
        "startColumnNumber" : 3,
        "endLineNumber" : 345,
        "endColumnNumber" : 22
      },
      "nodeContext" : "y4=y3 - (y2 - y1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 345,
        "startColumnNumber" : 3,
        "endLineNumber" : 345,
        "endColumnNumber" : 23
      },
      "nodeContext" : "y4=y3 - (y2 - y1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 341,
        "startLineNumber" : 331,
        "startColumnNumber" : 21,
        "endLineNumber" : 346,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final float cos=MathUtils.cosDeg(rotation);\n  final float sin=MathUtils.sinDeg(rotation);\n  x1=cos * p1x - sin * p1y;\n  y1=sin * p1x + cos * p1y;\n  x2=cos * p2x - sin * p2y;\n  y2=sin * p2x + cos * p2y;\n  x3=cos * p3x - sin * p3y;\n  y3=sin * p3x + cos * p3y;\n  x4=x1 + (x3 - x2);\n  y4=y3 - (y2 - y1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 478,
        "startLineNumber" : 331,
        "startColumnNumber" : 2,
        "endLineNumber" : 358,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (rotation != 0) {\n  final float cos=MathUtils.cosDeg(rotation);\n  final float sin=MathUtils.sinDeg(rotation);\n  x1=cos * p1x - sin * p1y;\n  y1=sin * p1x + cos * p1y;\n  x2=cos * p2x - sin * p2y;\n  y2=sin * p2x + cos * p2y;\n  x3=cos * p3x - sin * p3y;\n  y3=sin * p3x + cos * p3y;\n  x4=x1 + (x3 - x2);\n  y4=y3 - (y2 - y1);\n}\n else {\n  x1=p1x;\n  y1=p1y;\n  x2=p2x;\n  y2=p2y;\n  x3=p3x;\n  y3=p3y;\n  x4=p4x;\n  y4=p4y;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2613,
        "startLineNumber" : 288,
        "startColumnNumber" : 114,
        "endLineNumber" : 407,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (!drawing)   throw new IllegalStateException(\"CpuSpriteBatch.begin must be called before draw.\");\n  if (texture != lastTexture)   switchTexture(texture);\n else   if (idx == vertices.length)   super.flush();\n  final float worldOriginX=x + originX;\n  final float worldOriginY=y + originY;\n  float fx=-originX;\n  float fy=-originY;\n  float fx2=width - originX;\n  float fy2=height - originY;\n  if (scaleX != 1 || scaleY != 1) {\n    fx*=scaleX;\n    fy*=scaleY;\n    fx2*=scaleX;\n    fy2*=scaleY;\n  }\n  final float p1x=fx;\n  final float p1y=fy;\n  final float p2x=fx;\n  final float p2y=fy2;\n  final float p3x=fx2;\n  final float p3y=fy2;\n  final float p4x=fx2;\n  final float p4y=fy;\n  float x1;\n  float y1;\n  float x2;\n  float y2;\n  float x3;\n  float y3;\n  float x4;\n  float y4;\n  if (rotation != 0) {\n    final float cos=MathUtils.cosDeg(rotation);\n    final float sin=MathUtils.sinDeg(rotation);\n    x1=cos * p1x - sin * p1y;\n    y1=sin * p1x + cos * p1y;\n    x2=cos * p2x - sin * p2y;\n    y2=sin * p2x + cos * p2y;\n    x3=cos * p3x - sin * p3y;\n    y3=sin * p3x + cos * p3y;\n    x4=x1 + (x3 - x2);\n    y4=y3 - (y2 - y1);\n  }\n else {\n    x1=p1x;\n    y1=p1y;\n    x2=p2x;\n    y2=p2y;\n    x3=p3x;\n    y3=p3y;\n    x4=p4x;\n    y4=p4y;\n  }\n  x1+=worldOriginX;\n  y1+=worldOriginY;\n  x2+=worldOriginX;\n  y2+=worldOriginY;\n  x3+=worldOriginX;\n  y3+=worldOriginY;\n  x4+=worldOriginX;\n  y4+=worldOriginY;\n  if (flipX) {\n    float tmp=u;\n    u=u2;\n    u2=tmp;\n  }\n  if (flipY) {\n    float tmp=v;\n    v=v2;\n    v2=tmp;\n  }\n  Affine2 t=adjustAffine;\n  vertices[idx + 0]=t.m00 * x1 + t.m01 * y1 + t.m02;\n  vertices[idx + 1]=t.m10 * x1 + t.m11 * y1 + t.m12;\n  vertices[idx + 2]=colorPacked;\n  vertices[idx + 3]=u;\n  vertices[idx + 4]=v;\n  vertices[idx + 5]=t.m00 * x2 + t.m01 * y2 + t.m02;\n  vertices[idx + 6]=t.m10 * x2 + t.m11 * y2 + t.m12;\n  vertices[idx + 7]=colorPacked;\n  vertices[idx + 8]=u;\n  vertices[idx + 9]=v2;\n  vertices[idx + 10]=t.m00 * x3 + t.m01 * y3 + t.m02;\n  vertices[idx + 11]=t.m10 * x3 + t.m11 * y3 + t.m12;\n  vertices[idx + 12]=colorPacked;\n  vertices[idx + 13]=u2;\n  vertices[idx + 14]=v2;\n  vertices[idx + 15]=t.m00 * x4 + t.m01 * y4 + t.m02;\n  vertices[idx + 16]=t.m10 * x4 + t.m11 * y4 + t.m12;\n  vertices[idx + 17]=colorPacked;\n  vertices[idx + 18]=u2;\n  vertices[idx + 19]=v;\n  idx+=Sprite.SPRITE_SIZE;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 655,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2848,
        "startLineNumber" : 287,
        "startColumnNumber" : 1,
        "endLineNumber" : 407,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private void drawAdjustedUV(Texture texture,float x,float y,float originX,float originY,float width,float height,float scaleX,float scaleY,float rotation,float u,float v,float u2,float v2,boolean flipX,boolean flipY){\n  if (!drawing)   throw new IllegalStateException(\"CpuSpriteBatch.begin must be called before draw.\");\n  if (texture != lastTexture)   switchTexture(texture);\n else   if (idx == vertices.length)   super.flush();\n  final float worldOriginX=x + originX;\n  final float worldOriginY=y + originY;\n  float fx=-originX;\n  float fy=-originY;\n  float fx2=width - originX;\n  float fy2=height - originY;\n  if (scaleX != 1 || scaleY != 1) {\n    fx*=scaleX;\n    fy*=scaleY;\n    fx2*=scaleX;\n    fy2*=scaleY;\n  }\n  final float p1x=fx;\n  final float p1y=fy;\n  final float p2x=fx;\n  final float p2y=fy2;\n  final float p3x=fx2;\n  final float p3y=fy2;\n  final float p4x=fx2;\n  final float p4y=fy;\n  float x1;\n  float y1;\n  float x2;\n  float y2;\n  float x3;\n  float y3;\n  float x4;\n  float y4;\n  if (rotation != 0) {\n    final float cos=MathUtils.cosDeg(rotation);\n    final float sin=MathUtils.sinDeg(rotation);\n    x1=cos * p1x - sin * p1y;\n    y1=sin * p1x + cos * p1y;\n    x2=cos * p2x - sin * p2y;\n    y2=sin * p2x + cos * p2y;\n    x3=cos * p3x - sin * p3y;\n    y3=sin * p3x + cos * p3y;\n    x4=x1 + (x3 - x2);\n    y4=y3 - (y2 - y1);\n  }\n else {\n    x1=p1x;\n    y1=p1y;\n    x2=p2x;\n    y2=p2y;\n    x3=p3x;\n    y3=p3y;\n    x4=p4x;\n    y4=p4y;\n  }\n  x1+=worldOriginX;\n  y1+=worldOriginY;\n  x2+=worldOriginX;\n  y2+=worldOriginY;\n  x3+=worldOriginX;\n  y3+=worldOriginY;\n  x4+=worldOriginX;\n  y4+=worldOriginY;\n  if (flipX) {\n    float tmp=u;\n    u=u2;\n    u2=tmp;\n  }\n  if (flipY) {\n    float tmp=v;\n    v=v2;\n    v2=tmp;\n  }\n  Affine2 t=adjustAffine;\n  vertices[idx + 0]=t.m00 * x1 + t.m01 * y1 + t.m02;\n  vertices[idx + 1]=t.m10 * x1 + t.m11 * y1 + t.m12;\n  vertices[idx + 2]=colorPacked;\n  vertices[idx + 3]=u;\n  vertices[idx + 4]=v;\n  vertices[idx + 5]=t.m00 * x2 + t.m01 * y2 + t.m02;\n  vertices[idx + 6]=t.m10 * x2 + t.m11 * y2 + t.m12;\n  vertices[idx + 7]=colorPacked;\n  vertices[idx + 8]=u;\n  vertices[idx + 9]=v2;\n  vertices[idx + 10]=t.m00 * x3 + t.m01 * y3 + t.m02;\n  vertices[idx + 11]=t.m10 * x3 + t.m11 * y3 + t.m12;\n  vertices[idx + 12]=colorPacked;\n  vertices[idx + 13]=u2;\n  vertices[idx + 14]=v2;\n  vertices[idx + 15]=t.m00 * x4 + t.m01 * y4 + t.m02;\n  vertices[idx + 16]=t.m10 * x4 + t.m11 * y4 + t.m12;\n  vertices[idx + 17]=colorPacked;\n  vertices[idx + 18]=u2;\n  vertices[idx + 19]=v;\n  idx+=Sprite.SPRITE_SIZE;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 708,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 345,
        "startColumnNumber" : 3,
        "endLineNumber" : 345,
        "endColumnNumber" : 23
      },
      "nodeContext" : "y4=y3 - (y2 - y1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    },
    "tokenLength" : 5,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 345,
    "startColumnNumber" : 8,
    "endLineNumber" : 345,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ ]
}