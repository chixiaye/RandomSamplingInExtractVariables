{
  "id" : 445,
  "expression" : "Arrays.asList(HttpHeaderConsts.CLIENT_VERSION_HEADER,VersionUtils.version,HttpHeaderConsts.USER_AGENT_HEADER,UtilsAndCommons.SERVER_VERSION,\"Accept-Encoding\",\"gzip,deflate,sdch\",\"Connection\",\"Keep-Alive\",\"Content-Encoding\",\"gzip\")",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/naming/src/main/java/com/alibaba/nacos/naming/misc/NamingProxy.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Arrays.asList(HttpHeaderConsts.CLIENT_VERSION_HEADER,VersionUtils.version,HttpHeaderConsts.USER_AGENT_HEADER,UtilsAndCommons.SERVER_VERSION,\"Accept-Encoding\",\"gzip,deflate,sdch\",\"Connection\",\"Keep-Alive\",\"Content-Encoding\",\"gzip\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 279,
      "startLineNumber" : 199,
      "startColumnNumber" : 35,
      "endLineNumber" : 201,
      "endColumnNumber" : 96
    },
    "astNodeNumber" : 21,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 289,
        "startLineNumber" : 199,
        "startColumnNumber" : 25,
        "endLineNumber" : 201,
        "endColumnNumber" : 96
      },
      "nodeContext" : "headers=Arrays.asList(HttpHeaderConsts.CLIENT_VERSION_HEADER,VersionUtils.version,HttpHeaderConsts.USER_AGENT_HEADER,UtilsAndCommons.SERVER_VERSION,\"Accept-Encoding\",\"gzip,deflate,sdch\",\"Connection\",\"Keep-Alive\",\"Content-Encoding\",\"gzip\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 23,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 303,
        "startLineNumber" : 199,
        "startColumnNumber" : 12,
        "endLineNumber" : 201,
        "endColumnNumber" : 97
      },
      "nodeContext" : "List<String> headers=Arrays.asList(HttpHeaderConsts.CLIENT_VERSION_HEADER,VersionUtils.version,HttpHeaderConsts.USER_AGENT_HEADER,UtilsAndCommons.SERVER_VERSION,\"Accept-Encoding\",\"gzip,deflate,sdch\",\"Connection\",\"Keep-Alive\",\"Content-Encoding\",\"gzip\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 29,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1097,
        "startLineNumber" : 198,
        "startColumnNumber" : 12,
        "endLineNumber" : 222,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  List<String> headers=Arrays.asList(HttpHeaderConsts.CLIENT_VERSION_HEADER,VersionUtils.version,HttpHeaderConsts.USER_AGENT_HEADER,UtilsAndCommons.SERVER_VERSION,\"Accept-Encoding\",\"gzip,deflate,sdch\",\"Connection\",\"Keep-Alive\",\"Content-Encoding\",\"gzip\");\n  RestResult<String> result;\n  if (!IPUtil.containsPort(curServer)) {\n    curServer=curServer + IPUtil.IP_PORT_SPLITER + EnvUtil.getPort();\n  }\n  result=HttpClient.httpGet(\"http://\" + curServer + api,headers,params);\n  if (result.ok()) {\n    return result.getData();\n  }\n  if (HttpURLConnection.HTTP_NOT_MODIFIED == result.getCode()) {\n    return StringUtils.EMPTY;\n  }\n  throw new IOException(\"failed to req API:\" + \"http://\" + curServer + api+ \". code:\"+ result.getCode()+ \" msg: \"+ result.getMessage());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1185,
        "startLineNumber" : 198,
        "startColumnNumber" : 8,
        "endLineNumber" : 224,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  List<String> headers=Arrays.asList(HttpHeaderConsts.CLIENT_VERSION_HEADER,VersionUtils.version,HttpHeaderConsts.USER_AGENT_HEADER,UtilsAndCommons.SERVER_VERSION,\"Accept-Encoding\",\"gzip,deflate,sdch\",\"Connection\",\"Keep-Alive\",\"Content-Encoding\",\"gzip\");\n  RestResult<String> result;\n  if (!IPUtil.containsPort(curServer)) {\n    curServer=curServer + IPUtil.IP_PORT_SPLITER + EnvUtil.getPort();\n  }\n  result=HttpClient.httpGet(\"http://\" + curServer + api,headers,params);\n  if (result.ok()) {\n    return result.getData();\n  }\n  if (HttpURLConnection.HTTP_NOT_MODIFIED == result.getCode()) {\n    return StringUtils.EMPTY;\n  }\n  throw new IOException(\"failed to req API:\" + \"http://\" + curServer + api+ \". code:\"+ result.getCode()+ \" msg: \"+ result.getMessage());\n}\n catch (Exception e) {\n  Loggers.SRV_LOG.warn(\"NamingProxy\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 123,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1235,
        "startLineNumber" : 197,
        "startColumnNumber" : 107,
        "endLineNumber" : 226,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    List<String> headers=Arrays.asList(HttpHeaderConsts.CLIENT_VERSION_HEADER,VersionUtils.version,HttpHeaderConsts.USER_AGENT_HEADER,UtilsAndCommons.SERVER_VERSION,\"Accept-Encoding\",\"gzip,deflate,sdch\",\"Connection\",\"Keep-Alive\",\"Content-Encoding\",\"gzip\");\n    RestResult<String> result;\n    if (!IPUtil.containsPort(curServer)) {\n      curServer=curServer + IPUtil.IP_PORT_SPLITER + EnvUtil.getPort();\n    }\n    result=HttpClient.httpGet(\"http://\" + curServer + api,headers,params);\n    if (result.ok()) {\n      return result.getData();\n    }\n    if (HttpURLConnection.HTTP_NOT_MODIFIED == result.getCode()) {\n      return StringUtils.EMPTY;\n    }\n    throw new IOException(\"failed to req API:\" + \"http://\" + curServer + api+ \". code:\"+ result.getCode()+ \" msg: \"+ result.getMessage());\n  }\n catch (  Exception e) {\n    Loggers.SRV_LOG.warn(\"NamingProxy\",e);\n  }\n  return StringUtils.EMPTY;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1646,
        "startLineNumber" : 188,
        "startColumnNumber" : 4,
        "endLineNumber" : 226,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * request api.\n * @param api       api path\n * @param params    parameters of api\n * @param curServer target server address\n * @return content if request successfully and response has content, otherwise {@link StringUtils#EMPTY}\n * @throws Exception exception\n */\npublic static String reqApi(String api,Map<String,String> params,String curServer) throws Exception {\n  try {\n    List<String> headers=Arrays.asList(HttpHeaderConsts.CLIENT_VERSION_HEADER,VersionUtils.version,HttpHeaderConsts.USER_AGENT_HEADER,UtilsAndCommons.SERVER_VERSION,\"Accept-Encoding\",\"gzip,deflate,sdch\",\"Connection\",\"Keep-Alive\",\"Content-Encoding\",\"gzip\");\n    RestResult<String> result;\n    if (!IPUtil.containsPort(curServer)) {\n      curServer=curServer + IPUtil.IP_PORT_SPLITER + EnvUtil.getPort();\n    }\n    result=HttpClient.httpGet(\"http://\" + curServer + api,headers,params);\n    if (result.ok()) {\n      return result.getData();\n    }\n    if (HttpURLConnection.HTTP_NOT_MODIFIED == result.getCode()) {\n      return StringUtils.EMPTY;\n    }\n    throw new IOException(\"failed to req API:\" + \"http://\" + curServer + api+ \". code:\"+ result.getCode()+ \" msg: \"+ result.getMessage());\n  }\n catch (  Exception e) {\n    Loggers.SRV_LOG.warn(\"NamingProxy\",e);\n  }\n  return StringUtils.EMPTY;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 154,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 303,
        "startLineNumber" : 199,
        "startColumnNumber" : 12,
        "endLineNumber" : 201,
        "endColumnNumber" : 97
      },
      "nodeContext" : "List<String> headers=Arrays.asList(HttpHeaderConsts.CLIENT_VERSION_HEADER,VersionUtils.version,HttpHeaderConsts.USER_AGENT_HEADER,UtilsAndCommons.SERVER_VERSION,\"Accept-Encoding\",\"gzip,deflate,sdch\",\"Connection\",\"Keep-Alive\",\"Content-Encoding\",\"gzip\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 29,
      "astHeight" : 5
    },
    "tokenLength" : 23,
    "type" : "java.util.List<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 279,
    "startLineNumber" : 199,
    "startColumnNumber" : 35,
    "endLineNumber" : 201,
    "endColumnNumber" : 96
  } ],
  "layoutRelationDataList" : [ ]
}