{
  "id" : 79,
  "expression" : "br.readLine()",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/core/deployment/src/main/java/io/quarkus/deployment/util/ServiceUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "br.readLine()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 69,
      "startColumnNumber" : 23,
      "endLineNumber" : 69,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 69,
        "startColumnNumber" : 16,
        "endLineNumber" : 69,
        "endColumnNumber" : 36
      },
      "nodeContext" : "line=br.readLine()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 69,
        "startColumnNumber" : 15,
        "endLineNumber" : 69,
        "endColumnNumber" : 37
      },
      "nodeContext" : "(line=br.readLine())",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 69,
        "startColumnNumber" : 15,
        "endLineNumber" : 69,
        "endColumnNumber" : 45
      },
      "nodeContext" : "(line=br.readLine()) != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 367,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while ((line=br.readLine()) != null) {\n  int commentMarkerIndex=line.indexOf('#');\n  if (commentMarkerIndex >= 0) {\n    line=line.substring(0,commentMarkerIndex);\n  }\n  line=line.trim();\n  if (line.isEmpty()) {\n    continue;\n  }\n  classNames.add(line);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 48,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 404,
        "startLineNumber" : 67,
        "startColumnNumber" : 109,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String line;\n  while ((line=br.readLine()) != null) {\n    int commentMarkerIndex=line.indexOf('#');\n    if (commentMarkerIndex >= 0) {\n      line=line.substring(0,commentMarkerIndex);\n    }\n    line=line.trim();\n    if (line.isEmpty()) {\n      continue;\n    }\n    classNames.add(line);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 716,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * - Lines starting by a # (or white spaces and a #) are ignored. - For lines containing data before a comment (#) are parsed and only the value before the comment is used.\n */\nprivate static void readStream(final Set<String> classNames,final BufferedReader br) throws IOException {\n  String line;\n  while ((line=br.readLine()) != null) {\n    int commentMarkerIndex=line.indexOf('#');\n    if (commentMarkerIndex >= 0) {\n      line=line.substring(0,commentMarkerIndex);\n    }\n    line=line.trim();\n    if (line.isEmpty()) {\n      continue;\n    }\n    classNames.add(line);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 75,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 69,
        "startColumnNumber" : 15,
        "endLineNumber" : 69,
        "endColumnNumber" : 45
      },
      "nodeContext" : "(line=br.readLine()) != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 69,
    "startColumnNumber" : 23,
    "endLineNumber" : 69,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}