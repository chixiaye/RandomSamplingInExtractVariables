{
  "id" : 335,
  "expression" : "pq.poll()",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/graphtheory/LazyPrimsAdjacencyList.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "pq.poll()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 89,
      "startColumnNumber" : 18,
      "endLineNumber" : 89,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 89,
        "startColumnNumber" : 11,
        "endLineNumber" : 89,
        "endColumnNumber" : 27
      },
      "nodeContext" : "edge=pq.poll()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 89,
        "startColumnNumber" : 6,
        "endLineNumber" : 89,
        "endColumnNumber" : 28
      },
      "nodeContext" : "Edge edge=pq.poll();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 264,
        "startLineNumber" : 88,
        "startColumnNumber" : 44,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Edge edge=pq.poll();\n  int nodeIndex=edge.to;\n  if (visited[nodeIndex])   continue;\n  mstEdges[edgeCount++]=edge;\n  minCostSum+=edge.cost;\n  addEdges(nodeIndex);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 304,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (!pq.isEmpty() && edgeCount != m) {\n  Edge edge=pq.poll();\n  int nodeIndex=edge.to;\n  if (visited[nodeIndex])   continue;\n  mstEdges[edgeCount++]=edge;\n  minCostSum+=edge.cost;\n  addEdges(nodeIndex);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 47,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 693,
        "startLineNumber" : 75,
        "startColumnNumber" : 23,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (solved)   return;\n  solved=true;\n  int m=n - 1, edgeCount=0;\n  pq=new PriorityQueue<>();\n  visited=new boolean[n];\n  mstEdges=new Edge[m];\n  addEdges(0);\n  while (!pq.isEmpty() && edgeCount != m) {\n    Edge edge=pq.poll();\n    int nodeIndex=edge.to;\n    if (visited[nodeIndex])     continue;\n    mstEdges[edgeCount++]=edge;\n    minCostSum+=edge.cost;\n    addEdges(nodeIndex);\n  }\n  mstExists=(edgeCount == m);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 714,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void solve(){\n  if (solved)   return;\n  solved=true;\n  int m=n - 1, edgeCount=0;\n  pq=new PriorityQueue<>();\n  visited=new boolean[n];\n  mstEdges=new Edge[m];\n  addEdges(0);\n  while (!pq.isEmpty() && edgeCount != m) {\n    Edge edge=pq.poll();\n    int nodeIndex=edge.to;\n    if (visited[nodeIndex])     continue;\n    mstEdges[edgeCount++]=edge;\n    minCostSum+=edge.cost;\n    addEdges(nodeIndex);\n  }\n  mstExists=(edgeCount == m);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 89,
        "startColumnNumber" : 6,
        "endLineNumber" : 89,
        "endColumnNumber" : 28
      },
      "nodeContext" : "Edge edge=pq.poll();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList.Edge"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 89,
    "startColumnNumber" : 18,
    "endLineNumber" : 89,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ ]
}