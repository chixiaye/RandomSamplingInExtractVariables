{
  "id" : 198,
  "expression" : "node.name()",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorNodeTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "node.name()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 105,
      "startColumnNumber" : 44,
      "endLineNumber" : 105,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 105,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 56
      },
      "nodeContext" : "metricTags.put(\"processor-node-id\",node.name())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 105,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 57
      },
      "nodeContext" : "metricTags.put(\"processor-node-id\",node.name());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2146,
        "startLineNumber" : 91,
        "startColumnNumber" : 61,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Metrics metrics=new Metrics();\n  final StreamsMetricsImpl streamsMetrics=new StreamsMetricsImpl(metrics,\"test-client\",StreamsConfig.METRICS_LATEST,new MockTime());\n  final InternalMockProcessorContext<Object,Object> context=new InternalMockProcessorContext<>(streamsMetrics);\n  final ProcessorNode<Object,Object,Object,Object> node=new ProcessorNode<>(\"name\",new NoOpProcessor(),Collections.emptySet());\n  node.init(context);\n  final String threadId=Thread.currentThread().getName();\n  final String[] latencyOperations={\"process\",\"punctuate\",\"create\",\"destroy\"};\n  final String groupName=\"stream-processor-node-metrics\";\n  final Map<String,String> metricTags=new LinkedHashMap<>();\n  final String threadIdTagKey=\"client-id\";\n  metricTags.put(\"processor-node-id\",node.name());\n  metricTags.put(\"task-id\",context.taskId().toString());\n  metricTags.put(threadIdTagKey,threadId);\n  for (  final String opName : latencyOperations) {\n    assertFalse(StreamsTestUtils.containsMetric(metrics,opName + \"-latency-avg\",groupName,metricTags));\n    assertFalse(StreamsTestUtils.containsMetric(metrics,opName + \"-latency-max\",groupName,metricTags));\n    assertFalse(StreamsTestUtils.containsMetric(metrics,opName + \"-rate\",groupName,metricTags));\n    assertFalse(StreamsTestUtils.containsMetric(metrics,opName + \"-total\",groupName,metricTags));\n  }\n  metricTags.put(\"processor-node-id\",ROLLUP_VALUE);\n  for (  final String opName : latencyOperations) {\n    assertFalse(StreamsTestUtils.containsMetric(metrics,opName + \"-latency-avg\",groupName,metricTags));\n    assertFalse(StreamsTestUtils.containsMetric(metrics,opName + \"-latency-max\",groupName,metricTags));\n    assertFalse(StreamsTestUtils.containsMetric(metrics,opName + \"-rate\",groupName,metricTags));\n    assertFalse(StreamsTestUtils.containsMetric(metrics,opName + \"-total\",groupName,metricTags));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 269,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2213,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMetricsWithBuiltInMetricsVersionLatest(){\n  final Metrics metrics=new Metrics();\n  final StreamsMetricsImpl streamsMetrics=new StreamsMetricsImpl(metrics,\"test-client\",StreamsConfig.METRICS_LATEST,new MockTime());\n  final InternalMockProcessorContext<Object,Object> context=new InternalMockProcessorContext<>(streamsMetrics);\n  final ProcessorNode<Object,Object,Object,Object> node=new ProcessorNode<>(\"name\",new NoOpProcessor(),Collections.emptySet());\n  node.init(context);\n  final String threadId=Thread.currentThread().getName();\n  final String[] latencyOperations={\"process\",\"punctuate\",\"create\",\"destroy\"};\n  final String groupName=\"stream-processor-node-metrics\";\n  final Map<String,String> metricTags=new LinkedHashMap<>();\n  final String threadIdTagKey=\"client-id\";\n  metricTags.put(\"processor-node-id\",node.name());\n  metricTags.put(\"task-id\",context.taskId().toString());\n  metricTags.put(threadIdTagKey,threadId);\n  for (  final String opName : latencyOperations) {\n    assertFalse(StreamsTestUtils.containsMetric(metrics,opName + \"-latency-avg\",groupName,metricTags));\n    assertFalse(StreamsTestUtils.containsMetric(metrics,opName + \"-latency-max\",groupName,metricTags));\n    assertFalse(StreamsTestUtils.containsMetric(metrics,opName + \"-rate\",groupName,metricTags));\n    assertFalse(StreamsTestUtils.containsMetric(metrics,opName + \"-total\",groupName,metricTags));\n  }\n  metricTags.put(\"processor-node-id\",ROLLUP_VALUE);\n  for (  final String opName : latencyOperations) {\n    assertFalse(StreamsTestUtils.containsMetric(metrics,opName + \"-latency-avg\",groupName,metricTags));\n    assertFalse(StreamsTestUtils.containsMetric(metrics,opName + \"-latency-max\",groupName,metricTags));\n    assertFalse(StreamsTestUtils.containsMetric(metrics,opName + \"-rate\",groupName,metricTags));\n    assertFalse(StreamsTestUtils.containsMetric(metrics,opName + \"-total\",groupName,metricTags));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 275,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 105,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 57
      },
      "nodeContext" : "metricTags.put(\"processor-node-id\",node.name());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 105,
    "startColumnNumber" : 44,
    "endLineNumber" : 105,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}