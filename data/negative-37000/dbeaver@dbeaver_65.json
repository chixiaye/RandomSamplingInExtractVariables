{
  "id" : 65,
  "expression" : "Math",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ui.editors.base/src/org/jkiss/dbeaver/ui/editors/text/NonRuleBasedDamagerRepairer.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Math",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 82,
      "startColumnNumber" : 16,
      "endLineNumber" : 82,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 82,
        "startColumnNumber" : 16,
        "endLineNumber" : 82,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Math.max(partition.getOffset(),info.getOffset())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 65
      },
      "nodeContext" : "start=Math.max(partition.getOffset(),info.getOffset())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 66
      },
      "nodeContext" : "int start=Math.max(partition.getOffset(),info.getOffset());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 642,
        "startLineNumber" : 78,
        "startColumnNumber" : 7,
        "endLineNumber" : 103,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  IRegion info=fDocument.getLineInformationOfOffset(event.getOffset());\n  int start=Math.max(partition.getOffset(),info.getOffset());\n  int end=event.getOffset() + (event.getText() == null ? event.getLength() : event.getText().length());\n  if (info.getOffset() <= end && end <= info.getOffset() + info.getLength()) {\n    end=info.getOffset() + info.getLength();\n  }\n else   end=endOfLineOf(end);\n  end=Math.min(partition.getOffset() + partition.getLength(),end);\n  return new Region(start,end - start);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 714,
        "startLineNumber" : 78,
        "startColumnNumber" : 3,
        "endLineNumber" : 105,
        "endColumnNumber" : 4
      },
      "nodeContext" : "try {\n  IRegion info=fDocument.getLineInformationOfOffset(event.getOffset());\n  int start=Math.max(partition.getOffset(),info.getOffset());\n  int end=event.getOffset() + (event.getText() == null ? event.getLength() : event.getText().length());\n  if (info.getOffset() <= end && end <= info.getOffset() + info.getLength()) {\n    end=info.getOffset() + info.getLength();\n  }\n else   end=endOfLineOf(end);\n  end=Math.min(partition.getOffset() + partition.getLength(),end);\n  return new Region(start,end - start);\n}\n catch (BadLocationException e) {\n  log.debug(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 115,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 723,
        "startLineNumber" : 77,
        "startColumnNumber" : 36,
        "endLineNumber" : 106,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    IRegion info=fDocument.getLineInformationOfOffset(event.getOffset());\n    int start=Math.max(partition.getOffset(),info.getOffset());\n    int end=event.getOffset() + (event.getText() == null ? event.getLength() : event.getText().length());\n    if (info.getOffset() <= end && end <= info.getOffset() + info.getLength()) {\n      end=info.getOffset() + info.getLength();\n    }\n else     end=endOfLineOf(end);\n    end=Math.min(partition.getOffset() + partition.getLength(),end);\n    return new Region(start,end - start);\n  }\n catch (  BadLocationException e) {\n    log.debug(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 757,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 106,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (!documentPartitioningChanged) {\n  try {\n    IRegion info=fDocument.getLineInformationOfOffset(event.getOffset());\n    int start=Math.max(partition.getOffset(),info.getOffset());\n    int end=event.getOffset() + (event.getText() == null ? event.getLength() : event.getText().length());\n    if (info.getOffset() <= end && end <= info.getOffset() + info.getLength()) {\n      end=info.getOffset() + info.getLength();\n    }\n else     end=endOfLineOf(end);\n    end=Math.min(partition.getOffset() + partition.getLength(),end);\n    return new Region(start,end - start);\n  }\n catch (  BadLocationException e) {\n    log.debug(e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 119,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 76,
        "startColumnNumber" : 39,
        "endLineNumber" : 109,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (!documentPartitioningChanged) {\n    try {\n      IRegion info=fDocument.getLineInformationOfOffset(event.getOffset());\n      int start=Math.max(partition.getOffset(),info.getOffset());\n      int end=event.getOffset() + (event.getText() == null ? event.getLength() : event.getText().length());\n      if (info.getOffset() <= end && end <= info.getOffset() + info.getLength()) {\n        end=info.getOffset() + info.getLength();\n      }\n else       end=endOfLineOf(end);\n      end=Math.min(partition.getOffset() + partition.getLength(),end);\n      return new Region(start,end - start);\n    }\n catch (    BadLocationException e) {\n      log.debug(e);\n    }\n  }\n  return partition;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1013,
        "startLineNumber" : 69,
        "startColumnNumber" : 1,
        "endLineNumber" : 109,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * @see IPresentationDamager#getDamageRegion(ITypedRegion,DocumentEvent,boolean)\n */\n@Override public IRegion getDamageRegion(ITypedRegion partition,DocumentEvent event,boolean documentPartitioningChanged){\n  if (!documentPartitioningChanged) {\n    try {\n      IRegion info=fDocument.getLineInformationOfOffset(event.getOffset());\n      int start=Math.max(partition.getOffset(),info.getOffset());\n      int end=event.getOffset() + (event.getText() == null ? event.getLength() : event.getText().length());\n      if (info.getOffset() <= end && end <= info.getOffset() + info.getLength()) {\n        end=info.getOffset() + info.getLength();\n      }\n else       end=endOfLineOf(end);\n      end=Math.min(partition.getOffset() + partition.getLength(),end);\n      return new Region(start,end - start);\n    }\n catch (    BadLocationException e) {\n      log.debug(e);\n    }\n  }\n  return partition;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 141,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 66
      },
      "nodeContext" : "int start=Math.max(partition.getOffset(),info.getOffset());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Math"
  }, {
    "nodeContext" : "Math",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 98,
      "startColumnNumber" : 5,
      "endLineNumber" : 98,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 98,
        "startColumnNumber" : 5,
        "endLineNumber" : 100,
        "endColumnNumber" : 10
      },
      "nodeContext" : "Math.min(partition.getOffset() + partition.getLength(),end)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 100,
        "endColumnNumber" : 10
      },
      "nodeContext" : "end=Math.min(partition.getOffset() + partition.getLength(),end)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 100,
        "endColumnNumber" : 11
      },
      "nodeContext" : "end=Math.min(partition.getOffset() + partition.getLength(),end);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 642,
        "startLineNumber" : 78,
        "startColumnNumber" : 7,
        "endLineNumber" : 103,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  IRegion info=fDocument.getLineInformationOfOffset(event.getOffset());\n  int start=Math.max(partition.getOffset(),info.getOffset());\n  int end=event.getOffset() + (event.getText() == null ? event.getLength() : event.getText().length());\n  if (info.getOffset() <= end && end <= info.getOffset() + info.getLength()) {\n    end=info.getOffset() + info.getLength();\n  }\n else   end=endOfLineOf(end);\n  end=Math.min(partition.getOffset() + partition.getLength(),end);\n  return new Region(start,end - start);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 714,
        "startLineNumber" : 78,
        "startColumnNumber" : 3,
        "endLineNumber" : 105,
        "endColumnNumber" : 4
      },
      "nodeContext" : "try {\n  IRegion info=fDocument.getLineInformationOfOffset(event.getOffset());\n  int start=Math.max(partition.getOffset(),info.getOffset());\n  int end=event.getOffset() + (event.getText() == null ? event.getLength() : event.getText().length());\n  if (info.getOffset() <= end && end <= info.getOffset() + info.getLength()) {\n    end=info.getOffset() + info.getLength();\n  }\n else   end=endOfLineOf(end);\n  end=Math.min(partition.getOffset() + partition.getLength(),end);\n  return new Region(start,end - start);\n}\n catch (BadLocationException e) {\n  log.debug(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 115,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 723,
        "startLineNumber" : 77,
        "startColumnNumber" : 36,
        "endLineNumber" : 106,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    IRegion info=fDocument.getLineInformationOfOffset(event.getOffset());\n    int start=Math.max(partition.getOffset(),info.getOffset());\n    int end=event.getOffset() + (event.getText() == null ? event.getLength() : event.getText().length());\n    if (info.getOffset() <= end && end <= info.getOffset() + info.getLength()) {\n      end=info.getOffset() + info.getLength();\n    }\n else     end=endOfLineOf(end);\n    end=Math.min(partition.getOffset() + partition.getLength(),end);\n    return new Region(start,end - start);\n  }\n catch (  BadLocationException e) {\n    log.debug(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 757,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 106,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (!documentPartitioningChanged) {\n  try {\n    IRegion info=fDocument.getLineInformationOfOffset(event.getOffset());\n    int start=Math.max(partition.getOffset(),info.getOffset());\n    int end=event.getOffset() + (event.getText() == null ? event.getLength() : event.getText().length());\n    if (info.getOffset() <= end && end <= info.getOffset() + info.getLength()) {\n      end=info.getOffset() + info.getLength();\n    }\n else     end=endOfLineOf(end);\n    end=Math.min(partition.getOffset() + partition.getLength(),end);\n    return new Region(start,end - start);\n  }\n catch (  BadLocationException e) {\n    log.debug(e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 119,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 76,
        "startColumnNumber" : 39,
        "endLineNumber" : 109,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (!documentPartitioningChanged) {\n    try {\n      IRegion info=fDocument.getLineInformationOfOffset(event.getOffset());\n      int start=Math.max(partition.getOffset(),info.getOffset());\n      int end=event.getOffset() + (event.getText() == null ? event.getLength() : event.getText().length());\n      if (info.getOffset() <= end && end <= info.getOffset() + info.getLength()) {\n        end=info.getOffset() + info.getLength();\n      }\n else       end=endOfLineOf(end);\n      end=Math.min(partition.getOffset() + partition.getLength(),end);\n      return new Region(start,end - start);\n    }\n catch (    BadLocationException e) {\n      log.debug(e);\n    }\n  }\n  return partition;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1013,
        "startLineNumber" : 69,
        "startColumnNumber" : 1,
        "endLineNumber" : 109,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * @see IPresentationDamager#getDamageRegion(ITypedRegion,DocumentEvent,boolean)\n */\n@Override public IRegion getDamageRegion(ITypedRegion partition,DocumentEvent event,boolean documentPartitioningChanged){\n  if (!documentPartitioningChanged) {\n    try {\n      IRegion info=fDocument.getLineInformationOfOffset(event.getOffset());\n      int start=Math.max(partition.getOffset(),info.getOffset());\n      int end=event.getOffset() + (event.getText() == null ? event.getLength() : event.getText().length());\n      if (info.getOffset() <= end && end <= info.getOffset() + info.getLength()) {\n        end=info.getOffset() + info.getLength();\n      }\n else       end=endOfLineOf(end);\n      end=Math.min(partition.getOffset() + partition.getLength(),end);\n      return new Region(start,end - start);\n    }\n catch (    BadLocationException e) {\n      log.debug(e);\n    }\n  }\n  return partition;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 141,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 98,
        "startColumnNumber" : 5,
        "endLineNumber" : 100,
        "endColumnNumber" : 10
      },
      "nodeContext" : "Math.min(partition.getOffset() + partition.getLength(),end)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Math"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 82,
    "startColumnNumber" : 16,
    "endLineNumber" : 82,
    "endColumnNumber" : 20
  }, {
    "charLength" : 4,
    "startLineNumber" : 98,
    "startColumnNumber" : 5,
    "endLineNumber" : 98,
    "endColumnNumber" : 9
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}