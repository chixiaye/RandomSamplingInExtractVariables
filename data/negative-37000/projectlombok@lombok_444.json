{
  "id" : 444,
  "expression" : "\"(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\".equals(desc)",
  "projectName" : "projectlombok@lombok",
  "commitID" : "25def866b50860715ee7c315c678b8c3d1ba9b56",
  "filePath" : "/src/core/lombok/bytecode/SneakyThrowsRemover.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\".equals(desc)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 66,
      "startLineNumber" : 61,
      "startColumnNumber" : 6,
      "endLineNumber" : 61,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 58,
        "startColumnNumber" : 6,
        "endLineNumber" : 61,
        "endColumnNumber" : 72
      },
      "nodeContext" : "opcode == Opcodes.INVOKESTATIC && \"sneakyThrow\".equals(name) && \"lombok/Lombok\".equals(owner) && \"(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\".equals(desc)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 341,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (opcode == Opcodes.INVOKESTATIC && \"sneakyThrow\".equals(name) && \"lombok/Lombok\".equals(owner) && \"(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\".equals(desc)) {\n  changesMade.set(true);\n  super.visitInsn(Opcodes.ATHROW);\n}\n else {\n  super.visitMethodInsn(opcode,owner,name,desc);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 352,
        "startLineNumber" : 56,
        "startColumnNumber" : 93,
        "endLineNumber" : 68,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (opcode == Opcodes.INVOKESTATIC && \"sneakyThrow\".equals(name) && \"lombok/Lombok\".equals(owner) && \"(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\".equals(desc)) {\n    changesMade.set(true);\n    super.visitInsn(Opcodes.ATHROW);\n  }\n else {\n    super.visitMethodInsn(opcode,owner,name,desc);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 442,
        "startLineNumber" : 56,
        "startColumnNumber" : 3,
        "endLineNumber" : 68,
        "endColumnNumber" : 4
      },
      "nodeContext" : "@Override public void visitMethodInsn(int opcode,String owner,String name,String desc){\n  if (opcode == Opcodes.INVOKESTATIC && \"sneakyThrow\".equals(name) && \"lombok/Lombok\".equals(owner) && \"(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\".equals(desc)) {\n    changesMade.set(true);\n    super.visitInsn(Opcodes.ATHROW);\n  }\n else {\n    super.visitMethodInsn(opcode,owner,name,desc);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 63,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 58,
        "startColumnNumber" : 6,
        "endLineNumber" : 61,
        "endColumnNumber" : 72
      },
      "nodeContext" : "opcode == Opcodes.INVOKESTATIC && \"sneakyThrow\".equals(name) && \"lombok/Lombok\".equals(owner) && \"(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\".equals(desc)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 20,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 66,
    "startLineNumber" : 61,
    "startColumnNumber" : 6,
    "endLineNumber" : 61,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ ]
}