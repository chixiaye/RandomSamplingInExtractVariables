{
  "id" : 442,
  "expression" : "\"Can't Generate signed APK. Please check if your sign info is correct.\"",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/builder/PatchBuilder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Can't Generate signed APK. Please check if your sign info is correct.\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 71,
      "startLineNumber" : 152,
      "startColumnNumber" : 38,
      "endLineNumber" : 152,
      "endColumnNumber" : 109
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 152,
        "startColumnNumber" : 22,
        "endLineNumber" : 152,
        "endColumnNumber" : 110
      },
      "nodeContext" : "new IOException(\"Can't Generate signed APK. Please check if your sign info is correct.\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 152,
        "startColumnNumber" : 16,
        "endLineNumber" : 152,
        "endColumnNumber" : 111
      },
      "nodeContext" : "throw new IOException(\"Can't Generate signed APK. Please check if your sign info is correct.\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 151,
        "startColumnNumber" : 34,
        "endLineNumber" : 153,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  throw new IOException(\"Can't Generate signed APK. Please check if your sign info is correct.\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 151,
        "startColumnNumber" : 12,
        "endLineNumber" : 153,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!output.exists()) {\n  throw new IOException(\"Can't Generate signed APK. Please check if your sign info is correct.\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1350,
        "startLineNumber" : 122,
        "startColumnNumber" : 32,
        "endLineNumber" : 154,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Logger.d(\"Signing apk: %s\",output.getName());\n  String signatureAlgorithm=getSignatureAlgorithm();\n  Logger.d(\"Signing key algorithm is %s\",signatureAlgorithm);\n  if (output.exists()) {\n    output.delete();\n  }\n  ArrayList<String> command=new ArrayList<>();\n  command.add(\"jarsigner\");\n  command.add(\"-sigalg\");\n  command.add(signatureAlgorithm);\n  command.add(\"-digestalg\");\n  command.add(\"SHA1\");\n  command.add(\"-keystore\");\n  command.add(config.mSignatureFile.getAbsolutePath());\n  command.add(\"-storepass\");\n  command.add(config.mStorePass);\n  command.add(\"-keypass\");\n  command.add(config.mKeyPass);\n  command.add(\"-signedjar\");\n  command.add(output.getAbsolutePath());\n  command.add(input.getAbsolutePath());\n  command.add(config.mStoreAlias);\n  Process process=new ProcessBuilder(command).start();\n  process.waitFor();\n  process.destroy();\n  if (!output.exists()) {\n    throw new IOException(\"Can't Generate signed APK. Please check if your sign info is correct.\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1374,
        "startLineNumber" : 122,
        "startColumnNumber" : 8,
        "endLineNumber" : 154,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (config.mUseSignAPk) {\n  Logger.d(\"Signing apk: %s\",output.getName());\n  String signatureAlgorithm=getSignatureAlgorithm();\n  Logger.d(\"Signing key algorithm is %s\",signatureAlgorithm);\n  if (output.exists()) {\n    output.delete();\n  }\n  ArrayList<String> command=new ArrayList<>();\n  command.add(\"jarsigner\");\n  command.add(\"-sigalg\");\n  command.add(signatureAlgorithm);\n  command.add(\"-digestalg\");\n  command.add(\"SHA1\");\n  command.add(\"-keystore\");\n  command.add(config.mSignatureFile.getAbsolutePath());\n  command.add(\"-storepass\");\n  command.add(config.mStorePass);\n  command.add(\"-keypass\");\n  command.add(config.mKeyPass);\n  command.add(\"-signedjar\");\n  command.add(output.getAbsolutePath());\n  command.add(input.getAbsolutePath());\n  command.add(config.mStoreAlias);\n  Process process=new ProcessBuilder(command).start();\n  process.waitFor();\n  process.destroy();\n  if (!output.exists()) {\n    throw new IOException(\"Can't Generate signed APK. Please check if your sign info is correct.\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 166,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1409,
        "startLineNumber" : 120,
        "startColumnNumber" : 67,
        "endLineNumber" : 155,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (config.mUseSignAPk) {\n    Logger.d(\"Signing apk: %s\",output.getName());\n    String signatureAlgorithm=getSignatureAlgorithm();\n    Logger.d(\"Signing key algorithm is %s\",signatureAlgorithm);\n    if (output.exists()) {\n      output.delete();\n    }\n    ArrayList<String> command=new ArrayList<>();\n    command.add(\"jarsigner\");\n    command.add(\"-sigalg\");\n    command.add(signatureAlgorithm);\n    command.add(\"-digestalg\");\n    command.add(\"SHA1\");\n    command.add(\"-keystore\");\n    command.add(config.mSignatureFile.getAbsolutePath());\n    command.add(\"-storepass\");\n    command.add(config.mStorePass);\n    command.add(\"-keypass\");\n    command.add(config.mKeyPass);\n    command.add(\"-signedjar\");\n    command.add(output.getAbsolutePath());\n    command.add(input.getAbsolutePath());\n    command.add(config.mStoreAlias);\n    Process process=new ProcessBuilder(command).start();\n    process.waitFor();\n    process.destroy();\n    if (!output.exists()) {\n      throw new IOException(\"Can't Generate signed APK. Please check if your sign info is correct.\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1632,
        "startLineNumber" : 114,
        "startColumnNumber" : 4,
        "endLineNumber" : 155,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @param input  unsigned file input\n * @param output signed file output\n * @throws IOException\n * @throws InterruptedException\n */\nprivate void signApk(File input,File output) throws Exception {\n  if (config.mUseSignAPk) {\n    Logger.d(\"Signing apk: %s\",output.getName());\n    String signatureAlgorithm=getSignatureAlgorithm();\n    Logger.d(\"Signing key algorithm is %s\",signatureAlgorithm);\n    if (output.exists()) {\n      output.delete();\n    }\n    ArrayList<String> command=new ArrayList<>();\n    command.add(\"jarsigner\");\n    command.add(\"-sigalg\");\n    command.add(signatureAlgorithm);\n    command.add(\"-digestalg\");\n    command.add(\"SHA1\");\n    command.add(\"-keystore\");\n    command.add(config.mSignatureFile.getAbsolutePath());\n    command.add(\"-storepass\");\n    command.add(config.mStorePass);\n    command.add(\"-keypass\");\n    command.add(config.mKeyPass);\n    command.add(\"-signedjar\");\n    command.add(output.getAbsolutePath());\n    command.add(input.getAbsolutePath());\n    command.add(config.mStoreAlias);\n    Process process=new ProcessBuilder(command).start();\n    process.waitFor();\n    process.destroy();\n    if (!output.exists()) {\n      throw new IOException(\"Can't Generate signed APK. Please check if your sign info is correct.\");\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 182,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 152,
        "startColumnNumber" : 16,
        "endLineNumber" : 152,
        "endColumnNumber" : 111
      },
      "nodeContext" : "throw new IOException(\"Can't Generate signed APK. Please check if your sign info is correct.\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 12,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 71,
    "startLineNumber" : 152,
    "startColumnNumber" : 38,
    "endLineNumber" : 152,
    "endColumnNumber" : 109
  } ],
  "layoutRelationDataList" : [ ]
}