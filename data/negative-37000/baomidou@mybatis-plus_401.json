{
  "id" : 401,
  "expression" : "field.getModifiers()",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-support/src/main/java/com/baomidou/mybatisplus/toolkit/ReflectionKit.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "field.getModifiers()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 175,
      "startColumnNumber" : 34,
      "endLineNumber" : 175,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 175,
        "startColumnNumber" : 16,
        "endLineNumber" : 175,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Modifier.isStatic(field.getModifiers())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 175,
        "startColumnNumber" : 12,
        "endLineNumber" : 177,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (Modifier.isStatic(field.getModifiers())) {\n  continue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 310,
        "startLineNumber" : 173,
        "startColumnNumber" : 35,
        "endLineNumber" : 183,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (Modifier.isStatic(field.getModifiers())) {\n    continue;\n  }\n  if (Modifier.isTransient(field.getModifiers())) {\n    continue;\n  }\n  fieldList.add(field);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 337,
        "startLineNumber" : 173,
        "startColumnNumber" : 8,
        "endLineNumber" : 183,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Field field : fields) {\n  if (Modifier.isStatic(field.getModifiers())) {\n    continue;\n  }\n  if (Modifier.isTransient(field.getModifiers())) {\n    continue;\n  }\n  fieldList.add(field);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 30,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 782,
        "startLineNumber" : 167,
        "startColumnNumber" : 59,
        "endLineNumber" : 191,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (null == clazz) {\n    return null;\n  }\n  List<Field> fieldList=new LinkedList<>();\n  Field[] fields=clazz.getDeclaredFields();\n  for (  Field field : fields) {\n    if (Modifier.isStatic(field.getModifiers())) {\n      continue;\n    }\n    if (Modifier.isTransient(field.getModifiers())) {\n      continue;\n    }\n    fieldList.add(field);\n  }\n  Class<?> superClass=clazz.getSuperclass();\n  if (superClass.equals(Object.class)) {\n    return fieldList;\n  }\n  return excludeOverrideSuperField(fieldList,getFieldList(superClass));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 941,
        "startLineNumber" : 159,
        "startColumnNumber" : 4,
        "endLineNumber" : 191,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * <p> 获取该类的所有属性列表 </p>\n * @param clazz 反射类\n * @return\n */\npublic static List<Field> getFieldList(Class<?> clazz){\n  if (null == clazz) {\n    return null;\n  }\n  List<Field> fieldList=new LinkedList<>();\n  Field[] fields=clazz.getDeclaredFields();\n  for (  Field field : fields) {\n    if (Modifier.isStatic(field.getModifiers())) {\n      continue;\n    }\n    if (Modifier.isTransient(field.getModifiers())) {\n      continue;\n    }\n    fieldList.add(field);\n  }\n  Class<?> superClass=clazz.getSuperclass();\n  if (superClass.equals(Object.class)) {\n    return fieldList;\n  }\n  return excludeOverrideSuperField(fieldList,getFieldList(superClass));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 103,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 175,
        "startColumnNumber" : 16,
        "endLineNumber" : 175,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Modifier.isStatic(field.getModifiers())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "field.getModifiers()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 179,
      "startColumnNumber" : 37,
      "endLineNumber" : 179,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 179,
        "startColumnNumber" : 16,
        "endLineNumber" : 179,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Modifier.isTransient(field.getModifiers())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 179,
        "startColumnNumber" : 12,
        "endLineNumber" : 181,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (Modifier.isTransient(field.getModifiers())) {\n  continue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 310,
        "startLineNumber" : 173,
        "startColumnNumber" : 35,
        "endLineNumber" : 183,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (Modifier.isStatic(field.getModifiers())) {\n    continue;\n  }\n  if (Modifier.isTransient(field.getModifiers())) {\n    continue;\n  }\n  fieldList.add(field);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 337,
        "startLineNumber" : 173,
        "startColumnNumber" : 8,
        "endLineNumber" : 183,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Field field : fields) {\n  if (Modifier.isStatic(field.getModifiers())) {\n    continue;\n  }\n  if (Modifier.isTransient(field.getModifiers())) {\n    continue;\n  }\n  fieldList.add(field);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 30,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 782,
        "startLineNumber" : 167,
        "startColumnNumber" : 59,
        "endLineNumber" : 191,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (null == clazz) {\n    return null;\n  }\n  List<Field> fieldList=new LinkedList<>();\n  Field[] fields=clazz.getDeclaredFields();\n  for (  Field field : fields) {\n    if (Modifier.isStatic(field.getModifiers())) {\n      continue;\n    }\n    if (Modifier.isTransient(field.getModifiers())) {\n      continue;\n    }\n    fieldList.add(field);\n  }\n  Class<?> superClass=clazz.getSuperclass();\n  if (superClass.equals(Object.class)) {\n    return fieldList;\n  }\n  return excludeOverrideSuperField(fieldList,getFieldList(superClass));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 941,
        "startLineNumber" : 159,
        "startColumnNumber" : 4,
        "endLineNumber" : 191,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * <p> 获取该类的所有属性列表 </p>\n * @param clazz 反射类\n * @return\n */\npublic static List<Field> getFieldList(Class<?> clazz){\n  if (null == clazz) {\n    return null;\n  }\n  List<Field> fieldList=new LinkedList<>();\n  Field[] fields=clazz.getDeclaredFields();\n  for (  Field field : fields) {\n    if (Modifier.isStatic(field.getModifiers())) {\n      continue;\n    }\n    if (Modifier.isTransient(field.getModifiers())) {\n      continue;\n    }\n    fieldList.add(field);\n  }\n  Class<?> superClass=clazz.getSuperclass();\n  if (superClass.equals(Object.class)) {\n    return fieldList;\n  }\n  return excludeOverrideSuperField(fieldList,getFieldList(superClass));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 103,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 179,
        "startColumnNumber" : 16,
        "endLineNumber" : 179,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Modifier.isTransient(field.getModifiers())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 175,
    "startColumnNumber" : 34,
    "endLineNumber" : 175,
    "endColumnNumber" : 54
  }, {
    "charLength" : 20,
    "startLineNumber" : 179,
    "startColumnNumber" : 37,
    "endLineNumber" : 179,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}