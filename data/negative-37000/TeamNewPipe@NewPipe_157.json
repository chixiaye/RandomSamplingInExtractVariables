{
  "id" : 157,
  "expression" : "new AudioStream(\"\",MediaFormat.WEBMA,192)",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "d7574973e97fa7a3a21aa59967311f6091941830",
  "filePath" : "/app/src/test/java/org/schabi/newpipe/util/ListHelperTest.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new AudioStream(\"\",MediaFormat.WEBMA,192)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 48,
      "startLineNumber" : 181,
      "startColumnNumber" : 16,
      "endLineNumber" : 181,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 8,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 179,
        "startColumnNumber" : 37,
        "endLineNumber" : 181,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Arrays.asList(new AudioStream(\"\",MediaFormat.M4A,128),new AudioStream(\"\",MediaFormat.WEBMA,192))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 179,
        "startColumnNumber" : 26,
        "endLineNumber" : 181,
        "endColumnNumber" : 65
      },
      "nodeContext" : "testList=Arrays.asList(new AudioStream(\"\",MediaFormat.M4A,128),new AudioStream(\"\",MediaFormat.WEBMA,192))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 179,
        "startColumnNumber" : 8,
        "endLineNumber" : 181,
        "endColumnNumber" : 66
      },
      "nodeContext" : "List<AudioStream> testList=Arrays.asList(new AudioStream(\"\",MediaFormat.M4A,128),new AudioStream(\"\",MediaFormat.WEBMA,192));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2181,
        "startLineNumber" : 173,
        "startColumnNumber" : 62,
        "endLineNumber" : 213,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<AudioStream> testList=Arrays.asList(new AudioStream(\"\",MediaFormat.M4A,128),new AudioStream(\"\",MediaFormat.WEBMA,192));\n  AudioStream stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.WEBMA,stream.getFormat());\n  testList=new ArrayList<>(Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192)));\n  stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.M4A,stream.getFormat());\n  testList.add(new AudioStream(\"\",MediaFormat.WEBMA,192));\n  stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.M4A,stream.getFormat());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 195,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2249,
        "startLineNumber" : 172,
        "startColumnNumber" : 4,
        "endLineNumber" : 213,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void getHighestQualityAudioFormatPreferredAbsent(){\n  List<AudioStream> testList=Arrays.asList(new AudioStream(\"\",MediaFormat.M4A,128),new AudioStream(\"\",MediaFormat.WEBMA,192));\n  AudioStream stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.WEBMA,stream.getFormat());\n  testList=new ArrayList<>(Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192)));\n  stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.M4A,stream.getFormat());\n  testList.add(new AudioStream(\"\",MediaFormat.WEBMA,192));\n  stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.M4A,stream.getFormat());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 201,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 179,
        "startColumnNumber" : 37,
        "endLineNumber" : 181,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Arrays.asList(new AudioStream(\"\",MediaFormat.M4A,128),new AudioStream(\"\",MediaFormat.WEBMA,192))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "org.schabi.newpipe.util.AudioStream"
  }, {
    "nodeContext" : "new AudioStream(\"\",MediaFormat.WEBMA,192)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 48,
      "startLineNumber" : 194,
      "startColumnNumber" : 16,
      "endLineNumber" : 194,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 8,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 476,
        "startLineNumber" : 193,
        "startColumnNumber" : 35,
        "endLineNumber" : 200,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 59,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 493,
        "startLineNumber" : 193,
        "startColumnNumber" : 19,
        "endLineNumber" : 200,
        "endColumnNumber" : 66
      },
      "nodeContext" : "new ArrayList<>(Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192)))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 63,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 504,
        "startLineNumber" : 193,
        "startColumnNumber" : 8,
        "endLineNumber" : 200,
        "endColumnNumber" : 66
      },
      "nodeContext" : "testList=new ArrayList<>(Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192)))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 65,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 505,
        "startLineNumber" : 193,
        "startColumnNumber" : 8,
        "endLineNumber" : 200,
        "endColumnNumber" : 67
      },
      "nodeContext" : "testList=new ArrayList<>(Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 66,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2181,
        "startLineNumber" : 173,
        "startColumnNumber" : 62,
        "endLineNumber" : 213,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<AudioStream> testList=Arrays.asList(new AudioStream(\"\",MediaFormat.M4A,128),new AudioStream(\"\",MediaFormat.WEBMA,192));\n  AudioStream stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.WEBMA,stream.getFormat());\n  testList=new ArrayList<>(Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192)));\n  stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.M4A,stream.getFormat());\n  testList.add(new AudioStream(\"\",MediaFormat.WEBMA,192));\n  stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.M4A,stream.getFormat());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 195,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2249,
        "startLineNumber" : 172,
        "startColumnNumber" : 4,
        "endLineNumber" : 213,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void getHighestQualityAudioFormatPreferredAbsent(){\n  List<AudioStream> testList=Arrays.asList(new AudioStream(\"\",MediaFormat.M4A,128),new AudioStream(\"\",MediaFormat.WEBMA,192));\n  AudioStream stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.WEBMA,stream.getFormat());\n  testList=new ArrayList<>(Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192)));\n  stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.M4A,stream.getFormat());\n  testList.add(new AudioStream(\"\",MediaFormat.WEBMA,192));\n  stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.M4A,stream.getFormat());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 201,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 476,
        "startLineNumber" : 193,
        "startColumnNumber" : 35,
        "endLineNumber" : 200,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 59,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "org.schabi.newpipe.util.AudioStream"
  }, {
    "nodeContext" : "new AudioStream(\"\",MediaFormat.WEBMA,192)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 48,
      "startLineNumber" : 196,
      "startColumnNumber" : 16,
      "endLineNumber" : 196,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 8,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 476,
        "startLineNumber" : 193,
        "startColumnNumber" : 35,
        "endLineNumber" : 200,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 59,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 493,
        "startLineNumber" : 193,
        "startColumnNumber" : 19,
        "endLineNumber" : 200,
        "endColumnNumber" : 66
      },
      "nodeContext" : "new ArrayList<>(Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192)))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 63,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 504,
        "startLineNumber" : 193,
        "startColumnNumber" : 8,
        "endLineNumber" : 200,
        "endColumnNumber" : 66
      },
      "nodeContext" : "testList=new ArrayList<>(Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192)))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 65,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 505,
        "startLineNumber" : 193,
        "startColumnNumber" : 8,
        "endLineNumber" : 200,
        "endColumnNumber" : 67
      },
      "nodeContext" : "testList=new ArrayList<>(Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 66,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2181,
        "startLineNumber" : 173,
        "startColumnNumber" : 62,
        "endLineNumber" : 213,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<AudioStream> testList=Arrays.asList(new AudioStream(\"\",MediaFormat.M4A,128),new AudioStream(\"\",MediaFormat.WEBMA,192));\n  AudioStream stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.WEBMA,stream.getFormat());\n  testList=new ArrayList<>(Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192)));\n  stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.M4A,stream.getFormat());\n  testList.add(new AudioStream(\"\",MediaFormat.WEBMA,192));\n  stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.M4A,stream.getFormat());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 195,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2249,
        "startLineNumber" : 172,
        "startColumnNumber" : 4,
        "endLineNumber" : 213,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void getHighestQualityAudioFormatPreferredAbsent(){\n  List<AudioStream> testList=Arrays.asList(new AudioStream(\"\",MediaFormat.M4A,128),new AudioStream(\"\",MediaFormat.WEBMA,192));\n  AudioStream stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.WEBMA,stream.getFormat());\n  testList=new ArrayList<>(Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192)));\n  stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.M4A,stream.getFormat());\n  testList.add(new AudioStream(\"\",MediaFormat.WEBMA,192));\n  stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.M4A,stream.getFormat());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 201,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 476,
        "startLineNumber" : 193,
        "startColumnNumber" : 35,
        "endLineNumber" : 200,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 59,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "org.schabi.newpipe.util.AudioStream"
  }, {
    "nodeContext" : "new AudioStream(\"\",MediaFormat.WEBMA,192)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 48,
      "startLineNumber" : 198,
      "startColumnNumber" : 16,
      "endLineNumber" : 198,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 8,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 476,
        "startLineNumber" : 193,
        "startColumnNumber" : 35,
        "endLineNumber" : 200,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 59,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 493,
        "startLineNumber" : 193,
        "startColumnNumber" : 19,
        "endLineNumber" : 200,
        "endColumnNumber" : 66
      },
      "nodeContext" : "new ArrayList<>(Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192)))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 63,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 504,
        "startLineNumber" : 193,
        "startColumnNumber" : 8,
        "endLineNumber" : 200,
        "endColumnNumber" : 66
      },
      "nodeContext" : "testList=new ArrayList<>(Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192)))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 65,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 505,
        "startLineNumber" : 193,
        "startColumnNumber" : 8,
        "endLineNumber" : 200,
        "endColumnNumber" : 67
      },
      "nodeContext" : "testList=new ArrayList<>(Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 66,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2181,
        "startLineNumber" : 173,
        "startColumnNumber" : 62,
        "endLineNumber" : 213,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<AudioStream> testList=Arrays.asList(new AudioStream(\"\",MediaFormat.M4A,128),new AudioStream(\"\",MediaFormat.WEBMA,192));\n  AudioStream stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.WEBMA,stream.getFormat());\n  testList=new ArrayList<>(Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192)));\n  stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.M4A,stream.getFormat());\n  testList.add(new AudioStream(\"\",MediaFormat.WEBMA,192));\n  stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.M4A,stream.getFormat());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 195,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2249,
        "startLineNumber" : 172,
        "startColumnNumber" : 4,
        "endLineNumber" : 213,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void getHighestQualityAudioFormatPreferredAbsent(){\n  List<AudioStream> testList=Arrays.asList(new AudioStream(\"\",MediaFormat.M4A,128),new AudioStream(\"\",MediaFormat.WEBMA,192));\n  AudioStream stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.WEBMA,stream.getFormat());\n  testList=new ArrayList<>(Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192)));\n  stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.M4A,stream.getFormat());\n  testList.add(new AudioStream(\"\",MediaFormat.WEBMA,192));\n  stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.M4A,stream.getFormat());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 201,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 476,
        "startLineNumber" : 193,
        "startColumnNumber" : 35,
        "endLineNumber" : 200,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 59,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "org.schabi.newpipe.util.AudioStream"
  }, {
    "nodeContext" : "new AudioStream(\"\",MediaFormat.WEBMA,192)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 48,
      "startLineNumber" : 200,
      "startColumnNumber" : 16,
      "endLineNumber" : 200,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 8,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 476,
        "startLineNumber" : 193,
        "startColumnNumber" : 35,
        "endLineNumber" : 200,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 59,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 493,
        "startLineNumber" : 193,
        "startColumnNumber" : 19,
        "endLineNumber" : 200,
        "endColumnNumber" : 66
      },
      "nodeContext" : "new ArrayList<>(Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192)))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 63,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 504,
        "startLineNumber" : 193,
        "startColumnNumber" : 8,
        "endLineNumber" : 200,
        "endColumnNumber" : 66
      },
      "nodeContext" : "testList=new ArrayList<>(Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192)))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 65,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 505,
        "startLineNumber" : 193,
        "startColumnNumber" : 8,
        "endLineNumber" : 200,
        "endColumnNumber" : 67
      },
      "nodeContext" : "testList=new ArrayList<>(Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 66,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2181,
        "startLineNumber" : 173,
        "startColumnNumber" : 62,
        "endLineNumber" : 213,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<AudioStream> testList=Arrays.asList(new AudioStream(\"\",MediaFormat.M4A,128),new AudioStream(\"\",MediaFormat.WEBMA,192));\n  AudioStream stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.WEBMA,stream.getFormat());\n  testList=new ArrayList<>(Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192)));\n  stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.M4A,stream.getFormat());\n  testList.add(new AudioStream(\"\",MediaFormat.WEBMA,192));\n  stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.M4A,stream.getFormat());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 195,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2249,
        "startLineNumber" : 172,
        "startColumnNumber" : 4,
        "endLineNumber" : 213,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void getHighestQualityAudioFormatPreferredAbsent(){\n  List<AudioStream> testList=Arrays.asList(new AudioStream(\"\",MediaFormat.M4A,128),new AudioStream(\"\",MediaFormat.WEBMA,192));\n  AudioStream stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.WEBMA,stream.getFormat());\n  testList=new ArrayList<>(Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192)));\n  stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.M4A,stream.getFormat());\n  testList.add(new AudioStream(\"\",MediaFormat.WEBMA,192));\n  stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.M4A,stream.getFormat());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 201,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 476,
        "startLineNumber" : 193,
        "startColumnNumber" : 35,
        "endLineNumber" : 200,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 59,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "org.schabi.newpipe.util.AudioStream"
  }, {
    "nodeContext" : "new AudioStream(\"\",MediaFormat.WEBMA,192)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 48,
      "startLineNumber" : 209,
      "startColumnNumber" : 21,
      "endLineNumber" : 209,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 8,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 209,
        "startColumnNumber" : 8,
        "endLineNumber" : 209,
        "endColumnNumber" : 70
      },
      "nodeContext" : "testList.add(new AudioStream(\"\",MediaFormat.WEBMA,192))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 209,
        "startColumnNumber" : 8,
        "endLineNumber" : 209,
        "endColumnNumber" : 71
      },
      "nodeContext" : "testList.add(new AudioStream(\"\",MediaFormat.WEBMA,192));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2181,
        "startLineNumber" : 173,
        "startColumnNumber" : 62,
        "endLineNumber" : 213,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<AudioStream> testList=Arrays.asList(new AudioStream(\"\",MediaFormat.M4A,128),new AudioStream(\"\",MediaFormat.WEBMA,192));\n  AudioStream stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.WEBMA,stream.getFormat());\n  testList=new ArrayList<>(Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192)));\n  stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.M4A,stream.getFormat());\n  testList.add(new AudioStream(\"\",MediaFormat.WEBMA,192));\n  stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.M4A,stream.getFormat());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 195,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2249,
        "startLineNumber" : 172,
        "startColumnNumber" : 4,
        "endLineNumber" : 213,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void getHighestQualityAudioFormatPreferredAbsent(){\n  List<AudioStream> testList=Arrays.asList(new AudioStream(\"\",MediaFormat.M4A,128),new AudioStream(\"\",MediaFormat.WEBMA,192));\n  AudioStream stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.WEBMA,stream.getFormat());\n  testList=new ArrayList<>(Arrays.asList(new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192),new AudioStream(\"\",MediaFormat.M4A,192),new AudioStream(\"\",MediaFormat.WEBMA,192)));\n  stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.M4A,stream.getFormat());\n  testList.add(new AudioStream(\"\",MediaFormat.WEBMA,192));\n  stream=testList.get(ListHelper.getHighestQualityAudioIndex(MediaFormat.MP3,testList));\n  assertEquals(192,stream.average_bitrate);\n  assertEquals(MediaFormat.M4A,stream.getFormat());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 201,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 209,
        "startColumnNumber" : 8,
        "endLineNumber" : 209,
        "endColumnNumber" : 71
      },
      "nodeContext" : "testList.add(new AudioStream(\"\",MediaFormat.WEBMA,192));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "org.schabi.newpipe.util.AudioStream"
  } ],
  "positionList" : [ {
    "charLength" : 48,
    "startLineNumber" : 181,
    "startColumnNumber" : 16,
    "endLineNumber" : 181,
    "endColumnNumber" : 64
  }, {
    "charLength" : 48,
    "startLineNumber" : 194,
    "startColumnNumber" : 16,
    "endLineNumber" : 194,
    "endColumnNumber" : 64
  }, {
    "charLength" : 48,
    "startLineNumber" : 196,
    "startColumnNumber" : 16,
    "endLineNumber" : 196,
    "endColumnNumber" : 64
  }, {
    "charLength" : 48,
    "startLineNumber" : 198,
    "startColumnNumber" : 16,
    "endLineNumber" : 198,
    "endColumnNumber" : 64
  }, {
    "charLength" : 48,
    "startLineNumber" : 200,
    "startColumnNumber" : 16,
    "endLineNumber" : 200,
    "endColumnNumber" : 64
  }, {
    "charLength" : 48,
    "startLineNumber" : 209,
    "startColumnNumber" : 21,
    "endLineNumber" : 209,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 0
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 0
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 0
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 0
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 0
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 0
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 2
  } ]
}