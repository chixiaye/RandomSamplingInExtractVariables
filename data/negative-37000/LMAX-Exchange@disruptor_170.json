{
  "id" : 170,
  "expression" : "ExceptionHandler.class",
  "projectName" : "LMAX-Exchange@disruptor",
  "commitID" : "6d8500d39ac15cc2fdbc3dbf2e3a97fbe425b8fa",
  "filePath" : "/src/test/java/com/lmax/disruptor/BatchEventProcessorTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ExceptionHandler.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 119,
      "startColumnNumber" : 63,
      "endLineNumber" : 119,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 119,
        "startColumnNumber" : 50,
        "endLineNumber" : 119,
        "endColumnNumber" : 86
      },
      "nodeContext" : "context.mock(ExceptionHandler.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 119,
        "startColumnNumber" : 31,
        "endLineNumber" : 119,
        "endColumnNumber" : 86
      },
      "nodeContext" : "exceptionHandler=context.mock(ExceptionHandler.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 119,
        "endColumnNumber" : 87
      },
      "nodeContext" : "final ExceptionHandler exceptionHandler=context.mock(ExceptionHandler.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1323,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 157,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Exception ex=new Exception();\n  final ExceptionHandler exceptionHandler=context.mock(ExceptionHandler.class);\n  batchEventProcessor.setExceptionHandler(exceptionHandler);\n  context.checking(new Expectations(){\n{\n      oneOf(eventHandler).onEvent(ringBuffer.getPreallocated(0),0L,true);\n      inSequence(lifecycleSequence);\n      will(new Action(){\n        @Override public Object invoke(        final Invocation invocation) throws Throwable {\n          throw ex;\n        }\n        @Override public void describeTo(        final Description description){\n          description.appendText(\"Throws exception\");\n        }\n      }\n);\n      oneOf(exceptionHandler).handleEventException(ex,0L,ringBuffer.getPreallocated(0));\n      inSequence(lifecycleSequence);\n      will(countDown(latch));\n    }\n  }\n);\n  Thread thread=new Thread(batchEventProcessor);\n  thread.start();\n  ringBuffer.publish(ringBuffer.next());\n  latch.await();\n  batchEventProcessor.halt();\n  thread.join();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1422,
        "startLineNumber" : 114,
        "startColumnNumber" : 4,
        "endLineNumber" : 157,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldCallExceptionHandlerOnUncaughtException() throws Exception {\n  final Exception ex=new Exception();\n  final ExceptionHandler exceptionHandler=context.mock(ExceptionHandler.class);\n  batchEventProcessor.setExceptionHandler(exceptionHandler);\n  context.checking(new Expectations(){\n{\n      oneOf(eventHandler).onEvent(ringBuffer.getPreallocated(0),0L,true);\n      inSequence(lifecycleSequence);\n      will(new Action(){\n        @Override public Object invoke(        final Invocation invocation) throws Throwable {\n          throw ex;\n        }\n        @Override public void describeTo(        final Description description){\n          description.appendText(\"Throws exception\");\n        }\n      }\n);\n      oneOf(exceptionHandler).handleEventException(ex,0L,ringBuffer.getPreallocated(0));\n      inSequence(lifecycleSequence);\n      will(countDown(latch));\n    }\n  }\n);\n  Thread thread=new Thread(batchEventProcessor);\n  thread.start();\n  ringBuffer.publish(ringBuffer.next());\n  latch.await();\n  batchEventProcessor.halt();\n  thread.join();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 156,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 119,
        "endColumnNumber" : 87
      },
      "nodeContext" : "final ExceptionHandler exceptionHandler=context.mock(ExceptionHandler.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<com.lmax.disruptor.ExceptionHandler>"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 119,
    "startColumnNumber" : 63,
    "endLineNumber" : 119,
    "endColumnNumber" : 85
  } ],
  "layoutRelationDataList" : [ ]
}