{
  "id" : 66,
  "expression" : "p - ((p - 1) >>> logN)",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/math/FastFourierTransform.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "p - ((p - 1) >>> logN)",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 49,
      "startColumnNumber" : 20,
      "endLineNumber" : 49,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 9,
    "astHeight" : 6,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 49,
        "startColumnNumber" : 9,
        "endLineNumber" : 49,
        "endColumnNumber" : 42
      },
      "nodeContext" : "nInverse=p - ((p - 1) >>> logN)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 43
      },
      "nodeContext" : "long nInverse=p - ((p - 1) >>> logN);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 925,
        "startLineNumber" : 35,
        "startColumnNumber" : 52,
        "endLineNumber" : 59,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int i=0; i < x.length; i++)   if (x[i] < 0)   x[i]+=p;\n  for (int i=0; i < y.length; i++)   if (y[i] < 0)   y[i]+=p;\n  int zLength=x.length + y.length - 1;\n  int logN=32 - Integer.numberOfLeadingZeros(zLength - 1);\n  long[] xx=transform(x,logN,false);\n  long[] yy=transform(y,logN,false);\n  long[] zz=new long[1 << logN];\n  for (int i=0; i < zz.length; i++)   zz[i]=mult(xx[i],yy[i]);\n  long[] nZ=transform(zz,logN,true);\n  long[] z=new long[zLength];\n  long nInverse=p - ((p - 1) >>> logN);\n  for (int i=0; i < z.length; i++) {\n    z[i]=mult(nInverse,nZ[i]);\n    if (z[i] >= Integer.MAX_VALUE)     z[i]-=p;\n  }\n  return z;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 213,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 975,
        "startLineNumber" : 35,
        "startColumnNumber" : 2,
        "endLineNumber" : 59,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static long[] multiply(long[] x,long[] y){\n  for (int i=0; i < x.length; i++)   if (x[i] < 0)   x[i]+=p;\n  for (int i=0; i < y.length; i++)   if (y[i] < 0)   y[i]+=p;\n  int zLength=x.length + y.length - 1;\n  int logN=32 - Integer.numberOfLeadingZeros(zLength - 1);\n  long[] xx=transform(x,logN,false);\n  long[] yy=transform(y,logN,false);\n  long[] zz=new long[1 << logN];\n  for (int i=0; i < zz.length; i++)   zz[i]=mult(xx[i],yy[i]);\n  long[] nZ=transform(zz,logN,true);\n  long[] z=new long[zLength];\n  long nInverse=p - ((p - 1) >>> logN);\n  for (int i=0; i < z.length; i++) {\n    z[i]=mult(nInverse,nZ[i]);\n    if (z[i] >= Integer.MAX_VALUE)     z[i]-=p;\n  }\n  return z;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 230,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 43
      },
      "nodeContext" : "long nInverse=p - ((p - 1) >>> logN);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 8
    },
    "tokenLength" : 7,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 49,
    "startColumnNumber" : 20,
    "endLineNumber" : 49,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}