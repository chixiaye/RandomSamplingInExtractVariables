{
  "id" : 364,
  "expression" : "policies2",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-broker/src/test/java/org/apache/pulsar/broker/lookup/http/HttpTopicLookupv2Test.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "policies2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 186,
      "startColumnNumber" : 8,
      "endLineNumber" : 186,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 186,
        "endColumnNumber" : 38
      },
      "nodeContext" : "policies2.replication_clusters",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 186,
        "endColumnNumber" : 80
      },
      "nodeContext" : "policies2.replication_clusters=Sets.newHashSet(\"invalid-localCluster\")",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 186,
        "endColumnNumber" : 81
      },
      "nodeContext" : "policies2.replication_clusters=Sets.newHashSet(\"invalid-localCluster\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2008,
        "startLineNumber" : 176,
        "startColumnNumber" : 78,
        "endLineNumber" : 216,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String property=\"my-prop\";\n  final String cluster=\"global\";\n  final String ns1=\"ns1\";\n  final String ns2=\"ns2\";\n  Policies policies1=new Policies();\n  doReturn(Optional.of(policies1)).when(policiesCache).get(AdminResource.path(POLICIES,property,cluster,ns1));\n  Policies policies2=new Policies();\n  policies2.replication_clusters=Sets.newHashSet(\"invalid-localCluster\");\n  doReturn(Optional.of(policies2)).when(policiesCache).get(AdminResource.path(POLICIES,property,cluster,ns2));\n  TopicLookup destLookup=spy(new TopicLookup());\n  doReturn(false).when(destLookup).isRequestHttps();\n  destLookup.setPulsar(pulsar);\n  doReturn(\"null\").when(destLookup).clientAppId();\n  Field uriField=PulsarWebResource.class.getDeclaredField(\"uri\");\n  uriField.setAccessible(true);\n  UriInfo uriInfo=mock(UriInfo.class);\n  uriField.set(destLookup,uriInfo);\n  doReturn(false).when(config).isAuthorizationEnabled();\n  AsyncResponse asyncResponse=mock(AsyncResponse.class);\n  destLookup.lookupTopicAsync(TopicDomain.persistent.value(),property,cluster,ns1,\"empty-cluster\",false,asyncResponse,null);\n  ArgumentCaptor<Throwable> arg=ArgumentCaptor.forClass(Throwable.class);\n  verify(asyncResponse).resume(arg.capture());\n  assertEquals(arg.getValue().getClass(),RestException.class);\n  AsyncResponse asyncResponse2=mock(AsyncResponse.class);\n  destLookup.lookupTopicAsync(TopicDomain.persistent.value(),property,cluster,ns2,\"invalid-localCluster\",false,asyncResponse2,null);\n  ArgumentCaptor<Throwable> arg2=ArgumentCaptor.forClass(Throwable.class);\n  verify(asyncResponse2).resume(arg2.capture());\n  assertEquals(arg2.getValue().getClass(),RestException.class);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 286,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2092,
        "startLineNumber" : 175,
        "startColumnNumber" : 4,
        "endLineNumber" : 216,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testValidateReplicationSettingsOnNamespace() throws Exception {\n  final String property=\"my-prop\";\n  final String cluster=\"global\";\n  final String ns1=\"ns1\";\n  final String ns2=\"ns2\";\n  Policies policies1=new Policies();\n  doReturn(Optional.of(policies1)).when(policiesCache).get(AdminResource.path(POLICIES,property,cluster,ns1));\n  Policies policies2=new Policies();\n  policies2.replication_clusters=Sets.newHashSet(\"invalid-localCluster\");\n  doReturn(Optional.of(policies2)).when(policiesCache).get(AdminResource.path(POLICIES,property,cluster,ns2));\n  TopicLookup destLookup=spy(new TopicLookup());\n  doReturn(false).when(destLookup).isRequestHttps();\n  destLookup.setPulsar(pulsar);\n  doReturn(\"null\").when(destLookup).clientAppId();\n  Field uriField=PulsarWebResource.class.getDeclaredField(\"uri\");\n  uriField.setAccessible(true);\n  UriInfo uriInfo=mock(UriInfo.class);\n  uriField.set(destLookup,uriInfo);\n  doReturn(false).when(config).isAuthorizationEnabled();\n  AsyncResponse asyncResponse=mock(AsyncResponse.class);\n  destLookup.lookupTopicAsync(TopicDomain.persistent.value(),property,cluster,ns1,\"empty-cluster\",false,asyncResponse,null);\n  ArgumentCaptor<Throwable> arg=ArgumentCaptor.forClass(Throwable.class);\n  verify(asyncResponse).resume(arg.capture());\n  assertEquals(arg.getValue().getClass(),RestException.class);\n  AsyncResponse asyncResponse2=mock(AsyncResponse.class);\n  destLookup.lookupTopicAsync(TopicDomain.persistent.value(),property,cluster,ns2,\"invalid-localCluster\",false,asyncResponse2,null);\n  ArgumentCaptor<Throwable> arg2=ArgumentCaptor.forClass(Throwable.class);\n  verify(asyncResponse2).resume(arg2.capture());\n  assertEquals(arg2.getValue().getClass(),RestException.class);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 294,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 186,
        "endColumnNumber" : 81
      },
      "nodeContext" : "policies2.replication_clusters=Sets.newHashSet(\"invalid-localCluster\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.common.policies.data.Policies"
  }, {
    "nodeContext" : "policies2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 187,
      "startColumnNumber" : 29,
      "endLineNumber" : 187,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 187,
        "startColumnNumber" : 17,
        "endLineNumber" : 187,
        "endColumnNumber" : 39
      },
      "nodeContext" : "Optional.of(policies2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 187,
        "startColumnNumber" : 8,
        "endLineNumber" : 187,
        "endColumnNumber" : 40
      },
      "nodeContext" : "doReturn(Optional.of(policies2))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 187,
        "startColumnNumber" : 8,
        "endLineNumber" : 187,
        "endColumnNumber" : 60
      },
      "nodeContext" : "doReturn(Optional.of(policies2)).when(policiesCache)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 187,
        "startColumnNumber" : 8,
        "endLineNumber" : 188,
        "endColumnNumber" : 74
      },
      "nodeContext" : "doReturn(Optional.of(policies2)).when(policiesCache).get(AdminResource.path(POLICIES,property,cluster,ns2))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 187,
        "startColumnNumber" : 8,
        "endLineNumber" : 188,
        "endColumnNumber" : 75
      },
      "nodeContext" : "doReturn(Optional.of(policies2)).when(policiesCache).get(AdminResource.path(POLICIES,property,cluster,ns2));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2008,
        "startLineNumber" : 176,
        "startColumnNumber" : 78,
        "endLineNumber" : 216,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String property=\"my-prop\";\n  final String cluster=\"global\";\n  final String ns1=\"ns1\";\n  final String ns2=\"ns2\";\n  Policies policies1=new Policies();\n  doReturn(Optional.of(policies1)).when(policiesCache).get(AdminResource.path(POLICIES,property,cluster,ns1));\n  Policies policies2=new Policies();\n  policies2.replication_clusters=Sets.newHashSet(\"invalid-localCluster\");\n  doReturn(Optional.of(policies2)).when(policiesCache).get(AdminResource.path(POLICIES,property,cluster,ns2));\n  TopicLookup destLookup=spy(new TopicLookup());\n  doReturn(false).when(destLookup).isRequestHttps();\n  destLookup.setPulsar(pulsar);\n  doReturn(\"null\").when(destLookup).clientAppId();\n  Field uriField=PulsarWebResource.class.getDeclaredField(\"uri\");\n  uriField.setAccessible(true);\n  UriInfo uriInfo=mock(UriInfo.class);\n  uriField.set(destLookup,uriInfo);\n  doReturn(false).when(config).isAuthorizationEnabled();\n  AsyncResponse asyncResponse=mock(AsyncResponse.class);\n  destLookup.lookupTopicAsync(TopicDomain.persistent.value(),property,cluster,ns1,\"empty-cluster\",false,asyncResponse,null);\n  ArgumentCaptor<Throwable> arg=ArgumentCaptor.forClass(Throwable.class);\n  verify(asyncResponse).resume(arg.capture());\n  assertEquals(arg.getValue().getClass(),RestException.class);\n  AsyncResponse asyncResponse2=mock(AsyncResponse.class);\n  destLookup.lookupTopicAsync(TopicDomain.persistent.value(),property,cluster,ns2,\"invalid-localCluster\",false,asyncResponse2,null);\n  ArgumentCaptor<Throwable> arg2=ArgumentCaptor.forClass(Throwable.class);\n  verify(asyncResponse2).resume(arg2.capture());\n  assertEquals(arg2.getValue().getClass(),RestException.class);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 286,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2092,
        "startLineNumber" : 175,
        "startColumnNumber" : 4,
        "endLineNumber" : 216,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testValidateReplicationSettingsOnNamespace() throws Exception {\n  final String property=\"my-prop\";\n  final String cluster=\"global\";\n  final String ns1=\"ns1\";\n  final String ns2=\"ns2\";\n  Policies policies1=new Policies();\n  doReturn(Optional.of(policies1)).when(policiesCache).get(AdminResource.path(POLICIES,property,cluster,ns1));\n  Policies policies2=new Policies();\n  policies2.replication_clusters=Sets.newHashSet(\"invalid-localCluster\");\n  doReturn(Optional.of(policies2)).when(policiesCache).get(AdminResource.path(POLICIES,property,cluster,ns2));\n  TopicLookup destLookup=spy(new TopicLookup());\n  doReturn(false).when(destLookup).isRequestHttps();\n  destLookup.setPulsar(pulsar);\n  doReturn(\"null\").when(destLookup).clientAppId();\n  Field uriField=PulsarWebResource.class.getDeclaredField(\"uri\");\n  uriField.setAccessible(true);\n  UriInfo uriInfo=mock(UriInfo.class);\n  uriField.set(destLookup,uriInfo);\n  doReturn(false).when(config).isAuthorizationEnabled();\n  AsyncResponse asyncResponse=mock(AsyncResponse.class);\n  destLookup.lookupTopicAsync(TopicDomain.persistent.value(),property,cluster,ns1,\"empty-cluster\",false,asyncResponse,null);\n  ArgumentCaptor<Throwable> arg=ArgumentCaptor.forClass(Throwable.class);\n  verify(asyncResponse).resume(arg.capture());\n  assertEquals(arg.getValue().getClass(),RestException.class);\n  AsyncResponse asyncResponse2=mock(AsyncResponse.class);\n  destLookup.lookupTopicAsync(TopicDomain.persistent.value(),property,cluster,ns2,\"invalid-localCluster\",false,asyncResponse2,null);\n  ArgumentCaptor<Throwable> arg2=ArgumentCaptor.forClass(Throwable.class);\n  verify(asyncResponse2).resume(arg2.capture());\n  assertEquals(arg2.getValue().getClass(),RestException.class);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 294,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 187,
        "startColumnNumber" : 8,
        "endLineNumber" : 187,
        "endColumnNumber" : 60
      },
      "nodeContext" : "doReturn(Optional.of(policies2)).when(policiesCache)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.common.policies.data.Policies"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 186,
    "startColumnNumber" : 8,
    "endLineNumber" : 186,
    "endColumnNumber" : 17
  }, {
    "charLength" : 9,
    "startLineNumber" : 187,
    "startColumnNumber" : 29,
    "endLineNumber" : 187,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}