{
  "id" : 354,
  "expression" : "\"Complete generating proxy metrics\"",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-websocket/src/main/java/org/apache/pulsar/websocket/stats/ProxyStats.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Complete generating proxy metrics\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 120,
      "startColumnNumber" : 22,
      "endLineNumber" : 120,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 120,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 58
      },
      "nodeContext" : "log.debug(\"Complete generating proxy metrics\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 120,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 59
      },
      "nodeContext" : "log.debug(\"Complete generating proxy metrics\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 119,
        "startColumnNumber" : 34,
        "endLineNumber" : 121,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  log.debug(\"Complete generating proxy metrics\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 121,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (log.isDebugEnabled()) {\n  log.debug(\"Complete generating proxy metrics\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2546,
        "startLineNumber" : 64,
        "startColumnNumber" : 40,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (log.isDebugEnabled()) {\n    log.debug(\"Start generating proxy metrics\");\n  }\n  topicStats.clear();\n  service.getProducers().forEach((topic,handlers) -> {\n    if (log.isDebugEnabled()) {\n      log.debug(\"Collect stats from {} producer handlers for topic {}\",handlers.size(),topic);\n    }\n    final String namespaceName=TopicName.get(topic).getNamespace();\n    ProxyNamespaceStats nsStat=topicStats.computeIfAbsent(namespaceName,ns -> new ProxyNamespaceStats());\n    handlers.forEach(handler -> {\n      nsStat.numberOfMsgPublished+=handler.getAndResetNumMsgsSent();\n      nsStat.numberOfBytesPublished+=handler.getAndResetNumBytesSent();\n      nsStat.numberOfPublishFailure+=handler.getAndResetNumMsgsFailed();\n      handler.getPublishLatencyStatsUSec().refresh();\n      nsStat.publishMsgLatency.addAll(handler.getPublishLatencyStatsUSec());\n    }\n);\n  }\n);\n  service.getConsumers().forEach((topic,handlers) -> {\n    if (log.isDebugEnabled()) {\n      log.debug(\"Collect stats from {} consumer handlers for topic {}\",handlers.size(),topic);\n    }\n    final String namespaceName=TopicName.get(topic).getNamespace();\n    ProxyNamespaceStats nsStat=topicStats.computeIfAbsent(namespaceName,ns -> new ProxyNamespaceStats());\n    handlers.forEach(handler -> {\n      nsStat.numberOfMsgDelivered+=handler.getAndResetNumMsgsAcked();\n      nsStat.numberOfBytesDelivered+=handler.getAndResetNumBytesDelivered();\n      nsStat.numberOfMsgsAcked+=handler.getAndResetNumMsgsAcked();\n    }\n);\n  }\n);\n  tempMetricsCollection.clear();\n  topicStats.forEach((namespace,stats) -> {\n    if (log.isDebugEnabled()) {\n      log.debug(\"Add ns-stats of namespace {} to metrics\",namespace);\n    }\n    tempMetricsCollection.add(stats.add(namespace));\n  }\n);\n  if (log.isDebugEnabled()) {\n    log.debug(\"Add jvm-stats to metrics\");\n  }\n  tempMetricsCollection.add(jvmMetrics.generate());\n  List<Metrics> tempRef=metricsCollection;\n  metricsCollection=tempMetricsCollection;\n  tempMetricsCollection=tempRef;\n  if (log.isDebugEnabled()) {\n    log.debug(\"Complete generating proxy metrics\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 277,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2701,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * generates stats-metrics of proxy service and updates metricsCollection cache with latest stats.\n */\npublic synchronized void generate(){\n  if (log.isDebugEnabled()) {\n    log.debug(\"Start generating proxy metrics\");\n  }\n  topicStats.clear();\n  service.getProducers().forEach((topic,handlers) -> {\n    if (log.isDebugEnabled()) {\n      log.debug(\"Collect stats from {} producer handlers for topic {}\",handlers.size(),topic);\n    }\n    final String namespaceName=TopicName.get(topic).getNamespace();\n    ProxyNamespaceStats nsStat=topicStats.computeIfAbsent(namespaceName,ns -> new ProxyNamespaceStats());\n    handlers.forEach(handler -> {\n      nsStat.numberOfMsgPublished+=handler.getAndResetNumMsgsSent();\n      nsStat.numberOfBytesPublished+=handler.getAndResetNumBytesSent();\n      nsStat.numberOfPublishFailure+=handler.getAndResetNumMsgsFailed();\n      handler.getPublishLatencyStatsUSec().refresh();\n      nsStat.publishMsgLatency.addAll(handler.getPublishLatencyStatsUSec());\n    }\n);\n  }\n);\n  service.getConsumers().forEach((topic,handlers) -> {\n    if (log.isDebugEnabled()) {\n      log.debug(\"Collect stats from {} consumer handlers for topic {}\",handlers.size(),topic);\n    }\n    final String namespaceName=TopicName.get(topic).getNamespace();\n    ProxyNamespaceStats nsStat=topicStats.computeIfAbsent(namespaceName,ns -> new ProxyNamespaceStats());\n    handlers.forEach(handler -> {\n      nsStat.numberOfMsgDelivered+=handler.getAndResetNumMsgsAcked();\n      nsStat.numberOfBytesDelivered+=handler.getAndResetNumBytesDelivered();\n      nsStat.numberOfMsgsAcked+=handler.getAndResetNumMsgsAcked();\n    }\n);\n  }\n);\n  tempMetricsCollection.clear();\n  topicStats.forEach((namespace,stats) -> {\n    if (log.isDebugEnabled()) {\n      log.debug(\"Add ns-stats of namespace {} to metrics\",namespace);\n    }\n    tempMetricsCollection.add(stats.add(namespace));\n  }\n);\n  if (log.isDebugEnabled()) {\n    log.debug(\"Add jvm-stats to metrics\");\n  }\n  tempMetricsCollection.add(jvmMetrics.generate());\n  List<Metrics> tempRef=metricsCollection;\n  metricsCollection=tempMetricsCollection;\n  tempMetricsCollection=tempRef;\n  if (log.isDebugEnabled()) {\n    log.debug(\"Complete generating proxy metrics\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 283,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 120,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 59
      },
      "nodeContext" : "log.debug(\"Complete generating proxy metrics\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 120,
    "startColumnNumber" : 22,
    "endLineNumber" : 120,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}