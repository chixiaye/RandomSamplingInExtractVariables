{
  "id" : 425,
  "expression" : "1000L",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-runtime-web/src/test/java/org/apache/flink/runtime/webmonitor/history/HistoryServerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1000L",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 179,
      "startColumnNumber" : 41,
      "endLineNumber" : 179,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 179,
        "startColumnNumber" : 41,
        "endLineNumber" : 179,
        "endColumnNumber" : 52
      },
      "nodeContext" : "1000L * 60L",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 179,
        "startColumnNumber" : 19,
        "endLineNumber" : 179,
        "endColumnNumber" : 52
      },
      "nodeContext" : "oneMinuteSinceEpoch=1000L * 60L",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 179,
        "startColumnNumber" : 8,
        "endLineNumber" : 179,
        "endColumnNumber" : 53
      },
      "nodeContext" : "final long oneMinuteSinceEpoch=1000L * 60L;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3448,
        "startLineNumber" : 173,
        "startColumnNumber" : 90,
        "endLineNumber" : 243,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int numArchivesToKeepInHistory=2;\n  final int numArchivesBeforeHsStarted=4;\n  final int numArchivesAfterHsStarted=2;\n  final int numArchivesToRemoveUponHsStart=numArchivesBeforeHsStarted - numArchivesToKeepInHistory;\n  final long oneMinuteSinceEpoch=1000L * 60L;\n  List<String> expectedJobIdsToKeep=new LinkedList<>();\n  for (int j=0; j < numArchivesBeforeHsStarted; j++) {\n    String jobId=createLegacyArchive(jmDirectory.toPath(),j * oneMinuteSinceEpoch);\n    if (j >= numArchivesToRemoveUponHsStart) {\n      expectedJobIdsToKeep.add(jobId);\n    }\n  }\n  CountDownLatch numArchivesCreatedInitially=new CountDownLatch(numArchivesToKeepInHistory);\n  CountDownLatch numArchivesDeletedInitially=new CountDownLatch(numArchivesToRemoveUponHsStart);\n  CountDownLatch numArchivesCreatedTotal=new CountDownLatch(numArchivesBeforeHsStarted - numArchivesToRemoveUponHsStart + numArchivesAfterHsStarted);\n  CountDownLatch numArchivesDeletedTotal=new CountDownLatch(numArchivesToRemoveUponHsStart + numArchivesAfterHsStarted);\n  Configuration historyServerConfig=createTestConfiguration(HistoryServerOptions.HISTORY_SERVER_CLEANUP_EXPIRED_JOBS.defaultValue());\n  historyServerConfig.set(HistoryServerOptions.HISTORY_SERVER_RETAINED_JOBS,numArchivesToKeepInHistory);\n  HistoryServer hs=new HistoryServer(historyServerConfig,(event) -> {\nswitch (event.getType()) {\ncase CREATED:      numArchivesCreatedInitially.countDown();\n    numArchivesCreatedTotal.countDown();\n  break;\ncase DELETED:numArchivesDeletedInitially.countDown();\nnumArchivesDeletedTotal.countDown();\nbreak;\n}\n}\n);\ntry {\nhs.start();\nString baseUrl=\"http://localhost:\" + hs.getWebPort();\nassertTrue(numArchivesCreatedInitially.await(10L,TimeUnit.SECONDS));\nassertTrue(numArchivesDeletedInitially.await(10L,TimeUnit.SECONDS));\nAssert.assertEquals(new HashSet<>(expectedJobIdsToKeep),getIdsFromJobOverview(baseUrl));\nfor (int j=numArchivesBeforeHsStarted; j < numArchivesBeforeHsStarted + numArchivesAfterHsStarted; j++) {\nexpectedJobIdsToKeep.remove(0);\nexpectedJobIdsToKeep.add(createLegacyArchive(jmDirectory.toPath(),j * oneMinuteSinceEpoch));\n}\nassertTrue(numArchivesCreatedTotal.await(10L,TimeUnit.SECONDS));\nassertTrue(numArchivesDeletedTotal.await(10L,TimeUnit.SECONDS));\nAssert.assertEquals(new HashSet<>(expectedJobIdsToKeep),getIdsFromJobOverview(baseUrl));\n}\n  finally {\nhs.stop();\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 299,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3544,
        "startLineNumber" : 172,
        "startColumnNumber" : 4,
        "endLineNumber" : 243,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testRemoveOldestModifiedArchivesBeyondHistorySizeLimit() throws Exception {\n  final int numArchivesToKeepInHistory=2;\n  final int numArchivesBeforeHsStarted=4;\n  final int numArchivesAfterHsStarted=2;\n  final int numArchivesToRemoveUponHsStart=numArchivesBeforeHsStarted - numArchivesToKeepInHistory;\n  final long oneMinuteSinceEpoch=1000L * 60L;\n  List<String> expectedJobIdsToKeep=new LinkedList<>();\n  for (int j=0; j < numArchivesBeforeHsStarted; j++) {\n    String jobId=createLegacyArchive(jmDirectory.toPath(),j * oneMinuteSinceEpoch);\n    if (j >= numArchivesToRemoveUponHsStart) {\n      expectedJobIdsToKeep.add(jobId);\n    }\n  }\n  CountDownLatch numArchivesCreatedInitially=new CountDownLatch(numArchivesToKeepInHistory);\n  CountDownLatch numArchivesDeletedInitially=new CountDownLatch(numArchivesToRemoveUponHsStart);\n  CountDownLatch numArchivesCreatedTotal=new CountDownLatch(numArchivesBeforeHsStarted - numArchivesToRemoveUponHsStart + numArchivesAfterHsStarted);\n  CountDownLatch numArchivesDeletedTotal=new CountDownLatch(numArchivesToRemoveUponHsStart + numArchivesAfterHsStarted);\n  Configuration historyServerConfig=createTestConfiguration(HistoryServerOptions.HISTORY_SERVER_CLEANUP_EXPIRED_JOBS.defaultValue());\n  historyServerConfig.set(HistoryServerOptions.HISTORY_SERVER_RETAINED_JOBS,numArchivesToKeepInHistory);\n  HistoryServer hs=new HistoryServer(historyServerConfig,(event) -> {\nswitch (event.getType()) {\ncase CREATED:      numArchivesCreatedInitially.countDown();\n    numArchivesCreatedTotal.countDown();\n  break;\ncase DELETED:numArchivesDeletedInitially.countDown();\nnumArchivesDeletedTotal.countDown();\nbreak;\n}\n}\n);\ntry {\nhs.start();\nString baseUrl=\"http://localhost:\" + hs.getWebPort();\nassertTrue(numArchivesCreatedInitially.await(10L,TimeUnit.SECONDS));\nassertTrue(numArchivesDeletedInitially.await(10L,TimeUnit.SECONDS));\nAssert.assertEquals(new HashSet<>(expectedJobIdsToKeep),getIdsFromJobOverview(baseUrl));\nfor (int j=numArchivesBeforeHsStarted; j < numArchivesBeforeHsStarted + numArchivesAfterHsStarted; j++) {\nexpectedJobIdsToKeep.remove(0);\nexpectedJobIdsToKeep.add(createLegacyArchive(jmDirectory.toPath(),j * oneMinuteSinceEpoch));\n}\nassertTrue(numArchivesCreatedTotal.await(10L,TimeUnit.SECONDS));\nassertTrue(numArchivesDeletedTotal.await(10L,TimeUnit.SECONDS));\nAssert.assertEquals(new HashSet<>(expectedJobIdsToKeep),getIdsFromJobOverview(baseUrl));\n}\n  finally {\nhs.stop();\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 307,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 179,
        "startColumnNumber" : 8,
        "endLineNumber" : 179,
        "endColumnNumber" : 53
      },
      "nodeContext" : "final long oneMinuteSinceEpoch=1000L * 60L;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 179,
    "startColumnNumber" : 41,
    "endLineNumber" : 179,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}