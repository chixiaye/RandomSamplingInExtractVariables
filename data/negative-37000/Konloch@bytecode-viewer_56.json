{
  "id" : 56,
  "expression" : "false",
  "projectName" : "Konloch@bytecode-viewer",
  "commitID" : "9ab8ec7f8c061fb1d9b1db3e901034d162a211ff",
  "filePath" : "/src/main/java/the/bytecode/club/bytecodeviewer/resources/importing/impl/ClassResourceImporter.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 38,
      "startColumnNumber" : 11,
      "endLineNumber" : 38,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 17
      },
      "nodeContext" : "return false;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 36,
        "startColumnNumber" : 3,
        "endLineNumber" : 39,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  BytecodeViewer.showMessage(fn + \": Header does not start with CAFEBABE, ignoring.\");\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 381,
        "startLineNumber" : 27,
        "startColumnNumber" : 3,
        "endLineNumber" : 39,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (MiscUtils.getFileHeader(bytes).equalsIgnoreCase(\"cafebabe\")) {\n  final ClassNode cn=JarUtils.getNode(bytes);\n  FileContainer container=new FileContainer(file);\n  container.classes.add(cn);\n  BytecodeViewer.files.add(container);\n}\n else {\n  BytecodeViewer.showMessage(fn + \": Header does not start with CAFEBABE, ignoring.\");\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 52,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 454,
        "startLineNumber" : 25,
        "startColumnNumber" : 2,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  byte[] bytes=JarUtils.getBytes(new FileInputStream(file));\n  if (MiscUtils.getFileHeader(bytes).equalsIgnoreCase(\"cafebabe\")) {\n    final ClassNode cn=JarUtils.getNode(bytes);\n    FileContainer container=new FileContainer(file);\n    container.classes.add(cn);\n    BytecodeViewer.files.add(container);\n  }\n else {\n    BytecodeViewer.showMessage(fn + \": Header does not start with CAFEBABE, ignoring.\");\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 551,
        "startLineNumber" : 24,
        "startColumnNumber" : 2,
        "endLineNumber" : 45,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  byte[] bytes=JarUtils.getBytes(new FileInputStream(file));\n  if (MiscUtils.getFileHeader(bytes).equalsIgnoreCase(\"cafebabe\")) {\n    final ClassNode cn=JarUtils.getNode(bytes);\n    FileContainer container=new FileContainer(file);\n    container.classes.add(cn);\n    BytecodeViewer.files.add(container);\n  }\n else {\n    BytecodeViewer.showMessage(fn + \": Header does not start with CAFEBABE, ignoring.\");\n    return false;\n  }\n}\n catch (final Exception e) {\n  BytecodeViewer.handleException(e);\n  return false;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 81,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 612,
        "startLineNumber" : 22,
        "startColumnNumber" : 1,
        "endLineNumber" : 48,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  final String fn=file.getName();\n  try {\n    byte[] bytes=JarUtils.getBytes(new FileInputStream(file));\n    if (MiscUtils.getFileHeader(bytes).equalsIgnoreCase(\"cafebabe\")) {\n      final ClassNode cn=JarUtils.getNode(bytes);\n      FileContainer container=new FileContainer(file);\n      container.classes.add(cn);\n      BytecodeViewer.files.add(container);\n    }\n else {\n      BytecodeViewer.showMessage(fn + \": Header does not start with CAFEBABE, ignoring.\");\n      return false;\n    }\n  }\n catch (  final Exception e) {\n    BytecodeViewer.handleException(e);\n    return false;\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 672,
        "startLineNumber" : 20,
        "startColumnNumber" : 1,
        "endLineNumber" : 48,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public boolean open(File file) throws Exception {\n  final String fn=file.getName();\n  try {\n    byte[] bytes=JarUtils.getBytes(new FileInputStream(file));\n    if (MiscUtils.getFileHeader(bytes).equalsIgnoreCase(\"cafebabe\")) {\n      final ClassNode cn=JarUtils.getNode(bytes);\n      FileContainer container=new FileContainer(file);\n      container.classes.add(cn);\n      BytecodeViewer.files.add(container);\n    }\n else {\n      BytecodeViewer.showMessage(fn + \": Header does not start with CAFEBABE, ignoring.\");\n      return false;\n    }\n  }\n catch (  final Exception e) {\n    BytecodeViewer.handleException(e);\n    return false;\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 17
      },
      "nodeContext" : "return false;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "boolean"
  }, {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 44,
      "startColumnNumber" : 10,
      "endLineNumber" : 44,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 44,
        "startColumnNumber" : 3,
        "endLineNumber" : 44,
        "endColumnNumber" : 16
      },
      "nodeContext" : "return false;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 45,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BytecodeViewer.handleException(e);\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 41,
        "startColumnNumber" : 2,
        "endLineNumber" : 45,
        "endColumnNumber" : 3
      },
      "nodeContext" : "catch (final Exception e) {\n  BytecodeViewer.handleException(e);\n  return false;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 551,
        "startLineNumber" : 24,
        "startColumnNumber" : 2,
        "endLineNumber" : 45,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  byte[] bytes=JarUtils.getBytes(new FileInputStream(file));\n  if (MiscUtils.getFileHeader(bytes).equalsIgnoreCase(\"cafebabe\")) {\n    final ClassNode cn=JarUtils.getNode(bytes);\n    FileContainer container=new FileContainer(file);\n    container.classes.add(cn);\n    BytecodeViewer.files.add(container);\n  }\n else {\n    BytecodeViewer.showMessage(fn + \": Header does not start with CAFEBABE, ignoring.\");\n    return false;\n  }\n}\n catch (final Exception e) {\n  BytecodeViewer.handleException(e);\n  return false;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 81,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 612,
        "startLineNumber" : 22,
        "startColumnNumber" : 1,
        "endLineNumber" : 48,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  final String fn=file.getName();\n  try {\n    byte[] bytes=JarUtils.getBytes(new FileInputStream(file));\n    if (MiscUtils.getFileHeader(bytes).equalsIgnoreCase(\"cafebabe\")) {\n      final ClassNode cn=JarUtils.getNode(bytes);\n      FileContainer container=new FileContainer(file);\n      container.classes.add(cn);\n      BytecodeViewer.files.add(container);\n    }\n else {\n      BytecodeViewer.showMessage(fn + \": Header does not start with CAFEBABE, ignoring.\");\n      return false;\n    }\n  }\n catch (  final Exception e) {\n    BytecodeViewer.handleException(e);\n    return false;\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 672,
        "startLineNumber" : 20,
        "startColumnNumber" : 1,
        "endLineNumber" : 48,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public boolean open(File file) throws Exception {\n  final String fn=file.getName();\n  try {\n    byte[] bytes=JarUtils.getBytes(new FileInputStream(file));\n    if (MiscUtils.getFileHeader(bytes).equalsIgnoreCase(\"cafebabe\")) {\n      final ClassNode cn=JarUtils.getNode(bytes);\n      FileContainer container=new FileContainer(file);\n      container.classes.add(cn);\n      BytecodeViewer.files.add(container);\n    }\n else {\n      BytecodeViewer.showMessage(fn + \": Header does not start with CAFEBABE, ignoring.\");\n      return false;\n    }\n  }\n catch (  final Exception e) {\n    BytecodeViewer.handleException(e);\n    return false;\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 44,
        "startColumnNumber" : 3,
        "endLineNumber" : 44,
        "endColumnNumber" : 16
      },
      "nodeContext" : "return false;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 38,
    "startColumnNumber" : 11,
    "endLineNumber" : 38,
    "endColumnNumber" : 16
  }, {
    "charLength" : 5,
    "startLineNumber" : 44,
    "startColumnNumber" : 10,
    "endLineNumber" : 44,
    "endColumnNumber" : 15
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}