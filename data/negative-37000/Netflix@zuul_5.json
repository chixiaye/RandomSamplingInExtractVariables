{
  "id" : 5,
  "expression" : "f instanceof Map",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-core/src/main/java/com/netflix/netty/common/metrics/InstrumentedResourceLeakDetector.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "f instanceof Map",
    "nodeType" : "InstanceofExpression",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 80,
      "startColumnNumber" : 16,
      "endLineNumber" : 80,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 80,
        "startColumnNumber" : 12,
        "endLineNumber" : 82,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (f instanceof Map) {\n  ((Map)f).clear();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 287,
        "startLineNumber" : 76,
        "startColumnNumber" : 12,
        "endLineNumber" : 83,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Field reportedLeaks=ResourceLeakDetector.class.getDeclaredField(\"reportedLeaks\");\n  reportedLeaks.setAccessible(true);\n  Object f=reportedLeaks.get(this);\n  if (f instanceof Map) {\n    ((Map)f).clear();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 357,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Field reportedLeaks=ResourceLeakDetector.class.getDeclaredField(\"reportedLeaks\");\n  reportedLeaks.setAccessible(true);\n  Object f=reportedLeaks.get(this);\n  if (f instanceof Map) {\n    ((Map)f).clear();\n  }\n}\n catch (Throwable t) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 47,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 373,
        "startLineNumber" : 75,
        "startColumnNumber" : 38,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    Field reportedLeaks=ResourceLeakDetector.class.getDeclaredField(\"reportedLeaks\");\n    reportedLeaks.setAccessible(true);\n    Object f=reportedLeaks.get(this);\n    if (f instanceof Map) {\n      ((Map)f).clear();\n    }\n  }\n catch (  Throwable t) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 630,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * This private field in the superclass needs to be reset so that we can continue reporting leaks even if they're duplicates. This is ugly but ideally should not be called frequently (or at all).\n */\nprivate void resetReportedLeaks(){\n  try {\n    Field reportedLeaks=ResourceLeakDetector.class.getDeclaredField(\"reportedLeaks\");\n    reportedLeaks.setAccessible(true);\n    Object f=reportedLeaks.get(this);\n    if (f instanceof Map) {\n      ((Map)f).clear();\n    }\n  }\n catch (  Throwable t) {\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 53,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 80,
        "startColumnNumber" : 12,
        "endLineNumber" : 82,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (f instanceof Map) {\n  ((Map)f).clear();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 8
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 80,
    "startColumnNumber" : 16,
    "endLineNumber" : 80,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}