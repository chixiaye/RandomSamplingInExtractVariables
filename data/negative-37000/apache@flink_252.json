{
  "id" : 252,
  "expression" : "parallelism",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-streaming-java/src/main/java/org/apache/flink/streaming/api/transformations/LegacySinkTransformation.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "parallelism",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 64,
      "startColumnNumber" : 62,
      "endLineNumber" : 64,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 75
      },
      "nodeContext" : "this(input,name,SimpleOperatorFactory.of(operator),parallelism);\n",
      "nodeType" : "ConstructorInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 63,
        "startColumnNumber" : 91,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this(input,name,SimpleOperatorFactory.of(operator),parallelism);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 625,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Creates a new  {@code LegacySinkTransformation} from the given input {@code Transformation}.\n * @param input The input {@code Transformation}\n * @param name The name of the {@code Transformation}, this will be shown in Visualizations and the Log\n * @param operator The sink operator\n * @param parallelism The parallelism of this {@code LegacySinkTransformation}\n */\npublic LegacySinkTransformation(Transformation<T> input,String name,StreamSink<T> operator,int parallelism){\n  this(input,name,SimpleOperatorFactory.of(operator),parallelism);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 34,
      "astHeight" : 5
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 75
      },
      "nodeContext" : "this(input,name,SimpleOperatorFactory.of(operator),parallelism);\n",
      "nodeType" : "ConstructorInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 64,
    "startColumnNumber" : 62,
    "endLineNumber" : 64,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ ]
}