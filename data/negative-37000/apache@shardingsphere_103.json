{
  "id" : 103,
  "expression" : "PipelineJobAPIFactory.getPipelineJobAPI().list().stream().map(each -> {\n  Collection<Object> list=new LinkedList<>();\n  list.add(each.getJobId());\n  list.add(each.getTables());\n  list.add(each.getShardingTotalCount());\n  list.add(each.isActive() ? \"true\" : \"false\");\n  list.add(each.getCreateTime());\n  list.add(each.getStopTime());\n  return list;\n}\n).collect(Collectors.toList()).iterator()",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-distsql/shardingsphere-sharding-distsql-handler/src/main/java/org/apache/shardingsphere/scaling/distsql/handler/ShowScalingListQueryResultSet.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "PipelineJobAPIFactory.getPipelineJobAPI().list().stream().map(each -> {\n  Collection<Object> list=new LinkedList<>();\n  list.add(each.getJobId());\n  list.add(each.getTables());\n  list.add(each.getShardingTotalCount());\n  list.add(each.isActive() ? \"true\" : \"false\");\n  list.add(each.getCreateTime());\n  list.add(each.getStopTime());\n  return list;\n}\n).collect(Collectors.toList()).iterator()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 569,
      "startLineNumber" : 41,
      "startColumnNumber" : 15,
      "endLineNumber" : 51,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 79,
    "astHeight" : 11,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 576,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 58
      },
      "nodeContext" : "data=PipelineJobAPIFactory.getPipelineJobAPI().list().stream().map(each -> {\n  Collection<Object> list=new LinkedList<>();\n  list.add(each.getJobId());\n  list.add(each.getTables());\n  list.add(each.getShardingTotalCount());\n  list.add(each.isActive() ? \"true\" : \"false\");\n  list.add(each.getCreateTime());\n  list.add(each.getStopTime());\n  return list;\n}\n).collect(Collectors.toList()).iterator()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 81,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 577,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 59
      },
      "nodeContext" : "data=PipelineJobAPIFactory.getPipelineJobAPI().list().stream().map(each -> {\n  Collection<Object> list=new LinkedList<>();\n  list.add(each.getJobId());\n  list.add(each.getTables());\n  list.add(each.getShardingTotalCount());\n  list.add(each.isActive() ? \"true\" : \"false\");\n  list.add(each.getCreateTime());\n  list.add(each.getStopTime());\n  return list;\n}\n).collect(Collectors.toList()).iterator();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 82,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 593,
        "startLineNumber" : 40,
        "startColumnNumber" : 93,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  data=PipelineJobAPIFactory.getPipelineJobAPI().list().stream().map(each -> {\n    Collection<Object> list=new LinkedList<>();\n    list.add(each.getJobId());\n    list.add(each.getTables());\n    list.add(each.getShardingTotalCount());\n    list.add(each.isActive() ? \"true\" : \"false\");\n    list.add(each.getCreateTime());\n    list.add(each.getStopTime());\n    return list;\n  }\n).collect(Collectors.toList()).iterator();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 696,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void init(final ShardingSphereMetaData metaData,final SQLStatement sqlStatement){\n  data=PipelineJobAPIFactory.getPipelineJobAPI().list().stream().map(each -> {\n    Collection<Object> list=new LinkedList<>();\n    list.add(each.getJobId());\n    list.add(each.getTables());\n    list.add(each.getShardingTotalCount());\n    list.add(each.isActive() ? \"true\" : \"false\");\n    list.add(each.getCreateTime());\n    list.add(each.getStopTime());\n    return list;\n  }\n).collect(Collectors.toList()).iterator();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 99,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 577,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 59
      },
      "nodeContext" : "data=PipelineJobAPIFactory.getPipelineJobAPI().list().stream().map(each -> {\n  Collection<Object> list=new LinkedList<>();\n  list.add(each.getJobId());\n  list.add(each.getTables());\n  list.add(each.getShardingTotalCount());\n  list.add(each.isActive() ? \"true\" : \"false\");\n  list.add(each.getCreateTime());\n  list.add(each.getStopTime());\n  return list;\n}\n).collect(Collectors.toList()).iterator();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 82,
      "astHeight" : 13
    },
    "tokenLength" : 41,
    "type" : "java.util.Iterator<java.util.Collection<java.lang.Object>>"
  } ],
  "positionList" : [ {
    "charLength" : 569,
    "startLineNumber" : 41,
    "startColumnNumber" : 15,
    "endLineNumber" : 51,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ ]
}