{
  "id" : 167,
  "expression" : "item.getId()",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-biz/src/main/java/com/ctrip/framework/apollo/biz/service/ItemSetService.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "item.getId()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 69,
      "startColumnNumber" : 46,
      "endLineNumber" : 69,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 69,
        "startColumnNumber" : 27,
        "endLineNumber" : 69,
        "endColumnNumber" : 69
      },
      "nodeContext" : "itemService.delete(item.getId(),operator)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 69,
        "startColumnNumber" : 13,
        "endLineNumber" : 69,
        "endColumnNumber" : 69
      },
      "nodeContext" : "deletedItem=itemService.delete(item.getId(),operator)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Item deletedItem=itemService.delete(item.getId(),operator);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 68,
        "startColumnNumber" : 54,
        "endLineNumber" : 71,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  Item deletedItem=itemService.delete(item.getId(),operator);\n  configChangeContentBuilder.deleteItem(deletedItem);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 188,
        "startLineNumber" : 68,
        "startColumnNumber" : 6,
        "endLineNumber" : 71,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (ItemDTO item : changeSet.getDeleteItems()) {\n  Item deletedItem=itemService.delete(item.getId(),operator);\n  configChangeContentBuilder.deleteItem(deletedItem);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 272,
        "startLineNumber" : 67,
        "startColumnNumber" : 62,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (  ItemDTO item : changeSet.getDeleteItems()) {\n    Item deletedItem=itemService.delete(item.getId(),operator);\n    configChangeContentBuilder.deleteItem(deletedItem);\n  }\n  auditService.audit(\"ItemSet\",null,Audit.OP.DELETE,operator);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 330,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!CollectionUtils.isEmpty(changeSet.getDeleteItems())) {\n  for (  ItemDTO item : changeSet.getDeleteItems()) {\n    Item deletedItem=itemService.delete(item.getId(),operator);\n    configChangeContentBuilder.deleteItem(deletedItem);\n  }\n  auditService.audit(\"ItemSet\",null,Audit.OP.DELETE,operator);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 47,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2035,
        "startLineNumber" : 34,
        "startColumnNumber" : 82,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String operator=changeSet.getDataChangeLastModifiedBy();\n  ConfigChangeContentBuilder configChangeContentBuilder=new ConfigChangeContentBuilder();\n  if (!CollectionUtils.isEmpty(changeSet.getCreateItems())) {\n    for (    ItemDTO item : changeSet.getCreateItems()) {\n      Item entity=BeanUtils.transfrom(Item.class,item);\n      entity.setDataChangeCreatedBy(operator);\n      entity.setDataChangeLastModifiedBy(operator);\n      Item createdItem=itemService.save(entity);\n      configChangeContentBuilder.createItem(createdItem);\n    }\n    auditService.audit(\"ItemSet\",null,Audit.OP.INSERT,operator);\n  }\n  if (!CollectionUtils.isEmpty(changeSet.getUpdateItems())) {\n    for (    ItemDTO item : changeSet.getUpdateItems()) {\n      Item entity=BeanUtils.transfrom(Item.class,item);\n      Item beforeUpdateItem=itemService.findOne(entity.getId());\n      if (beforeUpdateItem == null) {\n        throw new NotFoundException(String.format(\"item not found.(key=%s)\",entity.getKey()));\n      }\n      beforeUpdateItem=BeanUtils.transfrom(Item.class,beforeUpdateItem);\n      entity.setDataChangeLastModifiedBy(operator);\n      Item updatedItem=itemService.update(entity);\n      configChangeContentBuilder.updateItem(beforeUpdateItem,updatedItem);\n    }\n    auditService.audit(\"ItemSet\",null,Audit.OP.UPDATE,operator);\n  }\n  if (!CollectionUtils.isEmpty(changeSet.getDeleteItems())) {\n    for (    ItemDTO item : changeSet.getDeleteItems()) {\n      Item deletedItem=itemService.delete(item.getId(),operator);\n      configChangeContentBuilder.deleteItem(deletedItem);\n    }\n    auditService.audit(\"ItemSet\",null,Audit.OP.DELETE,operator);\n  }\n  String configChangeContent=configChangeContentBuilder.build();\n  if (!StringUtils.isEmpty(configChangeContent)) {\n    createCommit(appId,clusterName,namespaceName,configChangeContentBuilder.build(),changeSet.getDataChangeLastModifiedBy());\n  }\n  return changeSet;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 258,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2200,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Transactional public ItemChangeSets updateSet(String appId,String clusterName,String namespaceName,ItemChangeSets changeSet){\n  String operator=changeSet.getDataChangeLastModifiedBy();\n  ConfigChangeContentBuilder configChangeContentBuilder=new ConfigChangeContentBuilder();\n  if (!CollectionUtils.isEmpty(changeSet.getCreateItems())) {\n    for (    ItemDTO item : changeSet.getCreateItems()) {\n      Item entity=BeanUtils.transfrom(Item.class,item);\n      entity.setDataChangeCreatedBy(operator);\n      entity.setDataChangeLastModifiedBy(operator);\n      Item createdItem=itemService.save(entity);\n      configChangeContentBuilder.createItem(createdItem);\n    }\n    auditService.audit(\"ItemSet\",null,Audit.OP.INSERT,operator);\n  }\n  if (!CollectionUtils.isEmpty(changeSet.getUpdateItems())) {\n    for (    ItemDTO item : changeSet.getUpdateItems()) {\n      Item entity=BeanUtils.transfrom(Item.class,item);\n      Item beforeUpdateItem=itemService.findOne(entity.getId());\n      if (beforeUpdateItem == null) {\n        throw new NotFoundException(String.format(\"item not found.(key=%s)\",entity.getKey()));\n      }\n      beforeUpdateItem=BeanUtils.transfrom(Item.class,beforeUpdateItem);\n      entity.setDataChangeLastModifiedBy(operator);\n      Item updatedItem=itemService.update(entity);\n      configChangeContentBuilder.updateItem(beforeUpdateItem,updatedItem);\n    }\n    auditService.audit(\"ItemSet\",null,Audit.OP.UPDATE,operator);\n  }\n  if (!CollectionUtils.isEmpty(changeSet.getDeleteItems())) {\n    for (    ItemDTO item : changeSet.getDeleteItems()) {\n      Item deletedItem=itemService.delete(item.getId(),operator);\n      configChangeContentBuilder.deleteItem(deletedItem);\n    }\n    auditService.audit(\"ItemSet\",null,Audit.OP.DELETE,operator);\n  }\n  String configChangeContent=configChangeContentBuilder.build();\n  if (!StringUtils.isEmpty(configChangeContent)) {\n    createCommit(appId,clusterName,namespaceName,configChangeContentBuilder.build(),changeSet.getDataChangeLastModifiedBy());\n  }\n  return changeSet;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 281,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Item deletedItem=itemService.delete(item.getId(),operator);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 69,
    "startColumnNumber" : 46,
    "endLineNumber" : 69,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ ]
}