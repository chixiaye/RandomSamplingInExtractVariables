{
  "id" : 459,
  "expression" : "defaultRate",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/commons-server/src/test/java/com/navercorp/pinpoint/common/server/bo/serializer/stat/AgentStatUtilsTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "defaultRate",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 58,
      "startColumnNumber" : 79,
      "endLineNumber" : 58,
      "endColumnNumber" : 90
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 58,
        "startColumnNumber" : 22,
        "endLineNumber" : 58,
        "endColumnNumber" : 91
      },
      "nodeContext" : "AgentStatUtils.calculateRate(count,timeMs,numDecimals,defaultRate)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 58,
        "startColumnNumber" : 15,
        "endLineNumber" : 58,
        "endColumnNumber" : 91
      },
      "nodeContext" : "rate=AgentStatUtils.calculateRate(count,timeMs,numDecimals,defaultRate)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 92
      },
      "nodeContext" : "double rate=AgentStatUtils.calculateRate(count,timeMs,numDecimals,defaultRate);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 502,
        "startLineNumber" : 51,
        "startColumnNumber" : 88,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long count=1000;\n  int numDecimals=2;\n  double defaultRate=99;\n  double validDelta=1 / Math.pow(10,numDecimals);\n  long timeMs=0;\n  double rate=AgentStatUtils.calculateRate(count,timeMs,numDecimals,defaultRate);\n  Assert.assertEquals(defaultRate,rate,validDelta);\n  timeMs=-1;\n  rate=AgentStatUtils.calculateRate(count,timeMs,numDecimals,defaultRate);\n  Assert.assertEquals(defaultRate,rate,validDelta);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 596,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void calculateRate_should_return_defaultRate_if_time_is_not_greater_than_0(){\n  long count=1000;\n  int numDecimals=2;\n  double defaultRate=99;\n  double validDelta=1 / Math.pow(10,numDecimals);\n  long timeMs=0;\n  double rate=AgentStatUtils.calculateRate(count,timeMs,numDecimals,defaultRate);\n  Assert.assertEquals(defaultRate,rate,validDelta);\n  timeMs=-1;\n  rate=AgentStatUtils.calculateRate(count,timeMs,numDecimals,defaultRate);\n  Assert.assertEquals(defaultRate,rate,validDelta);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 78,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 92
      },
      "nodeContext" : "double rate=AgentStatUtils.calculateRate(count,timeMs,numDecimals,defaultRate);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "double"
  }, {
    "nodeContext" : "defaultRate",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 59,
      "startColumnNumber" : 28,
      "endLineNumber" : 59,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Assert.assertEquals(defaultRate,rate,validDelta)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Assert.assertEquals(defaultRate,rate,validDelta);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 502,
        "startLineNumber" : 51,
        "startColumnNumber" : 88,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long count=1000;\n  int numDecimals=2;\n  double defaultRate=99;\n  double validDelta=1 / Math.pow(10,numDecimals);\n  long timeMs=0;\n  double rate=AgentStatUtils.calculateRate(count,timeMs,numDecimals,defaultRate);\n  Assert.assertEquals(defaultRate,rate,validDelta);\n  timeMs=-1;\n  rate=AgentStatUtils.calculateRate(count,timeMs,numDecimals,defaultRate);\n  Assert.assertEquals(defaultRate,rate,validDelta);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 596,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void calculateRate_should_return_defaultRate_if_time_is_not_greater_than_0(){\n  long count=1000;\n  int numDecimals=2;\n  double defaultRate=99;\n  double validDelta=1 / Math.pow(10,numDecimals);\n  long timeMs=0;\n  double rate=AgentStatUtils.calculateRate(count,timeMs,numDecimals,defaultRate);\n  Assert.assertEquals(defaultRate,rate,validDelta);\n  timeMs=-1;\n  rate=AgentStatUtils.calculateRate(count,timeMs,numDecimals,defaultRate);\n  Assert.assertEquals(defaultRate,rate,validDelta);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 78,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Assert.assertEquals(defaultRate,rate,validDelta);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "double"
  }, {
    "nodeContext" : "defaultRate",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 62,
      "startColumnNumber" : 72,
      "endLineNumber" : 62,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 62,
        "startColumnNumber" : 15,
        "endLineNumber" : 62,
        "endColumnNumber" : 84
      },
      "nodeContext" : "AgentStatUtils.calculateRate(count,timeMs,numDecimals,defaultRate)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 84
      },
      "nodeContext" : "rate=AgentStatUtils.calculateRate(count,timeMs,numDecimals,defaultRate)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 85
      },
      "nodeContext" : "rate=AgentStatUtils.calculateRate(count,timeMs,numDecimals,defaultRate);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 502,
        "startLineNumber" : 51,
        "startColumnNumber" : 88,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long count=1000;\n  int numDecimals=2;\n  double defaultRate=99;\n  double validDelta=1 / Math.pow(10,numDecimals);\n  long timeMs=0;\n  double rate=AgentStatUtils.calculateRate(count,timeMs,numDecimals,defaultRate);\n  Assert.assertEquals(defaultRate,rate,validDelta);\n  timeMs=-1;\n  rate=AgentStatUtils.calculateRate(count,timeMs,numDecimals,defaultRate);\n  Assert.assertEquals(defaultRate,rate,validDelta);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 596,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void calculateRate_should_return_defaultRate_if_time_is_not_greater_than_0(){\n  long count=1000;\n  int numDecimals=2;\n  double defaultRate=99;\n  double validDelta=1 / Math.pow(10,numDecimals);\n  long timeMs=0;\n  double rate=AgentStatUtils.calculateRate(count,timeMs,numDecimals,defaultRate);\n  Assert.assertEquals(defaultRate,rate,validDelta);\n  timeMs=-1;\n  rate=AgentStatUtils.calculateRate(count,timeMs,numDecimals,defaultRate);\n  Assert.assertEquals(defaultRate,rate,validDelta);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 78,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 85
      },
      "nodeContext" : "rate=AgentStatUtils.calculateRate(count,timeMs,numDecimals,defaultRate);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "double"
  }, {
    "nodeContext" : "defaultRate",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 63,
      "startColumnNumber" : 28,
      "endLineNumber" : 63,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Assert.assertEquals(defaultRate,rate,validDelta)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Assert.assertEquals(defaultRate,rate,validDelta);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 502,
        "startLineNumber" : 51,
        "startColumnNumber" : 88,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long count=1000;\n  int numDecimals=2;\n  double defaultRate=99;\n  double validDelta=1 / Math.pow(10,numDecimals);\n  long timeMs=0;\n  double rate=AgentStatUtils.calculateRate(count,timeMs,numDecimals,defaultRate);\n  Assert.assertEquals(defaultRate,rate,validDelta);\n  timeMs=-1;\n  rate=AgentStatUtils.calculateRate(count,timeMs,numDecimals,defaultRate);\n  Assert.assertEquals(defaultRate,rate,validDelta);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 596,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void calculateRate_should_return_defaultRate_if_time_is_not_greater_than_0(){\n  long count=1000;\n  int numDecimals=2;\n  double defaultRate=99;\n  double validDelta=1 / Math.pow(10,numDecimals);\n  long timeMs=0;\n  double rate=AgentStatUtils.calculateRate(count,timeMs,numDecimals,defaultRate);\n  Assert.assertEquals(defaultRate,rate,validDelta);\n  timeMs=-1;\n  rate=AgentStatUtils.calculateRate(count,timeMs,numDecimals,defaultRate);\n  Assert.assertEquals(defaultRate,rate,validDelta);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 78,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Assert.assertEquals(defaultRate,rate,validDelta);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "double"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 58,
    "startColumnNumber" : 79,
    "endLineNumber" : 58,
    "endColumnNumber" : 90
  }, {
    "charLength" : 11,
    "startLineNumber" : 59,
    "startColumnNumber" : 28,
    "endLineNumber" : 59,
    "endColumnNumber" : 39
  }, {
    "charLength" : 11,
    "startLineNumber" : 62,
    "startColumnNumber" : 72,
    "endLineNumber" : 62,
    "endColumnNumber" : 83
  }, {
    "charLength" : 11,
    "startLineNumber" : 63,
    "startColumnNumber" : 28,
    "endLineNumber" : 63,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}