{
  "id" : 271,
  "expression" : "appendPattern(result,pos,widths,1)",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/oned/Code39Writer.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "appendPattern(result,pos,widths,1)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 71,
      "startColumnNumber" : 13,
      "endLineNumber" : 71,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 6,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 71,
        "startColumnNumber" : 6,
        "endLineNumber" : 71,
        "endColumnNumber" : 50
      },
      "nodeContext" : "pos+=appendPattern(result,pos,widths,1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 71,
        "startColumnNumber" : 6,
        "endLineNumber" : 71,
        "endColumnNumber" : 51
      },
      "nodeContext" : "pos+=appendPattern(result,pos,widths,1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 280,
        "startLineNumber" : 68,
        "startColumnNumber" : 39,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int indexInString=Code39Reader.ALPHABET_STRING.indexOf(contents.charAt(i));\n  toIntArray(Code39Reader.CHARACTER_ENCODINGS[indexInString],widths);\n  pos+=appendPattern(result,pos,widths,1);\n  pos+=appendPattern(result,pos,narrowWhite,0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 315,
        "startLineNumber" : 68,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=length - 1; i >= 0; i--) {\n  int indexInString=Code39Reader.ALPHABET_STRING.indexOf(contents.charAt(i));\n  toIntArray(Code39Reader.CHARACTER_ENCODINGS[indexInString],widths);\n  pos+=appendPattern(result,pos,widths,1);\n  pos+=appendPattern(result,pos,narrowWhite,0);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 54,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1298,
        "startLineNumber" : 46,
        "startColumnNumber" : 40,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int length=contents.length();\n  if (length > 80) {\n    throw new IllegalArgumentException(\"Requested contents should be less than 80 digits long, but got \" + length);\n  }\n  int[] widths=new int[9];\n  int codeWidth=24 + 1 + length;\n  for (int i=0; i < length; i++) {\n    int indexInString=Code39Reader.ALPHABET_STRING.indexOf(contents.charAt(i));\n    toIntArray(Code39Reader.CHARACTER_ENCODINGS[indexInString],widths);\n    for (    int width : widths) {\n      codeWidth+=width;\n    }\n  }\n  byte[] result=new byte[codeWidth];\n  toIntArray(Code39Reader.CHARACTER_ENCODINGS[39],widths);\n  int pos=appendPattern(result,0,widths,1);\n  int[] narrowWhite={1};\n  pos+=appendPattern(result,pos,narrowWhite,0);\n  for (int i=length - 1; i >= 0; i--) {\n    int indexInString=Code39Reader.ALPHABET_STRING.indexOf(contents.charAt(i));\n    toIntArray(Code39Reader.CHARACTER_ENCODINGS[indexInString],widths);\n    pos+=appendPattern(result,pos,widths,1);\n    pos+=appendPattern(result,pos,narrowWhite,0);\n  }\n  toIntArray(Code39Reader.CHARACTER_ENCODINGS[39],widths);\n  pos+=appendPattern(result,pos,widths,1);\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 204,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1349,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public byte[] encode(String contents){\n  int length=contents.length();\n  if (length > 80) {\n    throw new IllegalArgumentException(\"Requested contents should be less than 80 digits long, but got \" + length);\n  }\n  int[] widths=new int[9];\n  int codeWidth=24 + 1 + length;\n  for (int i=0; i < length; i++) {\n    int indexInString=Code39Reader.ALPHABET_STRING.indexOf(contents.charAt(i));\n    toIntArray(Code39Reader.CHARACTER_ENCODINGS[indexInString],widths);\n    for (    int width : widths) {\n      codeWidth+=width;\n    }\n  }\n  byte[] result=new byte[codeWidth];\n  toIntArray(Code39Reader.CHARACTER_ENCODINGS[39],widths);\n  int pos=appendPattern(result,0,widths,1);\n  int[] narrowWhite={1};\n  pos+=appendPattern(result,pos,narrowWhite,0);\n  for (int i=length - 1; i >= 0; i--) {\n    int indexInString=Code39Reader.ALPHABET_STRING.indexOf(contents.charAt(i));\n    toIntArray(Code39Reader.CHARACTER_ENCODINGS[indexInString],widths);\n    pos+=appendPattern(result,pos,widths,1);\n    pos+=appendPattern(result,pos,narrowWhite,0);\n  }\n  toIntArray(Code39Reader.CHARACTER_ENCODINGS[39],widths);\n  pos+=appendPattern(result,pos,widths,1);\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 216,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 71,
        "startColumnNumber" : 6,
        "endLineNumber" : 71,
        "endColumnNumber" : 51
      },
      "nodeContext" : "pos+=appendPattern(result,pos,widths,1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "int"
  }, {
    "nodeContext" : "appendPattern(result,pos,widths,1)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 75,
      "startColumnNumber" : 11,
      "endLineNumber" : 75,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 6,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 48
      },
      "nodeContext" : "pos+=appendPattern(result,pos,widths,1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 49
      },
      "nodeContext" : "pos+=appendPattern(result,pos,widths,1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1298,
        "startLineNumber" : 46,
        "startColumnNumber" : 40,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int length=contents.length();\n  if (length > 80) {\n    throw new IllegalArgumentException(\"Requested contents should be less than 80 digits long, but got \" + length);\n  }\n  int[] widths=new int[9];\n  int codeWidth=24 + 1 + length;\n  for (int i=0; i < length; i++) {\n    int indexInString=Code39Reader.ALPHABET_STRING.indexOf(contents.charAt(i));\n    toIntArray(Code39Reader.CHARACTER_ENCODINGS[indexInString],widths);\n    for (    int width : widths) {\n      codeWidth+=width;\n    }\n  }\n  byte[] result=new byte[codeWidth];\n  toIntArray(Code39Reader.CHARACTER_ENCODINGS[39],widths);\n  int pos=appendPattern(result,0,widths,1);\n  int[] narrowWhite={1};\n  pos+=appendPattern(result,pos,narrowWhite,0);\n  for (int i=length - 1; i >= 0; i--) {\n    int indexInString=Code39Reader.ALPHABET_STRING.indexOf(contents.charAt(i));\n    toIntArray(Code39Reader.CHARACTER_ENCODINGS[indexInString],widths);\n    pos+=appendPattern(result,pos,widths,1);\n    pos+=appendPattern(result,pos,narrowWhite,0);\n  }\n  toIntArray(Code39Reader.CHARACTER_ENCODINGS[39],widths);\n  pos+=appendPattern(result,pos,widths,1);\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 204,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1349,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public byte[] encode(String contents){\n  int length=contents.length();\n  if (length > 80) {\n    throw new IllegalArgumentException(\"Requested contents should be less than 80 digits long, but got \" + length);\n  }\n  int[] widths=new int[9];\n  int codeWidth=24 + 1 + length;\n  for (int i=0; i < length; i++) {\n    int indexInString=Code39Reader.ALPHABET_STRING.indexOf(contents.charAt(i));\n    toIntArray(Code39Reader.CHARACTER_ENCODINGS[indexInString],widths);\n    for (    int width : widths) {\n      codeWidth+=width;\n    }\n  }\n  byte[] result=new byte[codeWidth];\n  toIntArray(Code39Reader.CHARACTER_ENCODINGS[39],widths);\n  int pos=appendPattern(result,0,widths,1);\n  int[] narrowWhite={1};\n  pos+=appendPattern(result,pos,narrowWhite,0);\n  for (int i=length - 1; i >= 0; i--) {\n    int indexInString=Code39Reader.ALPHABET_STRING.indexOf(contents.charAt(i));\n    toIntArray(Code39Reader.CHARACTER_ENCODINGS[indexInString],widths);\n    pos+=appendPattern(result,pos,widths,1);\n    pos+=appendPattern(result,pos,narrowWhite,0);\n  }\n  toIntArray(Code39Reader.CHARACTER_ENCODINGS[39],widths);\n  pos+=appendPattern(result,pos,widths,1);\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 216,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 49
      },
      "nodeContext" : "pos+=appendPattern(result,pos,widths,1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 71,
    "startColumnNumber" : 13,
    "endLineNumber" : 71,
    "endColumnNumber" : 50
  }, {
    "charLength" : 37,
    "startLineNumber" : 75,
    "startColumnNumber" : 11,
    "endLineNumber" : 75,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}