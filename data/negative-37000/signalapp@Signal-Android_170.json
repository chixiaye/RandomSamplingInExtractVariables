{
  "id" : 170,
  "expression" : "ThreadDatabase.DATE",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/app/src/main/java/org/thoughtcrime/securesms/database/GroupDatabase.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ThreadDatabase.DATE",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 362,
      "startColumnNumber" : 66,
      "endLineNumber" : 362,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 362,
        "startColumnNumber" : 32,
        "endLineNumber" : 362,
        "endColumnNumber" : 95
      },
      "nodeContext" : "ThreadDatabase.TABLE_NAME + \".\" + ThreadDatabase.DATE+ \" DESC\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 362,
        "startColumnNumber" : 19,
        "endLineNumber" : 362,
        "endColumnNumber" : 95
      },
      "nodeContext" : "orderBy=ThreadDatabase.TABLE_NAME + \".\" + ThreadDatabase.DATE+ \" DESC\"",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 362,
        "startColumnNumber" : 4,
        "endLineNumber" : 362,
        "endColumnNumber" : 96
      },
      "nodeContext" : "String orderBy=ThreadDatabase.TABLE_NAME + \".\" + ThreadDatabase.DATE+ \" DESC\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1223,
        "startLineNumber" : 357,
        "startColumnNumber" : 139,
        "endLineNumber" : 387,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  SQLiteDatabase database=databaseHelper.getSignalReadableDatabase();\n  String table=TABLE_NAME + \" INNER JOIN \" + ThreadDatabase.TABLE_NAME+ \" ON \"+ TABLE_NAME+ \".\"+ RECIPIENT_ID+ \" = \"+ ThreadDatabase.TABLE_NAME+ \".\"+ ThreadDatabase.RECIPIENT_ID;\n  String query=MEMBERS + \" LIKE ?\";\n  String[] args=SqlUtil.buildArgs(\"%\" + recipientId.serialize() + \"%\");\n  String orderBy=ThreadDatabase.TABLE_NAME + \".\" + ThreadDatabase.DATE+ \" DESC\";\n  if (pushOnly) {\n    query+=\" AND \" + MMS + \" = ?\";\n    args=SqlUtil.appendArg(args,\"0\");\n  }\n  if (!includeInactive) {\n    query+=\" AND \" + ACTIVE + \" = ?\";\n    args=SqlUtil.appendArg(args,\"1\");\n  }\n  List<GroupRecord> groups=new LinkedList<>();\n  try (Cursor cursor=database.query(table,null,query,args,null,null,orderBy)){\n    while (cursor != null && cursor.moveToNext()) {\n      String serializedMembers=cursor.getString(cursor.getColumnIndexOrThrow(MEMBERS));\n      if (RecipientId.serializedListContains(serializedMembers,recipientId)) {\n        groups.add(new Reader(cursor).getCurrent());\n      }\n    }\n  }\n   return groups;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 176,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1376,
        "startLineNumber" : 356,
        "startColumnNumber" : 2,
        "endLineNumber" : 387,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@WorkerThread public @NonNull List<GroupRecord> getGroupsContainingMember(@NonNull RecipientId recipientId,boolean pushOnly,boolean includeInactive){\n  SQLiteDatabase database=databaseHelper.getSignalReadableDatabase();\n  String table=TABLE_NAME + \" INNER JOIN \" + ThreadDatabase.TABLE_NAME+ \" ON \"+ TABLE_NAME+ \".\"+ RECIPIENT_ID+ \" = \"+ ThreadDatabase.TABLE_NAME+ \".\"+ ThreadDatabase.RECIPIENT_ID;\n  String query=MEMBERS + \" LIKE ?\";\n  String[] args=SqlUtil.buildArgs(\"%\" + recipientId.serialize() + \"%\");\n  String orderBy=ThreadDatabase.TABLE_NAME + \".\" + ThreadDatabase.DATE+ \" DESC\";\n  if (pushOnly) {\n    query+=\" AND \" + MMS + \" = ?\";\n    args=SqlUtil.appendArg(args,\"0\");\n  }\n  if (!includeInactive) {\n    query+=\" AND \" + ACTIVE + \" = ?\";\n    args=SqlUtil.appendArg(args,\"1\");\n  }\n  List<GroupRecord> groups=new LinkedList<>();\n  try (Cursor cursor=database.query(table,null,query,args,null,null,orderBy)){\n    while (cursor != null && cursor.moveToNext()) {\n      String serializedMembers=cursor.getString(cursor.getColumnIndexOrThrow(MEMBERS));\n      if (RecipientId.serializedListContains(serializedMembers,recipientId)) {\n        groups.add(new Reader(cursor).getCurrent());\n      }\n    }\n  }\n   return groups;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 200,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 362,
        "startColumnNumber" : 4,
        "endLineNumber" : 362,
        "endColumnNumber" : 96
      },
      "nodeContext" : "String orderBy=ThreadDatabase.TABLE_NAME + \".\" + ThreadDatabase.DATE+ \" DESC\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 362,
    "startColumnNumber" : 66,
    "endLineNumber" : 362,
    "endColumnNumber" : 85
  } ],
  "layoutRelationDataList" : [ ]
}