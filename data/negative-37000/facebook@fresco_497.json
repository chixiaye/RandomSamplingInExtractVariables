{
  "id" : 497,
  "expression" : "mPool.getBucketedSizeForValue(new FakeNativeMemoryChunk(128))",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/memory-types/nativememory/src/test/java/com/facebook/imagepipeline/memory/NativeMemoryChunkPoolTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mPool.getBucketedSizeForValue(new FakeNativeMemoryChunk(128))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 61,
      "startLineNumber" : 84,
      "startColumnNumber" : 29,
      "endLineNumber" : 84,
      "endColumnNumber" : 90
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 91
      },
      "nodeContext" : "Assert.assertEquals(128,mPool.getBucketedSizeForValue(new FakeNativeMemoryChunk(128)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 92
      },
      "nodeContext" : "Assert.assertEquals(128,mPool.getBucketedSizeForValue(new FakeNativeMemoryChunk(128)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 589,
        "startLineNumber" : 81,
        "startColumnNumber" : 44,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Assert.assertEquals(32,mPool.getBucketedSizeForValue(new FakeNativeMemoryChunk(32)));\n  Assert.assertEquals(64,mPool.getBucketedSizeForValue(new FakeNativeMemoryChunk(64)));\n  Assert.assertEquals(128,mPool.getBucketedSizeForValue(new FakeNativeMemoryChunk(128)));\n  Assert.assertEquals(1,mPool.getBucketedSizeForValue(new FakeNativeMemoryChunk(1)));\n  Assert.assertEquals(129,mPool.getBucketedSizeForValue(new FakeNativeMemoryChunk(129)));\n  Assert.assertEquals(31,mPool.getBucketedSizeForValue(new FakeNativeMemoryChunk(31)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 639,
        "startLineNumber" : 80,
        "startColumnNumber" : 2,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testGetBucketedSizeForValue(){\n  Assert.assertEquals(32,mPool.getBucketedSizeForValue(new FakeNativeMemoryChunk(32)));\n  Assert.assertEquals(64,mPool.getBucketedSizeForValue(new FakeNativeMemoryChunk(64)));\n  Assert.assertEquals(128,mPool.getBucketedSizeForValue(new FakeNativeMemoryChunk(128)));\n  Assert.assertEquals(1,mPool.getBucketedSizeForValue(new FakeNativeMemoryChunk(1)));\n  Assert.assertEquals(129,mPool.getBucketedSizeForValue(new FakeNativeMemoryChunk(129)));\n  Assert.assertEquals(31,mPool.getBucketedSizeForValue(new FakeNativeMemoryChunk(31)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 92
      },
      "nodeContext" : "Assert.assertEquals(128,mPool.getBucketedSizeForValue(new FakeNativeMemoryChunk(128)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 61,
    "startLineNumber" : 84,
    "startColumnNumber" : 29,
    "endLineNumber" : 84,
    "endColumnNumber" : 90
  } ],
  "layoutRelationDataList" : [ ]
}