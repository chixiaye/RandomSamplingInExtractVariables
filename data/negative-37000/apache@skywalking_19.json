{
  "id" : 19,
  "expression" : "sql.toString()",
  "projectName" : "apache@skywalking",
  "commitID" : "16b51d55baec4f779f312e07081d1397addbcfe9",
  "filePath" : "/oap-server/server-storage-plugin/storage-jdbc-hikaricp-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/jdbc/h2/dao/H2AggregationQueryDAO.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sql.toString()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 71,
      "startColumnNumber" : 29,
      "endLineNumber" : 71,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 70,
        "startColumnNumber" : 35,
        "endLineNumber" : 71,
        "endColumnNumber" : 79
      },
      "nodeContext" : "h2Client.executeQuery(connection,sql.toString(),conditions.toArray(new Object[0]))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 70,
        "startColumnNumber" : 23,
        "endLineNumber" : 71,
        "endColumnNumber" : 79
      },
      "nodeContext" : "resultSet=h2Client.executeQuery(connection,sql.toString(),conditions.toArray(new Object[0]))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,resources]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 70,
        "startColumnNumber" : 13,
        "endLineNumber" : 71,
        "endColumnNumber" : 79
      },
      "nodeContext" : "ResultSet resultSet=h2Client.executeQuery(connection,sql.toString(),conditions.toArray(new Object[0]))",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 584,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (Connection connection=h2Client.getConnection();ResultSet resultSet=h2Client.executeQuery(connection,sql.toString(),conditions.toArray(new Object[0]))){\n  while (resultSet.next()) {\n    SelectedRecord topNEntity=new SelectedRecord();\n    topNEntity.setId(resultSet.getString(Metrics.ENTITY_ID));\n    topNEntity.setValue(resultSet.getString(\"value\"));\n    topNEntities.add(topNEntity);\n  }\n}\n catch (SQLException e) {\n  throw new IOException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 78,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1553,
        "startLineNumber" : 51,
        "startColumnNumber" : 100,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<Object> conditions=new ArrayList<>(10);\n  StringBuilder sql=buildMetricsValueSql(valueColumnName,metrics.getName());\n  sql.append(Metrics.TIME_BUCKET).append(\" >= ? and \").append(Metrics.TIME_BUCKET).append(\" <= ?\");\n  conditions.add(duration.getStartTimeBucket());\n  conditions.add(duration.getEndTimeBucket());\n  if (additionalConditions != null) {\n    additionalConditions.forEach(condition -> {\n      sql.append(\" and \").append(condition.getKey()).append(\"=?\");\n      conditions.add(condition.getValue());\n    }\n);\n  }\n  sql.append(\" group by \").append(Metrics.ENTITY_ID);\n  sql.append(\")  as T order by value \").append(metrics.getOrder().equals(Order.ASC) ? \"asc\" : \"desc\").append(\" limit \").append(metrics.getTopN());\n  List<SelectedRecord> topNEntities=new ArrayList<>();\n  try (Connection connection=h2Client.getConnection();ResultSet resultSet=h2Client.executeQuery(connection,sql.toString(),conditions.toArray(new Object[0]))){\n    while (resultSet.next()) {\n      SelectedRecord topNEntity=new SelectedRecord();\n      topNEntity.setId(resultSet.getString(Metrics.ENTITY_ID));\n      topNEntity.setValue(resultSet.getString(\"value\"));\n      topNEntities.add(topNEntity);\n    }\n  }\n catch (  SQLException e) {\n    throw new IOException(e);\n  }\n  return topNEntities;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 218,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1879,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public List<SelectedRecord> sortMetrics(final TopNCondition metrics,final String valueColumnName,final Duration duration,List<KeyValue> additionalConditions) throws IOException {\n  List<Object> conditions=new ArrayList<>(10);\n  StringBuilder sql=buildMetricsValueSql(valueColumnName,metrics.getName());\n  sql.append(Metrics.TIME_BUCKET).append(\" >= ? and \").append(Metrics.TIME_BUCKET).append(\" <= ?\");\n  conditions.add(duration.getStartTimeBucket());\n  conditions.add(duration.getEndTimeBucket());\n  if (additionalConditions != null) {\n    additionalConditions.forEach(condition -> {\n      sql.append(\" and \").append(condition.getKey()).append(\"=?\");\n      conditions.add(condition.getValue());\n    }\n);\n  }\n  sql.append(\" group by \").append(Metrics.ENTITY_ID);\n  sql.append(\")  as T order by value \").append(metrics.getOrder().equals(Order.ASC) ? \"asc\" : \"desc\").append(\" limit \").append(metrics.getTopN());\n  List<SelectedRecord> topNEntities=new ArrayList<>();\n  try (Connection connection=h2Client.getConnection();ResultSet resultSet=h2Client.executeQuery(connection,sql.toString(),conditions.toArray(new Object[0]))){\n    while (resultSet.next()) {\n      SelectedRecord topNEntity=new SelectedRecord();\n      topNEntity.setId(resultSet.getString(Metrics.ENTITY_ID));\n      topNEntity.setValue(resultSet.getString(\"value\"));\n      topNEntities.add(topNEntity);\n    }\n  }\n catch (  SQLException e) {\n    throw new IOException(e);\n  }\n  return topNEntities;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 252,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 70,
        "startColumnNumber" : 35,
        "endLineNumber" : 71,
        "endColumnNumber" : 79
      },
      "nodeContext" : "h2Client.executeQuery(connection,sql.toString(),conditions.toArray(new Object[0]))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 71,
    "startColumnNumber" : 29,
    "endLineNumber" : 71,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}