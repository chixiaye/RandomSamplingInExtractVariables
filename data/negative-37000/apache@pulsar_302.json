{
  "id" : 302,
  "expression" : "PULSAR_FUNCTION_METRICS_PREFIX",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-functions/instance/src/main/java/org/apache/pulsar/functions/instance/stats/FunctionStatsManager.java",
  "occurrences" : 30,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 128,
      "startColumnNumber" : 16,
      "endLineNumber" : 128,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 128,
        "startColumnNumber" : 16,
        "endLineNumber" : 128,
        "endColumnNumber" : 77
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 381,
        "startLineNumber" : 127,
        "startColumnNumber" : 41,
        "endLineNumber" : 133,
        "endColumnNumber" : 26
      },
      "nodeContext" : "collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 414,
        "startLineNumber" : 127,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 26
      },
      "nodeContext" : "statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 415,
        "startLineNumber" : 127,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 27
      },
      "nodeContext" : "statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7516,
        "startLineNumber" : 124,
        "startColumnNumber" : 83,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 513,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7728,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public FunctionStatsManager(FunctionCollectorRegistry collectorRegistry,String[] metricsLabels,ScheduledExecutorService scheduledExecutorService){\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 128,
        "startColumnNumber" : 16,
        "endLineNumber" : 128,
        "endColumnNumber" : 77
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 130,
      "startColumnNumber" : 22,
      "endLineNumber" : 130,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 130,
        "startColumnNumber" : 22,
        "endLineNumber" : 130,
        "endColumnNumber" : 83
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 129,
        "startColumnNumber" : 16,
        "endLineNumber" : 130,
        "endColumnNumber" : 84
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 174,
        "startLineNumber" : 129,
        "startColumnNumber" : 16,
        "endLineNumber" : 131,
        "endColumnNumber" : 73
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 221,
        "startLineNumber" : 129,
        "startColumnNumber" : 16,
        "endLineNumber" : 132,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 247,
        "startLineNumber" : 129,
        "startColumnNumber" : 16,
        "endLineNumber" : 133,
        "endColumnNumber" : 25
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 381,
        "startLineNumber" : 127,
        "startColumnNumber" : 41,
        "endLineNumber" : 133,
        "endColumnNumber" : 26
      },
      "nodeContext" : "collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 414,
        "startLineNumber" : 127,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 26
      },
      "nodeContext" : "statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 415,
        "startLineNumber" : 127,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 27
      },
      "nodeContext" : "statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7516,
        "startLineNumber" : 124,
        "startColumnNumber" : 83,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 513,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7728,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public FunctionStatsManager(FunctionCollectorRegistry collectorRegistry,String[] metricsLabels,ScheduledExecutorService scheduledExecutorService){\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 130,
        "startColumnNumber" : 22,
        "endLineNumber" : 130,
        "endColumnNumber" : 83
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 137,
      "startColumnNumber" : 16,
      "endLineNumber" : 137,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 137,
        "startColumnNumber" : 16,
        "endLineNumber" : 137,
        "endColumnNumber" : 72
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 136,
        "startColumnNumber" : 33,
        "endLineNumber" : 142,
        "endColumnNumber" : 26
      },
      "nodeContext" : "collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 383,
        "startLineNumber" : 136,
        "startColumnNumber" : 8,
        "endLineNumber" : 142,
        "endColumnNumber" : 26
      },
      "nodeContext" : "statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 384,
        "startLineNumber" : 136,
        "startColumnNumber" : 8,
        "endLineNumber" : 142,
        "endColumnNumber" : 27
      },
      "nodeContext" : "statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7516,
        "startLineNumber" : 124,
        "startColumnNumber" : 83,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 513,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7728,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public FunctionStatsManager(FunctionCollectorRegistry collectorRegistry,String[] metricsLabels,ScheduledExecutorService scheduledExecutorService){\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 137,
        "startColumnNumber" : 16,
        "endLineNumber" : 137,
        "endColumnNumber" : 72
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 139,
      "startColumnNumber" : 22,
      "endLineNumber" : 139,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 139,
        "startColumnNumber" : 22,
        "endLineNumber" : 139,
        "endColumnNumber" : 78
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 138,
        "startColumnNumber" : 16,
        "endLineNumber" : 139,
        "endColumnNumber" : 79
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 155,
        "startLineNumber" : 138,
        "startColumnNumber" : 16,
        "endLineNumber" : 140,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 138,
        "startColumnNumber" : 16,
        "endLineNumber" : 141,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 228,
        "startLineNumber" : 138,
        "startColumnNumber" : 16,
        "endLineNumber" : 142,
        "endColumnNumber" : 25
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 136,
        "startColumnNumber" : 33,
        "endLineNumber" : 142,
        "endColumnNumber" : 26
      },
      "nodeContext" : "collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 383,
        "startLineNumber" : 136,
        "startColumnNumber" : 8,
        "endLineNumber" : 142,
        "endColumnNumber" : 26
      },
      "nodeContext" : "statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 384,
        "startLineNumber" : 136,
        "startColumnNumber" : 8,
        "endLineNumber" : 142,
        "endColumnNumber" : 27
      },
      "nodeContext" : "statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7516,
        "startLineNumber" : 124,
        "startColumnNumber" : 83,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 513,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7728,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public FunctionStatsManager(FunctionCollectorRegistry collectorRegistry,String[] metricsLabels,ScheduledExecutorService scheduledExecutorService){\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 139,
        "startColumnNumber" : 22,
        "endLineNumber" : 139,
        "endColumnNumber" : 78
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 146,
      "startColumnNumber" : 16,
      "endLineNumber" : 146,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 146,
        "startColumnNumber" : 16,
        "endLineNumber" : 146,
        "endColumnNumber" : 70
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 351,
        "startLineNumber" : 145,
        "startColumnNumber" : 34,
        "endLineNumber" : 151,
        "endColumnNumber" : 26
      },
      "nodeContext" : "collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 377,
        "startLineNumber" : 145,
        "startColumnNumber" : 8,
        "endLineNumber" : 151,
        "endColumnNumber" : 26
      },
      "nodeContext" : "statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 378,
        "startLineNumber" : 145,
        "startColumnNumber" : 8,
        "endLineNumber" : 151,
        "endColumnNumber" : 27
      },
      "nodeContext" : "statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7516,
        "startLineNumber" : 124,
        "startColumnNumber" : 83,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 513,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7728,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public FunctionStatsManager(FunctionCollectorRegistry collectorRegistry,String[] metricsLabels,ScheduledExecutorService scheduledExecutorService){\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 146,
        "startColumnNumber" : 16,
        "endLineNumber" : 146,
        "endColumnNumber" : 70
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 148,
      "startColumnNumber" : 22,
      "endLineNumber" : 148,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 148,
        "startColumnNumber" : 22,
        "endLineNumber" : 148,
        "endColumnNumber" : 76
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 147,
        "startColumnNumber" : 16,
        "endLineNumber" : 148,
        "endColumnNumber" : 77
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 147,
        "startColumnNumber" : 16,
        "endLineNumber" : 149,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 147,
        "startColumnNumber" : 16,
        "endLineNumber" : 150,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 224,
        "startLineNumber" : 147,
        "startColumnNumber" : 16,
        "endLineNumber" : 151,
        "endColumnNumber" : 25
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 351,
        "startLineNumber" : 145,
        "startColumnNumber" : 34,
        "endLineNumber" : 151,
        "endColumnNumber" : 26
      },
      "nodeContext" : "collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 377,
        "startLineNumber" : 145,
        "startColumnNumber" : 8,
        "endLineNumber" : 151,
        "endColumnNumber" : 26
      },
      "nodeContext" : "statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 378,
        "startLineNumber" : 145,
        "startColumnNumber" : 8,
        "endLineNumber" : 151,
        "endColumnNumber" : 27
      },
      "nodeContext" : "statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7516,
        "startLineNumber" : 124,
        "startColumnNumber" : 83,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 513,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7728,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public FunctionStatsManager(FunctionCollectorRegistry collectorRegistry,String[] metricsLabels,ScheduledExecutorService scheduledExecutorService){\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 148,
        "startColumnNumber" : 22,
        "endLineNumber" : 148,
        "endColumnNumber" : 76
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 155,
      "startColumnNumber" : 16,
      "endLineNumber" : 155,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 155,
        "startColumnNumber" : 16,
        "endLineNumber" : 155,
        "endColumnNumber" : 67
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 496,
        "startLineNumber" : 154,
        "startColumnNumber" : 29,
        "endLineNumber" : 164,
        "endColumnNumber" : 26
      },
      "nodeContext" : "collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 38,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 517,
        "startLineNumber" : 154,
        "startColumnNumber" : 8,
        "endLineNumber" : 164,
        "endColumnNumber" : 26
      },
      "nodeContext" : "statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 40,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 518,
        "startLineNumber" : 154,
        "startColumnNumber" : 8,
        "endLineNumber" : 164,
        "endColumnNumber" : 27
      },
      "nodeContext" : "statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 41,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7516,
        "startLineNumber" : 124,
        "startColumnNumber" : 83,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 513,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7728,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public FunctionStatsManager(FunctionCollectorRegistry collectorRegistry,String[] metricsLabels,ScheduledExecutorService scheduledExecutorService){\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 155,
        "startColumnNumber" : 16,
        "endLineNumber" : 155,
        "endColumnNumber" : 67
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 157,
      "startColumnNumber" : 22,
      "endLineNumber" : 157,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 157,
        "startColumnNumber" : 22,
        "endLineNumber" : 157,
        "endColumnNumber" : 73
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 156,
        "startColumnNumber" : 16,
        "endLineNumber" : 157,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 156,
        "startColumnNumber" : 16,
        "endLineNumber" : 158,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 156,
        "startColumnNumber" : 16,
        "endLineNumber" : 159,
        "endColumnNumber" : 36
      },
      "nodeContext" : "Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 222,
        "startLineNumber" : 156,
        "startColumnNumber" : 16,
        "endLineNumber" : 160,
        "endColumnNumber" : 36
      },
      "nodeContext" : "Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 260,
        "startLineNumber" : 156,
        "startColumnNumber" : 16,
        "endLineNumber" : 161,
        "endColumnNumber" : 37
      },
      "nodeContext" : "Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 299,
        "startLineNumber" : 156,
        "startColumnNumber" : 16,
        "endLineNumber" : 162,
        "endColumnNumber" : 38
      },
      "nodeContext" : "Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 27,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 346,
        "startLineNumber" : 156,
        "startColumnNumber" : 16,
        "endLineNumber" : 163,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 30,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 372,
        "startLineNumber" : 156,
        "startColumnNumber" : 16,
        "endLineNumber" : 164,
        "endColumnNumber" : 25
      },
      "nodeContext" : "Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 32,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 496,
        "startLineNumber" : 154,
        "startColumnNumber" : 29,
        "endLineNumber" : 164,
        "endColumnNumber" : 26
      },
      "nodeContext" : "collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 38,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 517,
        "startLineNumber" : 154,
        "startColumnNumber" : 8,
        "endLineNumber" : 164,
        "endColumnNumber" : 26
      },
      "nodeContext" : "statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 40,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 518,
        "startLineNumber" : 154,
        "startColumnNumber" : 8,
        "endLineNumber" : 164,
        "endColumnNumber" : 27
      },
      "nodeContext" : "statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 41,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7516,
        "startLineNumber" : 124,
        "startColumnNumber" : 83,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 513,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7728,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public FunctionStatsManager(FunctionCollectorRegistry collectorRegistry,String[] metricsLabels,ScheduledExecutorService scheduledExecutorService){\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 157,
        "startColumnNumber" : 22,
        "endLineNumber" : 157,
        "endColumnNumber" : 73
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 168,
      "startColumnNumber" : 16,
      "endLineNumber" : 168,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 168,
        "startColumnNumber" : 16,
        "endLineNumber" : 168,
        "endColumnNumber" : 64
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 167,
        "startColumnNumber" : 29,
        "endLineNumber" : 173,
        "endColumnNumber" : 26
      },
      "nodeContext" : "collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 379,
        "startLineNumber" : 167,
        "startColumnNumber" : 8,
        "endLineNumber" : 173,
        "endColumnNumber" : 26
      },
      "nodeContext" : "statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 380,
        "startLineNumber" : 167,
        "startColumnNumber" : 8,
        "endLineNumber" : 173,
        "endColumnNumber" : 27
      },
      "nodeContext" : "statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7516,
        "startLineNumber" : 124,
        "startColumnNumber" : 83,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 513,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7728,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public FunctionStatsManager(FunctionCollectorRegistry collectorRegistry,String[] metricsLabels,ScheduledExecutorService scheduledExecutorService){\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 168,
        "startColumnNumber" : 16,
        "endLineNumber" : 168,
        "endColumnNumber" : 64
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 170,
      "startColumnNumber" : 22,
      "endLineNumber" : 170,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 170,
        "startColumnNumber" : 22,
        "endLineNumber" : 170,
        "endColumnNumber" : 70
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 169,
        "startColumnNumber" : 16,
        "endLineNumber" : 170,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 169,
        "startColumnNumber" : 16,
        "endLineNumber" : 171,
        "endColumnNumber" : 78
      },
      "nodeContext" : "Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 211,
        "startLineNumber" : 169,
        "startColumnNumber" : 16,
        "endLineNumber" : 172,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 237,
        "startLineNumber" : 169,
        "startColumnNumber" : 16,
        "endLineNumber" : 173,
        "endColumnNumber" : 25
      },
      "nodeContext" : "Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 167,
        "startColumnNumber" : 29,
        "endLineNumber" : 173,
        "endColumnNumber" : 26
      },
      "nodeContext" : "collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 379,
        "startLineNumber" : 167,
        "startColumnNumber" : 8,
        "endLineNumber" : 173,
        "endColumnNumber" : 26
      },
      "nodeContext" : "statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 380,
        "startLineNumber" : 167,
        "startColumnNumber" : 8,
        "endLineNumber" : 173,
        "endColumnNumber" : 27
      },
      "nodeContext" : "statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7516,
        "startLineNumber" : 124,
        "startColumnNumber" : 83,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 513,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7728,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public FunctionStatsManager(FunctionCollectorRegistry collectorRegistry,String[] metricsLabels,ScheduledExecutorService scheduledExecutorService){\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 170,
        "startColumnNumber" : 22,
        "endLineNumber" : 170,
        "endColumnNumber" : 70
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 177,
      "startColumnNumber" : 16,
      "endLineNumber" : 177,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 177,
        "startColumnNumber" : 16,
        "endLineNumber" : 177,
        "endColumnNumber" : 63
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 351,
        "startLineNumber" : 176,
        "startColumnNumber" : 35,
        "endLineNumber" : 182,
        "endColumnNumber" : 26
      },
      "nodeContext" : "collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 378,
        "startLineNumber" : 176,
        "startColumnNumber" : 8,
        "endLineNumber" : 182,
        "endColumnNumber" : 26
      },
      "nodeContext" : "statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 379,
        "startLineNumber" : 176,
        "startColumnNumber" : 8,
        "endLineNumber" : 182,
        "endColumnNumber" : 27
      },
      "nodeContext" : "statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7516,
        "startLineNumber" : 124,
        "startColumnNumber" : 83,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 513,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7728,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public FunctionStatsManager(FunctionCollectorRegistry collectorRegistry,String[] metricsLabels,ScheduledExecutorService scheduledExecutorService){\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 177,
        "startColumnNumber" : 16,
        "endLineNumber" : 177,
        "endColumnNumber" : 63
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 179,
      "startColumnNumber" : 22,
      "endLineNumber" : 179,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 179,
        "startColumnNumber" : 22,
        "endLineNumber" : 179,
        "endColumnNumber" : 69
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 178,
        "startColumnNumber" : 16,
        "endLineNumber" : 179,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 158,
        "startLineNumber" : 178,
        "startColumnNumber" : 16,
        "endLineNumber" : 180,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 205,
        "startLineNumber" : 178,
        "startColumnNumber" : 16,
        "endLineNumber" : 181,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 231,
        "startLineNumber" : 178,
        "startColumnNumber" : 16,
        "endLineNumber" : 182,
        "endColumnNumber" : 25
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 351,
        "startLineNumber" : 176,
        "startColumnNumber" : 35,
        "endLineNumber" : 182,
        "endColumnNumber" : 26
      },
      "nodeContext" : "collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 378,
        "startLineNumber" : 176,
        "startColumnNumber" : 8,
        "endLineNumber" : 182,
        "endColumnNumber" : 26
      },
      "nodeContext" : "statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 379,
        "startLineNumber" : 176,
        "startColumnNumber" : 8,
        "endLineNumber" : 182,
        "endColumnNumber" : 27
      },
      "nodeContext" : "statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7516,
        "startLineNumber" : 124,
        "startColumnNumber" : 83,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 513,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7728,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public FunctionStatsManager(FunctionCollectorRegistry collectorRegistry,String[] metricsLabels,ScheduledExecutorService scheduledExecutorService){\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 179,
        "startColumnNumber" : 22,
        "endLineNumber" : 179,
        "endColumnNumber" : 69
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 186,
      "startColumnNumber" : 16,
      "endLineNumber" : 186,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 186,
        "startColumnNumber" : 16,
        "endLineNumber" : 186,
        "endColumnNumber" : 82
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 412,
        "startLineNumber" : 185,
        "startColumnNumber" : 45,
        "endLineNumber" : 191,
        "endColumnNumber" : 26
      },
      "nodeContext" : "collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 449,
        "startLineNumber" : 185,
        "startColumnNumber" : 8,
        "endLineNumber" : 191,
        "endColumnNumber" : 26
      },
      "nodeContext" : "statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 450,
        "startLineNumber" : 185,
        "startColumnNumber" : 8,
        "endLineNumber" : 191,
        "endColumnNumber" : 27
      },
      "nodeContext" : "statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7516,
        "startLineNumber" : 124,
        "startColumnNumber" : 83,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 513,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7728,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public FunctionStatsManager(FunctionCollectorRegistry collectorRegistry,String[] metricsLabels,ScheduledExecutorService scheduledExecutorService){\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 186,
        "startColumnNumber" : 16,
        "endLineNumber" : 186,
        "endColumnNumber" : 82
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 188,
      "startColumnNumber" : 22,
      "endLineNumber" : 188,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 188,
        "startColumnNumber" : 22,
        "endLineNumber" : 188,
        "endColumnNumber" : 88
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 187,
        "startColumnNumber" : 16,
        "endLineNumber" : 188,
        "endColumnNumber" : 89
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 187,
        "startColumnNumber" : 16,
        "endLineNumber" : 189,
        "endColumnNumber" : 94
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 247,
        "startLineNumber" : 187,
        "startColumnNumber" : 16,
        "endLineNumber" : 190,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 273,
        "startLineNumber" : 187,
        "startColumnNumber" : 16,
        "endLineNumber" : 191,
        "endColumnNumber" : 25
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 412,
        "startLineNumber" : 185,
        "startColumnNumber" : 45,
        "endLineNumber" : 191,
        "endColumnNumber" : 26
      },
      "nodeContext" : "collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 449,
        "startLineNumber" : 185,
        "startColumnNumber" : 8,
        "endLineNumber" : 191,
        "endColumnNumber" : 26
      },
      "nodeContext" : "statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 450,
        "startLineNumber" : 185,
        "startColumnNumber" : 8,
        "endLineNumber" : 191,
        "endColumnNumber" : 27
      },
      "nodeContext" : "statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7516,
        "startLineNumber" : 124,
        "startColumnNumber" : 83,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 513,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7728,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public FunctionStatsManager(FunctionCollectorRegistry collectorRegistry,String[] metricsLabels,ScheduledExecutorService scheduledExecutorService){\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 188,
        "startColumnNumber" : 22,
        "endLineNumber" : 188,
        "endColumnNumber" : 88
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 195,
      "startColumnNumber" : 16,
      "endLineNumber" : 195,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 195,
        "startColumnNumber" : 16,
        "endLineNumber" : 195,
        "endColumnNumber" : 77
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 388,
        "startLineNumber" : 194,
        "startColumnNumber" : 37,
        "endLineNumber" : 200,
        "endColumnNumber" : 26
      },
      "nodeContext" : "collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 417,
        "startLineNumber" : 194,
        "startColumnNumber" : 8,
        "endLineNumber" : 200,
        "endColumnNumber" : 26
      },
      "nodeContext" : "statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 418,
        "startLineNumber" : 194,
        "startColumnNumber" : 8,
        "endLineNumber" : 200,
        "endColumnNumber" : 27
      },
      "nodeContext" : "statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7516,
        "startLineNumber" : 124,
        "startColumnNumber" : 83,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 513,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7728,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public FunctionStatsManager(FunctionCollectorRegistry collectorRegistry,String[] metricsLabels,ScheduledExecutorService scheduledExecutorService){\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 195,
        "startColumnNumber" : 16,
        "endLineNumber" : 195,
        "endColumnNumber" : 77
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 197,
      "startColumnNumber" : 22,
      "endLineNumber" : 197,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 197,
        "startColumnNumber" : 22,
        "endLineNumber" : 197,
        "endColumnNumber" : 83
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 196,
        "startColumnNumber" : 16,
        "endLineNumber" : 197,
        "endColumnNumber" : 84
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 196,
        "startColumnNumber" : 16,
        "endLineNumber" : 198,
        "endColumnNumber" : 80
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 228,
        "startLineNumber" : 196,
        "startColumnNumber" : 16,
        "endLineNumber" : 199,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 254,
        "startLineNumber" : 196,
        "startColumnNumber" : 16,
        "endLineNumber" : 200,
        "endColumnNumber" : 25
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 388,
        "startLineNumber" : 194,
        "startColumnNumber" : 37,
        "endLineNumber" : 200,
        "endColumnNumber" : 26
      },
      "nodeContext" : "collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 417,
        "startLineNumber" : 194,
        "startColumnNumber" : 8,
        "endLineNumber" : 200,
        "endColumnNumber" : 26
      },
      "nodeContext" : "statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 418,
        "startLineNumber" : 194,
        "startColumnNumber" : 8,
        "endLineNumber" : 200,
        "endColumnNumber" : 27
      },
      "nodeContext" : "statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7516,
        "startLineNumber" : 124,
        "startColumnNumber" : 83,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 513,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7728,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public FunctionStatsManager(FunctionCollectorRegistry collectorRegistry,String[] metricsLabels,ScheduledExecutorService scheduledExecutorService){\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 197,
        "startColumnNumber" : 22,
        "endLineNumber" : 197,
        "endColumnNumber" : 83
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 204,
      "startColumnNumber" : 16,
      "endLineNumber" : 204,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 204,
        "startColumnNumber" : 16,
        "endLineNumber" : 204,
        "endColumnNumber" : 75
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 382,
        "startLineNumber" : 203,
        "startColumnNumber" : 38,
        "endLineNumber" : 209,
        "endColumnNumber" : 26
      },
      "nodeContext" : "collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 412,
        "startLineNumber" : 203,
        "startColumnNumber" : 8,
        "endLineNumber" : 209,
        "endColumnNumber" : 26
      },
      "nodeContext" : "statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 413,
        "startLineNumber" : 203,
        "startColumnNumber" : 8,
        "endLineNumber" : 209,
        "endColumnNumber" : 27
      },
      "nodeContext" : "statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7516,
        "startLineNumber" : 124,
        "startColumnNumber" : 83,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 513,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7728,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public FunctionStatsManager(FunctionCollectorRegistry collectorRegistry,String[] metricsLabels,ScheduledExecutorService scheduledExecutorService){\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 204,
        "startColumnNumber" : 16,
        "endLineNumber" : 204,
        "endColumnNumber" : 75
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 206,
      "startColumnNumber" : 22,
      "endLineNumber" : 206,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 206,
        "startColumnNumber" : 22,
        "endLineNumber" : 206,
        "endColumnNumber" : 81
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 205,
        "startColumnNumber" : 16,
        "endLineNumber" : 206,
        "endColumnNumber" : 82
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 205,
        "startColumnNumber" : 16,
        "endLineNumber" : 207,
        "endColumnNumber" : 78
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 224,
        "startLineNumber" : 205,
        "startColumnNumber" : 16,
        "endLineNumber" : 208,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 250,
        "startLineNumber" : 205,
        "startColumnNumber" : 16,
        "endLineNumber" : 209,
        "endColumnNumber" : 25
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 382,
        "startLineNumber" : 203,
        "startColumnNumber" : 38,
        "endLineNumber" : 209,
        "endColumnNumber" : 26
      },
      "nodeContext" : "collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 412,
        "startLineNumber" : 203,
        "startColumnNumber" : 8,
        "endLineNumber" : 209,
        "endColumnNumber" : 26
      },
      "nodeContext" : "statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 413,
        "startLineNumber" : 203,
        "startColumnNumber" : 8,
        "endLineNumber" : 209,
        "endColumnNumber" : 27
      },
      "nodeContext" : "statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7516,
        "startLineNumber" : 124,
        "startColumnNumber" : 83,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 513,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7728,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public FunctionStatsManager(FunctionCollectorRegistry collectorRegistry,String[] metricsLabels,ScheduledExecutorService scheduledExecutorService){\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 206,
        "startColumnNumber" : 22,
        "endLineNumber" : 206,
        "endColumnNumber" : 81
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 213,
      "startColumnNumber" : 16,
      "endLineNumber" : 213,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 213,
        "startColumnNumber" : 16,
        "endLineNumber" : 213,
        "endColumnNumber" : 72
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 527,
        "startLineNumber" : 212,
        "startColumnNumber" : 33,
        "endLineNumber" : 222,
        "endColumnNumber" : 26
      },
      "nodeContext" : "collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 38,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 552,
        "startLineNumber" : 212,
        "startColumnNumber" : 8,
        "endLineNumber" : 222,
        "endColumnNumber" : 26
      },
      "nodeContext" : "statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 40,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 553,
        "startLineNumber" : 212,
        "startColumnNumber" : 8,
        "endLineNumber" : 222,
        "endColumnNumber" : 27
      },
      "nodeContext" : "statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 41,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7516,
        "startLineNumber" : 124,
        "startColumnNumber" : 83,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 513,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7728,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public FunctionStatsManager(FunctionCollectorRegistry collectorRegistry,String[] metricsLabels,ScheduledExecutorService scheduledExecutorService){\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 213,
        "startColumnNumber" : 16,
        "endLineNumber" : 213,
        "endColumnNumber" : 72
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 215,
      "startColumnNumber" : 22,
      "endLineNumber" : 215,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 215,
        "startColumnNumber" : 22,
        "endLineNumber" : 215,
        "endColumnNumber" : 78
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 214,
        "startColumnNumber" : 16,
        "endLineNumber" : 215,
        "endColumnNumber" : 79
      },
      "nodeContext" : "Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 174,
        "startLineNumber" : 214,
        "startColumnNumber" : 16,
        "endLineNumber" : 216,
        "endColumnNumber" : 78
      },
      "nodeContext" : "Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 211,
        "startLineNumber" : 214,
        "startColumnNumber" : 16,
        "endLineNumber" : 217,
        "endColumnNumber" : 36
      },
      "nodeContext" : "Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 248,
        "startLineNumber" : 214,
        "startColumnNumber" : 16,
        "endLineNumber" : 218,
        "endColumnNumber" : 36
      },
      "nodeContext" : "Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 286,
        "startLineNumber" : 214,
        "startColumnNumber" : 16,
        "endLineNumber" : 219,
        "endColumnNumber" : 37
      },
      "nodeContext" : "Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 325,
        "startLineNumber" : 214,
        "startColumnNumber" : 16,
        "endLineNumber" : 220,
        "endColumnNumber" : 38
      },
      "nodeContext" : "Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 27,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 372,
        "startLineNumber" : 214,
        "startColumnNumber" : 16,
        "endLineNumber" : 221,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 30,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 398,
        "startLineNumber" : 214,
        "startColumnNumber" : 16,
        "endLineNumber" : 222,
        "endColumnNumber" : 25
      },
      "nodeContext" : "Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 32,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 527,
        "startLineNumber" : 212,
        "startColumnNumber" : 33,
        "endLineNumber" : 222,
        "endColumnNumber" : 26
      },
      "nodeContext" : "collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 38,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 552,
        "startLineNumber" : 212,
        "startColumnNumber" : 8,
        "endLineNumber" : 222,
        "endColumnNumber" : 26
      },
      "nodeContext" : "statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 40,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 553,
        "startLineNumber" : 212,
        "startColumnNumber" : 8,
        "endLineNumber" : 222,
        "endColumnNumber" : 27
      },
      "nodeContext" : "statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 41,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7516,
        "startLineNumber" : 124,
        "startColumnNumber" : 83,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 513,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7728,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public FunctionStatsManager(FunctionCollectorRegistry collectorRegistry,String[] metricsLabels,ScheduledExecutorService scheduledExecutorService){\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 215,
        "startColumnNumber" : 22,
        "endLineNumber" : 215,
        "endColumnNumber" : 78
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 226,
      "startColumnNumber" : 16,
      "endLineNumber" : 226,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 226,
        "startColumnNumber" : 16,
        "endLineNumber" : 226,
        "endColumnNumber" : 68
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 382,
        "startLineNumber" : 225,
        "startColumnNumber" : 39,
        "endLineNumber" : 231,
        "endColumnNumber" : 26
      },
      "nodeContext" : "collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 413,
        "startLineNumber" : 225,
        "startColumnNumber" : 8,
        "endLineNumber" : 231,
        "endColumnNumber" : 26
      },
      "nodeContext" : "statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 414,
        "startLineNumber" : 225,
        "startColumnNumber" : 8,
        "endLineNumber" : 231,
        "endColumnNumber" : 27
      },
      "nodeContext" : "statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7516,
        "startLineNumber" : 124,
        "startColumnNumber" : 83,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 513,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7728,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public FunctionStatsManager(FunctionCollectorRegistry collectorRegistry,String[] metricsLabels,ScheduledExecutorService scheduledExecutorService){\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 226,
        "startColumnNumber" : 16,
        "endLineNumber" : 226,
        "endColumnNumber" : 68
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 228,
      "startColumnNumber" : 22,
      "endLineNumber" : 228,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 228,
        "startColumnNumber" : 22,
        "endLineNumber" : 228,
        "endColumnNumber" : 74
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 227,
        "startColumnNumber" : 16,
        "endLineNumber" : 228,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 227,
        "startColumnNumber" : 16,
        "endLineNumber" : 229,
        "endColumnNumber" : 92
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 231,
        "startLineNumber" : 227,
        "startColumnNumber" : 16,
        "endLineNumber" : 230,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 257,
        "startLineNumber" : 227,
        "startColumnNumber" : 16,
        "endLineNumber" : 231,
        "endColumnNumber" : 25
      },
      "nodeContext" : "Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 382,
        "startLineNumber" : 225,
        "startColumnNumber" : 39,
        "endLineNumber" : 231,
        "endColumnNumber" : 26
      },
      "nodeContext" : "collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 413,
        "startLineNumber" : 225,
        "startColumnNumber" : 8,
        "endLineNumber" : 231,
        "endColumnNumber" : 26
      },
      "nodeContext" : "statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 414,
        "startLineNumber" : 225,
        "startColumnNumber" : 8,
        "endLineNumber" : 231,
        "endColumnNumber" : 27
      },
      "nodeContext" : "statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7516,
        "startLineNumber" : 124,
        "startColumnNumber" : 83,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 513,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7728,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public FunctionStatsManager(FunctionCollectorRegistry collectorRegistry,String[] metricsLabels,ScheduledExecutorService scheduledExecutorService){\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 228,
        "startColumnNumber" : 22,
        "endLineNumber" : 228,
        "endColumnNumber" : 74
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 235,
      "startColumnNumber" : 16,
      "endLineNumber" : 235,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 235,
        "startColumnNumber" : 16,
        "endLineNumber" : 235,
        "endColumnNumber" : 65
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 341,
        "startLineNumber" : 234,
        "startColumnNumber" : 25,
        "endLineNumber" : 240,
        "endColumnNumber" : 26
      },
      "nodeContext" : "collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 234,
        "startColumnNumber" : 8,
        "endLineNumber" : 240,
        "endColumnNumber" : 26
      },
      "nodeContext" : "userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 359,
        "startLineNumber" : 234,
        "startColumnNumber" : 8,
        "endLineNumber" : 240,
        "endColumnNumber" : 27
      },
      "nodeContext" : "userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7516,
        "startLineNumber" : 124,
        "startColumnNumber" : 83,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 513,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7728,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public FunctionStatsManager(FunctionCollectorRegistry collectorRegistry,String[] metricsLabels,ScheduledExecutorService scheduledExecutorService){\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 235,
        "startColumnNumber" : 16,
        "endLineNumber" : 235,
        "endColumnNumber" : 65
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 237,
      "startColumnNumber" : 22,
      "endLineNumber" : 237,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 237,
        "startColumnNumber" : 22,
        "endLineNumber" : 237,
        "endColumnNumber" : 71
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 236,
        "startColumnNumber" : 16,
        "endLineNumber" : 237,
        "endColumnNumber" : 72
      },
      "nodeContext" : "Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 236,
        "startColumnNumber" : 16,
        "endLineNumber" : 238,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 193,
        "startLineNumber" : 236,
        "startColumnNumber" : 16,
        "endLineNumber" : 239,
        "endColumnNumber" : 50
      },
      "nodeContext" : "Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 219,
        "startLineNumber" : 236,
        "startColumnNumber" : 16,
        "endLineNumber" : 240,
        "endColumnNumber" : 25
      },
      "nodeContext" : "Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 341,
        "startLineNumber" : 234,
        "startColumnNumber" : 25,
        "endLineNumber" : 240,
        "endColumnNumber" : 26
      },
      "nodeContext" : "collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 234,
        "startColumnNumber" : 8,
        "endLineNumber" : 240,
        "endColumnNumber" : 26
      },
      "nodeContext" : "userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 359,
        "startLineNumber" : 234,
        "startColumnNumber" : 8,
        "endLineNumber" : 240,
        "endColumnNumber" : 27
      },
      "nodeContext" : "userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7516,
        "startLineNumber" : 124,
        "startColumnNumber" : 83,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 513,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7728,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public FunctionStatsManager(FunctionCollectorRegistry collectorRegistry,String[] metricsLabels,ScheduledExecutorService scheduledExecutorService){\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 237,
        "startColumnNumber" : 22,
        "endLineNumber" : 237,
        "endColumnNumber" : 71
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 242,
      "startColumnNumber" : 16,
      "endLineNumber" : 242,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 242,
        "startColumnNumber" : 16,
        "endLineNumber" : 242,
        "endColumnNumber" : 67
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 347,
        "startLineNumber" : 241,
        "startColumnNumber" : 24,
        "endLineNumber" : 247,
        "endColumnNumber" : 26
      },
      "nodeContext" : "collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 363,
        "startLineNumber" : 241,
        "startColumnNumber" : 8,
        "endLineNumber" : 247,
        "endColumnNumber" : 26
      },
      "nodeContext" : "sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 364,
        "startLineNumber" : 241,
        "startColumnNumber" : 8,
        "endLineNumber" : 247,
        "endColumnNumber" : 27
      },
      "nodeContext" : "sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7516,
        "startLineNumber" : 124,
        "startColumnNumber" : 83,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 513,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7728,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public FunctionStatsManager(FunctionCollectorRegistry collectorRegistry,String[] metricsLabels,ScheduledExecutorService scheduledExecutorService){\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 242,
        "startColumnNumber" : 16,
        "endLineNumber" : 242,
        "endColumnNumber" : 67
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 244,
      "startColumnNumber" : 22,
      "endLineNumber" : 244,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 244,
        "startColumnNumber" : 22,
        "endLineNumber" : 244,
        "endColumnNumber" : 73
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 243,
        "startColumnNumber" : 16,
        "endLineNumber" : 244,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 243,
        "startColumnNumber" : 16,
        "endLineNumber" : 245,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 243,
        "startColumnNumber" : 16,
        "endLineNumber" : 246,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 223,
        "startLineNumber" : 243,
        "startColumnNumber" : 16,
        "endLineNumber" : 247,
        "endColumnNumber" : 25
      },
      "nodeContext" : "Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 347,
        "startLineNumber" : 241,
        "startColumnNumber" : 24,
        "endLineNumber" : 247,
        "endColumnNumber" : 26
      },
      "nodeContext" : "collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 363,
        "startLineNumber" : 241,
        "startColumnNumber" : 8,
        "endLineNumber" : 247,
        "endColumnNumber" : 26
      },
      "nodeContext" : "sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 364,
        "startLineNumber" : 241,
        "startColumnNumber" : 8,
        "endLineNumber" : 247,
        "endColumnNumber" : 27
      },
      "nodeContext" : "sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7516,
        "startLineNumber" : 124,
        "startColumnNumber" : 83,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 513,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7728,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public FunctionStatsManager(FunctionCollectorRegistry collectorRegistry,String[] metricsLabels,ScheduledExecutorService scheduledExecutorService){\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 244,
        "startColumnNumber" : 22,
        "endLineNumber" : 244,
        "endColumnNumber" : 73
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 250,
      "startColumnNumber" : 16,
      "endLineNumber" : 250,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 250,
        "startColumnNumber" : 16,
        "endLineNumber" : 250,
        "endColumnNumber" : 67
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 342,
        "startLineNumber" : 249,
        "startColumnNumber" : 27,
        "endLineNumber" : 255,
        "endColumnNumber" : 26
      },
      "nodeContext" : "collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 361,
        "startLineNumber" : 249,
        "startColumnNumber" : 8,
        "endLineNumber" : 255,
        "endColumnNumber" : 26
      },
      "nodeContext" : "sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 362,
        "startLineNumber" : 249,
        "startColumnNumber" : 8,
        "endLineNumber" : 255,
        "endColumnNumber" : 27
      },
      "nodeContext" : "sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7516,
        "startLineNumber" : 124,
        "startColumnNumber" : 83,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 513,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7728,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public FunctionStatsManager(FunctionCollectorRegistry collectorRegistry,String[] metricsLabels,ScheduledExecutorService scheduledExecutorService){\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 250,
        "startColumnNumber" : 16,
        "endLineNumber" : 250,
        "endColumnNumber" : 67
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 252,
      "startColumnNumber" : 22,
      "endLineNumber" : 252,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 252,
        "startColumnNumber" : 22,
        "endLineNumber" : 252,
        "endColumnNumber" : 73
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 251,
        "startColumnNumber" : 16,
        "endLineNumber" : 252,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 251,
        "startColumnNumber" : 16,
        "endLineNumber" : 253,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 192,
        "startLineNumber" : 251,
        "startColumnNumber" : 16,
        "endLineNumber" : 254,
        "endColumnNumber" : 47
      },
      "nodeContext" : "Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 218,
        "startLineNumber" : 251,
        "startColumnNumber" : 16,
        "endLineNumber" : 255,
        "endColumnNumber" : 25
      },
      "nodeContext" : "Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 342,
        "startLineNumber" : 249,
        "startColumnNumber" : 27,
        "endLineNumber" : 255,
        "endColumnNumber" : 26
      },
      "nodeContext" : "collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 361,
        "startLineNumber" : 249,
        "startColumnNumber" : 8,
        "endLineNumber" : 255,
        "endColumnNumber" : 26
      },
      "nodeContext" : "sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 362,
        "startLineNumber" : 249,
        "startColumnNumber" : 8,
        "endLineNumber" : 255,
        "endColumnNumber" : 27
      },
      "nodeContext" : "sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7516,
        "startLineNumber" : 124,
        "startColumnNumber" : 83,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 513,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7728,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public FunctionStatsManager(FunctionCollectorRegistry collectorRegistry,String[] metricsLabels,ScheduledExecutorService scheduledExecutorService){\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 252,
        "startColumnNumber" : 22,
        "endLineNumber" : 252,
        "endColumnNumber" : 73
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 258,
      "startColumnNumber" : 16,
      "endLineNumber" : 258,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 258,
        "startColumnNumber" : 16,
        "endLineNumber" : 258,
        "endColumnNumber" : 65
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 336,
        "startLineNumber" : 257,
        "startColumnNumber" : 25,
        "endLineNumber" : 263,
        "endColumnNumber" : 26
      },
      "nodeContext" : "collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 353,
        "startLineNumber" : 257,
        "startColumnNumber" : 8,
        "endLineNumber" : 263,
        "endColumnNumber" : 26
      },
      "nodeContext" : "sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 354,
        "startLineNumber" : 257,
        "startColumnNumber" : 8,
        "endLineNumber" : 263,
        "endColumnNumber" : 27
      },
      "nodeContext" : "sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7516,
        "startLineNumber" : 124,
        "startColumnNumber" : 83,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 513,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7728,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public FunctionStatsManager(FunctionCollectorRegistry collectorRegistry,String[] metricsLabels,ScheduledExecutorService scheduledExecutorService){\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 258,
        "startColumnNumber" : 16,
        "endLineNumber" : 258,
        "endColumnNumber" : 65
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 260,
      "startColumnNumber" : 22,
      "endLineNumber" : 260,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 260,
        "startColumnNumber" : 22,
        "endLineNumber" : 260,
        "endColumnNumber" : 71
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 259,
        "startColumnNumber" : 16,
        "endLineNumber" : 260,
        "endColumnNumber" : 72
      },
      "nodeContext" : "Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 259,
        "startColumnNumber" : 16,
        "endLineNumber" : 261,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 188,
        "startLineNumber" : 259,
        "startColumnNumber" : 16,
        "endLineNumber" : 262,
        "endColumnNumber" : 45
      },
      "nodeContext" : "Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 214,
        "startLineNumber" : 259,
        "startColumnNumber" : 16,
        "endLineNumber" : 263,
        "endColumnNumber" : 25
      },
      "nodeContext" : "Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 336,
        "startLineNumber" : 257,
        "startColumnNumber" : 25,
        "endLineNumber" : 263,
        "endColumnNumber" : 26
      },
      "nodeContext" : "collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 353,
        "startLineNumber" : 257,
        "startColumnNumber" : 8,
        "endLineNumber" : 263,
        "endColumnNumber" : 26
      },
      "nodeContext" : "sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 354,
        "startLineNumber" : 257,
        "startColumnNumber" : 8,
        "endLineNumber" : 263,
        "endColumnNumber" : 27
      },
      "nodeContext" : "sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7516,
        "startLineNumber" : 124,
        "startColumnNumber" : 83,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 513,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7728,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public FunctionStatsManager(FunctionCollectorRegistry collectorRegistry,String[] metricsLabels,ScheduledExecutorService scheduledExecutorService){\n  super(collectorRegistry,metricsLabels,scheduledExecutorService);\n  statTotalProcessedSuccessfully=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL).help(\"Total number of messages processed successfully.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully=statTotalProcessedSuccessfully.labels(metricsLabels);\n  statTotalSysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL).help(\"Total number of system exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions=statTotalSysExceptions.labels(metricsLabels);\n  statTotalUserExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL).help(\"Total number of user exceptions.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions=statTotalUserExceptions.labels(metricsLabels);\n  statProcessLatency=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS).help(\"Process latency in milliseconds.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency=statProcessLatency.labels(metricsLabels);\n  statlastInvocation=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION,Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + LAST_INVOCATION).help(\"The timestamp of the last invocation of the function.\").labelNames(metricsLabelNames).create());\n  _statlastInvocation=statlastInvocation.labels(metricsLabels);\n  statTotalRecordsReceived=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL).help(\"Total number of messages received from source.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived=statTotalRecordsReceived.labels(metricsLabels);\n  statTotalProcessedSuccessfully1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESSED_SUCCESSFULLY_TOTAL_1min).help(\"Total number of messages processed successfully in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalProcessedSuccessfully1min=statTotalProcessedSuccessfully1min.labels(metricsLabels);\n  statTotalSysExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + SYSTEM_EXCEPTIONS_TOTAL_1min).help(\"Total number of system exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalSysExceptions1min=statTotalSysExceptions1min.labels(metricsLabels);\n  statTotalUserExceptions1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + USER_EXCEPTIONS_TOTAL_1min).help(\"Total number of user exceptions in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalUserExceptions1min=statTotalUserExceptions1min.labels(metricsLabels);\n  statProcessLatency1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min,Summary.build().name(PULSAR_FUNCTION_METRICS_PREFIX + PROCESS_LATENCY_MS_1min).help(\"Process latency in milliseconds in the last 1 minute.\").quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).labelNames(metricsLabelNames).create());\n  _statProcessLatency1min=statProcessLatency1min.labels(metricsLabels);\n  statTotalRecordsReceived1min=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min,Counter.build().name(PULSAR_FUNCTION_METRICS_PREFIX + RECEIVED_TOTAL_1min).help(\"Total number of messages received from source in the last 1 minute.\").labelNames(metricsLabelNames).create());\n  _statTotalRecordsReceived1min=statTotalRecordsReceived1min.labels(metricsLabels);\n  userExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"user_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from user code.\").create());\n  sysExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"system_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from system code.\").create());\n  sourceExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"source_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from source.\").create());\n  sinkExceptions=collectorRegistry.registerIfNotExist(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\",Gauge.build().name(PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\").labelNames(exceptionMetricsLabelNames).help(\"Exception from sink.\").create());\n  userExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n  sysExceptionRateLimiter=new RateLimiter(scheduledExecutorService,5,1,TimeUnit.MINUTES);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 530,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 260,
        "startColumnNumber" : 22,
        "endLineNumber" : 260,
        "endColumnNumber" : 71
      },
      "nodeContext" : "PULSAR_FUNCTION_METRICS_PREFIX + \"sink_exception\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 128,
    "startColumnNumber" : 16,
    "endLineNumber" : 128,
    "endColumnNumber" : 46
  }, {
    "charLength" : 30,
    "startLineNumber" : 130,
    "startColumnNumber" : 22,
    "endLineNumber" : 130,
    "endColumnNumber" : 52
  }, {
    "charLength" : 30,
    "startLineNumber" : 137,
    "startColumnNumber" : 16,
    "endLineNumber" : 137,
    "endColumnNumber" : 46
  }, {
    "charLength" : 30,
    "startLineNumber" : 139,
    "startColumnNumber" : 22,
    "endLineNumber" : 139,
    "endColumnNumber" : 52
  }, {
    "charLength" : 30,
    "startLineNumber" : 146,
    "startColumnNumber" : 16,
    "endLineNumber" : 146,
    "endColumnNumber" : 46
  }, {
    "charLength" : 30,
    "startLineNumber" : 148,
    "startColumnNumber" : 22,
    "endLineNumber" : 148,
    "endColumnNumber" : 52
  }, {
    "charLength" : 30,
    "startLineNumber" : 155,
    "startColumnNumber" : 16,
    "endLineNumber" : 155,
    "endColumnNumber" : 46
  }, {
    "charLength" : 30,
    "startLineNumber" : 157,
    "startColumnNumber" : 22,
    "endLineNumber" : 157,
    "endColumnNumber" : 52
  }, {
    "charLength" : 30,
    "startLineNumber" : 168,
    "startColumnNumber" : 16,
    "endLineNumber" : 168,
    "endColumnNumber" : 46
  }, {
    "charLength" : 30,
    "startLineNumber" : 170,
    "startColumnNumber" : 22,
    "endLineNumber" : 170,
    "endColumnNumber" : 52
  }, {
    "charLength" : 30,
    "startLineNumber" : 177,
    "startColumnNumber" : 16,
    "endLineNumber" : 177,
    "endColumnNumber" : 46
  }, {
    "charLength" : 30,
    "startLineNumber" : 179,
    "startColumnNumber" : 22,
    "endLineNumber" : 179,
    "endColumnNumber" : 52
  }, {
    "charLength" : 30,
    "startLineNumber" : 186,
    "startColumnNumber" : 16,
    "endLineNumber" : 186,
    "endColumnNumber" : 46
  }, {
    "charLength" : 30,
    "startLineNumber" : 188,
    "startColumnNumber" : 22,
    "endLineNumber" : 188,
    "endColumnNumber" : 52
  }, {
    "charLength" : 30,
    "startLineNumber" : 195,
    "startColumnNumber" : 16,
    "endLineNumber" : 195,
    "endColumnNumber" : 46
  }, {
    "charLength" : 30,
    "startLineNumber" : 197,
    "startColumnNumber" : 22,
    "endLineNumber" : 197,
    "endColumnNumber" : 52
  }, {
    "charLength" : 30,
    "startLineNumber" : 204,
    "startColumnNumber" : 16,
    "endLineNumber" : 204,
    "endColumnNumber" : 46
  }, {
    "charLength" : 30,
    "startLineNumber" : 206,
    "startColumnNumber" : 22,
    "endLineNumber" : 206,
    "endColumnNumber" : 52
  }, {
    "charLength" : 30,
    "startLineNumber" : 213,
    "startColumnNumber" : 16,
    "endLineNumber" : 213,
    "endColumnNumber" : 46
  }, {
    "charLength" : 30,
    "startLineNumber" : 215,
    "startColumnNumber" : 22,
    "endLineNumber" : 215,
    "endColumnNumber" : 52
  }, {
    "charLength" : 30,
    "startLineNumber" : 226,
    "startColumnNumber" : 16,
    "endLineNumber" : 226,
    "endColumnNumber" : 46
  }, {
    "charLength" : 30,
    "startLineNumber" : 228,
    "startColumnNumber" : 22,
    "endLineNumber" : 228,
    "endColumnNumber" : 52
  }, {
    "charLength" : 30,
    "startLineNumber" : 235,
    "startColumnNumber" : 16,
    "endLineNumber" : 235,
    "endColumnNumber" : 46
  }, {
    "charLength" : 30,
    "startLineNumber" : 237,
    "startColumnNumber" : 22,
    "endLineNumber" : 237,
    "endColumnNumber" : 52
  }, {
    "charLength" : 30,
    "startLineNumber" : 242,
    "startColumnNumber" : 16,
    "endLineNumber" : 242,
    "endColumnNumber" : 46
  }, {
    "charLength" : 30,
    "startLineNumber" : 244,
    "startColumnNumber" : 22,
    "endLineNumber" : 244,
    "endColumnNumber" : 52
  }, {
    "charLength" : 30,
    "startLineNumber" : 250,
    "startColumnNumber" : 16,
    "endLineNumber" : 250,
    "endColumnNumber" : 46
  }, {
    "charLength" : 30,
    "startLineNumber" : 252,
    "startColumnNumber" : 22,
    "endLineNumber" : 252,
    "endColumnNumber" : 52
  }, {
    "charLength" : 30,
    "startLineNumber" : 258,
    "startColumnNumber" : 16,
    "endLineNumber" : 258,
    "endColumnNumber" : 46
  }, {
    "charLength" : 30,
    "startLineNumber" : 260,
    "startColumnNumber" : 22,
    "endLineNumber" : 260,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 10,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 11,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 12,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 13,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 14,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 15,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 16,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 17,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 18,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 19,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 20,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 21,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 22,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 23,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 24,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 25,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 26,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 27,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 28,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 29,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 10,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 11,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 12,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 13,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 14,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 15,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 16,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 17,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 18,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 19,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 20,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 21,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 22,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 23,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 24,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 25,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 26,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 27,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 28,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 29,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 10,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 11,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 12,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 13,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 14,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 15,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 16,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 17,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 18,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 19,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 20,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 21,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 22,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 23,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 24,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 25,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 26,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 27,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 28,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 29,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 1
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 12
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 12
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 12
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 12
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 12
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 12
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 9
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 12
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 12
  }, {
    "firstKey" : 7,
    "secondKey" : 10,
    "layout" : 12
  }, {
    "firstKey" : 7,
    "secondKey" : 11,
    "layout" : 12
  }, {
    "firstKey" : 7,
    "secondKey" : 12,
    "layout" : 12
  }, {
    "firstKey" : 7,
    "secondKey" : 13,
    "layout" : 12
  }, {
    "firstKey" : 7,
    "secondKey" : 14,
    "layout" : 12
  }, {
    "firstKey" : 7,
    "secondKey" : 15,
    "layout" : 12
  }, {
    "firstKey" : 7,
    "secondKey" : 16,
    "layout" : 12
  }, {
    "firstKey" : 7,
    "secondKey" : 17,
    "layout" : 12
  }, {
    "firstKey" : 7,
    "secondKey" : 18,
    "layout" : 12
  }, {
    "firstKey" : 7,
    "secondKey" : 19,
    "layout" : 12
  }, {
    "firstKey" : 7,
    "secondKey" : 20,
    "layout" : 12
  }, {
    "firstKey" : 7,
    "secondKey" : 21,
    "layout" : 12
  }, {
    "firstKey" : 7,
    "secondKey" : 22,
    "layout" : 12
  }, {
    "firstKey" : 7,
    "secondKey" : 23,
    "layout" : 12
  }, {
    "firstKey" : 7,
    "secondKey" : 24,
    "layout" : 12
  }, {
    "firstKey" : 7,
    "secondKey" : 25,
    "layout" : 12
  }, {
    "firstKey" : 7,
    "secondKey" : 26,
    "layout" : 12
  }, {
    "firstKey" : 7,
    "secondKey" : 27,
    "layout" : 12
  }, {
    "firstKey" : 7,
    "secondKey" : 28,
    "layout" : 12
  }, {
    "firstKey" : 7,
    "secondKey" : 29,
    "layout" : 12
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 1
  }, {
    "firstKey" : 8,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 10,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 11,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 12,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 13,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 14,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 15,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 16,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 17,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 18,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 19,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 20,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 21,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 22,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 23,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 24,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 25,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 26,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 27,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 28,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 29,
    "layout" : 8
  }, {
    "firstKey" : 10,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 11,
    "layout" : 1
  }, {
    "firstKey" : 10,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 8,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 9,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 11,
    "secondKey" : 12,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 13,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 14,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 15,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 16,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 17,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 18,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 19,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 20,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 21,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 22,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 23,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 24,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 25,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 26,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 27,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 28,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 29,
    "layout" : 8
  }, {
    "firstKey" : 12,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 13,
    "layout" : 1
  }, {
    "firstKey" : 12,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 12,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 13,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 8,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 9,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 10,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 11,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 12,
    "layout" : 5
  }, {
    "firstKey" : 13,
    "secondKey" : 14,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 15,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 16,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 17,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 18,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 19,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 20,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 21,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 22,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 23,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 24,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 25,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 26,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 27,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 28,
    "layout" : 8
  }, {
    "firstKey" : 13,
    "secondKey" : 29,
    "layout" : 8
  }, {
    "firstKey" : 14,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 15,
    "layout" : 1
  }, {
    "firstKey" : 14,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 14,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 15,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 15,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 15,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 15,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 15,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 15,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 15,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 15,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 15,
    "secondKey" : 8,
    "layout" : 8
  }, {
    "firstKey" : 15,
    "secondKey" : 9,
    "layout" : 8
  }, {
    "firstKey" : 15,
    "secondKey" : 10,
    "layout" : 8
  }, {
    "firstKey" : 15,
    "secondKey" : 11,
    "layout" : 8
  }, {
    "firstKey" : 15,
    "secondKey" : 12,
    "layout" : 8
  }, {
    "firstKey" : 15,
    "secondKey" : 13,
    "layout" : 8
  }, {
    "firstKey" : 15,
    "secondKey" : 14,
    "layout" : 5
  }, {
    "firstKey" : 15,
    "secondKey" : 16,
    "layout" : 8
  }, {
    "firstKey" : 15,
    "secondKey" : 17,
    "layout" : 8
  }, {
    "firstKey" : 15,
    "secondKey" : 18,
    "layout" : 8
  }, {
    "firstKey" : 15,
    "secondKey" : 19,
    "layout" : 8
  }, {
    "firstKey" : 15,
    "secondKey" : 20,
    "layout" : 8
  }, {
    "firstKey" : 15,
    "secondKey" : 21,
    "layout" : 8
  }, {
    "firstKey" : 15,
    "secondKey" : 22,
    "layout" : 8
  }, {
    "firstKey" : 15,
    "secondKey" : 23,
    "layout" : 8
  }, {
    "firstKey" : 15,
    "secondKey" : 24,
    "layout" : 8
  }, {
    "firstKey" : 15,
    "secondKey" : 25,
    "layout" : 8
  }, {
    "firstKey" : 15,
    "secondKey" : 26,
    "layout" : 8
  }, {
    "firstKey" : 15,
    "secondKey" : 27,
    "layout" : 8
  }, {
    "firstKey" : 15,
    "secondKey" : 28,
    "layout" : 8
  }, {
    "firstKey" : 15,
    "secondKey" : 29,
    "layout" : 8
  }, {
    "firstKey" : 16,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 17,
    "layout" : 1
  }, {
    "firstKey" : 16,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 16,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 17,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 17,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 17,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 17,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 17,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 17,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 17,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 17,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 17,
    "secondKey" : 8,
    "layout" : 8
  }, {
    "firstKey" : 17,
    "secondKey" : 9,
    "layout" : 8
  }, {
    "firstKey" : 17,
    "secondKey" : 10,
    "layout" : 8
  }, {
    "firstKey" : 17,
    "secondKey" : 11,
    "layout" : 8
  }, {
    "firstKey" : 17,
    "secondKey" : 12,
    "layout" : 8
  }, {
    "firstKey" : 17,
    "secondKey" : 13,
    "layout" : 8
  }, {
    "firstKey" : 17,
    "secondKey" : 14,
    "layout" : 8
  }, {
    "firstKey" : 17,
    "secondKey" : 15,
    "layout" : 8
  }, {
    "firstKey" : 17,
    "secondKey" : 16,
    "layout" : 5
  }, {
    "firstKey" : 17,
    "secondKey" : 18,
    "layout" : 8
  }, {
    "firstKey" : 17,
    "secondKey" : 19,
    "layout" : 8
  }, {
    "firstKey" : 17,
    "secondKey" : 20,
    "layout" : 8
  }, {
    "firstKey" : 17,
    "secondKey" : 21,
    "layout" : 8
  }, {
    "firstKey" : 17,
    "secondKey" : 22,
    "layout" : 8
  }, {
    "firstKey" : 17,
    "secondKey" : 23,
    "layout" : 8
  }, {
    "firstKey" : 17,
    "secondKey" : 24,
    "layout" : 8
  }, {
    "firstKey" : 17,
    "secondKey" : 25,
    "layout" : 8
  }, {
    "firstKey" : 17,
    "secondKey" : 26,
    "layout" : 8
  }, {
    "firstKey" : 17,
    "secondKey" : 27,
    "layout" : 8
  }, {
    "firstKey" : 17,
    "secondKey" : 28,
    "layout" : 8
  }, {
    "firstKey" : 17,
    "secondKey" : 29,
    "layout" : 8
  }, {
    "firstKey" : 18,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 19,
    "layout" : 1
  }, {
    "firstKey" : 18,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 18,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 19,
    "secondKey" : 0,
    "layout" : 12
  }, {
    "firstKey" : 19,
    "secondKey" : 1,
    "layout" : 12
  }, {
    "firstKey" : 19,
    "secondKey" : 2,
    "layout" : 12
  }, {
    "firstKey" : 19,
    "secondKey" : 3,
    "layout" : 12
  }, {
    "firstKey" : 19,
    "secondKey" : 4,
    "layout" : 12
  }, {
    "firstKey" : 19,
    "secondKey" : 5,
    "layout" : 12
  }, {
    "firstKey" : 19,
    "secondKey" : 6,
    "layout" : 12
  }, {
    "firstKey" : 19,
    "secondKey" : 7,
    "layout" : 12
  }, {
    "firstKey" : 19,
    "secondKey" : 8,
    "layout" : 12
  }, {
    "firstKey" : 19,
    "secondKey" : 9,
    "layout" : 12
  }, {
    "firstKey" : 19,
    "secondKey" : 10,
    "layout" : 12
  }, {
    "firstKey" : 19,
    "secondKey" : 11,
    "layout" : 12
  }, {
    "firstKey" : 19,
    "secondKey" : 12,
    "layout" : 12
  }, {
    "firstKey" : 19,
    "secondKey" : 13,
    "layout" : 12
  }, {
    "firstKey" : 19,
    "secondKey" : 14,
    "layout" : 12
  }, {
    "firstKey" : 19,
    "secondKey" : 15,
    "layout" : 12
  }, {
    "firstKey" : 19,
    "secondKey" : 16,
    "layout" : 12
  }, {
    "firstKey" : 19,
    "secondKey" : 17,
    "layout" : 12
  }, {
    "firstKey" : 19,
    "secondKey" : 18,
    "layout" : 9
  }, {
    "firstKey" : 19,
    "secondKey" : 20,
    "layout" : 12
  }, {
    "firstKey" : 19,
    "secondKey" : 21,
    "layout" : 12
  }, {
    "firstKey" : 19,
    "secondKey" : 22,
    "layout" : 12
  }, {
    "firstKey" : 19,
    "secondKey" : 23,
    "layout" : 12
  }, {
    "firstKey" : 19,
    "secondKey" : 24,
    "layout" : 12
  }, {
    "firstKey" : 19,
    "secondKey" : 25,
    "layout" : 12
  }, {
    "firstKey" : 19,
    "secondKey" : 26,
    "layout" : 12
  }, {
    "firstKey" : 19,
    "secondKey" : 27,
    "layout" : 12
  }, {
    "firstKey" : 19,
    "secondKey" : 28,
    "layout" : 12
  }, {
    "firstKey" : 19,
    "secondKey" : 29,
    "layout" : 12
  }, {
    "firstKey" : 20,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 21,
    "layout" : 1
  }, {
    "firstKey" : 20,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 20,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 21,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 21,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 21,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 21,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 21,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 21,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 21,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 21,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 21,
    "secondKey" : 8,
    "layout" : 8
  }, {
    "firstKey" : 21,
    "secondKey" : 9,
    "layout" : 8
  }, {
    "firstKey" : 21,
    "secondKey" : 10,
    "layout" : 8
  }, {
    "firstKey" : 21,
    "secondKey" : 11,
    "layout" : 8
  }, {
    "firstKey" : 21,
    "secondKey" : 12,
    "layout" : 8
  }, {
    "firstKey" : 21,
    "secondKey" : 13,
    "layout" : 8
  }, {
    "firstKey" : 21,
    "secondKey" : 14,
    "layout" : 8
  }, {
    "firstKey" : 21,
    "secondKey" : 15,
    "layout" : 8
  }, {
    "firstKey" : 21,
    "secondKey" : 16,
    "layout" : 8
  }, {
    "firstKey" : 21,
    "secondKey" : 17,
    "layout" : 8
  }, {
    "firstKey" : 21,
    "secondKey" : 18,
    "layout" : 8
  }, {
    "firstKey" : 21,
    "secondKey" : 19,
    "layout" : 8
  }, {
    "firstKey" : 21,
    "secondKey" : 20,
    "layout" : 5
  }, {
    "firstKey" : 21,
    "secondKey" : 22,
    "layout" : 8
  }, {
    "firstKey" : 21,
    "secondKey" : 23,
    "layout" : 8
  }, {
    "firstKey" : 21,
    "secondKey" : 24,
    "layout" : 8
  }, {
    "firstKey" : 21,
    "secondKey" : 25,
    "layout" : 8
  }, {
    "firstKey" : 21,
    "secondKey" : 26,
    "layout" : 8
  }, {
    "firstKey" : 21,
    "secondKey" : 27,
    "layout" : 8
  }, {
    "firstKey" : 21,
    "secondKey" : 28,
    "layout" : 8
  }, {
    "firstKey" : 21,
    "secondKey" : 29,
    "layout" : 8
  }, {
    "firstKey" : 22,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 23,
    "layout" : 1
  }, {
    "firstKey" : 22,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 22,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 23,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 23,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 23,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 23,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 23,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 23,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 23,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 23,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 23,
    "secondKey" : 8,
    "layout" : 8
  }, {
    "firstKey" : 23,
    "secondKey" : 9,
    "layout" : 8
  }, {
    "firstKey" : 23,
    "secondKey" : 10,
    "layout" : 8
  }, {
    "firstKey" : 23,
    "secondKey" : 11,
    "layout" : 8
  }, {
    "firstKey" : 23,
    "secondKey" : 12,
    "layout" : 8
  }, {
    "firstKey" : 23,
    "secondKey" : 13,
    "layout" : 8
  }, {
    "firstKey" : 23,
    "secondKey" : 14,
    "layout" : 8
  }, {
    "firstKey" : 23,
    "secondKey" : 15,
    "layout" : 8
  }, {
    "firstKey" : 23,
    "secondKey" : 16,
    "layout" : 8
  }, {
    "firstKey" : 23,
    "secondKey" : 17,
    "layout" : 8
  }, {
    "firstKey" : 23,
    "secondKey" : 18,
    "layout" : 8
  }, {
    "firstKey" : 23,
    "secondKey" : 19,
    "layout" : 8
  }, {
    "firstKey" : 23,
    "secondKey" : 20,
    "layout" : 8
  }, {
    "firstKey" : 23,
    "secondKey" : 21,
    "layout" : 8
  }, {
    "firstKey" : 23,
    "secondKey" : 22,
    "layout" : 5
  }, {
    "firstKey" : 23,
    "secondKey" : 24,
    "layout" : 8
  }, {
    "firstKey" : 23,
    "secondKey" : 25,
    "layout" : 8
  }, {
    "firstKey" : 23,
    "secondKey" : 26,
    "layout" : 8
  }, {
    "firstKey" : 23,
    "secondKey" : 27,
    "layout" : 8
  }, {
    "firstKey" : 23,
    "secondKey" : 28,
    "layout" : 8
  }, {
    "firstKey" : 23,
    "secondKey" : 29,
    "layout" : 8
  }, {
    "firstKey" : 24,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 25,
    "layout" : 1
  }, {
    "firstKey" : 24,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 24,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 25,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 25,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 25,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 25,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 25,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 25,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 25,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 25,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 25,
    "secondKey" : 8,
    "layout" : 8
  }, {
    "firstKey" : 25,
    "secondKey" : 9,
    "layout" : 8
  }, {
    "firstKey" : 25,
    "secondKey" : 10,
    "layout" : 8
  }, {
    "firstKey" : 25,
    "secondKey" : 11,
    "layout" : 8
  }, {
    "firstKey" : 25,
    "secondKey" : 12,
    "layout" : 8
  }, {
    "firstKey" : 25,
    "secondKey" : 13,
    "layout" : 8
  }, {
    "firstKey" : 25,
    "secondKey" : 14,
    "layout" : 8
  }, {
    "firstKey" : 25,
    "secondKey" : 15,
    "layout" : 8
  }, {
    "firstKey" : 25,
    "secondKey" : 16,
    "layout" : 8
  }, {
    "firstKey" : 25,
    "secondKey" : 17,
    "layout" : 8
  }, {
    "firstKey" : 25,
    "secondKey" : 18,
    "layout" : 8
  }, {
    "firstKey" : 25,
    "secondKey" : 19,
    "layout" : 8
  }, {
    "firstKey" : 25,
    "secondKey" : 20,
    "layout" : 8
  }, {
    "firstKey" : 25,
    "secondKey" : 21,
    "layout" : 8
  }, {
    "firstKey" : 25,
    "secondKey" : 22,
    "layout" : 8
  }, {
    "firstKey" : 25,
    "secondKey" : 23,
    "layout" : 8
  }, {
    "firstKey" : 25,
    "secondKey" : 24,
    "layout" : 5
  }, {
    "firstKey" : 25,
    "secondKey" : 26,
    "layout" : 8
  }, {
    "firstKey" : 25,
    "secondKey" : 27,
    "layout" : 8
  }, {
    "firstKey" : 25,
    "secondKey" : 28,
    "layout" : 8
  }, {
    "firstKey" : 25,
    "secondKey" : 29,
    "layout" : 8
  }, {
    "firstKey" : 26,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 26,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 26,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 26,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 26,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 26,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 26,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 26,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 26,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 26,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 26,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 26,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 26,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 26,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 26,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 26,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 26,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 26,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 26,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 26,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 26,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 26,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 26,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 26,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 26,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 26,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 26,
    "secondKey" : 27,
    "layout" : 1
  }, {
    "firstKey" : 26,
    "secondKey" : 28,
    "layout" : 4
  }, {
    "firstKey" : 26,
    "secondKey" : 29,
    "layout" : 4
  }, {
    "firstKey" : 27,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 27,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 27,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 27,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 27,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 27,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 27,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 27,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 27,
    "secondKey" : 8,
    "layout" : 8
  }, {
    "firstKey" : 27,
    "secondKey" : 9,
    "layout" : 8
  }, {
    "firstKey" : 27,
    "secondKey" : 10,
    "layout" : 8
  }, {
    "firstKey" : 27,
    "secondKey" : 11,
    "layout" : 8
  }, {
    "firstKey" : 27,
    "secondKey" : 12,
    "layout" : 8
  }, {
    "firstKey" : 27,
    "secondKey" : 13,
    "layout" : 8
  }, {
    "firstKey" : 27,
    "secondKey" : 14,
    "layout" : 8
  }, {
    "firstKey" : 27,
    "secondKey" : 15,
    "layout" : 8
  }, {
    "firstKey" : 27,
    "secondKey" : 16,
    "layout" : 8
  }, {
    "firstKey" : 27,
    "secondKey" : 17,
    "layout" : 8
  }, {
    "firstKey" : 27,
    "secondKey" : 18,
    "layout" : 8
  }, {
    "firstKey" : 27,
    "secondKey" : 19,
    "layout" : 8
  }, {
    "firstKey" : 27,
    "secondKey" : 20,
    "layout" : 8
  }, {
    "firstKey" : 27,
    "secondKey" : 21,
    "layout" : 8
  }, {
    "firstKey" : 27,
    "secondKey" : 22,
    "layout" : 8
  }, {
    "firstKey" : 27,
    "secondKey" : 23,
    "layout" : 8
  }, {
    "firstKey" : 27,
    "secondKey" : 24,
    "layout" : 8
  }, {
    "firstKey" : 27,
    "secondKey" : 25,
    "layout" : 8
  }, {
    "firstKey" : 27,
    "secondKey" : 26,
    "layout" : 5
  }, {
    "firstKey" : 27,
    "secondKey" : 28,
    "layout" : 8
  }, {
    "firstKey" : 27,
    "secondKey" : 29,
    "layout" : 8
  }, {
    "firstKey" : 28,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 28,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 28,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 28,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 28,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 28,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 28,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 28,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 28,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 28,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 28,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 28,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 28,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 28,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 28,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 28,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 28,
    "secondKey" : 16,
    "layout" : 4
  }, {
    "firstKey" : 28,
    "secondKey" : 17,
    "layout" : 4
  }, {
    "firstKey" : 28,
    "secondKey" : 18,
    "layout" : 4
  }, {
    "firstKey" : 28,
    "secondKey" : 19,
    "layout" : 4
  }, {
    "firstKey" : 28,
    "secondKey" : 20,
    "layout" : 4
  }, {
    "firstKey" : 28,
    "secondKey" : 21,
    "layout" : 4
  }, {
    "firstKey" : 28,
    "secondKey" : 22,
    "layout" : 4
  }, {
    "firstKey" : 28,
    "secondKey" : 23,
    "layout" : 4
  }, {
    "firstKey" : 28,
    "secondKey" : 24,
    "layout" : 4
  }, {
    "firstKey" : 28,
    "secondKey" : 25,
    "layout" : 4
  }, {
    "firstKey" : 28,
    "secondKey" : 26,
    "layout" : 4
  }, {
    "firstKey" : 28,
    "secondKey" : 27,
    "layout" : 4
  }, {
    "firstKey" : 28,
    "secondKey" : 29,
    "layout" : 1
  }, {
    "firstKey" : 29,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 29,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 29,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 29,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 29,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 29,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 29,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 29,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 29,
    "secondKey" : 8,
    "layout" : 8
  }, {
    "firstKey" : 29,
    "secondKey" : 9,
    "layout" : 8
  }, {
    "firstKey" : 29,
    "secondKey" : 10,
    "layout" : 8
  }, {
    "firstKey" : 29,
    "secondKey" : 11,
    "layout" : 8
  }, {
    "firstKey" : 29,
    "secondKey" : 12,
    "layout" : 8
  }, {
    "firstKey" : 29,
    "secondKey" : 13,
    "layout" : 8
  }, {
    "firstKey" : 29,
    "secondKey" : 14,
    "layout" : 8
  }, {
    "firstKey" : 29,
    "secondKey" : 15,
    "layout" : 8
  }, {
    "firstKey" : 29,
    "secondKey" : 16,
    "layout" : 8
  }, {
    "firstKey" : 29,
    "secondKey" : 17,
    "layout" : 8
  }, {
    "firstKey" : 29,
    "secondKey" : 18,
    "layout" : 8
  }, {
    "firstKey" : 29,
    "secondKey" : 19,
    "layout" : 8
  }, {
    "firstKey" : 29,
    "secondKey" : 20,
    "layout" : 8
  }, {
    "firstKey" : 29,
    "secondKey" : 21,
    "layout" : 8
  }, {
    "firstKey" : 29,
    "secondKey" : 22,
    "layout" : 8
  }, {
    "firstKey" : 29,
    "secondKey" : 23,
    "layout" : 8
  }, {
    "firstKey" : 29,
    "secondKey" : 24,
    "layout" : 8
  }, {
    "firstKey" : 29,
    "secondKey" : 25,
    "layout" : 8
  }, {
    "firstKey" : 29,
    "secondKey" : 26,
    "layout" : 8
  }, {
    "firstKey" : 29,
    "secondKey" : 27,
    "layout" : 8
  }, {
    "firstKey" : 29,
    "secondKey" : 28,
    "layout" : 5
  } ]
}