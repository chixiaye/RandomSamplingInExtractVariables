{
  "id" : 16,
  "expression" : "100",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-test-utils-parent/flink-test-utils/src/main/java/org/apache/flink/streaming/util/TestStreamEnvironment.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "100",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 119,
      "startColumnNumber" : 38,
      "endLineNumber" : 119,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 119,
        "startColumnNumber" : 20,
        "endLineNumber" : 119,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Duration.ofMillis(100)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 235,
        "startLineNumber" : 115,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 42
      },
      "nodeContext" : "randomize(conf,ExecutionCheckpointingOptions.ALIGNMENT_TIMEOUT,Duration.ofSeconds(0),Duration.ofMillis(100),Duration.ofSeconds(2))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 115,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 43
      },
      "nodeContext" : "randomize(conf,ExecutionCheckpointingOptions.ALIGNMENT_TIMEOUT,Duration.ofSeconds(0),Duration.ofMillis(100),Duration.ofSeconds(2));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 350,
        "startLineNumber" : 113,
        "startColumnNumber" : 44,
        "endLineNumber" : 121,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  randomize(conf,ExecutionCheckpointingOptions.ENABLE_UNALIGNED,true,false);\n  randomize(conf,ExecutionCheckpointingOptions.ALIGNMENT_TIMEOUT,Duration.ofSeconds(0),Duration.ofMillis(100),Duration.ofSeconds(2));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 386,
        "startLineNumber" : 113,
        "startColumnNumber" : 8,
        "endLineNumber" : 121,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (RANDOMIZE_CHECKPOINTING_CONFIG) {\n  randomize(conf,ExecutionCheckpointingOptions.ENABLE_UNALIGNED,true,false);\n  randomize(conf,ExecutionCheckpointingOptions.ALIGNMENT_TIMEOUT,Duration.ofSeconds(0),Duration.ofMillis(100),Duration.ofSeconds(2));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1849,
        "startLineNumber" : 111,
        "startColumnNumber" : 92,
        "endLineNumber" : 147,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (RANDOMIZE_CHECKPOINTING_CONFIG) {\n    randomize(conf,ExecutionCheckpointingOptions.ENABLE_UNALIGNED,true,false);\n    randomize(conf,ExecutionCheckpointingOptions.ALIGNMENT_TIMEOUT,Duration.ofSeconds(0),Duration.ofMillis(100),Duration.ofSeconds(2));\n  }\n  if (isConfigurationSupportedByChangelog(miniCluster.getConfiguration())) {\n    if (STATE_CHANGE_LOG_CONFIG.equalsIgnoreCase(STATE_CHANGE_LOG_CONFIG_ON)) {\n      if (!conf.contains(StateChangelogOptions.ENABLE_STATE_CHANGE_LOG)) {\n        conf.set(StateChangelogOptions.ENABLE_STATE_CHANGE_LOG,true);\n        miniCluster.overrideRestoreModeForChangelogStateBackend();\n      }\n    }\n else     if (STATE_CHANGE_LOG_CONFIG.equalsIgnoreCase(STATE_CHANGE_LOG_CONFIG_RAND)) {\n      boolean enabled=randomize(conf,StateChangelogOptions.ENABLE_STATE_CHANGE_LOG,true,false);\n      if (enabled) {\n        randomize(conf,StateChangelogOptions.PERIODIC_MATERIALIZATION_INTERVAL,Duration.ofMillis(100),Duration.ofMillis(500),Duration.ofSeconds(1),Duration.ofSeconds(5),Duration.ofSeconds(Long.MAX_VALUE / 1000));\n        miniCluster.overrideRestoreModeForChangelogStateBackend();\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2412,
        "startLineNumber" : 104,
        "startColumnNumber" : 4,
        "endLineNumber" : 147,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * This is the place for randomization the configuration that relates to DataStream API such as ExecutionConf, CheckpointConf, StreamExecutionEnvironment. List of the configurations can be found here  {@link StreamExecutionEnvironment#configure(ReadableConfig,ClassLoader)}. All other configuration should be randomized here  {@link org.apache.flink.runtime.testutils.MiniClusterResource#randomizeConfiguration(Configuration)}.\n */\nprivate static void randomizeConfiguration(MiniCluster miniCluster,Configuration conf){\n  if (RANDOMIZE_CHECKPOINTING_CONFIG) {\n    randomize(conf,ExecutionCheckpointingOptions.ENABLE_UNALIGNED,true,false);\n    randomize(conf,ExecutionCheckpointingOptions.ALIGNMENT_TIMEOUT,Duration.ofSeconds(0),Duration.ofMillis(100),Duration.ofSeconds(2));\n  }\n  if (isConfigurationSupportedByChangelog(miniCluster.getConfiguration())) {\n    if (STATE_CHANGE_LOG_CONFIG.equalsIgnoreCase(STATE_CHANGE_LOG_CONFIG_ON)) {\n      if (!conf.contains(StateChangelogOptions.ENABLE_STATE_CHANGE_LOG)) {\n        conf.set(StateChangelogOptions.ENABLE_STATE_CHANGE_LOG,true);\n        miniCluster.overrideRestoreModeForChangelogStateBackend();\n      }\n    }\n else     if (STATE_CHANGE_LOG_CONFIG.equalsIgnoreCase(STATE_CHANGE_LOG_CONFIG_RAND)) {\n      boolean enabled=randomize(conf,StateChangelogOptions.ENABLE_STATE_CHANGE_LOG,true,false);\n      if (enabled) {\n        randomize(conf,StateChangelogOptions.PERIODIC_MATERIALIZATION_INTERVAL,Duration.ofMillis(100),Duration.ofMillis(500),Duration.ofSeconds(1),Duration.ofSeconds(5),Duration.ofSeconds(Long.MAX_VALUE / 1000));\n        miniCluster.overrideRestoreModeForChangelogStateBackend();\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 119,
        "startColumnNumber" : 20,
        "endLineNumber" : 119,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Duration.ofMillis(100)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "100",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 137,
      "startColumnNumber" : 46,
      "endLineNumber" : 137,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 137,
        "startColumnNumber" : 28,
        "endLineNumber" : 137,
        "endColumnNumber" : 50
      },
      "nodeContext" : "Duration.ofMillis(100)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 482,
        "startLineNumber" : 134,
        "startColumnNumber" : 20,
        "endLineNumber" : 142,
        "endColumnNumber" : 98
      },
      "nodeContext" : "randomize(conf,StateChangelogOptions.PERIODIC_MATERIALIZATION_INTERVAL,Duration.ofMillis(100),Duration.ofMillis(500),Duration.ofSeconds(1),Duration.ofSeconds(5),Duration.ofSeconds(Long.MAX_VALUE / 1000))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 30,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 483,
        "startLineNumber" : 134,
        "startColumnNumber" : 20,
        "endLineNumber" : 142,
        "endColumnNumber" : 99
      },
      "nodeContext" : "randomize(conf,StateChangelogOptions.PERIODIC_MATERIALIZATION_INTERVAL,Duration.ofMillis(100),Duration.ofMillis(500),Duration.ofSeconds(1),Duration.ofSeconds(5),Duration.ofSeconds(Long.MAX_VALUE / 1000));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 602,
        "startLineNumber" : 133,
        "startColumnNumber" : 29,
        "endLineNumber" : 144,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  randomize(conf,StateChangelogOptions.PERIODIC_MATERIALIZATION_INTERVAL,Duration.ofMillis(100),Duration.ofMillis(500),Duration.ofSeconds(1),Duration.ofSeconds(5),Duration.ofSeconds(Long.MAX_VALUE / 1000));\n  miniCluster.overrideRestoreModeForChangelogStateBackend();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 615,
        "startLineNumber" : 133,
        "startColumnNumber" : 16,
        "endLineNumber" : 144,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (enabled) {\n  randomize(conf,StateChangelogOptions.PERIODIC_MATERIALIZATION_INTERVAL,Duration.ofMillis(100),Duration.ofMillis(500),Duration.ofSeconds(1),Duration.ofSeconds(5),Duration.ofSeconds(Long.MAX_VALUE / 1000));\n  miniCluster.overrideRestoreModeForChangelogStateBackend();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 782,
        "startLineNumber" : 130,
        "startColumnNumber" : 95,
        "endLineNumber" : 145,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  boolean enabled=randomize(conf,StateChangelogOptions.ENABLE_STATE_CHANGE_LOG,true,false);\n  if (enabled) {\n    randomize(conf,StateChangelogOptions.PERIODIC_MATERIALIZATION_INTERVAL,Duration.ofMillis(100),Duration.ofMillis(500),Duration.ofSeconds(1),Duration.ofSeconds(5),Duration.ofSeconds(Long.MAX_VALUE / 1000));\n    miniCluster.overrideRestoreModeForChangelogStateBackend();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 858,
        "startLineNumber" : 130,
        "startColumnNumber" : 19,
        "endLineNumber" : 145,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (STATE_CHANGE_LOG_CONFIG.equalsIgnoreCase(STATE_CHANGE_LOG_CONFIG_RAND)) {\n  boolean enabled=randomize(conf,StateChangelogOptions.ENABLE_STATE_CHANGE_LOG,true,false);\n  if (enabled) {\n    randomize(conf,StateChangelogOptions.PERIODIC_MATERIALIZATION_INTERVAL,Duration.ofMillis(100),Duration.ofMillis(500),Duration.ofSeconds(1),Duration.ofSeconds(5),Duration.ofSeconds(Long.MAX_VALUE / 1000));\n    miniCluster.overrideRestoreModeForChangelogStateBackend();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 56,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1218,
        "startLineNumber" : 125,
        "startColumnNumber" : 12,
        "endLineNumber" : 145,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (STATE_CHANGE_LOG_CONFIG.equalsIgnoreCase(STATE_CHANGE_LOG_CONFIG_ON)) {\n  if (!conf.contains(StateChangelogOptions.ENABLE_STATE_CHANGE_LOG)) {\n    conf.set(StateChangelogOptions.ENABLE_STATE_CHANGE_LOG,true);\n    miniCluster.overrideRestoreModeForChangelogStateBackend();\n  }\n}\n else if (STATE_CHANGE_LOG_CONFIG.equalsIgnoreCase(STATE_CHANGE_LOG_CONFIG_RAND)) {\n  boolean enabled=randomize(conf,StateChangelogOptions.ENABLE_STATE_CHANGE_LOG,true,false);\n  if (enabled) {\n    randomize(conf,StateChangelogOptions.PERIODIC_MATERIALIZATION_INTERVAL,Duration.ofMillis(100),Duration.ofMillis(500),Duration.ofSeconds(1),Duration.ofSeconds(5),Duration.ofSeconds(Long.MAX_VALUE / 1000));\n    miniCluster.overrideRestoreModeForChangelogStateBackend();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 83,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1242,
        "startLineNumber" : 124,
        "startColumnNumber" : 81,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (STATE_CHANGE_LOG_CONFIG.equalsIgnoreCase(STATE_CHANGE_LOG_CONFIG_ON)) {\n    if (!conf.contains(StateChangelogOptions.ENABLE_STATE_CHANGE_LOG)) {\n      conf.set(StateChangelogOptions.ENABLE_STATE_CHANGE_LOG,true);\n      miniCluster.overrideRestoreModeForChangelogStateBackend();\n    }\n  }\n else   if (STATE_CHANGE_LOG_CONFIG.equalsIgnoreCase(STATE_CHANGE_LOG_CONFIG_RAND)) {\n    boolean enabled=randomize(conf,StateChangelogOptions.ENABLE_STATE_CHANGE_LOG,true,false);\n    if (enabled) {\n      randomize(conf,StateChangelogOptions.PERIODIC_MATERIALIZATION_INTERVAL,Duration.ofMillis(100),Duration.ofMillis(500),Duration.ofSeconds(1),Duration.ofSeconds(5),Duration.ofSeconds(Long.MAX_VALUE / 1000));\n      miniCluster.overrideRestoreModeForChangelogStateBackend();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1315,
        "startLineNumber" : 124,
        "startColumnNumber" : 8,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (isConfigurationSupportedByChangelog(miniCluster.getConfiguration())) {\n  if (STATE_CHANGE_LOG_CONFIG.equalsIgnoreCase(STATE_CHANGE_LOG_CONFIG_ON)) {\n    if (!conf.contains(StateChangelogOptions.ENABLE_STATE_CHANGE_LOG)) {\n      conf.set(StateChangelogOptions.ENABLE_STATE_CHANGE_LOG,true);\n      miniCluster.overrideRestoreModeForChangelogStateBackend();\n    }\n  }\n else   if (STATE_CHANGE_LOG_CONFIG.equalsIgnoreCase(STATE_CHANGE_LOG_CONFIG_RAND)) {\n    boolean enabled=randomize(conf,StateChangelogOptions.ENABLE_STATE_CHANGE_LOG,true,false);\n    if (enabled) {\n      randomize(conf,StateChangelogOptions.PERIODIC_MATERIALIZATION_INTERVAL,Duration.ofMillis(100),Duration.ofMillis(500),Duration.ofSeconds(1),Duration.ofSeconds(5),Duration.ofSeconds(Long.MAX_VALUE / 1000));\n      miniCluster.overrideRestoreModeForChangelogStateBackend();\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 90,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1849,
        "startLineNumber" : 111,
        "startColumnNumber" : 92,
        "endLineNumber" : 147,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (RANDOMIZE_CHECKPOINTING_CONFIG) {\n    randomize(conf,ExecutionCheckpointingOptions.ENABLE_UNALIGNED,true,false);\n    randomize(conf,ExecutionCheckpointingOptions.ALIGNMENT_TIMEOUT,Duration.ofSeconds(0),Duration.ofMillis(100),Duration.ofSeconds(2));\n  }\n  if (isConfigurationSupportedByChangelog(miniCluster.getConfiguration())) {\n    if (STATE_CHANGE_LOG_CONFIG.equalsIgnoreCase(STATE_CHANGE_LOG_CONFIG_ON)) {\n      if (!conf.contains(StateChangelogOptions.ENABLE_STATE_CHANGE_LOG)) {\n        conf.set(StateChangelogOptions.ENABLE_STATE_CHANGE_LOG,true);\n        miniCluster.overrideRestoreModeForChangelogStateBackend();\n      }\n    }\n else     if (STATE_CHANGE_LOG_CONFIG.equalsIgnoreCase(STATE_CHANGE_LOG_CONFIG_RAND)) {\n      boolean enabled=randomize(conf,StateChangelogOptions.ENABLE_STATE_CHANGE_LOG,true,false);\n      if (enabled) {\n        randomize(conf,StateChangelogOptions.PERIODIC_MATERIALIZATION_INTERVAL,Duration.ofMillis(100),Duration.ofMillis(500),Duration.ofSeconds(1),Duration.ofSeconds(5),Duration.ofSeconds(Long.MAX_VALUE / 1000));\n        miniCluster.overrideRestoreModeForChangelogStateBackend();\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2412,
        "startLineNumber" : 104,
        "startColumnNumber" : 4,
        "endLineNumber" : 147,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * This is the place for randomization the configuration that relates to DataStream API such as ExecutionConf, CheckpointConf, StreamExecutionEnvironment. List of the configurations can be found here  {@link StreamExecutionEnvironment#configure(ReadableConfig,ClassLoader)}. All other configuration should be randomized here  {@link org.apache.flink.runtime.testutils.MiniClusterResource#randomizeConfiguration(Configuration)}.\n */\nprivate static void randomizeConfiguration(MiniCluster miniCluster,Configuration conf){\n  if (RANDOMIZE_CHECKPOINTING_CONFIG) {\n    randomize(conf,ExecutionCheckpointingOptions.ENABLE_UNALIGNED,true,false);\n    randomize(conf,ExecutionCheckpointingOptions.ALIGNMENT_TIMEOUT,Duration.ofSeconds(0),Duration.ofMillis(100),Duration.ofSeconds(2));\n  }\n  if (isConfigurationSupportedByChangelog(miniCluster.getConfiguration())) {\n    if (STATE_CHANGE_LOG_CONFIG.equalsIgnoreCase(STATE_CHANGE_LOG_CONFIG_ON)) {\n      if (!conf.contains(StateChangelogOptions.ENABLE_STATE_CHANGE_LOG)) {\n        conf.set(StateChangelogOptions.ENABLE_STATE_CHANGE_LOG,true);\n        miniCluster.overrideRestoreModeForChangelogStateBackend();\n      }\n    }\n else     if (STATE_CHANGE_LOG_CONFIG.equalsIgnoreCase(STATE_CHANGE_LOG_CONFIG_RAND)) {\n      boolean enabled=randomize(conf,StateChangelogOptions.ENABLE_STATE_CHANGE_LOG,true,false);\n      if (enabled) {\n        randomize(conf,StateChangelogOptions.PERIODIC_MATERIALIZATION_INTERVAL,Duration.ofMillis(100),Duration.ofMillis(500),Duration.ofSeconds(1),Duration.ofSeconds(5),Duration.ofSeconds(Long.MAX_VALUE / 1000));\n        miniCluster.overrideRestoreModeForChangelogStateBackend();\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 137,
        "startColumnNumber" : 28,
        "endLineNumber" : 137,
        "endColumnNumber" : 50
      },
      "nodeContext" : "Duration.ofMillis(100)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 119,
    "startColumnNumber" : 38,
    "endLineNumber" : 119,
    "endColumnNumber" : 41
  }, {
    "charLength" : 3,
    "startLineNumber" : 137,
    "startColumnNumber" : 46,
    "endLineNumber" : 137,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 10
  } ]
}