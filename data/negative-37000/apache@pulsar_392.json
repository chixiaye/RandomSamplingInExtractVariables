{
  "id" : 392,
  "expression" : "replStats1",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-broker/src/test/java/org/apache/pulsar/broker/stats/prometheus/AggregatedNamespaceStatsTest.java",
  "occurrences" : 9,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "replStats1",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 48,
      "startColumnNumber" : 8,
      "endLineNumber" : 48,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 28
      },
      "nodeContext" : "replStats1.msgRateIn",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 34
      },
      "nodeContext" : "replStats1.msgRateIn=1.0",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 35
      },
      "nodeContext" : "replStats1.msgRateIn=1.0;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4769,
        "startLineNumber" : 30,
        "startColumnNumber" : 40,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String namespace=\"tenant/cluster/ns\";\n  TopicStats topicStats1=new TopicStats();\n  topicStats1.subscriptionsCount=2;\n  topicStats1.producersCount=1;\n  topicStats1.consumersCount=3;\n  topicStats1.rateIn=10.0;\n  topicStats1.rateOut=20.0;\n  topicStats1.throughputIn=10240.0;\n  topicStats1.throughputOut=20480.0;\n  topicStats1.managedLedgerStats.storageSize=5120;\n  topicStats1.managedLedgerStats.storageLogicalSize=2048;\n  topicStats1.msgBacklog=30;\n  topicStats1.managedLedgerStats.storageWriteRate=12.0;\n  topicStats1.managedLedgerStats.storageReadRate=6.0;\n  AggregatedReplicationStats replStats1=new AggregatedReplicationStats();\n  replStats1.msgRateIn=1.0;\n  replStats1.msgThroughputIn=126.0;\n  replStats1.msgRateOut=2.0;\n  replStats1.msgThroughputOut=256.0;\n  replStats1.replicationBacklog=1;\n  replStats1.connectedCount=0;\n  replStats1.msgRateExpired=3.0;\n  replStats1.replicationDelayInSeconds=20;\n  topicStats1.replicationStats.put(namespace,replStats1);\n  AggregatedSubscriptionStats subStats1=new AggregatedSubscriptionStats();\n  subStats1.msgBacklog=50;\n  subStats1.msgRateRedeliver=1.5;\n  subStats1.unackedMessages=2;\n  subStats1.msgBacklogNoDelayed=30;\n  topicStats1.subscriptionStats.put(namespace,subStats1);\n  TopicStats topicStats2=new TopicStats();\n  topicStats2.subscriptionsCount=10;\n  topicStats2.producersCount=3;\n  topicStats2.consumersCount=5;\n  topicStats2.rateIn=0.1;\n  topicStats2.rateOut=0.5;\n  topicStats2.throughputIn=512.0;\n  topicStats2.throughputOut=1024.5;\n  topicStats2.managedLedgerStats.storageSize=1024;\n  topicStats2.managedLedgerStats.storageLogicalSize=512;\n  topicStats2.msgBacklog=7;\n  topicStats2.managedLedgerStats.storageWriteRate=5.0;\n  topicStats2.managedLedgerStats.storageReadRate=2.5;\n  AggregatedReplicationStats replStats2=new AggregatedReplicationStats();\n  replStats2.msgRateIn=3.5;\n  replStats2.msgThroughputIn=512.0;\n  replStats2.msgRateOut=10.5;\n  replStats2.msgThroughputOut=1536.0;\n  replStats2.replicationBacklog=99;\n  replStats2.connectedCount=1;\n  replStats2.msgRateExpired=3.0;\n  replStats2.replicationDelayInSeconds=20;\n  topicStats2.replicationStats.put(namespace,replStats2);\n  AggregatedSubscriptionStats subStats2=new AggregatedSubscriptionStats();\n  subStats2.msgBacklog=27;\n  subStats2.msgRateRedeliver=0.7;\n  subStats2.unackedMessages=0;\n  subStats2.msgBacklogNoDelayed=20;\n  topicStats2.subscriptionStats.put(namespace,subStats2);\n  AggregatedNamespaceStats nsStats=new AggregatedNamespaceStats();\n  nsStats.updateStats(topicStats1);\n  nsStats.updateStats(topicStats2);\n  assertEquals(nsStats.topicsCount,2);\n  assertEquals(nsStats.subscriptionsCount,12);\n  assertEquals(nsStats.producersCount,4);\n  assertEquals(nsStats.consumersCount,8);\n  assertEquals(nsStats.rateIn,10.1);\n  assertEquals(nsStats.rateOut,20.5);\n  assertEquals(nsStats.throughputIn,10752.0);\n  assertEquals(nsStats.throughputOut,21504.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.msgBacklog,37);\n  assertEquals(nsStats.managedLedgerStats.storageWriteRate,17.0);\n  assertEquals(nsStats.managedLedgerStats.storageReadRate,8.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.managedLedgerStats.storageLogicalSize,2560);\n  AggregatedReplicationStats nsReplStats=nsStats.replicationStats.get(namespace);\n  assertNotNull(nsReplStats);\n  assertEquals(nsReplStats.msgRateIn,4.5);\n  assertEquals(nsReplStats.msgThroughputIn,638.0);\n  assertEquals(nsReplStats.msgRateOut,12.5);\n  assertEquals(nsReplStats.msgThroughputOut,1792.0);\n  assertEquals(nsReplStats.replicationBacklog,100);\n  assertEquals(nsReplStats.connectedCount,1);\n  assertEquals(nsReplStats.msgRateExpired,6.0);\n  assertEquals(nsReplStats.replicationDelayInSeconds,40);\n  AggregatedSubscriptionStats nsSubStats=nsStats.subscriptionStats.get(namespace);\n  assertNotNull(nsSubStats);\n  assertEquals(nsSubStats.msgBacklog,77);\n  assertEquals(nsSubStats.msgBacklogNoDelayed,50);\n  assertEquals(nsSubStats.msgRateRedeliver,2.2);\n  assertEquals(nsSubStats.unackedMessages,2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 632,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4815,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSimpleAggregation(){\n  final String namespace=\"tenant/cluster/ns\";\n  TopicStats topicStats1=new TopicStats();\n  topicStats1.subscriptionsCount=2;\n  topicStats1.producersCount=1;\n  topicStats1.consumersCount=3;\n  topicStats1.rateIn=10.0;\n  topicStats1.rateOut=20.0;\n  topicStats1.throughputIn=10240.0;\n  topicStats1.throughputOut=20480.0;\n  topicStats1.managedLedgerStats.storageSize=5120;\n  topicStats1.managedLedgerStats.storageLogicalSize=2048;\n  topicStats1.msgBacklog=30;\n  topicStats1.managedLedgerStats.storageWriteRate=12.0;\n  topicStats1.managedLedgerStats.storageReadRate=6.0;\n  AggregatedReplicationStats replStats1=new AggregatedReplicationStats();\n  replStats1.msgRateIn=1.0;\n  replStats1.msgThroughputIn=126.0;\n  replStats1.msgRateOut=2.0;\n  replStats1.msgThroughputOut=256.0;\n  replStats1.replicationBacklog=1;\n  replStats1.connectedCount=0;\n  replStats1.msgRateExpired=3.0;\n  replStats1.replicationDelayInSeconds=20;\n  topicStats1.replicationStats.put(namespace,replStats1);\n  AggregatedSubscriptionStats subStats1=new AggregatedSubscriptionStats();\n  subStats1.msgBacklog=50;\n  subStats1.msgRateRedeliver=1.5;\n  subStats1.unackedMessages=2;\n  subStats1.msgBacklogNoDelayed=30;\n  topicStats1.subscriptionStats.put(namespace,subStats1);\n  TopicStats topicStats2=new TopicStats();\n  topicStats2.subscriptionsCount=10;\n  topicStats2.producersCount=3;\n  topicStats2.consumersCount=5;\n  topicStats2.rateIn=0.1;\n  topicStats2.rateOut=0.5;\n  topicStats2.throughputIn=512.0;\n  topicStats2.throughputOut=1024.5;\n  topicStats2.managedLedgerStats.storageSize=1024;\n  topicStats2.managedLedgerStats.storageLogicalSize=512;\n  topicStats2.msgBacklog=7;\n  topicStats2.managedLedgerStats.storageWriteRate=5.0;\n  topicStats2.managedLedgerStats.storageReadRate=2.5;\n  AggregatedReplicationStats replStats2=new AggregatedReplicationStats();\n  replStats2.msgRateIn=3.5;\n  replStats2.msgThroughputIn=512.0;\n  replStats2.msgRateOut=10.5;\n  replStats2.msgThroughputOut=1536.0;\n  replStats2.replicationBacklog=99;\n  replStats2.connectedCount=1;\n  replStats2.msgRateExpired=3.0;\n  replStats2.replicationDelayInSeconds=20;\n  topicStats2.replicationStats.put(namespace,replStats2);\n  AggregatedSubscriptionStats subStats2=new AggregatedSubscriptionStats();\n  subStats2.msgBacklog=27;\n  subStats2.msgRateRedeliver=0.7;\n  subStats2.unackedMessages=0;\n  subStats2.msgBacklogNoDelayed=20;\n  topicStats2.subscriptionStats.put(namespace,subStats2);\n  AggregatedNamespaceStats nsStats=new AggregatedNamespaceStats();\n  nsStats.updateStats(topicStats1);\n  nsStats.updateStats(topicStats2);\n  assertEquals(nsStats.topicsCount,2);\n  assertEquals(nsStats.subscriptionsCount,12);\n  assertEquals(nsStats.producersCount,4);\n  assertEquals(nsStats.consumersCount,8);\n  assertEquals(nsStats.rateIn,10.1);\n  assertEquals(nsStats.rateOut,20.5);\n  assertEquals(nsStats.throughputIn,10752.0);\n  assertEquals(nsStats.throughputOut,21504.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.msgBacklog,37);\n  assertEquals(nsStats.managedLedgerStats.storageWriteRate,17.0);\n  assertEquals(nsStats.managedLedgerStats.storageReadRate,8.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.managedLedgerStats.storageLogicalSize,2560);\n  AggregatedReplicationStats nsReplStats=nsStats.replicationStats.get(namespace);\n  assertNotNull(nsReplStats);\n  assertEquals(nsReplStats.msgRateIn,4.5);\n  assertEquals(nsReplStats.msgThroughputIn,638.0);\n  assertEquals(nsReplStats.msgRateOut,12.5);\n  assertEquals(nsReplStats.msgThroughputOut,1792.0);\n  assertEquals(nsReplStats.replicationBacklog,100);\n  assertEquals(nsReplStats.connectedCount,1);\n  assertEquals(nsReplStats.msgRateExpired,6.0);\n  assertEquals(nsReplStats.replicationDelayInSeconds,40);\n  AggregatedSubscriptionStats nsSubStats=nsStats.subscriptionStats.get(namespace);\n  assertNotNull(nsSubStats);\n  assertEquals(nsSubStats.msgBacklog,77);\n  assertEquals(nsSubStats.msgBacklogNoDelayed,50);\n  assertEquals(nsSubStats.msgRateRedeliver,2.2);\n  assertEquals(nsSubStats.unackedMessages,2);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 638,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 35
      },
      "nodeContext" : "replStats1.msgRateIn=1.0;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.broker.stats.prometheus.AggregatedReplicationStats"
  }, {
    "nodeContext" : "replStats1",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 49,
      "startColumnNumber" : 8,
      "endLineNumber" : 49,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 34
      },
      "nodeContext" : "replStats1.msgThroughputIn",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 42
      },
      "nodeContext" : "replStats1.msgThroughputIn=126.0",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 43
      },
      "nodeContext" : "replStats1.msgThroughputIn=126.0;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4769,
        "startLineNumber" : 30,
        "startColumnNumber" : 40,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String namespace=\"tenant/cluster/ns\";\n  TopicStats topicStats1=new TopicStats();\n  topicStats1.subscriptionsCount=2;\n  topicStats1.producersCount=1;\n  topicStats1.consumersCount=3;\n  topicStats1.rateIn=10.0;\n  topicStats1.rateOut=20.0;\n  topicStats1.throughputIn=10240.0;\n  topicStats1.throughputOut=20480.0;\n  topicStats1.managedLedgerStats.storageSize=5120;\n  topicStats1.managedLedgerStats.storageLogicalSize=2048;\n  topicStats1.msgBacklog=30;\n  topicStats1.managedLedgerStats.storageWriteRate=12.0;\n  topicStats1.managedLedgerStats.storageReadRate=6.0;\n  AggregatedReplicationStats replStats1=new AggregatedReplicationStats();\n  replStats1.msgRateIn=1.0;\n  replStats1.msgThroughputIn=126.0;\n  replStats1.msgRateOut=2.0;\n  replStats1.msgThroughputOut=256.0;\n  replStats1.replicationBacklog=1;\n  replStats1.connectedCount=0;\n  replStats1.msgRateExpired=3.0;\n  replStats1.replicationDelayInSeconds=20;\n  topicStats1.replicationStats.put(namespace,replStats1);\n  AggregatedSubscriptionStats subStats1=new AggregatedSubscriptionStats();\n  subStats1.msgBacklog=50;\n  subStats1.msgRateRedeliver=1.5;\n  subStats1.unackedMessages=2;\n  subStats1.msgBacklogNoDelayed=30;\n  topicStats1.subscriptionStats.put(namespace,subStats1);\n  TopicStats topicStats2=new TopicStats();\n  topicStats2.subscriptionsCount=10;\n  topicStats2.producersCount=3;\n  topicStats2.consumersCount=5;\n  topicStats2.rateIn=0.1;\n  topicStats2.rateOut=0.5;\n  topicStats2.throughputIn=512.0;\n  topicStats2.throughputOut=1024.5;\n  topicStats2.managedLedgerStats.storageSize=1024;\n  topicStats2.managedLedgerStats.storageLogicalSize=512;\n  topicStats2.msgBacklog=7;\n  topicStats2.managedLedgerStats.storageWriteRate=5.0;\n  topicStats2.managedLedgerStats.storageReadRate=2.5;\n  AggregatedReplicationStats replStats2=new AggregatedReplicationStats();\n  replStats2.msgRateIn=3.5;\n  replStats2.msgThroughputIn=512.0;\n  replStats2.msgRateOut=10.5;\n  replStats2.msgThroughputOut=1536.0;\n  replStats2.replicationBacklog=99;\n  replStats2.connectedCount=1;\n  replStats2.msgRateExpired=3.0;\n  replStats2.replicationDelayInSeconds=20;\n  topicStats2.replicationStats.put(namespace,replStats2);\n  AggregatedSubscriptionStats subStats2=new AggregatedSubscriptionStats();\n  subStats2.msgBacklog=27;\n  subStats2.msgRateRedeliver=0.7;\n  subStats2.unackedMessages=0;\n  subStats2.msgBacklogNoDelayed=20;\n  topicStats2.subscriptionStats.put(namespace,subStats2);\n  AggregatedNamespaceStats nsStats=new AggregatedNamespaceStats();\n  nsStats.updateStats(topicStats1);\n  nsStats.updateStats(topicStats2);\n  assertEquals(nsStats.topicsCount,2);\n  assertEquals(nsStats.subscriptionsCount,12);\n  assertEquals(nsStats.producersCount,4);\n  assertEquals(nsStats.consumersCount,8);\n  assertEquals(nsStats.rateIn,10.1);\n  assertEquals(nsStats.rateOut,20.5);\n  assertEquals(nsStats.throughputIn,10752.0);\n  assertEquals(nsStats.throughputOut,21504.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.msgBacklog,37);\n  assertEquals(nsStats.managedLedgerStats.storageWriteRate,17.0);\n  assertEquals(nsStats.managedLedgerStats.storageReadRate,8.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.managedLedgerStats.storageLogicalSize,2560);\n  AggregatedReplicationStats nsReplStats=nsStats.replicationStats.get(namespace);\n  assertNotNull(nsReplStats);\n  assertEquals(nsReplStats.msgRateIn,4.5);\n  assertEquals(nsReplStats.msgThroughputIn,638.0);\n  assertEquals(nsReplStats.msgRateOut,12.5);\n  assertEquals(nsReplStats.msgThroughputOut,1792.0);\n  assertEquals(nsReplStats.replicationBacklog,100);\n  assertEquals(nsReplStats.connectedCount,1);\n  assertEquals(nsReplStats.msgRateExpired,6.0);\n  assertEquals(nsReplStats.replicationDelayInSeconds,40);\n  AggregatedSubscriptionStats nsSubStats=nsStats.subscriptionStats.get(namespace);\n  assertNotNull(nsSubStats);\n  assertEquals(nsSubStats.msgBacklog,77);\n  assertEquals(nsSubStats.msgBacklogNoDelayed,50);\n  assertEquals(nsSubStats.msgRateRedeliver,2.2);\n  assertEquals(nsSubStats.unackedMessages,2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 632,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4815,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSimpleAggregation(){\n  final String namespace=\"tenant/cluster/ns\";\n  TopicStats topicStats1=new TopicStats();\n  topicStats1.subscriptionsCount=2;\n  topicStats1.producersCount=1;\n  topicStats1.consumersCount=3;\n  topicStats1.rateIn=10.0;\n  topicStats1.rateOut=20.0;\n  topicStats1.throughputIn=10240.0;\n  topicStats1.throughputOut=20480.0;\n  topicStats1.managedLedgerStats.storageSize=5120;\n  topicStats1.managedLedgerStats.storageLogicalSize=2048;\n  topicStats1.msgBacklog=30;\n  topicStats1.managedLedgerStats.storageWriteRate=12.0;\n  topicStats1.managedLedgerStats.storageReadRate=6.0;\n  AggregatedReplicationStats replStats1=new AggregatedReplicationStats();\n  replStats1.msgRateIn=1.0;\n  replStats1.msgThroughputIn=126.0;\n  replStats1.msgRateOut=2.0;\n  replStats1.msgThroughputOut=256.0;\n  replStats1.replicationBacklog=1;\n  replStats1.connectedCount=0;\n  replStats1.msgRateExpired=3.0;\n  replStats1.replicationDelayInSeconds=20;\n  topicStats1.replicationStats.put(namespace,replStats1);\n  AggregatedSubscriptionStats subStats1=new AggregatedSubscriptionStats();\n  subStats1.msgBacklog=50;\n  subStats1.msgRateRedeliver=1.5;\n  subStats1.unackedMessages=2;\n  subStats1.msgBacklogNoDelayed=30;\n  topicStats1.subscriptionStats.put(namespace,subStats1);\n  TopicStats topicStats2=new TopicStats();\n  topicStats2.subscriptionsCount=10;\n  topicStats2.producersCount=3;\n  topicStats2.consumersCount=5;\n  topicStats2.rateIn=0.1;\n  topicStats2.rateOut=0.5;\n  topicStats2.throughputIn=512.0;\n  topicStats2.throughputOut=1024.5;\n  topicStats2.managedLedgerStats.storageSize=1024;\n  topicStats2.managedLedgerStats.storageLogicalSize=512;\n  topicStats2.msgBacklog=7;\n  topicStats2.managedLedgerStats.storageWriteRate=5.0;\n  topicStats2.managedLedgerStats.storageReadRate=2.5;\n  AggregatedReplicationStats replStats2=new AggregatedReplicationStats();\n  replStats2.msgRateIn=3.5;\n  replStats2.msgThroughputIn=512.0;\n  replStats2.msgRateOut=10.5;\n  replStats2.msgThroughputOut=1536.0;\n  replStats2.replicationBacklog=99;\n  replStats2.connectedCount=1;\n  replStats2.msgRateExpired=3.0;\n  replStats2.replicationDelayInSeconds=20;\n  topicStats2.replicationStats.put(namespace,replStats2);\n  AggregatedSubscriptionStats subStats2=new AggregatedSubscriptionStats();\n  subStats2.msgBacklog=27;\n  subStats2.msgRateRedeliver=0.7;\n  subStats2.unackedMessages=0;\n  subStats2.msgBacklogNoDelayed=20;\n  topicStats2.subscriptionStats.put(namespace,subStats2);\n  AggregatedNamespaceStats nsStats=new AggregatedNamespaceStats();\n  nsStats.updateStats(topicStats1);\n  nsStats.updateStats(topicStats2);\n  assertEquals(nsStats.topicsCount,2);\n  assertEquals(nsStats.subscriptionsCount,12);\n  assertEquals(nsStats.producersCount,4);\n  assertEquals(nsStats.consumersCount,8);\n  assertEquals(nsStats.rateIn,10.1);\n  assertEquals(nsStats.rateOut,20.5);\n  assertEquals(nsStats.throughputIn,10752.0);\n  assertEquals(nsStats.throughputOut,21504.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.msgBacklog,37);\n  assertEquals(nsStats.managedLedgerStats.storageWriteRate,17.0);\n  assertEquals(nsStats.managedLedgerStats.storageReadRate,8.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.managedLedgerStats.storageLogicalSize,2560);\n  AggregatedReplicationStats nsReplStats=nsStats.replicationStats.get(namespace);\n  assertNotNull(nsReplStats);\n  assertEquals(nsReplStats.msgRateIn,4.5);\n  assertEquals(nsReplStats.msgThroughputIn,638.0);\n  assertEquals(nsReplStats.msgRateOut,12.5);\n  assertEquals(nsReplStats.msgThroughputOut,1792.0);\n  assertEquals(nsReplStats.replicationBacklog,100);\n  assertEquals(nsReplStats.connectedCount,1);\n  assertEquals(nsReplStats.msgRateExpired,6.0);\n  assertEquals(nsReplStats.replicationDelayInSeconds,40);\n  AggregatedSubscriptionStats nsSubStats=nsStats.subscriptionStats.get(namespace);\n  assertNotNull(nsSubStats);\n  assertEquals(nsSubStats.msgBacklog,77);\n  assertEquals(nsSubStats.msgBacklogNoDelayed,50);\n  assertEquals(nsSubStats.msgRateRedeliver,2.2);\n  assertEquals(nsSubStats.unackedMessages,2);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 638,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 43
      },
      "nodeContext" : "replStats1.msgThroughputIn=126.0;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.broker.stats.prometheus.AggregatedReplicationStats"
  }, {
    "nodeContext" : "replStats1",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 50,
      "startColumnNumber" : 8,
      "endLineNumber" : 50,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 29
      },
      "nodeContext" : "replStats1.msgRateOut",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 35
      },
      "nodeContext" : "replStats1.msgRateOut=2.0",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 36
      },
      "nodeContext" : "replStats1.msgRateOut=2.0;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4769,
        "startLineNumber" : 30,
        "startColumnNumber" : 40,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String namespace=\"tenant/cluster/ns\";\n  TopicStats topicStats1=new TopicStats();\n  topicStats1.subscriptionsCount=2;\n  topicStats1.producersCount=1;\n  topicStats1.consumersCount=3;\n  topicStats1.rateIn=10.0;\n  topicStats1.rateOut=20.0;\n  topicStats1.throughputIn=10240.0;\n  topicStats1.throughputOut=20480.0;\n  topicStats1.managedLedgerStats.storageSize=5120;\n  topicStats1.managedLedgerStats.storageLogicalSize=2048;\n  topicStats1.msgBacklog=30;\n  topicStats1.managedLedgerStats.storageWriteRate=12.0;\n  topicStats1.managedLedgerStats.storageReadRate=6.0;\n  AggregatedReplicationStats replStats1=new AggregatedReplicationStats();\n  replStats1.msgRateIn=1.0;\n  replStats1.msgThroughputIn=126.0;\n  replStats1.msgRateOut=2.0;\n  replStats1.msgThroughputOut=256.0;\n  replStats1.replicationBacklog=1;\n  replStats1.connectedCount=0;\n  replStats1.msgRateExpired=3.0;\n  replStats1.replicationDelayInSeconds=20;\n  topicStats1.replicationStats.put(namespace,replStats1);\n  AggregatedSubscriptionStats subStats1=new AggregatedSubscriptionStats();\n  subStats1.msgBacklog=50;\n  subStats1.msgRateRedeliver=1.5;\n  subStats1.unackedMessages=2;\n  subStats1.msgBacklogNoDelayed=30;\n  topicStats1.subscriptionStats.put(namespace,subStats1);\n  TopicStats topicStats2=new TopicStats();\n  topicStats2.subscriptionsCount=10;\n  topicStats2.producersCount=3;\n  topicStats2.consumersCount=5;\n  topicStats2.rateIn=0.1;\n  topicStats2.rateOut=0.5;\n  topicStats2.throughputIn=512.0;\n  topicStats2.throughputOut=1024.5;\n  topicStats2.managedLedgerStats.storageSize=1024;\n  topicStats2.managedLedgerStats.storageLogicalSize=512;\n  topicStats2.msgBacklog=7;\n  topicStats2.managedLedgerStats.storageWriteRate=5.0;\n  topicStats2.managedLedgerStats.storageReadRate=2.5;\n  AggregatedReplicationStats replStats2=new AggregatedReplicationStats();\n  replStats2.msgRateIn=3.5;\n  replStats2.msgThroughputIn=512.0;\n  replStats2.msgRateOut=10.5;\n  replStats2.msgThroughputOut=1536.0;\n  replStats2.replicationBacklog=99;\n  replStats2.connectedCount=1;\n  replStats2.msgRateExpired=3.0;\n  replStats2.replicationDelayInSeconds=20;\n  topicStats2.replicationStats.put(namespace,replStats2);\n  AggregatedSubscriptionStats subStats2=new AggregatedSubscriptionStats();\n  subStats2.msgBacklog=27;\n  subStats2.msgRateRedeliver=0.7;\n  subStats2.unackedMessages=0;\n  subStats2.msgBacklogNoDelayed=20;\n  topicStats2.subscriptionStats.put(namespace,subStats2);\n  AggregatedNamespaceStats nsStats=new AggregatedNamespaceStats();\n  nsStats.updateStats(topicStats1);\n  nsStats.updateStats(topicStats2);\n  assertEquals(nsStats.topicsCount,2);\n  assertEquals(nsStats.subscriptionsCount,12);\n  assertEquals(nsStats.producersCount,4);\n  assertEquals(nsStats.consumersCount,8);\n  assertEquals(nsStats.rateIn,10.1);\n  assertEquals(nsStats.rateOut,20.5);\n  assertEquals(nsStats.throughputIn,10752.0);\n  assertEquals(nsStats.throughputOut,21504.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.msgBacklog,37);\n  assertEquals(nsStats.managedLedgerStats.storageWriteRate,17.0);\n  assertEquals(nsStats.managedLedgerStats.storageReadRate,8.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.managedLedgerStats.storageLogicalSize,2560);\n  AggregatedReplicationStats nsReplStats=nsStats.replicationStats.get(namespace);\n  assertNotNull(nsReplStats);\n  assertEquals(nsReplStats.msgRateIn,4.5);\n  assertEquals(nsReplStats.msgThroughputIn,638.0);\n  assertEquals(nsReplStats.msgRateOut,12.5);\n  assertEquals(nsReplStats.msgThroughputOut,1792.0);\n  assertEquals(nsReplStats.replicationBacklog,100);\n  assertEquals(nsReplStats.connectedCount,1);\n  assertEquals(nsReplStats.msgRateExpired,6.0);\n  assertEquals(nsReplStats.replicationDelayInSeconds,40);\n  AggregatedSubscriptionStats nsSubStats=nsStats.subscriptionStats.get(namespace);\n  assertNotNull(nsSubStats);\n  assertEquals(nsSubStats.msgBacklog,77);\n  assertEquals(nsSubStats.msgBacklogNoDelayed,50);\n  assertEquals(nsSubStats.msgRateRedeliver,2.2);\n  assertEquals(nsSubStats.unackedMessages,2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 632,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4815,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSimpleAggregation(){\n  final String namespace=\"tenant/cluster/ns\";\n  TopicStats topicStats1=new TopicStats();\n  topicStats1.subscriptionsCount=2;\n  topicStats1.producersCount=1;\n  topicStats1.consumersCount=3;\n  topicStats1.rateIn=10.0;\n  topicStats1.rateOut=20.0;\n  topicStats1.throughputIn=10240.0;\n  topicStats1.throughputOut=20480.0;\n  topicStats1.managedLedgerStats.storageSize=5120;\n  topicStats1.managedLedgerStats.storageLogicalSize=2048;\n  topicStats1.msgBacklog=30;\n  topicStats1.managedLedgerStats.storageWriteRate=12.0;\n  topicStats1.managedLedgerStats.storageReadRate=6.0;\n  AggregatedReplicationStats replStats1=new AggregatedReplicationStats();\n  replStats1.msgRateIn=1.0;\n  replStats1.msgThroughputIn=126.0;\n  replStats1.msgRateOut=2.0;\n  replStats1.msgThroughputOut=256.0;\n  replStats1.replicationBacklog=1;\n  replStats1.connectedCount=0;\n  replStats1.msgRateExpired=3.0;\n  replStats1.replicationDelayInSeconds=20;\n  topicStats1.replicationStats.put(namespace,replStats1);\n  AggregatedSubscriptionStats subStats1=new AggregatedSubscriptionStats();\n  subStats1.msgBacklog=50;\n  subStats1.msgRateRedeliver=1.5;\n  subStats1.unackedMessages=2;\n  subStats1.msgBacklogNoDelayed=30;\n  topicStats1.subscriptionStats.put(namespace,subStats1);\n  TopicStats topicStats2=new TopicStats();\n  topicStats2.subscriptionsCount=10;\n  topicStats2.producersCount=3;\n  topicStats2.consumersCount=5;\n  topicStats2.rateIn=0.1;\n  topicStats2.rateOut=0.5;\n  topicStats2.throughputIn=512.0;\n  topicStats2.throughputOut=1024.5;\n  topicStats2.managedLedgerStats.storageSize=1024;\n  topicStats2.managedLedgerStats.storageLogicalSize=512;\n  topicStats2.msgBacklog=7;\n  topicStats2.managedLedgerStats.storageWriteRate=5.0;\n  topicStats2.managedLedgerStats.storageReadRate=2.5;\n  AggregatedReplicationStats replStats2=new AggregatedReplicationStats();\n  replStats2.msgRateIn=3.5;\n  replStats2.msgThroughputIn=512.0;\n  replStats2.msgRateOut=10.5;\n  replStats2.msgThroughputOut=1536.0;\n  replStats2.replicationBacklog=99;\n  replStats2.connectedCount=1;\n  replStats2.msgRateExpired=3.0;\n  replStats2.replicationDelayInSeconds=20;\n  topicStats2.replicationStats.put(namespace,replStats2);\n  AggregatedSubscriptionStats subStats2=new AggregatedSubscriptionStats();\n  subStats2.msgBacklog=27;\n  subStats2.msgRateRedeliver=0.7;\n  subStats2.unackedMessages=0;\n  subStats2.msgBacklogNoDelayed=20;\n  topicStats2.subscriptionStats.put(namespace,subStats2);\n  AggregatedNamespaceStats nsStats=new AggregatedNamespaceStats();\n  nsStats.updateStats(topicStats1);\n  nsStats.updateStats(topicStats2);\n  assertEquals(nsStats.topicsCount,2);\n  assertEquals(nsStats.subscriptionsCount,12);\n  assertEquals(nsStats.producersCount,4);\n  assertEquals(nsStats.consumersCount,8);\n  assertEquals(nsStats.rateIn,10.1);\n  assertEquals(nsStats.rateOut,20.5);\n  assertEquals(nsStats.throughputIn,10752.0);\n  assertEquals(nsStats.throughputOut,21504.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.msgBacklog,37);\n  assertEquals(nsStats.managedLedgerStats.storageWriteRate,17.0);\n  assertEquals(nsStats.managedLedgerStats.storageReadRate,8.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.managedLedgerStats.storageLogicalSize,2560);\n  AggregatedReplicationStats nsReplStats=nsStats.replicationStats.get(namespace);\n  assertNotNull(nsReplStats);\n  assertEquals(nsReplStats.msgRateIn,4.5);\n  assertEquals(nsReplStats.msgThroughputIn,638.0);\n  assertEquals(nsReplStats.msgRateOut,12.5);\n  assertEquals(nsReplStats.msgThroughputOut,1792.0);\n  assertEquals(nsReplStats.replicationBacklog,100);\n  assertEquals(nsReplStats.connectedCount,1);\n  assertEquals(nsReplStats.msgRateExpired,6.0);\n  assertEquals(nsReplStats.replicationDelayInSeconds,40);\n  AggregatedSubscriptionStats nsSubStats=nsStats.subscriptionStats.get(namespace);\n  assertNotNull(nsSubStats);\n  assertEquals(nsSubStats.msgBacklog,77);\n  assertEquals(nsSubStats.msgBacklogNoDelayed,50);\n  assertEquals(nsSubStats.msgRateRedeliver,2.2);\n  assertEquals(nsSubStats.unackedMessages,2);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 638,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 36
      },
      "nodeContext" : "replStats1.msgRateOut=2.0;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.broker.stats.prometheus.AggregatedReplicationStats"
  }, {
    "nodeContext" : "replStats1",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 51,
      "startColumnNumber" : 8,
      "endLineNumber" : 51,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 35
      },
      "nodeContext" : "replStats1.msgThroughputOut",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 43
      },
      "nodeContext" : "replStats1.msgThroughputOut=256.0",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 44
      },
      "nodeContext" : "replStats1.msgThroughputOut=256.0;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4769,
        "startLineNumber" : 30,
        "startColumnNumber" : 40,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String namespace=\"tenant/cluster/ns\";\n  TopicStats topicStats1=new TopicStats();\n  topicStats1.subscriptionsCount=2;\n  topicStats1.producersCount=1;\n  topicStats1.consumersCount=3;\n  topicStats1.rateIn=10.0;\n  topicStats1.rateOut=20.0;\n  topicStats1.throughputIn=10240.0;\n  topicStats1.throughputOut=20480.0;\n  topicStats1.managedLedgerStats.storageSize=5120;\n  topicStats1.managedLedgerStats.storageLogicalSize=2048;\n  topicStats1.msgBacklog=30;\n  topicStats1.managedLedgerStats.storageWriteRate=12.0;\n  topicStats1.managedLedgerStats.storageReadRate=6.0;\n  AggregatedReplicationStats replStats1=new AggregatedReplicationStats();\n  replStats1.msgRateIn=1.0;\n  replStats1.msgThroughputIn=126.0;\n  replStats1.msgRateOut=2.0;\n  replStats1.msgThroughputOut=256.0;\n  replStats1.replicationBacklog=1;\n  replStats1.connectedCount=0;\n  replStats1.msgRateExpired=3.0;\n  replStats1.replicationDelayInSeconds=20;\n  topicStats1.replicationStats.put(namespace,replStats1);\n  AggregatedSubscriptionStats subStats1=new AggregatedSubscriptionStats();\n  subStats1.msgBacklog=50;\n  subStats1.msgRateRedeliver=1.5;\n  subStats1.unackedMessages=2;\n  subStats1.msgBacklogNoDelayed=30;\n  topicStats1.subscriptionStats.put(namespace,subStats1);\n  TopicStats topicStats2=new TopicStats();\n  topicStats2.subscriptionsCount=10;\n  topicStats2.producersCount=3;\n  topicStats2.consumersCount=5;\n  topicStats2.rateIn=0.1;\n  topicStats2.rateOut=0.5;\n  topicStats2.throughputIn=512.0;\n  topicStats2.throughputOut=1024.5;\n  topicStats2.managedLedgerStats.storageSize=1024;\n  topicStats2.managedLedgerStats.storageLogicalSize=512;\n  topicStats2.msgBacklog=7;\n  topicStats2.managedLedgerStats.storageWriteRate=5.0;\n  topicStats2.managedLedgerStats.storageReadRate=2.5;\n  AggregatedReplicationStats replStats2=new AggregatedReplicationStats();\n  replStats2.msgRateIn=3.5;\n  replStats2.msgThroughputIn=512.0;\n  replStats2.msgRateOut=10.5;\n  replStats2.msgThroughputOut=1536.0;\n  replStats2.replicationBacklog=99;\n  replStats2.connectedCount=1;\n  replStats2.msgRateExpired=3.0;\n  replStats2.replicationDelayInSeconds=20;\n  topicStats2.replicationStats.put(namespace,replStats2);\n  AggregatedSubscriptionStats subStats2=new AggregatedSubscriptionStats();\n  subStats2.msgBacklog=27;\n  subStats2.msgRateRedeliver=0.7;\n  subStats2.unackedMessages=0;\n  subStats2.msgBacklogNoDelayed=20;\n  topicStats2.subscriptionStats.put(namespace,subStats2);\n  AggregatedNamespaceStats nsStats=new AggregatedNamespaceStats();\n  nsStats.updateStats(topicStats1);\n  nsStats.updateStats(topicStats2);\n  assertEquals(nsStats.topicsCount,2);\n  assertEquals(nsStats.subscriptionsCount,12);\n  assertEquals(nsStats.producersCount,4);\n  assertEquals(nsStats.consumersCount,8);\n  assertEquals(nsStats.rateIn,10.1);\n  assertEquals(nsStats.rateOut,20.5);\n  assertEquals(nsStats.throughputIn,10752.0);\n  assertEquals(nsStats.throughputOut,21504.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.msgBacklog,37);\n  assertEquals(nsStats.managedLedgerStats.storageWriteRate,17.0);\n  assertEquals(nsStats.managedLedgerStats.storageReadRate,8.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.managedLedgerStats.storageLogicalSize,2560);\n  AggregatedReplicationStats nsReplStats=nsStats.replicationStats.get(namespace);\n  assertNotNull(nsReplStats);\n  assertEquals(nsReplStats.msgRateIn,4.5);\n  assertEquals(nsReplStats.msgThroughputIn,638.0);\n  assertEquals(nsReplStats.msgRateOut,12.5);\n  assertEquals(nsReplStats.msgThroughputOut,1792.0);\n  assertEquals(nsReplStats.replicationBacklog,100);\n  assertEquals(nsReplStats.connectedCount,1);\n  assertEquals(nsReplStats.msgRateExpired,6.0);\n  assertEquals(nsReplStats.replicationDelayInSeconds,40);\n  AggregatedSubscriptionStats nsSubStats=nsStats.subscriptionStats.get(namespace);\n  assertNotNull(nsSubStats);\n  assertEquals(nsSubStats.msgBacklog,77);\n  assertEquals(nsSubStats.msgBacklogNoDelayed,50);\n  assertEquals(nsSubStats.msgRateRedeliver,2.2);\n  assertEquals(nsSubStats.unackedMessages,2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 632,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4815,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSimpleAggregation(){\n  final String namespace=\"tenant/cluster/ns\";\n  TopicStats topicStats1=new TopicStats();\n  topicStats1.subscriptionsCount=2;\n  topicStats1.producersCount=1;\n  topicStats1.consumersCount=3;\n  topicStats1.rateIn=10.0;\n  topicStats1.rateOut=20.0;\n  topicStats1.throughputIn=10240.0;\n  topicStats1.throughputOut=20480.0;\n  topicStats1.managedLedgerStats.storageSize=5120;\n  topicStats1.managedLedgerStats.storageLogicalSize=2048;\n  topicStats1.msgBacklog=30;\n  topicStats1.managedLedgerStats.storageWriteRate=12.0;\n  topicStats1.managedLedgerStats.storageReadRate=6.0;\n  AggregatedReplicationStats replStats1=new AggregatedReplicationStats();\n  replStats1.msgRateIn=1.0;\n  replStats1.msgThroughputIn=126.0;\n  replStats1.msgRateOut=2.0;\n  replStats1.msgThroughputOut=256.0;\n  replStats1.replicationBacklog=1;\n  replStats1.connectedCount=0;\n  replStats1.msgRateExpired=3.0;\n  replStats1.replicationDelayInSeconds=20;\n  topicStats1.replicationStats.put(namespace,replStats1);\n  AggregatedSubscriptionStats subStats1=new AggregatedSubscriptionStats();\n  subStats1.msgBacklog=50;\n  subStats1.msgRateRedeliver=1.5;\n  subStats1.unackedMessages=2;\n  subStats1.msgBacklogNoDelayed=30;\n  topicStats1.subscriptionStats.put(namespace,subStats1);\n  TopicStats topicStats2=new TopicStats();\n  topicStats2.subscriptionsCount=10;\n  topicStats2.producersCount=3;\n  topicStats2.consumersCount=5;\n  topicStats2.rateIn=0.1;\n  topicStats2.rateOut=0.5;\n  topicStats2.throughputIn=512.0;\n  topicStats2.throughputOut=1024.5;\n  topicStats2.managedLedgerStats.storageSize=1024;\n  topicStats2.managedLedgerStats.storageLogicalSize=512;\n  topicStats2.msgBacklog=7;\n  topicStats2.managedLedgerStats.storageWriteRate=5.0;\n  topicStats2.managedLedgerStats.storageReadRate=2.5;\n  AggregatedReplicationStats replStats2=new AggregatedReplicationStats();\n  replStats2.msgRateIn=3.5;\n  replStats2.msgThroughputIn=512.0;\n  replStats2.msgRateOut=10.5;\n  replStats2.msgThroughputOut=1536.0;\n  replStats2.replicationBacklog=99;\n  replStats2.connectedCount=1;\n  replStats2.msgRateExpired=3.0;\n  replStats2.replicationDelayInSeconds=20;\n  topicStats2.replicationStats.put(namespace,replStats2);\n  AggregatedSubscriptionStats subStats2=new AggregatedSubscriptionStats();\n  subStats2.msgBacklog=27;\n  subStats2.msgRateRedeliver=0.7;\n  subStats2.unackedMessages=0;\n  subStats2.msgBacklogNoDelayed=20;\n  topicStats2.subscriptionStats.put(namespace,subStats2);\n  AggregatedNamespaceStats nsStats=new AggregatedNamespaceStats();\n  nsStats.updateStats(topicStats1);\n  nsStats.updateStats(topicStats2);\n  assertEquals(nsStats.topicsCount,2);\n  assertEquals(nsStats.subscriptionsCount,12);\n  assertEquals(nsStats.producersCount,4);\n  assertEquals(nsStats.consumersCount,8);\n  assertEquals(nsStats.rateIn,10.1);\n  assertEquals(nsStats.rateOut,20.5);\n  assertEquals(nsStats.throughputIn,10752.0);\n  assertEquals(nsStats.throughputOut,21504.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.msgBacklog,37);\n  assertEquals(nsStats.managedLedgerStats.storageWriteRate,17.0);\n  assertEquals(nsStats.managedLedgerStats.storageReadRate,8.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.managedLedgerStats.storageLogicalSize,2560);\n  AggregatedReplicationStats nsReplStats=nsStats.replicationStats.get(namespace);\n  assertNotNull(nsReplStats);\n  assertEquals(nsReplStats.msgRateIn,4.5);\n  assertEquals(nsReplStats.msgThroughputIn,638.0);\n  assertEquals(nsReplStats.msgRateOut,12.5);\n  assertEquals(nsReplStats.msgThroughputOut,1792.0);\n  assertEquals(nsReplStats.replicationBacklog,100);\n  assertEquals(nsReplStats.connectedCount,1);\n  assertEquals(nsReplStats.msgRateExpired,6.0);\n  assertEquals(nsReplStats.replicationDelayInSeconds,40);\n  AggregatedSubscriptionStats nsSubStats=nsStats.subscriptionStats.get(namespace);\n  assertNotNull(nsSubStats);\n  assertEquals(nsSubStats.msgBacklog,77);\n  assertEquals(nsSubStats.msgBacklogNoDelayed,50);\n  assertEquals(nsSubStats.msgRateRedeliver,2.2);\n  assertEquals(nsSubStats.unackedMessages,2);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 638,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 44
      },
      "nodeContext" : "replStats1.msgThroughputOut=256.0;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.broker.stats.prometheus.AggregatedReplicationStats"
  }, {
    "nodeContext" : "replStats1",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 52,
      "startColumnNumber" : 8,
      "endLineNumber" : 52,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 37
      },
      "nodeContext" : "replStats1.replicationBacklog",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 41
      },
      "nodeContext" : "replStats1.replicationBacklog=1",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 42
      },
      "nodeContext" : "replStats1.replicationBacklog=1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4769,
        "startLineNumber" : 30,
        "startColumnNumber" : 40,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String namespace=\"tenant/cluster/ns\";\n  TopicStats topicStats1=new TopicStats();\n  topicStats1.subscriptionsCount=2;\n  topicStats1.producersCount=1;\n  topicStats1.consumersCount=3;\n  topicStats1.rateIn=10.0;\n  topicStats1.rateOut=20.0;\n  topicStats1.throughputIn=10240.0;\n  topicStats1.throughputOut=20480.0;\n  topicStats1.managedLedgerStats.storageSize=5120;\n  topicStats1.managedLedgerStats.storageLogicalSize=2048;\n  topicStats1.msgBacklog=30;\n  topicStats1.managedLedgerStats.storageWriteRate=12.0;\n  topicStats1.managedLedgerStats.storageReadRate=6.0;\n  AggregatedReplicationStats replStats1=new AggregatedReplicationStats();\n  replStats1.msgRateIn=1.0;\n  replStats1.msgThroughputIn=126.0;\n  replStats1.msgRateOut=2.0;\n  replStats1.msgThroughputOut=256.0;\n  replStats1.replicationBacklog=1;\n  replStats1.connectedCount=0;\n  replStats1.msgRateExpired=3.0;\n  replStats1.replicationDelayInSeconds=20;\n  topicStats1.replicationStats.put(namespace,replStats1);\n  AggregatedSubscriptionStats subStats1=new AggregatedSubscriptionStats();\n  subStats1.msgBacklog=50;\n  subStats1.msgRateRedeliver=1.5;\n  subStats1.unackedMessages=2;\n  subStats1.msgBacklogNoDelayed=30;\n  topicStats1.subscriptionStats.put(namespace,subStats1);\n  TopicStats topicStats2=new TopicStats();\n  topicStats2.subscriptionsCount=10;\n  topicStats2.producersCount=3;\n  topicStats2.consumersCount=5;\n  topicStats2.rateIn=0.1;\n  topicStats2.rateOut=0.5;\n  topicStats2.throughputIn=512.0;\n  topicStats2.throughputOut=1024.5;\n  topicStats2.managedLedgerStats.storageSize=1024;\n  topicStats2.managedLedgerStats.storageLogicalSize=512;\n  topicStats2.msgBacklog=7;\n  topicStats2.managedLedgerStats.storageWriteRate=5.0;\n  topicStats2.managedLedgerStats.storageReadRate=2.5;\n  AggregatedReplicationStats replStats2=new AggregatedReplicationStats();\n  replStats2.msgRateIn=3.5;\n  replStats2.msgThroughputIn=512.0;\n  replStats2.msgRateOut=10.5;\n  replStats2.msgThroughputOut=1536.0;\n  replStats2.replicationBacklog=99;\n  replStats2.connectedCount=1;\n  replStats2.msgRateExpired=3.0;\n  replStats2.replicationDelayInSeconds=20;\n  topicStats2.replicationStats.put(namespace,replStats2);\n  AggregatedSubscriptionStats subStats2=new AggregatedSubscriptionStats();\n  subStats2.msgBacklog=27;\n  subStats2.msgRateRedeliver=0.7;\n  subStats2.unackedMessages=0;\n  subStats2.msgBacklogNoDelayed=20;\n  topicStats2.subscriptionStats.put(namespace,subStats2);\n  AggregatedNamespaceStats nsStats=new AggregatedNamespaceStats();\n  nsStats.updateStats(topicStats1);\n  nsStats.updateStats(topicStats2);\n  assertEquals(nsStats.topicsCount,2);\n  assertEquals(nsStats.subscriptionsCount,12);\n  assertEquals(nsStats.producersCount,4);\n  assertEquals(nsStats.consumersCount,8);\n  assertEquals(nsStats.rateIn,10.1);\n  assertEquals(nsStats.rateOut,20.5);\n  assertEquals(nsStats.throughputIn,10752.0);\n  assertEquals(nsStats.throughputOut,21504.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.msgBacklog,37);\n  assertEquals(nsStats.managedLedgerStats.storageWriteRate,17.0);\n  assertEquals(nsStats.managedLedgerStats.storageReadRate,8.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.managedLedgerStats.storageLogicalSize,2560);\n  AggregatedReplicationStats nsReplStats=nsStats.replicationStats.get(namespace);\n  assertNotNull(nsReplStats);\n  assertEquals(nsReplStats.msgRateIn,4.5);\n  assertEquals(nsReplStats.msgThroughputIn,638.0);\n  assertEquals(nsReplStats.msgRateOut,12.5);\n  assertEquals(nsReplStats.msgThroughputOut,1792.0);\n  assertEquals(nsReplStats.replicationBacklog,100);\n  assertEquals(nsReplStats.connectedCount,1);\n  assertEquals(nsReplStats.msgRateExpired,6.0);\n  assertEquals(nsReplStats.replicationDelayInSeconds,40);\n  AggregatedSubscriptionStats nsSubStats=nsStats.subscriptionStats.get(namespace);\n  assertNotNull(nsSubStats);\n  assertEquals(nsSubStats.msgBacklog,77);\n  assertEquals(nsSubStats.msgBacklogNoDelayed,50);\n  assertEquals(nsSubStats.msgRateRedeliver,2.2);\n  assertEquals(nsSubStats.unackedMessages,2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 632,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4815,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSimpleAggregation(){\n  final String namespace=\"tenant/cluster/ns\";\n  TopicStats topicStats1=new TopicStats();\n  topicStats1.subscriptionsCount=2;\n  topicStats1.producersCount=1;\n  topicStats1.consumersCount=3;\n  topicStats1.rateIn=10.0;\n  topicStats1.rateOut=20.0;\n  topicStats1.throughputIn=10240.0;\n  topicStats1.throughputOut=20480.0;\n  topicStats1.managedLedgerStats.storageSize=5120;\n  topicStats1.managedLedgerStats.storageLogicalSize=2048;\n  topicStats1.msgBacklog=30;\n  topicStats1.managedLedgerStats.storageWriteRate=12.0;\n  topicStats1.managedLedgerStats.storageReadRate=6.0;\n  AggregatedReplicationStats replStats1=new AggregatedReplicationStats();\n  replStats1.msgRateIn=1.0;\n  replStats1.msgThroughputIn=126.0;\n  replStats1.msgRateOut=2.0;\n  replStats1.msgThroughputOut=256.0;\n  replStats1.replicationBacklog=1;\n  replStats1.connectedCount=0;\n  replStats1.msgRateExpired=3.0;\n  replStats1.replicationDelayInSeconds=20;\n  topicStats1.replicationStats.put(namespace,replStats1);\n  AggregatedSubscriptionStats subStats1=new AggregatedSubscriptionStats();\n  subStats1.msgBacklog=50;\n  subStats1.msgRateRedeliver=1.5;\n  subStats1.unackedMessages=2;\n  subStats1.msgBacklogNoDelayed=30;\n  topicStats1.subscriptionStats.put(namespace,subStats1);\n  TopicStats topicStats2=new TopicStats();\n  topicStats2.subscriptionsCount=10;\n  topicStats2.producersCount=3;\n  topicStats2.consumersCount=5;\n  topicStats2.rateIn=0.1;\n  topicStats2.rateOut=0.5;\n  topicStats2.throughputIn=512.0;\n  topicStats2.throughputOut=1024.5;\n  topicStats2.managedLedgerStats.storageSize=1024;\n  topicStats2.managedLedgerStats.storageLogicalSize=512;\n  topicStats2.msgBacklog=7;\n  topicStats2.managedLedgerStats.storageWriteRate=5.0;\n  topicStats2.managedLedgerStats.storageReadRate=2.5;\n  AggregatedReplicationStats replStats2=new AggregatedReplicationStats();\n  replStats2.msgRateIn=3.5;\n  replStats2.msgThroughputIn=512.0;\n  replStats2.msgRateOut=10.5;\n  replStats2.msgThroughputOut=1536.0;\n  replStats2.replicationBacklog=99;\n  replStats2.connectedCount=1;\n  replStats2.msgRateExpired=3.0;\n  replStats2.replicationDelayInSeconds=20;\n  topicStats2.replicationStats.put(namespace,replStats2);\n  AggregatedSubscriptionStats subStats2=new AggregatedSubscriptionStats();\n  subStats2.msgBacklog=27;\n  subStats2.msgRateRedeliver=0.7;\n  subStats2.unackedMessages=0;\n  subStats2.msgBacklogNoDelayed=20;\n  topicStats2.subscriptionStats.put(namespace,subStats2);\n  AggregatedNamespaceStats nsStats=new AggregatedNamespaceStats();\n  nsStats.updateStats(topicStats1);\n  nsStats.updateStats(topicStats2);\n  assertEquals(nsStats.topicsCount,2);\n  assertEquals(nsStats.subscriptionsCount,12);\n  assertEquals(nsStats.producersCount,4);\n  assertEquals(nsStats.consumersCount,8);\n  assertEquals(nsStats.rateIn,10.1);\n  assertEquals(nsStats.rateOut,20.5);\n  assertEquals(nsStats.throughputIn,10752.0);\n  assertEquals(nsStats.throughputOut,21504.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.msgBacklog,37);\n  assertEquals(nsStats.managedLedgerStats.storageWriteRate,17.0);\n  assertEquals(nsStats.managedLedgerStats.storageReadRate,8.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.managedLedgerStats.storageLogicalSize,2560);\n  AggregatedReplicationStats nsReplStats=nsStats.replicationStats.get(namespace);\n  assertNotNull(nsReplStats);\n  assertEquals(nsReplStats.msgRateIn,4.5);\n  assertEquals(nsReplStats.msgThroughputIn,638.0);\n  assertEquals(nsReplStats.msgRateOut,12.5);\n  assertEquals(nsReplStats.msgThroughputOut,1792.0);\n  assertEquals(nsReplStats.replicationBacklog,100);\n  assertEquals(nsReplStats.connectedCount,1);\n  assertEquals(nsReplStats.msgRateExpired,6.0);\n  assertEquals(nsReplStats.replicationDelayInSeconds,40);\n  AggregatedSubscriptionStats nsSubStats=nsStats.subscriptionStats.get(namespace);\n  assertNotNull(nsSubStats);\n  assertEquals(nsSubStats.msgBacklog,77);\n  assertEquals(nsSubStats.msgBacklogNoDelayed,50);\n  assertEquals(nsSubStats.msgRateRedeliver,2.2);\n  assertEquals(nsSubStats.unackedMessages,2);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 638,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 42
      },
      "nodeContext" : "replStats1.replicationBacklog=1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.broker.stats.prometheus.AggregatedReplicationStats"
  }, {
    "nodeContext" : "replStats1",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 53,
      "startColumnNumber" : 8,
      "endLineNumber" : 53,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 33
      },
      "nodeContext" : "replStats1.connectedCount",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 37
      },
      "nodeContext" : "replStats1.connectedCount=0",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 38
      },
      "nodeContext" : "replStats1.connectedCount=0;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4769,
        "startLineNumber" : 30,
        "startColumnNumber" : 40,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String namespace=\"tenant/cluster/ns\";\n  TopicStats topicStats1=new TopicStats();\n  topicStats1.subscriptionsCount=2;\n  topicStats1.producersCount=1;\n  topicStats1.consumersCount=3;\n  topicStats1.rateIn=10.0;\n  topicStats1.rateOut=20.0;\n  topicStats1.throughputIn=10240.0;\n  topicStats1.throughputOut=20480.0;\n  topicStats1.managedLedgerStats.storageSize=5120;\n  topicStats1.managedLedgerStats.storageLogicalSize=2048;\n  topicStats1.msgBacklog=30;\n  topicStats1.managedLedgerStats.storageWriteRate=12.0;\n  topicStats1.managedLedgerStats.storageReadRate=6.0;\n  AggregatedReplicationStats replStats1=new AggregatedReplicationStats();\n  replStats1.msgRateIn=1.0;\n  replStats1.msgThroughputIn=126.0;\n  replStats1.msgRateOut=2.0;\n  replStats1.msgThroughputOut=256.0;\n  replStats1.replicationBacklog=1;\n  replStats1.connectedCount=0;\n  replStats1.msgRateExpired=3.0;\n  replStats1.replicationDelayInSeconds=20;\n  topicStats1.replicationStats.put(namespace,replStats1);\n  AggregatedSubscriptionStats subStats1=new AggregatedSubscriptionStats();\n  subStats1.msgBacklog=50;\n  subStats1.msgRateRedeliver=1.5;\n  subStats1.unackedMessages=2;\n  subStats1.msgBacklogNoDelayed=30;\n  topicStats1.subscriptionStats.put(namespace,subStats1);\n  TopicStats topicStats2=new TopicStats();\n  topicStats2.subscriptionsCount=10;\n  topicStats2.producersCount=3;\n  topicStats2.consumersCount=5;\n  topicStats2.rateIn=0.1;\n  topicStats2.rateOut=0.5;\n  topicStats2.throughputIn=512.0;\n  topicStats2.throughputOut=1024.5;\n  topicStats2.managedLedgerStats.storageSize=1024;\n  topicStats2.managedLedgerStats.storageLogicalSize=512;\n  topicStats2.msgBacklog=7;\n  topicStats2.managedLedgerStats.storageWriteRate=5.0;\n  topicStats2.managedLedgerStats.storageReadRate=2.5;\n  AggregatedReplicationStats replStats2=new AggregatedReplicationStats();\n  replStats2.msgRateIn=3.5;\n  replStats2.msgThroughputIn=512.0;\n  replStats2.msgRateOut=10.5;\n  replStats2.msgThroughputOut=1536.0;\n  replStats2.replicationBacklog=99;\n  replStats2.connectedCount=1;\n  replStats2.msgRateExpired=3.0;\n  replStats2.replicationDelayInSeconds=20;\n  topicStats2.replicationStats.put(namespace,replStats2);\n  AggregatedSubscriptionStats subStats2=new AggregatedSubscriptionStats();\n  subStats2.msgBacklog=27;\n  subStats2.msgRateRedeliver=0.7;\n  subStats2.unackedMessages=0;\n  subStats2.msgBacklogNoDelayed=20;\n  topicStats2.subscriptionStats.put(namespace,subStats2);\n  AggregatedNamespaceStats nsStats=new AggregatedNamespaceStats();\n  nsStats.updateStats(topicStats1);\n  nsStats.updateStats(topicStats2);\n  assertEquals(nsStats.topicsCount,2);\n  assertEquals(nsStats.subscriptionsCount,12);\n  assertEquals(nsStats.producersCount,4);\n  assertEquals(nsStats.consumersCount,8);\n  assertEquals(nsStats.rateIn,10.1);\n  assertEquals(nsStats.rateOut,20.5);\n  assertEquals(nsStats.throughputIn,10752.0);\n  assertEquals(nsStats.throughputOut,21504.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.msgBacklog,37);\n  assertEquals(nsStats.managedLedgerStats.storageWriteRate,17.0);\n  assertEquals(nsStats.managedLedgerStats.storageReadRate,8.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.managedLedgerStats.storageLogicalSize,2560);\n  AggregatedReplicationStats nsReplStats=nsStats.replicationStats.get(namespace);\n  assertNotNull(nsReplStats);\n  assertEquals(nsReplStats.msgRateIn,4.5);\n  assertEquals(nsReplStats.msgThroughputIn,638.0);\n  assertEquals(nsReplStats.msgRateOut,12.5);\n  assertEquals(nsReplStats.msgThroughputOut,1792.0);\n  assertEquals(nsReplStats.replicationBacklog,100);\n  assertEquals(nsReplStats.connectedCount,1);\n  assertEquals(nsReplStats.msgRateExpired,6.0);\n  assertEquals(nsReplStats.replicationDelayInSeconds,40);\n  AggregatedSubscriptionStats nsSubStats=nsStats.subscriptionStats.get(namespace);\n  assertNotNull(nsSubStats);\n  assertEquals(nsSubStats.msgBacklog,77);\n  assertEquals(nsSubStats.msgBacklogNoDelayed,50);\n  assertEquals(nsSubStats.msgRateRedeliver,2.2);\n  assertEquals(nsSubStats.unackedMessages,2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 632,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4815,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSimpleAggregation(){\n  final String namespace=\"tenant/cluster/ns\";\n  TopicStats topicStats1=new TopicStats();\n  topicStats1.subscriptionsCount=2;\n  topicStats1.producersCount=1;\n  topicStats1.consumersCount=3;\n  topicStats1.rateIn=10.0;\n  topicStats1.rateOut=20.0;\n  topicStats1.throughputIn=10240.0;\n  topicStats1.throughputOut=20480.0;\n  topicStats1.managedLedgerStats.storageSize=5120;\n  topicStats1.managedLedgerStats.storageLogicalSize=2048;\n  topicStats1.msgBacklog=30;\n  topicStats1.managedLedgerStats.storageWriteRate=12.0;\n  topicStats1.managedLedgerStats.storageReadRate=6.0;\n  AggregatedReplicationStats replStats1=new AggregatedReplicationStats();\n  replStats1.msgRateIn=1.0;\n  replStats1.msgThroughputIn=126.0;\n  replStats1.msgRateOut=2.0;\n  replStats1.msgThroughputOut=256.0;\n  replStats1.replicationBacklog=1;\n  replStats1.connectedCount=0;\n  replStats1.msgRateExpired=3.0;\n  replStats1.replicationDelayInSeconds=20;\n  topicStats1.replicationStats.put(namespace,replStats1);\n  AggregatedSubscriptionStats subStats1=new AggregatedSubscriptionStats();\n  subStats1.msgBacklog=50;\n  subStats1.msgRateRedeliver=1.5;\n  subStats1.unackedMessages=2;\n  subStats1.msgBacklogNoDelayed=30;\n  topicStats1.subscriptionStats.put(namespace,subStats1);\n  TopicStats topicStats2=new TopicStats();\n  topicStats2.subscriptionsCount=10;\n  topicStats2.producersCount=3;\n  topicStats2.consumersCount=5;\n  topicStats2.rateIn=0.1;\n  topicStats2.rateOut=0.5;\n  topicStats2.throughputIn=512.0;\n  topicStats2.throughputOut=1024.5;\n  topicStats2.managedLedgerStats.storageSize=1024;\n  topicStats2.managedLedgerStats.storageLogicalSize=512;\n  topicStats2.msgBacklog=7;\n  topicStats2.managedLedgerStats.storageWriteRate=5.0;\n  topicStats2.managedLedgerStats.storageReadRate=2.5;\n  AggregatedReplicationStats replStats2=new AggregatedReplicationStats();\n  replStats2.msgRateIn=3.5;\n  replStats2.msgThroughputIn=512.0;\n  replStats2.msgRateOut=10.5;\n  replStats2.msgThroughputOut=1536.0;\n  replStats2.replicationBacklog=99;\n  replStats2.connectedCount=1;\n  replStats2.msgRateExpired=3.0;\n  replStats2.replicationDelayInSeconds=20;\n  topicStats2.replicationStats.put(namespace,replStats2);\n  AggregatedSubscriptionStats subStats2=new AggregatedSubscriptionStats();\n  subStats2.msgBacklog=27;\n  subStats2.msgRateRedeliver=0.7;\n  subStats2.unackedMessages=0;\n  subStats2.msgBacklogNoDelayed=20;\n  topicStats2.subscriptionStats.put(namespace,subStats2);\n  AggregatedNamespaceStats nsStats=new AggregatedNamespaceStats();\n  nsStats.updateStats(topicStats1);\n  nsStats.updateStats(topicStats2);\n  assertEquals(nsStats.topicsCount,2);\n  assertEquals(nsStats.subscriptionsCount,12);\n  assertEquals(nsStats.producersCount,4);\n  assertEquals(nsStats.consumersCount,8);\n  assertEquals(nsStats.rateIn,10.1);\n  assertEquals(nsStats.rateOut,20.5);\n  assertEquals(nsStats.throughputIn,10752.0);\n  assertEquals(nsStats.throughputOut,21504.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.msgBacklog,37);\n  assertEquals(nsStats.managedLedgerStats.storageWriteRate,17.0);\n  assertEquals(nsStats.managedLedgerStats.storageReadRate,8.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.managedLedgerStats.storageLogicalSize,2560);\n  AggregatedReplicationStats nsReplStats=nsStats.replicationStats.get(namespace);\n  assertNotNull(nsReplStats);\n  assertEquals(nsReplStats.msgRateIn,4.5);\n  assertEquals(nsReplStats.msgThroughputIn,638.0);\n  assertEquals(nsReplStats.msgRateOut,12.5);\n  assertEquals(nsReplStats.msgThroughputOut,1792.0);\n  assertEquals(nsReplStats.replicationBacklog,100);\n  assertEquals(nsReplStats.connectedCount,1);\n  assertEquals(nsReplStats.msgRateExpired,6.0);\n  assertEquals(nsReplStats.replicationDelayInSeconds,40);\n  AggregatedSubscriptionStats nsSubStats=nsStats.subscriptionStats.get(namespace);\n  assertNotNull(nsSubStats);\n  assertEquals(nsSubStats.msgBacklog,77);\n  assertEquals(nsSubStats.msgBacklogNoDelayed,50);\n  assertEquals(nsSubStats.msgRateRedeliver,2.2);\n  assertEquals(nsSubStats.unackedMessages,2);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 638,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 38
      },
      "nodeContext" : "replStats1.connectedCount=0;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.broker.stats.prometheus.AggregatedReplicationStats"
  }, {
    "nodeContext" : "replStats1",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 54,
      "startColumnNumber" : 8,
      "endLineNumber" : 54,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 33
      },
      "nodeContext" : "replStats1.msgRateExpired",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 39
      },
      "nodeContext" : "replStats1.msgRateExpired=3.0",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 40
      },
      "nodeContext" : "replStats1.msgRateExpired=3.0;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4769,
        "startLineNumber" : 30,
        "startColumnNumber" : 40,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String namespace=\"tenant/cluster/ns\";\n  TopicStats topicStats1=new TopicStats();\n  topicStats1.subscriptionsCount=2;\n  topicStats1.producersCount=1;\n  topicStats1.consumersCount=3;\n  topicStats1.rateIn=10.0;\n  topicStats1.rateOut=20.0;\n  topicStats1.throughputIn=10240.0;\n  topicStats1.throughputOut=20480.0;\n  topicStats1.managedLedgerStats.storageSize=5120;\n  topicStats1.managedLedgerStats.storageLogicalSize=2048;\n  topicStats1.msgBacklog=30;\n  topicStats1.managedLedgerStats.storageWriteRate=12.0;\n  topicStats1.managedLedgerStats.storageReadRate=6.0;\n  AggregatedReplicationStats replStats1=new AggregatedReplicationStats();\n  replStats1.msgRateIn=1.0;\n  replStats1.msgThroughputIn=126.0;\n  replStats1.msgRateOut=2.0;\n  replStats1.msgThroughputOut=256.0;\n  replStats1.replicationBacklog=1;\n  replStats1.connectedCount=0;\n  replStats1.msgRateExpired=3.0;\n  replStats1.replicationDelayInSeconds=20;\n  topicStats1.replicationStats.put(namespace,replStats1);\n  AggregatedSubscriptionStats subStats1=new AggregatedSubscriptionStats();\n  subStats1.msgBacklog=50;\n  subStats1.msgRateRedeliver=1.5;\n  subStats1.unackedMessages=2;\n  subStats1.msgBacklogNoDelayed=30;\n  topicStats1.subscriptionStats.put(namespace,subStats1);\n  TopicStats topicStats2=new TopicStats();\n  topicStats2.subscriptionsCount=10;\n  topicStats2.producersCount=3;\n  topicStats2.consumersCount=5;\n  topicStats2.rateIn=0.1;\n  topicStats2.rateOut=0.5;\n  topicStats2.throughputIn=512.0;\n  topicStats2.throughputOut=1024.5;\n  topicStats2.managedLedgerStats.storageSize=1024;\n  topicStats2.managedLedgerStats.storageLogicalSize=512;\n  topicStats2.msgBacklog=7;\n  topicStats2.managedLedgerStats.storageWriteRate=5.0;\n  topicStats2.managedLedgerStats.storageReadRate=2.5;\n  AggregatedReplicationStats replStats2=new AggregatedReplicationStats();\n  replStats2.msgRateIn=3.5;\n  replStats2.msgThroughputIn=512.0;\n  replStats2.msgRateOut=10.5;\n  replStats2.msgThroughputOut=1536.0;\n  replStats2.replicationBacklog=99;\n  replStats2.connectedCount=1;\n  replStats2.msgRateExpired=3.0;\n  replStats2.replicationDelayInSeconds=20;\n  topicStats2.replicationStats.put(namespace,replStats2);\n  AggregatedSubscriptionStats subStats2=new AggregatedSubscriptionStats();\n  subStats2.msgBacklog=27;\n  subStats2.msgRateRedeliver=0.7;\n  subStats2.unackedMessages=0;\n  subStats2.msgBacklogNoDelayed=20;\n  topicStats2.subscriptionStats.put(namespace,subStats2);\n  AggregatedNamespaceStats nsStats=new AggregatedNamespaceStats();\n  nsStats.updateStats(topicStats1);\n  nsStats.updateStats(topicStats2);\n  assertEquals(nsStats.topicsCount,2);\n  assertEquals(nsStats.subscriptionsCount,12);\n  assertEquals(nsStats.producersCount,4);\n  assertEquals(nsStats.consumersCount,8);\n  assertEquals(nsStats.rateIn,10.1);\n  assertEquals(nsStats.rateOut,20.5);\n  assertEquals(nsStats.throughputIn,10752.0);\n  assertEquals(nsStats.throughputOut,21504.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.msgBacklog,37);\n  assertEquals(nsStats.managedLedgerStats.storageWriteRate,17.0);\n  assertEquals(nsStats.managedLedgerStats.storageReadRate,8.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.managedLedgerStats.storageLogicalSize,2560);\n  AggregatedReplicationStats nsReplStats=nsStats.replicationStats.get(namespace);\n  assertNotNull(nsReplStats);\n  assertEquals(nsReplStats.msgRateIn,4.5);\n  assertEquals(nsReplStats.msgThroughputIn,638.0);\n  assertEquals(nsReplStats.msgRateOut,12.5);\n  assertEquals(nsReplStats.msgThroughputOut,1792.0);\n  assertEquals(nsReplStats.replicationBacklog,100);\n  assertEquals(nsReplStats.connectedCount,1);\n  assertEquals(nsReplStats.msgRateExpired,6.0);\n  assertEquals(nsReplStats.replicationDelayInSeconds,40);\n  AggregatedSubscriptionStats nsSubStats=nsStats.subscriptionStats.get(namespace);\n  assertNotNull(nsSubStats);\n  assertEquals(nsSubStats.msgBacklog,77);\n  assertEquals(nsSubStats.msgBacklogNoDelayed,50);\n  assertEquals(nsSubStats.msgRateRedeliver,2.2);\n  assertEquals(nsSubStats.unackedMessages,2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 632,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4815,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSimpleAggregation(){\n  final String namespace=\"tenant/cluster/ns\";\n  TopicStats topicStats1=new TopicStats();\n  topicStats1.subscriptionsCount=2;\n  topicStats1.producersCount=1;\n  topicStats1.consumersCount=3;\n  topicStats1.rateIn=10.0;\n  topicStats1.rateOut=20.0;\n  topicStats1.throughputIn=10240.0;\n  topicStats1.throughputOut=20480.0;\n  topicStats1.managedLedgerStats.storageSize=5120;\n  topicStats1.managedLedgerStats.storageLogicalSize=2048;\n  topicStats1.msgBacklog=30;\n  topicStats1.managedLedgerStats.storageWriteRate=12.0;\n  topicStats1.managedLedgerStats.storageReadRate=6.0;\n  AggregatedReplicationStats replStats1=new AggregatedReplicationStats();\n  replStats1.msgRateIn=1.0;\n  replStats1.msgThroughputIn=126.0;\n  replStats1.msgRateOut=2.0;\n  replStats1.msgThroughputOut=256.0;\n  replStats1.replicationBacklog=1;\n  replStats1.connectedCount=0;\n  replStats1.msgRateExpired=3.0;\n  replStats1.replicationDelayInSeconds=20;\n  topicStats1.replicationStats.put(namespace,replStats1);\n  AggregatedSubscriptionStats subStats1=new AggregatedSubscriptionStats();\n  subStats1.msgBacklog=50;\n  subStats1.msgRateRedeliver=1.5;\n  subStats1.unackedMessages=2;\n  subStats1.msgBacklogNoDelayed=30;\n  topicStats1.subscriptionStats.put(namespace,subStats1);\n  TopicStats topicStats2=new TopicStats();\n  topicStats2.subscriptionsCount=10;\n  topicStats2.producersCount=3;\n  topicStats2.consumersCount=5;\n  topicStats2.rateIn=0.1;\n  topicStats2.rateOut=0.5;\n  topicStats2.throughputIn=512.0;\n  topicStats2.throughputOut=1024.5;\n  topicStats2.managedLedgerStats.storageSize=1024;\n  topicStats2.managedLedgerStats.storageLogicalSize=512;\n  topicStats2.msgBacklog=7;\n  topicStats2.managedLedgerStats.storageWriteRate=5.0;\n  topicStats2.managedLedgerStats.storageReadRate=2.5;\n  AggregatedReplicationStats replStats2=new AggregatedReplicationStats();\n  replStats2.msgRateIn=3.5;\n  replStats2.msgThroughputIn=512.0;\n  replStats2.msgRateOut=10.5;\n  replStats2.msgThroughputOut=1536.0;\n  replStats2.replicationBacklog=99;\n  replStats2.connectedCount=1;\n  replStats2.msgRateExpired=3.0;\n  replStats2.replicationDelayInSeconds=20;\n  topicStats2.replicationStats.put(namespace,replStats2);\n  AggregatedSubscriptionStats subStats2=new AggregatedSubscriptionStats();\n  subStats2.msgBacklog=27;\n  subStats2.msgRateRedeliver=0.7;\n  subStats2.unackedMessages=0;\n  subStats2.msgBacklogNoDelayed=20;\n  topicStats2.subscriptionStats.put(namespace,subStats2);\n  AggregatedNamespaceStats nsStats=new AggregatedNamespaceStats();\n  nsStats.updateStats(topicStats1);\n  nsStats.updateStats(topicStats2);\n  assertEquals(nsStats.topicsCount,2);\n  assertEquals(nsStats.subscriptionsCount,12);\n  assertEquals(nsStats.producersCount,4);\n  assertEquals(nsStats.consumersCount,8);\n  assertEquals(nsStats.rateIn,10.1);\n  assertEquals(nsStats.rateOut,20.5);\n  assertEquals(nsStats.throughputIn,10752.0);\n  assertEquals(nsStats.throughputOut,21504.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.msgBacklog,37);\n  assertEquals(nsStats.managedLedgerStats.storageWriteRate,17.0);\n  assertEquals(nsStats.managedLedgerStats.storageReadRate,8.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.managedLedgerStats.storageLogicalSize,2560);\n  AggregatedReplicationStats nsReplStats=nsStats.replicationStats.get(namespace);\n  assertNotNull(nsReplStats);\n  assertEquals(nsReplStats.msgRateIn,4.5);\n  assertEquals(nsReplStats.msgThroughputIn,638.0);\n  assertEquals(nsReplStats.msgRateOut,12.5);\n  assertEquals(nsReplStats.msgThroughputOut,1792.0);\n  assertEquals(nsReplStats.replicationBacklog,100);\n  assertEquals(nsReplStats.connectedCount,1);\n  assertEquals(nsReplStats.msgRateExpired,6.0);\n  assertEquals(nsReplStats.replicationDelayInSeconds,40);\n  AggregatedSubscriptionStats nsSubStats=nsStats.subscriptionStats.get(namespace);\n  assertNotNull(nsSubStats);\n  assertEquals(nsSubStats.msgBacklog,77);\n  assertEquals(nsSubStats.msgBacklogNoDelayed,50);\n  assertEquals(nsSubStats.msgRateRedeliver,2.2);\n  assertEquals(nsSubStats.unackedMessages,2);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 638,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 40
      },
      "nodeContext" : "replStats1.msgRateExpired=3.0;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.broker.stats.prometheus.AggregatedReplicationStats"
  }, {
    "nodeContext" : "replStats1",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 55,
      "startColumnNumber" : 8,
      "endLineNumber" : 55,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 44
      },
      "nodeContext" : "replStats1.replicationDelayInSeconds",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 49
      },
      "nodeContext" : "replStats1.replicationDelayInSeconds=20",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 50
      },
      "nodeContext" : "replStats1.replicationDelayInSeconds=20;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4769,
        "startLineNumber" : 30,
        "startColumnNumber" : 40,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String namespace=\"tenant/cluster/ns\";\n  TopicStats topicStats1=new TopicStats();\n  topicStats1.subscriptionsCount=2;\n  topicStats1.producersCount=1;\n  topicStats1.consumersCount=3;\n  topicStats1.rateIn=10.0;\n  topicStats1.rateOut=20.0;\n  topicStats1.throughputIn=10240.0;\n  topicStats1.throughputOut=20480.0;\n  topicStats1.managedLedgerStats.storageSize=5120;\n  topicStats1.managedLedgerStats.storageLogicalSize=2048;\n  topicStats1.msgBacklog=30;\n  topicStats1.managedLedgerStats.storageWriteRate=12.0;\n  topicStats1.managedLedgerStats.storageReadRate=6.0;\n  AggregatedReplicationStats replStats1=new AggregatedReplicationStats();\n  replStats1.msgRateIn=1.0;\n  replStats1.msgThroughputIn=126.0;\n  replStats1.msgRateOut=2.0;\n  replStats1.msgThroughputOut=256.0;\n  replStats1.replicationBacklog=1;\n  replStats1.connectedCount=0;\n  replStats1.msgRateExpired=3.0;\n  replStats1.replicationDelayInSeconds=20;\n  topicStats1.replicationStats.put(namespace,replStats1);\n  AggregatedSubscriptionStats subStats1=new AggregatedSubscriptionStats();\n  subStats1.msgBacklog=50;\n  subStats1.msgRateRedeliver=1.5;\n  subStats1.unackedMessages=2;\n  subStats1.msgBacklogNoDelayed=30;\n  topicStats1.subscriptionStats.put(namespace,subStats1);\n  TopicStats topicStats2=new TopicStats();\n  topicStats2.subscriptionsCount=10;\n  topicStats2.producersCount=3;\n  topicStats2.consumersCount=5;\n  topicStats2.rateIn=0.1;\n  topicStats2.rateOut=0.5;\n  topicStats2.throughputIn=512.0;\n  topicStats2.throughputOut=1024.5;\n  topicStats2.managedLedgerStats.storageSize=1024;\n  topicStats2.managedLedgerStats.storageLogicalSize=512;\n  topicStats2.msgBacklog=7;\n  topicStats2.managedLedgerStats.storageWriteRate=5.0;\n  topicStats2.managedLedgerStats.storageReadRate=2.5;\n  AggregatedReplicationStats replStats2=new AggregatedReplicationStats();\n  replStats2.msgRateIn=3.5;\n  replStats2.msgThroughputIn=512.0;\n  replStats2.msgRateOut=10.5;\n  replStats2.msgThroughputOut=1536.0;\n  replStats2.replicationBacklog=99;\n  replStats2.connectedCount=1;\n  replStats2.msgRateExpired=3.0;\n  replStats2.replicationDelayInSeconds=20;\n  topicStats2.replicationStats.put(namespace,replStats2);\n  AggregatedSubscriptionStats subStats2=new AggregatedSubscriptionStats();\n  subStats2.msgBacklog=27;\n  subStats2.msgRateRedeliver=0.7;\n  subStats2.unackedMessages=0;\n  subStats2.msgBacklogNoDelayed=20;\n  topicStats2.subscriptionStats.put(namespace,subStats2);\n  AggregatedNamespaceStats nsStats=new AggregatedNamespaceStats();\n  nsStats.updateStats(topicStats1);\n  nsStats.updateStats(topicStats2);\n  assertEquals(nsStats.topicsCount,2);\n  assertEquals(nsStats.subscriptionsCount,12);\n  assertEquals(nsStats.producersCount,4);\n  assertEquals(nsStats.consumersCount,8);\n  assertEquals(nsStats.rateIn,10.1);\n  assertEquals(nsStats.rateOut,20.5);\n  assertEquals(nsStats.throughputIn,10752.0);\n  assertEquals(nsStats.throughputOut,21504.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.msgBacklog,37);\n  assertEquals(nsStats.managedLedgerStats.storageWriteRate,17.0);\n  assertEquals(nsStats.managedLedgerStats.storageReadRate,8.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.managedLedgerStats.storageLogicalSize,2560);\n  AggregatedReplicationStats nsReplStats=nsStats.replicationStats.get(namespace);\n  assertNotNull(nsReplStats);\n  assertEquals(nsReplStats.msgRateIn,4.5);\n  assertEquals(nsReplStats.msgThroughputIn,638.0);\n  assertEquals(nsReplStats.msgRateOut,12.5);\n  assertEquals(nsReplStats.msgThroughputOut,1792.0);\n  assertEquals(nsReplStats.replicationBacklog,100);\n  assertEquals(nsReplStats.connectedCount,1);\n  assertEquals(nsReplStats.msgRateExpired,6.0);\n  assertEquals(nsReplStats.replicationDelayInSeconds,40);\n  AggregatedSubscriptionStats nsSubStats=nsStats.subscriptionStats.get(namespace);\n  assertNotNull(nsSubStats);\n  assertEquals(nsSubStats.msgBacklog,77);\n  assertEquals(nsSubStats.msgBacklogNoDelayed,50);\n  assertEquals(nsSubStats.msgRateRedeliver,2.2);\n  assertEquals(nsSubStats.unackedMessages,2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 632,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4815,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSimpleAggregation(){\n  final String namespace=\"tenant/cluster/ns\";\n  TopicStats topicStats1=new TopicStats();\n  topicStats1.subscriptionsCount=2;\n  topicStats1.producersCount=1;\n  topicStats1.consumersCount=3;\n  topicStats1.rateIn=10.0;\n  topicStats1.rateOut=20.0;\n  topicStats1.throughputIn=10240.0;\n  topicStats1.throughputOut=20480.0;\n  topicStats1.managedLedgerStats.storageSize=5120;\n  topicStats1.managedLedgerStats.storageLogicalSize=2048;\n  topicStats1.msgBacklog=30;\n  topicStats1.managedLedgerStats.storageWriteRate=12.0;\n  topicStats1.managedLedgerStats.storageReadRate=6.0;\n  AggregatedReplicationStats replStats1=new AggregatedReplicationStats();\n  replStats1.msgRateIn=1.0;\n  replStats1.msgThroughputIn=126.0;\n  replStats1.msgRateOut=2.0;\n  replStats1.msgThroughputOut=256.0;\n  replStats1.replicationBacklog=1;\n  replStats1.connectedCount=0;\n  replStats1.msgRateExpired=3.0;\n  replStats1.replicationDelayInSeconds=20;\n  topicStats1.replicationStats.put(namespace,replStats1);\n  AggregatedSubscriptionStats subStats1=new AggregatedSubscriptionStats();\n  subStats1.msgBacklog=50;\n  subStats1.msgRateRedeliver=1.5;\n  subStats1.unackedMessages=2;\n  subStats1.msgBacklogNoDelayed=30;\n  topicStats1.subscriptionStats.put(namespace,subStats1);\n  TopicStats topicStats2=new TopicStats();\n  topicStats2.subscriptionsCount=10;\n  topicStats2.producersCount=3;\n  topicStats2.consumersCount=5;\n  topicStats2.rateIn=0.1;\n  topicStats2.rateOut=0.5;\n  topicStats2.throughputIn=512.0;\n  topicStats2.throughputOut=1024.5;\n  topicStats2.managedLedgerStats.storageSize=1024;\n  topicStats2.managedLedgerStats.storageLogicalSize=512;\n  topicStats2.msgBacklog=7;\n  topicStats2.managedLedgerStats.storageWriteRate=5.0;\n  topicStats2.managedLedgerStats.storageReadRate=2.5;\n  AggregatedReplicationStats replStats2=new AggregatedReplicationStats();\n  replStats2.msgRateIn=3.5;\n  replStats2.msgThroughputIn=512.0;\n  replStats2.msgRateOut=10.5;\n  replStats2.msgThroughputOut=1536.0;\n  replStats2.replicationBacklog=99;\n  replStats2.connectedCount=1;\n  replStats2.msgRateExpired=3.0;\n  replStats2.replicationDelayInSeconds=20;\n  topicStats2.replicationStats.put(namespace,replStats2);\n  AggregatedSubscriptionStats subStats2=new AggregatedSubscriptionStats();\n  subStats2.msgBacklog=27;\n  subStats2.msgRateRedeliver=0.7;\n  subStats2.unackedMessages=0;\n  subStats2.msgBacklogNoDelayed=20;\n  topicStats2.subscriptionStats.put(namespace,subStats2);\n  AggregatedNamespaceStats nsStats=new AggregatedNamespaceStats();\n  nsStats.updateStats(topicStats1);\n  nsStats.updateStats(topicStats2);\n  assertEquals(nsStats.topicsCount,2);\n  assertEquals(nsStats.subscriptionsCount,12);\n  assertEquals(nsStats.producersCount,4);\n  assertEquals(nsStats.consumersCount,8);\n  assertEquals(nsStats.rateIn,10.1);\n  assertEquals(nsStats.rateOut,20.5);\n  assertEquals(nsStats.throughputIn,10752.0);\n  assertEquals(nsStats.throughputOut,21504.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.msgBacklog,37);\n  assertEquals(nsStats.managedLedgerStats.storageWriteRate,17.0);\n  assertEquals(nsStats.managedLedgerStats.storageReadRate,8.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.managedLedgerStats.storageLogicalSize,2560);\n  AggregatedReplicationStats nsReplStats=nsStats.replicationStats.get(namespace);\n  assertNotNull(nsReplStats);\n  assertEquals(nsReplStats.msgRateIn,4.5);\n  assertEquals(nsReplStats.msgThroughputIn,638.0);\n  assertEquals(nsReplStats.msgRateOut,12.5);\n  assertEquals(nsReplStats.msgThroughputOut,1792.0);\n  assertEquals(nsReplStats.replicationBacklog,100);\n  assertEquals(nsReplStats.connectedCount,1);\n  assertEquals(nsReplStats.msgRateExpired,6.0);\n  assertEquals(nsReplStats.replicationDelayInSeconds,40);\n  AggregatedSubscriptionStats nsSubStats=nsStats.subscriptionStats.get(namespace);\n  assertNotNull(nsSubStats);\n  assertEquals(nsSubStats.msgBacklog,77);\n  assertEquals(nsSubStats.msgBacklogNoDelayed,50);\n  assertEquals(nsSubStats.msgRateRedeliver,2.2);\n  assertEquals(nsSubStats.unackedMessages,2);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 638,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 50
      },
      "nodeContext" : "replStats1.replicationDelayInSeconds=20;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.broker.stats.prometheus.AggregatedReplicationStats"
  }, {
    "nodeContext" : "replStats1",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 56,
      "startColumnNumber" : 52,
      "endLineNumber" : 56,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 63
      },
      "nodeContext" : "topicStats1.replicationStats.put(namespace,replStats1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 64
      },
      "nodeContext" : "topicStats1.replicationStats.put(namespace,replStats1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4769,
        "startLineNumber" : 30,
        "startColumnNumber" : 40,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String namespace=\"tenant/cluster/ns\";\n  TopicStats topicStats1=new TopicStats();\n  topicStats1.subscriptionsCount=2;\n  topicStats1.producersCount=1;\n  topicStats1.consumersCount=3;\n  topicStats1.rateIn=10.0;\n  topicStats1.rateOut=20.0;\n  topicStats1.throughputIn=10240.0;\n  topicStats1.throughputOut=20480.0;\n  topicStats1.managedLedgerStats.storageSize=5120;\n  topicStats1.managedLedgerStats.storageLogicalSize=2048;\n  topicStats1.msgBacklog=30;\n  topicStats1.managedLedgerStats.storageWriteRate=12.0;\n  topicStats1.managedLedgerStats.storageReadRate=6.0;\n  AggregatedReplicationStats replStats1=new AggregatedReplicationStats();\n  replStats1.msgRateIn=1.0;\n  replStats1.msgThroughputIn=126.0;\n  replStats1.msgRateOut=2.0;\n  replStats1.msgThroughputOut=256.0;\n  replStats1.replicationBacklog=1;\n  replStats1.connectedCount=0;\n  replStats1.msgRateExpired=3.0;\n  replStats1.replicationDelayInSeconds=20;\n  topicStats1.replicationStats.put(namespace,replStats1);\n  AggregatedSubscriptionStats subStats1=new AggregatedSubscriptionStats();\n  subStats1.msgBacklog=50;\n  subStats1.msgRateRedeliver=1.5;\n  subStats1.unackedMessages=2;\n  subStats1.msgBacklogNoDelayed=30;\n  topicStats1.subscriptionStats.put(namespace,subStats1);\n  TopicStats topicStats2=new TopicStats();\n  topicStats2.subscriptionsCount=10;\n  topicStats2.producersCount=3;\n  topicStats2.consumersCount=5;\n  topicStats2.rateIn=0.1;\n  topicStats2.rateOut=0.5;\n  topicStats2.throughputIn=512.0;\n  topicStats2.throughputOut=1024.5;\n  topicStats2.managedLedgerStats.storageSize=1024;\n  topicStats2.managedLedgerStats.storageLogicalSize=512;\n  topicStats2.msgBacklog=7;\n  topicStats2.managedLedgerStats.storageWriteRate=5.0;\n  topicStats2.managedLedgerStats.storageReadRate=2.5;\n  AggregatedReplicationStats replStats2=new AggregatedReplicationStats();\n  replStats2.msgRateIn=3.5;\n  replStats2.msgThroughputIn=512.0;\n  replStats2.msgRateOut=10.5;\n  replStats2.msgThroughputOut=1536.0;\n  replStats2.replicationBacklog=99;\n  replStats2.connectedCount=1;\n  replStats2.msgRateExpired=3.0;\n  replStats2.replicationDelayInSeconds=20;\n  topicStats2.replicationStats.put(namespace,replStats2);\n  AggregatedSubscriptionStats subStats2=new AggregatedSubscriptionStats();\n  subStats2.msgBacklog=27;\n  subStats2.msgRateRedeliver=0.7;\n  subStats2.unackedMessages=0;\n  subStats2.msgBacklogNoDelayed=20;\n  topicStats2.subscriptionStats.put(namespace,subStats2);\n  AggregatedNamespaceStats nsStats=new AggregatedNamespaceStats();\n  nsStats.updateStats(topicStats1);\n  nsStats.updateStats(topicStats2);\n  assertEquals(nsStats.topicsCount,2);\n  assertEquals(nsStats.subscriptionsCount,12);\n  assertEquals(nsStats.producersCount,4);\n  assertEquals(nsStats.consumersCount,8);\n  assertEquals(nsStats.rateIn,10.1);\n  assertEquals(nsStats.rateOut,20.5);\n  assertEquals(nsStats.throughputIn,10752.0);\n  assertEquals(nsStats.throughputOut,21504.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.msgBacklog,37);\n  assertEquals(nsStats.managedLedgerStats.storageWriteRate,17.0);\n  assertEquals(nsStats.managedLedgerStats.storageReadRate,8.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.managedLedgerStats.storageLogicalSize,2560);\n  AggregatedReplicationStats nsReplStats=nsStats.replicationStats.get(namespace);\n  assertNotNull(nsReplStats);\n  assertEquals(nsReplStats.msgRateIn,4.5);\n  assertEquals(nsReplStats.msgThroughputIn,638.0);\n  assertEquals(nsReplStats.msgRateOut,12.5);\n  assertEquals(nsReplStats.msgThroughputOut,1792.0);\n  assertEquals(nsReplStats.replicationBacklog,100);\n  assertEquals(nsReplStats.connectedCount,1);\n  assertEquals(nsReplStats.msgRateExpired,6.0);\n  assertEquals(nsReplStats.replicationDelayInSeconds,40);\n  AggregatedSubscriptionStats nsSubStats=nsStats.subscriptionStats.get(namespace);\n  assertNotNull(nsSubStats);\n  assertEquals(nsSubStats.msgBacklog,77);\n  assertEquals(nsSubStats.msgBacklogNoDelayed,50);\n  assertEquals(nsSubStats.msgRateRedeliver,2.2);\n  assertEquals(nsSubStats.unackedMessages,2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 632,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4815,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSimpleAggregation(){\n  final String namespace=\"tenant/cluster/ns\";\n  TopicStats topicStats1=new TopicStats();\n  topicStats1.subscriptionsCount=2;\n  topicStats1.producersCount=1;\n  topicStats1.consumersCount=3;\n  topicStats1.rateIn=10.0;\n  topicStats1.rateOut=20.0;\n  topicStats1.throughputIn=10240.0;\n  topicStats1.throughputOut=20480.0;\n  topicStats1.managedLedgerStats.storageSize=5120;\n  topicStats1.managedLedgerStats.storageLogicalSize=2048;\n  topicStats1.msgBacklog=30;\n  topicStats1.managedLedgerStats.storageWriteRate=12.0;\n  topicStats1.managedLedgerStats.storageReadRate=6.0;\n  AggregatedReplicationStats replStats1=new AggregatedReplicationStats();\n  replStats1.msgRateIn=1.0;\n  replStats1.msgThroughputIn=126.0;\n  replStats1.msgRateOut=2.0;\n  replStats1.msgThroughputOut=256.0;\n  replStats1.replicationBacklog=1;\n  replStats1.connectedCount=0;\n  replStats1.msgRateExpired=3.0;\n  replStats1.replicationDelayInSeconds=20;\n  topicStats1.replicationStats.put(namespace,replStats1);\n  AggregatedSubscriptionStats subStats1=new AggregatedSubscriptionStats();\n  subStats1.msgBacklog=50;\n  subStats1.msgRateRedeliver=1.5;\n  subStats1.unackedMessages=2;\n  subStats1.msgBacklogNoDelayed=30;\n  topicStats1.subscriptionStats.put(namespace,subStats1);\n  TopicStats topicStats2=new TopicStats();\n  topicStats2.subscriptionsCount=10;\n  topicStats2.producersCount=3;\n  topicStats2.consumersCount=5;\n  topicStats2.rateIn=0.1;\n  topicStats2.rateOut=0.5;\n  topicStats2.throughputIn=512.0;\n  topicStats2.throughputOut=1024.5;\n  topicStats2.managedLedgerStats.storageSize=1024;\n  topicStats2.managedLedgerStats.storageLogicalSize=512;\n  topicStats2.msgBacklog=7;\n  topicStats2.managedLedgerStats.storageWriteRate=5.0;\n  topicStats2.managedLedgerStats.storageReadRate=2.5;\n  AggregatedReplicationStats replStats2=new AggregatedReplicationStats();\n  replStats2.msgRateIn=3.5;\n  replStats2.msgThroughputIn=512.0;\n  replStats2.msgRateOut=10.5;\n  replStats2.msgThroughputOut=1536.0;\n  replStats2.replicationBacklog=99;\n  replStats2.connectedCount=1;\n  replStats2.msgRateExpired=3.0;\n  replStats2.replicationDelayInSeconds=20;\n  topicStats2.replicationStats.put(namespace,replStats2);\n  AggregatedSubscriptionStats subStats2=new AggregatedSubscriptionStats();\n  subStats2.msgBacklog=27;\n  subStats2.msgRateRedeliver=0.7;\n  subStats2.unackedMessages=0;\n  subStats2.msgBacklogNoDelayed=20;\n  topicStats2.subscriptionStats.put(namespace,subStats2);\n  AggregatedNamespaceStats nsStats=new AggregatedNamespaceStats();\n  nsStats.updateStats(topicStats1);\n  nsStats.updateStats(topicStats2);\n  assertEquals(nsStats.topicsCount,2);\n  assertEquals(nsStats.subscriptionsCount,12);\n  assertEquals(nsStats.producersCount,4);\n  assertEquals(nsStats.consumersCount,8);\n  assertEquals(nsStats.rateIn,10.1);\n  assertEquals(nsStats.rateOut,20.5);\n  assertEquals(nsStats.throughputIn,10752.0);\n  assertEquals(nsStats.throughputOut,21504.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.msgBacklog,37);\n  assertEquals(nsStats.managedLedgerStats.storageWriteRate,17.0);\n  assertEquals(nsStats.managedLedgerStats.storageReadRate,8.5);\n  assertEquals(nsStats.managedLedgerStats.storageSize,6144);\n  assertEquals(nsStats.managedLedgerStats.storageLogicalSize,2560);\n  AggregatedReplicationStats nsReplStats=nsStats.replicationStats.get(namespace);\n  assertNotNull(nsReplStats);\n  assertEquals(nsReplStats.msgRateIn,4.5);\n  assertEquals(nsReplStats.msgThroughputIn,638.0);\n  assertEquals(nsReplStats.msgRateOut,12.5);\n  assertEquals(nsReplStats.msgThroughputOut,1792.0);\n  assertEquals(nsReplStats.replicationBacklog,100);\n  assertEquals(nsReplStats.connectedCount,1);\n  assertEquals(nsReplStats.msgRateExpired,6.0);\n  assertEquals(nsReplStats.replicationDelayInSeconds,40);\n  AggregatedSubscriptionStats nsSubStats=nsStats.subscriptionStats.get(namespace);\n  assertNotNull(nsSubStats);\n  assertEquals(nsSubStats.msgBacklog,77);\n  assertEquals(nsSubStats.msgBacklogNoDelayed,50);\n  assertEquals(nsSubStats.msgRateRedeliver,2.2);\n  assertEquals(nsSubStats.unackedMessages,2);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 638,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 64
      },
      "nodeContext" : "topicStats1.replicationStats.put(namespace,replStats1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.broker.stats.prometheus.AggregatedReplicationStats"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 48,
    "startColumnNumber" : 8,
    "endLineNumber" : 48,
    "endColumnNumber" : 18
  }, {
    "charLength" : 10,
    "startLineNumber" : 49,
    "startColumnNumber" : 8,
    "endLineNumber" : 49,
    "endColumnNumber" : 18
  }, {
    "charLength" : 10,
    "startLineNumber" : 50,
    "startColumnNumber" : 8,
    "endLineNumber" : 50,
    "endColumnNumber" : 18
  }, {
    "charLength" : 10,
    "startLineNumber" : 51,
    "startColumnNumber" : 8,
    "endLineNumber" : 51,
    "endColumnNumber" : 18
  }, {
    "charLength" : 10,
    "startLineNumber" : 52,
    "startColumnNumber" : 8,
    "endLineNumber" : 52,
    "endColumnNumber" : 18
  }, {
    "charLength" : 10,
    "startLineNumber" : 53,
    "startColumnNumber" : 8,
    "endLineNumber" : 53,
    "endColumnNumber" : 18
  }, {
    "charLength" : 10,
    "startLineNumber" : 54,
    "startColumnNumber" : 8,
    "endLineNumber" : 54,
    "endColumnNumber" : 18
  }, {
    "charLength" : 10,
    "startLineNumber" : 55,
    "startColumnNumber" : 8,
    "endLineNumber" : 55,
    "endColumnNumber" : 18
  }, {
    "charLength" : 10,
    "startLineNumber" : 56,
    "startColumnNumber" : 52,
    "endLineNumber" : 56,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 2
  } ]
}