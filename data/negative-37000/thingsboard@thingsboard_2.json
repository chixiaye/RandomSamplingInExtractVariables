{
  "id" : 2,
  "expression" : "email",
  "projectName" : "thingsboard@thingsboard",
  "commitID" : "7c2b3a9fbf84cc58aa7546029c5c7c10a662c55a",
  "filePath" : "/application/src/main/java/org/thingsboard/server/controller/UserController.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "email",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 209,
      "startColumnNumber" : 65,
      "endLineNumber" : 209,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 209,
        "startColumnNumber" : 20,
        "endLineNumber" : 209,
        "endColumnNumber" : 71
      },
      "nodeContext" : "mailService.sendActivationEmail(activateUrl,email)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 209,
        "startColumnNumber" : 20,
        "endLineNumber" : 209,
        "endColumnNumber" : 72
      },
      "nodeContext" : "mailService.sendActivationEmail(activateUrl,email);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 208,
        "startColumnNumber" : 20,
        "endLineNumber" : 210,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  mailService.sendActivationEmail(activateUrl,email);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 263,
        "startLineNumber" : 208,
        "startColumnNumber" : 16,
        "endLineNumber" : 213,
        "endColumnNumber" : 17
      },
      "nodeContext" : "try {\n  mailService.sendActivationEmail(activateUrl,email);\n}\n catch (ThingsboardException e) {\n  userService.deleteUser(authUser.getTenantId(),savedUser.getId());\n  throw e;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 808,
        "startLineNumber" : 201,
        "startColumnNumber" : 27,
        "endLineNumber" : 214,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  SecurityUser authUser=getCurrentUser();\n  UserCredentials userCredentials=userService.findUserCredentialsByUserId(authUser.getTenantId(),savedUser.getId());\n  String baseUrl=systemSecurityService.getBaseUrl(getTenantId(),getCurrentUser().getCustomerId(),request);\n  String activateUrl=String.format(ACTIVATE_URL_PATTERN,baseUrl,userCredentials.getActivateToken());\n  String email=savedUser.getEmail();\n  try {\n    mailService.sendActivationEmail(activateUrl,email);\n  }\n catch (  ThingsboardException e) {\n    userService.deleteUser(authUser.getTenantId(),savedUser.getId());\n    throw e;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 823,
        "startLineNumber" : 201,
        "startColumnNumber" : 12,
        "endLineNumber" : 214,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (sendEmail) {\n  SecurityUser authUser=getCurrentUser();\n  UserCredentials userCredentials=userService.findUserCredentialsByUserId(authUser.getTenantId(),savedUser.getId());\n  String baseUrl=systemSecurityService.getBaseUrl(getTenantId(),getCurrentUser().getCustomerId(),request);\n  String activateUrl=String.format(ACTIVATE_URL_PATTERN,baseUrl,userCredentials.getActivateToken());\n  String email=savedUser.getEmail();\n  try {\n    mailService.sendActivationEmail(activateUrl,email);\n  }\n catch (  ThingsboardException e) {\n    userService.deleteUser(authUser.getTenantId(),savedUser.getId());\n    throw e;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 86,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1619,
        "startLineNumber" : 191,
        "startColumnNumber" : 12,
        "endLineNumber" : 224,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (Authority.TENANT_ADMIN.equals(getCurrentUser().getAuthority())) {\n    user.setTenantId(getCurrentUser().getTenantId());\n  }\n  checkEntity(user.getId(),user,Resource.USER);\n  boolean sendEmail=user.getId() == null && sendActivationMail;\n  User savedUser=checkNotNull(userService.saveUser(user));\n  if (sendEmail) {\n    SecurityUser authUser=getCurrentUser();\n    UserCredentials userCredentials=userService.findUserCredentialsByUserId(authUser.getTenantId(),savedUser.getId());\n    String baseUrl=systemSecurityService.getBaseUrl(getTenantId(),getCurrentUser().getCustomerId(),request);\n    String activateUrl=String.format(ACTIVATE_URL_PATTERN,baseUrl,userCredentials.getActivateToken());\n    String email=savedUser.getEmail();\n    try {\n      mailService.sendActivationEmail(activateUrl,email);\n    }\n catch (    ThingsboardException e) {\n      userService.deleteUser(authUser.getTenantId(),savedUser.getId());\n      throw e;\n    }\n  }\n  logEntityAction(savedUser.getId(),savedUser,savedUser.getCustomerId(),user.getId() == null ? ActionType.ADDED : ActionType.UPDATED,null);\n  sendEntityNotificationMsg(getTenantId(),savedUser.getId(),user.getId() == null ? EdgeEventActionType.ADDED : EdgeEventActionType.UPDATED);\n  return savedUser;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 183,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1847,
        "startLineNumber" : 191,
        "startColumnNumber" : 8,
        "endLineNumber" : 230,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (Authority.TENANT_ADMIN.equals(getCurrentUser().getAuthority())) {\n    user.setTenantId(getCurrentUser().getTenantId());\n  }\n  checkEntity(user.getId(),user,Resource.USER);\n  boolean sendEmail=user.getId() == null && sendActivationMail;\n  User savedUser=checkNotNull(userService.saveUser(user));\n  if (sendEmail) {\n    SecurityUser authUser=getCurrentUser();\n    UserCredentials userCredentials=userService.findUserCredentialsByUserId(authUser.getTenantId(),savedUser.getId());\n    String baseUrl=systemSecurityService.getBaseUrl(getTenantId(),getCurrentUser().getCustomerId(),request);\n    String activateUrl=String.format(ACTIVATE_URL_PATTERN,baseUrl,userCredentials.getActivateToken());\n    String email=savedUser.getEmail();\n    try {\n      mailService.sendActivationEmail(activateUrl,email);\n    }\n catch (    ThingsboardException e) {\n      userService.deleteUser(authUser.getTenantId(),savedUser.getId());\n      throw e;\n    }\n  }\n  logEntityAction(savedUser.getId(),savedUser,savedUser.getCustomerId(),user.getId() == null ? ActionType.ADDED : ActionType.UPDATED,null);\n  sendEntityNotificationMsg(getTenantId(),savedUser.getId(),user.getId() == null ? EdgeEventActionType.ADDED : EdgeEventActionType.UPDATED);\n  return savedUser;\n}\n catch (Exception e) {\n  logEntityAction(emptyId(EntityType.USER),user,null,user.getId() == null ? ActionType.ADDED : ActionType.UPDATED,e);\n  throw handleException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 217,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1863,
        "startLineNumber" : 190,
        "startColumnNumber" : 151,
        "endLineNumber" : 231,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    if (Authority.TENANT_ADMIN.equals(getCurrentUser().getAuthority())) {\n      user.setTenantId(getCurrentUser().getTenantId());\n    }\n    checkEntity(user.getId(),user,Resource.USER);\n    boolean sendEmail=user.getId() == null && sendActivationMail;\n    User savedUser=checkNotNull(userService.saveUser(user));\n    if (sendEmail) {\n      SecurityUser authUser=getCurrentUser();\n      UserCredentials userCredentials=userService.findUserCredentialsByUserId(authUser.getTenantId(),savedUser.getId());\n      String baseUrl=systemSecurityService.getBaseUrl(getTenantId(),getCurrentUser().getCustomerId(),request);\n      String activateUrl=String.format(ACTIVATE_URL_PATTERN,baseUrl,userCredentials.getActivateToken());\n      String email=savedUser.getEmail();\n      try {\n        mailService.sendActivationEmail(activateUrl,email);\n      }\n catch (      ThingsboardException e) {\n        userService.deleteUser(authUser.getTenantId(),savedUser.getId());\n        throw e;\n      }\n    }\n    logEntityAction(savedUser.getId(),savedUser,savedUser.getCustomerId(),user.getId() == null ? ActionType.ADDED : ActionType.UPDATED,null);\n    sendEntityNotificationMsg(getTenantId(),savedUser.getId(),user.getId() == null ? EdgeEventActionType.ADDED : EdgeEventActionType.UPDATED);\n    return savedUser;\n  }\n catch (  Exception e) {\n    logEntityAction(emptyId(EntityType.USER),user,null,user.getId() == null ? ActionType.ADDED : ActionType.UPDATED,e);\n    throw handleException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 218,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2927,
        "startLineNumber" : 177,
        "startColumnNumber" : 4,
        "endLineNumber" : 231,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@ApiOperation(value=\"Save Or update User (saveUser)\",notes=\"Create or update the User. When creating user, platform generates User Id as \" + UUID_WIKI_LINK + \"The newly created User Id will be present in the response. \"+ \"Specify existing User Id to update the device. \"+ \"Referencing non-existing User Id will cause 'Not Found' error.\"+ \"\\n\\nDevice email is unique for entire platform setup.\") @PreAuthorize(\"hasAnyAuthority('SYS_ADMIN', 'TENANT_ADMIN', 'CUSTOMER_USER')\") @RequestMapping(value=\"/user\",method=RequestMethod.POST) @ResponseBody public User saveUser(@ApiParam(value=\"A JSON value representing the User.\",required=true) @RequestBody User user,@ApiParam(value=\"Send activation email (or use activation link)\",defaultValue=\"true\") @RequestParam(required=false,defaultValue=\"true\") boolean sendActivationMail,HttpServletRequest request) throws ThingsboardException {\n  try {\n    if (Authority.TENANT_ADMIN.equals(getCurrentUser().getAuthority())) {\n      user.setTenantId(getCurrentUser().getTenantId());\n    }\n    checkEntity(user.getId(),user,Resource.USER);\n    boolean sendEmail=user.getId() == null && sendActivationMail;\n    User savedUser=checkNotNull(userService.saveUser(user));\n    if (sendEmail) {\n      SecurityUser authUser=getCurrentUser();\n      UserCredentials userCredentials=userService.findUserCredentialsByUserId(authUser.getTenantId(),savedUser.getId());\n      String baseUrl=systemSecurityService.getBaseUrl(getTenantId(),getCurrentUser().getCustomerId(),request);\n      String activateUrl=String.format(ACTIVATE_URL_PATTERN,baseUrl,userCredentials.getActivateToken());\n      String email=savedUser.getEmail();\n      try {\n        mailService.sendActivationEmail(activateUrl,email);\n      }\n catch (      ThingsboardException e) {\n        userService.deleteUser(authUser.getTenantId(),savedUser.getId());\n        throw e;\n      }\n    }\n    logEntityAction(savedUser.getId(),savedUser,savedUser.getCustomerId(),user.getId() == null ? ActionType.ADDED : ActionType.UPDATED,null);\n    sendEntityNotificationMsg(getTenantId(),savedUser.getId(),user.getId() == null ? EdgeEventActionType.ADDED : EdgeEventActionType.UPDATED);\n    return savedUser;\n  }\n catch (  Exception e) {\n    logEntityAction(emptyId(EntityType.USER),user,null,user.getId() == null ? ActionType.ADDED : ActionType.UPDATED,e);\n    throw handleException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 291,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 209,
        "startColumnNumber" : 20,
        "endLineNumber" : 209,
        "endColumnNumber" : 72
      },
      "nodeContext" : "mailService.sendActivationEmail(activateUrl,email);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 209,
    "startColumnNumber" : 65,
    "endLineNumber" : 209,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}