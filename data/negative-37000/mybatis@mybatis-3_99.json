{
  "id" : 99,
  "expression" : "compositeResultMapping.getColumn()",
  "projectName" : "mybatis@mybatis-3",
  "commitID" : "a84ece4f08bb04fa6a5babd800113fe7338a9880",
  "filePath" : "/src/main/java/org/apache/ibatis/mapping/ResultMap.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "compositeResultMapping.getColumn()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 53,
      "startColumnNumber" : 43,
      "endLineNumber" : 53,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 53,
        "startColumnNumber" : 25,
        "endLineNumber" : 53,
        "endColumnNumber" : 77
      },
      "nodeContext" : "compositeColumn=compositeResultMapping.getColumn()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 53,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 78
      },
      "nodeContext" : "final String compositeColumn=compositeResultMapping.getColumn();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 242,
        "startLineNumber" : 52,
        "startColumnNumber" : 85,
        "endLineNumber" : 57,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  final String compositeColumn=compositeResultMapping.getColumn();\n  if (compositeColumn != null) {\n    resultMap.mappedColumns.add(compositeColumn.toUpperCase(Locale.ENGLISH));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 317,
        "startLineNumber" : 52,
        "startColumnNumber" : 10,
        "endLineNumber" : 57,
        "endColumnNumber" : 11
      },
      "nodeContext" : "for (ResultMapping compositeResultMapping : resultMapping.getComposites()) {\n  final String compositeColumn=compositeResultMapping.getColumn();\n  if (compositeColumn != null) {\n    resultMap.mappedColumns.add(compositeColumn.toUpperCase(Locale.ENGLISH));\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 35,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 341,
        "startLineNumber" : 51,
        "startColumnNumber" : 54,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  ResultMapping compositeResultMapping : resultMapping.getComposites()) {\n    final String compositeColumn=compositeResultMapping.getColumn();\n    if (compositeColumn != null) {\n      resultMap.mappedColumns.add(compositeColumn.toUpperCase(Locale.ENGLISH));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 380,
        "startLineNumber" : 51,
        "startColumnNumber" : 15,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (resultMapping.isCompositeResult()) {\n  for (  ResultMapping compositeResultMapping : resultMapping.getComposites()) {\n    final String compositeColumn=compositeResultMapping.getColumn();\n    if (compositeColumn != null) {\n      resultMap.mappedColumns.add(compositeColumn.toUpperCase(Locale.ENGLISH));\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 494,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (column != null) {\n  resultMap.mappedColumns.add(column.toUpperCase(Locale.ENGLISH));\n}\n else if (resultMapping.isCompositeResult()) {\n  for (  ResultMapping compositeResultMapping : resultMapping.getComposites()) {\n    final String compositeColumn=compositeResultMapping.getColumn();\n    if (compositeColumn != null) {\n      resultMap.mappedColumns.add(compositeColumn.toUpperCase(Locale.ENGLISH));\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1170,
        "startLineNumber" : 45,
        "startColumnNumber" : 67,
        "endLineNumber" : 67,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  resultMap.hasNestedQueries=resultMap.hasNestedQueries || resultMapping.getNestedQueryId() != null;\n  resultMap.hasNestedResultMaps=resultMap.hasNestedResultMaps || resultMapping.getNestedResultMapId() != null;\n  final String column=resultMapping.getColumn();\n  if (column != null) {\n    resultMap.mappedColumns.add(column.toUpperCase(Locale.ENGLISH));\n  }\n else   if (resultMapping.isCompositeResult()) {\n    for (    ResultMapping compositeResultMapping : resultMapping.getComposites()) {\n      final String compositeColumn=compositeResultMapping.getColumn();\n      if (compositeColumn != null) {\n        resultMap.mappedColumns.add(compositeColumn.toUpperCase(Locale.ENGLISH));\n      }\n    }\n  }\n  if (resultMapping.getFlags().contains(ResultFlag.CONSTRUCTOR)) {\n    resultMap.constructorResultMappings.add(resultMapping);\n  }\n else {\n    resultMap.propertyResultMappings.add(resultMapping);\n  }\n  if (resultMapping.getFlags().contains(ResultFlag.ID)) {\n    resultMap.idResultMappings.add(resultMapping);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1231,
        "startLineNumber" : 45,
        "startColumnNumber" : 6,
        "endLineNumber" : 67,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (ResultMapping resultMapping : resultMap.resultMappings) {\n  resultMap.hasNestedQueries=resultMap.hasNestedQueries || resultMapping.getNestedQueryId() != null;\n  resultMap.hasNestedResultMaps=resultMap.hasNestedResultMaps || resultMapping.getNestedResultMapId() != null;\n  final String column=resultMapping.getColumn();\n  if (column != null) {\n    resultMap.mappedColumns.add(column.toUpperCase(Locale.ENGLISH));\n  }\n else   if (resultMapping.isCompositeResult()) {\n    for (    ResultMapping compositeResultMapping : resultMapping.getComposites()) {\n      final String compositeColumn=compositeResultMapping.getColumn();\n      if (compositeColumn != null) {\n        resultMap.mappedColumns.add(compositeColumn.toUpperCase(Locale.ENGLISH));\n      }\n    }\n  }\n  if (resultMapping.getFlags().contains(ResultFlag.CONSTRUCTOR)) {\n    resultMap.constructorResultMappings.add(resultMapping);\n  }\n else {\n    resultMap.propertyResultMappings.add(resultMapping);\n  }\n  if (resultMapping.getFlags().contains(ResultFlag.ID)) {\n    resultMap.idResultMappings.add(resultMapping);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 145,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2198,
        "startLineNumber" : 40,
        "startColumnNumber" : 29,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  resultMap.mappedColumns=new HashSet<String>();\n  resultMap.idResultMappings=new ArrayList<ResultMapping>();\n  resultMap.constructorResultMappings=new ArrayList<ResultMapping>();\n  resultMap.propertyResultMappings=new ArrayList<ResultMapping>();\n  for (  ResultMapping resultMapping : resultMap.resultMappings) {\n    resultMap.hasNestedQueries=resultMap.hasNestedQueries || resultMapping.getNestedQueryId() != null;\n    resultMap.hasNestedResultMaps=resultMap.hasNestedResultMaps || resultMapping.getNestedResultMapId() != null;\n    final String column=resultMapping.getColumn();\n    if (column != null) {\n      resultMap.mappedColumns.add(column.toUpperCase(Locale.ENGLISH));\n    }\n else     if (resultMapping.isCompositeResult()) {\n      for (      ResultMapping compositeResultMapping : resultMapping.getComposites()) {\n        final String compositeColumn=compositeResultMapping.getColumn();\n        if (compositeColumn != null) {\n          resultMap.mappedColumns.add(compositeColumn.toUpperCase(Locale.ENGLISH));\n        }\n      }\n    }\n    if (resultMapping.getFlags().contains(ResultFlag.CONSTRUCTOR)) {\n      resultMap.constructorResultMappings.add(resultMapping);\n    }\n else {\n      resultMap.propertyResultMappings.add(resultMapping);\n    }\n    if (resultMapping.getFlags().contains(ResultFlag.ID)) {\n      resultMap.idResultMappings.add(resultMapping);\n    }\n  }\n  if (resultMap.idResultMappings.isEmpty()) {\n    resultMap.idResultMappings.addAll(resultMap.resultMappings);\n  }\n  resultMap.resultMappings=Collections.unmodifiableList(resultMap.resultMappings);\n  resultMap.idResultMappings=Collections.unmodifiableList(resultMap.idResultMappings);\n  resultMap.constructorResultMappings=Collections.unmodifiableList(resultMap.constructorResultMappings);\n  resultMap.propertyResultMappings=Collections.unmodifiableList(resultMap.propertyResultMappings);\n  resultMap.mappedColumns=Collections.unmodifiableSet(resultMap.mappedColumns);\n  return resultMap;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 263,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2223,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public ResultMap build(){\n  resultMap.mappedColumns=new HashSet<String>();\n  resultMap.idResultMappings=new ArrayList<ResultMapping>();\n  resultMap.constructorResultMappings=new ArrayList<ResultMapping>();\n  resultMap.propertyResultMappings=new ArrayList<ResultMapping>();\n  for (  ResultMapping resultMapping : resultMap.resultMappings) {\n    resultMap.hasNestedQueries=resultMap.hasNestedQueries || resultMapping.getNestedQueryId() != null;\n    resultMap.hasNestedResultMaps=resultMap.hasNestedResultMaps || resultMapping.getNestedResultMapId() != null;\n    final String column=resultMapping.getColumn();\n    if (column != null) {\n      resultMap.mappedColumns.add(column.toUpperCase(Locale.ENGLISH));\n    }\n else     if (resultMapping.isCompositeResult()) {\n      for (      ResultMapping compositeResultMapping : resultMapping.getComposites()) {\n        final String compositeColumn=compositeResultMapping.getColumn();\n        if (compositeColumn != null) {\n          resultMap.mappedColumns.add(compositeColumn.toUpperCase(Locale.ENGLISH));\n        }\n      }\n    }\n    if (resultMapping.getFlags().contains(ResultFlag.CONSTRUCTOR)) {\n      resultMap.constructorResultMappings.add(resultMapping);\n    }\n else {\n      resultMap.propertyResultMappings.add(resultMapping);\n    }\n    if (resultMapping.getFlags().contains(ResultFlag.ID)) {\n      resultMap.idResultMappings.add(resultMapping);\n    }\n  }\n  if (resultMap.idResultMappings.isEmpty()) {\n    resultMap.idResultMappings.addAll(resultMap.resultMappings);\n  }\n  resultMap.resultMappings=Collections.unmodifiableList(resultMap.resultMappings);\n  resultMap.idResultMappings=Collections.unmodifiableList(resultMap.idResultMappings);\n  resultMap.constructorResultMappings=Collections.unmodifiableList(resultMap.constructorResultMappings);\n  resultMap.propertyResultMappings=Collections.unmodifiableList(resultMap.propertyResultMappings);\n  resultMap.mappedColumns=Collections.unmodifiableSet(resultMap.mappedColumns);\n  return resultMap;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 268,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 53,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 78
      },
      "nodeContext" : "final String compositeColumn=compositeResultMapping.getColumn();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 53,
    "startColumnNumber" : 43,
    "endLineNumber" : 53,
    "endColumnNumber" : 77
  } ],
  "layoutRelationDataList" : [ ]
}