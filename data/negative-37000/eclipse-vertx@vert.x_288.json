{
  "id" : 288,
  "expression" : "0",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/test/java/io/vertx/test/core/AsyncTestBaseTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 244,
      "startColumnNumber" : 17,
      "endLineNumber" : 244,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 244,
        "startColumnNumber" : 13,
        "endLineNumber" : 244,
        "endColumnNumber" : 18
      },
      "nodeContext" : "i=0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 244,
        "startColumnNumber" : 9,
        "endLineNumber" : 244,
        "endColumnNumber" : 18
      },
      "nodeContext" : "int i=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 244,
        "startColumnNumber" : 4,
        "endLineNumber" : 249,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < toWaitFor; i++) {\n  executor.execute(() -> {\n    cnt.incrementAndGet();\n    complete();\n  }\n);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 284,
        "startLineNumber" : 240,
        "startColumnNumber" : 32,
        "endLineNumber" : 252,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int toWaitFor=10;\n  waitFor(10);\n  AtomicInteger cnt=new AtomicInteger();\n  for (int i=0; i < toWaitFor; i++) {\n    executor.execute(() -> {\n      cnt.incrementAndGet();\n      complete();\n    }\n);\n  }\n  await();\n  assertEquals(toWaitFor,cnt.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 322,
        "startLineNumber" : 239,
        "startColumnNumber" : 2,
        "endLineNumber" : 252,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void waitForMultiple(){\n  int toWaitFor=10;\n  waitFor(10);\n  AtomicInteger cnt=new AtomicInteger();\n  for (int i=0; i < toWaitFor; i++) {\n    executor.execute(() -> {\n      cnt.incrementAndGet();\n      complete();\n    }\n);\n  }\n  await();\n  assertEquals(toWaitFor,cnt.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 59,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 244,
        "startColumnNumber" : 9,
        "endLineNumber" : 244,
        "endColumnNumber" : 18
      },
      "nodeContext" : "int i=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 244,
    "startColumnNumber" : 17,
    "endLineNumber" : 244,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ ]
}