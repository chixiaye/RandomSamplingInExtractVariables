{
  "id" : 120,
  "expression" : "registry",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/bootstrap-core/src/test/java/com/navercorp/pinpoint/bootstrap/interceptor/DefaultInterceptorRegistryAdaptorTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "registry",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 51,
      "startColumnNumber" : 18,
      "endLineNumber" : 51,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 51,
        "startColumnNumber" : 18,
        "endLineNumber" : 51,
        "endColumnNumber" : 47
      },
      "nodeContext" : "registry.addInterceptor(mock)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 47
      },
      "nodeContext" : "key=registry.addInterceptor(mock)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 48
      },
      "nodeContext" : "int key=registry.addInterceptor(mock);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 317,
        "startLineNumber" : 47,
        "startColumnNumber" : 40,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StaticAroundInterceptor mock=mock(StaticAroundInterceptor.class);\n  InterceptorRegistryAdaptor registry=new DefaultInterceptorRegistryAdaptor();\n  int key=registry.addInterceptor(mock);\n  Interceptor find=registry.getInterceptor(key);\n  Assert.assertSame(mock,find);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 363,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void addStaticInterceptor(){\n  StaticAroundInterceptor mock=mock(StaticAroundInterceptor.class);\n  InterceptorRegistryAdaptor registry=new DefaultInterceptorRegistryAdaptor();\n  int key=registry.addInterceptor(mock);\n  Interceptor find=registry.getInterceptor(key);\n  Assert.assertSame(mock,find);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 48,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 48
      },
      "nodeContext" : "int key=registry.addInterceptor(mock);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.navercorp.pinpoint.bootstrap.interceptor.registry.InterceptorRegistryAdaptor"
  }, {
    "nodeContext" : "registry",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 52,
      "startColumnNumber" : 27,
      "endLineNumber" : 52,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 52,
        "startColumnNumber" : 27,
        "endLineNumber" : 52,
        "endColumnNumber" : 55
      },
      "nodeContext" : "registry.getInterceptor(key)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 52,
        "startColumnNumber" : 20,
        "endLineNumber" : 52,
        "endColumnNumber" : 55
      },
      "nodeContext" : "find=registry.getInterceptor(key)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Interceptor find=registry.getInterceptor(key);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 317,
        "startLineNumber" : 47,
        "startColumnNumber" : 40,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StaticAroundInterceptor mock=mock(StaticAroundInterceptor.class);\n  InterceptorRegistryAdaptor registry=new DefaultInterceptorRegistryAdaptor();\n  int key=registry.addInterceptor(mock);\n  Interceptor find=registry.getInterceptor(key);\n  Assert.assertSame(mock,find);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 363,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void addStaticInterceptor(){\n  StaticAroundInterceptor mock=mock(StaticAroundInterceptor.class);\n  InterceptorRegistryAdaptor registry=new DefaultInterceptorRegistryAdaptor();\n  int key=registry.addInterceptor(mock);\n  Interceptor find=registry.getInterceptor(key);\n  Assert.assertSame(mock,find);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 48,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Interceptor find=registry.getInterceptor(key);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.navercorp.pinpoint.bootstrap.interceptor.registry.InterceptorRegistryAdaptor"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 51,
    "startColumnNumber" : 18,
    "endLineNumber" : 51,
    "endColumnNumber" : 26
  }, {
    "charLength" : 8,
    "startLineNumber" : 52,
    "startColumnNumber" : 27,
    "endLineNumber" : 52,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}