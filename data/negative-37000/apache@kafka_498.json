{
  "id" : 498,
  "expression" : "rawRecord.offset()",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/test/java/org/apache/kafka/streams/processor/internals/RecordDeserializerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "rawRecord.offset()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 63,
      "startColumnNumber" : 21,
      "endLineNumber" : 63,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 57
      },
      "nodeContext" : "assertEquals(rawRecord.offset(),record.offset())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 58
      },
      "nodeContext" : "assertEquals(rawRecord.offset(),record.offset());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 892,
        "startLineNumber" : 49,
        "startColumnNumber" : 82,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final RecordDeserializer recordDeserializer=new RecordDeserializer(new TheSourceNode(false,false,\"key\",\"value\"),null,new LogContext(),new Metrics().sensor(\"dropped-records\"));\n  final ConsumerRecord<Object,Object> record=recordDeserializer.deserialize(null,rawRecord);\n  assertEquals(rawRecord.topic(),record.topic());\n  assertEquals(rawRecord.partition(),record.partition());\n  assertEquals(rawRecord.offset(),record.offset());\n  assertEquals(\"key\",record.key());\n  assertEquals(\"value\",record.value());\n  assertEquals(rawRecord.timestamp(),record.timestamp());\n  assertEquals(TimestampType.CREATE_TIME,record.timestampType());\n  assertEquals(rawRecord.headers(),record.headers());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 980,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnConsumerRecordWithDeserializedValueWhenNoExceptions(){\n  final RecordDeserializer recordDeserializer=new RecordDeserializer(new TheSourceNode(false,false,\"key\",\"value\"),null,new LogContext(),new Metrics().sensor(\"dropped-records\"));\n  final ConsumerRecord<Object,Object> record=recordDeserializer.deserialize(null,rawRecord);\n  assertEquals(rawRecord.topic(),record.topic());\n  assertEquals(rawRecord.partition(),record.partition());\n  assertEquals(rawRecord.offset(),record.offset());\n  assertEquals(\"key\",record.key());\n  assertEquals(\"value\",record.value());\n  assertEquals(rawRecord.timestamp(),record.timestamp());\n  assertEquals(TimestampType.CREATE_TIME,record.timestampType());\n  assertEquals(rawRecord.headers(),record.headers());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 117,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 58
      },
      "nodeContext" : "assertEquals(rawRecord.offset(),record.offset());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 63,
    "startColumnNumber" : 21,
    "endLineNumber" : 63,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}