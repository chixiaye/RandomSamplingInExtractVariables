{
  "id" : 291,
  "expression" : "BSDiff",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/decoder/BsDiffDecoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "BSDiff",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 96,
      "startColumnNumber" : 8,
      "endLineNumber" : 96,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 51
      },
      "nodeContext" : "BSDiff.bsdiff(oldFile,newFile,bsDiffFile)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 52
      },
      "nodeContext" : "BSDiff.bsdiff(oldFile,newFile,bsDiffFile);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1446,
        "startLineNumber" : 61,
        "startColumnNumber" : 94,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (newFile == null || !newFile.exists()) {\n    return false;\n  }\n  String newMd5=MD5.getMD5(newFile);\n  File bsDiffFile=getOutputPath(newFile).toFile();\n  if (oldFile == null || !oldFile.exists()) {\n    FileOperation.copyFileUsingStream(newFile,bsDiffFile);\n    writeLogFiles(newFile,null,null,newMd5);\n    return true;\n  }\n  if (oldFile.length() == 0 && newFile.length() == 0) {\n    return false;\n  }\n  if (oldFile.length() == 0 || newFile.length() == 0) {\n    FileOperation.copyFileUsingStream(newFile,bsDiffFile);\n    writeLogFiles(newFile,null,null,newMd5);\n    return true;\n  }\n  String oldMd5=MD5.getMD5(oldFile);\n  if (oldMd5.equals(newMd5)) {\n    return false;\n  }\n  if (!bsDiffFile.getParentFile().exists()) {\n    bsDiffFile.getParentFile().mkdirs();\n  }\n  BSDiff.bsdiff(oldFile,newFile,bsDiffFile);\n  if (Utils.checkBsDiffFileSize(bsDiffFile,newFile)) {\n    writeLogFiles(newFile,oldFile,bsDiffFile,newMd5);\n  }\n else {\n    FileOperation.copyFileUsingStream(newFile,bsDiffFile);\n    writeLogFiles(newFile,null,null,newMd5);\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 168,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1550,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public boolean patch(File oldFile,File newFile) throws IOException, TinkerPatchException {\n  if (newFile == null || !newFile.exists()) {\n    return false;\n  }\n  String newMd5=MD5.getMD5(newFile);\n  File bsDiffFile=getOutputPath(newFile).toFile();\n  if (oldFile == null || !oldFile.exists()) {\n    FileOperation.copyFileUsingStream(newFile,bsDiffFile);\n    writeLogFiles(newFile,null,null,newMd5);\n    return true;\n  }\n  if (oldFile.length() == 0 && newFile.length() == 0) {\n    return false;\n  }\n  if (oldFile.length() == 0 || newFile.length() == 0) {\n    FileOperation.copyFileUsingStream(newFile,bsDiffFile);\n    writeLogFiles(newFile,null,null,newMd5);\n    return true;\n  }\n  String oldMd5=MD5.getMD5(oldFile);\n  if (oldMd5.equals(newMd5)) {\n    return false;\n  }\n  if (!bsDiffFile.getParentFile().exists()) {\n    bsDiffFile.getParentFile().mkdirs();\n  }\n  BSDiff.bsdiff(oldFile,newFile,bsDiffFile);\n  if (Utils.checkBsDiffFileSize(bsDiffFile,newFile)) {\n    writeLogFiles(newFile,oldFile,bsDiffFile,newMd5);\n  }\n else {\n    FileOperation.copyFileUsingStream(newFile,bsDiffFile);\n    writeLogFiles(newFile,null,null,newMd5);\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 186,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 52
      },
      "nodeContext" : "BSDiff.bsdiff(oldFile,newFile,bsDiffFile);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.bsdiff.BSDiff"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 96,
    "startColumnNumber" : 8,
    "endLineNumber" : 96,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ ]
}