{
  "id" : 253,
  "expression" : "input",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/ui/fragments/PlacementFragment.java",
  "occurrences" : 10,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "input",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 114,
      "startColumnNumber" : 16,
      "endLineNumber" : 114,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 114,
        "startColumnNumber" : 16,
        "endLineNumber" : 114,
        "endColumnNumber" : 27
      },
      "nodeContext" : "input.block",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 114,
        "startColumnNumber" : 16,
        "endLineNumber" : 114,
        "endColumnNumber" : 39
      },
      "nodeContext" : "input.block=tryRecipe",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 114,
        "startColumnNumber" : 16,
        "endLineNumber" : 114,
        "endColumnNumber" : 40
      },
      "nodeContext" : "input.block=tryRecipe;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 191,
        "startLineNumber" : 113,
        "startColumnNumber" : 81,
        "endLineNumber" : 118,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  input.block=tryRecipe;\n  tryRecipe.lastConfig=tryConfig;\n  currentCategory=input.block.category;\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 260,
        "startLineNumber" : 113,
        "startColumnNumber" : 12,
        "endLineNumber" : 118,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (tryRecipe != null && tryRecipe.isVisible() && unlocked(tryRecipe)) {\n  input.block=tryRecipe;\n  tryRecipe.lastConfig=tryConfig;\n  currentCategory=input.block.category;\n  return true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 903,
        "startLineNumber" : 100,
        "startColumnNumber" : 65,
        "endLineNumber" : 119,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Building tile=world.buildWorld(Core.input.mouseWorld().x,Core.input.mouseWorld().y);\n  Block tryRecipe=tile == null ? null : tile instanceof   ConstructBuild c ? c.cblock : tile.block;\n  Object tryConfig=tile == null ? null : tile.config();\n  for (  BuildPlan req : player.unit().plans()) {\n    if (!req.breaking && req.block.bounds(req.x,req.y,Tmp.r1).contains(Core.input.mouseWorld())) {\n      tryRecipe=req.block;\n      tryConfig=req.config;\n      break;\n    }\n  }\n  if (tryRecipe != null && tryRecipe.isVisible() && unlocked(tryRecipe)) {\n    input.block=tryRecipe;\n    tryRecipe.lastConfig=tryConfig;\n    currentCategory=input.block.category;\n    return true;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 960,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 119,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Core.input.keyTap(Binding.pick) && player.isBuilder()) {\n  Building tile=world.buildWorld(Core.input.mouseWorld().x,Core.input.mouseWorld().y);\n  Block tryRecipe=tile == null ? null : tile instanceof   ConstructBuild c ? c.cblock : tile.block;\n  Object tryConfig=tile == null ? null : tile.config();\n  for (  BuildPlan req : player.unit().plans()) {\n    if (!req.breaking && req.block.bounds(req.x,req.y,Tmp.r1).contains(Core.input.mouseWorld())) {\n      tryRecipe=req.block;\n      tryConfig=req.config;\n      break;\n    }\n  }\n  if (tryRecipe != null && tryRecipe.isVisible() && unlocked(tryRecipe)) {\n    input.block=tryRecipe;\n    tryRecipe.lastConfig=tryConfig;\n    currentCategory=input.block.category;\n    return true;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 159,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4569,
        "startLineNumber" : 97,
        "startColumnNumber" : 42,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  scrollPositions.put(currentCategory,blockPane.getScrollY());\n  if (Core.input.keyTap(Binding.pick) && player.isBuilder()) {\n    Building tile=world.buildWorld(Core.input.mouseWorld().x,Core.input.mouseWorld().y);\n    Block tryRecipe=tile == null ? null : tile instanceof     ConstructBuild c ? c.cblock : tile.block;\n    Object tryConfig=tile == null ? null : tile.config();\n    for (    BuildPlan req : player.unit().plans()) {\n      if (!req.breaking && req.block.bounds(req.x,req.y,Tmp.r1).contains(Core.input.mouseWorld())) {\n        tryRecipe=req.block;\n        tryConfig=req.config;\n        break;\n      }\n    }\n    if (tryRecipe != null && tryRecipe.isVisible() && unlocked(tryRecipe)) {\n      input.block=tryRecipe;\n      tryRecipe.lastConfig=tryConfig;\n      currentCategory=input.block.category;\n      return true;\n    }\n  }\n  if (ui.chatfrag.shown() || Core.scene.hasKeyboard())   return false;\n  for (int i=0; i < blockSelect.length; i++) {\n    if (Core.input.keyTap(blockSelect[i])) {\n      if (i > 9) {\n        Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n        Block currentBlock=getSelectedBlock(currentCategory);\n        for (int j=0; j < blocks.size; j++) {\n          if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->              yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->            yield j=(j + 1) % blocks.size;\ncase 12 ->{\n            j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n            j-=(j < blocks.size ? 0 : 4);\n          }\ncase 13 ->        yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n    }\n    input.block=blocks.get(j);\n    selectedBlocks.put(currentCategory,input.block);\n    break;\n  }\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\n  currentCategory=Category.all[i];\n  if (input.block != null) {\n    input.block=getSelectedBlock(currentCategory);\n  }\n  blockSelectEnd=false;\n  blockSelectSeq=0;\n  blockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\n  blockSelectSeq=i + 1;\n}\n else {\n  i+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\n  blockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\nif (Core.input.keyTap(Binding.category_prev)) {\ndo {\ncurrentCategory=currentCategory.prev();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nif (Core.input.keyTap(Binding.category_next)) {\ndo {\ncurrentCategory=currentCategory.next();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nreturn false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 578,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4607,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "boolean gridUpdate(InputHandler input){\n  scrollPositions.put(currentCategory,blockPane.getScrollY());\n  if (Core.input.keyTap(Binding.pick) && player.isBuilder()) {\n    Building tile=world.buildWorld(Core.input.mouseWorld().x,Core.input.mouseWorld().y);\n    Block tryRecipe=tile == null ? null : tile instanceof     ConstructBuild c ? c.cblock : tile.block;\n    Object tryConfig=tile == null ? null : tile.config();\n    for (    BuildPlan req : player.unit().plans()) {\n      if (!req.breaking && req.block.bounds(req.x,req.y,Tmp.r1).contains(Core.input.mouseWorld())) {\n        tryRecipe=req.block;\n        tryConfig=req.config;\n        break;\n      }\n    }\n    if (tryRecipe != null && tryRecipe.isVisible() && unlocked(tryRecipe)) {\n      input.block=tryRecipe;\n      tryRecipe.lastConfig=tryConfig;\n      currentCategory=input.block.category;\n      return true;\n    }\n  }\n  if (ui.chatfrag.shown() || Core.scene.hasKeyboard())   return false;\n  for (int i=0; i < blockSelect.length; i++) {\n    if (Core.input.keyTap(blockSelect[i])) {\n      if (i > 9) {\n        Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n        Block currentBlock=getSelectedBlock(currentCategory);\n        for (int j=0; j < blocks.size; j++) {\n          if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->              yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->            yield j=(j + 1) % blocks.size;\ncase 12 ->{\n            j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n            j-=(j < blocks.size ? 0 : 4);\n          }\ncase 13 ->        yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n    }\n    input.block=blocks.get(j);\n    selectedBlocks.put(currentCategory,input.block);\n    break;\n  }\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\n  currentCategory=Category.all[i];\n  if (input.block != null) {\n    input.block=getSelectedBlock(currentCategory);\n  }\n  blockSelectEnd=false;\n  blockSelectSeq=0;\n  blockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\n  blockSelectSeq=i + 1;\n}\n else {\n  i+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\n  blockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\nif (Core.input.keyTap(Binding.category_prev)) {\ndo {\ncurrentCategory=currentCategory.prev();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nif (Core.input.keyTap(Binding.category_next)) {\ndo {\ncurrentCategory=currentCategory.next();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nreturn false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 585,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 114,
        "startColumnNumber" : 16,
        "endLineNumber" : 114,
        "endColumnNumber" : 40
      },
      "nodeContext" : "input.block=tryRecipe;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "mindustry.input.InputHandler"
  }, {
    "nodeContext" : "input",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 116,
      "startColumnNumber" : 34,
      "endLineNumber" : 116,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.QualifiedName,qualifier]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 116,
        "startColumnNumber" : 34,
        "endLineNumber" : 116,
        "endColumnNumber" : 45
      },
      "nodeContext" : "input.block",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 116,
        "startColumnNumber" : 34,
        "endLineNumber" : 116,
        "endColumnNumber" : 54
      },
      "nodeContext" : "input.block.category",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 116,
        "startColumnNumber" : 16,
        "endLineNumber" : 116,
        "endColumnNumber" : 54
      },
      "nodeContext" : "currentCategory=input.block.category",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 116,
        "startColumnNumber" : 16,
        "endLineNumber" : 116,
        "endColumnNumber" : 55
      },
      "nodeContext" : "currentCategory=input.block.category;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 191,
        "startLineNumber" : 113,
        "startColumnNumber" : 81,
        "endLineNumber" : 118,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  input.block=tryRecipe;\n  tryRecipe.lastConfig=tryConfig;\n  currentCategory=input.block.category;\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 260,
        "startLineNumber" : 113,
        "startColumnNumber" : 12,
        "endLineNumber" : 118,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (tryRecipe != null && tryRecipe.isVisible() && unlocked(tryRecipe)) {\n  input.block=tryRecipe;\n  tryRecipe.lastConfig=tryConfig;\n  currentCategory=input.block.category;\n  return true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 903,
        "startLineNumber" : 100,
        "startColumnNumber" : 65,
        "endLineNumber" : 119,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Building tile=world.buildWorld(Core.input.mouseWorld().x,Core.input.mouseWorld().y);\n  Block tryRecipe=tile == null ? null : tile instanceof   ConstructBuild c ? c.cblock : tile.block;\n  Object tryConfig=tile == null ? null : tile.config();\n  for (  BuildPlan req : player.unit().plans()) {\n    if (!req.breaking && req.block.bounds(req.x,req.y,Tmp.r1).contains(Core.input.mouseWorld())) {\n      tryRecipe=req.block;\n      tryConfig=req.config;\n      break;\n    }\n  }\n  if (tryRecipe != null && tryRecipe.isVisible() && unlocked(tryRecipe)) {\n    input.block=tryRecipe;\n    tryRecipe.lastConfig=tryConfig;\n    currentCategory=input.block.category;\n    return true;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 960,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 119,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Core.input.keyTap(Binding.pick) && player.isBuilder()) {\n  Building tile=world.buildWorld(Core.input.mouseWorld().x,Core.input.mouseWorld().y);\n  Block tryRecipe=tile == null ? null : tile instanceof   ConstructBuild c ? c.cblock : tile.block;\n  Object tryConfig=tile == null ? null : tile.config();\n  for (  BuildPlan req : player.unit().plans()) {\n    if (!req.breaking && req.block.bounds(req.x,req.y,Tmp.r1).contains(Core.input.mouseWorld())) {\n      tryRecipe=req.block;\n      tryConfig=req.config;\n      break;\n    }\n  }\n  if (tryRecipe != null && tryRecipe.isVisible() && unlocked(tryRecipe)) {\n    input.block=tryRecipe;\n    tryRecipe.lastConfig=tryConfig;\n    currentCategory=input.block.category;\n    return true;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 159,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4569,
        "startLineNumber" : 97,
        "startColumnNumber" : 42,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  scrollPositions.put(currentCategory,blockPane.getScrollY());\n  if (Core.input.keyTap(Binding.pick) && player.isBuilder()) {\n    Building tile=world.buildWorld(Core.input.mouseWorld().x,Core.input.mouseWorld().y);\n    Block tryRecipe=tile == null ? null : tile instanceof     ConstructBuild c ? c.cblock : tile.block;\n    Object tryConfig=tile == null ? null : tile.config();\n    for (    BuildPlan req : player.unit().plans()) {\n      if (!req.breaking && req.block.bounds(req.x,req.y,Tmp.r1).contains(Core.input.mouseWorld())) {\n        tryRecipe=req.block;\n        tryConfig=req.config;\n        break;\n      }\n    }\n    if (tryRecipe != null && tryRecipe.isVisible() && unlocked(tryRecipe)) {\n      input.block=tryRecipe;\n      tryRecipe.lastConfig=tryConfig;\n      currentCategory=input.block.category;\n      return true;\n    }\n  }\n  if (ui.chatfrag.shown() || Core.scene.hasKeyboard())   return false;\n  for (int i=0; i < blockSelect.length; i++) {\n    if (Core.input.keyTap(blockSelect[i])) {\n      if (i > 9) {\n        Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n        Block currentBlock=getSelectedBlock(currentCategory);\n        for (int j=0; j < blocks.size; j++) {\n          if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->              yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->            yield j=(j + 1) % blocks.size;\ncase 12 ->{\n            j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n            j-=(j < blocks.size ? 0 : 4);\n          }\ncase 13 ->        yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n    }\n    input.block=blocks.get(j);\n    selectedBlocks.put(currentCategory,input.block);\n    break;\n  }\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\n  currentCategory=Category.all[i];\n  if (input.block != null) {\n    input.block=getSelectedBlock(currentCategory);\n  }\n  blockSelectEnd=false;\n  blockSelectSeq=0;\n  blockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\n  blockSelectSeq=i + 1;\n}\n else {\n  i+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\n  blockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\nif (Core.input.keyTap(Binding.category_prev)) {\ndo {\ncurrentCategory=currentCategory.prev();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nif (Core.input.keyTap(Binding.category_next)) {\ndo {\ncurrentCategory=currentCategory.next();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nreturn false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 578,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4607,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "boolean gridUpdate(InputHandler input){\n  scrollPositions.put(currentCategory,blockPane.getScrollY());\n  if (Core.input.keyTap(Binding.pick) && player.isBuilder()) {\n    Building tile=world.buildWorld(Core.input.mouseWorld().x,Core.input.mouseWorld().y);\n    Block tryRecipe=tile == null ? null : tile instanceof     ConstructBuild c ? c.cblock : tile.block;\n    Object tryConfig=tile == null ? null : tile.config();\n    for (    BuildPlan req : player.unit().plans()) {\n      if (!req.breaking && req.block.bounds(req.x,req.y,Tmp.r1).contains(Core.input.mouseWorld())) {\n        tryRecipe=req.block;\n        tryConfig=req.config;\n        break;\n      }\n    }\n    if (tryRecipe != null && tryRecipe.isVisible() && unlocked(tryRecipe)) {\n      input.block=tryRecipe;\n      tryRecipe.lastConfig=tryConfig;\n      currentCategory=input.block.category;\n      return true;\n    }\n  }\n  if (ui.chatfrag.shown() || Core.scene.hasKeyboard())   return false;\n  for (int i=0; i < blockSelect.length; i++) {\n    if (Core.input.keyTap(blockSelect[i])) {\n      if (i > 9) {\n        Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n        Block currentBlock=getSelectedBlock(currentCategory);\n        for (int j=0; j < blocks.size; j++) {\n          if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->              yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->            yield j=(j + 1) % blocks.size;\ncase 12 ->{\n            j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n            j-=(j < blocks.size ? 0 : 4);\n          }\ncase 13 ->        yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n    }\n    input.block=blocks.get(j);\n    selectedBlocks.put(currentCategory,input.block);\n    break;\n  }\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\n  currentCategory=Category.all[i];\n  if (input.block != null) {\n    input.block=getSelectedBlock(currentCategory);\n  }\n  blockSelectEnd=false;\n  blockSelectSeq=0;\n  blockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\n  blockSelectSeq=i + 1;\n}\n else {\n  i+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\n  blockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\nif (Core.input.keyTap(Binding.category_prev)) {\ndo {\ncurrentCategory=currentCategory.prev();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nif (Core.input.keyTap(Binding.category_next)) {\ndo {\ncurrentCategory=currentCategory.next();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nreturn false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 585,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 116,
        "startColumnNumber" : 16,
        "endLineNumber" : 116,
        "endColumnNumber" : 55
      },
      "nodeContext" : "currentCategory=input.block.category;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "mindustry.input.InputHandler"
  }, {
    "nodeContext" : "input",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 143,
      "startColumnNumber" : 28,
      "endLineNumber" : 143,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 143,
        "startColumnNumber" : 28,
        "endLineNumber" : 143,
        "endColumnNumber" : 39
      },
      "nodeContext" : "input.block",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 143,
        "startColumnNumber" : 28,
        "endLineNumber" : 143,
        "endColumnNumber" : 55
      },
      "nodeContext" : "input.block=blocks.get(j)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 143,
        "startColumnNumber" : 28,
        "endLineNumber" : 143,
        "endColumnNumber" : 56
      },
      "nodeContext" : "input.block=blocks.get(j);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 901,
        "startLineNumber" : 129,
        "startColumnNumber" : 57,
        "endLineNumber" : 146,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\nswitch (i) {\ncase 10 ->    yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->  yield j=(j + 1) % blocks.size;\ncase 12 ->{\n  j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n  j-=(j < blocks.size ? 0 : 4);\n}\ncase 13 ->yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n}\ninput.block=blocks.get(j);\nselectedBlocks.put(currentCategory,input.block);\nbreak;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 934,
        "startLineNumber" : 129,
        "startColumnNumber" : 24,
        "endLineNumber" : 146,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->    yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->  yield j=(j + 1) % blocks.size;\ncase 12 ->{\n  j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n  j-=(j < blocks.size ? 0 : 4);\n}\ncase 13 ->yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n}\ninput.block=blocks.get(j);\nselectedBlocks.put(currentCategory,input.block);\nbreak;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 115,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 982,
        "startLineNumber" : 128,
        "startColumnNumber" : 56,
        "endLineNumber" : 147,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->      yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->    yield j=(j + 1) % blocks.size;\ncase 12 ->{\n    j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n    j-=(j < blocks.size ? 0 : 4);\n  }\ncase 13 ->yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n}\ninput.block=blocks.get(j);\nselectedBlocks.put(currentCategory,input.block);\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1018,
        "startLineNumber" : 128,
        "startColumnNumber" : 20,
        "endLineNumber" : 147,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (int j=0; j < blocks.size; j++) {\n  if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->      yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->    yield j=(j + 1) % blocks.size;\ncase 12 ->{\n    j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n    j-=(j < blocks.size ? 0 : 4);\n  }\ncase 13 ->yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n}\ninput.block=blocks.get(j);\nselectedBlocks.put(currentCategory,input.block);\nbreak;\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 129,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1243,
        "startLineNumber" : 125,
        "startColumnNumber" : 25,
        "endLineNumber" : 148,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n  Block currentBlock=getSelectedBlock(currentCategory);\n  for (int j=0; j < blocks.size; j++) {\n    if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->        yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->      yield j=(j + 1) % blocks.size;\ncase 12 ->{\n      j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n      j-=(j < blocks.size ? 0 : 4);\n    }\ncase 13 ->  yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n}\ninput.block=blocks.get(j);\nselectedBlocks.put(currentCategory,input.block);\nbreak;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 149,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2675,
        "startLineNumber" : 125,
        "startColumnNumber" : 16,
        "endLineNumber" : 172,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (i > 9) {\n  Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n  Block currentBlock=getSelectedBlock(currentCategory);\n  for (int j=0; j < blocks.size; j++) {\n    if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->        yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->      yield j=(j + 1) % blocks.size;\ncase 12 ->{\n      j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n      j-=(j < blocks.size ? 0 : 4);\n    }\ncase 13 ->  yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n}\ninput.block=blocks.get(j);\nselectedBlocks.put(currentCategory,input.block);\nbreak;\n}\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\ncurrentCategory=Category.all[i];\nif (input.block != null) {\ninput.block=getSelectedBlock(currentCategory);\n}\nblockSelectEnd=false;\nblockSelectSeq=0;\nblockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\nblockSelectSeq=i + 1;\n}\n else {\ni+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\nblockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 302,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2736,
        "startLineNumber" : 124,
        "startColumnNumber" : 49,
        "endLineNumber" : 174,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (i > 9) {\n    Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n    Block currentBlock=getSelectedBlock(currentCategory);\n    for (int j=0; j < blocks.size; j++) {\n      if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->          yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->        yield j=(j + 1) % blocks.size;\ncase 12 ->{\n        j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n        j-=(j < blocks.size ? 0 : 4);\n      }\ncase 13 ->    yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n}\ninput.block=blocks.get(j);\nselectedBlocks.put(currentCategory,input.block);\nbreak;\n}\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\ncurrentCategory=Category.all[i];\nif (input.block != null) {\ninput.block=getSelectedBlock(currentCategory);\n}\nblockSelectEnd=false;\nblockSelectSeq=0;\nblockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\nblockSelectSeq=i + 1;\n}\n else {\ni+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\nblockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 305,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2773,
        "startLineNumber" : 124,
        "startColumnNumber" : 12,
        "endLineNumber" : 174,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (Core.input.keyTap(blockSelect[i])) {\n  if (i > 9) {\n    Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n    Block currentBlock=getSelectedBlock(currentCategory);\n    for (int j=0; j < blocks.size; j++) {\n      if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->          yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->        yield j=(j + 1) % blocks.size;\ncase 12 ->{\n        j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n        j-=(j < blocks.size ? 0 : 4);\n      }\ncase 13 ->    yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n}\ninput.block=blocks.get(j);\nselectedBlocks.put(currentCategory,input.block);\nbreak;\n}\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\ncurrentCategory=Category.all[i];\nif (input.block != null) {\ninput.block=getSelectedBlock(currentCategory);\n}\nblockSelectEnd=false;\nblockSelectSeq=0;\nblockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\nblockSelectSeq=i + 1;\n}\n else {\ni+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\nblockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 314,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2797,
        "startLineNumber" : 123,
        "startColumnNumber" : 51,
        "endLineNumber" : 175,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (Core.input.keyTap(blockSelect[i])) {\n    if (i > 9) {\n      Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n      Block currentBlock=getSelectedBlock(currentCategory);\n      for (int j=0; j < blocks.size; j++) {\n        if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->            yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->          yield j=(j + 1) % blocks.size;\ncase 12 ->{\n          j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n          j-=(j < blocks.size ? 0 : 4);\n        }\ncase 13 ->      yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n  }\n  input.block=blocks.get(j);\n  selectedBlocks.put(currentCategory,input.block);\n  break;\n}\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\ncurrentCategory=Category.all[i];\nif (input.block != null) {\n  input.block=getSelectedBlock(currentCategory);\n}\nblockSelectEnd=false;\nblockSelectSeq=0;\nblockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\nblockSelectSeq=i + 1;\n}\n else {\ni+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\nblockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 315,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2840,
        "startLineNumber" : 123,
        "startColumnNumber" : 8,
        "endLineNumber" : 175,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < blockSelect.length; i++) {\n  if (Core.input.keyTap(blockSelect[i])) {\n    if (i > 9) {\n      Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n      Block currentBlock=getSelectedBlock(currentCategory);\n      for (int j=0; j < blocks.size; j++) {\n        if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->            yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->          yield j=(j + 1) % blocks.size;\ncase 12 ->{\n          j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n          j-=(j < blocks.size ? 0 : 4);\n        }\ncase 13 ->      yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n  }\n  input.block=blocks.get(j);\n  selectedBlocks.put(currentCategory,input.block);\n  break;\n}\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\ncurrentCategory=Category.all[i];\nif (input.block != null) {\n  input.block=getSelectedBlock(currentCategory);\n}\nblockSelectEnd=false;\nblockSelectSeq=0;\nblockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\nblockSelectSeq=i + 1;\n}\n else {\ni+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\nblockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 328,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4569,
        "startLineNumber" : 97,
        "startColumnNumber" : 42,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  scrollPositions.put(currentCategory,blockPane.getScrollY());\n  if (Core.input.keyTap(Binding.pick) && player.isBuilder()) {\n    Building tile=world.buildWorld(Core.input.mouseWorld().x,Core.input.mouseWorld().y);\n    Block tryRecipe=tile == null ? null : tile instanceof     ConstructBuild c ? c.cblock : tile.block;\n    Object tryConfig=tile == null ? null : tile.config();\n    for (    BuildPlan req : player.unit().plans()) {\n      if (!req.breaking && req.block.bounds(req.x,req.y,Tmp.r1).contains(Core.input.mouseWorld())) {\n        tryRecipe=req.block;\n        tryConfig=req.config;\n        break;\n      }\n    }\n    if (tryRecipe != null && tryRecipe.isVisible() && unlocked(tryRecipe)) {\n      input.block=tryRecipe;\n      tryRecipe.lastConfig=tryConfig;\n      currentCategory=input.block.category;\n      return true;\n    }\n  }\n  if (ui.chatfrag.shown() || Core.scene.hasKeyboard())   return false;\n  for (int i=0; i < blockSelect.length; i++) {\n    if (Core.input.keyTap(blockSelect[i])) {\n      if (i > 9) {\n        Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n        Block currentBlock=getSelectedBlock(currentCategory);\n        for (int j=0; j < blocks.size; j++) {\n          if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->              yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->            yield j=(j + 1) % blocks.size;\ncase 12 ->{\n            j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n            j-=(j < blocks.size ? 0 : 4);\n          }\ncase 13 ->        yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n    }\n    input.block=blocks.get(j);\n    selectedBlocks.put(currentCategory,input.block);\n    break;\n  }\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\n  currentCategory=Category.all[i];\n  if (input.block != null) {\n    input.block=getSelectedBlock(currentCategory);\n  }\n  blockSelectEnd=false;\n  blockSelectSeq=0;\n  blockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\n  blockSelectSeq=i + 1;\n}\n else {\n  i+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\n  blockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\nif (Core.input.keyTap(Binding.category_prev)) {\ndo {\ncurrentCategory=currentCategory.prev();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nif (Core.input.keyTap(Binding.category_next)) {\ndo {\ncurrentCategory=currentCategory.next();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nreturn false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 578,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4607,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "boolean gridUpdate(InputHandler input){\n  scrollPositions.put(currentCategory,blockPane.getScrollY());\n  if (Core.input.keyTap(Binding.pick) && player.isBuilder()) {\n    Building tile=world.buildWorld(Core.input.mouseWorld().x,Core.input.mouseWorld().y);\n    Block tryRecipe=tile == null ? null : tile instanceof     ConstructBuild c ? c.cblock : tile.block;\n    Object tryConfig=tile == null ? null : tile.config();\n    for (    BuildPlan req : player.unit().plans()) {\n      if (!req.breaking && req.block.bounds(req.x,req.y,Tmp.r1).contains(Core.input.mouseWorld())) {\n        tryRecipe=req.block;\n        tryConfig=req.config;\n        break;\n      }\n    }\n    if (tryRecipe != null && tryRecipe.isVisible() && unlocked(tryRecipe)) {\n      input.block=tryRecipe;\n      tryRecipe.lastConfig=tryConfig;\n      currentCategory=input.block.category;\n      return true;\n    }\n  }\n  if (ui.chatfrag.shown() || Core.scene.hasKeyboard())   return false;\n  for (int i=0; i < blockSelect.length; i++) {\n    if (Core.input.keyTap(blockSelect[i])) {\n      if (i > 9) {\n        Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n        Block currentBlock=getSelectedBlock(currentCategory);\n        for (int j=0; j < blocks.size; j++) {\n          if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->              yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->            yield j=(j + 1) % blocks.size;\ncase 12 ->{\n            j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n            j-=(j < blocks.size ? 0 : 4);\n          }\ncase 13 ->        yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n    }\n    input.block=blocks.get(j);\n    selectedBlocks.put(currentCategory,input.block);\n    break;\n  }\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\n  currentCategory=Category.all[i];\n  if (input.block != null) {\n    input.block=getSelectedBlock(currentCategory);\n  }\n  blockSelectEnd=false;\n  blockSelectSeq=0;\n  blockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\n  blockSelectSeq=i + 1;\n}\n else {\n  i+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\n  blockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\nif (Core.input.keyTap(Binding.category_prev)) {\ndo {\ncurrentCategory=currentCategory.prev();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nif (Core.input.keyTap(Binding.category_next)) {\ndo {\ncurrentCategory=currentCategory.next();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nreturn false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 585,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 143,
        "startColumnNumber" : 28,
        "endLineNumber" : 143,
        "endColumnNumber" : 56
      },
      "nodeContext" : "input.block=blocks.get(j);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "mindustry.input.InputHandler"
  }, {
    "nodeContext" : "input",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 144,
      "startColumnNumber" : 64,
      "endLineNumber" : 144,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 144,
        "startColumnNumber" : 64,
        "endLineNumber" : 144,
        "endColumnNumber" : 75
      },
      "nodeContext" : "input.block",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 144,
        "startColumnNumber" : 28,
        "endLineNumber" : 144,
        "endColumnNumber" : 76
      },
      "nodeContext" : "selectedBlocks.put(currentCategory,input.block)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 144,
        "startColumnNumber" : 28,
        "endLineNumber" : 144,
        "endColumnNumber" : 77
      },
      "nodeContext" : "selectedBlocks.put(currentCategory,input.block);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 901,
        "startLineNumber" : 129,
        "startColumnNumber" : 57,
        "endLineNumber" : 146,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\nswitch (i) {\ncase 10 ->    yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->  yield j=(j + 1) % blocks.size;\ncase 12 ->{\n  j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n  j-=(j < blocks.size ? 0 : 4);\n}\ncase 13 ->yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n}\ninput.block=blocks.get(j);\nselectedBlocks.put(currentCategory,input.block);\nbreak;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 934,
        "startLineNumber" : 129,
        "startColumnNumber" : 24,
        "endLineNumber" : 146,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->    yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->  yield j=(j + 1) % blocks.size;\ncase 12 ->{\n  j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n  j-=(j < blocks.size ? 0 : 4);\n}\ncase 13 ->yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n}\ninput.block=blocks.get(j);\nselectedBlocks.put(currentCategory,input.block);\nbreak;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 115,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 982,
        "startLineNumber" : 128,
        "startColumnNumber" : 56,
        "endLineNumber" : 147,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->      yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->    yield j=(j + 1) % blocks.size;\ncase 12 ->{\n    j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n    j-=(j < blocks.size ? 0 : 4);\n  }\ncase 13 ->yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n}\ninput.block=blocks.get(j);\nselectedBlocks.put(currentCategory,input.block);\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1018,
        "startLineNumber" : 128,
        "startColumnNumber" : 20,
        "endLineNumber" : 147,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (int j=0; j < blocks.size; j++) {\n  if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->      yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->    yield j=(j + 1) % blocks.size;\ncase 12 ->{\n    j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n    j-=(j < blocks.size ? 0 : 4);\n  }\ncase 13 ->yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n}\ninput.block=blocks.get(j);\nselectedBlocks.put(currentCategory,input.block);\nbreak;\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 129,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1243,
        "startLineNumber" : 125,
        "startColumnNumber" : 25,
        "endLineNumber" : 148,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n  Block currentBlock=getSelectedBlock(currentCategory);\n  for (int j=0; j < blocks.size; j++) {\n    if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->        yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->      yield j=(j + 1) % blocks.size;\ncase 12 ->{\n      j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n      j-=(j < blocks.size ? 0 : 4);\n    }\ncase 13 ->  yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n}\ninput.block=blocks.get(j);\nselectedBlocks.put(currentCategory,input.block);\nbreak;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 149,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2675,
        "startLineNumber" : 125,
        "startColumnNumber" : 16,
        "endLineNumber" : 172,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (i > 9) {\n  Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n  Block currentBlock=getSelectedBlock(currentCategory);\n  for (int j=0; j < blocks.size; j++) {\n    if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->        yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->      yield j=(j + 1) % blocks.size;\ncase 12 ->{\n      j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n      j-=(j < blocks.size ? 0 : 4);\n    }\ncase 13 ->  yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n}\ninput.block=blocks.get(j);\nselectedBlocks.put(currentCategory,input.block);\nbreak;\n}\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\ncurrentCategory=Category.all[i];\nif (input.block != null) {\ninput.block=getSelectedBlock(currentCategory);\n}\nblockSelectEnd=false;\nblockSelectSeq=0;\nblockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\nblockSelectSeq=i + 1;\n}\n else {\ni+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\nblockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 302,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2736,
        "startLineNumber" : 124,
        "startColumnNumber" : 49,
        "endLineNumber" : 174,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (i > 9) {\n    Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n    Block currentBlock=getSelectedBlock(currentCategory);\n    for (int j=0; j < blocks.size; j++) {\n      if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->          yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->        yield j=(j + 1) % blocks.size;\ncase 12 ->{\n        j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n        j-=(j < blocks.size ? 0 : 4);\n      }\ncase 13 ->    yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n}\ninput.block=blocks.get(j);\nselectedBlocks.put(currentCategory,input.block);\nbreak;\n}\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\ncurrentCategory=Category.all[i];\nif (input.block != null) {\ninput.block=getSelectedBlock(currentCategory);\n}\nblockSelectEnd=false;\nblockSelectSeq=0;\nblockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\nblockSelectSeq=i + 1;\n}\n else {\ni+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\nblockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 305,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2773,
        "startLineNumber" : 124,
        "startColumnNumber" : 12,
        "endLineNumber" : 174,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (Core.input.keyTap(blockSelect[i])) {\n  if (i > 9) {\n    Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n    Block currentBlock=getSelectedBlock(currentCategory);\n    for (int j=0; j < blocks.size; j++) {\n      if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->          yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->        yield j=(j + 1) % blocks.size;\ncase 12 ->{\n        j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n        j-=(j < blocks.size ? 0 : 4);\n      }\ncase 13 ->    yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n}\ninput.block=blocks.get(j);\nselectedBlocks.put(currentCategory,input.block);\nbreak;\n}\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\ncurrentCategory=Category.all[i];\nif (input.block != null) {\ninput.block=getSelectedBlock(currentCategory);\n}\nblockSelectEnd=false;\nblockSelectSeq=0;\nblockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\nblockSelectSeq=i + 1;\n}\n else {\ni+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\nblockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 314,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2797,
        "startLineNumber" : 123,
        "startColumnNumber" : 51,
        "endLineNumber" : 175,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (Core.input.keyTap(blockSelect[i])) {\n    if (i > 9) {\n      Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n      Block currentBlock=getSelectedBlock(currentCategory);\n      for (int j=0; j < blocks.size; j++) {\n        if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->            yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->          yield j=(j + 1) % blocks.size;\ncase 12 ->{\n          j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n          j-=(j < blocks.size ? 0 : 4);\n        }\ncase 13 ->      yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n  }\n  input.block=blocks.get(j);\n  selectedBlocks.put(currentCategory,input.block);\n  break;\n}\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\ncurrentCategory=Category.all[i];\nif (input.block != null) {\n  input.block=getSelectedBlock(currentCategory);\n}\nblockSelectEnd=false;\nblockSelectSeq=0;\nblockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\nblockSelectSeq=i + 1;\n}\n else {\ni+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\nblockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 315,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2840,
        "startLineNumber" : 123,
        "startColumnNumber" : 8,
        "endLineNumber" : 175,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < blockSelect.length; i++) {\n  if (Core.input.keyTap(blockSelect[i])) {\n    if (i > 9) {\n      Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n      Block currentBlock=getSelectedBlock(currentCategory);\n      for (int j=0; j < blocks.size; j++) {\n        if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->            yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->          yield j=(j + 1) % blocks.size;\ncase 12 ->{\n          j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n          j-=(j < blocks.size ? 0 : 4);\n        }\ncase 13 ->      yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n  }\n  input.block=blocks.get(j);\n  selectedBlocks.put(currentCategory,input.block);\n  break;\n}\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\ncurrentCategory=Category.all[i];\nif (input.block != null) {\n  input.block=getSelectedBlock(currentCategory);\n}\nblockSelectEnd=false;\nblockSelectSeq=0;\nblockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\nblockSelectSeq=i + 1;\n}\n else {\ni+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\nblockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 328,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4569,
        "startLineNumber" : 97,
        "startColumnNumber" : 42,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  scrollPositions.put(currentCategory,blockPane.getScrollY());\n  if (Core.input.keyTap(Binding.pick) && player.isBuilder()) {\n    Building tile=world.buildWorld(Core.input.mouseWorld().x,Core.input.mouseWorld().y);\n    Block tryRecipe=tile == null ? null : tile instanceof     ConstructBuild c ? c.cblock : tile.block;\n    Object tryConfig=tile == null ? null : tile.config();\n    for (    BuildPlan req : player.unit().plans()) {\n      if (!req.breaking && req.block.bounds(req.x,req.y,Tmp.r1).contains(Core.input.mouseWorld())) {\n        tryRecipe=req.block;\n        tryConfig=req.config;\n        break;\n      }\n    }\n    if (tryRecipe != null && tryRecipe.isVisible() && unlocked(tryRecipe)) {\n      input.block=tryRecipe;\n      tryRecipe.lastConfig=tryConfig;\n      currentCategory=input.block.category;\n      return true;\n    }\n  }\n  if (ui.chatfrag.shown() || Core.scene.hasKeyboard())   return false;\n  for (int i=0; i < blockSelect.length; i++) {\n    if (Core.input.keyTap(blockSelect[i])) {\n      if (i > 9) {\n        Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n        Block currentBlock=getSelectedBlock(currentCategory);\n        for (int j=0; j < blocks.size; j++) {\n          if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->              yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->            yield j=(j + 1) % blocks.size;\ncase 12 ->{\n            j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n            j-=(j < blocks.size ? 0 : 4);\n          }\ncase 13 ->        yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n    }\n    input.block=blocks.get(j);\n    selectedBlocks.put(currentCategory,input.block);\n    break;\n  }\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\n  currentCategory=Category.all[i];\n  if (input.block != null) {\n    input.block=getSelectedBlock(currentCategory);\n  }\n  blockSelectEnd=false;\n  blockSelectSeq=0;\n  blockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\n  blockSelectSeq=i + 1;\n}\n else {\n  i+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\n  blockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\nif (Core.input.keyTap(Binding.category_prev)) {\ndo {\ncurrentCategory=currentCategory.prev();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nif (Core.input.keyTap(Binding.category_next)) {\ndo {\ncurrentCategory=currentCategory.next();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nreturn false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 578,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4607,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "boolean gridUpdate(InputHandler input){\n  scrollPositions.put(currentCategory,blockPane.getScrollY());\n  if (Core.input.keyTap(Binding.pick) && player.isBuilder()) {\n    Building tile=world.buildWorld(Core.input.mouseWorld().x,Core.input.mouseWorld().y);\n    Block tryRecipe=tile == null ? null : tile instanceof     ConstructBuild c ? c.cblock : tile.block;\n    Object tryConfig=tile == null ? null : tile.config();\n    for (    BuildPlan req : player.unit().plans()) {\n      if (!req.breaking && req.block.bounds(req.x,req.y,Tmp.r1).contains(Core.input.mouseWorld())) {\n        tryRecipe=req.block;\n        tryConfig=req.config;\n        break;\n      }\n    }\n    if (tryRecipe != null && tryRecipe.isVisible() && unlocked(tryRecipe)) {\n      input.block=tryRecipe;\n      tryRecipe.lastConfig=tryConfig;\n      currentCategory=input.block.category;\n      return true;\n    }\n  }\n  if (ui.chatfrag.shown() || Core.scene.hasKeyboard())   return false;\n  for (int i=0; i < blockSelect.length; i++) {\n    if (Core.input.keyTap(blockSelect[i])) {\n      if (i > 9) {\n        Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n        Block currentBlock=getSelectedBlock(currentCategory);\n        for (int j=0; j < blocks.size; j++) {\n          if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->              yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->            yield j=(j + 1) % blocks.size;\ncase 12 ->{\n            j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n            j-=(j < blocks.size ? 0 : 4);\n          }\ncase 13 ->        yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n    }\n    input.block=blocks.get(j);\n    selectedBlocks.put(currentCategory,input.block);\n    break;\n  }\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\n  currentCategory=Category.all[i];\n  if (input.block != null) {\n    input.block=getSelectedBlock(currentCategory);\n  }\n  blockSelectEnd=false;\n  blockSelectSeq=0;\n  blockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\n  blockSelectSeq=i + 1;\n}\n else {\n  i+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\n  blockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\nif (Core.input.keyTap(Binding.category_prev)) {\ndo {\ncurrentCategory=currentCategory.prev();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nif (Core.input.keyTap(Binding.category_next)) {\ndo {\ncurrentCategory=currentCategory.next();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nreturn false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 585,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 144,
        "startColumnNumber" : 28,
        "endLineNumber" : 144,
        "endColumnNumber" : 77
      },
      "nodeContext" : "selectedBlocks.put(currentCategory,input.block);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "mindustry.input.InputHandler"
  }, {
    "nodeContext" : "input",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 152,
      "startColumnNumber" : 27,
      "endLineNumber" : 152,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 152,
        "startColumnNumber" : 27,
        "endLineNumber" : 152,
        "endColumnNumber" : 38
      },
      "nodeContext" : "input.block",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 152,
        "startColumnNumber" : 27,
        "endLineNumber" : 152,
        "endColumnNumber" : 46
      },
      "nodeContext" : "input.block != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 152,
        "startColumnNumber" : 24,
        "endLineNumber" : 154,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (input.block != null) {\n  input.block=getSelectedBlock(currentCategory);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 388,
        "startLineNumber" : 150,
        "startColumnNumber" : 73,
        "endLineNumber" : 158,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  currentCategory=Category.all[i];\n  if (input.block != null) {\n    input.block=getSelectedBlock(currentCategory);\n  }\n  blockSelectEnd=false;\n  blockSelectSeq=0;\n  blockSelectSeqMillis=Time.millis();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 441,
        "startLineNumber" : 150,
        "startColumnNumber" : 20,
        "endLineNumber" : 158,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\n  currentCategory=Category.all[i];\n  if (input.block != null) {\n    input.block=getSelectedBlock(currentCategory);\n  }\n  blockSelectEnd=false;\n  blockSelectSeq=0;\n  blockSelectSeqMillis=Time.millis();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 573,
        "startLineNumber" : 148,
        "startColumnNumber" : 92,
        "endLineNumber" : 159,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\n    currentCategory=Category.all[i];\n    if (input.block != null) {\n      input.block=getSelectedBlock(currentCategory);\n    }\n    blockSelectEnd=false;\n    blockSelectSeq=0;\n    blockSelectSeqMillis=Time.millis();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1418,
        "startLineNumber" : 148,
        "startColumnNumber" : 22,
        "endLineNumber" : 172,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\n  if (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\n    currentCategory=Category.all[i];\n    if (input.block != null) {\n      input.block=getSelectedBlock(currentCategory);\n    }\n    blockSelectEnd=false;\n    blockSelectSeq=0;\n    blockSelectSeqMillis=Time.millis();\n  }\n}\n else {\n  if (blockSelectSeq == 0) {\n    blockSelectSeq=i + 1;\n  }\n else {\n    i+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\n    blockSelectEnd=true;\n  }\n  Seq<Block> blocks=getByCategory(currentCategory);\n  if (i >= blocks.size || !unlocked(blocks.get(i)))   return true;\n  input.block=(i < blocks.size) ? blocks.get(i) : null;\n  selectedBlocks.put(currentCategory,input.block);\n  blockSelectSeqMillis=Time.millis();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2675,
        "startLineNumber" : 125,
        "startColumnNumber" : 16,
        "endLineNumber" : 172,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (i > 9) {\n  Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n  Block currentBlock=getSelectedBlock(currentCategory);\n  for (int j=0; j < blocks.size; j++) {\n    if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->        yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->      yield j=(j + 1) % blocks.size;\ncase 12 ->{\n      j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n      j-=(j < blocks.size ? 0 : 4);\n    }\ncase 13 ->  yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n}\ninput.block=blocks.get(j);\nselectedBlocks.put(currentCategory,input.block);\nbreak;\n}\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\ncurrentCategory=Category.all[i];\nif (input.block != null) {\ninput.block=getSelectedBlock(currentCategory);\n}\nblockSelectEnd=false;\nblockSelectSeq=0;\nblockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\nblockSelectSeq=i + 1;\n}\n else {\ni+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\nblockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 302,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2736,
        "startLineNumber" : 124,
        "startColumnNumber" : 49,
        "endLineNumber" : 174,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (i > 9) {\n    Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n    Block currentBlock=getSelectedBlock(currentCategory);\n    for (int j=0; j < blocks.size; j++) {\n      if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->          yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->        yield j=(j + 1) % blocks.size;\ncase 12 ->{\n        j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n        j-=(j < blocks.size ? 0 : 4);\n      }\ncase 13 ->    yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n}\ninput.block=blocks.get(j);\nselectedBlocks.put(currentCategory,input.block);\nbreak;\n}\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\ncurrentCategory=Category.all[i];\nif (input.block != null) {\ninput.block=getSelectedBlock(currentCategory);\n}\nblockSelectEnd=false;\nblockSelectSeq=0;\nblockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\nblockSelectSeq=i + 1;\n}\n else {\ni+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\nblockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 305,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2773,
        "startLineNumber" : 124,
        "startColumnNumber" : 12,
        "endLineNumber" : 174,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (Core.input.keyTap(blockSelect[i])) {\n  if (i > 9) {\n    Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n    Block currentBlock=getSelectedBlock(currentCategory);\n    for (int j=0; j < blocks.size; j++) {\n      if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->          yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->        yield j=(j + 1) % blocks.size;\ncase 12 ->{\n        j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n        j-=(j < blocks.size ? 0 : 4);\n      }\ncase 13 ->    yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n}\ninput.block=blocks.get(j);\nselectedBlocks.put(currentCategory,input.block);\nbreak;\n}\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\ncurrentCategory=Category.all[i];\nif (input.block != null) {\ninput.block=getSelectedBlock(currentCategory);\n}\nblockSelectEnd=false;\nblockSelectSeq=0;\nblockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\nblockSelectSeq=i + 1;\n}\n else {\ni+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\nblockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 314,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2797,
        "startLineNumber" : 123,
        "startColumnNumber" : 51,
        "endLineNumber" : 175,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (Core.input.keyTap(blockSelect[i])) {\n    if (i > 9) {\n      Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n      Block currentBlock=getSelectedBlock(currentCategory);\n      for (int j=0; j < blocks.size; j++) {\n        if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->            yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->          yield j=(j + 1) % blocks.size;\ncase 12 ->{\n          j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n          j-=(j < blocks.size ? 0 : 4);\n        }\ncase 13 ->      yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n  }\n  input.block=blocks.get(j);\n  selectedBlocks.put(currentCategory,input.block);\n  break;\n}\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\ncurrentCategory=Category.all[i];\nif (input.block != null) {\n  input.block=getSelectedBlock(currentCategory);\n}\nblockSelectEnd=false;\nblockSelectSeq=0;\nblockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\nblockSelectSeq=i + 1;\n}\n else {\ni+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\nblockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 315,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2840,
        "startLineNumber" : 123,
        "startColumnNumber" : 8,
        "endLineNumber" : 175,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < blockSelect.length; i++) {\n  if (Core.input.keyTap(blockSelect[i])) {\n    if (i > 9) {\n      Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n      Block currentBlock=getSelectedBlock(currentCategory);\n      for (int j=0; j < blocks.size; j++) {\n        if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->            yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->          yield j=(j + 1) % blocks.size;\ncase 12 ->{\n          j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n          j-=(j < blocks.size ? 0 : 4);\n        }\ncase 13 ->      yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n  }\n  input.block=blocks.get(j);\n  selectedBlocks.put(currentCategory,input.block);\n  break;\n}\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\ncurrentCategory=Category.all[i];\nif (input.block != null) {\n  input.block=getSelectedBlock(currentCategory);\n}\nblockSelectEnd=false;\nblockSelectSeq=0;\nblockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\nblockSelectSeq=i + 1;\n}\n else {\ni+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\nblockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 328,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4569,
        "startLineNumber" : 97,
        "startColumnNumber" : 42,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  scrollPositions.put(currentCategory,blockPane.getScrollY());\n  if (Core.input.keyTap(Binding.pick) && player.isBuilder()) {\n    Building tile=world.buildWorld(Core.input.mouseWorld().x,Core.input.mouseWorld().y);\n    Block tryRecipe=tile == null ? null : tile instanceof     ConstructBuild c ? c.cblock : tile.block;\n    Object tryConfig=tile == null ? null : tile.config();\n    for (    BuildPlan req : player.unit().plans()) {\n      if (!req.breaking && req.block.bounds(req.x,req.y,Tmp.r1).contains(Core.input.mouseWorld())) {\n        tryRecipe=req.block;\n        tryConfig=req.config;\n        break;\n      }\n    }\n    if (tryRecipe != null && tryRecipe.isVisible() && unlocked(tryRecipe)) {\n      input.block=tryRecipe;\n      tryRecipe.lastConfig=tryConfig;\n      currentCategory=input.block.category;\n      return true;\n    }\n  }\n  if (ui.chatfrag.shown() || Core.scene.hasKeyboard())   return false;\n  for (int i=0; i < blockSelect.length; i++) {\n    if (Core.input.keyTap(blockSelect[i])) {\n      if (i > 9) {\n        Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n        Block currentBlock=getSelectedBlock(currentCategory);\n        for (int j=0; j < blocks.size; j++) {\n          if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->              yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->            yield j=(j + 1) % blocks.size;\ncase 12 ->{\n            j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n            j-=(j < blocks.size ? 0 : 4);\n          }\ncase 13 ->        yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n    }\n    input.block=blocks.get(j);\n    selectedBlocks.put(currentCategory,input.block);\n    break;\n  }\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\n  currentCategory=Category.all[i];\n  if (input.block != null) {\n    input.block=getSelectedBlock(currentCategory);\n  }\n  blockSelectEnd=false;\n  blockSelectSeq=0;\n  blockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\n  blockSelectSeq=i + 1;\n}\n else {\n  i+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\n  blockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\nif (Core.input.keyTap(Binding.category_prev)) {\ndo {\ncurrentCategory=currentCategory.prev();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nif (Core.input.keyTap(Binding.category_next)) {\ndo {\ncurrentCategory=currentCategory.next();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nreturn false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 578,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4607,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "boolean gridUpdate(InputHandler input){\n  scrollPositions.put(currentCategory,blockPane.getScrollY());\n  if (Core.input.keyTap(Binding.pick) && player.isBuilder()) {\n    Building tile=world.buildWorld(Core.input.mouseWorld().x,Core.input.mouseWorld().y);\n    Block tryRecipe=tile == null ? null : tile instanceof     ConstructBuild c ? c.cblock : tile.block;\n    Object tryConfig=tile == null ? null : tile.config();\n    for (    BuildPlan req : player.unit().plans()) {\n      if (!req.breaking && req.block.bounds(req.x,req.y,Tmp.r1).contains(Core.input.mouseWorld())) {\n        tryRecipe=req.block;\n        tryConfig=req.config;\n        break;\n      }\n    }\n    if (tryRecipe != null && tryRecipe.isVisible() && unlocked(tryRecipe)) {\n      input.block=tryRecipe;\n      tryRecipe.lastConfig=tryConfig;\n      currentCategory=input.block.category;\n      return true;\n    }\n  }\n  if (ui.chatfrag.shown() || Core.scene.hasKeyboard())   return false;\n  for (int i=0; i < blockSelect.length; i++) {\n    if (Core.input.keyTap(blockSelect[i])) {\n      if (i > 9) {\n        Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n        Block currentBlock=getSelectedBlock(currentCategory);\n        for (int j=0; j < blocks.size; j++) {\n          if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->              yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->            yield j=(j + 1) % blocks.size;\ncase 12 ->{\n            j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n            j-=(j < blocks.size ? 0 : 4);\n          }\ncase 13 ->        yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n    }\n    input.block=blocks.get(j);\n    selectedBlocks.put(currentCategory,input.block);\n    break;\n  }\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\n  currentCategory=Category.all[i];\n  if (input.block != null) {\n    input.block=getSelectedBlock(currentCategory);\n  }\n  blockSelectEnd=false;\n  blockSelectSeq=0;\n  blockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\n  blockSelectSeq=i + 1;\n}\n else {\n  i+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\n  blockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\nif (Core.input.keyTap(Binding.category_prev)) {\ndo {\ncurrentCategory=currentCategory.prev();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nif (Core.input.keyTap(Binding.category_next)) {\ndo {\ncurrentCategory=currentCategory.next();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nreturn false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 585,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 152,
        "startColumnNumber" : 27,
        "endLineNumber" : 152,
        "endColumnNumber" : 46
      },
      "nodeContext" : "input.block != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "mindustry.input.InputHandler"
  }, {
    "nodeContext" : "input",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 153,
      "startColumnNumber" : 28,
      "endLineNumber" : 153,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 153,
        "startColumnNumber" : 28,
        "endLineNumber" : 153,
        "endColumnNumber" : 39
      },
      "nodeContext" : "input.block",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 153,
        "startColumnNumber" : 28,
        "endLineNumber" : 153,
        "endColumnNumber" : 75
      },
      "nodeContext" : "input.block=getSelectedBlock(currentCategory)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 153,
        "startColumnNumber" : 28,
        "endLineNumber" : 153,
        "endColumnNumber" : 76
      },
      "nodeContext" : "input.block=getSelectedBlock(currentCategory);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 152,
        "startColumnNumber" : 47,
        "endLineNumber" : 154,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  input.block=getSelectedBlock(currentCategory);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 152,
        "startColumnNumber" : 24,
        "endLineNumber" : 154,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (input.block != null) {\n  input.block=getSelectedBlock(currentCategory);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 388,
        "startLineNumber" : 150,
        "startColumnNumber" : 73,
        "endLineNumber" : 158,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  currentCategory=Category.all[i];\n  if (input.block != null) {\n    input.block=getSelectedBlock(currentCategory);\n  }\n  blockSelectEnd=false;\n  blockSelectSeq=0;\n  blockSelectSeqMillis=Time.millis();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 441,
        "startLineNumber" : 150,
        "startColumnNumber" : 20,
        "endLineNumber" : 158,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\n  currentCategory=Category.all[i];\n  if (input.block != null) {\n    input.block=getSelectedBlock(currentCategory);\n  }\n  blockSelectEnd=false;\n  blockSelectSeq=0;\n  blockSelectSeqMillis=Time.millis();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 573,
        "startLineNumber" : 148,
        "startColumnNumber" : 92,
        "endLineNumber" : 159,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\n    currentCategory=Category.all[i];\n    if (input.block != null) {\n      input.block=getSelectedBlock(currentCategory);\n    }\n    blockSelectEnd=false;\n    blockSelectSeq=0;\n    blockSelectSeqMillis=Time.millis();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1418,
        "startLineNumber" : 148,
        "startColumnNumber" : 22,
        "endLineNumber" : 172,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\n  if (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\n    currentCategory=Category.all[i];\n    if (input.block != null) {\n      input.block=getSelectedBlock(currentCategory);\n    }\n    blockSelectEnd=false;\n    blockSelectSeq=0;\n    blockSelectSeqMillis=Time.millis();\n  }\n}\n else {\n  if (blockSelectSeq == 0) {\n    blockSelectSeq=i + 1;\n  }\n else {\n    i+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\n    blockSelectEnd=true;\n  }\n  Seq<Block> blocks=getByCategory(currentCategory);\n  if (i >= blocks.size || !unlocked(blocks.get(i)))   return true;\n  input.block=(i < blocks.size) ? blocks.get(i) : null;\n  selectedBlocks.put(currentCategory,input.block);\n  blockSelectSeqMillis=Time.millis();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2675,
        "startLineNumber" : 125,
        "startColumnNumber" : 16,
        "endLineNumber" : 172,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (i > 9) {\n  Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n  Block currentBlock=getSelectedBlock(currentCategory);\n  for (int j=0; j < blocks.size; j++) {\n    if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->        yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->      yield j=(j + 1) % blocks.size;\ncase 12 ->{\n      j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n      j-=(j < blocks.size ? 0 : 4);\n    }\ncase 13 ->  yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n}\ninput.block=blocks.get(j);\nselectedBlocks.put(currentCategory,input.block);\nbreak;\n}\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\ncurrentCategory=Category.all[i];\nif (input.block != null) {\ninput.block=getSelectedBlock(currentCategory);\n}\nblockSelectEnd=false;\nblockSelectSeq=0;\nblockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\nblockSelectSeq=i + 1;\n}\n else {\ni+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\nblockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 302,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2736,
        "startLineNumber" : 124,
        "startColumnNumber" : 49,
        "endLineNumber" : 174,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (i > 9) {\n    Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n    Block currentBlock=getSelectedBlock(currentCategory);\n    for (int j=0; j < blocks.size; j++) {\n      if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->          yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->        yield j=(j + 1) % blocks.size;\ncase 12 ->{\n        j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n        j-=(j < blocks.size ? 0 : 4);\n      }\ncase 13 ->    yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n}\ninput.block=blocks.get(j);\nselectedBlocks.put(currentCategory,input.block);\nbreak;\n}\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\ncurrentCategory=Category.all[i];\nif (input.block != null) {\ninput.block=getSelectedBlock(currentCategory);\n}\nblockSelectEnd=false;\nblockSelectSeq=0;\nblockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\nblockSelectSeq=i + 1;\n}\n else {\ni+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\nblockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 305,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2773,
        "startLineNumber" : 124,
        "startColumnNumber" : 12,
        "endLineNumber" : 174,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (Core.input.keyTap(blockSelect[i])) {\n  if (i > 9) {\n    Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n    Block currentBlock=getSelectedBlock(currentCategory);\n    for (int j=0; j < blocks.size; j++) {\n      if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->          yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->        yield j=(j + 1) % blocks.size;\ncase 12 ->{\n        j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n        j-=(j < blocks.size ? 0 : 4);\n      }\ncase 13 ->    yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n}\ninput.block=blocks.get(j);\nselectedBlocks.put(currentCategory,input.block);\nbreak;\n}\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\ncurrentCategory=Category.all[i];\nif (input.block != null) {\ninput.block=getSelectedBlock(currentCategory);\n}\nblockSelectEnd=false;\nblockSelectSeq=0;\nblockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\nblockSelectSeq=i + 1;\n}\n else {\ni+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\nblockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 314,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2797,
        "startLineNumber" : 123,
        "startColumnNumber" : 51,
        "endLineNumber" : 175,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (Core.input.keyTap(blockSelect[i])) {\n    if (i > 9) {\n      Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n      Block currentBlock=getSelectedBlock(currentCategory);\n      for (int j=0; j < blocks.size; j++) {\n        if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->            yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->          yield j=(j + 1) % blocks.size;\ncase 12 ->{\n          j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n          j-=(j < blocks.size ? 0 : 4);\n        }\ncase 13 ->      yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n  }\n  input.block=blocks.get(j);\n  selectedBlocks.put(currentCategory,input.block);\n  break;\n}\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\ncurrentCategory=Category.all[i];\nif (input.block != null) {\n  input.block=getSelectedBlock(currentCategory);\n}\nblockSelectEnd=false;\nblockSelectSeq=0;\nblockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\nblockSelectSeq=i + 1;\n}\n else {\ni+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\nblockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 315,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2840,
        "startLineNumber" : 123,
        "startColumnNumber" : 8,
        "endLineNumber" : 175,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < blockSelect.length; i++) {\n  if (Core.input.keyTap(blockSelect[i])) {\n    if (i > 9) {\n      Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n      Block currentBlock=getSelectedBlock(currentCategory);\n      for (int j=0; j < blocks.size; j++) {\n        if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->            yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->          yield j=(j + 1) % blocks.size;\ncase 12 ->{\n          j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n          j-=(j < blocks.size ? 0 : 4);\n        }\ncase 13 ->      yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n  }\n  input.block=blocks.get(j);\n  selectedBlocks.put(currentCategory,input.block);\n  break;\n}\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\ncurrentCategory=Category.all[i];\nif (input.block != null) {\n  input.block=getSelectedBlock(currentCategory);\n}\nblockSelectEnd=false;\nblockSelectSeq=0;\nblockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\nblockSelectSeq=i + 1;\n}\n else {\ni+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\nblockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 328,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4569,
        "startLineNumber" : 97,
        "startColumnNumber" : 42,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  scrollPositions.put(currentCategory,blockPane.getScrollY());\n  if (Core.input.keyTap(Binding.pick) && player.isBuilder()) {\n    Building tile=world.buildWorld(Core.input.mouseWorld().x,Core.input.mouseWorld().y);\n    Block tryRecipe=tile == null ? null : tile instanceof     ConstructBuild c ? c.cblock : tile.block;\n    Object tryConfig=tile == null ? null : tile.config();\n    for (    BuildPlan req : player.unit().plans()) {\n      if (!req.breaking && req.block.bounds(req.x,req.y,Tmp.r1).contains(Core.input.mouseWorld())) {\n        tryRecipe=req.block;\n        tryConfig=req.config;\n        break;\n      }\n    }\n    if (tryRecipe != null && tryRecipe.isVisible() && unlocked(tryRecipe)) {\n      input.block=tryRecipe;\n      tryRecipe.lastConfig=tryConfig;\n      currentCategory=input.block.category;\n      return true;\n    }\n  }\n  if (ui.chatfrag.shown() || Core.scene.hasKeyboard())   return false;\n  for (int i=0; i < blockSelect.length; i++) {\n    if (Core.input.keyTap(blockSelect[i])) {\n      if (i > 9) {\n        Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n        Block currentBlock=getSelectedBlock(currentCategory);\n        for (int j=0; j < blocks.size; j++) {\n          if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->              yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->            yield j=(j + 1) % blocks.size;\ncase 12 ->{\n            j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n            j-=(j < blocks.size ? 0 : 4);\n          }\ncase 13 ->        yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n    }\n    input.block=blocks.get(j);\n    selectedBlocks.put(currentCategory,input.block);\n    break;\n  }\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\n  currentCategory=Category.all[i];\n  if (input.block != null) {\n    input.block=getSelectedBlock(currentCategory);\n  }\n  blockSelectEnd=false;\n  blockSelectSeq=0;\n  blockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\n  blockSelectSeq=i + 1;\n}\n else {\n  i+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\n  blockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\nif (Core.input.keyTap(Binding.category_prev)) {\ndo {\ncurrentCategory=currentCategory.prev();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nif (Core.input.keyTap(Binding.category_next)) {\ndo {\ncurrentCategory=currentCategory.next();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nreturn false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 578,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4607,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "boolean gridUpdate(InputHandler input){\n  scrollPositions.put(currentCategory,blockPane.getScrollY());\n  if (Core.input.keyTap(Binding.pick) && player.isBuilder()) {\n    Building tile=world.buildWorld(Core.input.mouseWorld().x,Core.input.mouseWorld().y);\n    Block tryRecipe=tile == null ? null : tile instanceof     ConstructBuild c ? c.cblock : tile.block;\n    Object tryConfig=tile == null ? null : tile.config();\n    for (    BuildPlan req : player.unit().plans()) {\n      if (!req.breaking && req.block.bounds(req.x,req.y,Tmp.r1).contains(Core.input.mouseWorld())) {\n        tryRecipe=req.block;\n        tryConfig=req.config;\n        break;\n      }\n    }\n    if (tryRecipe != null && tryRecipe.isVisible() && unlocked(tryRecipe)) {\n      input.block=tryRecipe;\n      tryRecipe.lastConfig=tryConfig;\n      currentCategory=input.block.category;\n      return true;\n    }\n  }\n  if (ui.chatfrag.shown() || Core.scene.hasKeyboard())   return false;\n  for (int i=0; i < blockSelect.length; i++) {\n    if (Core.input.keyTap(blockSelect[i])) {\n      if (i > 9) {\n        Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n        Block currentBlock=getSelectedBlock(currentCategory);\n        for (int j=0; j < blocks.size; j++) {\n          if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->              yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->            yield j=(j + 1) % blocks.size;\ncase 12 ->{\n            j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n            j-=(j < blocks.size ? 0 : 4);\n          }\ncase 13 ->        yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n    }\n    input.block=blocks.get(j);\n    selectedBlocks.put(currentCategory,input.block);\n    break;\n  }\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\n  currentCategory=Category.all[i];\n  if (input.block != null) {\n    input.block=getSelectedBlock(currentCategory);\n  }\n  blockSelectEnd=false;\n  blockSelectSeq=0;\n  blockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\n  blockSelectSeq=i + 1;\n}\n else {\n  i+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\n  blockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\nif (Core.input.keyTap(Binding.category_prev)) {\ndo {\ncurrentCategory=currentCategory.prev();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nif (Core.input.keyTap(Binding.category_next)) {\ndo {\ncurrentCategory=currentCategory.next();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nreturn false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 585,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 153,
        "startColumnNumber" : 28,
        "endLineNumber" : 153,
        "endColumnNumber" : 76
      },
      "nodeContext" : "input.block=getSelectedBlock(currentCategory);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "mindustry.input.InputHandler"
  }, {
    "nodeContext" : "input",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 169,
      "startColumnNumber" : 20,
      "endLineNumber" : 169,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 169,
        "startColumnNumber" : 20,
        "endLineNumber" : 169,
        "endColumnNumber" : 31
      },
      "nodeContext" : "input.block",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 169,
        "startColumnNumber" : 20,
        "endLineNumber" : 169,
        "endColumnNumber" : 74
      },
      "nodeContext" : "input.block=(i < blocks.size) ? blocks.get(i) : null",
      "nodeType" : "Assignment",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 169,
        "startColumnNumber" : 20,
        "endLineNumber" : 169,
        "endColumnNumber" : 75
      },
      "nodeContext" : "input.block=(i < blocks.size) ? blocks.get(i) : null;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 771,
        "startLineNumber" : 159,
        "startColumnNumber" : 21,
        "endLineNumber" : 172,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (blockSelectSeq == 0) {\n    blockSelectSeq=i + 1;\n  }\n else {\n    i+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\n    blockSelectEnd=true;\n  }\n  Seq<Block> blocks=getByCategory(currentCategory);\n  if (i >= blocks.size || !unlocked(blocks.get(i)))   return true;\n  input.block=(i < blocks.size) ? blocks.get(i) : null;\n  selectedBlocks.put(currentCategory,input.block);\n  blockSelectSeqMillis=Time.millis();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1418,
        "startLineNumber" : 148,
        "startColumnNumber" : 22,
        "endLineNumber" : 172,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\n  if (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\n    currentCategory=Category.all[i];\n    if (input.block != null) {\n      input.block=getSelectedBlock(currentCategory);\n    }\n    blockSelectEnd=false;\n    blockSelectSeq=0;\n    blockSelectSeqMillis=Time.millis();\n  }\n}\n else {\n  if (blockSelectSeq == 0) {\n    blockSelectSeq=i + 1;\n  }\n else {\n    i+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\n    blockSelectEnd=true;\n  }\n  Seq<Block> blocks=getByCategory(currentCategory);\n  if (i >= blocks.size || !unlocked(blocks.get(i)))   return true;\n  input.block=(i < blocks.size) ? blocks.get(i) : null;\n  selectedBlocks.put(currentCategory,input.block);\n  blockSelectSeqMillis=Time.millis();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2675,
        "startLineNumber" : 125,
        "startColumnNumber" : 16,
        "endLineNumber" : 172,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (i > 9) {\n  Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n  Block currentBlock=getSelectedBlock(currentCategory);\n  for (int j=0; j < blocks.size; j++) {\n    if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->        yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->      yield j=(j + 1) % blocks.size;\ncase 12 ->{\n      j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n      j-=(j < blocks.size ? 0 : 4);\n    }\ncase 13 ->  yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n}\ninput.block=blocks.get(j);\nselectedBlocks.put(currentCategory,input.block);\nbreak;\n}\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\ncurrentCategory=Category.all[i];\nif (input.block != null) {\ninput.block=getSelectedBlock(currentCategory);\n}\nblockSelectEnd=false;\nblockSelectSeq=0;\nblockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\nblockSelectSeq=i + 1;\n}\n else {\ni+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\nblockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 302,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2736,
        "startLineNumber" : 124,
        "startColumnNumber" : 49,
        "endLineNumber" : 174,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (i > 9) {\n    Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n    Block currentBlock=getSelectedBlock(currentCategory);\n    for (int j=0; j < blocks.size; j++) {\n      if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->          yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->        yield j=(j + 1) % blocks.size;\ncase 12 ->{\n        j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n        j-=(j < blocks.size ? 0 : 4);\n      }\ncase 13 ->    yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n}\ninput.block=blocks.get(j);\nselectedBlocks.put(currentCategory,input.block);\nbreak;\n}\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\ncurrentCategory=Category.all[i];\nif (input.block != null) {\ninput.block=getSelectedBlock(currentCategory);\n}\nblockSelectEnd=false;\nblockSelectSeq=0;\nblockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\nblockSelectSeq=i + 1;\n}\n else {\ni+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\nblockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 305,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2773,
        "startLineNumber" : 124,
        "startColumnNumber" : 12,
        "endLineNumber" : 174,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (Core.input.keyTap(blockSelect[i])) {\n  if (i > 9) {\n    Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n    Block currentBlock=getSelectedBlock(currentCategory);\n    for (int j=0; j < blocks.size; j++) {\n      if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->          yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->        yield j=(j + 1) % blocks.size;\ncase 12 ->{\n        j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n        j-=(j < blocks.size ? 0 : 4);\n      }\ncase 13 ->    yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n}\ninput.block=blocks.get(j);\nselectedBlocks.put(currentCategory,input.block);\nbreak;\n}\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\ncurrentCategory=Category.all[i];\nif (input.block != null) {\ninput.block=getSelectedBlock(currentCategory);\n}\nblockSelectEnd=false;\nblockSelectSeq=0;\nblockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\nblockSelectSeq=i + 1;\n}\n else {\ni+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\nblockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 314,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2797,
        "startLineNumber" : 123,
        "startColumnNumber" : 51,
        "endLineNumber" : 175,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (Core.input.keyTap(blockSelect[i])) {\n    if (i > 9) {\n      Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n      Block currentBlock=getSelectedBlock(currentCategory);\n      for (int j=0; j < blocks.size; j++) {\n        if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->            yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->          yield j=(j + 1) % blocks.size;\ncase 12 ->{\n          j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n          j-=(j < blocks.size ? 0 : 4);\n        }\ncase 13 ->      yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n  }\n  input.block=blocks.get(j);\n  selectedBlocks.put(currentCategory,input.block);\n  break;\n}\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\ncurrentCategory=Category.all[i];\nif (input.block != null) {\n  input.block=getSelectedBlock(currentCategory);\n}\nblockSelectEnd=false;\nblockSelectSeq=0;\nblockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\nblockSelectSeq=i + 1;\n}\n else {\ni+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\nblockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 315,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2840,
        "startLineNumber" : 123,
        "startColumnNumber" : 8,
        "endLineNumber" : 175,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < blockSelect.length; i++) {\n  if (Core.input.keyTap(blockSelect[i])) {\n    if (i > 9) {\n      Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n      Block currentBlock=getSelectedBlock(currentCategory);\n      for (int j=0; j < blocks.size; j++) {\n        if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->            yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->          yield j=(j + 1) % blocks.size;\ncase 12 ->{\n          j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n          j-=(j < blocks.size ? 0 : 4);\n        }\ncase 13 ->      yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n  }\n  input.block=blocks.get(j);\n  selectedBlocks.put(currentCategory,input.block);\n  break;\n}\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\ncurrentCategory=Category.all[i];\nif (input.block != null) {\n  input.block=getSelectedBlock(currentCategory);\n}\nblockSelectEnd=false;\nblockSelectSeq=0;\nblockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\nblockSelectSeq=i + 1;\n}\n else {\ni+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\nblockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 328,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4569,
        "startLineNumber" : 97,
        "startColumnNumber" : 42,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  scrollPositions.put(currentCategory,blockPane.getScrollY());\n  if (Core.input.keyTap(Binding.pick) && player.isBuilder()) {\n    Building tile=world.buildWorld(Core.input.mouseWorld().x,Core.input.mouseWorld().y);\n    Block tryRecipe=tile == null ? null : tile instanceof     ConstructBuild c ? c.cblock : tile.block;\n    Object tryConfig=tile == null ? null : tile.config();\n    for (    BuildPlan req : player.unit().plans()) {\n      if (!req.breaking && req.block.bounds(req.x,req.y,Tmp.r1).contains(Core.input.mouseWorld())) {\n        tryRecipe=req.block;\n        tryConfig=req.config;\n        break;\n      }\n    }\n    if (tryRecipe != null && tryRecipe.isVisible() && unlocked(tryRecipe)) {\n      input.block=tryRecipe;\n      tryRecipe.lastConfig=tryConfig;\n      currentCategory=input.block.category;\n      return true;\n    }\n  }\n  if (ui.chatfrag.shown() || Core.scene.hasKeyboard())   return false;\n  for (int i=0; i < blockSelect.length; i++) {\n    if (Core.input.keyTap(blockSelect[i])) {\n      if (i > 9) {\n        Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n        Block currentBlock=getSelectedBlock(currentCategory);\n        for (int j=0; j < blocks.size; j++) {\n          if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->              yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->            yield j=(j + 1) % blocks.size;\ncase 12 ->{\n            j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n            j-=(j < blocks.size ? 0 : 4);\n          }\ncase 13 ->        yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n    }\n    input.block=blocks.get(j);\n    selectedBlocks.put(currentCategory,input.block);\n    break;\n  }\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\n  currentCategory=Category.all[i];\n  if (input.block != null) {\n    input.block=getSelectedBlock(currentCategory);\n  }\n  blockSelectEnd=false;\n  blockSelectSeq=0;\n  blockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\n  blockSelectSeq=i + 1;\n}\n else {\n  i+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\n  blockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\nif (Core.input.keyTap(Binding.category_prev)) {\ndo {\ncurrentCategory=currentCategory.prev();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nif (Core.input.keyTap(Binding.category_next)) {\ndo {\ncurrentCategory=currentCategory.next();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nreturn false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 578,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4607,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "boolean gridUpdate(InputHandler input){\n  scrollPositions.put(currentCategory,blockPane.getScrollY());\n  if (Core.input.keyTap(Binding.pick) && player.isBuilder()) {\n    Building tile=world.buildWorld(Core.input.mouseWorld().x,Core.input.mouseWorld().y);\n    Block tryRecipe=tile == null ? null : tile instanceof     ConstructBuild c ? c.cblock : tile.block;\n    Object tryConfig=tile == null ? null : tile.config();\n    for (    BuildPlan req : player.unit().plans()) {\n      if (!req.breaking && req.block.bounds(req.x,req.y,Tmp.r1).contains(Core.input.mouseWorld())) {\n        tryRecipe=req.block;\n        tryConfig=req.config;\n        break;\n      }\n    }\n    if (tryRecipe != null && tryRecipe.isVisible() && unlocked(tryRecipe)) {\n      input.block=tryRecipe;\n      tryRecipe.lastConfig=tryConfig;\n      currentCategory=input.block.category;\n      return true;\n    }\n  }\n  if (ui.chatfrag.shown() || Core.scene.hasKeyboard())   return false;\n  for (int i=0; i < blockSelect.length; i++) {\n    if (Core.input.keyTap(blockSelect[i])) {\n      if (i > 9) {\n        Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n        Block currentBlock=getSelectedBlock(currentCategory);\n        for (int j=0; j < blocks.size; j++) {\n          if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->              yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->            yield j=(j + 1) % blocks.size;\ncase 12 ->{\n            j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n            j-=(j < blocks.size ? 0 : 4);\n          }\ncase 13 ->        yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n    }\n    input.block=blocks.get(j);\n    selectedBlocks.put(currentCategory,input.block);\n    break;\n  }\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\n  currentCategory=Category.all[i];\n  if (input.block != null) {\n    input.block=getSelectedBlock(currentCategory);\n  }\n  blockSelectEnd=false;\n  blockSelectSeq=0;\n  blockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\n  blockSelectSeq=i + 1;\n}\n else {\n  i+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\n  blockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\nif (Core.input.keyTap(Binding.category_prev)) {\ndo {\ncurrentCategory=currentCategory.prev();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nif (Core.input.keyTap(Binding.category_next)) {\ndo {\ncurrentCategory=currentCategory.next();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nreturn false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 585,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 169,
        "startColumnNumber" : 20,
        "endLineNumber" : 169,
        "endColumnNumber" : 75
      },
      "nodeContext" : "input.block=(i < blocks.size) ? blocks.get(i) : null;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "mindustry.input.InputHandler"
  }, {
    "nodeContext" : "input",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 170,
      "startColumnNumber" : 56,
      "endLineNumber" : 170,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 170,
        "startColumnNumber" : 56,
        "endLineNumber" : 170,
        "endColumnNumber" : 67
      },
      "nodeContext" : "input.block",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 170,
        "startColumnNumber" : 20,
        "endLineNumber" : 170,
        "endColumnNumber" : 68
      },
      "nodeContext" : "selectedBlocks.put(currentCategory,input.block)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 170,
        "startColumnNumber" : 20,
        "endLineNumber" : 170,
        "endColumnNumber" : 69
      },
      "nodeContext" : "selectedBlocks.put(currentCategory,input.block);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 771,
        "startLineNumber" : 159,
        "startColumnNumber" : 21,
        "endLineNumber" : 172,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (blockSelectSeq == 0) {\n    blockSelectSeq=i + 1;\n  }\n else {\n    i+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\n    blockSelectEnd=true;\n  }\n  Seq<Block> blocks=getByCategory(currentCategory);\n  if (i >= blocks.size || !unlocked(blocks.get(i)))   return true;\n  input.block=(i < blocks.size) ? blocks.get(i) : null;\n  selectedBlocks.put(currentCategory,input.block);\n  blockSelectSeqMillis=Time.millis();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1418,
        "startLineNumber" : 148,
        "startColumnNumber" : 22,
        "endLineNumber" : 172,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\n  if (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\n    currentCategory=Category.all[i];\n    if (input.block != null) {\n      input.block=getSelectedBlock(currentCategory);\n    }\n    blockSelectEnd=false;\n    blockSelectSeq=0;\n    blockSelectSeqMillis=Time.millis();\n  }\n}\n else {\n  if (blockSelectSeq == 0) {\n    blockSelectSeq=i + 1;\n  }\n else {\n    i+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\n    blockSelectEnd=true;\n  }\n  Seq<Block> blocks=getByCategory(currentCategory);\n  if (i >= blocks.size || !unlocked(blocks.get(i)))   return true;\n  input.block=(i < blocks.size) ? blocks.get(i) : null;\n  selectedBlocks.put(currentCategory,input.block);\n  blockSelectSeqMillis=Time.millis();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2675,
        "startLineNumber" : 125,
        "startColumnNumber" : 16,
        "endLineNumber" : 172,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (i > 9) {\n  Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n  Block currentBlock=getSelectedBlock(currentCategory);\n  for (int j=0; j < blocks.size; j++) {\n    if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->        yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->      yield j=(j + 1) % blocks.size;\ncase 12 ->{\n      j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n      j-=(j < blocks.size ? 0 : 4);\n    }\ncase 13 ->  yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n}\ninput.block=blocks.get(j);\nselectedBlocks.put(currentCategory,input.block);\nbreak;\n}\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\ncurrentCategory=Category.all[i];\nif (input.block != null) {\ninput.block=getSelectedBlock(currentCategory);\n}\nblockSelectEnd=false;\nblockSelectSeq=0;\nblockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\nblockSelectSeq=i + 1;\n}\n else {\ni+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\nblockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 302,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2736,
        "startLineNumber" : 124,
        "startColumnNumber" : 49,
        "endLineNumber" : 174,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (i > 9) {\n    Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n    Block currentBlock=getSelectedBlock(currentCategory);\n    for (int j=0; j < blocks.size; j++) {\n      if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->          yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->        yield j=(j + 1) % blocks.size;\ncase 12 ->{\n        j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n        j-=(j < blocks.size ? 0 : 4);\n      }\ncase 13 ->    yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n}\ninput.block=blocks.get(j);\nselectedBlocks.put(currentCategory,input.block);\nbreak;\n}\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\ncurrentCategory=Category.all[i];\nif (input.block != null) {\ninput.block=getSelectedBlock(currentCategory);\n}\nblockSelectEnd=false;\nblockSelectSeq=0;\nblockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\nblockSelectSeq=i + 1;\n}\n else {\ni+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\nblockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 305,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2773,
        "startLineNumber" : 124,
        "startColumnNumber" : 12,
        "endLineNumber" : 174,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (Core.input.keyTap(blockSelect[i])) {\n  if (i > 9) {\n    Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n    Block currentBlock=getSelectedBlock(currentCategory);\n    for (int j=0; j < blocks.size; j++) {\n      if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->          yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->        yield j=(j + 1) % blocks.size;\ncase 12 ->{\n        j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n        j-=(j < blocks.size ? 0 : 4);\n      }\ncase 13 ->    yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n}\ninput.block=blocks.get(j);\nselectedBlocks.put(currentCategory,input.block);\nbreak;\n}\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\ncurrentCategory=Category.all[i];\nif (input.block != null) {\ninput.block=getSelectedBlock(currentCategory);\n}\nblockSelectEnd=false;\nblockSelectSeq=0;\nblockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\nblockSelectSeq=i + 1;\n}\n else {\ni+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\nblockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 314,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2797,
        "startLineNumber" : 123,
        "startColumnNumber" : 51,
        "endLineNumber" : 175,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (Core.input.keyTap(blockSelect[i])) {\n    if (i > 9) {\n      Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n      Block currentBlock=getSelectedBlock(currentCategory);\n      for (int j=0; j < blocks.size; j++) {\n        if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->            yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->          yield j=(j + 1) % blocks.size;\ncase 12 ->{\n          j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n          j-=(j < blocks.size ? 0 : 4);\n        }\ncase 13 ->      yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n  }\n  input.block=blocks.get(j);\n  selectedBlocks.put(currentCategory,input.block);\n  break;\n}\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\ncurrentCategory=Category.all[i];\nif (input.block != null) {\n  input.block=getSelectedBlock(currentCategory);\n}\nblockSelectEnd=false;\nblockSelectSeq=0;\nblockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\nblockSelectSeq=i + 1;\n}\n else {\ni+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\nblockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 315,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2840,
        "startLineNumber" : 123,
        "startColumnNumber" : 8,
        "endLineNumber" : 175,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < blockSelect.length; i++) {\n  if (Core.input.keyTap(blockSelect[i])) {\n    if (i > 9) {\n      Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n      Block currentBlock=getSelectedBlock(currentCategory);\n      for (int j=0; j < blocks.size; j++) {\n        if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->            yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->          yield j=(j + 1) % blocks.size;\ncase 12 ->{\n          j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n          j-=(j < blocks.size ? 0 : 4);\n        }\ncase 13 ->      yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n  }\n  input.block=blocks.get(j);\n  selectedBlocks.put(currentCategory,input.block);\n  break;\n}\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\ncurrentCategory=Category.all[i];\nif (input.block != null) {\n  input.block=getSelectedBlock(currentCategory);\n}\nblockSelectEnd=false;\nblockSelectSeq=0;\nblockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\nblockSelectSeq=i + 1;\n}\n else {\ni+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\nblockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 328,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4569,
        "startLineNumber" : 97,
        "startColumnNumber" : 42,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  scrollPositions.put(currentCategory,blockPane.getScrollY());\n  if (Core.input.keyTap(Binding.pick) && player.isBuilder()) {\n    Building tile=world.buildWorld(Core.input.mouseWorld().x,Core.input.mouseWorld().y);\n    Block tryRecipe=tile == null ? null : tile instanceof     ConstructBuild c ? c.cblock : tile.block;\n    Object tryConfig=tile == null ? null : tile.config();\n    for (    BuildPlan req : player.unit().plans()) {\n      if (!req.breaking && req.block.bounds(req.x,req.y,Tmp.r1).contains(Core.input.mouseWorld())) {\n        tryRecipe=req.block;\n        tryConfig=req.config;\n        break;\n      }\n    }\n    if (tryRecipe != null && tryRecipe.isVisible() && unlocked(tryRecipe)) {\n      input.block=tryRecipe;\n      tryRecipe.lastConfig=tryConfig;\n      currentCategory=input.block.category;\n      return true;\n    }\n  }\n  if (ui.chatfrag.shown() || Core.scene.hasKeyboard())   return false;\n  for (int i=0; i < blockSelect.length; i++) {\n    if (Core.input.keyTap(blockSelect[i])) {\n      if (i > 9) {\n        Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n        Block currentBlock=getSelectedBlock(currentCategory);\n        for (int j=0; j < blocks.size; j++) {\n          if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->              yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->            yield j=(j + 1) % blocks.size;\ncase 12 ->{\n            j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n            j-=(j < blocks.size ? 0 : 4);\n          }\ncase 13 ->        yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n    }\n    input.block=blocks.get(j);\n    selectedBlocks.put(currentCategory,input.block);\n    break;\n  }\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\n  currentCategory=Category.all[i];\n  if (input.block != null) {\n    input.block=getSelectedBlock(currentCategory);\n  }\n  blockSelectEnd=false;\n  blockSelectSeq=0;\n  blockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\n  blockSelectSeq=i + 1;\n}\n else {\n  i+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\n  blockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\nif (Core.input.keyTap(Binding.category_prev)) {\ndo {\ncurrentCategory=currentCategory.prev();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nif (Core.input.keyTap(Binding.category_next)) {\ndo {\ncurrentCategory=currentCategory.next();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nreturn false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 578,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4607,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "boolean gridUpdate(InputHandler input){\n  scrollPositions.put(currentCategory,blockPane.getScrollY());\n  if (Core.input.keyTap(Binding.pick) && player.isBuilder()) {\n    Building tile=world.buildWorld(Core.input.mouseWorld().x,Core.input.mouseWorld().y);\n    Block tryRecipe=tile == null ? null : tile instanceof     ConstructBuild c ? c.cblock : tile.block;\n    Object tryConfig=tile == null ? null : tile.config();\n    for (    BuildPlan req : player.unit().plans()) {\n      if (!req.breaking && req.block.bounds(req.x,req.y,Tmp.r1).contains(Core.input.mouseWorld())) {\n        tryRecipe=req.block;\n        tryConfig=req.config;\n        break;\n      }\n    }\n    if (tryRecipe != null && tryRecipe.isVisible() && unlocked(tryRecipe)) {\n      input.block=tryRecipe;\n      tryRecipe.lastConfig=tryConfig;\n      currentCategory=input.block.category;\n      return true;\n    }\n  }\n  if (ui.chatfrag.shown() || Core.scene.hasKeyboard())   return false;\n  for (int i=0; i < blockSelect.length; i++) {\n    if (Core.input.keyTap(blockSelect[i])) {\n      if (i > 9) {\n        Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n        Block currentBlock=getSelectedBlock(currentCategory);\n        for (int j=0; j < blocks.size; j++) {\n          if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->              yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->            yield j=(j + 1) % blocks.size;\ncase 12 ->{\n            j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n            j-=(j < blocks.size ? 0 : 4);\n          }\ncase 13 ->        yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n    }\n    input.block=blocks.get(j);\n    selectedBlocks.put(currentCategory,input.block);\n    break;\n  }\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\n  currentCategory=Category.all[i];\n  if (input.block != null) {\n    input.block=getSelectedBlock(currentCategory);\n  }\n  blockSelectEnd=false;\n  blockSelectSeq=0;\n  blockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\n  blockSelectSeq=i + 1;\n}\n else {\n  i+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\n  blockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\nif (Core.input.keyTap(Binding.category_prev)) {\ndo {\ncurrentCategory=currentCategory.prev();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nif (Core.input.keyTap(Binding.category_next)) {\ndo {\ncurrentCategory=currentCategory.next();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nreturn false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 585,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 170,
        "startColumnNumber" : 20,
        "endLineNumber" : 170,
        "endColumnNumber" : 69
      },
      "nodeContext" : "selectedBlocks.put(currentCategory,input.block);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "mindustry.input.InputHandler"
  }, {
    "nodeContext" : "input",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 181,
      "startColumnNumber" : 12,
      "endLineNumber" : 181,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 181,
        "startColumnNumber" : 12,
        "endLineNumber" : 181,
        "endColumnNumber" : 23
      },
      "nodeContext" : "input.block",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 181,
        "startColumnNumber" : 12,
        "endLineNumber" : 181,
        "endColumnNumber" : 59
      },
      "nodeContext" : "input.block=getSelectedBlock(currentCategory)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 181,
        "startColumnNumber" : 12,
        "endLineNumber" : 181,
        "endColumnNumber" : 60
      },
      "nodeContext" : "input.block=getSelectedBlock(currentCategory);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 233,
        "startLineNumber" : 177,
        "startColumnNumber" : 52,
        "endLineNumber" : 183,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  do {\n    currentCategory=currentCategory.prev();\n  }\n while (categoryEmpty[currentCategory.ordinal()]);\n  input.block=getSelectedBlock(currentCategory);\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 277,
        "startLineNumber" : 177,
        "startColumnNumber" : 8,
        "endLineNumber" : 183,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Core.input.keyTap(Binding.category_prev)) {\n  do {\n    currentCategory=currentCategory.prev();\n  }\n while (categoryEmpty[currentCategory.ordinal()]);\n  input.block=getSelectedBlock(currentCategory);\n  return true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4569,
        "startLineNumber" : 97,
        "startColumnNumber" : 42,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  scrollPositions.put(currentCategory,blockPane.getScrollY());\n  if (Core.input.keyTap(Binding.pick) && player.isBuilder()) {\n    Building tile=world.buildWorld(Core.input.mouseWorld().x,Core.input.mouseWorld().y);\n    Block tryRecipe=tile == null ? null : tile instanceof     ConstructBuild c ? c.cblock : tile.block;\n    Object tryConfig=tile == null ? null : tile.config();\n    for (    BuildPlan req : player.unit().plans()) {\n      if (!req.breaking && req.block.bounds(req.x,req.y,Tmp.r1).contains(Core.input.mouseWorld())) {\n        tryRecipe=req.block;\n        tryConfig=req.config;\n        break;\n      }\n    }\n    if (tryRecipe != null && tryRecipe.isVisible() && unlocked(tryRecipe)) {\n      input.block=tryRecipe;\n      tryRecipe.lastConfig=tryConfig;\n      currentCategory=input.block.category;\n      return true;\n    }\n  }\n  if (ui.chatfrag.shown() || Core.scene.hasKeyboard())   return false;\n  for (int i=0; i < blockSelect.length; i++) {\n    if (Core.input.keyTap(blockSelect[i])) {\n      if (i > 9) {\n        Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n        Block currentBlock=getSelectedBlock(currentCategory);\n        for (int j=0; j < blocks.size; j++) {\n          if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->              yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->            yield j=(j + 1) % blocks.size;\ncase 12 ->{\n            j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n            j-=(j < blocks.size ? 0 : 4);\n          }\ncase 13 ->        yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n    }\n    input.block=blocks.get(j);\n    selectedBlocks.put(currentCategory,input.block);\n    break;\n  }\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\n  currentCategory=Category.all[i];\n  if (input.block != null) {\n    input.block=getSelectedBlock(currentCategory);\n  }\n  blockSelectEnd=false;\n  blockSelectSeq=0;\n  blockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\n  blockSelectSeq=i + 1;\n}\n else {\n  i+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\n  blockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\nif (Core.input.keyTap(Binding.category_prev)) {\ndo {\ncurrentCategory=currentCategory.prev();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nif (Core.input.keyTap(Binding.category_next)) {\ndo {\ncurrentCategory=currentCategory.next();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nreturn false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 578,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4607,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "boolean gridUpdate(InputHandler input){\n  scrollPositions.put(currentCategory,blockPane.getScrollY());\n  if (Core.input.keyTap(Binding.pick) && player.isBuilder()) {\n    Building tile=world.buildWorld(Core.input.mouseWorld().x,Core.input.mouseWorld().y);\n    Block tryRecipe=tile == null ? null : tile instanceof     ConstructBuild c ? c.cblock : tile.block;\n    Object tryConfig=tile == null ? null : tile.config();\n    for (    BuildPlan req : player.unit().plans()) {\n      if (!req.breaking && req.block.bounds(req.x,req.y,Tmp.r1).contains(Core.input.mouseWorld())) {\n        tryRecipe=req.block;\n        tryConfig=req.config;\n        break;\n      }\n    }\n    if (tryRecipe != null && tryRecipe.isVisible() && unlocked(tryRecipe)) {\n      input.block=tryRecipe;\n      tryRecipe.lastConfig=tryConfig;\n      currentCategory=input.block.category;\n      return true;\n    }\n  }\n  if (ui.chatfrag.shown() || Core.scene.hasKeyboard())   return false;\n  for (int i=0; i < blockSelect.length; i++) {\n    if (Core.input.keyTap(blockSelect[i])) {\n      if (i > 9) {\n        Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n        Block currentBlock=getSelectedBlock(currentCategory);\n        for (int j=0; j < blocks.size; j++) {\n          if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->              yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->            yield j=(j + 1) % blocks.size;\ncase 12 ->{\n            j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n            j-=(j < blocks.size ? 0 : 4);\n          }\ncase 13 ->        yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n    }\n    input.block=blocks.get(j);\n    selectedBlocks.put(currentCategory,input.block);\n    break;\n  }\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\n  currentCategory=Category.all[i];\n  if (input.block != null) {\n    input.block=getSelectedBlock(currentCategory);\n  }\n  blockSelectEnd=false;\n  blockSelectSeq=0;\n  blockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\n  blockSelectSeq=i + 1;\n}\n else {\n  i+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\n  blockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\nif (Core.input.keyTap(Binding.category_prev)) {\ndo {\ncurrentCategory=currentCategory.prev();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nif (Core.input.keyTap(Binding.category_next)) {\ndo {\ncurrentCategory=currentCategory.next();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nreturn false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 585,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 181,
        "startColumnNumber" : 12,
        "endLineNumber" : 181,
        "endColumnNumber" : 60
      },
      "nodeContext" : "input.block=getSelectedBlock(currentCategory);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "mindustry.input.InputHandler"
  }, {
    "nodeContext" : "input",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 189,
      "startColumnNumber" : 12,
      "endLineNumber" : 189,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 189,
        "startColumnNumber" : 12,
        "endLineNumber" : 189,
        "endColumnNumber" : 23
      },
      "nodeContext" : "input.block",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 189,
        "startColumnNumber" : 12,
        "endLineNumber" : 189,
        "endColumnNumber" : 59
      },
      "nodeContext" : "input.block=getSelectedBlock(currentCategory)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 189,
        "startColumnNumber" : 12,
        "endLineNumber" : 189,
        "endColumnNumber" : 60
      },
      "nodeContext" : "input.block=getSelectedBlock(currentCategory);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 233,
        "startLineNumber" : 185,
        "startColumnNumber" : 52,
        "endLineNumber" : 191,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  do {\n    currentCategory=currentCategory.next();\n  }\n while (categoryEmpty[currentCategory.ordinal()]);\n  input.block=getSelectedBlock(currentCategory);\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 277,
        "startLineNumber" : 185,
        "startColumnNumber" : 8,
        "endLineNumber" : 191,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Core.input.keyTap(Binding.category_next)) {\n  do {\n    currentCategory=currentCategory.next();\n  }\n while (categoryEmpty[currentCategory.ordinal()]);\n  input.block=getSelectedBlock(currentCategory);\n  return true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4569,
        "startLineNumber" : 97,
        "startColumnNumber" : 42,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  scrollPositions.put(currentCategory,blockPane.getScrollY());\n  if (Core.input.keyTap(Binding.pick) && player.isBuilder()) {\n    Building tile=world.buildWorld(Core.input.mouseWorld().x,Core.input.mouseWorld().y);\n    Block tryRecipe=tile == null ? null : tile instanceof     ConstructBuild c ? c.cblock : tile.block;\n    Object tryConfig=tile == null ? null : tile.config();\n    for (    BuildPlan req : player.unit().plans()) {\n      if (!req.breaking && req.block.bounds(req.x,req.y,Tmp.r1).contains(Core.input.mouseWorld())) {\n        tryRecipe=req.block;\n        tryConfig=req.config;\n        break;\n      }\n    }\n    if (tryRecipe != null && tryRecipe.isVisible() && unlocked(tryRecipe)) {\n      input.block=tryRecipe;\n      tryRecipe.lastConfig=tryConfig;\n      currentCategory=input.block.category;\n      return true;\n    }\n  }\n  if (ui.chatfrag.shown() || Core.scene.hasKeyboard())   return false;\n  for (int i=0; i < blockSelect.length; i++) {\n    if (Core.input.keyTap(blockSelect[i])) {\n      if (i > 9) {\n        Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n        Block currentBlock=getSelectedBlock(currentCategory);\n        for (int j=0; j < blocks.size; j++) {\n          if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->              yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->            yield j=(j + 1) % blocks.size;\ncase 12 ->{\n            j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n            j-=(j < blocks.size ? 0 : 4);\n          }\ncase 13 ->        yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n    }\n    input.block=blocks.get(j);\n    selectedBlocks.put(currentCategory,input.block);\n    break;\n  }\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\n  currentCategory=Category.all[i];\n  if (input.block != null) {\n    input.block=getSelectedBlock(currentCategory);\n  }\n  blockSelectEnd=false;\n  blockSelectSeq=0;\n  blockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\n  blockSelectSeq=i + 1;\n}\n else {\n  i+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\n  blockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\nif (Core.input.keyTap(Binding.category_prev)) {\ndo {\ncurrentCategory=currentCategory.prev();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nif (Core.input.keyTap(Binding.category_next)) {\ndo {\ncurrentCategory=currentCategory.next();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nreturn false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 578,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4607,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 194,
        "endColumnNumber" : 5
      },
      "nodeContext" : "boolean gridUpdate(InputHandler input){\n  scrollPositions.put(currentCategory,blockPane.getScrollY());\n  if (Core.input.keyTap(Binding.pick) && player.isBuilder()) {\n    Building tile=world.buildWorld(Core.input.mouseWorld().x,Core.input.mouseWorld().y);\n    Block tryRecipe=tile == null ? null : tile instanceof     ConstructBuild c ? c.cblock : tile.block;\n    Object tryConfig=tile == null ? null : tile.config();\n    for (    BuildPlan req : player.unit().plans()) {\n      if (!req.breaking && req.block.bounds(req.x,req.y,Tmp.r1).contains(Core.input.mouseWorld())) {\n        tryRecipe=req.block;\n        tryConfig=req.config;\n        break;\n      }\n    }\n    if (tryRecipe != null && tryRecipe.isVisible() && unlocked(tryRecipe)) {\n      input.block=tryRecipe;\n      tryRecipe.lastConfig=tryConfig;\n      currentCategory=input.block.category;\n      return true;\n    }\n  }\n  if (ui.chatfrag.shown() || Core.scene.hasKeyboard())   return false;\n  for (int i=0; i < blockSelect.length; i++) {\n    if (Core.input.keyTap(blockSelect[i])) {\n      if (i > 9) {\n        Seq<Block> blocks=getUnlockedByCategory(currentCategory);\n        Block currentBlock=getSelectedBlock(currentCategory);\n        for (int j=0; j < blocks.size; j++) {\n          if (blocks.get(j) == currentBlock) {\nswitch (i) {\ncase 10 ->              yield j=(j - 1 + blocks.size) % blocks.size;\ncase 11 ->            yield j=(j + 1) % blocks.size;\ncase 12 ->{\n            j=(j > 3 ? j - 4 : blocks.size - blocks.size % 4 + j);\n            j-=(j < blocks.size ? 0 : 4);\n          }\ncase 13 ->        yield j=(j < blocks.size - 4 ? j + 4 : j % 4);\n    }\n    input.block=blocks.get(j);\n    selectedBlocks.put(currentCategory,input.block);\n    break;\n  }\n}\n}\n else if (blockSelectEnd || Time.timeSinceMillis(blockSelectSeqMillis) > 400) {\nif (!getUnlockedByCategory(Category.all[i]).isEmpty()) {\n  currentCategory=Category.all[i];\n  if (input.block != null) {\n    input.block=getSelectedBlock(currentCategory);\n  }\n  blockSelectEnd=false;\n  blockSelectSeq=0;\n  blockSelectSeqMillis=Time.millis();\n}\n}\n else {\nif (blockSelectSeq == 0) {\n  blockSelectSeq=i + 1;\n}\n else {\n  i+=(blockSelectSeq - (i != 9 ? 0 : 1)) * 10;\n  blockSelectEnd=true;\n}\nSeq<Block> blocks=getByCategory(currentCategory);\nif (i >= blocks.size || !unlocked(blocks.get(i))) return true;\ninput.block=(i < blocks.size) ? blocks.get(i) : null;\nselectedBlocks.put(currentCategory,input.block);\nblockSelectSeqMillis=Time.millis();\n}\nreturn true;\n}\n}\nif (Core.input.keyTap(Binding.category_prev)) {\ndo {\ncurrentCategory=currentCategory.prev();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nif (Core.input.keyTap(Binding.category_next)) {\ndo {\ncurrentCategory=currentCategory.next();\n}\n while (categoryEmpty[currentCategory.ordinal()]);\ninput.block=getSelectedBlock(currentCategory);\nreturn true;\n}\nreturn false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 585,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 189,
        "startColumnNumber" : 12,
        "endLineNumber" : 189,
        "endColumnNumber" : 60
      },
      "nodeContext" : "input.block=getSelectedBlock(currentCategory);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "mindustry.input.InputHandler"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 114,
    "startColumnNumber" : 16,
    "endLineNumber" : 114,
    "endColumnNumber" : 21
  }, {
    "charLength" : 5,
    "startLineNumber" : 116,
    "startColumnNumber" : 34,
    "endLineNumber" : 116,
    "endColumnNumber" : 39
  }, {
    "charLength" : 5,
    "startLineNumber" : 143,
    "startColumnNumber" : 28,
    "endLineNumber" : 143,
    "endColumnNumber" : 33
  }, {
    "charLength" : 5,
    "startLineNumber" : 144,
    "startColumnNumber" : 64,
    "endLineNumber" : 144,
    "endColumnNumber" : 69
  }, {
    "charLength" : 5,
    "startLineNumber" : 152,
    "startColumnNumber" : 27,
    "endLineNumber" : 152,
    "endColumnNumber" : 32
  }, {
    "charLength" : 5,
    "startLineNumber" : 153,
    "startColumnNumber" : 28,
    "endLineNumber" : 153,
    "endColumnNumber" : 33
  }, {
    "charLength" : 5,
    "startLineNumber" : 169,
    "startColumnNumber" : 20,
    "endLineNumber" : 169,
    "endColumnNumber" : 25
  }, {
    "charLength" : 5,
    "startLineNumber" : 170,
    "startColumnNumber" : 56,
    "endLineNumber" : 170,
    "endColumnNumber" : 61
  }, {
    "charLength" : 5,
    "startLineNumber" : 181,
    "startColumnNumber" : 12,
    "endLineNumber" : 181,
    "endColumnNumber" : 17
  }, {
    "charLength" : 5,
    "startLineNumber" : 189,
    "startColumnNumber" : 12,
    "endLineNumber" : 189,
    "endColumnNumber" : 17
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 7
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 13
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 13
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 13
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 13
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 13
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 13
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 13
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 13
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 12
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 12
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 12
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 12
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 14
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 14
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 9
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 9
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 14
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 14
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 10
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 10
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 10
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 10
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 10
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 10
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 10
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 10
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 5
  } ]
}