{
  "id" : 141,
  "expression" : "-3",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/ExitCodeGeneratorsTests.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "-3",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 73,
      "startColumnNumber" : 31,
      "endLineNumber" : 73,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 73,
        "startColumnNumber" : 17,
        "endLineNumber" : 73,
        "endColumnNumber" : 34
      },
      "nodeContext" : "mockGenerator(-3)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 73,
        "startColumnNumber" : 2,
        "endLineNumber" : 73,
        "endColumnNumber" : 35
      },
      "nodeContext" : "generators.add(mockGenerator(-3))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 73,
        "startColumnNumber" : 2,
        "endLineNumber" : 73,
        "endColumnNumber" : 36
      },
      "nodeContext" : "generators.add(mockGenerator(-3));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 229,
        "startLineNumber" : 70,
        "startColumnNumber" : 82,
        "endLineNumber" : 76,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ExitCodeGenerators generators=new ExitCodeGenerators();\n  generators.add(mockGenerator(-1));\n  generators.add(mockGenerator(-3));\n  generators.add(mockGenerator(-2));\n  assertThat(generators.getExitCode()).isEqualTo(-3);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 317,
        "startLineNumber" : 69,
        "startColumnNumber" : 1,
        "endLineNumber" : 76,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void getExitCodeWhenAllNegativeShouldReturnLowestValue() throws Exception {\n  ExitCodeGenerators generators=new ExitCodeGenerators();\n  generators.add(mockGenerator(-1));\n  generators.add(mockGenerator(-3));\n  generators.add(mockGenerator(-2));\n  assertThat(generators.getExitCode()).isEqualTo(-3);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 51,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 73,
        "startColumnNumber" : 2,
        "endLineNumber" : 73,
        "endColumnNumber" : 36
      },
      "nodeContext" : "generators.add(mockGenerator(-3));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "-3",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 75,
      "startColumnNumber" : 49,
      "endLineNumber" : 75,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 75,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertThat(generators.getExitCode()).isEqualTo(-3)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 75,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertThat(generators.getExitCode()).isEqualTo(-3);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 229,
        "startLineNumber" : 70,
        "startColumnNumber" : 82,
        "endLineNumber" : 76,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ExitCodeGenerators generators=new ExitCodeGenerators();\n  generators.add(mockGenerator(-1));\n  generators.add(mockGenerator(-3));\n  generators.add(mockGenerator(-2));\n  assertThat(generators.getExitCode()).isEqualTo(-3);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 317,
        "startLineNumber" : 69,
        "startColumnNumber" : 1,
        "endLineNumber" : 76,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void getExitCodeWhenAllNegativeShouldReturnLowestValue() throws Exception {\n  ExitCodeGenerators generators=new ExitCodeGenerators();\n  generators.add(mockGenerator(-1));\n  generators.add(mockGenerator(-3));\n  generators.add(mockGenerator(-2));\n  assertThat(generators.getExitCode()).isEqualTo(-3);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 51,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 75,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertThat(generators.getExitCode()).isEqualTo(-3);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 73,
    "startColumnNumber" : 31,
    "endLineNumber" : 73,
    "endColumnNumber" : 33
  }, {
    "charLength" : 2,
    "startLineNumber" : 75,
    "startColumnNumber" : 49,
    "endLineNumber" : 75,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}