{
  "id" : 177,
  "expression" : "null",
  "projectName" : "iBotPeaches@Apktool",
  "commitID" : "719a25afd69d2211259a65d4fce197340cbae819",
  "filePath" : "/src/brut/androlib/res/decoder/Res9patchStreamDecoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 45,
      "startColumnNumber" : 54,
      "endLineNumber" : 45,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 45,
        "startColumnNumber" : 16,
        "endLineNumber" : 45,
        "endColumnNumber" : 59
      },
      "nodeContext" : "im2.getGraphics().drawImage(im,1,1,null)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 45,
        "startColumnNumber" : 16,
        "endLineNumber" : 45,
        "endColumnNumber" : 60
      },
      "nodeContext" : "im2.getGraphics().drawImage(im,1,1,null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 44,
        "startColumnNumber" : 19,
        "endLineNumber" : 46,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  im2.getGraphics().drawImage(im,1,1,null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 211,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (im.getType() == BufferedImage.TYPE_4BYTE_ABGR) {\n  im2.getRaster().setRect(1,1,im.getRaster());\n}\n else {\n  im2.getGraphics().drawImage(im,1,1,null);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1102,
        "startLineNumber" : 34,
        "startColumnNumber" : 12,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  byte[] data=IOUtils.toByteArray(in);\n  BufferedImage im=ImageIO.read(new ByteArrayInputStream(data));\n  int w=im.getWidth(), h=im.getHeight();\n  BufferedImage im2=new BufferedImage(w + 2,h + 2,BufferedImage.TYPE_4BYTE_ABGR);\n  if (im.getType() == BufferedImage.TYPE_4BYTE_ABGR) {\n    im2.getRaster().setRect(1,1,im.getRaster());\n  }\n else {\n    im2.getGraphics().drawImage(im,1,1,null);\n  }\n  NinePatch np=getNinePatch(data);\n  drawHLine(im2,h + 1,np.padLeft + 1,w - np.padRight);\n  drawVLine(im2,w + 1,np.padTop + 1,h - np.padBottom);\n  int[] xDivs=np.xDivs;\n  for (int i=0; i < xDivs.length; i+=2) {\n    drawHLine(im2,0,xDivs[i] + 1,xDivs[i + 1]);\n  }\n  int[] yDivs=np.yDivs;\n  for (int i=0; i < yDivs.length; i+=2) {\n    drawVLine(im2,0,yDivs[i] + 1,yDivs[i + 1]);\n  }\n  ImageIO.write(im2,\"png\",out);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 210,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1186,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  byte[] data=IOUtils.toByteArray(in);\n  BufferedImage im=ImageIO.read(new ByteArrayInputStream(data));\n  int w=im.getWidth(), h=im.getHeight();\n  BufferedImage im2=new BufferedImage(w + 2,h + 2,BufferedImage.TYPE_4BYTE_ABGR);\n  if (im.getType() == BufferedImage.TYPE_4BYTE_ABGR) {\n    im2.getRaster().setRect(1,1,im.getRaster());\n  }\n else {\n    im2.getGraphics().drawImage(im,1,1,null);\n  }\n  NinePatch np=getNinePatch(data);\n  drawHLine(im2,h + 1,np.padLeft + 1,w - np.padRight);\n  drawVLine(im2,w + 1,np.padTop + 1,h - np.padBottom);\n  int[] xDivs=np.xDivs;\n  for (int i=0; i < xDivs.length; i+=2) {\n    drawHLine(im2,0,xDivs[i] + 1,xDivs[i + 1]);\n  }\n  int[] yDivs=np.yDivs;\n  for (int i=0; i < yDivs.length; i+=2) {\n    drawVLine(im2,0,yDivs[i] + 1,yDivs[i + 1]);\n  }\n  ImageIO.write(im2,\"png\",out);\n}\n catch (IOException ex) {\n  throw new AndrolibException(ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 222,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1202,
        "startLineNumber" : 33,
        "startColumnNumber" : 37,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    byte[] data=IOUtils.toByteArray(in);\n    BufferedImage im=ImageIO.read(new ByteArrayInputStream(data));\n    int w=im.getWidth(), h=im.getHeight();\n    BufferedImage im2=new BufferedImage(w + 2,h + 2,BufferedImage.TYPE_4BYTE_ABGR);\n    if (im.getType() == BufferedImage.TYPE_4BYTE_ABGR) {\n      im2.getRaster().setRect(1,1,im.getRaster());\n    }\n else {\n      im2.getGraphics().drawImage(im,1,1,null);\n    }\n    NinePatch np=getNinePatch(data);\n    drawHLine(im2,h + 1,np.padLeft + 1,w - np.padRight);\n    drawVLine(im2,w + 1,np.padTop + 1,h - np.padBottom);\n    int[] xDivs=np.xDivs;\n    for (int i=0; i < xDivs.length; i+=2) {\n      drawHLine(im2,0,xDivs[i] + 1,xDivs[i + 1]);\n    }\n    int[] yDivs=np.yDivs;\n    for (int i=0; i < yDivs.length; i+=2) {\n      drawVLine(im2,0,yDivs[i] + 1,yDivs[i + 1]);\n    }\n    ImageIO.write(im2,\"png\",out);\n  }\n catch (  IOException ex) {\n    throw new AndrolibException(ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 223,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1292,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void decode(InputStream in,OutputStream out) throws AndrolibException {\n  try {\n    byte[] data=IOUtils.toByteArray(in);\n    BufferedImage im=ImageIO.read(new ByteArrayInputStream(data));\n    int w=im.getWidth(), h=im.getHeight();\n    BufferedImage im2=new BufferedImage(w + 2,h + 2,BufferedImage.TYPE_4BYTE_ABGR);\n    if (im.getType() == BufferedImage.TYPE_4BYTE_ABGR) {\n      im2.getRaster().setRect(1,1,im.getRaster());\n    }\n else {\n      im2.getGraphics().drawImage(im,1,1,null);\n    }\n    NinePatch np=getNinePatch(data);\n    drawHLine(im2,h + 1,np.padLeft + 1,w - np.padRight);\n    drawVLine(im2,w + 1,np.padTop + 1,h - np.padBottom);\n    int[] xDivs=np.xDivs;\n    for (int i=0; i < xDivs.length; i+=2) {\n      drawHLine(im2,0,xDivs[i] + 1,xDivs[i + 1]);\n    }\n    int[] yDivs=np.yDivs;\n    for (int i=0; i < yDivs.length; i+=2) {\n      drawVLine(im2,0,yDivs[i] + 1,yDivs[i + 1]);\n    }\n    ImageIO.write(im2,\"png\",out);\n  }\n catch (  IOException ex) {\n    throw new AndrolibException(ex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 237,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 45,
        "startColumnNumber" : 16,
        "endLineNumber" : 45,
        "endColumnNumber" : 60
      },
      "nodeContext" : "im2.getGraphics().drawImage(im,1,1,null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "null"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 45,
    "startColumnNumber" : 54,
    "endLineNumber" : 45,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ ]
}