{
  "id" : 46,
  "expression" : "i < SPRITES * 2",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/tests/gdx-tests/src/com/badlogic/gdx/tests/SpriteCacheTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i < SPRITES * 2",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 147,
      "startColumnNumber" : 18,
      "endLineNumber" : 147,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 379,
        "startLineNumber" : 147,
        "startColumnNumber" : 2,
        "endLineNumber" : 157,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < SPRITES * 2; i++) {\n  int x=(int)(Math.random() * (Gdx.graphics.getWidth() - 32));\n  int y=(int)(Math.random() * (Gdx.graphics.getHeight() - 32));\n  if (i >= SPRITES)   sprites3[i]=new Sprite(texture2,32,32);\n else   sprites3[i]=new Sprite(texture,32,32);\n  sprites3[i].setPosition(x,y);\n  sprites3[i].setOrigin(16,16);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 94,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2322,
        "startLineNumber" : 116,
        "startColumnNumber" : 23,
        "endLineNumber" : 185,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  spriteCache=new SpriteCache(1000,true);\n  texture=new Texture(Gdx.files.internal(\"data/badlogicsmall.jpg\"));\n  texture.setFilter(TextureFilter.Linear,TextureFilter.Linear);\n  Pixmap pixmap=new Pixmap(32,32,Format.RGBA8888);\n  pixmap.setColor(1,1,0,0.5f);\n  pixmap.fill();\n  texture2=new Texture(pixmap);\n  pixmap.dispose();\n  sprites=new float[SPRITES * 6];\n  sprites2=new float[SPRITES * 6];\n  Sprite[] sprites3=new Sprite[SPRITES * 2];\n  for (int i=0; i < sprites.length; i+=6) {\n    sprites[i]=(int)(Math.random() * (Gdx.graphics.getWidth() - 32));\n    sprites[i + 1]=(int)(Math.random() * (Gdx.graphics.getHeight() - 32));\n    sprites[i + 2]=0;\n    sprites[i + 3]=0;\n    sprites[i + 4]=32;\n    sprites[i + 5]=32;\n    sprites2[i]=(int)(Math.random() * (Gdx.graphics.getWidth() - 32));\n    sprites2[i + 1]=(int)(Math.random() * (Gdx.graphics.getHeight() - 32));\n    sprites2[i + 2]=0;\n    sprites2[i + 3]=0;\n    sprites2[i + 4]=32;\n    sprites2[i + 5]=32;\n  }\n  for (int i=0; i < SPRITES * 2; i++) {\n    int x=(int)(Math.random() * (Gdx.graphics.getWidth() - 32));\n    int y=(int)(Math.random() * (Gdx.graphics.getHeight() - 32));\n    if (i >= SPRITES)     sprites3[i]=new Sprite(texture2,32,32);\n else     sprites3[i]=new Sprite(texture,32,32);\n    sprites3[i].setPosition(x,y);\n    sprites3[i].setOrigin(16,16);\n  }\n  float scale=1;\n  float angle=15;\n  spriteCache.beginCache();\n  for (int i=0; i < sprites2.length; i+=6)   spriteCache.add(texture2,sprites2[i],sprites2[i + 1],16,16,32,32,scale,scale,angle,0,0,32,32,false,false);\n  for (int i=0; i < sprites.length; i+=6)   spriteCache.add(texture,sprites[i],sprites[i + 1],16,16,32,32,scale,scale,angle,0,0,32,32,false,false);\n  normalCacheID=spriteCache.endCache();\n  angle=-15;\n  spriteCache.beginCache();\n  for (int i=SPRITES; i < SPRITES << 1; i++) {\n    sprites3[i].setRotation(angle);\n    sprites3[i].setScale(scale);\n    spriteCache.add(sprites3[i]);\n  }\n  for (int i=0; i < SPRITES; i++) {\n    sprites3[i].setRotation(angle);\n    sprites3[i].setScale(scale);\n    spriteCache.add(sprites3[i]);\n  }\n  spriteCacheID=spriteCache.endCache();\n  Gdx.input.setInputProcessor(this);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 549,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2356,
        "startLineNumber" : 115,
        "startColumnNumber" : 1,
        "endLineNumber" : 185,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void create(){\n  spriteCache=new SpriteCache(1000,true);\n  texture=new Texture(Gdx.files.internal(\"data/badlogicsmall.jpg\"));\n  texture.setFilter(TextureFilter.Linear,TextureFilter.Linear);\n  Pixmap pixmap=new Pixmap(32,32,Format.RGBA8888);\n  pixmap.setColor(1,1,0,0.5f);\n  pixmap.fill();\n  texture2=new Texture(pixmap);\n  pixmap.dispose();\n  sprites=new float[SPRITES * 6];\n  sprites2=new float[SPRITES * 6];\n  Sprite[] sprites3=new Sprite[SPRITES * 2];\n  for (int i=0; i < sprites.length; i+=6) {\n    sprites[i]=(int)(Math.random() * (Gdx.graphics.getWidth() - 32));\n    sprites[i + 1]=(int)(Math.random() * (Gdx.graphics.getHeight() - 32));\n    sprites[i + 2]=0;\n    sprites[i + 3]=0;\n    sprites[i + 4]=32;\n    sprites[i + 5]=32;\n    sprites2[i]=(int)(Math.random() * (Gdx.graphics.getWidth() - 32));\n    sprites2[i + 1]=(int)(Math.random() * (Gdx.graphics.getHeight() - 32));\n    sprites2[i + 2]=0;\n    sprites2[i + 3]=0;\n    sprites2[i + 4]=32;\n    sprites2[i + 5]=32;\n  }\n  for (int i=0; i < SPRITES * 2; i++) {\n    int x=(int)(Math.random() * (Gdx.graphics.getWidth() - 32));\n    int y=(int)(Math.random() * (Gdx.graphics.getHeight() - 32));\n    if (i >= SPRITES)     sprites3[i]=new Sprite(texture2,32,32);\n else     sprites3[i]=new Sprite(texture,32,32);\n    sprites3[i].setPosition(x,y);\n    sprites3[i].setOrigin(16,16);\n  }\n  float scale=1;\n  float angle=15;\n  spriteCache.beginCache();\n  for (int i=0; i < sprites2.length; i+=6)   spriteCache.add(texture2,sprites2[i],sprites2[i + 1],16,16,32,32,scale,scale,angle,0,0,32,32,false,false);\n  for (int i=0; i < sprites.length; i+=6)   spriteCache.add(texture,sprites[i],sprites[i + 1],16,16,32,32,scale,scale,angle,0,0,32,32,false,false);\n  normalCacheID=spriteCache.endCache();\n  angle=-15;\n  spriteCache.beginCache();\n  for (int i=SPRITES; i < SPRITES << 1; i++) {\n    sprites3[i].setRotation(angle);\n    sprites3[i].setScale(scale);\n    spriteCache.add(sprites3[i]);\n  }\n  for (int i=0; i < SPRITES; i++) {\n    sprites3[i].setRotation(angle);\n    sprites3[i].setScale(scale);\n    spriteCache.add(sprites3[i]);\n  }\n  spriteCacheID=spriteCache.endCache();\n  Gdx.input.setInputProcessor(this);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 555,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 379,
        "startLineNumber" : 147,
        "startColumnNumber" : 2,
        "endLineNumber" : 157,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < SPRITES * 2; i++) {\n  int x=(int)(Math.random() * (Gdx.graphics.getWidth() - 32));\n  int y=(int)(Math.random() * (Gdx.graphics.getHeight() - 32));\n  if (i >= SPRITES)   sprites3[i]=new Sprite(texture2,32,32);\n else   sprites3[i]=new Sprite(texture,32,32);\n  sprites3[i].setPosition(x,y);\n  sprites3[i].setOrigin(16,16);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 94,
      "astHeight" : 12
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 147,
    "startColumnNumber" : 18,
    "endLineNumber" : 147,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}