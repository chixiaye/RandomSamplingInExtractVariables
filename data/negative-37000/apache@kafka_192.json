{
  "id" : 192,
  "expression" : "990",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/tools/src/test/java/org/apache/kafka/tools/TransactionsCommandTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "990",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 165,
      "startColumnNumber" : 56,
      "endLineNumber" : 165,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 165,
        "startColumnNumber" : 40,
        "endLineNumber" : 165,
        "endColumnNumber" : 60
      },
      "nodeContext" : "OptionalLong.of(990)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 164,
        "startColumnNumber" : 16,
        "endLineNumber" : 165,
        "endColumnNumber" : 61
      },
      "nodeContext" : "new ProducerState(12345L,15,1300,1599509565L,OptionalInt.of(20),OptionalLong.of(990))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 15,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 277,
        "startLineNumber" : 163,
        "startColumnNumber" : 39,
        "endLineNumber" : 168,
        "endColumnNumber" : 13
      },
      "nodeContext" : "asList(new ProducerState(12345L,15,1300,1599509565L,OptionalInt.of(20),OptionalLong.of(990)),new ProducerState(98765L,30,2300,1599509599L,OptionalInt.empty(),OptionalLong.empty()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 30,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 305,
        "startLineNumber" : 163,
        "startColumnNumber" : 12,
        "endLineNumber" : 168,
        "endColumnNumber" : 14
      },
      "nodeContext" : "new PartitionProducerState(asList(new ProducerState(12345L,15,1300,1599509565L,OptionalInt.of(20),OptionalLong.of(990)),new ProducerState(98765L,30,2300,1599509599L,OptionalInt.empty(),OptionalLong.empty())))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 33,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 335,
        "startLineNumber" : 162,
        "startColumnNumber" : 61,
        "endLineNumber" : 168,
        "endColumnNumber" : 15
      },
      "nodeContext" : "completedFuture(new PartitionProducerState(asList(new ProducerState(12345L,15,1300,1599509565L,OptionalInt.of(20),OptionalLong.of(990)),new ProducerState(98765L,30,2300,1599509599L,OptionalInt.empty(),OptionalLong.empty()))))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 35,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 352,
        "startLineNumber" : 162,
        "startColumnNumber" : 44,
        "endLineNumber" : 168,
        "endColumnNumber" : 15
      },
      "nodeContext" : "describeFuture=completedFuture(new PartitionProducerState(asList(new ProducerState(12345L,15,1300,1599509565L,OptionalInt.of(20),OptionalLong.of(990)),new ProducerState(98765L,30,2300,1599509599L,OptionalInt.empty(),OptionalLong.empty()))))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 389,
        "startLineNumber" : 162,
        "startColumnNumber" : 8,
        "endLineNumber" : 168,
        "endColumnNumber" : 16
      },
      "nodeContext" : "KafkaFuture<PartitionProducerState> describeFuture=completedFuture(new PartitionProducerState(asList(new ProducerState(12345L,15,1300,1599509565L,OptionalInt.of(20),OptionalLong.of(990)),new ProducerState(98765L,30,2300,1599509599L,OptionalInt.empty(),OptionalLong.empty()))));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 43,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1308,
        "startLineNumber" : 160,
        "startColumnNumber" : 23,
        "endLineNumber" : 188,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DescribeProducersResult describeResult=Mockito.mock(DescribeProducersResult.class);\n  KafkaFuture<PartitionProducerState> describeFuture=completedFuture(new PartitionProducerState(asList(new ProducerState(12345L,15,1300,1599509565L,OptionalInt.of(20),OptionalLong.of(990)),new ProducerState(98765L,30,2300,1599509599L,OptionalInt.empty(),OptionalLong.empty()))));\n  Mockito.when(describeResult.partitionResult(topicPartition)).thenReturn(describeFuture);\n  Mockito.when(admin.describeProducers(singleton(topicPartition),expectedOptions)).thenReturn(describeResult);\n  execute(args);\n  assertNormalExit();\n  List<List<String>> table=readOutputAsTable();\n  assertEquals(3,table.size());\n  List<String> expectedHeaders=asList(TransactionsCommand.DescribeProducersCommand.HEADERS);\n  assertEquals(expectedHeaders,table.get(0));\n  Set<List<String>> expectedRows=Utils.mkSet(asList(\"12345\",\"15\",\"20\",\"1300\",\"1599509565\",\"990\"),asList(\"98765\",\"30\",\"-1\",\"2300\",\"1599509599\",\"None\"));\n  assertEquals(expectedRows,new HashSet<>(table.subList(1,table.size())));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 175,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1478,
        "startLineNumber" : 156,
        "startColumnNumber" : 4,
        "endLineNumber" : 188,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void testDescribeProducers(TopicPartition topicPartition,String[] args,DescribeProducersOptions expectedOptions) throws Exception {\n  DescribeProducersResult describeResult=Mockito.mock(DescribeProducersResult.class);\n  KafkaFuture<PartitionProducerState> describeFuture=completedFuture(new PartitionProducerState(asList(new ProducerState(12345L,15,1300,1599509565L,OptionalInt.of(20),OptionalLong.of(990)),new ProducerState(98765L,30,2300,1599509599L,OptionalInt.empty(),OptionalLong.empty()))));\n  Mockito.when(describeResult.partitionResult(topicPartition)).thenReturn(describeFuture);\n  Mockito.when(admin.describeProducers(singleton(topicPartition),expectedOptions)).thenReturn(describeResult);\n  execute(args);\n  assertNormalExit();\n  List<List<String>> table=readOutputAsTable();\n  assertEquals(3,table.size());\n  List<String> expectedHeaders=asList(TransactionsCommand.DescribeProducersCommand.HEADERS);\n  assertEquals(expectedHeaders,table.get(0));\n  Set<List<String>> expectedRows=Utils.mkSet(asList(\"12345\",\"15\",\"20\",\"1300\",\"1599509565\",\"990\"),asList(\"98765\",\"30\",\"-1\",\"2300\",\"1599509599\",\"None\"));\n  assertEquals(expectedRows,new HashSet<>(table.subList(1,table.size())));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 195,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 165,
        "startColumnNumber" : 40,
        "endLineNumber" : 165,
        "endColumnNumber" : 60
      },
      "nodeContext" : "OptionalLong.of(990)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 165,
    "startColumnNumber" : 56,
    "endLineNumber" : 165,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ ]
}