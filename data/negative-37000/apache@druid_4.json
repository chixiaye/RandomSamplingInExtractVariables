{
  "id" : 4,
  "expression" : "coordinatorUrl",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/integration-tests/src/main/java/org/apache/druid/testing/ConfigFileConfigProvider.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "coordinatorUrl",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 177,
      "startColumnNumber" : 8,
      "endLineNumber" : 177,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 177,
        "startColumnNumber" : 8,
        "endLineNumber" : 177,
        "endColumnNumber" : 30
      },
      "nodeContext" : "coordinatorUrl == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 177,
        "startColumnNumber" : 4,
        "endLineNumber" : 179,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (coordinatorUrl == null) {\n  coordinatorUrl=StringUtils.format(\"http://%s:%s\",coordinatorHost,props.get(\"coordinator_port\"));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7361,
        "startLineNumber" : 84,
        "startColumnNumber" : 2,
        "endLineNumber" : 248,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ObjectMapper jsonMapper=new ObjectMapper();\n  try {\n    props=jsonMapper.readValue(new File(configFile),JacksonUtils.TYPE_REFERENCE_MAP_STRING_STRING);\n  }\n catch (  IOException ex) {\n    throw new RuntimeException(ex);\n  }\n  routerHost=props.get(\"router_host\");\n  routerUrl=props.get(\"router_url\");\n  if (routerUrl == null) {\n    if (null != routerHost) {\n      routerUrl=StringUtils.format(\"http://%s:%s\",routerHost,props.get(\"router_port\"));\n    }\n  }\n  routerTLSUrl=props.get(\"router_tls_url\");\n  if (routerTLSUrl == null) {\n    if (null != routerHost) {\n      routerTLSUrl=StringUtils.format(\"https://%s:%s\",routerHost,props.get(\"router_tls_port\"));\n    }\n  }\n  permissiveRouterUrl=props.get(\"router_permissive_url\");\n  if (permissiveRouterUrl == null) {\n    String permissiveRouterHost=props.get(\"router_permissive_host\");\n    if (null != permissiveRouterHost) {\n      permissiveRouterUrl=StringUtils.format(\"http://%s:%s\",permissiveRouterHost,props.get(\"router_permissive_port\"));\n    }\n  }\n  permissiveRouterTLSUrl=props.get(\"router_permissive_tls_url\");\n  if (permissiveRouterTLSUrl == null) {\n    String permissiveRouterHost=props.get(\"router_permissive_host\");\n    if (null != permissiveRouterHost) {\n      permissiveRouterTLSUrl=StringUtils.format(\"https://%s:%s\",permissiveRouterHost,props.get(\"router_permissive_tls_port\"));\n    }\n  }\n  noClientAuthRouterUrl=props.get(\"router_no_client_auth_url\");\n  if (noClientAuthRouterUrl == null) {\n    String noClientAuthRouterHost=props.get(\"router_no_client_auth_host\");\n    if (null != noClientAuthRouterHost) {\n      noClientAuthRouterUrl=StringUtils.format(\"http://%s:%s\",noClientAuthRouterHost,props.get(\"router_no_client_auth_port\"));\n    }\n  }\n  noClientAuthRouterTLSUrl=props.get(\"router_no_client_auth_tls_url\");\n  if (noClientAuthRouterTLSUrl == null) {\n    String noClientAuthRouterHost=props.get(\"router_no_client_auth_host\");\n    if (null != noClientAuthRouterHost) {\n      noClientAuthRouterTLSUrl=StringUtils.format(\"https://%s:%s\",noClientAuthRouterHost,props.get(\"router_no_client_auth_tls_port\"));\n    }\n  }\n  customCertCheckRouterUrl=props.get(\"router_no_client_auth_url\");\n  if (customCertCheckRouterUrl == null) {\n    String customCertCheckRouterHost=props.get(\"router_no_client_auth_host\");\n    if (null != customCertCheckRouterHost) {\n      customCertCheckRouterUrl=StringUtils.format(\"http://%s:%s\",customCertCheckRouterHost,props.get(\"router_no_client_auth_port\"));\n    }\n  }\n  customCertCheckRouterTLSUrl=props.get(\"router_no_client_auth_tls_url\");\n  if (customCertCheckRouterTLSUrl == null) {\n    String customCertCheckRouterHost=props.get(\"router_no_client_auth_host\");\n    if (null != customCertCheckRouterHost) {\n      customCertCheckRouterTLSUrl=StringUtils.format(\"https://%s:%s\",customCertCheckRouterHost,props.get(\"router_no_client_auth_tls_port\"));\n    }\n  }\n  brokerHost=props.get(\"broker_host\");\n  brokerUrl=props.get(\"broker_url\");\n  if (brokerUrl == null) {\n    brokerUrl=StringUtils.format(\"http://%s:%s\",props.get(\"broker_host\"),props.get(\"broker_port\"));\n  }\n  brokerTLSUrl=props.get(\"broker_tls_url\");\n  if (brokerTLSUrl == null) {\n    if (null != brokerHost) {\n      brokerTLSUrl=StringUtils.format(\"https://%s:%s\",brokerHost,props.get(\"broker_tls_port\"));\n    }\n  }\n  historicalHost=props.get(\"historical_host\");\n  historicalUrl=props.get(\"historical_url\");\n  if (historicalUrl == null) {\n    historicalUrl=StringUtils.format(\"http://%s:%s\",props.get(\"historical_host\"),props.get(\"historical_port\"));\n  }\n  historicalTLSUrl=props.get(\"historical_tls_url\");\n  if (historicalTLSUrl == null) {\n    if (null != historicalHost) {\n      historicalTLSUrl=StringUtils.format(\"https://%s:%s\",historicalHost,props.get(\"historical_tls_port\"));\n    }\n  }\n  coordinatorHost=props.get(\"coordinator_host\");\n  coordinatorUrl=props.get(\"coordinator_url\");\n  if (coordinatorUrl == null) {\n    coordinatorUrl=StringUtils.format(\"http://%s:%s\",coordinatorHost,props.get(\"coordinator_port\"));\n  }\n  coordinatorTLSUrl=props.get(\"coordinator_tls_url\");\n  if (coordinatorTLSUrl == null) {\n    if (null != coordinatorHost) {\n      coordinatorTLSUrl=StringUtils.format(\"https://%s:%s\",coordinatorHost,props.get(\"coordinator_tls_port\"));\n    }\n  }\n  overlordHost=props.get(\"indexer_host\");\n  overlordUrl=props.get(\"indexer_url\");\n  if (overlordUrl == null) {\n    overlordUrl=StringUtils.format(\"http://%s:%s\",overlordHost,props.get(\"indexer_port\"));\n  }\n  overlordTLSUrl=props.get(\"indexer_tls_url\");\n  if (overlordTLSUrl == null) {\n    if (null != overlordHost) {\n      overlordTLSUrl=StringUtils.format(\"https://%s:%s\",overlordHost,props.get(\"indexer_tls_port\"));\n    }\n  }\n  coordinatorTwoHost=props.get(\"coordinator_two_host\");\n  coordinatorTwoUrl=props.get(\"coordinator_two_url\");\n  if (coordinatorTwoUrl == null) {\n    coordinatorTwoUrl=StringUtils.format(\"http://%s:%s\",coordinatorTwoHost,props.get(\"coordinator_two_port\"));\n  }\n  coordinatorTwoTLSUrl=props.get(\"coordinator_two_tls_url\");\n  if (coordinatorTwoTLSUrl == null) {\n    if (null != coordinatorTwoHost) {\n      coordinatorTwoTLSUrl=StringUtils.format(\"https://%s:%s\",coordinatorTwoHost,props.get(\"coordinator_two_tls_port\"));\n    }\n  }\n  overlordTwoHost=props.get(\"overlord_two_host\");\n  overlordTwoUrl=props.get(\"overlord_two_url\");\n  if (overlordTwoUrl == null) {\n    overlordTwoUrl=StringUtils.format(\"http://%s:%s\",overlordTwoHost,props.get(\"overlord_two_port\"));\n  }\n  overlordTwoTLSUrl=props.get(\"overlord_two_tls_url\");\n  if (overlordTwoTLSUrl == null) {\n    if (null != overlordTwoHost) {\n      overlordTwoTLSUrl=StringUtils.format(\"https://%s:%s\",overlordTwoHost,props.get(\"overlord_two_tls_port\"));\n    }\n  }\n  middleManagerHost=props.get(\"middlemanager_host\");\n  zookeeperHosts=props.get(\"zookeeper_hosts\");\n  kafkaHost=props.get(\"kafka_host\") + \":\" + props.get(\"kafka_port\");\n  schemaRegistryHost=props.get(\"schema_registry_host\") + \":\" + props.get(\"schema_registry_port\");\n  username=props.get(\"username\");\n  password=props.get(\"password\");\n  cloudBucket=props.get(\"cloud_bucket\");\n  cloudPath=props.get(\"cloud_path\");\n  cloudRegion=props.get(\"cloud_region\");\n  hadoopGcsCredentialsPath=props.get(\"hadoopGcsCredentialsPath\");\n  azureKey=props.get(\"azureKey\");\n  streamEndpoint=props.get(\"stream_endpoint\");\n  LOG.info(\"router: [%s], [%s]\",routerUrl,routerTLSUrl);\n  LOG.info(\"broker: [%s], [%s]\",brokerUrl,brokerTLSUrl);\n  LOG.info(\"historical: [%s], [%s]\",historicalUrl,historicalTLSUrl);\n  LOG.info(\"coordinator: [%s], [%s]\",coordinatorUrl,coordinatorTLSUrl);\n  LOG.info(\"overlord: [%s], [%s]\",overlordUrl,overlordTLSUrl);\n  LOG.info(\"middle manager: [%s]\",middleManagerHost);\n  LOG.info(\"zookeepers: [%s]\",zookeeperHosts);\n  LOG.info(\"kafka: [%s]\",kafkaHost);\n  LOG.info(\"Username: [%s]\",username);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 849,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7410,
        "startLineNumber" : 83,
        "startColumnNumber" : 2,
        "endLineNumber" : 248,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void loadProperties(String configFile){\n  ObjectMapper jsonMapper=new ObjectMapper();\n  try {\n    props=jsonMapper.readValue(new File(configFile),JacksonUtils.TYPE_REFERENCE_MAP_STRING_STRING);\n  }\n catch (  IOException ex) {\n    throw new RuntimeException(ex);\n  }\n  routerHost=props.get(\"router_host\");\n  routerUrl=props.get(\"router_url\");\n  if (routerUrl == null) {\n    if (null != routerHost) {\n      routerUrl=StringUtils.format(\"http://%s:%s\",routerHost,props.get(\"router_port\"));\n    }\n  }\n  routerTLSUrl=props.get(\"router_tls_url\");\n  if (routerTLSUrl == null) {\n    if (null != routerHost) {\n      routerTLSUrl=StringUtils.format(\"https://%s:%s\",routerHost,props.get(\"router_tls_port\"));\n    }\n  }\n  permissiveRouterUrl=props.get(\"router_permissive_url\");\n  if (permissiveRouterUrl == null) {\n    String permissiveRouterHost=props.get(\"router_permissive_host\");\n    if (null != permissiveRouterHost) {\n      permissiveRouterUrl=StringUtils.format(\"http://%s:%s\",permissiveRouterHost,props.get(\"router_permissive_port\"));\n    }\n  }\n  permissiveRouterTLSUrl=props.get(\"router_permissive_tls_url\");\n  if (permissiveRouterTLSUrl == null) {\n    String permissiveRouterHost=props.get(\"router_permissive_host\");\n    if (null != permissiveRouterHost) {\n      permissiveRouterTLSUrl=StringUtils.format(\"https://%s:%s\",permissiveRouterHost,props.get(\"router_permissive_tls_port\"));\n    }\n  }\n  noClientAuthRouterUrl=props.get(\"router_no_client_auth_url\");\n  if (noClientAuthRouterUrl == null) {\n    String noClientAuthRouterHost=props.get(\"router_no_client_auth_host\");\n    if (null != noClientAuthRouterHost) {\n      noClientAuthRouterUrl=StringUtils.format(\"http://%s:%s\",noClientAuthRouterHost,props.get(\"router_no_client_auth_port\"));\n    }\n  }\n  noClientAuthRouterTLSUrl=props.get(\"router_no_client_auth_tls_url\");\n  if (noClientAuthRouterTLSUrl == null) {\n    String noClientAuthRouterHost=props.get(\"router_no_client_auth_host\");\n    if (null != noClientAuthRouterHost) {\n      noClientAuthRouterTLSUrl=StringUtils.format(\"https://%s:%s\",noClientAuthRouterHost,props.get(\"router_no_client_auth_tls_port\"));\n    }\n  }\n  customCertCheckRouterUrl=props.get(\"router_no_client_auth_url\");\n  if (customCertCheckRouterUrl == null) {\n    String customCertCheckRouterHost=props.get(\"router_no_client_auth_host\");\n    if (null != customCertCheckRouterHost) {\n      customCertCheckRouterUrl=StringUtils.format(\"http://%s:%s\",customCertCheckRouterHost,props.get(\"router_no_client_auth_port\"));\n    }\n  }\n  customCertCheckRouterTLSUrl=props.get(\"router_no_client_auth_tls_url\");\n  if (customCertCheckRouterTLSUrl == null) {\n    String customCertCheckRouterHost=props.get(\"router_no_client_auth_host\");\n    if (null != customCertCheckRouterHost) {\n      customCertCheckRouterTLSUrl=StringUtils.format(\"https://%s:%s\",customCertCheckRouterHost,props.get(\"router_no_client_auth_tls_port\"));\n    }\n  }\n  brokerHost=props.get(\"broker_host\");\n  brokerUrl=props.get(\"broker_url\");\n  if (brokerUrl == null) {\n    brokerUrl=StringUtils.format(\"http://%s:%s\",props.get(\"broker_host\"),props.get(\"broker_port\"));\n  }\n  brokerTLSUrl=props.get(\"broker_tls_url\");\n  if (brokerTLSUrl == null) {\n    if (null != brokerHost) {\n      brokerTLSUrl=StringUtils.format(\"https://%s:%s\",brokerHost,props.get(\"broker_tls_port\"));\n    }\n  }\n  historicalHost=props.get(\"historical_host\");\n  historicalUrl=props.get(\"historical_url\");\n  if (historicalUrl == null) {\n    historicalUrl=StringUtils.format(\"http://%s:%s\",props.get(\"historical_host\"),props.get(\"historical_port\"));\n  }\n  historicalTLSUrl=props.get(\"historical_tls_url\");\n  if (historicalTLSUrl == null) {\n    if (null != historicalHost) {\n      historicalTLSUrl=StringUtils.format(\"https://%s:%s\",historicalHost,props.get(\"historical_tls_port\"));\n    }\n  }\n  coordinatorHost=props.get(\"coordinator_host\");\n  coordinatorUrl=props.get(\"coordinator_url\");\n  if (coordinatorUrl == null) {\n    coordinatorUrl=StringUtils.format(\"http://%s:%s\",coordinatorHost,props.get(\"coordinator_port\"));\n  }\n  coordinatorTLSUrl=props.get(\"coordinator_tls_url\");\n  if (coordinatorTLSUrl == null) {\n    if (null != coordinatorHost) {\n      coordinatorTLSUrl=StringUtils.format(\"https://%s:%s\",coordinatorHost,props.get(\"coordinator_tls_port\"));\n    }\n  }\n  overlordHost=props.get(\"indexer_host\");\n  overlordUrl=props.get(\"indexer_url\");\n  if (overlordUrl == null) {\n    overlordUrl=StringUtils.format(\"http://%s:%s\",overlordHost,props.get(\"indexer_port\"));\n  }\n  overlordTLSUrl=props.get(\"indexer_tls_url\");\n  if (overlordTLSUrl == null) {\n    if (null != overlordHost) {\n      overlordTLSUrl=StringUtils.format(\"https://%s:%s\",overlordHost,props.get(\"indexer_tls_port\"));\n    }\n  }\n  coordinatorTwoHost=props.get(\"coordinator_two_host\");\n  coordinatorTwoUrl=props.get(\"coordinator_two_url\");\n  if (coordinatorTwoUrl == null) {\n    coordinatorTwoUrl=StringUtils.format(\"http://%s:%s\",coordinatorTwoHost,props.get(\"coordinator_two_port\"));\n  }\n  coordinatorTwoTLSUrl=props.get(\"coordinator_two_tls_url\");\n  if (coordinatorTwoTLSUrl == null) {\n    if (null != coordinatorTwoHost) {\n      coordinatorTwoTLSUrl=StringUtils.format(\"https://%s:%s\",coordinatorTwoHost,props.get(\"coordinator_two_tls_port\"));\n    }\n  }\n  overlordTwoHost=props.get(\"overlord_two_host\");\n  overlordTwoUrl=props.get(\"overlord_two_url\");\n  if (overlordTwoUrl == null) {\n    overlordTwoUrl=StringUtils.format(\"http://%s:%s\",overlordTwoHost,props.get(\"overlord_two_port\"));\n  }\n  overlordTwoTLSUrl=props.get(\"overlord_two_tls_url\");\n  if (overlordTwoTLSUrl == null) {\n    if (null != overlordTwoHost) {\n      overlordTwoTLSUrl=StringUtils.format(\"https://%s:%s\",overlordTwoHost,props.get(\"overlord_two_tls_port\"));\n    }\n  }\n  middleManagerHost=props.get(\"middlemanager_host\");\n  zookeeperHosts=props.get(\"zookeeper_hosts\");\n  kafkaHost=props.get(\"kafka_host\") + \":\" + props.get(\"kafka_port\");\n  schemaRegistryHost=props.get(\"schema_registry_host\") + \":\" + props.get(\"schema_registry_port\");\n  username=props.get(\"username\");\n  password=props.get(\"password\");\n  cloudBucket=props.get(\"cloud_bucket\");\n  cloudPath=props.get(\"cloud_path\");\n  cloudRegion=props.get(\"cloud_region\");\n  hadoopGcsCredentialsPath=props.get(\"hadoopGcsCredentialsPath\");\n  azureKey=props.get(\"azureKey\");\n  streamEndpoint=props.get(\"stream_endpoint\");\n  LOG.info(\"router: [%s], [%s]\",routerUrl,routerTLSUrl);\n  LOG.info(\"broker: [%s], [%s]\",brokerUrl,brokerTLSUrl);\n  LOG.info(\"historical: [%s], [%s]\",historicalUrl,historicalTLSUrl);\n  LOG.info(\"coordinator: [%s], [%s]\",coordinatorUrl,coordinatorTLSUrl);\n  LOG.info(\"overlord: [%s], [%s]\",overlordUrl,overlordTLSUrl);\n  LOG.info(\"middle manager: [%s]\",middleManagerHost);\n  LOG.info(\"zookeepers: [%s]\",zookeeperHosts);\n  LOG.info(\"kafka: [%s]\",kafkaHost);\n  LOG.info(\"Username: [%s]\",username);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 857,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 177,
        "startColumnNumber" : 8,
        "endLineNumber" : 177,
        "endColumnNumber" : 30
      },
      "nodeContext" : "coordinatorUrl == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "coordinatorUrl",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 242,
      "startColumnNumber" : 40,
      "endLineNumber" : 242,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 242,
        "startColumnNumber" : 4,
        "endLineNumber" : 242,
        "endColumnNumber" : 74
      },
      "nodeContext" : "LOG.info(\"coordinator: [%s], [%s]\",coordinatorUrl,coordinatorTLSUrl)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 242,
        "startColumnNumber" : 4,
        "endLineNumber" : 242,
        "endColumnNumber" : 75
      },
      "nodeContext" : "LOG.info(\"coordinator: [%s], [%s]\",coordinatorUrl,coordinatorTLSUrl);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7361,
        "startLineNumber" : 84,
        "startColumnNumber" : 2,
        "endLineNumber" : 248,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ObjectMapper jsonMapper=new ObjectMapper();\n  try {\n    props=jsonMapper.readValue(new File(configFile),JacksonUtils.TYPE_REFERENCE_MAP_STRING_STRING);\n  }\n catch (  IOException ex) {\n    throw new RuntimeException(ex);\n  }\n  routerHost=props.get(\"router_host\");\n  routerUrl=props.get(\"router_url\");\n  if (routerUrl == null) {\n    if (null != routerHost) {\n      routerUrl=StringUtils.format(\"http://%s:%s\",routerHost,props.get(\"router_port\"));\n    }\n  }\n  routerTLSUrl=props.get(\"router_tls_url\");\n  if (routerTLSUrl == null) {\n    if (null != routerHost) {\n      routerTLSUrl=StringUtils.format(\"https://%s:%s\",routerHost,props.get(\"router_tls_port\"));\n    }\n  }\n  permissiveRouterUrl=props.get(\"router_permissive_url\");\n  if (permissiveRouterUrl == null) {\n    String permissiveRouterHost=props.get(\"router_permissive_host\");\n    if (null != permissiveRouterHost) {\n      permissiveRouterUrl=StringUtils.format(\"http://%s:%s\",permissiveRouterHost,props.get(\"router_permissive_port\"));\n    }\n  }\n  permissiveRouterTLSUrl=props.get(\"router_permissive_tls_url\");\n  if (permissiveRouterTLSUrl == null) {\n    String permissiveRouterHost=props.get(\"router_permissive_host\");\n    if (null != permissiveRouterHost) {\n      permissiveRouterTLSUrl=StringUtils.format(\"https://%s:%s\",permissiveRouterHost,props.get(\"router_permissive_tls_port\"));\n    }\n  }\n  noClientAuthRouterUrl=props.get(\"router_no_client_auth_url\");\n  if (noClientAuthRouterUrl == null) {\n    String noClientAuthRouterHost=props.get(\"router_no_client_auth_host\");\n    if (null != noClientAuthRouterHost) {\n      noClientAuthRouterUrl=StringUtils.format(\"http://%s:%s\",noClientAuthRouterHost,props.get(\"router_no_client_auth_port\"));\n    }\n  }\n  noClientAuthRouterTLSUrl=props.get(\"router_no_client_auth_tls_url\");\n  if (noClientAuthRouterTLSUrl == null) {\n    String noClientAuthRouterHost=props.get(\"router_no_client_auth_host\");\n    if (null != noClientAuthRouterHost) {\n      noClientAuthRouterTLSUrl=StringUtils.format(\"https://%s:%s\",noClientAuthRouterHost,props.get(\"router_no_client_auth_tls_port\"));\n    }\n  }\n  customCertCheckRouterUrl=props.get(\"router_no_client_auth_url\");\n  if (customCertCheckRouterUrl == null) {\n    String customCertCheckRouterHost=props.get(\"router_no_client_auth_host\");\n    if (null != customCertCheckRouterHost) {\n      customCertCheckRouterUrl=StringUtils.format(\"http://%s:%s\",customCertCheckRouterHost,props.get(\"router_no_client_auth_port\"));\n    }\n  }\n  customCertCheckRouterTLSUrl=props.get(\"router_no_client_auth_tls_url\");\n  if (customCertCheckRouterTLSUrl == null) {\n    String customCertCheckRouterHost=props.get(\"router_no_client_auth_host\");\n    if (null != customCertCheckRouterHost) {\n      customCertCheckRouterTLSUrl=StringUtils.format(\"https://%s:%s\",customCertCheckRouterHost,props.get(\"router_no_client_auth_tls_port\"));\n    }\n  }\n  brokerHost=props.get(\"broker_host\");\n  brokerUrl=props.get(\"broker_url\");\n  if (brokerUrl == null) {\n    brokerUrl=StringUtils.format(\"http://%s:%s\",props.get(\"broker_host\"),props.get(\"broker_port\"));\n  }\n  brokerTLSUrl=props.get(\"broker_tls_url\");\n  if (brokerTLSUrl == null) {\n    if (null != brokerHost) {\n      brokerTLSUrl=StringUtils.format(\"https://%s:%s\",brokerHost,props.get(\"broker_tls_port\"));\n    }\n  }\n  historicalHost=props.get(\"historical_host\");\n  historicalUrl=props.get(\"historical_url\");\n  if (historicalUrl == null) {\n    historicalUrl=StringUtils.format(\"http://%s:%s\",props.get(\"historical_host\"),props.get(\"historical_port\"));\n  }\n  historicalTLSUrl=props.get(\"historical_tls_url\");\n  if (historicalTLSUrl == null) {\n    if (null != historicalHost) {\n      historicalTLSUrl=StringUtils.format(\"https://%s:%s\",historicalHost,props.get(\"historical_tls_port\"));\n    }\n  }\n  coordinatorHost=props.get(\"coordinator_host\");\n  coordinatorUrl=props.get(\"coordinator_url\");\n  if (coordinatorUrl == null) {\n    coordinatorUrl=StringUtils.format(\"http://%s:%s\",coordinatorHost,props.get(\"coordinator_port\"));\n  }\n  coordinatorTLSUrl=props.get(\"coordinator_tls_url\");\n  if (coordinatorTLSUrl == null) {\n    if (null != coordinatorHost) {\n      coordinatorTLSUrl=StringUtils.format(\"https://%s:%s\",coordinatorHost,props.get(\"coordinator_tls_port\"));\n    }\n  }\n  overlordHost=props.get(\"indexer_host\");\n  overlordUrl=props.get(\"indexer_url\");\n  if (overlordUrl == null) {\n    overlordUrl=StringUtils.format(\"http://%s:%s\",overlordHost,props.get(\"indexer_port\"));\n  }\n  overlordTLSUrl=props.get(\"indexer_tls_url\");\n  if (overlordTLSUrl == null) {\n    if (null != overlordHost) {\n      overlordTLSUrl=StringUtils.format(\"https://%s:%s\",overlordHost,props.get(\"indexer_tls_port\"));\n    }\n  }\n  coordinatorTwoHost=props.get(\"coordinator_two_host\");\n  coordinatorTwoUrl=props.get(\"coordinator_two_url\");\n  if (coordinatorTwoUrl == null) {\n    coordinatorTwoUrl=StringUtils.format(\"http://%s:%s\",coordinatorTwoHost,props.get(\"coordinator_two_port\"));\n  }\n  coordinatorTwoTLSUrl=props.get(\"coordinator_two_tls_url\");\n  if (coordinatorTwoTLSUrl == null) {\n    if (null != coordinatorTwoHost) {\n      coordinatorTwoTLSUrl=StringUtils.format(\"https://%s:%s\",coordinatorTwoHost,props.get(\"coordinator_two_tls_port\"));\n    }\n  }\n  overlordTwoHost=props.get(\"overlord_two_host\");\n  overlordTwoUrl=props.get(\"overlord_two_url\");\n  if (overlordTwoUrl == null) {\n    overlordTwoUrl=StringUtils.format(\"http://%s:%s\",overlordTwoHost,props.get(\"overlord_two_port\"));\n  }\n  overlordTwoTLSUrl=props.get(\"overlord_two_tls_url\");\n  if (overlordTwoTLSUrl == null) {\n    if (null != overlordTwoHost) {\n      overlordTwoTLSUrl=StringUtils.format(\"https://%s:%s\",overlordTwoHost,props.get(\"overlord_two_tls_port\"));\n    }\n  }\n  middleManagerHost=props.get(\"middlemanager_host\");\n  zookeeperHosts=props.get(\"zookeeper_hosts\");\n  kafkaHost=props.get(\"kafka_host\") + \":\" + props.get(\"kafka_port\");\n  schemaRegistryHost=props.get(\"schema_registry_host\") + \":\" + props.get(\"schema_registry_port\");\n  username=props.get(\"username\");\n  password=props.get(\"password\");\n  cloudBucket=props.get(\"cloud_bucket\");\n  cloudPath=props.get(\"cloud_path\");\n  cloudRegion=props.get(\"cloud_region\");\n  hadoopGcsCredentialsPath=props.get(\"hadoopGcsCredentialsPath\");\n  azureKey=props.get(\"azureKey\");\n  streamEndpoint=props.get(\"stream_endpoint\");\n  LOG.info(\"router: [%s], [%s]\",routerUrl,routerTLSUrl);\n  LOG.info(\"broker: [%s], [%s]\",brokerUrl,brokerTLSUrl);\n  LOG.info(\"historical: [%s], [%s]\",historicalUrl,historicalTLSUrl);\n  LOG.info(\"coordinator: [%s], [%s]\",coordinatorUrl,coordinatorTLSUrl);\n  LOG.info(\"overlord: [%s], [%s]\",overlordUrl,overlordTLSUrl);\n  LOG.info(\"middle manager: [%s]\",middleManagerHost);\n  LOG.info(\"zookeepers: [%s]\",zookeeperHosts);\n  LOG.info(\"kafka: [%s]\",kafkaHost);\n  LOG.info(\"Username: [%s]\",username);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 849,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7410,
        "startLineNumber" : 83,
        "startColumnNumber" : 2,
        "endLineNumber" : 248,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void loadProperties(String configFile){\n  ObjectMapper jsonMapper=new ObjectMapper();\n  try {\n    props=jsonMapper.readValue(new File(configFile),JacksonUtils.TYPE_REFERENCE_MAP_STRING_STRING);\n  }\n catch (  IOException ex) {\n    throw new RuntimeException(ex);\n  }\n  routerHost=props.get(\"router_host\");\n  routerUrl=props.get(\"router_url\");\n  if (routerUrl == null) {\n    if (null != routerHost) {\n      routerUrl=StringUtils.format(\"http://%s:%s\",routerHost,props.get(\"router_port\"));\n    }\n  }\n  routerTLSUrl=props.get(\"router_tls_url\");\n  if (routerTLSUrl == null) {\n    if (null != routerHost) {\n      routerTLSUrl=StringUtils.format(\"https://%s:%s\",routerHost,props.get(\"router_tls_port\"));\n    }\n  }\n  permissiveRouterUrl=props.get(\"router_permissive_url\");\n  if (permissiveRouterUrl == null) {\n    String permissiveRouterHost=props.get(\"router_permissive_host\");\n    if (null != permissiveRouterHost) {\n      permissiveRouterUrl=StringUtils.format(\"http://%s:%s\",permissiveRouterHost,props.get(\"router_permissive_port\"));\n    }\n  }\n  permissiveRouterTLSUrl=props.get(\"router_permissive_tls_url\");\n  if (permissiveRouterTLSUrl == null) {\n    String permissiveRouterHost=props.get(\"router_permissive_host\");\n    if (null != permissiveRouterHost) {\n      permissiveRouterTLSUrl=StringUtils.format(\"https://%s:%s\",permissiveRouterHost,props.get(\"router_permissive_tls_port\"));\n    }\n  }\n  noClientAuthRouterUrl=props.get(\"router_no_client_auth_url\");\n  if (noClientAuthRouterUrl == null) {\n    String noClientAuthRouterHost=props.get(\"router_no_client_auth_host\");\n    if (null != noClientAuthRouterHost) {\n      noClientAuthRouterUrl=StringUtils.format(\"http://%s:%s\",noClientAuthRouterHost,props.get(\"router_no_client_auth_port\"));\n    }\n  }\n  noClientAuthRouterTLSUrl=props.get(\"router_no_client_auth_tls_url\");\n  if (noClientAuthRouterTLSUrl == null) {\n    String noClientAuthRouterHost=props.get(\"router_no_client_auth_host\");\n    if (null != noClientAuthRouterHost) {\n      noClientAuthRouterTLSUrl=StringUtils.format(\"https://%s:%s\",noClientAuthRouterHost,props.get(\"router_no_client_auth_tls_port\"));\n    }\n  }\n  customCertCheckRouterUrl=props.get(\"router_no_client_auth_url\");\n  if (customCertCheckRouterUrl == null) {\n    String customCertCheckRouterHost=props.get(\"router_no_client_auth_host\");\n    if (null != customCertCheckRouterHost) {\n      customCertCheckRouterUrl=StringUtils.format(\"http://%s:%s\",customCertCheckRouterHost,props.get(\"router_no_client_auth_port\"));\n    }\n  }\n  customCertCheckRouterTLSUrl=props.get(\"router_no_client_auth_tls_url\");\n  if (customCertCheckRouterTLSUrl == null) {\n    String customCertCheckRouterHost=props.get(\"router_no_client_auth_host\");\n    if (null != customCertCheckRouterHost) {\n      customCertCheckRouterTLSUrl=StringUtils.format(\"https://%s:%s\",customCertCheckRouterHost,props.get(\"router_no_client_auth_tls_port\"));\n    }\n  }\n  brokerHost=props.get(\"broker_host\");\n  brokerUrl=props.get(\"broker_url\");\n  if (brokerUrl == null) {\n    brokerUrl=StringUtils.format(\"http://%s:%s\",props.get(\"broker_host\"),props.get(\"broker_port\"));\n  }\n  brokerTLSUrl=props.get(\"broker_tls_url\");\n  if (brokerTLSUrl == null) {\n    if (null != brokerHost) {\n      brokerTLSUrl=StringUtils.format(\"https://%s:%s\",brokerHost,props.get(\"broker_tls_port\"));\n    }\n  }\n  historicalHost=props.get(\"historical_host\");\n  historicalUrl=props.get(\"historical_url\");\n  if (historicalUrl == null) {\n    historicalUrl=StringUtils.format(\"http://%s:%s\",props.get(\"historical_host\"),props.get(\"historical_port\"));\n  }\n  historicalTLSUrl=props.get(\"historical_tls_url\");\n  if (historicalTLSUrl == null) {\n    if (null != historicalHost) {\n      historicalTLSUrl=StringUtils.format(\"https://%s:%s\",historicalHost,props.get(\"historical_tls_port\"));\n    }\n  }\n  coordinatorHost=props.get(\"coordinator_host\");\n  coordinatorUrl=props.get(\"coordinator_url\");\n  if (coordinatorUrl == null) {\n    coordinatorUrl=StringUtils.format(\"http://%s:%s\",coordinatorHost,props.get(\"coordinator_port\"));\n  }\n  coordinatorTLSUrl=props.get(\"coordinator_tls_url\");\n  if (coordinatorTLSUrl == null) {\n    if (null != coordinatorHost) {\n      coordinatorTLSUrl=StringUtils.format(\"https://%s:%s\",coordinatorHost,props.get(\"coordinator_tls_port\"));\n    }\n  }\n  overlordHost=props.get(\"indexer_host\");\n  overlordUrl=props.get(\"indexer_url\");\n  if (overlordUrl == null) {\n    overlordUrl=StringUtils.format(\"http://%s:%s\",overlordHost,props.get(\"indexer_port\"));\n  }\n  overlordTLSUrl=props.get(\"indexer_tls_url\");\n  if (overlordTLSUrl == null) {\n    if (null != overlordHost) {\n      overlordTLSUrl=StringUtils.format(\"https://%s:%s\",overlordHost,props.get(\"indexer_tls_port\"));\n    }\n  }\n  coordinatorTwoHost=props.get(\"coordinator_two_host\");\n  coordinatorTwoUrl=props.get(\"coordinator_two_url\");\n  if (coordinatorTwoUrl == null) {\n    coordinatorTwoUrl=StringUtils.format(\"http://%s:%s\",coordinatorTwoHost,props.get(\"coordinator_two_port\"));\n  }\n  coordinatorTwoTLSUrl=props.get(\"coordinator_two_tls_url\");\n  if (coordinatorTwoTLSUrl == null) {\n    if (null != coordinatorTwoHost) {\n      coordinatorTwoTLSUrl=StringUtils.format(\"https://%s:%s\",coordinatorTwoHost,props.get(\"coordinator_two_tls_port\"));\n    }\n  }\n  overlordTwoHost=props.get(\"overlord_two_host\");\n  overlordTwoUrl=props.get(\"overlord_two_url\");\n  if (overlordTwoUrl == null) {\n    overlordTwoUrl=StringUtils.format(\"http://%s:%s\",overlordTwoHost,props.get(\"overlord_two_port\"));\n  }\n  overlordTwoTLSUrl=props.get(\"overlord_two_tls_url\");\n  if (overlordTwoTLSUrl == null) {\n    if (null != overlordTwoHost) {\n      overlordTwoTLSUrl=StringUtils.format(\"https://%s:%s\",overlordTwoHost,props.get(\"overlord_two_tls_port\"));\n    }\n  }\n  middleManagerHost=props.get(\"middlemanager_host\");\n  zookeeperHosts=props.get(\"zookeeper_hosts\");\n  kafkaHost=props.get(\"kafka_host\") + \":\" + props.get(\"kafka_port\");\n  schemaRegistryHost=props.get(\"schema_registry_host\") + \":\" + props.get(\"schema_registry_port\");\n  username=props.get(\"username\");\n  password=props.get(\"password\");\n  cloudBucket=props.get(\"cloud_bucket\");\n  cloudPath=props.get(\"cloud_path\");\n  cloudRegion=props.get(\"cloud_region\");\n  hadoopGcsCredentialsPath=props.get(\"hadoopGcsCredentialsPath\");\n  azureKey=props.get(\"azureKey\");\n  streamEndpoint=props.get(\"stream_endpoint\");\n  LOG.info(\"router: [%s], [%s]\",routerUrl,routerTLSUrl);\n  LOG.info(\"broker: [%s], [%s]\",brokerUrl,brokerTLSUrl);\n  LOG.info(\"historical: [%s], [%s]\",historicalUrl,historicalTLSUrl);\n  LOG.info(\"coordinator: [%s], [%s]\",coordinatorUrl,coordinatorTLSUrl);\n  LOG.info(\"overlord: [%s], [%s]\",overlordUrl,overlordTLSUrl);\n  LOG.info(\"middle manager: [%s]\",middleManagerHost);\n  LOG.info(\"zookeepers: [%s]\",zookeeperHosts);\n  LOG.info(\"kafka: [%s]\",kafkaHost);\n  LOG.info(\"Username: [%s]\",username);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 857,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 242,
        "startColumnNumber" : 4,
        "endLineNumber" : 242,
        "endColumnNumber" : 75
      },
      "nodeContext" : "LOG.info(\"coordinator: [%s], [%s]\",coordinatorUrl,coordinatorTLSUrl);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 177,
    "startColumnNumber" : 8,
    "endLineNumber" : 177,
    "endColumnNumber" : 22
  }, {
    "charLength" : 14,
    "startLineNumber" : 242,
    "startColumnNumber" : 40,
    "endLineNumber" : 242,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}