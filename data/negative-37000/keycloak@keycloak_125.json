{
  "id" : 125,
  "expression" : "true",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/adapters/oidc/undertow/src/main/java/org/keycloak/adapters/undertow/UndertowSessionTokenStore.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "true",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 82,
      "startColumnNumber" : 19,
      "endLineNumber" : 82,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 82,
        "startColumnNumber" : 12,
        "endLineNumber" : 82,
        "endColumnNumber" : 24
      },
      "nodeContext" : "return true;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 264,
        "startLineNumber" : 78,
        "startColumnNumber" : 35,
        "endLineNumber" : 83,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  log.debug(\"Cached account found\");\n  securityContext.authenticationComplete(account,\"KEYCLOAK\",false);\n  ((AbstractUndertowRequestAuthenticator)authenticator).propagateKeycloakContext(account);\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 598,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (account.checkActive()) {\n  log.debug(\"Cached account found\");\n  securityContext.authenticationComplete(account,\"KEYCLOAK\",false);\n  ((AbstractUndertowRequestAuthenticator)authenticator).propagateKeycloakContext(account);\n  return true;\n}\n else {\n  log.debug(\"Account was not active, returning false\");\n  session.removeAttribute(KeycloakUndertowAccount.class.getName());\n  session.removeAttribute(KeycloakSecurityContext.class.getName());\n  session.invalidate(exchange);\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 59,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1349,
        "startLineNumber" : 60,
        "startColumnNumber" : 64,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Session session=Sessions.getSession(exchange);\n  if (session == null) {\n    log.debug(\"session was null, returning null\");\n    return false;\n  }\n  KeycloakUndertowAccount account=(KeycloakUndertowAccount)session.getAttribute(KeycloakUndertowAccount.class.getName());\n  if (account == null) {\n    log.debug(\"Account was not in session, returning null\");\n    return false;\n  }\n  if (!deployment.getRealm().equals(account.getKeycloakSecurityContext().getRealm())) {\n    log.debug(\"Account in session belongs to a different realm than for this request.\");\n    return false;\n  }\n  account.setCurrentRequestInfo(deployment,this);\n  if (account.checkActive()) {\n    log.debug(\"Cached account found\");\n    securityContext.authenticationComplete(account,\"KEYCLOAK\",false);\n    ((AbstractUndertowRequestAuthenticator)authenticator).propagateKeycloakContext(account);\n    return true;\n  }\n else {\n    log.debug(\"Account was not active, returning false\");\n    session.removeAttribute(KeycloakUndertowAccount.class.getName());\n    session.removeAttribute(KeycloakSecurityContext.class.getName());\n    session.invalidate(exchange);\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1423,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public boolean isCached(RequestAuthenticator authenticator){\n  Session session=Sessions.getSession(exchange);\n  if (session == null) {\n    log.debug(\"session was null, returning null\");\n    return false;\n  }\n  KeycloakUndertowAccount account=(KeycloakUndertowAccount)session.getAttribute(KeycloakUndertowAccount.class.getName());\n  if (account == null) {\n    log.debug(\"Account was not in session, returning null\");\n    return false;\n  }\n  if (!deployment.getRealm().equals(account.getKeycloakSecurityContext().getRealm())) {\n    log.debug(\"Account in session belongs to a different realm than for this request.\");\n    return false;\n  }\n  account.setCurrentRequestInfo(deployment,this);\n  if (account.checkActive()) {\n    log.debug(\"Cached account found\");\n    securityContext.authenticationComplete(account,\"KEYCLOAK\",false);\n    ((AbstractUndertowRequestAuthenticator)authenticator).propagateKeycloakContext(account);\n    return true;\n  }\n else {\n    log.debug(\"Account was not active, returning false\");\n    session.removeAttribute(KeycloakUndertowAccount.class.getName());\n    session.removeAttribute(KeycloakSecurityContext.class.getName());\n    session.invalidate(exchange);\n    return false;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 145,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 82,
        "startColumnNumber" : 12,
        "endLineNumber" : 82,
        "endColumnNumber" : 24
      },
      "nodeContext" : "return true;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 82,
    "startColumnNumber" : 19,
    "endLineNumber" : 82,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ ]
}