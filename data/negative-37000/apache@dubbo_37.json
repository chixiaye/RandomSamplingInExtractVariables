{
  "id" : 37,
  "expression" : "new String[]{\"int\",\"java.lang.String\",\"boolean\"}",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-cluster/src/test/java/org/apache/dubbo/rpc/cluster/router/mesh/rule/virtualservice/match/DubboMethodMatchTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new String[]{\"int\",\"java.lang.String\",\"boolean\"}",
    "nodeType" : "ArrayCreation",
    "nodePosition" : {
      "charLength" : 50,
      "startLineNumber" : 153,
      "startColumnNumber" : 70,
      "endLineNumber" : 153,
      "endColumnNumber" : 120
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 153,
        "startColumnNumber" : 19,
        "endLineNumber" : 153,
        "endColumnNumber" : 157
      },
      "nodeContext" : "DubboMethodMatch.isMatch(dubboMethodMatch,\"test\",new String[]{\"int\",\"java.lang.String\",\"boolean\"},new Object[]{10,\"sayHello\",true})",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 153,
        "startColumnNumber" : 8,
        "endLineNumber" : 153,
        "endColumnNumber" : 158
      },
      "nodeContext" : "assertTrue(DubboMethodMatch.isMatch(dubboMethodMatch,\"test\",new String[]{\"int\",\"java.lang.String\",\"boolean\"},new Object[]{10,\"sayHello\",true}))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 153,
        "startColumnNumber" : 8,
        "endLineNumber" : 153,
        "endColumnNumber" : 159
      },
      "nodeContext" : "assertTrue(DubboMethodMatch.isMatch(dubboMethodMatch,\"test\",new String[]{\"int\",\"java.lang.String\",\"boolean\"},new Object[]{10,\"sayHello\",true}));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2315,
        "startLineNumber" : 80,
        "startColumnNumber" : 34,
        "endLineNumber" : 155,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DubboMethodMatch dubboMethodMatch=new DubboMethodMatch();\n  List<DubboMethodArg> parametersMatch=new ArrayList<>();\n{\n    DubboMethodArg dubboMethodArg0=new DubboMethodArg();\n    dubboMethodArg0.setIndex(0);\n    ListDoubleMatch listDoubleMatch=new ListDoubleMatch();\n    List<DoubleMatch> oneof=new ArrayList<>();\n    DoubleMatch doubleMatch1=new DoubleMatch();\n    doubleMatch1.setExact(10.0);\n    oneof.add(doubleMatch1);\n    listDoubleMatch.setOneof(oneof);\n    dubboMethodArg0.setNum_value(listDoubleMatch);\n    parametersMatch.add(dubboMethodArg0);\n  }\n{\n    DubboMethodArg dubboMethodArg1=new DubboMethodArg();\n    dubboMethodArg1.setIndex(1);\n    ListStringMatch listStringMatch=new ListStringMatch();\n    List<StringMatch> oneof=new ArrayList<>();\n    StringMatch stringMatch1=new StringMatch();\n    stringMatch1.setExact(\"sayHello\");\n    oneof.add(stringMatch1);\n    listStringMatch.setOneof(oneof);\n    dubboMethodArg1.setStr_value(listStringMatch);\n    parametersMatch.add(dubboMethodArg1);\n  }\n  dubboMethodMatch.setArgs(parametersMatch);\n  assertTrue(DubboMethodMatch.isMatch(dubboMethodMatch,\"test\",new String[]{\"int\",\"java.lang.String\"},new Object[]{10,\"sayHello\"}));\n  assertFalse(DubboMethodMatch.isMatch(dubboMethodMatch,\"test\",new String[]{\"int\",\"java.lang.String\"},new Object[]{10,\"sayHi\"}));\n{\n    DubboMethodArg dubboMethodArg2=new DubboMethodArg();\n    dubboMethodArg2.setIndex(2);\n    BoolMatch boolMatch=new BoolMatch();\n    boolMatch.setExact(true);\n    dubboMethodArg2.setBool_value(boolMatch);\n    parametersMatch.add(dubboMethodArg2);\n  }\n  assertTrue(DubboMethodMatch.isMatch(dubboMethodMatch,\"test\",new String[]{\"int\",\"java.lang.String\",\"boolean\"},new Object[]{10,\"sayHello\",true}));\n  assertFalse(DubboMethodMatch.isMatch(dubboMethodMatch,\"test\",new String[]{\"int\",\"java.lang.String\",\"boolean\"},new Object[]{10,\"sayHello\",false}));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 297,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2355,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 155,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void parametersMatch(){\n  DubboMethodMatch dubboMethodMatch=new DubboMethodMatch();\n  List<DubboMethodArg> parametersMatch=new ArrayList<>();\n{\n    DubboMethodArg dubboMethodArg0=new DubboMethodArg();\n    dubboMethodArg0.setIndex(0);\n    ListDoubleMatch listDoubleMatch=new ListDoubleMatch();\n    List<DoubleMatch> oneof=new ArrayList<>();\n    DoubleMatch doubleMatch1=new DoubleMatch();\n    doubleMatch1.setExact(10.0);\n    oneof.add(doubleMatch1);\n    listDoubleMatch.setOneof(oneof);\n    dubboMethodArg0.setNum_value(listDoubleMatch);\n    parametersMatch.add(dubboMethodArg0);\n  }\n{\n    DubboMethodArg dubboMethodArg1=new DubboMethodArg();\n    dubboMethodArg1.setIndex(1);\n    ListStringMatch listStringMatch=new ListStringMatch();\n    List<StringMatch> oneof=new ArrayList<>();\n    StringMatch stringMatch1=new StringMatch();\n    stringMatch1.setExact(\"sayHello\");\n    oneof.add(stringMatch1);\n    listStringMatch.setOneof(oneof);\n    dubboMethodArg1.setStr_value(listStringMatch);\n    parametersMatch.add(dubboMethodArg1);\n  }\n  dubboMethodMatch.setArgs(parametersMatch);\n  assertTrue(DubboMethodMatch.isMatch(dubboMethodMatch,\"test\",new String[]{\"int\",\"java.lang.String\"},new Object[]{10,\"sayHello\"}));\n  assertFalse(DubboMethodMatch.isMatch(dubboMethodMatch,\"test\",new String[]{\"int\",\"java.lang.String\"},new Object[]{10,\"sayHi\"}));\n{\n    DubboMethodArg dubboMethodArg2=new DubboMethodArg();\n    dubboMethodArg2.setIndex(2);\n    BoolMatch boolMatch=new BoolMatch();\n    boolMatch.setExact(true);\n    dubboMethodArg2.setBool_value(boolMatch);\n    parametersMatch.add(dubboMethodArg2);\n  }\n  assertTrue(DubboMethodMatch.isMatch(dubboMethodMatch,\"test\",new String[]{\"int\",\"java.lang.String\",\"boolean\"},new Object[]{10,\"sayHello\",true}));\n  assertFalse(DubboMethodMatch.isMatch(dubboMethodMatch,\"test\",new String[]{\"int\",\"java.lang.String\",\"boolean\"},new Object[]{10,\"sayHello\",false}));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 303,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 153,
        "startColumnNumber" : 8,
        "endLineNumber" : 153,
        "endColumnNumber" : 159
      },
      "nodeContext" : "assertTrue(DubboMethodMatch.isMatch(dubboMethodMatch,\"test\",new String[]{\"int\",\"java.lang.String\",\"boolean\"},new Object[]{10,\"sayHello\",true}));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 26,
      "astHeight" : 7
    },
    "tokenLength" : 4,
    "type" : "java.lang.String[]"
  }, {
    "nodeContext" : "new String[]{\"int\",\"java.lang.String\",\"boolean\"}",
    "nodeType" : "ArrayCreation",
    "nodePosition" : {
      "charLength" : 50,
      "startLineNumber" : 154,
      "startColumnNumber" : 71,
      "endLineNumber" : 154,
      "endColumnNumber" : 121
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 154,
        "startColumnNumber" : 20,
        "endLineNumber" : 154,
        "endColumnNumber" : 159
      },
      "nodeContext" : "DubboMethodMatch.isMatch(dubboMethodMatch,\"test\",new String[]{\"int\",\"java.lang.String\",\"boolean\"},new Object[]{10,\"sayHello\",false})",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 154,
        "startColumnNumber" : 8,
        "endLineNumber" : 154,
        "endColumnNumber" : 160
      },
      "nodeContext" : "assertFalse(DubboMethodMatch.isMatch(dubboMethodMatch,\"test\",new String[]{\"int\",\"java.lang.String\",\"boolean\"},new Object[]{10,\"sayHello\",false}))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 154,
        "startColumnNumber" : 8,
        "endLineNumber" : 154,
        "endColumnNumber" : 161
      },
      "nodeContext" : "assertFalse(DubboMethodMatch.isMatch(dubboMethodMatch,\"test\",new String[]{\"int\",\"java.lang.String\",\"boolean\"},new Object[]{10,\"sayHello\",false}));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2315,
        "startLineNumber" : 80,
        "startColumnNumber" : 34,
        "endLineNumber" : 155,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DubboMethodMatch dubboMethodMatch=new DubboMethodMatch();\n  List<DubboMethodArg> parametersMatch=new ArrayList<>();\n{\n    DubboMethodArg dubboMethodArg0=new DubboMethodArg();\n    dubboMethodArg0.setIndex(0);\n    ListDoubleMatch listDoubleMatch=new ListDoubleMatch();\n    List<DoubleMatch> oneof=new ArrayList<>();\n    DoubleMatch doubleMatch1=new DoubleMatch();\n    doubleMatch1.setExact(10.0);\n    oneof.add(doubleMatch1);\n    listDoubleMatch.setOneof(oneof);\n    dubboMethodArg0.setNum_value(listDoubleMatch);\n    parametersMatch.add(dubboMethodArg0);\n  }\n{\n    DubboMethodArg dubboMethodArg1=new DubboMethodArg();\n    dubboMethodArg1.setIndex(1);\n    ListStringMatch listStringMatch=new ListStringMatch();\n    List<StringMatch> oneof=new ArrayList<>();\n    StringMatch stringMatch1=new StringMatch();\n    stringMatch1.setExact(\"sayHello\");\n    oneof.add(stringMatch1);\n    listStringMatch.setOneof(oneof);\n    dubboMethodArg1.setStr_value(listStringMatch);\n    parametersMatch.add(dubboMethodArg1);\n  }\n  dubboMethodMatch.setArgs(parametersMatch);\n  assertTrue(DubboMethodMatch.isMatch(dubboMethodMatch,\"test\",new String[]{\"int\",\"java.lang.String\"},new Object[]{10,\"sayHello\"}));\n  assertFalse(DubboMethodMatch.isMatch(dubboMethodMatch,\"test\",new String[]{\"int\",\"java.lang.String\"},new Object[]{10,\"sayHi\"}));\n{\n    DubboMethodArg dubboMethodArg2=new DubboMethodArg();\n    dubboMethodArg2.setIndex(2);\n    BoolMatch boolMatch=new BoolMatch();\n    boolMatch.setExact(true);\n    dubboMethodArg2.setBool_value(boolMatch);\n    parametersMatch.add(dubboMethodArg2);\n  }\n  assertTrue(DubboMethodMatch.isMatch(dubboMethodMatch,\"test\",new String[]{\"int\",\"java.lang.String\",\"boolean\"},new Object[]{10,\"sayHello\",true}));\n  assertFalse(DubboMethodMatch.isMatch(dubboMethodMatch,\"test\",new String[]{\"int\",\"java.lang.String\",\"boolean\"},new Object[]{10,\"sayHello\",false}));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 297,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2355,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 155,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void parametersMatch(){\n  DubboMethodMatch dubboMethodMatch=new DubboMethodMatch();\n  List<DubboMethodArg> parametersMatch=new ArrayList<>();\n{\n    DubboMethodArg dubboMethodArg0=new DubboMethodArg();\n    dubboMethodArg0.setIndex(0);\n    ListDoubleMatch listDoubleMatch=new ListDoubleMatch();\n    List<DoubleMatch> oneof=new ArrayList<>();\n    DoubleMatch doubleMatch1=new DoubleMatch();\n    doubleMatch1.setExact(10.0);\n    oneof.add(doubleMatch1);\n    listDoubleMatch.setOneof(oneof);\n    dubboMethodArg0.setNum_value(listDoubleMatch);\n    parametersMatch.add(dubboMethodArg0);\n  }\n{\n    DubboMethodArg dubboMethodArg1=new DubboMethodArg();\n    dubboMethodArg1.setIndex(1);\n    ListStringMatch listStringMatch=new ListStringMatch();\n    List<StringMatch> oneof=new ArrayList<>();\n    StringMatch stringMatch1=new StringMatch();\n    stringMatch1.setExact(\"sayHello\");\n    oneof.add(stringMatch1);\n    listStringMatch.setOneof(oneof);\n    dubboMethodArg1.setStr_value(listStringMatch);\n    parametersMatch.add(dubboMethodArg1);\n  }\n  dubboMethodMatch.setArgs(parametersMatch);\n  assertTrue(DubboMethodMatch.isMatch(dubboMethodMatch,\"test\",new String[]{\"int\",\"java.lang.String\"},new Object[]{10,\"sayHello\"}));\n  assertFalse(DubboMethodMatch.isMatch(dubboMethodMatch,\"test\",new String[]{\"int\",\"java.lang.String\"},new Object[]{10,\"sayHi\"}));\n{\n    DubboMethodArg dubboMethodArg2=new DubboMethodArg();\n    dubboMethodArg2.setIndex(2);\n    BoolMatch boolMatch=new BoolMatch();\n    boolMatch.setExact(true);\n    dubboMethodArg2.setBool_value(boolMatch);\n    parametersMatch.add(dubboMethodArg2);\n  }\n  assertTrue(DubboMethodMatch.isMatch(dubboMethodMatch,\"test\",new String[]{\"int\",\"java.lang.String\",\"boolean\"},new Object[]{10,\"sayHello\",true}));\n  assertFalse(DubboMethodMatch.isMatch(dubboMethodMatch,\"test\",new String[]{\"int\",\"java.lang.String\",\"boolean\"},new Object[]{10,\"sayHello\",false}));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 303,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 154,
        "startColumnNumber" : 8,
        "endLineNumber" : 154,
        "endColumnNumber" : 161
      },
      "nodeContext" : "assertFalse(DubboMethodMatch.isMatch(dubboMethodMatch,\"test\",new String[]{\"int\",\"java.lang.String\",\"boolean\"},new Object[]{10,\"sayHello\",false}));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 26,
      "astHeight" : 7
    },
    "tokenLength" : 4,
    "type" : "java.lang.String[]"
  } ],
  "positionList" : [ {
    "charLength" : 50,
    "startLineNumber" : 153,
    "startColumnNumber" : 70,
    "endLineNumber" : 153,
    "endColumnNumber" : 120
  }, {
    "charLength" : 50,
    "startLineNumber" : 154,
    "startColumnNumber" : 71,
    "endLineNumber" : 154,
    "endColumnNumber" : 121
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}