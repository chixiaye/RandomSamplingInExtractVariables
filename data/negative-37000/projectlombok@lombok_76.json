{
  "id" : 76,
  "expression" : "fieldName",
  "projectName" : "projectlombok@lombok",
  "commitID" : "25def866b50860715ee7c315c678b8c3d1ba9b56",
  "filePath" : "/src/core/lombok/bytecode/ClassFileMetaData.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "fieldName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 161,
      "startColumnNumber" : 32,
      "endLineNumber" : 161,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 161,
        "startColumnNumber" : 23,
        "endLineNumber" : 161,
        "endColumnNumber" : 42
      },
      "nodeContext" : "findUtf8(fieldName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 161,
        "startColumnNumber" : 6,
        "endLineNumber" : 161,
        "endColumnNumber" : 42
      },
      "nodeContext" : "fieldNameIndex=findUtf8(fieldName)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 161,
        "startColumnNumber" : 2,
        "endLineNumber" : 161,
        "endColumnNumber" : 43
      },
      "nodeContext" : "int fieldNameIndex=findUtf8(fieldName);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 451,
        "startLineNumber" : 158,
        "startColumnNumber" : 62,
        "endLineNumber" : 171,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int classIndex=findClass(className);\n  if (classIndex == NOT_FOUND)   return false;\n  int fieldNameIndex=findUtf8(fieldName);\n  if (fieldNameIndex == NOT_FOUND)   return false;\n  for (int i=1; i < maxPoolSize; i++) {\n    if (types[i] == FIELD && readValue(offsets[i]) == classIndex) {\n      int nameAndTypeIndex=readValue(offsets[i] + 2);\n      if (readValue(offsets[nameAndTypeIndex]) == fieldNameIndex)       return true;\n    }\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 711,
        "startLineNumber" : 153,
        "startColumnNumber" : 1,
        "endLineNumber" : 171,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Checks if the constant pool contains a reference to a given field, either for writing or reading.\n * @param className must be provided JVM-style, such as {@code java/lang/String}\n */\npublic boolean usesField(String className,String fieldName){\n  int classIndex=findClass(className);\n  if (classIndex == NOT_FOUND)   return false;\n  int fieldNameIndex=findUtf8(fieldName);\n  if (fieldNameIndex == NOT_FOUND)   return false;\n  for (int i=1; i < maxPoolSize; i++) {\n    if (types[i] == FIELD && readValue(offsets[i]) == classIndex) {\n      int nameAndTypeIndex=readValue(offsets[i] + 2);\n      if (readValue(offsets[nameAndTypeIndex]) == fieldNameIndex)       return true;\n    }\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 90,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 161,
        "startColumnNumber" : 2,
        "endLineNumber" : 161,
        "endColumnNumber" : 43
      },
      "nodeContext" : "int fieldNameIndex=findUtf8(fieldName);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 161,
    "startColumnNumber" : 32,
    "endLineNumber" : 161,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}