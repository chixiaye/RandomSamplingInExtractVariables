{
  "id" : 48,
  "expression" : "new JavaClass(inner,this)",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/main/java/jadx/api/JavaClass.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new JavaClass(inner,this)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 82,
      "startColumnNumber" : 27,
      "endLineNumber" : 82,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 82,
        "startColumnNumber" : 15,
        "endLineNumber" : 82,
        "endColumnNumber" : 53
      },
      "nodeContext" : "javaClass=new JavaClass(inner,this)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 82,
        "startColumnNumber" : 5,
        "endLineNumber" : 82,
        "endColumnNumber" : 54
      },
      "nodeContext" : "JavaClass javaClass=new JavaClass(inner,this);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 81,
        "startColumnNumber" : 46,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  JavaClass javaClass=new JavaClass(inner,this);\n  javaClass.load();\n  list.add(javaClass);\n  rootDecompiler.getClassesMap().put(inner,javaClass);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 212,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!inner.contains(AFlag.DONT_GENERATE)) {\n  JavaClass javaClass=new JavaClass(inner,this);\n  javaClass.load();\n  list.add(javaClass);\n  rootDecompiler.getClassesMap().put(inner,javaClass);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 223,
        "startLineNumber" : 80,
        "startColumnNumber" : 49,
        "endLineNumber" : 87,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (!inner.contains(AFlag.DONT_GENERATE)) {\n    JavaClass javaClass=new JavaClass(inner,this);\n    javaClass.load();\n    list.add(javaClass);\n    rootDecompiler.getClassesMap().put(inner,javaClass);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 80,
        "startColumnNumber" : 3,
        "endLineNumber" : 87,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (ClassNode inner : cls.getInnerClasses()) {\n  if (!inner.contains(AFlag.DONT_GENERATE)) {\n    JavaClass javaClass=new JavaClass(inner,this);\n    javaClass.load();\n    list.add(javaClass);\n    rootDecompiler.getClassesMap().put(inner,javaClass);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 45,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 392,
        "startLineNumber" : 78,
        "startColumnNumber" : 23,
        "endLineNumber" : 89,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<JavaClass> list=new ArrayList<>(inClsCount);\n  for (  ClassNode inner : cls.getInnerClasses()) {\n    if (!inner.contains(AFlag.DONT_GENERATE)) {\n      JavaClass javaClass=new JavaClass(inner,this);\n      javaClass.load();\n      list.add(javaClass);\n      rootDecompiler.getClassesMap().put(inner,javaClass);\n    }\n  }\n  this.innerClasses=Collections.unmodifiableList(list);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 413,
        "startLineNumber" : 78,
        "startColumnNumber" : 2,
        "endLineNumber" : 89,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (inClsCount != 0) {\n  List<JavaClass> list=new ArrayList<>(inClsCount);\n  for (  ClassNode inner : cls.getInnerClasses()) {\n    if (!inner.contains(AFlag.DONT_GENERATE)) {\n      JavaClass javaClass=new JavaClass(inner,this);\n      javaClass.load();\n      list.add(javaClass);\n      rootDecompiler.getClassesMap().put(inner,javaClass);\n    }\n  }\n  this.innerClasses=Collections.unmodifiableList(list);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 72,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1417,
        "startLineNumber" : 75,
        "startColumnNumber" : 21,
        "endLineNumber" : 117,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  JadxDecompiler rootDecompiler=getRootDecompiler();\n  int inClsCount=cls.getInnerClasses().size();\n  if (inClsCount != 0) {\n    List<JavaClass> list=new ArrayList<>(inClsCount);\n    for (    ClassNode inner : cls.getInnerClasses()) {\n      if (!inner.contains(AFlag.DONT_GENERATE)) {\n        JavaClass javaClass=new JavaClass(inner,this);\n        javaClass.load();\n        list.add(javaClass);\n        rootDecompiler.getClassesMap().put(inner,javaClass);\n      }\n    }\n    this.innerClasses=Collections.unmodifiableList(list);\n  }\n  int fieldsCount=cls.getFields().size();\n  if (fieldsCount != 0) {\n    List<JavaField> flds=new ArrayList<>(fieldsCount);\n    for (    FieldNode f : cls.getFields()) {\n      if (!f.contains(AFlag.DONT_GENERATE)) {\n        JavaField javaField=new JavaField(f,this);\n        flds.add(javaField);\n        rootDecompiler.getFieldsMap().put(f,javaField);\n      }\n    }\n    this.fields=Collections.unmodifiableList(flds);\n  }\n  int methodsCount=cls.getMethods().size();\n  if (methodsCount != 0) {\n    List<JavaMethod> mths=new ArrayList<>(methodsCount);\n    for (    MethodNode m : cls.getMethods()) {\n      if (!m.contains(AFlag.DONT_GENERATE)) {\n        JavaMethod javaMethod=new JavaMethod(this,m);\n        mths.add(javaMethod);\n        rootDecompiler.getMethodsMap().put(m,javaMethod);\n      }\n    }\n    mths.sort(Comparator.comparing(JavaMethod::getName));\n    this.methods=Collections.unmodifiableList(mths);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 253,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1437,
        "startLineNumber" : 75,
        "startColumnNumber" : 1,
        "endLineNumber" : 117,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private void load(){\n  JadxDecompiler rootDecompiler=getRootDecompiler();\n  int inClsCount=cls.getInnerClasses().size();\n  if (inClsCount != 0) {\n    List<JavaClass> list=new ArrayList<>(inClsCount);\n    for (    ClassNode inner : cls.getInnerClasses()) {\n      if (!inner.contains(AFlag.DONT_GENERATE)) {\n        JavaClass javaClass=new JavaClass(inner,this);\n        javaClass.load();\n        list.add(javaClass);\n        rootDecompiler.getClassesMap().put(inner,javaClass);\n      }\n    }\n    this.innerClasses=Collections.unmodifiableList(list);\n  }\n  int fieldsCount=cls.getFields().size();\n  if (fieldsCount != 0) {\n    List<JavaField> flds=new ArrayList<>(fieldsCount);\n    for (    FieldNode f : cls.getFields()) {\n      if (!f.contains(AFlag.DONT_GENERATE)) {\n        JavaField javaField=new JavaField(f,this);\n        flds.add(javaField);\n        rootDecompiler.getFieldsMap().put(f,javaField);\n      }\n    }\n    this.fields=Collections.unmodifiableList(flds);\n  }\n  int methodsCount=cls.getMethods().size();\n  if (methodsCount != 0) {\n    List<JavaMethod> mths=new ArrayList<>(methodsCount);\n    for (    MethodNode m : cls.getMethods()) {\n      if (!m.contains(AFlag.DONT_GENERATE)) {\n        JavaMethod javaMethod=new JavaMethod(this,m);\n        mths.add(javaMethod);\n        rootDecompiler.getMethodsMap().put(m,javaMethod);\n      }\n    }\n    mths.sort(Comparator.comparing(JavaMethod::getName));\n    this.methods=Collections.unmodifiableList(mths);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 257,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 82,
        "startColumnNumber" : 5,
        "endLineNumber" : 82,
        "endColumnNumber" : 54
      },
      "nodeContext" : "JavaClass javaClass=new JavaClass(inner,this);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "jadx.api.JavaClass"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 82,
    "startColumnNumber" : 27,
    "endLineNumber" : 82,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ ]
}