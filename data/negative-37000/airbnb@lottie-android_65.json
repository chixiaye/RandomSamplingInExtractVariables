{
  "id" : 65,
  "expression" : "i < dashPattern.size()",
  "projectName" : "airbnb@lottie-android",
  "commitID" : "54c2775bf2c8b67c8d24840424c13968255caea7",
  "filePath" : "/lottie/src/main/java/com/airbnb/lottie/BaseStrokeContent.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i < dashPattern.size()",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 51,
      "startColumnNumber" : 20,
      "endLineNumber" : 51,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < dashPattern.size(); i++) {\n  dashPatternAnimations.add(dashPattern.get(i).createAnimation());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1273,
        "startLineNumber" : 33,
        "startColumnNumber" : 75,
        "endLineNumber" : 73,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.lottieDrawable=lottieDrawable;\n  paint.setStyle(Paint.Style.STROKE);\n  paint.setStrokeCap(cap);\n  paint.setStrokeJoin(join);\n  opacityAnimation=opacity.createAnimation();\n  widthAnimation=width.createAnimation();\n  if (offset == null) {\n    dashPatternOffsetAnimation=null;\n  }\n else {\n    dashPatternOffsetAnimation=offset.createAnimation();\n  }\n  dashPatternAnimations=new ArrayList<>(dashPattern.size());\n  dashPatternValues=new float[dashPattern.size()];\n  for (int i=0; i < dashPattern.size(); i++) {\n    dashPatternAnimations.add(dashPattern.get(i).createAnimation());\n  }\n  layer.addAnimation(opacityAnimation);\n  layer.addAnimation(widthAnimation);\n  for (int i=0; i < dashPatternAnimations.size(); i++) {\n    layer.addAnimation(dashPatternAnimations.get(i));\n  }\n  if (dashPatternOffsetAnimation != null) {\n    layer.addAnimation(dashPatternOffsetAnimation);\n  }\n  opacityAnimation.addUpdateListener(this);\n  widthAnimation.addUpdateListener(this);\n  for (int i=0; i < dashPattern.size(); i++) {\n    dashPatternAnimations.get(i).addUpdateListener(this);\n  }\n  if (dashPatternOffsetAnimation != null) {\n    dashPatternOffsetAnimation.addUpdateListener(this);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 182,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1518,
        "startLineNumber" : 31,
        "startColumnNumber" : 2,
        "endLineNumber" : 73,
        "endColumnNumber" : 3
      },
      "nodeContext" : "BaseStrokeContent(final LottieDrawable lottieDrawable,BaseLayer layer,Paint.Cap cap,Paint.Join join,AnimatableIntegerValue opacity,AnimatableFloatValue width,List<AnimatableFloatValue> dashPattern,AnimatableFloatValue offset){\n  this.lottieDrawable=lottieDrawable;\n  paint.setStyle(Paint.Style.STROKE);\n  paint.setStrokeCap(cap);\n  paint.setStrokeJoin(join);\n  opacityAnimation=opacity.createAnimation();\n  widthAnimation=width.createAnimation();\n  if (offset == null) {\n    dashPatternOffsetAnimation=null;\n  }\n else {\n    dashPatternOffsetAnimation=offset.createAnimation();\n  }\n  dashPatternAnimations=new ArrayList<>(dashPattern.size());\n  dashPatternValues=new float[dashPattern.size()];\n  for (int i=0; i < dashPattern.size(); i++) {\n    dashPatternAnimations.add(dashPattern.get(i).createAnimation());\n  }\n  layer.addAnimation(opacityAnimation);\n  layer.addAnimation(widthAnimation);\n  for (int i=0; i < dashPatternAnimations.size(); i++) {\n    layer.addAnimation(dashPatternAnimations.get(i));\n  }\n  if (dashPatternOffsetAnimation != null) {\n    layer.addAnimation(dashPatternOffsetAnimation);\n  }\n  opacityAnimation.addUpdateListener(this);\n  widthAnimation.addUpdateListener(this);\n  for (int i=0; i < dashPattern.size(); i++) {\n    dashPatternAnimations.get(i).addUpdateListener(this);\n  }\n  if (dashPatternOffsetAnimation != null) {\n    dashPatternOffsetAnimation.addUpdateListener(this);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 224,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < dashPattern.size(); i++) {\n  dashPatternAnimations.add(dashPattern.get(i).createAnimation());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    },
    "tokenLength" : 4,
    "type" : "boolean"
  }, {
    "nodeContext" : "i < dashPattern.size()",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 67,
      "startColumnNumber" : 20,
      "endLineNumber" : 67,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < dashPattern.size(); i++) {\n  dashPatternAnimations.get(i).addUpdateListener(this);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1273,
        "startLineNumber" : 33,
        "startColumnNumber" : 75,
        "endLineNumber" : 73,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.lottieDrawable=lottieDrawable;\n  paint.setStyle(Paint.Style.STROKE);\n  paint.setStrokeCap(cap);\n  paint.setStrokeJoin(join);\n  opacityAnimation=opacity.createAnimation();\n  widthAnimation=width.createAnimation();\n  if (offset == null) {\n    dashPatternOffsetAnimation=null;\n  }\n else {\n    dashPatternOffsetAnimation=offset.createAnimation();\n  }\n  dashPatternAnimations=new ArrayList<>(dashPattern.size());\n  dashPatternValues=new float[dashPattern.size()];\n  for (int i=0; i < dashPattern.size(); i++) {\n    dashPatternAnimations.add(dashPattern.get(i).createAnimation());\n  }\n  layer.addAnimation(opacityAnimation);\n  layer.addAnimation(widthAnimation);\n  for (int i=0; i < dashPatternAnimations.size(); i++) {\n    layer.addAnimation(dashPatternAnimations.get(i));\n  }\n  if (dashPatternOffsetAnimation != null) {\n    layer.addAnimation(dashPatternOffsetAnimation);\n  }\n  opacityAnimation.addUpdateListener(this);\n  widthAnimation.addUpdateListener(this);\n  for (int i=0; i < dashPattern.size(); i++) {\n    dashPatternAnimations.get(i).addUpdateListener(this);\n  }\n  if (dashPatternOffsetAnimation != null) {\n    dashPatternOffsetAnimation.addUpdateListener(this);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 182,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1518,
        "startLineNumber" : 31,
        "startColumnNumber" : 2,
        "endLineNumber" : 73,
        "endColumnNumber" : 3
      },
      "nodeContext" : "BaseStrokeContent(final LottieDrawable lottieDrawable,BaseLayer layer,Paint.Cap cap,Paint.Join join,AnimatableIntegerValue opacity,AnimatableFloatValue width,List<AnimatableFloatValue> dashPattern,AnimatableFloatValue offset){\n  this.lottieDrawable=lottieDrawable;\n  paint.setStyle(Paint.Style.STROKE);\n  paint.setStrokeCap(cap);\n  paint.setStrokeJoin(join);\n  opacityAnimation=opacity.createAnimation();\n  widthAnimation=width.createAnimation();\n  if (offset == null) {\n    dashPatternOffsetAnimation=null;\n  }\n else {\n    dashPatternOffsetAnimation=offset.createAnimation();\n  }\n  dashPatternAnimations=new ArrayList<>(dashPattern.size());\n  dashPatternValues=new float[dashPattern.size()];\n  for (int i=0; i < dashPattern.size(); i++) {\n    dashPatternAnimations.add(dashPattern.get(i).createAnimation());\n  }\n  layer.addAnimation(opacityAnimation);\n  layer.addAnimation(widthAnimation);\n  for (int i=0; i < dashPatternAnimations.size(); i++) {\n    layer.addAnimation(dashPatternAnimations.get(i));\n  }\n  if (dashPatternOffsetAnimation != null) {\n    layer.addAnimation(dashPatternOffsetAnimation);\n  }\n  opacityAnimation.addUpdateListener(this);\n  widthAnimation.addUpdateListener(this);\n  for (int i=0; i < dashPattern.size(); i++) {\n    dashPatternAnimations.get(i).addUpdateListener(this);\n  }\n  if (dashPatternOffsetAnimation != null) {\n    dashPatternOffsetAnimation.addUpdateListener(this);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 224,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < dashPattern.size(); i++) {\n  dashPatternAnimations.get(i).addUpdateListener(this);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 51,
    "startColumnNumber" : 20,
    "endLineNumber" : 51,
    "endColumnNumber" : 42
  }, {
    "charLength" : 22,
    "startLineNumber" : 67,
    "startColumnNumber" : 20,
    "endLineNumber" : 67,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}