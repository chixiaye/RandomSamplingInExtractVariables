{
  "id" : 374,
  "expression" : "\"[persistent://prop/use/ns-abc/successTopic]\"",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-broker/src/test/java/org/apache/pulsar/broker/service/persistent/PersistentSubscriptionTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"[persistent://prop/use/ns-abc/successTopic]\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 45,
      "startLineNumber" : 335,
      "startColumnNumber" : 51,
      "endLineNumber" : 335,
      "endColumnNumber" : 96
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 221,
        "startLineNumber" : 335,
        "startColumnNumber" : 51,
        "endLineNumber" : 337,
        "endColumnNumber" : 73
      },
      "nodeContext" : "\"[persistent://prop/use/ns-abc/successTopic]\" + \"[subscriptionName] Transaction:(1,2) try to cumulative batch ack position: \" + \"2:50 within range of current currentPosition: 1:100\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 335,
        "startColumnNumber" : 12,
        "endLineNumber" : 337,
        "endColumnNumber" : 74
      },
      "nodeContext" : "assertEquals(e.getCause().getMessage(),\"[persistent://prop/use/ns-abc/successTopic]\" + \"[subscriptionName] Transaction:(1,2) try to cumulative batch ack position: \" + \"2:50 within range of current currentPosition: 1:100\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 262,
        "startLineNumber" : 335,
        "startColumnNumber" : 12,
        "endLineNumber" : 337,
        "endColumnNumber" : 75
      },
      "nodeContext" : "assertEquals(e.getCause().getMessage(),\"[persistent://prop/use/ns-abc/successTopic]\" + \"[subscriptionName] Transaction:(1,2) try to cumulative batch ack position: \" + \"2:50 within range of current currentPosition: 1:100\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 364,
        "startLineNumber" : 333,
        "startColumnNumber" : 39,
        "endLineNumber" : 338,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  assertTrue(e.getCause() instanceof TransactionConflictException);\n  assertEquals(e.getCause().getMessage(),\"[persistent://prop/use/ns-abc/successTopic]\" + \"[subscriptionName] Transaction:(1,2) try to cumulative batch ack position: \" + \"2:50 within range of current currentPosition: 1:100\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 393,
        "startLineNumber" : 333,
        "startColumnNumber" : 10,
        "endLineNumber" : 338,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (ExecutionException e) {\n  assertTrue(e.getCause() instanceof TransactionConflictException);\n  assertEquals(e.getCause().getMessage(),\"[persistent://prop/use/ns-abc/successTopic]\" + \"[subscriptionName] Transaction:(1,2) try to cumulative batch ack position: \" + \"2:50 within range of current currentPosition: 1:100\");\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 578,
        "startLineNumber" : 330,
        "startColumnNumber" : 8,
        "endLineNumber" : 338,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  persistentSubscription.transactionCumulativeAcknowledge(txnID2,positions).get();\n  fail(\"Cumulative acknowledge for transaction2 should fail. \");\n}\n catch (ExecutionException e) {\n  assertTrue(e.getCause() instanceof TransactionConflictException);\n  assertEquals(e.getCause().getMessage(),\"[persistent://prop/use/ns-abc/successTopic]\" + \"[subscriptionName] Transaction:(1,2) try to cumulative batch ack position: \" + \"2:50 within range of current currentPosition: 1:100\");\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 41,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3765,
        "startLineNumber" : 283,
        "startColumnNumber" : 111,
        "endLineNumber" : 364,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<MutablePair<PositionImpl,Integer>> positionsPair=new ArrayList<>();\n  positionsPair.add(new MutablePair<>(new PositionImpl(2,1),0));\n  positionsPair.add(new MutablePair<>(new PositionImpl(2,3),0));\n  positionsPair.add(new MutablePair<>(new PositionImpl(2,5),0));\n  doAnswer((invocationOnMock) -> {\n    ((AsyncCallbacks.DeleteCallback)invocationOnMock.getArguments()[1]).deleteComplete(invocationOnMock.getArguments()[2]);\n    return null;\n  }\n).when(cursorMock).asyncDelete(any(List.class),any(AsyncCallbacks.DeleteCallback.class),any());\n  doReturn(CommandSubscribe.SubType.Exclusive).when(consumerMock).subType();\n  Awaitility.await().until(() -> {\n    try {\n      persistentSubscription.addConsumer(consumerMock);\n      return true;\n    }\n catch (    Exception e) {\n      return false;\n    }\n  }\n);\n  persistentSubscription.transactionIndividualAcknowledge(txnID1,positionsPair);\n  List<PositionImpl> positions=new ArrayList<>();\n  positions.add(new PositionImpl(1,100));\n  persistentSubscription.transactionCumulativeAcknowledge(txnID1,positions);\n  positions.clear();\n  positions.add(new PositionImpl(2,1));\n  try {\n    persistentSubscription.transactionIndividualAcknowledge(txnID2,positionsPair).get();\n    fail(\"Single acknowledge for transaction2 should fail. \");\n  }\n catch (  ExecutionException e) {\n    assertEquals(e.getCause().getMessage(),\"[persistent://prop/use/ns-abc/successTopic][subscriptionName] \" + \"Transaction:(1,2) try to ack message:2:1 in pending ack status.\");\n  }\n  positions.clear();\n  positions.add(new PositionImpl(2,50));\n  try {\n    persistentSubscription.transactionCumulativeAcknowledge(txnID2,positions).get();\n    fail(\"Cumulative acknowledge for transaction2 should fail. \");\n  }\n catch (  ExecutionException e) {\n    assertTrue(e.getCause() instanceof TransactionConflictException);\n    assertEquals(e.getCause().getMessage(),\"[persistent://prop/use/ns-abc/successTopic]\" + \"[subscriptionName] Transaction:(1,2) try to cumulative batch ack position: \" + \"2:50 within range of current currentPosition: 1:100\");\n  }\n  List<Position> positionList=new ArrayList<>();\n  positionList.add(new PositionImpl(1,1));\n  positionList.add(new PositionImpl(1,3));\n  positionList.add(new PositionImpl(1,5));\n  positionList.add(new PositionImpl(3,1));\n  positionList.add(new PositionImpl(3,3));\n  positionList.add(new PositionImpl(3,5));\n  persistentSubscription.acknowledgeMessage(positionList,AckType.Individual,Collections.emptyMap());\n  persistentSubscription.endTxn(txnID1.getMostSigBits(),txnID2.getLeastSigBits(),TxnAction.ABORT_VALUE,-1);\n  positions.clear();\n  positions.add(new PositionImpl(2,50));\n  persistentSubscription.transactionCumulativeAcknowledge(txnID2,positions);\n  positionsPair.clear();\n  positionsPair.add(new MutablePair(new PositionImpl(2,1),0));\n  persistentSubscription.transactionIndividualAcknowledge(txnID2,positionsPair);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 410,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3882,
        "startLineNumber" : 282,
        "startColumnNumber" : 4,
        "endLineNumber" : 364,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCanAcknowledgeAndAbortForTransaction() throws BrokerServiceException, InterruptedException {\n  List<MutablePair<PositionImpl,Integer>> positionsPair=new ArrayList<>();\n  positionsPair.add(new MutablePair<>(new PositionImpl(2,1),0));\n  positionsPair.add(new MutablePair<>(new PositionImpl(2,3),0));\n  positionsPair.add(new MutablePair<>(new PositionImpl(2,5),0));\n  doAnswer((invocationOnMock) -> {\n    ((AsyncCallbacks.DeleteCallback)invocationOnMock.getArguments()[1]).deleteComplete(invocationOnMock.getArguments()[2]);\n    return null;\n  }\n).when(cursorMock).asyncDelete(any(List.class),any(AsyncCallbacks.DeleteCallback.class),any());\n  doReturn(CommandSubscribe.SubType.Exclusive).when(consumerMock).subType();\n  Awaitility.await().until(() -> {\n    try {\n      persistentSubscription.addConsumer(consumerMock);\n      return true;\n    }\n catch (    Exception e) {\n      return false;\n    }\n  }\n);\n  persistentSubscription.transactionIndividualAcknowledge(txnID1,positionsPair);\n  List<PositionImpl> positions=new ArrayList<>();\n  positions.add(new PositionImpl(1,100));\n  persistentSubscription.transactionCumulativeAcknowledge(txnID1,positions);\n  positions.clear();\n  positions.add(new PositionImpl(2,1));\n  try {\n    persistentSubscription.transactionIndividualAcknowledge(txnID2,positionsPair).get();\n    fail(\"Single acknowledge for transaction2 should fail. \");\n  }\n catch (  ExecutionException e) {\n    assertEquals(e.getCause().getMessage(),\"[persistent://prop/use/ns-abc/successTopic][subscriptionName] \" + \"Transaction:(1,2) try to ack message:2:1 in pending ack status.\");\n  }\n  positions.clear();\n  positions.add(new PositionImpl(2,50));\n  try {\n    persistentSubscription.transactionCumulativeAcknowledge(txnID2,positions).get();\n    fail(\"Cumulative acknowledge for transaction2 should fail. \");\n  }\n catch (  ExecutionException e) {\n    assertTrue(e.getCause() instanceof TransactionConflictException);\n    assertEquals(e.getCause().getMessage(),\"[persistent://prop/use/ns-abc/successTopic]\" + \"[subscriptionName] Transaction:(1,2) try to cumulative batch ack position: \" + \"2:50 within range of current currentPosition: 1:100\");\n  }\n  List<Position> positionList=new ArrayList<>();\n  positionList.add(new PositionImpl(1,1));\n  positionList.add(new PositionImpl(1,3));\n  positionList.add(new PositionImpl(1,5));\n  positionList.add(new PositionImpl(3,1));\n  positionList.add(new PositionImpl(3,3));\n  positionList.add(new PositionImpl(3,5));\n  persistentSubscription.acknowledgeMessage(positionList,AckType.Individual,Collections.emptyMap());\n  persistentSubscription.endTxn(txnID1.getMostSigBits(),txnID2.getLeastSigBits(),TxnAction.ABORT_VALUE,-1);\n  positions.clear();\n  positions.add(new PositionImpl(2,50));\n  persistentSubscription.transactionCumulativeAcknowledge(txnID2,positions);\n  positionsPair.clear();\n  positionsPair.add(new MutablePair(new PositionImpl(2,1),0));\n  persistentSubscription.transactionIndividualAcknowledge(txnID2,positionsPair);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 420,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 221,
        "startLineNumber" : 335,
        "startColumnNumber" : 51,
        "endLineNumber" : 337,
        "endColumnNumber" : 73
      },
      "nodeContext" : "\"[persistent://prop/use/ns-abc/successTopic]\" + \"[subscriptionName] Transaction:(1,2) try to cumulative batch ack position: \" + \"2:50 within range of current currentPosition: 1:100\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 45,
    "startLineNumber" : 335,
    "startColumnNumber" : 51,
    "endLineNumber" : 335,
    "endColumnNumber" : 96
  } ],
  "layoutRelationDataList" : [ ]
}