{
  "id" : 14,
  "expression" : "\", \"",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/integration-tests/hibernate-validator-resteasy-reactive/src/test/java/io/quarkus/it/hibernate/validator/HibernateValidatorFunctionalityTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\", \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 54,
      "startColumnNumber" : 115,
      "endLineNumber" : 54,
      "endColumnNumber" : 119
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 120
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 215,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 102
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 228,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 115
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 344,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 115
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 357,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 128
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 70
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"email (must be a well-formed email address)\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 441,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 83
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"email (must be a well-formed email address)\").append(\", \")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 511,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 69
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"email (must be a well-formed email address)\").append(\", \").append(\"score (must be greater than or equal to 0)\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 28,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 524,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 82
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"email (must be a well-formed email address)\").append(\", \").append(\"score (must be greater than or equal to 0)\").append(\"\\n\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 525,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 83
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"email (must be a well-formed email address)\").append(\", \").append(\"score (must be greater than or equal to 0)\").append(\"\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 32,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 795,
        "startLineNumber" : 52,
        "startColumnNumber" : 36,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringBuilder expected=new StringBuilder();\n  expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"email (must be a well-formed email address)\").append(\", \").append(\"score (must be greater than or equal to 0)\").append(\"\\n\");\n  expected.append(\"passed\");\n  RestAssured.when().get(\"/hibernate-validator/test/basic-features\").then().body(is(expected.toString()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 837,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testBasicFeatures(){\n  StringBuilder expected=new StringBuilder();\n  expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"email (must be a well-formed email address)\").append(\", \").append(\"score (must be greater than or equal to 0)\").append(\"\\n\");\n  expected.append(\"passed\");\n  RestAssured.when().get(\"/hibernate-validator/test/basic-features\").then().body(is(expected.toString()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 68,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 120
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\", \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 55,
      "startColumnNumber" : 110,
      "endLineNumber" : 55,
      "endColumnNumber" : 114
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 228,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 115
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 344,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 115
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 357,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 128
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 70
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"email (must be a well-formed email address)\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 441,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 83
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"email (must be a well-formed email address)\").append(\", \")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 511,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 69
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"email (must be a well-formed email address)\").append(\", \").append(\"score (must be greater than or equal to 0)\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 28,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 524,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 82
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"email (must be a well-formed email address)\").append(\", \").append(\"score (must be greater than or equal to 0)\").append(\"\\n\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 525,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 83
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"email (must be a well-formed email address)\").append(\", \").append(\"score (must be greater than or equal to 0)\").append(\"\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 32,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 795,
        "startLineNumber" : 52,
        "startColumnNumber" : 36,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringBuilder expected=new StringBuilder();\n  expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"email (must be a well-formed email address)\").append(\", \").append(\"score (must be greater than or equal to 0)\").append(\"\\n\");\n  expected.append(\"passed\");\n  RestAssured.when().get(\"/hibernate-validator/test/basic-features\").then().body(is(expected.toString()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 837,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testBasicFeatures(){\n  StringBuilder expected=new StringBuilder();\n  expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"email (must be a well-formed email address)\").append(\", \").append(\"score (must be greater than or equal to 0)\").append(\"\\n\");\n  expected.append(\"passed\");\n  RestAssured.when().get(\"/hibernate-validator/test/basic-features\").then().body(is(expected.toString()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 68,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 228,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 115
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\", \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 56,
      "startColumnNumber" : 123,
      "endLineNumber" : 56,
      "endColumnNumber" : 127
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 357,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 128
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 70
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"email (must be a well-formed email address)\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 441,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 83
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"email (must be a well-formed email address)\").append(\", \")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 511,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 69
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"email (must be a well-formed email address)\").append(\", \").append(\"score (must be greater than or equal to 0)\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 28,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 524,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 82
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"email (must be a well-formed email address)\").append(\", \").append(\"score (must be greater than or equal to 0)\").append(\"\\n\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 525,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 83
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"email (must be a well-formed email address)\").append(\", \").append(\"score (must be greater than or equal to 0)\").append(\"\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 32,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 795,
        "startLineNumber" : 52,
        "startColumnNumber" : 36,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringBuilder expected=new StringBuilder();\n  expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"email (must be a well-formed email address)\").append(\", \").append(\"score (must be greater than or equal to 0)\").append(\"\\n\");\n  expected.append(\"passed\");\n  RestAssured.when().get(\"/hibernate-validator/test/basic-features\").then().body(is(expected.toString()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 837,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testBasicFeatures(){\n  StringBuilder expected=new StringBuilder();\n  expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"email (must be a well-formed email address)\").append(\", \").append(\"score (must be greater than or equal to 0)\").append(\"\\n\");\n  expected.append(\"passed\");\n  RestAssured.when().get(\"/hibernate-validator/test/basic-features\").then().body(is(expected.toString()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 68,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 357,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 128
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\", \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 57,
      "startColumnNumber" : 78,
      "endLineNumber" : 57,
      "endColumnNumber" : 82
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 441,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 83
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"email (must be a well-formed email address)\").append(\", \")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 511,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 69
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"email (must be a well-formed email address)\").append(\", \").append(\"score (must be greater than or equal to 0)\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 28,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 524,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 82
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"email (must be a well-formed email address)\").append(\", \").append(\"score (must be greater than or equal to 0)\").append(\"\\n\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 525,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 83
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"email (must be a well-formed email address)\").append(\", \").append(\"score (must be greater than or equal to 0)\").append(\"\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 32,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 795,
        "startLineNumber" : 52,
        "startColumnNumber" : 36,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringBuilder expected=new StringBuilder();\n  expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"email (must be a well-formed email address)\").append(\", \").append(\"score (must be greater than or equal to 0)\").append(\"\\n\");\n  expected.append(\"passed\");\n  RestAssured.when().get(\"/hibernate-validator/test/basic-features\").then().body(is(expected.toString()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 837,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testBasicFeatures(){\n  StringBuilder expected=new StringBuilder();\n  expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"email (must be a well-formed email address)\").append(\", \").append(\"score (must be greater than or equal to 0)\").append(\"\\n\");\n  expected.append(\"passed\");\n  RestAssured.when().get(\"/hibernate-validator/test/basic-features\").then().body(is(expected.toString()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 68,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 441,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 83
      },
      "nodeContext" : "expected.append(\"failed: additionalEmails[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"categorizedEmails<K>[a].<map key> (length must be between 3 and 2147483647)\").append(\", \").append(\"categorizedEmails[a].<map value>[0].<list element> (must be a well-formed email address)\").append(\", \").append(\"email (must be a well-formed email address)\").append(\", \")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 9
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 54,
    "startColumnNumber" : 115,
    "endLineNumber" : 54,
    "endColumnNumber" : 119
  }, {
    "charLength" : 4,
    "startLineNumber" : 55,
    "startColumnNumber" : 110,
    "endLineNumber" : 55,
    "endColumnNumber" : 114
  }, {
    "charLength" : 4,
    "startLineNumber" : 56,
    "startColumnNumber" : 123,
    "endLineNumber" : 56,
    "endColumnNumber" : 127
  }, {
    "charLength" : 4,
    "startLineNumber" : 57,
    "startColumnNumber" : 78,
    "endLineNumber" : 57,
    "endColumnNumber" : 82
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 0
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 0
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 0
  } ]
}