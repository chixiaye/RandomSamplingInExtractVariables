{
  "id" : 12,
  "expression" : "(Serializer<Inner>)((Serde)Utils.newInstance((Class)innerSerdeClassOrName)).serializer()",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/main/java/org/apache/kafka/common/serialization/ListSerializer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(Serializer<Inner>)((Serde)Utils.newInstance((Class)innerSerdeClassOrName)).serializer()",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 91,
      "startLineNumber" : 82,
      "startColumnNumber" : 24,
      "endLineNumber" : 82,
      "endColumnNumber" : 115
    },
    "astNodeNumber" : 19,
    "astHeight" : 8,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 82,
        "startColumnNumber" : 16,
        "endLineNumber" : 82,
        "endColumnNumber" : 115
      },
      "nodeContext" : "inner=(Serializer<Inner>)((Serde)Utils.newInstance((Class)innerSerdeClassOrName)).serializer()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 21,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 82,
        "startColumnNumber" : 16,
        "endLineNumber" : 82,
        "endColumnNumber" : 116
      },
      "nodeContext" : "inner=(Serializer<Inner>)((Serde)Utils.newInstance((Class)innerSerdeClassOrName)).serializer();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 81,
        "startColumnNumber" : 63,
        "endLineNumber" : 83,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  inner=(Serializer<Inner>)((Serde)Utils.newInstance((Class)innerSerdeClassOrName)).serializer();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 338,
        "startLineNumber" : 81,
        "startColumnNumber" : 19,
        "endLineNumber" : 85,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (innerSerdeClassOrName instanceof Class) {\n  inner=(Serializer<Inner>)((Serde)Utils.newInstance((Class)innerSerdeClassOrName)).serializer();\n}\n else {\n  throw new KafkaException(\"Could not create a serializer class instance using \\\"\" + innerSerdePropertyName + \"\\\" property.\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 505,
        "startLineNumber" : 79,
        "startColumnNumber" : 12,
        "endLineNumber" : 85,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (innerSerdeClassOrName instanceof String) {\n  inner=Utils.newInstance((String)innerSerdeClassOrName,Serde.class).serializer();\n}\n else if (innerSerdeClassOrName instanceof Class) {\n  inner=(Serializer<Inner>)((Serde)Utils.newInstance((Class)innerSerdeClassOrName)).serializer();\n}\n else {\n  throw new KafkaException(\"Could not create a serializer class instance using \\\"\" + innerSerdePropertyName + \"\\\" property.\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 58,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 729,
        "startLineNumber" : 78,
        "startColumnNumber" : 12,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (innerSerdeClassOrName instanceof String) {\n    inner=Utils.newInstance((String)innerSerdeClassOrName,Serde.class).serializer();\n  }\n else   if (innerSerdeClassOrName instanceof Class) {\n    inner=(Serializer<Inner>)((Serde)Utils.newInstance((Class)innerSerdeClassOrName)).serializer();\n  }\n else {\n    throw new KafkaException(\"Could not create a serializer class instance using \\\"\" + innerSerdePropertyName + \"\\\" property.\");\n  }\n  inner.configure(configs,isKey);\n  serStrategy=FIXED_LENGTH_SERIALIZERS.contains(inner.getClass()) ? SerializationStrategy.CONSTANT_SIZE : SerializationStrategy.VARIABLE_SIZE;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 940,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (innerSerdeClassOrName instanceof String) {\n    inner=Utils.newInstance((String)innerSerdeClassOrName,Serde.class).serializer();\n  }\n else   if (innerSerdeClassOrName instanceof Class) {\n    inner=(Serializer<Inner>)((Serde)Utils.newInstance((Class)innerSerdeClassOrName)).serializer();\n  }\n else {\n    throw new KafkaException(\"Could not create a serializer class instance using \\\"\" + innerSerdePropertyName + \"\\\" property.\");\n  }\n  inner.configure(configs,isKey);\n  serStrategy=FIXED_LENGTH_SERIALIZERS.contains(inner.getClass()) ? SerializationStrategy.CONSTANT_SIZE : SerializationStrategy.VARIABLE_SIZE;\n}\n catch (final ClassNotFoundException e) {\n  throw new ConfigException(innerSerdePropertyName,innerSerdeClassOrName,\"Serializer class \" + innerSerdeClassOrName + \" could not be found.\");\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 99,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1692,
        "startLineNumber" : 68,
        "startColumnNumber" : 65,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (inner != null) {\n    log.error(\"Could not configure ListSerializer as the parameter has already been set -- inner: {}\",inner);\n    throw new ConfigException(\"List serializer was already initialized using a non-default constructor\");\n  }\n  final String innerSerdePropertyName=isKey ? CommonClientConfigs.DEFAULT_LIST_KEY_SERDE_INNER_CLASS : CommonClientConfigs.DEFAULT_LIST_VALUE_SERDE_INNER_CLASS;\n  final Object innerSerdeClassOrName=configs.get(innerSerdePropertyName);\n  if (innerSerdeClassOrName == null) {\n    throw new ConfigException(\"Not able to determine the serializer class because it was neither passed via the constructor nor set in the config.\");\n  }\n  try {\n    if (innerSerdeClassOrName instanceof String) {\n      inner=Utils.newInstance((String)innerSerdeClassOrName,Serde.class).serializer();\n    }\n else     if (innerSerdeClassOrName instanceof Class) {\n      inner=(Serializer<Inner>)((Serde)Utils.newInstance((Class)innerSerdeClassOrName)).serializer();\n    }\n else {\n      throw new KafkaException(\"Could not create a serializer class instance using \\\"\" + innerSerdePropertyName + \"\\\" property.\");\n    }\n    inner.configure(configs,isKey);\n    serStrategy=FIXED_LENGTH_SERIALIZERS.contains(inner.getClass()) ? SerializationStrategy.CONSTANT_SIZE : SerializationStrategy.VARIABLE_SIZE;\n  }\n catch (  final ClassNotFoundException e) {\n    throw new ConfigException(innerSerdePropertyName,innerSerdeClassOrName,\"Serializer class \" + innerSerdeClassOrName + \" could not be found.\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 150,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1802,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") @Override public void configure(Map<String,?> configs,boolean isKey){\n  if (inner != null) {\n    log.error(\"Could not configure ListSerializer as the parameter has already been set -- inner: {}\",inner);\n    throw new ConfigException(\"List serializer was already initialized using a non-default constructor\");\n  }\n  final String innerSerdePropertyName=isKey ? CommonClientConfigs.DEFAULT_LIST_KEY_SERDE_INNER_CLASS : CommonClientConfigs.DEFAULT_LIST_VALUE_SERDE_INNER_CLASS;\n  final Object innerSerdeClassOrName=configs.get(innerSerdePropertyName);\n  if (innerSerdeClassOrName == null) {\n    throw new ConfigException(\"Not able to determine the serializer class because it was neither passed via the constructor nor set in the config.\");\n  }\n  try {\n    if (innerSerdeClassOrName instanceof String) {\n      inner=Utils.newInstance((String)innerSerdeClassOrName,Serde.class).serializer();\n    }\n else     if (innerSerdeClassOrName instanceof Class) {\n      inner=(Serializer<Inner>)((Serde)Utils.newInstance((Class)innerSerdeClassOrName)).serializer();\n    }\n else {\n      throw new KafkaException(\"Could not create a serializer class instance using \\\"\" + innerSerdePropertyName + \"\\\" property.\");\n    }\n    inner.configure(configs,isKey);\n    serStrategy=FIXED_LENGTH_SERIALIZERS.contains(inner.getClass()) ? SerializationStrategy.CONSTANT_SIZE : SerializationStrategy.VARIABLE_SIZE;\n  }\n catch (  final ClassNotFoundException e) {\n    throw new ConfigException(innerSerdePropertyName,innerSerdeClassOrName,\"Serializer class \" + innerSerdeClassOrName + \" could not be found.\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 170,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 82,
        "startColumnNumber" : 16,
        "endLineNumber" : 82,
        "endColumnNumber" : 116
      },
      "nodeContext" : "inner=(Serializer<Inner>)((Serde)Utils.newInstance((Class)innerSerdeClassOrName)).serializer();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 10
    },
    "tokenLength" : 7,
    "type" : "org.apache.kafka.common.serialization.Serializer<Inner>"
  } ],
  "positionList" : [ {
    "charLength" : 91,
    "startLineNumber" : 82,
    "startColumnNumber" : 24,
    "endLineNumber" : 82,
    "endColumnNumber" : 115
  } ],
  "layoutRelationDataList" : [ ]
}