{
  "id" : 243,
  "expression" : "allowRedirect",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Framework/Generic/src/main/java/ghidra/net/http/HttpUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "allowRedirect",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 59,
      "startColumnNumber" : 6,
      "endLineNumber" : 59,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (allowRedirect) {\n  c.setInstanceFollowRedirects(true);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1791,
        "startLineNumber" : 39,
        "startColumnNumber" : 15,
        "endLineNumber" : 92,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  URL url=new URL(httpUrlString);\n  String protocol=url.getProtocol();\n  if (\"https\".equals(protocol)) {\n    if (!ApplicationKeyManagerFactory.initialize()) {\n      if (ApplicationKeyManagerFactory.getKeyStore() != null) {\n        throw new IOException(\"Failed to initialize PKI certificate keystore\");\n      }\n    }\n  }\n else   if (!\"http\".equals(protocol)) {\n    throw new MalformedURLException(\"Unsupported protocol: \" + protocol);\n  }\n  HttpURLConnection c=(HttpURLConnection)url.openConnection();\n  if (allowRedirect) {\n    c.setInstanceFollowRedirects(true);\n  }\n  c.setRequestMethod(\"GET\");\n  if (httpRequestProperties != null) {\n    for (    String name : httpRequestProperties.stringPropertyNames()) {\n      c.setRequestProperty(name,httpRequestProperties.getProperty(name));\n    }\n  }\n  int rc=c.getResponseCode();\n  if (rc != HttpURLConnection.HTTP_OK) {\n    throw new IOException(c.getResponseMessage());\n  }\n  Msg.info(HttpUtil.class,\"Get URL content: \" + url);\n  if (!url.equals(c.getURL())) {\n    Msg.info(HttpUtil.class,\"Actual URL: \" + c.getURL());\n  }\n  Msg.info(HttpUtil.class,\" > Content-Type=\" + c.getHeaderField(\"Content-Type\"));\n  String contentLengthStr=c.getHeaderField(\"Content-Length\");\n  if (contentLengthStr == null) {\n    c.disconnect();\n    String encodingStr=c.getHeaderField(\"Transfer-Encoding\");\n    if (encodingStr != null) {\n      throw new IOException(\"Unsupport HTTP transfer encoding: \" + encodingStr);\n    }\n    throw new IOException(\"Unsupported HTTP transfer (Content-Length not specified)\");\n  }\n  Msg.info(HttpUtil.class,\" > Content-Length=\" + contentLengthStr);\n  return c;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 224,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2470,
        "startLineNumber" : 28,
        "startColumnNumber" : 1,
        "endLineNumber" : 92,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Execute an HTTP/HTTPS GET request and return the resulting HttpURLConnection.\n * @param httpUrlString HTTP/HTTPS URL\n * @param httpRequestProperties optional HTTP request header values to be included (may be null)\n * @param allowRedirect allow site redirects to be handled if true\n * @return HttpURLConnection which contains information about the URL\n * @throws MalformedURLException bad httpUrlString specified\n * @throws IOException if an error occurs while executing request\n */\npublic static HttpURLConnection getContent(String httpUrlString,Properties httpRequestProperties,boolean allowRedirect) throws MalformedURLException, IOException {\n  URL url=new URL(httpUrlString);\n  String protocol=url.getProtocol();\n  if (\"https\".equals(protocol)) {\n    if (!ApplicationKeyManagerFactory.initialize()) {\n      if (ApplicationKeyManagerFactory.getKeyStore() != null) {\n        throw new IOException(\"Failed to initialize PKI certificate keystore\");\n      }\n    }\n  }\n else   if (!\"http\".equals(protocol)) {\n    throw new MalformedURLException(\"Unsupported protocol: \" + protocol);\n  }\n  HttpURLConnection c=(HttpURLConnection)url.openConnection();\n  if (allowRedirect) {\n    c.setInstanceFollowRedirects(true);\n  }\n  c.setRequestMethod(\"GET\");\n  if (httpRequestProperties != null) {\n    for (    String name : httpRequestProperties.stringPropertyNames()) {\n      c.setRequestProperty(name,httpRequestProperties.getProperty(name));\n    }\n  }\n  int rc=c.getResponseCode();\n  if (rc != HttpURLConnection.HTTP_OK) {\n    throw new IOException(c.getResponseMessage());\n  }\n  Msg.info(HttpUtil.class,\"Get URL content: \" + url);\n  if (!url.equals(c.getURL())) {\n    Msg.info(HttpUtil.class,\"Actual URL: \" + c.getURL());\n  }\n  Msg.info(HttpUtil.class,\" > Content-Type=\" + c.getHeaderField(\"Content-Type\"));\n  String contentLengthStr=c.getHeaderField(\"Content-Length\");\n  if (contentLengthStr == null) {\n    c.disconnect();\n    String encodingStr=c.getHeaderField(\"Transfer-Encoding\");\n    if (encodingStr != null) {\n      throw new IOException(\"Unsupport HTTP transfer encoding: \" + encodingStr);\n    }\n    throw new IOException(\"Unsupported HTTP transfer (Content-Length not specified)\");\n  }\n  Msg.info(HttpUtil.class,\" > Content-Length=\" + contentLengthStr);\n  return c;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 246,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (allowRedirect) {\n  c.setInstanceFollowRedirects(true);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 59,
    "startColumnNumber" : 6,
    "endLineNumber" : 59,
    "endColumnNumber" : 19
  } ],
  "layoutRelationDataList" : [ ]
}