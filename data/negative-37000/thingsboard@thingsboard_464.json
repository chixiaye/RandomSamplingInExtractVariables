{
  "id" : 464,
  "expression" : "\"USER\"",
  "projectName" : "thingsboard@thingsboard",
  "commitID" : "7c2b3a9fbf84cc58aa7546029c5c7c10a662c55a",
  "filePath" : "/rule-engine/rule-engine-components/src/test/java/org/thingsboard/rule/engine/mail/TbMsgToEmailNodeTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"USER\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 66,
      "startColumnNumber" : 34,
      "endLineNumber" : 66,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 66,
        "startColumnNumber" : 20,
        "endLineNumber" : 66,
        "endColumnNumber" : 117
      },
      "nodeContext" : "TbMsg.newMsg(\"USER\",originator,metaData,TbMsgDataType.JSON,rawJson,ruleChainId,ruleNodeId)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 66,
        "startColumnNumber" : 14,
        "endLineNumber" : 66,
        "endColumnNumber" : 117
      },
      "nodeContext" : "msg=TbMsg.newMsg(\"USER\",originator,metaData,TbMsgDataType.JSON,rawJson,ruleChainId,ruleNodeId)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 118
      },
      "nodeContext" : "TbMsg msg=TbMsg.newMsg(\"USER\",originator,metaData,TbMsgDataType.JSON,rawJson,ruleChainId,ruleNodeId);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1671,
        "startLineNumber" : 59,
        "startColumnNumber" : 55,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  initWithScript();\n  metaData.putValue(\"username\",\"oreo\");\n  metaData.putValue(\"userEmail\",\"user@email.io\");\n  metaData.putValue(\"name\",\"temp\");\n  metaData.putValue(\"passed\",\"5\");\n  metaData.putValue(\"count\",\"100\");\n  TbMsg msg=TbMsg.newMsg(\"USER\",originator,metaData,TbMsgDataType.JSON,rawJson,ruleChainId,ruleNodeId);\n  emailNode.onMsg(ctx,msg);\n  ArgumentCaptor<TbMsg> msgCaptor=ArgumentCaptor.forClass(TbMsg.class);\n  ArgumentCaptor<String> typeCaptor=ArgumentCaptor.forClass(String.class);\n  ArgumentCaptor<EntityId> originatorCaptor=ArgumentCaptor.forClass(EntityId.class);\n  ArgumentCaptor<TbMsgMetaData> metadataCaptor=ArgumentCaptor.forClass(TbMsgMetaData.class);\n  ArgumentCaptor<String> dataCaptor=ArgumentCaptor.forClass(String.class);\n  verify(ctx).transformMsg(msgCaptor.capture(),typeCaptor.capture(),originatorCaptor.capture(),metadataCaptor.capture(),dataCaptor.capture());\n  assertEquals(\"SEND_EMAIL\",typeCaptor.getValue());\n  assertEquals(originator,originatorCaptor.getValue());\n  assertEquals(\"oreo\",metadataCaptor.getValue().getValue(\"username\"));\n  assertNotSame(metaData,metadataCaptor.getValue());\n  TbEmail actual=new ObjectMapper().readValue(dataCaptor.getValue().getBytes(),TbEmail.class);\n  TbEmail expected=TbEmail.builder().from(\"test@mail.org\").to(\"user@email.io\").subject(\"Hi oreo there\").body(\"temp is to high. Current 5 and 100\").build();\n  assertEquals(expected,actual);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 224,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1732,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void msgCanBeConverted() throws IOException {\n  initWithScript();\n  metaData.putValue(\"username\",\"oreo\");\n  metaData.putValue(\"userEmail\",\"user@email.io\");\n  metaData.putValue(\"name\",\"temp\");\n  metaData.putValue(\"passed\",\"5\");\n  metaData.putValue(\"count\",\"100\");\n  TbMsg msg=TbMsg.newMsg(\"USER\",originator,metaData,TbMsgDataType.JSON,rawJson,ruleChainId,ruleNodeId);\n  emailNode.onMsg(ctx,msg);\n  ArgumentCaptor<TbMsg> msgCaptor=ArgumentCaptor.forClass(TbMsg.class);\n  ArgumentCaptor<String> typeCaptor=ArgumentCaptor.forClass(String.class);\n  ArgumentCaptor<EntityId> originatorCaptor=ArgumentCaptor.forClass(EntityId.class);\n  ArgumentCaptor<TbMsgMetaData> metadataCaptor=ArgumentCaptor.forClass(TbMsgMetaData.class);\n  ArgumentCaptor<String> dataCaptor=ArgumentCaptor.forClass(String.class);\n  verify(ctx).transformMsg(msgCaptor.capture(),typeCaptor.capture(),originatorCaptor.capture(),metadataCaptor.capture(),dataCaptor.capture());\n  assertEquals(\"SEND_EMAIL\",typeCaptor.getValue());\n  assertEquals(originator,originatorCaptor.getValue());\n  assertEquals(\"oreo\",metadataCaptor.getValue().getValue(\"username\"));\n  assertNotSame(metaData,metadataCaptor.getValue());\n  TbEmail actual=new ObjectMapper().readValue(dataCaptor.getValue().getBytes(),TbEmail.class);\n  TbEmail expected=TbEmail.builder().from(\"test@mail.org\").to(\"user@email.io\").subject(\"Hi oreo there\").body(\"temp is to high. Current 5 and 100\").build();\n  assertEquals(expected,actual);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 232,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 118
      },
      "nodeContext" : "TbMsg msg=TbMsg.newMsg(\"USER\",originator,metaData,TbMsgDataType.JSON,rawJson,ruleChainId,ruleNodeId);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 66,
    "startColumnNumber" : 34,
    "endLineNumber" : 66,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}