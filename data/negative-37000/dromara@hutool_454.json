{
  "id" : 454,
  "expression" : "InternetAddress",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-extra/src/main/java/cn/hutool/extra/mail/InternalMailUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "InternetAddress",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 72,
      "startColumnNumber" : 15,
      "endLineNumber" : 72,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 72,
        "startColumnNumber" : 15,
        "endLineNumber" : 72,
        "endColumnNumber" : 45
      },
      "nodeContext" : "InternetAddress.parse(address)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 72,
        "startColumnNumber" : 3,
        "endLineNumber" : 72,
        "endColumnNumber" : 45
      },
      "nodeContext" : "addresses=InternetAddress.parse(address)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 72,
        "startColumnNumber" : 3,
        "endLineNumber" : 72,
        "endColumnNumber" : 46
      },
      "nodeContext" : "addresses=InternetAddress.parse(address);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 71,
        "startColumnNumber" : 6,
        "endLineNumber" : 73,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  addresses=InternetAddress.parse(address);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 71,
        "startColumnNumber" : 2,
        "endLineNumber" : 75,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  addresses=InternetAddress.parse(address);\n}\n catch (AddressException e) {\n  throw new MailException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 490,
        "startLineNumber" : 69,
        "startColumnNumber" : 79,
        "endLineNumber" : 88,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  InternetAddress[] addresses;\n  try {\n    addresses=InternetAddress.parse(address);\n  }\n catch (  AddressException e) {\n    throw new MailException(e);\n  }\n  if (ArrayUtil.isNotEmpty(addresses)) {\n    for (    InternetAddress internetAddress : addresses) {\n      try {\n        internetAddress.setPersonal(internetAddress.getPersonal(),charset.name());\n      }\n catch (      UnsupportedEncodingException e) {\n        throw new MailException(e);\n      }\n    }\n  }\n  return addresses;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 702,
        "startLineNumber" : 61,
        "startColumnNumber" : 1,
        "endLineNumber" : 88,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 将一个地址字符串解析为多个地址<br> 地址间使用\" \"、\",\"、\";\"分隔\n * @param address 地址字符串\n * @param charset 编码\n * @return 地址列表\n */\npublic static InternetAddress[] parseAddress(String address,Charset charset){\n  InternetAddress[] addresses;\n  try {\n    addresses=InternetAddress.parse(address);\n  }\n catch (  AddressException e) {\n    throw new MailException(e);\n  }\n  if (ArrayUtil.isNotEmpty(addresses)) {\n    for (    InternetAddress internetAddress : addresses) {\n      try {\n        internetAddress.setPersonal(internetAddress.getPersonal(),charset.name());\n      }\n catch (      UnsupportedEncodingException e) {\n        throw new MailException(e);\n      }\n    }\n  }\n  return addresses;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 83,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 72,
        "startColumnNumber" : 3,
        "endLineNumber" : 72,
        "endColumnNumber" : 46
      },
      "nodeContext" : "addresses=InternetAddress.parse(address);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 72,
    "startColumnNumber" : 15,
    "endLineNumber" : 72,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}