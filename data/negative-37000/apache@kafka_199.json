{
  "id" : 199,
  "expression" : "0",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/generator/src/main/java/org/apache/kafka/message/HeaderGenerator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 74,
      "startColumnNumber" : 21,
      "endLineNumber" : 74,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 74,
        "startColumnNumber" : 17,
        "endLineNumber" : 74,
        "endColumnNumber" : 22
      },
      "nodeContext" : "i=0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 74,
        "startColumnNumber" : 13,
        "endLineNumber" : 74,
        "endColumnNumber" : 22
      },
      "nodeContext" : "int i=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < HEADER.length; i++) {\n  buffer.printf(\"%s%n\",HEADER[i]);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 591,
        "startLineNumber" : 72,
        "startColumnNumber" : 27,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Objects.requireNonNull(packageName);\n  for (int i=0; i < HEADER.length; i++) {\n    buffer.printf(\"%s%n\",HEADER[i]);\n  }\n  buffer.printf(\"package %s;%n\",packageName);\n  buffer.printf(\"%n\");\n  for (  String newImport : imports) {\n    buffer.printf(\"import %s;%n\",newImport);\n  }\n  buffer.printf(\"%n\");\n  if (!staticImports.isEmpty()) {\n    for (    String newImport : staticImports) {\n      buffer.printf(\"import static %s;%n\",newImport);\n    }\n    buffer.printf(\"%n\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 614,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void generate(){\n  Objects.requireNonNull(packageName);\n  for (int i=0; i < HEADER.length; i++) {\n    buffer.printf(\"%s%n\",HEADER[i]);\n  }\n  buffer.printf(\"package %s;%n\",packageName);\n  buffer.printf(\"%n\");\n  for (  String newImport : imports) {\n    buffer.printf(\"import %s;%n\",newImport);\n  }\n  buffer.printf(\"%n\");\n  if (!staticImports.isEmpty()) {\n    for (    String newImport : staticImports) {\n      buffer.printf(\"import static %s;%n\",newImport);\n    }\n    buffer.printf(\"%n\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 85,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 74,
        "startColumnNumber" : 13,
        "endLineNumber" : 74,
        "endColumnNumber" : 22
      },
      "nodeContext" : "int i=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 74,
    "startColumnNumber" : 21,
    "endLineNumber" : 74,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ ]
}