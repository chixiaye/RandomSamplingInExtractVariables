{
  "id" : 6,
  "expression" : "downstreamName",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/test/src/test/java/jenkins/triggers/ReverseBuildTriggerTest.java",
  "occurrences" : 15,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "downstreamName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 103,
      "startColumnNumber" : 63,
      "endLineNumber" : 103,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 103,
        "startColumnNumber" : 38,
        "endLineNumber" : 103,
        "endColumnNumber" : 78
      },
      "nodeContext" : "r.createFreeStyleProject(downstreamName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 103,
        "startColumnNumber" : 25,
        "endLineNumber" : 103,
        "endColumnNumber" : 78
      },
      "nodeContext" : "downstream=r.createFreeStyleProject(downstreamName)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 103,
        "startColumnNumber" : 8,
        "endLineNumber" : 103,
        "endColumnNumber" : 79
      },
      "nodeContext" : "FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6589,
        "startLineNumber" : 93,
        "startColumnNumber" : 65,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n  MockAuthorizationStrategy auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  String upstreamName=\"upstr3am\";\n  final FreeStyleProject upstream=r.createFreeStyleProject(upstreamName);\n  String downstreamName=\"d0wnstr3am\";\n  FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\").grant(Item.READ).onItems(upstream).to(\"bob\");\n  @SuppressWarnings(\"rawtypes\") Trigger<Job> t=new ReverseBuildTrigger(upstreamName,Result.SUCCESS);\n  downstream.addTrigger(t);\n  t.start(downstream,true);\n  r.jenkins.rebuildDependencyGraph();\n  assertEquals(Collections.singletonList(downstream),upstream.getDownstreamProjects());\n  FreeStyleBuild b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertNotNull(JenkinsRule.getLog(b),downstream.getLastBuild());\n  assertEquals(1,downstream.getLastBuild().number);\n  Map<String,org.acegisecurity.Authentication> qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"alice\",\"bob\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(2,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").grant(Item.READ).onItems(upstream).to(\"bob\").grant(Item.DISCOVER).onItems(upstream).to(\"alice\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"bob\");\n  auth.grant(Item.DISCOVER).onItems(upstream).to(\"anonymous\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.assertLogNotContains(\"Please login to access job \" + upstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 782,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 6710,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @see BuildTriggerTest#downstreamProjectSecurity \n */\n@Test public void upstreamProjectSecurity() throws Exception {\n  r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n  MockAuthorizationStrategy auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  String upstreamName=\"upstr3am\";\n  final FreeStyleProject upstream=r.createFreeStyleProject(upstreamName);\n  String downstreamName=\"d0wnstr3am\";\n  FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\").grant(Item.READ).onItems(upstream).to(\"bob\");\n  @SuppressWarnings(\"rawtypes\") Trigger<Job> t=new ReverseBuildTrigger(upstreamName,Result.SUCCESS);\n  downstream.addTrigger(t);\n  t.start(downstream,true);\n  r.jenkins.rebuildDependencyGraph();\n  assertEquals(Collections.singletonList(downstream),upstream.getDownstreamProjects());\n  FreeStyleBuild b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertNotNull(JenkinsRule.getLog(b),downstream.getLastBuild());\n  assertEquals(1,downstream.getLastBuild().number);\n  Map<String,org.acegisecurity.Authentication> qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"alice\",\"bob\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(2,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").grant(Item.READ).onItems(upstream).to(\"bob\").grant(Item.DISCOVER).onItems(upstream).to(\"alice\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"bob\");\n  auth.grant(Item.DISCOVER).onItems(upstream).to(\"anonymous\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.assertLogNotContains(\"Please login to access job \" + upstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 791,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 103,
        "startColumnNumber" : 8,
        "endLineNumber" : 103,
        "endColumnNumber" : 79
      },
      "nodeContext" : "FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "downstreamName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 114,
      "startColumnNumber" : 28,
      "endLineNumber" : 114,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 114,
        "startColumnNumber" : 8,
        "endLineNumber" : 114,
        "endColumnNumber" : 46
      },
      "nodeContext" : "r.assertLogContains(downstreamName,b)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 114,
        "startColumnNumber" : 8,
        "endLineNumber" : 114,
        "endColumnNumber" : 47
      },
      "nodeContext" : "r.assertLogContains(downstreamName,b);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6589,
        "startLineNumber" : 93,
        "startColumnNumber" : 65,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n  MockAuthorizationStrategy auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  String upstreamName=\"upstr3am\";\n  final FreeStyleProject upstream=r.createFreeStyleProject(upstreamName);\n  String downstreamName=\"d0wnstr3am\";\n  FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\").grant(Item.READ).onItems(upstream).to(\"bob\");\n  @SuppressWarnings(\"rawtypes\") Trigger<Job> t=new ReverseBuildTrigger(upstreamName,Result.SUCCESS);\n  downstream.addTrigger(t);\n  t.start(downstream,true);\n  r.jenkins.rebuildDependencyGraph();\n  assertEquals(Collections.singletonList(downstream),upstream.getDownstreamProjects());\n  FreeStyleBuild b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertNotNull(JenkinsRule.getLog(b),downstream.getLastBuild());\n  assertEquals(1,downstream.getLastBuild().number);\n  Map<String,org.acegisecurity.Authentication> qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"alice\",\"bob\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(2,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").grant(Item.READ).onItems(upstream).to(\"bob\").grant(Item.DISCOVER).onItems(upstream).to(\"alice\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"bob\");\n  auth.grant(Item.DISCOVER).onItems(upstream).to(\"anonymous\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.assertLogNotContains(\"Please login to access job \" + upstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 782,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 6710,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @see BuildTriggerTest#downstreamProjectSecurity \n */\n@Test public void upstreamProjectSecurity() throws Exception {\n  r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n  MockAuthorizationStrategy auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  String upstreamName=\"upstr3am\";\n  final FreeStyleProject upstream=r.createFreeStyleProject(upstreamName);\n  String downstreamName=\"d0wnstr3am\";\n  FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\").grant(Item.READ).onItems(upstream).to(\"bob\");\n  @SuppressWarnings(\"rawtypes\") Trigger<Job> t=new ReverseBuildTrigger(upstreamName,Result.SUCCESS);\n  downstream.addTrigger(t);\n  t.start(downstream,true);\n  r.jenkins.rebuildDependencyGraph();\n  assertEquals(Collections.singletonList(downstream),upstream.getDownstreamProjects());\n  FreeStyleBuild b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertNotNull(JenkinsRule.getLog(b),downstream.getLastBuild());\n  assertEquals(1,downstream.getLastBuild().number);\n  Map<String,org.acegisecurity.Authentication> qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"alice\",\"bob\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(2,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").grant(Item.READ).onItems(upstream).to(\"bob\").grant(Item.DISCOVER).onItems(upstream).to(\"alice\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"bob\");\n  auth.grant(Item.DISCOVER).onItems(upstream).to(\"anonymous\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.assertLogNotContains(\"Please login to access job \" + upstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 791,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 114,
        "startColumnNumber" : 8,
        "endLineNumber" : 114,
        "endColumnNumber" : 47
      },
      "nodeContext" : "r.assertLogContains(downstreamName,b);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "downstreamName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 121,
      "startColumnNumber" : 22,
      "endLineNumber" : 121,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 121,
        "startColumnNumber" : 8,
        "endLineNumber" : 121,
        "endColumnNumber" : 56
      },
      "nodeContext" : "qiaConfig.put(downstreamName,Jenkins.ANONYMOUS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 121,
        "startColumnNumber" : 8,
        "endLineNumber" : 121,
        "endColumnNumber" : 57
      },
      "nodeContext" : "qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6589,
        "startLineNumber" : 93,
        "startColumnNumber" : 65,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n  MockAuthorizationStrategy auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  String upstreamName=\"upstr3am\";\n  final FreeStyleProject upstream=r.createFreeStyleProject(upstreamName);\n  String downstreamName=\"d0wnstr3am\";\n  FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\").grant(Item.READ).onItems(upstream).to(\"bob\");\n  @SuppressWarnings(\"rawtypes\") Trigger<Job> t=new ReverseBuildTrigger(upstreamName,Result.SUCCESS);\n  downstream.addTrigger(t);\n  t.start(downstream,true);\n  r.jenkins.rebuildDependencyGraph();\n  assertEquals(Collections.singletonList(downstream),upstream.getDownstreamProjects());\n  FreeStyleBuild b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertNotNull(JenkinsRule.getLog(b),downstream.getLastBuild());\n  assertEquals(1,downstream.getLastBuild().number);\n  Map<String,org.acegisecurity.Authentication> qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"alice\",\"bob\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(2,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").grant(Item.READ).onItems(upstream).to(\"bob\").grant(Item.DISCOVER).onItems(upstream).to(\"alice\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"bob\");\n  auth.grant(Item.DISCOVER).onItems(upstream).to(\"anonymous\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.assertLogNotContains(\"Please login to access job \" + upstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 782,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 6710,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @see BuildTriggerTest#downstreamProjectSecurity \n */\n@Test public void upstreamProjectSecurity() throws Exception {\n  r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n  MockAuthorizationStrategy auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  String upstreamName=\"upstr3am\";\n  final FreeStyleProject upstream=r.createFreeStyleProject(upstreamName);\n  String downstreamName=\"d0wnstr3am\";\n  FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\").grant(Item.READ).onItems(upstream).to(\"bob\");\n  @SuppressWarnings(\"rawtypes\") Trigger<Job> t=new ReverseBuildTrigger(upstreamName,Result.SUCCESS);\n  downstream.addTrigger(t);\n  t.start(downstream,true);\n  r.jenkins.rebuildDependencyGraph();\n  assertEquals(Collections.singletonList(downstream),upstream.getDownstreamProjects());\n  FreeStyleBuild b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertNotNull(JenkinsRule.getLog(b),downstream.getLastBuild());\n  assertEquals(1,downstream.getLastBuild().number);\n  Map<String,org.acegisecurity.Authentication> qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"alice\",\"bob\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(2,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").grant(Item.READ).onItems(upstream).to(\"bob\").grant(Item.DISCOVER).onItems(upstream).to(\"alice\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"bob\");\n  auth.grant(Item.DISCOVER).onItems(upstream).to(\"anonymous\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.assertLogNotContains(\"Please login to access job \" + upstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 791,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 121,
        "startColumnNumber" : 8,
        "endLineNumber" : 121,
        "endColumnNumber" : 57
      },
      "nodeContext" : "qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "downstreamName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 124,
      "startColumnNumber" : 28,
      "endLineNumber" : 124,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 124,
        "startColumnNumber" : 8,
        "endLineNumber" : 124,
        "endColumnNumber" : 46
      },
      "nodeContext" : "r.assertLogContains(downstreamName,b)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 124,
        "startColumnNumber" : 8,
        "endLineNumber" : 124,
        "endColumnNumber" : 47
      },
      "nodeContext" : "r.assertLogContains(downstreamName,b);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6589,
        "startLineNumber" : 93,
        "startColumnNumber" : 65,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n  MockAuthorizationStrategy auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  String upstreamName=\"upstr3am\";\n  final FreeStyleProject upstream=r.createFreeStyleProject(upstreamName);\n  String downstreamName=\"d0wnstr3am\";\n  FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\").grant(Item.READ).onItems(upstream).to(\"bob\");\n  @SuppressWarnings(\"rawtypes\") Trigger<Job> t=new ReverseBuildTrigger(upstreamName,Result.SUCCESS);\n  downstream.addTrigger(t);\n  t.start(downstream,true);\n  r.jenkins.rebuildDependencyGraph();\n  assertEquals(Collections.singletonList(downstream),upstream.getDownstreamProjects());\n  FreeStyleBuild b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertNotNull(JenkinsRule.getLog(b),downstream.getLastBuild());\n  assertEquals(1,downstream.getLastBuild().number);\n  Map<String,org.acegisecurity.Authentication> qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"alice\",\"bob\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(2,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").grant(Item.READ).onItems(upstream).to(\"bob\").grant(Item.DISCOVER).onItems(upstream).to(\"alice\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"bob\");\n  auth.grant(Item.DISCOVER).onItems(upstream).to(\"anonymous\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.assertLogNotContains(\"Please login to access job \" + upstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 782,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 6710,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @see BuildTriggerTest#downstreamProjectSecurity \n */\n@Test public void upstreamProjectSecurity() throws Exception {\n  r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n  MockAuthorizationStrategy auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  String upstreamName=\"upstr3am\";\n  final FreeStyleProject upstream=r.createFreeStyleProject(upstreamName);\n  String downstreamName=\"d0wnstr3am\";\n  FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\").grant(Item.READ).onItems(upstream).to(\"bob\");\n  @SuppressWarnings(\"rawtypes\") Trigger<Job> t=new ReverseBuildTrigger(upstreamName,Result.SUCCESS);\n  downstream.addTrigger(t);\n  t.start(downstream,true);\n  r.jenkins.rebuildDependencyGraph();\n  assertEquals(Collections.singletonList(downstream),upstream.getDownstreamProjects());\n  FreeStyleBuild b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertNotNull(JenkinsRule.getLog(b),downstream.getLastBuild());\n  assertEquals(1,downstream.getLastBuild().number);\n  Map<String,org.acegisecurity.Authentication> qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"alice\",\"bob\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(2,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").grant(Item.READ).onItems(upstream).to(\"bob\").grant(Item.DISCOVER).onItems(upstream).to(\"alice\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"bob\");\n  auth.grant(Item.DISCOVER).onItems(upstream).to(\"anonymous\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.assertLogNotContains(\"Please login to access job \" + upstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 791,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 124,
        "startColumnNumber" : 8,
        "endLineNumber" : 124,
        "endColumnNumber" : 47
      },
      "nodeContext" : "r.assertLogContains(downstreamName,b);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "downstreamName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 125,
      "startColumnNumber" : 125,
      "endLineNumber" : 125,
      "endColumnNumber" : 139
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 125,
        "startColumnNumber" : 28,
        "endLineNumber" : 125,
        "endColumnNumber" : 140
      },
      "nodeContext" : "Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 144
      },
      "nodeContext" : "r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 145
      },
      "nodeContext" : "r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6589,
        "startLineNumber" : 93,
        "startColumnNumber" : 65,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n  MockAuthorizationStrategy auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  String upstreamName=\"upstr3am\";\n  final FreeStyleProject upstream=r.createFreeStyleProject(upstreamName);\n  String downstreamName=\"d0wnstr3am\";\n  FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\").grant(Item.READ).onItems(upstream).to(\"bob\");\n  @SuppressWarnings(\"rawtypes\") Trigger<Job> t=new ReverseBuildTrigger(upstreamName,Result.SUCCESS);\n  downstream.addTrigger(t);\n  t.start(downstream,true);\n  r.jenkins.rebuildDependencyGraph();\n  assertEquals(Collections.singletonList(downstream),upstream.getDownstreamProjects());\n  FreeStyleBuild b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertNotNull(JenkinsRule.getLog(b),downstream.getLastBuild());\n  assertEquals(1,downstream.getLastBuild().number);\n  Map<String,org.acegisecurity.Authentication> qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"alice\",\"bob\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(2,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").grant(Item.READ).onItems(upstream).to(\"bob\").grant(Item.DISCOVER).onItems(upstream).to(\"alice\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"bob\");\n  auth.grant(Item.DISCOVER).onItems(upstream).to(\"anonymous\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.assertLogNotContains(\"Please login to access job \" + upstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 782,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 6710,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @see BuildTriggerTest#downstreamProjectSecurity \n */\n@Test public void upstreamProjectSecurity() throws Exception {\n  r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n  MockAuthorizationStrategy auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  String upstreamName=\"upstr3am\";\n  final FreeStyleProject upstream=r.createFreeStyleProject(upstreamName);\n  String downstreamName=\"d0wnstr3am\";\n  FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\").grant(Item.READ).onItems(upstream).to(\"bob\");\n  @SuppressWarnings(\"rawtypes\") Trigger<Job> t=new ReverseBuildTrigger(upstreamName,Result.SUCCESS);\n  downstream.addTrigger(t);\n  t.start(downstream,true);\n  r.jenkins.rebuildDependencyGraph();\n  assertEquals(Collections.singletonList(downstream),upstream.getDownstreamProjects());\n  FreeStyleBuild b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertNotNull(JenkinsRule.getLog(b),downstream.getLastBuild());\n  assertEquals(1,downstream.getLastBuild().number);\n  Map<String,org.acegisecurity.Authentication> qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"alice\",\"bob\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(2,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").grant(Item.READ).onItems(upstream).to(\"bob\").grant(Item.DISCOVER).onItems(upstream).to(\"alice\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"bob\");\n  auth.grant(Item.DISCOVER).onItems(upstream).to(\"anonymous\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.assertLogNotContains(\"Please login to access job \" + upstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 791,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 145
      },
      "nodeContext" : "r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "downstreamName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 131,
      "startColumnNumber" : 22,
      "endLineNumber" : 131,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 131,
        "startColumnNumber" : 8,
        "endLineNumber" : 131,
        "endColumnNumber" : 56
      },
      "nodeContext" : "qiaConfig.put(downstreamName,Jenkins.ANONYMOUS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 131,
        "startColumnNumber" : 8,
        "endLineNumber" : 131,
        "endColumnNumber" : 57
      },
      "nodeContext" : "qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6589,
        "startLineNumber" : 93,
        "startColumnNumber" : 65,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n  MockAuthorizationStrategy auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  String upstreamName=\"upstr3am\";\n  final FreeStyleProject upstream=r.createFreeStyleProject(upstreamName);\n  String downstreamName=\"d0wnstr3am\";\n  FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\").grant(Item.READ).onItems(upstream).to(\"bob\");\n  @SuppressWarnings(\"rawtypes\") Trigger<Job> t=new ReverseBuildTrigger(upstreamName,Result.SUCCESS);\n  downstream.addTrigger(t);\n  t.start(downstream,true);\n  r.jenkins.rebuildDependencyGraph();\n  assertEquals(Collections.singletonList(downstream),upstream.getDownstreamProjects());\n  FreeStyleBuild b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertNotNull(JenkinsRule.getLog(b),downstream.getLastBuild());\n  assertEquals(1,downstream.getLastBuild().number);\n  Map<String,org.acegisecurity.Authentication> qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"alice\",\"bob\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(2,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").grant(Item.READ).onItems(upstream).to(\"bob\").grant(Item.DISCOVER).onItems(upstream).to(\"alice\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"bob\");\n  auth.grant(Item.DISCOVER).onItems(upstream).to(\"anonymous\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.assertLogNotContains(\"Please login to access job \" + upstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 782,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 6710,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @see BuildTriggerTest#downstreamProjectSecurity \n */\n@Test public void upstreamProjectSecurity() throws Exception {\n  r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n  MockAuthorizationStrategy auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  String upstreamName=\"upstr3am\";\n  final FreeStyleProject upstream=r.createFreeStyleProject(upstreamName);\n  String downstreamName=\"d0wnstr3am\";\n  FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\").grant(Item.READ).onItems(upstream).to(\"bob\");\n  @SuppressWarnings(\"rawtypes\") Trigger<Job> t=new ReverseBuildTrigger(upstreamName,Result.SUCCESS);\n  downstream.addTrigger(t);\n  t.start(downstream,true);\n  r.jenkins.rebuildDependencyGraph();\n  assertEquals(Collections.singletonList(downstream),upstream.getDownstreamProjects());\n  FreeStyleBuild b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertNotNull(JenkinsRule.getLog(b),downstream.getLastBuild());\n  assertEquals(1,downstream.getLastBuild().number);\n  Map<String,org.acegisecurity.Authentication> qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"alice\",\"bob\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(2,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").grant(Item.READ).onItems(upstream).to(\"bob\").grant(Item.DISCOVER).onItems(upstream).to(\"alice\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"bob\");\n  auth.grant(Item.DISCOVER).onItems(upstream).to(\"anonymous\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.assertLogNotContains(\"Please login to access job \" + upstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 791,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 131,
        "startColumnNumber" : 8,
        "endLineNumber" : 131,
        "endColumnNumber" : 57
      },
      "nodeContext" : "qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "downstreamName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 134,
      "startColumnNumber" : 31,
      "endLineNumber" : 134,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 134,
        "startColumnNumber" : 8,
        "endLineNumber" : 134,
        "endColumnNumber" : 49
      },
      "nodeContext" : "r.assertLogNotContains(downstreamName,b)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 134,
        "startColumnNumber" : 8,
        "endLineNumber" : 134,
        "endColumnNumber" : 50
      },
      "nodeContext" : "r.assertLogNotContains(downstreamName,b);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6589,
        "startLineNumber" : 93,
        "startColumnNumber" : 65,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n  MockAuthorizationStrategy auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  String upstreamName=\"upstr3am\";\n  final FreeStyleProject upstream=r.createFreeStyleProject(upstreamName);\n  String downstreamName=\"d0wnstr3am\";\n  FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\").grant(Item.READ).onItems(upstream).to(\"bob\");\n  @SuppressWarnings(\"rawtypes\") Trigger<Job> t=new ReverseBuildTrigger(upstreamName,Result.SUCCESS);\n  downstream.addTrigger(t);\n  t.start(downstream,true);\n  r.jenkins.rebuildDependencyGraph();\n  assertEquals(Collections.singletonList(downstream),upstream.getDownstreamProjects());\n  FreeStyleBuild b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertNotNull(JenkinsRule.getLog(b),downstream.getLastBuild());\n  assertEquals(1,downstream.getLastBuild().number);\n  Map<String,org.acegisecurity.Authentication> qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"alice\",\"bob\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(2,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").grant(Item.READ).onItems(upstream).to(\"bob\").grant(Item.DISCOVER).onItems(upstream).to(\"alice\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"bob\");\n  auth.grant(Item.DISCOVER).onItems(upstream).to(\"anonymous\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.assertLogNotContains(\"Please login to access job \" + upstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 782,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 6710,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @see BuildTriggerTest#downstreamProjectSecurity \n */\n@Test public void upstreamProjectSecurity() throws Exception {\n  r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n  MockAuthorizationStrategy auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  String upstreamName=\"upstr3am\";\n  final FreeStyleProject upstream=r.createFreeStyleProject(upstreamName);\n  String downstreamName=\"d0wnstr3am\";\n  FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\").grant(Item.READ).onItems(upstream).to(\"bob\");\n  @SuppressWarnings(\"rawtypes\") Trigger<Job> t=new ReverseBuildTrigger(upstreamName,Result.SUCCESS);\n  downstream.addTrigger(t);\n  t.start(downstream,true);\n  r.jenkins.rebuildDependencyGraph();\n  assertEquals(Collections.singletonList(downstream),upstream.getDownstreamProjects());\n  FreeStyleBuild b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertNotNull(JenkinsRule.getLog(b),downstream.getLastBuild());\n  assertEquals(1,downstream.getLastBuild().number);\n  Map<String,org.acegisecurity.Authentication> qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"alice\",\"bob\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(2,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").grant(Item.READ).onItems(upstream).to(\"bob\").grant(Item.DISCOVER).onItems(upstream).to(\"alice\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"bob\");\n  auth.grant(Item.DISCOVER).onItems(upstream).to(\"anonymous\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.assertLogNotContains(\"Please login to access job \" + upstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 791,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 134,
        "startColumnNumber" : 8,
        "endLineNumber" : 134,
        "endColumnNumber" : 50
      },
      "nodeContext" : "r.assertLogNotContains(downstreamName,b);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "downstreamName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 141,
      "startColumnNumber" : 22,
      "endLineNumber" : 141,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 141,
        "startColumnNumber" : 8,
        "endLineNumber" : 141,
        "endColumnNumber" : 70
      },
      "nodeContext" : "qiaConfig.put(downstreamName,User.get(\"alice\").impersonate())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 141,
        "startColumnNumber" : 8,
        "endLineNumber" : 141,
        "endColumnNumber" : 71
      },
      "nodeContext" : "qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6589,
        "startLineNumber" : 93,
        "startColumnNumber" : 65,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n  MockAuthorizationStrategy auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  String upstreamName=\"upstr3am\";\n  final FreeStyleProject upstream=r.createFreeStyleProject(upstreamName);\n  String downstreamName=\"d0wnstr3am\";\n  FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\").grant(Item.READ).onItems(upstream).to(\"bob\");\n  @SuppressWarnings(\"rawtypes\") Trigger<Job> t=new ReverseBuildTrigger(upstreamName,Result.SUCCESS);\n  downstream.addTrigger(t);\n  t.start(downstream,true);\n  r.jenkins.rebuildDependencyGraph();\n  assertEquals(Collections.singletonList(downstream),upstream.getDownstreamProjects());\n  FreeStyleBuild b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertNotNull(JenkinsRule.getLog(b),downstream.getLastBuild());\n  assertEquals(1,downstream.getLastBuild().number);\n  Map<String,org.acegisecurity.Authentication> qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"alice\",\"bob\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(2,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").grant(Item.READ).onItems(upstream).to(\"bob\").grant(Item.DISCOVER).onItems(upstream).to(\"alice\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"bob\");\n  auth.grant(Item.DISCOVER).onItems(upstream).to(\"anonymous\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.assertLogNotContains(\"Please login to access job \" + upstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 782,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 6710,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @see BuildTriggerTest#downstreamProjectSecurity \n */\n@Test public void upstreamProjectSecurity() throws Exception {\n  r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n  MockAuthorizationStrategy auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  String upstreamName=\"upstr3am\";\n  final FreeStyleProject upstream=r.createFreeStyleProject(upstreamName);\n  String downstreamName=\"d0wnstr3am\";\n  FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\").grant(Item.READ).onItems(upstream).to(\"bob\");\n  @SuppressWarnings(\"rawtypes\") Trigger<Job> t=new ReverseBuildTrigger(upstreamName,Result.SUCCESS);\n  downstream.addTrigger(t);\n  t.start(downstream,true);\n  r.jenkins.rebuildDependencyGraph();\n  assertEquals(Collections.singletonList(downstream),upstream.getDownstreamProjects());\n  FreeStyleBuild b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertNotNull(JenkinsRule.getLog(b),downstream.getLastBuild());\n  assertEquals(1,downstream.getLastBuild().number);\n  Map<String,org.acegisecurity.Authentication> qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"alice\",\"bob\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(2,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").grant(Item.READ).onItems(upstream).to(\"bob\").grant(Item.DISCOVER).onItems(upstream).to(\"alice\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"bob\");\n  auth.grant(Item.DISCOVER).onItems(upstream).to(\"anonymous\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.assertLogNotContains(\"Please login to access job \" + upstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 791,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 141,
        "startColumnNumber" : 8,
        "endLineNumber" : 141,
        "endColumnNumber" : 71
      },
      "nodeContext" : "qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "downstreamName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 144,
      "startColumnNumber" : 31,
      "endLineNumber" : 144,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 144,
        "startColumnNumber" : 8,
        "endLineNumber" : 144,
        "endColumnNumber" : 49
      },
      "nodeContext" : "r.assertLogNotContains(downstreamName,b)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 144,
        "startColumnNumber" : 8,
        "endLineNumber" : 144,
        "endColumnNumber" : 50
      },
      "nodeContext" : "r.assertLogNotContains(downstreamName,b);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6589,
        "startLineNumber" : 93,
        "startColumnNumber" : 65,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n  MockAuthorizationStrategy auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  String upstreamName=\"upstr3am\";\n  final FreeStyleProject upstream=r.createFreeStyleProject(upstreamName);\n  String downstreamName=\"d0wnstr3am\";\n  FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\").grant(Item.READ).onItems(upstream).to(\"bob\");\n  @SuppressWarnings(\"rawtypes\") Trigger<Job> t=new ReverseBuildTrigger(upstreamName,Result.SUCCESS);\n  downstream.addTrigger(t);\n  t.start(downstream,true);\n  r.jenkins.rebuildDependencyGraph();\n  assertEquals(Collections.singletonList(downstream),upstream.getDownstreamProjects());\n  FreeStyleBuild b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertNotNull(JenkinsRule.getLog(b),downstream.getLastBuild());\n  assertEquals(1,downstream.getLastBuild().number);\n  Map<String,org.acegisecurity.Authentication> qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"alice\",\"bob\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(2,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").grant(Item.READ).onItems(upstream).to(\"bob\").grant(Item.DISCOVER).onItems(upstream).to(\"alice\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"bob\");\n  auth.grant(Item.DISCOVER).onItems(upstream).to(\"anonymous\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.assertLogNotContains(\"Please login to access job \" + upstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 782,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 6710,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @see BuildTriggerTest#downstreamProjectSecurity \n */\n@Test public void upstreamProjectSecurity() throws Exception {\n  r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n  MockAuthorizationStrategy auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  String upstreamName=\"upstr3am\";\n  final FreeStyleProject upstream=r.createFreeStyleProject(upstreamName);\n  String downstreamName=\"d0wnstr3am\";\n  FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\").grant(Item.READ).onItems(upstream).to(\"bob\");\n  @SuppressWarnings(\"rawtypes\") Trigger<Job> t=new ReverseBuildTrigger(upstreamName,Result.SUCCESS);\n  downstream.addTrigger(t);\n  t.start(downstream,true);\n  r.jenkins.rebuildDependencyGraph();\n  assertEquals(Collections.singletonList(downstream),upstream.getDownstreamProjects());\n  FreeStyleBuild b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertNotNull(JenkinsRule.getLog(b),downstream.getLastBuild());\n  assertEquals(1,downstream.getLastBuild().number);\n  Map<String,org.acegisecurity.Authentication> qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"alice\",\"bob\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(2,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").grant(Item.READ).onItems(upstream).to(\"bob\").grant(Item.DISCOVER).onItems(upstream).to(\"alice\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"bob\");\n  auth.grant(Item.DISCOVER).onItems(upstream).to(\"anonymous\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.assertLogNotContains(\"Please login to access job \" + upstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 791,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 144,
        "startColumnNumber" : 8,
        "endLineNumber" : 144,
        "endColumnNumber" : 50
      },
      "nodeContext" : "r.assertLogNotContains(downstreamName,b);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "downstreamName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 151,
      "startColumnNumber" : 22,
      "endLineNumber" : 151,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 151,
        "startColumnNumber" : 8,
        "endLineNumber" : 151,
        "endColumnNumber" : 70
      },
      "nodeContext" : "qiaConfig.put(downstreamName,User.get(\"alice\").impersonate())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 151,
        "startColumnNumber" : 8,
        "endLineNumber" : 151,
        "endColumnNumber" : 71
      },
      "nodeContext" : "qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6589,
        "startLineNumber" : 93,
        "startColumnNumber" : 65,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n  MockAuthorizationStrategy auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  String upstreamName=\"upstr3am\";\n  final FreeStyleProject upstream=r.createFreeStyleProject(upstreamName);\n  String downstreamName=\"d0wnstr3am\";\n  FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\").grant(Item.READ).onItems(upstream).to(\"bob\");\n  @SuppressWarnings(\"rawtypes\") Trigger<Job> t=new ReverseBuildTrigger(upstreamName,Result.SUCCESS);\n  downstream.addTrigger(t);\n  t.start(downstream,true);\n  r.jenkins.rebuildDependencyGraph();\n  assertEquals(Collections.singletonList(downstream),upstream.getDownstreamProjects());\n  FreeStyleBuild b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertNotNull(JenkinsRule.getLog(b),downstream.getLastBuild());\n  assertEquals(1,downstream.getLastBuild().number);\n  Map<String,org.acegisecurity.Authentication> qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"alice\",\"bob\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(2,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").grant(Item.READ).onItems(upstream).to(\"bob\").grant(Item.DISCOVER).onItems(upstream).to(\"alice\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"bob\");\n  auth.grant(Item.DISCOVER).onItems(upstream).to(\"anonymous\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.assertLogNotContains(\"Please login to access job \" + upstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 782,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 6710,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @see BuildTriggerTest#downstreamProjectSecurity \n */\n@Test public void upstreamProjectSecurity() throws Exception {\n  r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n  MockAuthorizationStrategy auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  String upstreamName=\"upstr3am\";\n  final FreeStyleProject upstream=r.createFreeStyleProject(upstreamName);\n  String downstreamName=\"d0wnstr3am\";\n  FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\").grant(Item.READ).onItems(upstream).to(\"bob\");\n  @SuppressWarnings(\"rawtypes\") Trigger<Job> t=new ReverseBuildTrigger(upstreamName,Result.SUCCESS);\n  downstream.addTrigger(t);\n  t.start(downstream,true);\n  r.jenkins.rebuildDependencyGraph();\n  assertEquals(Collections.singletonList(downstream),upstream.getDownstreamProjects());\n  FreeStyleBuild b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertNotNull(JenkinsRule.getLog(b),downstream.getLastBuild());\n  assertEquals(1,downstream.getLastBuild().number);\n  Map<String,org.acegisecurity.Authentication> qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"alice\",\"bob\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(2,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").grant(Item.READ).onItems(upstream).to(\"bob\").grant(Item.DISCOVER).onItems(upstream).to(\"alice\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"bob\");\n  auth.grant(Item.DISCOVER).onItems(upstream).to(\"anonymous\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.assertLogNotContains(\"Please login to access job \" + upstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 791,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 151,
        "startColumnNumber" : 8,
        "endLineNumber" : 151,
        "endColumnNumber" : 71
      },
      "nodeContext" : "qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "downstreamName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 154,
      "startColumnNumber" : 28,
      "endLineNumber" : 154,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 154,
        "startColumnNumber" : 8,
        "endLineNumber" : 154,
        "endColumnNumber" : 46
      },
      "nodeContext" : "r.assertLogContains(downstreamName,b)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 154,
        "startColumnNumber" : 8,
        "endLineNumber" : 154,
        "endColumnNumber" : 47
      },
      "nodeContext" : "r.assertLogContains(downstreamName,b);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6589,
        "startLineNumber" : 93,
        "startColumnNumber" : 65,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n  MockAuthorizationStrategy auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  String upstreamName=\"upstr3am\";\n  final FreeStyleProject upstream=r.createFreeStyleProject(upstreamName);\n  String downstreamName=\"d0wnstr3am\";\n  FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\").grant(Item.READ).onItems(upstream).to(\"bob\");\n  @SuppressWarnings(\"rawtypes\") Trigger<Job> t=new ReverseBuildTrigger(upstreamName,Result.SUCCESS);\n  downstream.addTrigger(t);\n  t.start(downstream,true);\n  r.jenkins.rebuildDependencyGraph();\n  assertEquals(Collections.singletonList(downstream),upstream.getDownstreamProjects());\n  FreeStyleBuild b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertNotNull(JenkinsRule.getLog(b),downstream.getLastBuild());\n  assertEquals(1,downstream.getLastBuild().number);\n  Map<String,org.acegisecurity.Authentication> qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"alice\",\"bob\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(2,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").grant(Item.READ).onItems(upstream).to(\"bob\").grant(Item.DISCOVER).onItems(upstream).to(\"alice\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"bob\");\n  auth.grant(Item.DISCOVER).onItems(upstream).to(\"anonymous\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.assertLogNotContains(\"Please login to access job \" + upstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 782,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 6710,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @see BuildTriggerTest#downstreamProjectSecurity \n */\n@Test public void upstreamProjectSecurity() throws Exception {\n  r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n  MockAuthorizationStrategy auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  String upstreamName=\"upstr3am\";\n  final FreeStyleProject upstream=r.createFreeStyleProject(upstreamName);\n  String downstreamName=\"d0wnstr3am\";\n  FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\").grant(Item.READ).onItems(upstream).to(\"bob\");\n  @SuppressWarnings(\"rawtypes\") Trigger<Job> t=new ReverseBuildTrigger(upstreamName,Result.SUCCESS);\n  downstream.addTrigger(t);\n  t.start(downstream,true);\n  r.jenkins.rebuildDependencyGraph();\n  assertEquals(Collections.singletonList(downstream),upstream.getDownstreamProjects());\n  FreeStyleBuild b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertNotNull(JenkinsRule.getLog(b),downstream.getLastBuild());\n  assertEquals(1,downstream.getLastBuild().number);\n  Map<String,org.acegisecurity.Authentication> qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"alice\",\"bob\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(2,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").grant(Item.READ).onItems(upstream).to(\"bob\").grant(Item.DISCOVER).onItems(upstream).to(\"alice\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"bob\");\n  auth.grant(Item.DISCOVER).onItems(upstream).to(\"anonymous\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.assertLogNotContains(\"Please login to access job \" + upstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 791,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 154,
        "startColumnNumber" : 8,
        "endLineNumber" : 154,
        "endColumnNumber" : 47
      },
      "nodeContext" : "r.assertLogContains(downstreamName,b);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "downstreamName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 170,
      "startColumnNumber" : 22,
      "endLineNumber" : 170,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 170,
        "startColumnNumber" : 8,
        "endLineNumber" : 170,
        "endColumnNumber" : 70
      },
      "nodeContext" : "qiaConfig.put(downstreamName,User.get(\"alice\").impersonate())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 170,
        "startColumnNumber" : 8,
        "endLineNumber" : 170,
        "endColumnNumber" : 71
      },
      "nodeContext" : "qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6589,
        "startLineNumber" : 93,
        "startColumnNumber" : 65,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n  MockAuthorizationStrategy auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  String upstreamName=\"upstr3am\";\n  final FreeStyleProject upstream=r.createFreeStyleProject(upstreamName);\n  String downstreamName=\"d0wnstr3am\";\n  FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\").grant(Item.READ).onItems(upstream).to(\"bob\");\n  @SuppressWarnings(\"rawtypes\") Trigger<Job> t=new ReverseBuildTrigger(upstreamName,Result.SUCCESS);\n  downstream.addTrigger(t);\n  t.start(downstream,true);\n  r.jenkins.rebuildDependencyGraph();\n  assertEquals(Collections.singletonList(downstream),upstream.getDownstreamProjects());\n  FreeStyleBuild b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertNotNull(JenkinsRule.getLog(b),downstream.getLastBuild());\n  assertEquals(1,downstream.getLastBuild().number);\n  Map<String,org.acegisecurity.Authentication> qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"alice\",\"bob\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(2,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").grant(Item.READ).onItems(upstream).to(\"bob\").grant(Item.DISCOVER).onItems(upstream).to(\"alice\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"bob\");\n  auth.grant(Item.DISCOVER).onItems(upstream).to(\"anonymous\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.assertLogNotContains(\"Please login to access job \" + upstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 782,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 6710,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @see BuildTriggerTest#downstreamProjectSecurity \n */\n@Test public void upstreamProjectSecurity() throws Exception {\n  r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n  MockAuthorizationStrategy auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  String upstreamName=\"upstr3am\";\n  final FreeStyleProject upstream=r.createFreeStyleProject(upstreamName);\n  String downstreamName=\"d0wnstr3am\";\n  FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\").grant(Item.READ).onItems(upstream).to(\"bob\");\n  @SuppressWarnings(\"rawtypes\") Trigger<Job> t=new ReverseBuildTrigger(upstreamName,Result.SUCCESS);\n  downstream.addTrigger(t);\n  t.start(downstream,true);\n  r.jenkins.rebuildDependencyGraph();\n  assertEquals(Collections.singletonList(downstream),upstream.getDownstreamProjects());\n  FreeStyleBuild b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertNotNull(JenkinsRule.getLog(b),downstream.getLastBuild());\n  assertEquals(1,downstream.getLastBuild().number);\n  Map<String,org.acegisecurity.Authentication> qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"alice\",\"bob\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(2,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").grant(Item.READ).onItems(upstream).to(\"bob\").grant(Item.DISCOVER).onItems(upstream).to(\"alice\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"bob\");\n  auth.grant(Item.DISCOVER).onItems(upstream).to(\"anonymous\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.assertLogNotContains(\"Please login to access job \" + upstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 791,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 170,
        "startColumnNumber" : 8,
        "endLineNumber" : 170,
        "endColumnNumber" : 71
      },
      "nodeContext" : "qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "downstreamName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 173,
      "startColumnNumber" : 31,
      "endLineNumber" : 173,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 173,
        "startColumnNumber" : 8,
        "endLineNumber" : 173,
        "endColumnNumber" : 49
      },
      "nodeContext" : "r.assertLogNotContains(downstreamName,b)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 173,
        "startColumnNumber" : 8,
        "endLineNumber" : 173,
        "endColumnNumber" : 50
      },
      "nodeContext" : "r.assertLogNotContains(downstreamName,b);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6589,
        "startLineNumber" : 93,
        "startColumnNumber" : 65,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n  MockAuthorizationStrategy auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  String upstreamName=\"upstr3am\";\n  final FreeStyleProject upstream=r.createFreeStyleProject(upstreamName);\n  String downstreamName=\"d0wnstr3am\";\n  FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\").grant(Item.READ).onItems(upstream).to(\"bob\");\n  @SuppressWarnings(\"rawtypes\") Trigger<Job> t=new ReverseBuildTrigger(upstreamName,Result.SUCCESS);\n  downstream.addTrigger(t);\n  t.start(downstream,true);\n  r.jenkins.rebuildDependencyGraph();\n  assertEquals(Collections.singletonList(downstream),upstream.getDownstreamProjects());\n  FreeStyleBuild b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertNotNull(JenkinsRule.getLog(b),downstream.getLastBuild());\n  assertEquals(1,downstream.getLastBuild().number);\n  Map<String,org.acegisecurity.Authentication> qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"alice\",\"bob\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(2,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").grant(Item.READ).onItems(upstream).to(\"bob\").grant(Item.DISCOVER).onItems(upstream).to(\"alice\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"bob\");\n  auth.grant(Item.DISCOVER).onItems(upstream).to(\"anonymous\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.assertLogNotContains(\"Please login to access job \" + upstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 782,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 6710,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @see BuildTriggerTest#downstreamProjectSecurity \n */\n@Test public void upstreamProjectSecurity() throws Exception {\n  r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n  MockAuthorizationStrategy auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  String upstreamName=\"upstr3am\";\n  final FreeStyleProject upstream=r.createFreeStyleProject(upstreamName);\n  String downstreamName=\"d0wnstr3am\";\n  FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\").grant(Item.READ).onItems(upstream).to(\"bob\");\n  @SuppressWarnings(\"rawtypes\") Trigger<Job> t=new ReverseBuildTrigger(upstreamName,Result.SUCCESS);\n  downstream.addTrigger(t);\n  t.start(downstream,true);\n  r.jenkins.rebuildDependencyGraph();\n  assertEquals(Collections.singletonList(downstream),upstream.getDownstreamProjects());\n  FreeStyleBuild b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertNotNull(JenkinsRule.getLog(b),downstream.getLastBuild());\n  assertEquals(1,downstream.getLastBuild().number);\n  Map<String,org.acegisecurity.Authentication> qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"alice\",\"bob\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(2,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").grant(Item.READ).onItems(upstream).to(\"bob\").grant(Item.DISCOVER).onItems(upstream).to(\"alice\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"bob\");\n  auth.grant(Item.DISCOVER).onItems(upstream).to(\"anonymous\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.assertLogNotContains(\"Please login to access job \" + upstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 791,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 173,
        "startColumnNumber" : 8,
        "endLineNumber" : 173,
        "endColumnNumber" : 50
      },
      "nodeContext" : "r.assertLogNotContains(downstreamName,b);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "downstreamName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 183,
      "startColumnNumber" : 22,
      "endLineNumber" : 183,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 183,
        "startColumnNumber" : 8,
        "endLineNumber" : 183,
        "endColumnNumber" : 56
      },
      "nodeContext" : "qiaConfig.put(downstreamName,Jenkins.ANONYMOUS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 183,
        "startColumnNumber" : 8,
        "endLineNumber" : 183,
        "endColumnNumber" : 57
      },
      "nodeContext" : "qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6589,
        "startLineNumber" : 93,
        "startColumnNumber" : 65,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n  MockAuthorizationStrategy auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  String upstreamName=\"upstr3am\";\n  final FreeStyleProject upstream=r.createFreeStyleProject(upstreamName);\n  String downstreamName=\"d0wnstr3am\";\n  FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\").grant(Item.READ).onItems(upstream).to(\"bob\");\n  @SuppressWarnings(\"rawtypes\") Trigger<Job> t=new ReverseBuildTrigger(upstreamName,Result.SUCCESS);\n  downstream.addTrigger(t);\n  t.start(downstream,true);\n  r.jenkins.rebuildDependencyGraph();\n  assertEquals(Collections.singletonList(downstream),upstream.getDownstreamProjects());\n  FreeStyleBuild b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertNotNull(JenkinsRule.getLog(b),downstream.getLastBuild());\n  assertEquals(1,downstream.getLastBuild().number);\n  Map<String,org.acegisecurity.Authentication> qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"alice\",\"bob\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(2,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").grant(Item.READ).onItems(upstream).to(\"bob\").grant(Item.DISCOVER).onItems(upstream).to(\"alice\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"bob\");\n  auth.grant(Item.DISCOVER).onItems(upstream).to(\"anonymous\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.assertLogNotContains(\"Please login to access job \" + upstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 782,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 6710,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @see BuildTriggerTest#downstreamProjectSecurity \n */\n@Test public void upstreamProjectSecurity() throws Exception {\n  r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n  MockAuthorizationStrategy auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  String upstreamName=\"upstr3am\";\n  final FreeStyleProject upstream=r.createFreeStyleProject(upstreamName);\n  String downstreamName=\"d0wnstr3am\";\n  FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\").grant(Item.READ).onItems(upstream).to(\"bob\");\n  @SuppressWarnings(\"rawtypes\") Trigger<Job> t=new ReverseBuildTrigger(upstreamName,Result.SUCCESS);\n  downstream.addTrigger(t);\n  t.start(downstream,true);\n  r.jenkins.rebuildDependencyGraph();\n  assertEquals(Collections.singletonList(downstream),upstream.getDownstreamProjects());\n  FreeStyleBuild b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertNotNull(JenkinsRule.getLog(b),downstream.getLastBuild());\n  assertEquals(1,downstream.getLastBuild().number);\n  Map<String,org.acegisecurity.Authentication> qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"alice\",\"bob\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(2,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").grant(Item.READ).onItems(upstream).to(\"bob\").grant(Item.DISCOVER).onItems(upstream).to(\"alice\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"bob\");\n  auth.grant(Item.DISCOVER).onItems(upstream).to(\"anonymous\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.assertLogNotContains(\"Please login to access job \" + upstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 791,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 183,
        "startColumnNumber" : 8,
        "endLineNumber" : 183,
        "endColumnNumber" : 57
      },
      "nodeContext" : "qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "downstreamName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 186,
      "startColumnNumber" : 31,
      "endLineNumber" : 186,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 186,
        "endColumnNumber" : 49
      },
      "nodeContext" : "r.assertLogNotContains(downstreamName,b)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 186,
        "endColumnNumber" : 50
      },
      "nodeContext" : "r.assertLogNotContains(downstreamName,b);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6589,
        "startLineNumber" : 93,
        "startColumnNumber" : 65,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n  MockAuthorizationStrategy auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  String upstreamName=\"upstr3am\";\n  final FreeStyleProject upstream=r.createFreeStyleProject(upstreamName);\n  String downstreamName=\"d0wnstr3am\";\n  FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\").grant(Item.READ).onItems(upstream).to(\"bob\");\n  @SuppressWarnings(\"rawtypes\") Trigger<Job> t=new ReverseBuildTrigger(upstreamName,Result.SUCCESS);\n  downstream.addTrigger(t);\n  t.start(downstream,true);\n  r.jenkins.rebuildDependencyGraph();\n  assertEquals(Collections.singletonList(downstream),upstream.getDownstreamProjects());\n  FreeStyleBuild b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertNotNull(JenkinsRule.getLog(b),downstream.getLastBuild());\n  assertEquals(1,downstream.getLastBuild().number);\n  Map<String,org.acegisecurity.Authentication> qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"alice\",\"bob\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(2,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").grant(Item.READ).onItems(upstream).to(\"bob\").grant(Item.DISCOVER).onItems(upstream).to(\"alice\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"bob\");\n  auth.grant(Item.DISCOVER).onItems(upstream).to(\"anonymous\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.assertLogNotContains(\"Please login to access job \" + upstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 782,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 6710,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @see BuildTriggerTest#downstreamProjectSecurity \n */\n@Test public void upstreamProjectSecurity() throws Exception {\n  r.jenkins.setSecurityRealm(r.createDummySecurityRealm());\n  MockAuthorizationStrategy auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  String upstreamName=\"upstr3am\";\n  final FreeStyleProject upstream=r.createFreeStyleProject(upstreamName);\n  String downstreamName=\"d0wnstr3am\";\n  FreeStyleProject downstream=r.createFreeStyleProject(downstreamName);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\").grant(Item.READ).onItems(upstream).to(\"bob\");\n  @SuppressWarnings(\"rawtypes\") Trigger<Job> t=new ReverseBuildTrigger(upstreamName,Result.SUCCESS);\n  downstream.addTrigger(t);\n  t.start(downstream,true);\n  r.jenkins.rebuildDependencyGraph();\n  assertEquals(Collections.singletonList(downstream),upstream.getDownstreamProjects());\n  FreeStyleBuild b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertNotNull(JenkinsRule.getLog(b),downstream.getLastBuild());\n  assertEquals(1,downstream.getLastBuild().number);\n  Map<String,org.acegisecurity.Authentication> qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.assertLogContains(Messages.ReverseBuildTrigger_running_as_cannot_even_see_for_trigger_f(\"anonymous\",upstreamName,downstreamName),b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(1,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"alice\",\"bob\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(2,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"admin\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  assertEquals(new Cause.UpstreamCause((Run)b),downstream.getLastBuild().getCause(Cause.UpstreamCause.class));\n  auth=new MockAuthorizationStrategy().grant(Jenkins.READ).everywhere().to(\"alice\",\"bob\").grant(Computer.BUILD).everywhere().to(\"alice\",\"bob\").grant(Jenkins.ADMINISTER).everywhere().to(\"admin\").grant(Item.READ).onItems(upstream).to(\"bob\").grant(Item.DISCOVER).onItems(upstream).to(\"alice\");\n  r.jenkins.setAuthorizationStrategy(auth);\n  auth.grant(Item.READ).onItems(downstream).to(\"alice\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,User.get(\"alice\").impersonate());\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n  auth.grant(Item.READ).onItems(upstream).to(\"bob\");\n  auth.grant(Item.DISCOVER).onItems(upstream).to(\"anonymous\");\n  qiaConfig=new HashMap<>();\n  qiaConfig.put(upstreamName,User.get(\"bob\").impersonate());\n  qiaConfig.put(downstreamName,Jenkins.ANONYMOUS);\n  QueueItemAuthenticatorConfiguration.get().getAuthenticators().replace(new MockQueueItemAuthenticator(qiaConfig));\n  b=r.buildAndAssertSuccess(upstream);\n  r.assertLogNotContains(downstreamName,b);\n  r.assertLogNotContains(\"Please login to access job \" + upstreamName,b);\n  r.waitUntilNoActivity();\n  assertEquals(3,downstream.getLastBuild().number);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 791,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 186,
        "endColumnNumber" : 50
      },
      "nodeContext" : "r.assertLogNotContains(downstreamName,b);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 103,
    "startColumnNumber" : 63,
    "endLineNumber" : 103,
    "endColumnNumber" : 77
  }, {
    "charLength" : 14,
    "startLineNumber" : 114,
    "startColumnNumber" : 28,
    "endLineNumber" : 114,
    "endColumnNumber" : 42
  }, {
    "charLength" : 14,
    "startLineNumber" : 121,
    "startColumnNumber" : 22,
    "endLineNumber" : 121,
    "endColumnNumber" : 36
  }, {
    "charLength" : 14,
    "startLineNumber" : 124,
    "startColumnNumber" : 28,
    "endLineNumber" : 124,
    "endColumnNumber" : 42
  }, {
    "charLength" : 14,
    "startLineNumber" : 125,
    "startColumnNumber" : 125,
    "endLineNumber" : 125,
    "endColumnNumber" : 139
  }, {
    "charLength" : 14,
    "startLineNumber" : 131,
    "startColumnNumber" : 22,
    "endLineNumber" : 131,
    "endColumnNumber" : 36
  }, {
    "charLength" : 14,
    "startLineNumber" : 134,
    "startColumnNumber" : 31,
    "endLineNumber" : 134,
    "endColumnNumber" : 45
  }, {
    "charLength" : 14,
    "startLineNumber" : 141,
    "startColumnNumber" : 22,
    "endLineNumber" : 141,
    "endColumnNumber" : 36
  }, {
    "charLength" : 14,
    "startLineNumber" : 144,
    "startColumnNumber" : 31,
    "endLineNumber" : 144,
    "endColumnNumber" : 45
  }, {
    "charLength" : 14,
    "startLineNumber" : 151,
    "startColumnNumber" : 22,
    "endLineNumber" : 151,
    "endColumnNumber" : 36
  }, {
    "charLength" : 14,
    "startLineNumber" : 154,
    "startColumnNumber" : 28,
    "endLineNumber" : 154,
    "endColumnNumber" : 42
  }, {
    "charLength" : 14,
    "startLineNumber" : 170,
    "startColumnNumber" : 22,
    "endLineNumber" : 170,
    "endColumnNumber" : 36
  }, {
    "charLength" : 14,
    "startLineNumber" : 173,
    "startColumnNumber" : 31,
    "endLineNumber" : 173,
    "endColumnNumber" : 45
  }, {
    "charLength" : 14,
    "startLineNumber" : 183,
    "startColumnNumber" : 22,
    "endLineNumber" : 183,
    "endColumnNumber" : 36
  }, {
    "charLength" : 14,
    "startLineNumber" : 186,
    "startColumnNumber" : 31,
    "endLineNumber" : 186,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 13,
    "layout" : 2
  } ]
}