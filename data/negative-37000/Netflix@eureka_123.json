{
  "id" : 123,
  "expression" : "input",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-core/src/main/java/com/netflix/eureka2/utils/SystemUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "input",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 49,
      "startColumnNumber" : 26,
      "endLineNumber" : 49,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 49,
        "startColumnNumber" : 26,
        "endLineNumber" : 49,
        "endColumnNumber" : 43
      },
      "nodeContext" : "input.read(bytes)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 49,
        "startColumnNumber" : 20,
        "endLineNumber" : 49,
        "endColumnNumber" : 43
      },
      "nodeContext" : "len=input.read(bytes)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 49,
        "startColumnNumber" : 19,
        "endLineNumber" : 49,
        "endColumnNumber" : 44
      },
      "nodeContext" : "(len=input.read(bytes))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 49,
        "startColumnNumber" : 19,
        "endLineNumber" : 49,
        "endColumnNumber" : 50
      },
      "nodeContext" : "(len=input.read(bytes)) != -1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while ((len=input.read(bytes)) != -1) {\n  sb.append(new String(bytes,0,len,Charset.defaultCharset()));\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 504,
        "startLineNumber" : 43,
        "startColumnNumber" : 12,
        "endLineNumber" : 55,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Process process=Runtime.getRuntime().exec(\"hostname\");\n  InputStream input=process.getInputStream();\n  StringBuilder sb=new StringBuilder();\n  byte[] bytes=new byte[256];\n  int len;\n  while ((len=input.read(bytes)) != -1) {\n    sb.append(new String(bytes,0,len,Charset.defaultCharset()));\n  }\n  if (process.exitValue() == 0) {\n    return sb.toString().trim();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 609,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 57,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Process process=Runtime.getRuntime().exec(\"hostname\");\n  InputStream input=process.getInputStream();\n  StringBuilder sb=new StringBuilder();\n  byte[] bytes=new byte[256];\n  int len;\n  while ((len=input.read(bytes)) != -1) {\n    sb.append(new String(bytes,0,len,Charset.defaultCharset()));\n  }\n  if (process.exitValue() == 0) {\n    return sb.toString().trim();\n  }\n}\n catch (Exception ignore) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 88,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1013,
        "startLineNumber" : 40,
        "startColumnNumber" : 39,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    Process process=Runtime.getRuntime().exec(\"hostname\");\n    InputStream input=process.getInputStream();\n    StringBuilder sb=new StringBuilder();\n    byte[] bytes=new byte[256];\n    int len;\n    while ((len=input.read(bytes)) != -1) {\n      sb.append(new String(bytes,0,len,Charset.defaultCharset()));\n    }\n    if (process.exitValue() == 0) {\n      return sb.toString().trim();\n    }\n  }\n catch (  Exception ignore) {\n  }\n  try {\n    return InetAddress.getLocalHost().getHostName();\n  }\n catch (  UnknownHostException e) {\n    throw new RuntimeException(\"cannot resolve local host name\",e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1048,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static String getHostName(){\n  try {\n    Process process=Runtime.getRuntime().exec(\"hostname\");\n    InputStream input=process.getInputStream();\n    StringBuilder sb=new StringBuilder();\n    byte[] bytes=new byte[256];\n    int len;\n    while ((len=input.read(bytes)) != -1) {\n      sb.append(new String(bytes,0,len,Charset.defaultCharset()));\n    }\n    if (process.exitValue() == 0) {\n      return sb.toString().trim();\n    }\n  }\n catch (  Exception ignore) {\n  }\n  try {\n    return InetAddress.getLocalHost().getHostName();\n  }\n catch (  UnknownHostException e) {\n    throw new RuntimeException(\"cannot resolve local host name\",e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 115,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 49,
        "startColumnNumber" : 19,
        "endLineNumber" : 49,
        "endColumnNumber" : 50
      },
      "nodeContext" : "(len=input.read(bytes)) != -1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.io.InputStream"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 49,
    "startColumnNumber" : 26,
    "endLineNumber" : 49,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}