{
  "id" : 514,
  "expression" : "jobParams",
  "projectName" : "android-hacker@VirtualXposed",
  "commitID" : "8e98dd20e6a751089d4eb2642fa6bf088a3e7a79",
  "filePath" : "/VirtualApp/lib/src/main/java/com/lody/virtual/client/stub/StubJob.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "jobParams",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 43,
      "startColumnNumber" : 24,
      "endLineNumber" : 43,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 43,
        "startColumnNumber" : 24,
        "endLineNumber" : 43,
        "endColumnNumber" : 44
      },
      "nodeContext" : "jobParams.getJobId()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 43,
        "startColumnNumber" : 16,
        "endLineNumber" : 43,
        "endColumnNumber" : 44
      },
      "nodeContext" : "jobId=jobParams.getJobId()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 43,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 45
      },
      "nodeContext" : "int jobId=jobParams.getJobId();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2012,
        "startLineNumber" : 42,
        "startColumnNumber" : 77,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int jobId=jobParams.getJobId();\n  IBinder binder=mirror.android.app.job.JobParameters.callback.get(jobParams);\n  IJobCallback callback=IJobCallback.Stub.asInterface(binder);\n  Map.Entry<JobId,JobConfig> entry=get().findJobByVirtualJobId(jobId);\n  if (entry == null) {\n    emptyCallback(callback,jobId);\n    mScheduler.cancel(jobId);\n  }\n else {\n    JobId key=entry.getKey();\n    JobConfig config=entry.getValue();\nsynchronized (mJobSessions) {\n      JobSession session=mJobSessions.get(jobId);\n      if (session != null) {\n        emptyCallback(callback,jobId);\n      }\n else {\n        session=new JobSession(jobId,callback,jobParams);\n        mirror.android.app.job.JobParameters.callback.set(jobParams,session.asBinder());\n        mirror.android.app.job.JobParameters.jobId.set(jobParams,key.clientJobId);\n        Intent service=new Intent();\n        service.setComponent(new ComponentName(key.packageName,config.serviceName));\n        service.putExtra(\"_VA_|_user_id_\",VUserHandle.getUserId(key.vuid));\n        boolean bound=false;\n        try {\n          bound=bindService(service,session,0);\n        }\n catch (        Throwable e) {\n          VLog.e(TAG,e);\n        }\n        if (bound) {\n          mJobSessions.put(jobId,session);\n        }\n else {\n          emptyCallback(callback,jobId);\n          mScheduler.cancel(jobId);\n          get().cancel(jobId);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 240,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2099,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void startJob(JobParameters jobParams) throws RemoteException {\n  int jobId=jobParams.getJobId();\n  IBinder binder=mirror.android.app.job.JobParameters.callback.get(jobParams);\n  IJobCallback callback=IJobCallback.Stub.asInterface(binder);\n  Map.Entry<JobId,JobConfig> entry=get().findJobByVirtualJobId(jobId);\n  if (entry == null) {\n    emptyCallback(callback,jobId);\n    mScheduler.cancel(jobId);\n  }\n else {\n    JobId key=entry.getKey();\n    JobConfig config=entry.getValue();\nsynchronized (mJobSessions) {\n      JobSession session=mJobSessions.get(jobId);\n      if (session != null) {\n        emptyCallback(callback,jobId);\n      }\n else {\n        session=new JobSession(jobId,callback,jobParams);\n        mirror.android.app.job.JobParameters.callback.set(jobParams,session.asBinder());\n        mirror.android.app.job.JobParameters.jobId.set(jobParams,key.clientJobId);\n        Intent service=new Intent();\n        service.setComponent(new ComponentName(key.packageName,config.serviceName));\n        service.putExtra(\"_VA_|_user_id_\",VUserHandle.getUserId(key.vuid));\n        boolean bound=false;\n        try {\n          bound=bindService(service,session,0);\n        }\n catch (        Throwable e) {\n          VLog.e(TAG,e);\n        }\n        if (bound) {\n          mJobSessions.put(jobId,session);\n        }\n else {\n          emptyCallback(callback,jobId);\n          mScheduler.cancel(jobId);\n          get().cancel(jobId);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 252,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 43,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 45
      },
      "nodeContext" : "int jobId=jobParams.getJobId();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.lody.virtual.client.stub.JobParameters"
  }, {
    "nodeContext" : "jobParams",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 44,
      "startColumnNumber" : 79,
      "endLineNumber" : 44,
      "endColumnNumber" : 88
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 44,
        "startColumnNumber" : 29,
        "endLineNumber" : 44,
        "endColumnNumber" : 89
      },
      "nodeContext" : "mirror.android.app.job.JobParameters.callback.get(jobParams)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 44,
        "startColumnNumber" : 20,
        "endLineNumber" : 44,
        "endColumnNumber" : 89
      },
      "nodeContext" : "binder=mirror.android.app.job.JobParameters.callback.get(jobParams)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 16,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 90
      },
      "nodeContext" : "IBinder binder=mirror.android.app.job.JobParameters.callback.get(jobParams);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2012,
        "startLineNumber" : 42,
        "startColumnNumber" : 77,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int jobId=jobParams.getJobId();\n  IBinder binder=mirror.android.app.job.JobParameters.callback.get(jobParams);\n  IJobCallback callback=IJobCallback.Stub.asInterface(binder);\n  Map.Entry<JobId,JobConfig> entry=get().findJobByVirtualJobId(jobId);\n  if (entry == null) {\n    emptyCallback(callback,jobId);\n    mScheduler.cancel(jobId);\n  }\n else {\n    JobId key=entry.getKey();\n    JobConfig config=entry.getValue();\nsynchronized (mJobSessions) {\n      JobSession session=mJobSessions.get(jobId);\n      if (session != null) {\n        emptyCallback(callback,jobId);\n      }\n else {\n        session=new JobSession(jobId,callback,jobParams);\n        mirror.android.app.job.JobParameters.callback.set(jobParams,session.asBinder());\n        mirror.android.app.job.JobParameters.jobId.set(jobParams,key.clientJobId);\n        Intent service=new Intent();\n        service.setComponent(new ComponentName(key.packageName,config.serviceName));\n        service.putExtra(\"_VA_|_user_id_\",VUserHandle.getUserId(key.vuid));\n        boolean bound=false;\n        try {\n          bound=bindService(service,session,0);\n        }\n catch (        Throwable e) {\n          VLog.e(TAG,e);\n        }\n        if (bound) {\n          mJobSessions.put(jobId,session);\n        }\n else {\n          emptyCallback(callback,jobId);\n          mScheduler.cancel(jobId);\n          get().cancel(jobId);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 240,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2099,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void startJob(JobParameters jobParams) throws RemoteException {\n  int jobId=jobParams.getJobId();\n  IBinder binder=mirror.android.app.job.JobParameters.callback.get(jobParams);\n  IJobCallback callback=IJobCallback.Stub.asInterface(binder);\n  Map.Entry<JobId,JobConfig> entry=get().findJobByVirtualJobId(jobId);\n  if (entry == null) {\n    emptyCallback(callback,jobId);\n    mScheduler.cancel(jobId);\n  }\n else {\n    JobId key=entry.getKey();\n    JobConfig config=entry.getValue();\nsynchronized (mJobSessions) {\n      JobSession session=mJobSessions.get(jobId);\n      if (session != null) {\n        emptyCallback(callback,jobId);\n      }\n else {\n        session=new JobSession(jobId,callback,jobParams);\n        mirror.android.app.job.JobParameters.callback.set(jobParams,session.asBinder());\n        mirror.android.app.job.JobParameters.jobId.set(jobParams,key.clientJobId);\n        Intent service=new Intent();\n        service.setComponent(new ComponentName(key.packageName,config.serviceName));\n        service.putExtra(\"_VA_|_user_id_\",VUserHandle.getUserId(key.vuid));\n        boolean bound=false;\n        try {\n          bound=bindService(service,session,0);\n        }\n catch (        Throwable e) {\n          VLog.e(TAG,e);\n        }\n        if (bound) {\n          mJobSessions.put(jobId,session);\n        }\n else {\n          emptyCallback(callback,jobId);\n          mScheduler.cancel(jobId);\n          get().cancel(jobId);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 252,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 90
      },
      "nodeContext" : "IBinder binder=mirror.android.app.job.JobParameters.callback.get(jobParams);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 9
    },
    "tokenLength" : 1,
    "type" : "com.lody.virtual.client.stub.JobParameters"
  }, {
    "nodeContext" : "jobParams",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 59,
      "startColumnNumber" : 66,
      "endLineNumber" : 59,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 59,
        "startColumnNumber" : 34,
        "endLineNumber" : 59,
        "endColumnNumber" : 76
      },
      "nodeContext" : "new JobSession(jobId,callback,jobParams)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 59,
        "startColumnNumber" : 24,
        "endLineNumber" : 59,
        "endColumnNumber" : 76
      },
      "nodeContext" : "session=new JobSession(jobId,callback,jobParams)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 59,
        "startColumnNumber" : 24,
        "endLineNumber" : 59,
        "endColumnNumber" : 77
      },
      "nodeContext" : "session=new JobSession(jobId,callback,jobParams);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1143,
        "startLineNumber" : 58,
        "startColumnNumber" : 27,
        "endLineNumber" : 78,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  session=new JobSession(jobId,callback,jobParams);\n  mirror.android.app.job.JobParameters.callback.set(jobParams,session.asBinder());\n  mirror.android.app.job.JobParameters.jobId.set(jobParams,key.clientJobId);\n  Intent service=new Intent();\n  service.setComponent(new ComponentName(key.packageName,config.serviceName));\n  service.putExtra(\"_VA_|_user_id_\",VUserHandle.getUserId(key.vuid));\n  boolean bound=false;\n  try {\n    bound=bindService(service,session,0);\n  }\n catch (  Throwable e) {\n    VLog.e(TAG,e);\n  }\n  if (bound) {\n    mJobSessions.put(jobId,session);\n  }\n else {\n    emptyCallback(callback,jobId);\n    mScheduler.cancel(jobId);\n    get().cancel(jobId);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 131,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1299,
        "startLineNumber" : 55,
        "startColumnNumber" : 20,
        "endLineNumber" : 78,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (session != null) {\n  emptyCallback(callback,jobId);\n}\n else {\n  session=new JobSession(jobId,callback,jobParams);\n  mirror.android.app.job.JobParameters.callback.set(jobParams,session.asBinder());\n  mirror.android.app.job.JobParameters.jobId.set(jobParams,key.clientJobId);\n  Intent service=new Intent();\n  service.setComponent(new ComponentName(key.packageName,config.serviceName));\n  service.putExtra(\"_VA_|_user_id_\",VUserHandle.getUserId(key.vuid));\n  boolean bound=false;\n  try {\n    bound=bindService(service,session,0);\n  }\n catch (  Throwable e) {\n    VLog.e(TAG,e);\n  }\n  if (bound) {\n    mJobSessions.put(jobId,session);\n  }\n else {\n    emptyCallback(callback,jobId);\n    mScheduler.cancel(jobId);\n    get().cancel(jobId);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 141,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 1405,
        "startLineNumber" : 53,
        "startColumnNumber" : 44,
        "endLineNumber" : 79,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  JobSession session=mJobSessions.get(jobId);\n  if (session != null) {\n    emptyCallback(callback,jobId);\n  }\n else {\n    session=new JobSession(jobId,callback,jobParams);\n    mirror.android.app.job.JobParameters.callback.set(jobParams,session.asBinder());\n    mirror.android.app.job.JobParameters.jobId.set(jobParams,key.clientJobId);\n    Intent service=new Intent();\n    service.setComponent(new ComponentName(key.packageName,config.serviceName));\n    service.putExtra(\"_VA_|_user_id_\",VUserHandle.getUserId(key.vuid));\n    boolean bound=false;\n    try {\n      bound=bindService(service,session,0);\n    }\n catch (    Throwable e) {\n      VLog.e(TAG,e);\n    }\n    if (bound) {\n      mJobSessions.put(jobId,session);\n    }\n else {\n      emptyCallback(callback,jobId);\n      mScheduler.cancel(jobId);\n      get().cancel(jobId);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1433,
        "startLineNumber" : 53,
        "startColumnNumber" : 16,
        "endLineNumber" : 79,
        "endColumnNumber" : 17
      },
      "nodeContext" : "synchronized (mJobSessions) {\n  JobSession session=mJobSessions.get(jobId);\n  if (session != null) {\n    emptyCallback(callback,jobId);\n  }\n else {\n    session=new JobSession(jobId,callback,jobParams);\n    mirror.android.app.job.JobParameters.callback.set(jobParams,session.asBinder());\n    mirror.android.app.job.JobParameters.jobId.set(jobParams,key.clientJobId);\n    Intent service=new Intent();\n    service.setComponent(new ComponentName(key.packageName,config.serviceName));\n    service.putExtra(\"_VA_|_user_id_\",VUserHandle.getUserId(key.vuid));\n    boolean bound=false;\n    try {\n      bound=bindService(service,session,0);\n    }\n catch (    Throwable e) {\n      VLog.e(TAG,e);\n    }\n    if (bound) {\n      mJobSessions.put(jobId,session);\n    }\n else {\n      emptyCallback(callback,jobId);\n      mScheduler.cancel(jobId);\n      get().cancel(jobId);\n    }\n  }\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 153,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1562,
        "startLineNumber" : 50,
        "startColumnNumber" : 19,
        "endLineNumber" : 80,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  JobId key=entry.getKey();\n  JobConfig config=entry.getValue();\nsynchronized (mJobSessions) {\n    JobSession session=mJobSessions.get(jobId);\n    if (session != null) {\n      emptyCallback(callback,jobId);\n    }\n else {\n      session=new JobSession(jobId,callback,jobParams);\n      mirror.android.app.job.JobParameters.callback.set(jobParams,session.asBinder());\n      mirror.android.app.job.JobParameters.jobId.set(jobParams,key.clientJobId);\n      Intent service=new Intent();\n      service.setComponent(new ComponentName(key.packageName,config.serviceName));\n      service.putExtra(\"_VA_|_user_id_\",VUserHandle.getUserId(key.vuid));\n      boolean bound=false;\n      try {\n        bound=bindService(service,session,0);\n      }\n catch (      Throwable e) {\n        VLog.e(TAG,e);\n      }\n      if (bound) {\n        mJobSessions.put(jobId,session);\n      }\n else {\n        emptyCallback(callback,jobId);\n        mScheduler.cancel(jobId);\n        get().cancel(jobId);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1692,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 80,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (entry == null) {\n  emptyCallback(callback,jobId);\n  mScheduler.cancel(jobId);\n}\n else {\n  JobId key=entry.getKey();\n  JobConfig config=entry.getValue();\nsynchronized (mJobSessions) {\n    JobSession session=mJobSessions.get(jobId);\n    if (session != null) {\n      emptyCallback(callback,jobId);\n    }\n else {\n      session=new JobSession(jobId,callback,jobParams);\n      mirror.android.app.job.JobParameters.callback.set(jobParams,session.asBinder());\n      mirror.android.app.job.JobParameters.jobId.set(jobParams,key.clientJobId);\n      Intent service=new Intent();\n      service.setComponent(new ComponentName(key.packageName,config.serviceName));\n      service.putExtra(\"_VA_|_user_id_\",VUserHandle.getUserId(key.vuid));\n      boolean bound=false;\n      try {\n        bound=bindService(service,session,0);\n      }\n catch (      Throwable e) {\n        VLog.e(TAG,e);\n      }\n      if (bound) {\n        mJobSessions.put(jobId,session);\n      }\n else {\n        emptyCallback(callback,jobId);\n        mScheduler.cancel(jobId);\n        get().cancel(jobId);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 185,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2012,
        "startLineNumber" : 42,
        "startColumnNumber" : 77,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int jobId=jobParams.getJobId();\n  IBinder binder=mirror.android.app.job.JobParameters.callback.get(jobParams);\n  IJobCallback callback=IJobCallback.Stub.asInterface(binder);\n  Map.Entry<JobId,JobConfig> entry=get().findJobByVirtualJobId(jobId);\n  if (entry == null) {\n    emptyCallback(callback,jobId);\n    mScheduler.cancel(jobId);\n  }\n else {\n    JobId key=entry.getKey();\n    JobConfig config=entry.getValue();\nsynchronized (mJobSessions) {\n      JobSession session=mJobSessions.get(jobId);\n      if (session != null) {\n        emptyCallback(callback,jobId);\n      }\n else {\n        session=new JobSession(jobId,callback,jobParams);\n        mirror.android.app.job.JobParameters.callback.set(jobParams,session.asBinder());\n        mirror.android.app.job.JobParameters.jobId.set(jobParams,key.clientJobId);\n        Intent service=new Intent();\n        service.setComponent(new ComponentName(key.packageName,config.serviceName));\n        service.putExtra(\"_VA_|_user_id_\",VUserHandle.getUserId(key.vuid));\n        boolean bound=false;\n        try {\n          bound=bindService(service,session,0);\n        }\n catch (        Throwable e) {\n          VLog.e(TAG,e);\n        }\n        if (bound) {\n          mJobSessions.put(jobId,session);\n        }\n else {\n          emptyCallback(callback,jobId);\n          mScheduler.cancel(jobId);\n          get().cancel(jobId);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 240,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2099,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void startJob(JobParameters jobParams) throws RemoteException {\n  int jobId=jobParams.getJobId();\n  IBinder binder=mirror.android.app.job.JobParameters.callback.get(jobParams);\n  IJobCallback callback=IJobCallback.Stub.asInterface(binder);\n  Map.Entry<JobId,JobConfig> entry=get().findJobByVirtualJobId(jobId);\n  if (entry == null) {\n    emptyCallback(callback,jobId);\n    mScheduler.cancel(jobId);\n  }\n else {\n    JobId key=entry.getKey();\n    JobConfig config=entry.getValue();\nsynchronized (mJobSessions) {\n      JobSession session=mJobSessions.get(jobId);\n      if (session != null) {\n        emptyCallback(callback,jobId);\n      }\n else {\n        session=new JobSession(jobId,callback,jobParams);\n        mirror.android.app.job.JobParameters.callback.set(jobParams,session.asBinder());\n        mirror.android.app.job.JobParameters.jobId.set(jobParams,key.clientJobId);\n        Intent service=new Intent();\n        service.setComponent(new ComponentName(key.packageName,config.serviceName));\n        service.putExtra(\"_VA_|_user_id_\",VUserHandle.getUserId(key.vuid));\n        boolean bound=false;\n        try {\n          bound=bindService(service,session,0);\n        }\n catch (        Throwable e) {\n          VLog.e(TAG,e);\n        }\n        if (bound) {\n          mJobSessions.put(jobId,session);\n        }\n else {\n          emptyCallback(callback,jobId);\n          mScheduler.cancel(jobId);\n          get().cancel(jobId);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 252,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 59,
        "startColumnNumber" : 24,
        "endLineNumber" : 59,
        "endColumnNumber" : 77
      },
      "nodeContext" : "session=new JobSession(jobId,callback,jobParams);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.lody.virtual.client.stub.JobParameters"
  }, {
    "nodeContext" : "jobParams",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 60,
      "startColumnNumber" : 74,
      "endLineNumber" : 60,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 60,
        "startColumnNumber" : 24,
        "endLineNumber" : 60,
        "endColumnNumber" : 104
      },
      "nodeContext" : "mirror.android.app.job.JobParameters.callback.set(jobParams,session.asBinder())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 60,
        "startColumnNumber" : 24,
        "endLineNumber" : 60,
        "endColumnNumber" : 105
      },
      "nodeContext" : "mirror.android.app.job.JobParameters.callback.set(jobParams,session.asBinder());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1143,
        "startLineNumber" : 58,
        "startColumnNumber" : 27,
        "endLineNumber" : 78,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  session=new JobSession(jobId,callback,jobParams);\n  mirror.android.app.job.JobParameters.callback.set(jobParams,session.asBinder());\n  mirror.android.app.job.JobParameters.jobId.set(jobParams,key.clientJobId);\n  Intent service=new Intent();\n  service.setComponent(new ComponentName(key.packageName,config.serviceName));\n  service.putExtra(\"_VA_|_user_id_\",VUserHandle.getUserId(key.vuid));\n  boolean bound=false;\n  try {\n    bound=bindService(service,session,0);\n  }\n catch (  Throwable e) {\n    VLog.e(TAG,e);\n  }\n  if (bound) {\n    mJobSessions.put(jobId,session);\n  }\n else {\n    emptyCallback(callback,jobId);\n    mScheduler.cancel(jobId);\n    get().cancel(jobId);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 131,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1299,
        "startLineNumber" : 55,
        "startColumnNumber" : 20,
        "endLineNumber" : 78,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (session != null) {\n  emptyCallback(callback,jobId);\n}\n else {\n  session=new JobSession(jobId,callback,jobParams);\n  mirror.android.app.job.JobParameters.callback.set(jobParams,session.asBinder());\n  mirror.android.app.job.JobParameters.jobId.set(jobParams,key.clientJobId);\n  Intent service=new Intent();\n  service.setComponent(new ComponentName(key.packageName,config.serviceName));\n  service.putExtra(\"_VA_|_user_id_\",VUserHandle.getUserId(key.vuid));\n  boolean bound=false;\n  try {\n    bound=bindService(service,session,0);\n  }\n catch (  Throwable e) {\n    VLog.e(TAG,e);\n  }\n  if (bound) {\n    mJobSessions.put(jobId,session);\n  }\n else {\n    emptyCallback(callback,jobId);\n    mScheduler.cancel(jobId);\n    get().cancel(jobId);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 141,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 1405,
        "startLineNumber" : 53,
        "startColumnNumber" : 44,
        "endLineNumber" : 79,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  JobSession session=mJobSessions.get(jobId);\n  if (session != null) {\n    emptyCallback(callback,jobId);\n  }\n else {\n    session=new JobSession(jobId,callback,jobParams);\n    mirror.android.app.job.JobParameters.callback.set(jobParams,session.asBinder());\n    mirror.android.app.job.JobParameters.jobId.set(jobParams,key.clientJobId);\n    Intent service=new Intent();\n    service.setComponent(new ComponentName(key.packageName,config.serviceName));\n    service.putExtra(\"_VA_|_user_id_\",VUserHandle.getUserId(key.vuid));\n    boolean bound=false;\n    try {\n      bound=bindService(service,session,0);\n    }\n catch (    Throwable e) {\n      VLog.e(TAG,e);\n    }\n    if (bound) {\n      mJobSessions.put(jobId,session);\n    }\n else {\n      emptyCallback(callback,jobId);\n      mScheduler.cancel(jobId);\n      get().cancel(jobId);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1433,
        "startLineNumber" : 53,
        "startColumnNumber" : 16,
        "endLineNumber" : 79,
        "endColumnNumber" : 17
      },
      "nodeContext" : "synchronized (mJobSessions) {\n  JobSession session=mJobSessions.get(jobId);\n  if (session != null) {\n    emptyCallback(callback,jobId);\n  }\n else {\n    session=new JobSession(jobId,callback,jobParams);\n    mirror.android.app.job.JobParameters.callback.set(jobParams,session.asBinder());\n    mirror.android.app.job.JobParameters.jobId.set(jobParams,key.clientJobId);\n    Intent service=new Intent();\n    service.setComponent(new ComponentName(key.packageName,config.serviceName));\n    service.putExtra(\"_VA_|_user_id_\",VUserHandle.getUserId(key.vuid));\n    boolean bound=false;\n    try {\n      bound=bindService(service,session,0);\n    }\n catch (    Throwable e) {\n      VLog.e(TAG,e);\n    }\n    if (bound) {\n      mJobSessions.put(jobId,session);\n    }\n else {\n      emptyCallback(callback,jobId);\n      mScheduler.cancel(jobId);\n      get().cancel(jobId);\n    }\n  }\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 153,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1562,
        "startLineNumber" : 50,
        "startColumnNumber" : 19,
        "endLineNumber" : 80,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  JobId key=entry.getKey();\n  JobConfig config=entry.getValue();\nsynchronized (mJobSessions) {\n    JobSession session=mJobSessions.get(jobId);\n    if (session != null) {\n      emptyCallback(callback,jobId);\n    }\n else {\n      session=new JobSession(jobId,callback,jobParams);\n      mirror.android.app.job.JobParameters.callback.set(jobParams,session.asBinder());\n      mirror.android.app.job.JobParameters.jobId.set(jobParams,key.clientJobId);\n      Intent service=new Intent();\n      service.setComponent(new ComponentName(key.packageName,config.serviceName));\n      service.putExtra(\"_VA_|_user_id_\",VUserHandle.getUserId(key.vuid));\n      boolean bound=false;\n      try {\n        bound=bindService(service,session,0);\n      }\n catch (      Throwable e) {\n        VLog.e(TAG,e);\n      }\n      if (bound) {\n        mJobSessions.put(jobId,session);\n      }\n else {\n        emptyCallback(callback,jobId);\n        mScheduler.cancel(jobId);\n        get().cancel(jobId);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1692,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 80,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (entry == null) {\n  emptyCallback(callback,jobId);\n  mScheduler.cancel(jobId);\n}\n else {\n  JobId key=entry.getKey();\n  JobConfig config=entry.getValue();\nsynchronized (mJobSessions) {\n    JobSession session=mJobSessions.get(jobId);\n    if (session != null) {\n      emptyCallback(callback,jobId);\n    }\n else {\n      session=new JobSession(jobId,callback,jobParams);\n      mirror.android.app.job.JobParameters.callback.set(jobParams,session.asBinder());\n      mirror.android.app.job.JobParameters.jobId.set(jobParams,key.clientJobId);\n      Intent service=new Intent();\n      service.setComponent(new ComponentName(key.packageName,config.serviceName));\n      service.putExtra(\"_VA_|_user_id_\",VUserHandle.getUserId(key.vuid));\n      boolean bound=false;\n      try {\n        bound=bindService(service,session,0);\n      }\n catch (      Throwable e) {\n        VLog.e(TAG,e);\n      }\n      if (bound) {\n        mJobSessions.put(jobId,session);\n      }\n else {\n        emptyCallback(callback,jobId);\n        mScheduler.cancel(jobId);\n        get().cancel(jobId);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 185,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2012,
        "startLineNumber" : 42,
        "startColumnNumber" : 77,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int jobId=jobParams.getJobId();\n  IBinder binder=mirror.android.app.job.JobParameters.callback.get(jobParams);\n  IJobCallback callback=IJobCallback.Stub.asInterface(binder);\n  Map.Entry<JobId,JobConfig> entry=get().findJobByVirtualJobId(jobId);\n  if (entry == null) {\n    emptyCallback(callback,jobId);\n    mScheduler.cancel(jobId);\n  }\n else {\n    JobId key=entry.getKey();\n    JobConfig config=entry.getValue();\nsynchronized (mJobSessions) {\n      JobSession session=mJobSessions.get(jobId);\n      if (session != null) {\n        emptyCallback(callback,jobId);\n      }\n else {\n        session=new JobSession(jobId,callback,jobParams);\n        mirror.android.app.job.JobParameters.callback.set(jobParams,session.asBinder());\n        mirror.android.app.job.JobParameters.jobId.set(jobParams,key.clientJobId);\n        Intent service=new Intent();\n        service.setComponent(new ComponentName(key.packageName,config.serviceName));\n        service.putExtra(\"_VA_|_user_id_\",VUserHandle.getUserId(key.vuid));\n        boolean bound=false;\n        try {\n          bound=bindService(service,session,0);\n        }\n catch (        Throwable e) {\n          VLog.e(TAG,e);\n        }\n        if (bound) {\n          mJobSessions.put(jobId,session);\n        }\n else {\n          emptyCallback(callback,jobId);\n          mScheduler.cancel(jobId);\n          get().cancel(jobId);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 240,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2099,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void startJob(JobParameters jobParams) throws RemoteException {\n  int jobId=jobParams.getJobId();\n  IBinder binder=mirror.android.app.job.JobParameters.callback.get(jobParams);\n  IJobCallback callback=IJobCallback.Stub.asInterface(binder);\n  Map.Entry<JobId,JobConfig> entry=get().findJobByVirtualJobId(jobId);\n  if (entry == null) {\n    emptyCallback(callback,jobId);\n    mScheduler.cancel(jobId);\n  }\n else {\n    JobId key=entry.getKey();\n    JobConfig config=entry.getValue();\nsynchronized (mJobSessions) {\n      JobSession session=mJobSessions.get(jobId);\n      if (session != null) {\n        emptyCallback(callback,jobId);\n      }\n else {\n        session=new JobSession(jobId,callback,jobParams);\n        mirror.android.app.job.JobParameters.callback.set(jobParams,session.asBinder());\n        mirror.android.app.job.JobParameters.jobId.set(jobParams,key.clientJobId);\n        Intent service=new Intent();\n        service.setComponent(new ComponentName(key.packageName,config.serviceName));\n        service.putExtra(\"_VA_|_user_id_\",VUserHandle.getUserId(key.vuid));\n        boolean bound=false;\n        try {\n          bound=bindService(service,session,0);\n        }\n catch (        Throwable e) {\n          VLog.e(TAG,e);\n        }\n        if (bound) {\n          mJobSessions.put(jobId,session);\n        }\n else {\n          emptyCallback(callback,jobId);\n          mScheduler.cancel(jobId);\n          get().cancel(jobId);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 252,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 60,
        "startColumnNumber" : 24,
        "endLineNumber" : 60,
        "endColumnNumber" : 105
      },
      "nodeContext" : "mirror.android.app.job.JobParameters.callback.set(jobParams,session.asBinder());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "com.lody.virtual.client.stub.JobParameters"
  }, {
    "nodeContext" : "jobParams",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 61,
      "startColumnNumber" : 71,
      "endLineNumber" : 61,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 61,
        "startColumnNumber" : 24,
        "endLineNumber" : 61,
        "endColumnNumber" : 98
      },
      "nodeContext" : "mirror.android.app.job.JobParameters.jobId.set(jobParams,key.clientJobId)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 61,
        "startColumnNumber" : 24,
        "endLineNumber" : 61,
        "endColumnNumber" : 99
      },
      "nodeContext" : "mirror.android.app.job.JobParameters.jobId.set(jobParams,key.clientJobId);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1143,
        "startLineNumber" : 58,
        "startColumnNumber" : 27,
        "endLineNumber" : 78,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  session=new JobSession(jobId,callback,jobParams);\n  mirror.android.app.job.JobParameters.callback.set(jobParams,session.asBinder());\n  mirror.android.app.job.JobParameters.jobId.set(jobParams,key.clientJobId);\n  Intent service=new Intent();\n  service.setComponent(new ComponentName(key.packageName,config.serviceName));\n  service.putExtra(\"_VA_|_user_id_\",VUserHandle.getUserId(key.vuid));\n  boolean bound=false;\n  try {\n    bound=bindService(service,session,0);\n  }\n catch (  Throwable e) {\n    VLog.e(TAG,e);\n  }\n  if (bound) {\n    mJobSessions.put(jobId,session);\n  }\n else {\n    emptyCallback(callback,jobId);\n    mScheduler.cancel(jobId);\n    get().cancel(jobId);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 131,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1299,
        "startLineNumber" : 55,
        "startColumnNumber" : 20,
        "endLineNumber" : 78,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (session != null) {\n  emptyCallback(callback,jobId);\n}\n else {\n  session=new JobSession(jobId,callback,jobParams);\n  mirror.android.app.job.JobParameters.callback.set(jobParams,session.asBinder());\n  mirror.android.app.job.JobParameters.jobId.set(jobParams,key.clientJobId);\n  Intent service=new Intent();\n  service.setComponent(new ComponentName(key.packageName,config.serviceName));\n  service.putExtra(\"_VA_|_user_id_\",VUserHandle.getUserId(key.vuid));\n  boolean bound=false;\n  try {\n    bound=bindService(service,session,0);\n  }\n catch (  Throwable e) {\n    VLog.e(TAG,e);\n  }\n  if (bound) {\n    mJobSessions.put(jobId,session);\n  }\n else {\n    emptyCallback(callback,jobId);\n    mScheduler.cancel(jobId);\n    get().cancel(jobId);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 141,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 1405,
        "startLineNumber" : 53,
        "startColumnNumber" : 44,
        "endLineNumber" : 79,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  JobSession session=mJobSessions.get(jobId);\n  if (session != null) {\n    emptyCallback(callback,jobId);\n  }\n else {\n    session=new JobSession(jobId,callback,jobParams);\n    mirror.android.app.job.JobParameters.callback.set(jobParams,session.asBinder());\n    mirror.android.app.job.JobParameters.jobId.set(jobParams,key.clientJobId);\n    Intent service=new Intent();\n    service.setComponent(new ComponentName(key.packageName,config.serviceName));\n    service.putExtra(\"_VA_|_user_id_\",VUserHandle.getUserId(key.vuid));\n    boolean bound=false;\n    try {\n      bound=bindService(service,session,0);\n    }\n catch (    Throwable e) {\n      VLog.e(TAG,e);\n    }\n    if (bound) {\n      mJobSessions.put(jobId,session);\n    }\n else {\n      emptyCallback(callback,jobId);\n      mScheduler.cancel(jobId);\n      get().cancel(jobId);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1433,
        "startLineNumber" : 53,
        "startColumnNumber" : 16,
        "endLineNumber" : 79,
        "endColumnNumber" : 17
      },
      "nodeContext" : "synchronized (mJobSessions) {\n  JobSession session=mJobSessions.get(jobId);\n  if (session != null) {\n    emptyCallback(callback,jobId);\n  }\n else {\n    session=new JobSession(jobId,callback,jobParams);\n    mirror.android.app.job.JobParameters.callback.set(jobParams,session.asBinder());\n    mirror.android.app.job.JobParameters.jobId.set(jobParams,key.clientJobId);\n    Intent service=new Intent();\n    service.setComponent(new ComponentName(key.packageName,config.serviceName));\n    service.putExtra(\"_VA_|_user_id_\",VUserHandle.getUserId(key.vuid));\n    boolean bound=false;\n    try {\n      bound=bindService(service,session,0);\n    }\n catch (    Throwable e) {\n      VLog.e(TAG,e);\n    }\n    if (bound) {\n      mJobSessions.put(jobId,session);\n    }\n else {\n      emptyCallback(callback,jobId);\n      mScheduler.cancel(jobId);\n      get().cancel(jobId);\n    }\n  }\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 153,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1562,
        "startLineNumber" : 50,
        "startColumnNumber" : 19,
        "endLineNumber" : 80,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  JobId key=entry.getKey();\n  JobConfig config=entry.getValue();\nsynchronized (mJobSessions) {\n    JobSession session=mJobSessions.get(jobId);\n    if (session != null) {\n      emptyCallback(callback,jobId);\n    }\n else {\n      session=new JobSession(jobId,callback,jobParams);\n      mirror.android.app.job.JobParameters.callback.set(jobParams,session.asBinder());\n      mirror.android.app.job.JobParameters.jobId.set(jobParams,key.clientJobId);\n      Intent service=new Intent();\n      service.setComponent(new ComponentName(key.packageName,config.serviceName));\n      service.putExtra(\"_VA_|_user_id_\",VUserHandle.getUserId(key.vuid));\n      boolean bound=false;\n      try {\n        bound=bindService(service,session,0);\n      }\n catch (      Throwable e) {\n        VLog.e(TAG,e);\n      }\n      if (bound) {\n        mJobSessions.put(jobId,session);\n      }\n else {\n        emptyCallback(callback,jobId);\n        mScheduler.cancel(jobId);\n        get().cancel(jobId);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1692,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 80,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (entry == null) {\n  emptyCallback(callback,jobId);\n  mScheduler.cancel(jobId);\n}\n else {\n  JobId key=entry.getKey();\n  JobConfig config=entry.getValue();\nsynchronized (mJobSessions) {\n    JobSession session=mJobSessions.get(jobId);\n    if (session != null) {\n      emptyCallback(callback,jobId);\n    }\n else {\n      session=new JobSession(jobId,callback,jobParams);\n      mirror.android.app.job.JobParameters.callback.set(jobParams,session.asBinder());\n      mirror.android.app.job.JobParameters.jobId.set(jobParams,key.clientJobId);\n      Intent service=new Intent();\n      service.setComponent(new ComponentName(key.packageName,config.serviceName));\n      service.putExtra(\"_VA_|_user_id_\",VUserHandle.getUserId(key.vuid));\n      boolean bound=false;\n      try {\n        bound=bindService(service,session,0);\n      }\n catch (      Throwable e) {\n        VLog.e(TAG,e);\n      }\n      if (bound) {\n        mJobSessions.put(jobId,session);\n      }\n else {\n        emptyCallback(callback,jobId);\n        mScheduler.cancel(jobId);\n        get().cancel(jobId);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 185,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2012,
        "startLineNumber" : 42,
        "startColumnNumber" : 77,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int jobId=jobParams.getJobId();\n  IBinder binder=mirror.android.app.job.JobParameters.callback.get(jobParams);\n  IJobCallback callback=IJobCallback.Stub.asInterface(binder);\n  Map.Entry<JobId,JobConfig> entry=get().findJobByVirtualJobId(jobId);\n  if (entry == null) {\n    emptyCallback(callback,jobId);\n    mScheduler.cancel(jobId);\n  }\n else {\n    JobId key=entry.getKey();\n    JobConfig config=entry.getValue();\nsynchronized (mJobSessions) {\n      JobSession session=mJobSessions.get(jobId);\n      if (session != null) {\n        emptyCallback(callback,jobId);\n      }\n else {\n        session=new JobSession(jobId,callback,jobParams);\n        mirror.android.app.job.JobParameters.callback.set(jobParams,session.asBinder());\n        mirror.android.app.job.JobParameters.jobId.set(jobParams,key.clientJobId);\n        Intent service=new Intent();\n        service.setComponent(new ComponentName(key.packageName,config.serviceName));\n        service.putExtra(\"_VA_|_user_id_\",VUserHandle.getUserId(key.vuid));\n        boolean bound=false;\n        try {\n          bound=bindService(service,session,0);\n        }\n catch (        Throwable e) {\n          VLog.e(TAG,e);\n        }\n        if (bound) {\n          mJobSessions.put(jobId,session);\n        }\n else {\n          emptyCallback(callback,jobId);\n          mScheduler.cancel(jobId);\n          get().cancel(jobId);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 240,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2099,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void startJob(JobParameters jobParams) throws RemoteException {\n  int jobId=jobParams.getJobId();\n  IBinder binder=mirror.android.app.job.JobParameters.callback.get(jobParams);\n  IJobCallback callback=IJobCallback.Stub.asInterface(binder);\n  Map.Entry<JobId,JobConfig> entry=get().findJobByVirtualJobId(jobId);\n  if (entry == null) {\n    emptyCallback(callback,jobId);\n    mScheduler.cancel(jobId);\n  }\n else {\n    JobId key=entry.getKey();\n    JobConfig config=entry.getValue();\nsynchronized (mJobSessions) {\n      JobSession session=mJobSessions.get(jobId);\n      if (session != null) {\n        emptyCallback(callback,jobId);\n      }\n else {\n        session=new JobSession(jobId,callback,jobParams);\n        mirror.android.app.job.JobParameters.callback.set(jobParams,session.asBinder());\n        mirror.android.app.job.JobParameters.jobId.set(jobParams,key.clientJobId);\n        Intent service=new Intent();\n        service.setComponent(new ComponentName(key.packageName,config.serviceName));\n        service.putExtra(\"_VA_|_user_id_\",VUserHandle.getUserId(key.vuid));\n        boolean bound=false;\n        try {\n          bound=bindService(service,session,0);\n        }\n catch (        Throwable e) {\n          VLog.e(TAG,e);\n        }\n        if (bound) {\n          mJobSessions.put(jobId,session);\n        }\n else {\n          emptyCallback(callback,jobId);\n          mScheduler.cancel(jobId);\n          get().cancel(jobId);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 252,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 61,
        "startColumnNumber" : 24,
        "endLineNumber" : 61,
        "endColumnNumber" : 99
      },
      "nodeContext" : "mirror.android.app.job.JobParameters.jobId.set(jobParams,key.clientJobId);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "com.lody.virtual.client.stub.JobParameters"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 43,
    "startColumnNumber" : 24,
    "endLineNumber" : 43,
    "endColumnNumber" : 33
  }, {
    "charLength" : 9,
    "startLineNumber" : 44,
    "startColumnNumber" : 79,
    "endLineNumber" : 44,
    "endColumnNumber" : 88
  }, {
    "charLength" : 9,
    "startLineNumber" : 59,
    "startColumnNumber" : 66,
    "endLineNumber" : 59,
    "endColumnNumber" : 75
  }, {
    "charLength" : 9,
    "startLineNumber" : 60,
    "startColumnNumber" : 74,
    "endLineNumber" : 60,
    "endColumnNumber" : 83
  }, {
    "charLength" : 9,
    "startLineNumber" : 61,
    "startColumnNumber" : 71,
    "endLineNumber" : 61,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 9
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  } ]
}