{
  "id" : 166,
  "expression" : "null",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/plan/type/FlinkReturnTypes.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 57,
      "startColumnNumber" : 34,
      "endLineNumber" : 57,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 57,
        "startColumnNumber" : 24,
        "endLineNumber" : 57,
        "endColumnNumber" : 38
      },
      "nodeContext" : "lenVal == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 57,
        "startColumnNumber" : 20,
        "endLineNumber" : 59,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (lenVal == null) {\n  return numType;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1231,
        "startLineNumber" : 44,
        "startColumnNumber" : 81,
        "endLineNumber" : 68,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  final RelDataType numType=opBinding.getOperandType(0);\n  if (numType.getSqlTypeName() != SqlTypeName.DECIMAL) {\n    return numType;\n  }\n  final BigDecimal lenVal;\n  if (opBinding.getOperandCount() == 1) {\n    lenVal=BigDecimal.ZERO;\n  }\n else   if (opBinding.getOperandCount() == 2) {\n    lenVal=getArg1Literal(opBinding);\n  }\n else {\n    throw new AssertionError();\n  }\n  if (lenVal == null) {\n    return numType;\n  }\n  final int p=numType.getPrecision();\n  final int s=numType.getScale();\n  final int r=lenVal.intValueExact();\n  DecimalType dt=LogicalTypeMerging.findRoundDecimalType(p,s,r);\n  return opBinding.getTypeFactory().createSqlType(SqlTypeName.DECIMAL,dt.getPrecision(),dt.getScale());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1322,
        "startLineNumber" : 43,
        "startColumnNumber" : 16,
        "endLineNumber" : 68,
        "endColumnNumber" : 17
      },
      "nodeContext" : "@Override public RelDataType inferReturnType(SqlOperatorBinding opBinding){\n  final RelDataType numType=opBinding.getOperandType(0);\n  if (numType.getSqlTypeName() != SqlTypeName.DECIMAL) {\n    return numType;\n  }\n  final BigDecimal lenVal;\n  if (opBinding.getOperandCount() == 1) {\n    lenVal=BigDecimal.ZERO;\n  }\n else   if (opBinding.getOperandCount() == 2) {\n    lenVal=getArg1Literal(opBinding);\n  }\n else {\n    throw new AssertionError();\n  }\n  if (lenVal == null) {\n    return numType;\n  }\n  final int p=numType.getPrecision();\n  final int s=numType.getScale();\n  final int r=lenVal.intValueExact();\n  DecimalType dt=LogicalTypeMerging.findRoundDecimalType(p,s,r);\n  return opBinding.getTypeFactory().createSqlType(SqlTypeName.DECIMAL,dt.getPrecision(),dt.getScale());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 57,
        "startColumnNumber" : 24,
        "endLineNumber" : 57,
        "endColumnNumber" : 38
      },
      "nodeContext" : "lenVal == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 57,
    "startColumnNumber" : 34,
    "endLineNumber" : 57,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}