{
  "id" : 60,
  "expression" : "'e'",
  "projectName" : "termux@termux-app",
  "commitID" : "6334470f81bdf003b8567af9e3531cec4dce560d",
  "filePath" : "/app/src/test/java/com/termux/terminal/TerminalRowTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "'e'",
    "nodeType" : "CharacterLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 99,
      "startColumnNumber" : 42,
      "endLineNumber" : 99,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 99,
        "startColumnNumber" : 31,
        "endLineNumber" : 99,
        "endColumnNumber" : 71
      },
      "nodeContext" : "{'a','c','e','4','5','6','7','8'}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 9,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 99,
        "startColumnNumber" : 21,
        "endLineNumber" : 99,
        "endColumnNumber" : 71
      },
      "nodeContext" : "new char[]{'a','c','e','4','5','6','7','8'}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 13,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 99,
        "startColumnNumber" : 9,
        "endLineNumber" : 99,
        "endColumnNumber" : 71
      },
      "nodeContext" : "someChars=new char[]{'a','c','e','4','5','6','7','8'}",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 99,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 72
      },
      "nodeContext" : "char[] someChars=new char[]{'a','c','e','4','5','6','7','8'};\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 938,
        "startLineNumber" : 87,
        "startColumnNumber" : 25,
        "endLineNumber" : 114,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  assertEquals(0,row.findStartOfColumn(0));\n  row.setChar(0,'a',0);\n  assertLineStartsWith('a',' ',' ');\n  assertEquals(1,row.findStartOfColumn(1));\n  assertEquals(80,row.getSpaceUsed());\n  row.setChar(0,'b',0);\n  assertEquals(1,row.findStartOfColumn(1));\n  assertEquals(2,row.findStartOfColumn(2));\n  assertEquals(80,row.getSpaceUsed());\n  assertColumnCharIndicesStartsWith(0,1,2,3);\n  char[] someChars=new char[]{'a','c','e','4','5','6','7','8'};\n  char[] rawLine=new char[80];\n  Arrays.fill(rawLine,' ');\n  Random random=new Random();\n  for (int i=0; i < 1000; i++) {\n    int lineIndex=random.nextInt(rawLine.length);\n    int charIndex=random.nextInt(someChars.length);\n    rawLine[lineIndex]=someChars[charIndex];\n    row.setChar(lineIndex,someChars[charIndex],0);\n  }\n  char[] lineChars=row.mText;\n  for (int i=0; i < rawLine.length; i++) {\n    assertEquals(rawLine[i],lineChars[i]);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 199,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 962,
        "startLineNumber" : 87,
        "startColumnNumber" : 1,
        "endLineNumber" : 114,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public void testAscii(){\n  assertEquals(0,row.findStartOfColumn(0));\n  row.setChar(0,'a',0);\n  assertLineStartsWith('a',' ',' ');\n  assertEquals(1,row.findStartOfColumn(1));\n  assertEquals(80,row.getSpaceUsed());\n  row.setChar(0,'b',0);\n  assertEquals(1,row.findStartOfColumn(1));\n  assertEquals(2,row.findStartOfColumn(2));\n  assertEquals(80,row.getSpaceUsed());\n  assertColumnCharIndicesStartsWith(0,1,2,3);\n  char[] someChars=new char[]{'a','c','e','4','5','6','7','8'};\n  char[] rawLine=new char[80];\n  Arrays.fill(rawLine,' ');\n  Random random=new Random();\n  for (int i=0; i < 1000; i++) {\n    int lineIndex=random.nextInt(rawLine.length);\n    int charIndex=random.nextInt(someChars.length);\n    rawLine[lineIndex]=someChars[charIndex];\n    row.setChar(lineIndex,someChars[charIndex],0);\n  }\n  char[] lineChars=row.mText;\n  for (int i=0; i < rawLine.length; i++) {\n    assertEquals(rawLine[i],lineChars[i]);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 203,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 99,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 72
      },
      "nodeContext" : "char[] someChars=new char[]{'a','c','e','4','5','6','7','8'};\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "char"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 99,
    "startColumnNumber" : 42,
    "endLineNumber" : 99,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}