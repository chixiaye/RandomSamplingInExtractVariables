{
  "id" : 389,
  "expression" : "\"A non-integer schemaVersion should throw an error\"",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-core/src/test/java/com/google/cloud/tools/jib/registry/ManifestPullerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"A non-integer schemaVersion should throw an error\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 51,
      "startLineNumber" : 101,
      "startColumnNumber" : 18,
      "endLineNumber" : 101,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 101,
        "startColumnNumber" : 6,
        "endLineNumber" : 101,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Assert.fail(\"A non-integer schemaVersion should throw an error\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 101,
        "startColumnNumber" : 6,
        "endLineNumber" : 101,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Assert.fail(\"A non-integer schemaVersion should throw an error\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  testManifestPuller.handleResponse(mockResponse);\n  Assert.fail(\"A non-integer schemaVersion should throw an error\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 276,
        "startLineNumber" : 99,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  testManifestPuller.handleResponse(mockResponse);\n  Assert.fail(\"A non-integer schemaVersion should throw an error\");\n}\n catch (UnknownManifestFormatException ex) {\n  Assert.assertEquals(\"`schemaVersion` field is not an integer\",ex.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 397,
        "startLineNumber" : 96,
        "startColumnNumber" : 75,
        "endLineNumber" : 106,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Mockito.when(mockResponse.getBody()).thenReturn(Blobs.from(\"{\\\"schemaVersion\\\":\\\"not valid\\\"}\"));\n  try {\n    testManifestPuller.handleResponse(mockResponse);\n    Assert.fail(\"A non-integer schemaVersion should throw an error\");\n  }\n catch (  UnknownManifestFormatException ex) {\n    Assert.assertEquals(\"`schemaVersion` field is not an integer\",ex.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 478,
        "startLineNumber" : 95,
        "startColumnNumber" : 2,
        "endLineNumber" : 106,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testHandleResponse_invalidSchemaVersion() throws IOException {\n  Mockito.when(mockResponse.getBody()).thenReturn(Blobs.from(\"{\\\"schemaVersion\\\":\\\"not valid\\\"}\"));\n  try {\n    testManifestPuller.handleResponse(mockResponse);\n    Assert.fail(\"A non-integer schemaVersion should throw an error\");\n  }\n catch (  UnknownManifestFormatException ex) {\n    Assert.assertEquals(\"`schemaVersion` field is not an integer\",ex.getMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 48,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 101,
        "startColumnNumber" : 6,
        "endLineNumber" : 101,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Assert.fail(\"A non-integer schemaVersion should throw an error\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 6,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 51,
    "startLineNumber" : 101,
    "startColumnNumber" : 18,
    "endLineNumber" : 101,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ ]
}