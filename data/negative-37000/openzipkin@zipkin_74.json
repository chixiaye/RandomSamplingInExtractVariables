{
  "id" : 74,
  "expression" : "\"USE \"",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin-storage/cassandra/src/main/java/zipkin/cassandra/SessionFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"USE \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 54,
      "startColumnNumber" : 26,
      "endLineNumber" : 54,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 54,
        "startColumnNumber" : 26,
        "endLineNumber" : 54,
        "endColumnNumber" : 53
      },
      "nodeContext" : "\"USE \" + cassandra.keyspace",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 54,
        "startColumnNumber" : 10,
        "endLineNumber" : 54,
        "endColumnNumber" : 54
      },
      "nodeContext" : "session.execute(\"USE \" + cassandra.keyspace)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 54,
        "startColumnNumber" : 10,
        "endLineNumber" : 54,
        "endColumnNumber" : 55
      },
      "nodeContext" : "session.execute(\"USE \" + cassandra.keyspace);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 51,
        "startColumnNumber" : 36,
        "endLineNumber" : 56,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Session session=closer.register(cluster.connect());\n  Schema.ensureExists(cassandra.keyspace,session);\n  session.execute(\"USE \" + cassandra.keyspace);\n  return session;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 316,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (cassandra.ensureSchema) {\n  Session session=closer.register(cluster.connect());\n  Schema.ensureExists(cassandra.keyspace,session);\n  session.execute(\"USE \" + cassandra.keyspace);\n  return session;\n}\n else {\n  return cluster.connect(cassandra.keyspace);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 402,
        "startLineNumber" : 49,
        "startColumnNumber" : 10,
        "endLineNumber" : 59,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  Cluster cluster=closer.register(buildCluster(cassandra));\n  if (cassandra.ensureSchema) {\n    Session session=closer.register(cluster.connect());\n    Schema.ensureExists(cassandra.keyspace,session);\n    session.execute(\"USE \" + cassandra.keyspace);\n    return session;\n  }\n else {\n    return cluster.connect(cassandra.keyspace);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 550,
        "startLineNumber" : 49,
        "startColumnNumber" : 6,
        "endLineNumber" : 65,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  Cluster cluster=closer.register(buildCluster(cassandra));\n  if (cassandra.ensureSchema) {\n    Session session=closer.register(cluster.connect());\n    Schema.ensureExists(cassandra.keyspace,session);\n    session.execute(\"USE \" + cassandra.keyspace);\n    return session;\n  }\n else {\n    return cluster.connect(cassandra.keyspace);\n  }\n}\n catch (RuntimeException e) {\n  try {\n    closer.close();\n  }\n catch (  IOException ignored) {\n  }\n  throw e;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 76,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 603,
        "startLineNumber" : 47,
        "startColumnNumber" : 64,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Closer closer=Closer.create();\n  try {\n    Cluster cluster=closer.register(buildCluster(cassandra));\n    if (cassandra.ensureSchema) {\n      Session session=closer.register(cluster.connect());\n      Schema.ensureExists(cassandra.keyspace,session);\n      session.execute(\"USE \" + cassandra.keyspace);\n      return session;\n    }\n else {\n      return cluster.connect(cassandra.keyspace);\n    }\n  }\n catch (  RuntimeException e) {\n    try {\n      closer.close();\n    }\n catch (    IOException ignored) {\n    }\n    throw e;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Creates a session and ensures schema if configured. Closes the cluster and session if any exception occurred.\n */\n@Override public Session create(CassandraStorage cassandra){\n  Closer closer=Closer.create();\n  try {\n    Cluster cluster=closer.register(buildCluster(cassandra));\n    if (cassandra.ensureSchema) {\n      Session session=closer.register(cluster.connect());\n      Schema.ensureExists(cassandra.keyspace,session);\n      session.execute(\"USE \" + cassandra.keyspace);\n      return session;\n    }\n else {\n      return cluster.connect(cassandra.keyspace);\n    }\n  }\n catch (  RuntimeException e) {\n    try {\n      closer.close();\n    }\n catch (    IOException ignored) {\n    }\n    throw e;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 54,
        "startColumnNumber" : 10,
        "endLineNumber" : 54,
        "endColumnNumber" : 55
      },
      "nodeContext" : "session.execute(\"USE \" + cassandra.keyspace);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 54,
    "startColumnNumber" : 26,
    "endLineNumber" : 54,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}