{
  "id" : 193,
  "expression" : "new FileBasedStore(type,path,password,keyPassword,true)",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/main/java/org/apache/kafka/common/security/ssl/DefaultSslEngineFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new FileBasedStore(type,path,password,keyPassword,true)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 59,
      "startLineNumber" : 299,
      "startColumnNumber" : 19,
      "endLineNumber" : 299,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 8,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 299,
        "startColumnNumber" : 12,
        "endLineNumber" : 299,
        "endColumnNumber" : 79
      },
      "nodeContext" : "return new FileBasedStore(type,path,password,keyPassword,true);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 298,
        "startColumnNumber" : 53,
        "endLineNumber" : 300,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return new FileBasedStore(type,path,password,keyPassword,true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 298,
        "startColumnNumber" : 15,
        "endLineNumber" : 301,
        "endColumnNumber" : 24
      },
      "nodeContext" : "if (path != null && password != null) {\n  return new FileBasedStore(type,path,password,keyPassword,true);\n}\n else return null;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 339,
        "startLineNumber" : 296,
        "startColumnNumber" : 15,
        "endLineNumber" : 301,
        "endColumnNumber" : 24
      },
      "nodeContext" : "if (path != null && password == null) {\n  throw new InvalidConfigurationException(\"SSL key store is specified, but key store password is not specified.\");\n}\n else if (path != null && password != null) {\n  return new FileBasedStore(type,path,password,keyPassword,true);\n}\n else return null;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 519,
        "startLineNumber" : 294,
        "startColumnNumber" : 15,
        "endLineNumber" : 301,
        "endColumnNumber" : 24
      },
      "nodeContext" : "if (path == null && password != null) {\n  throw new InvalidConfigurationException(\"SSL key store is not specified, but key store password is specified.\");\n}\n else if (path != null && password == null) {\n  throw new InvalidConfigurationException(\"SSL key store is specified, but key store password is not specified.\");\n}\n else if (path != null && password != null) {\n  return new FileBasedStore(type,path,password,keyPassword,true);\n}\n else return null;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1025,
        "startLineNumber" : 287,
        "startColumnNumber" : 15,
        "endLineNumber" : 301,
        "endColumnNumber" : 24
      },
      "nodeContext" : "if (PEM_TYPE.equals(type) && path != null) {\n  if (password != null)   throw new InvalidConfigurationException(\"SSL key store password cannot be specified with PEM format, only key password may be specified\");\n else   if (keyPassword == null)   throw new InvalidConfigurationException(\"SSL PEM key store is specified, but key password is not specified.\");\n else   return new FileBasedPemStore(path,keyPassword,true);\n}\n else if (path == null && password != null) {\n  throw new InvalidConfigurationException(\"SSL key store is not specified, but key store password is specified.\");\n}\n else if (path != null && password == null) {\n  throw new InvalidConfigurationException(\"SSL key store is specified, but key store password is not specified.\");\n}\n else if (path != null && password != null) {\n  return new FileBasedStore(type,path,password,keyPassword,true);\n}\n else return null;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 83,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1197,
        "startLineNumber" : 285,
        "startColumnNumber" : 15,
        "endLineNumber" : 301,
        "endColumnNumber" : 24
      },
      "nodeContext" : "if (certificateChain != null) {\n  throw new InvalidConfigurationException(\"SSL certificate chain is specified, but private key is not specified\");\n}\n else if (PEM_TYPE.equals(type) && path != null) {\n  if (password != null)   throw new InvalidConfigurationException(\"SSL key store password cannot be specified with PEM format, only key password may be specified\");\n else   if (keyPassword == null)   throw new InvalidConfigurationException(\"SSL PEM key store is specified, but key password is not specified.\");\n else   return new FileBasedPemStore(path,keyPassword,true);\n}\n else if (path == null && password != null) {\n  throw new InvalidConfigurationException(\"SSL key store is not specified, but key store password is specified.\");\n}\n else if (path != null && password == null) {\n  throw new InvalidConfigurationException(\"SSL key store is specified, but key store password is not specified.\");\n}\n else if (path != null && password != null) {\n  return new FileBasedStore(type,path,password,keyPassword,true);\n}\n else return null;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 93,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2053,
        "startLineNumber" : 274,
        "startColumnNumber" : 8,
        "endLineNumber" : 301,
        "endColumnNumber" : 24
      },
      "nodeContext" : "if (privateKey != null) {\n  if (!PEM_TYPE.equals(type))   throw new InvalidConfigurationException(\"SSL private key can be specified only for PEM, but key store type is \" + type + \".\");\n else   if (certificateChain == null)   throw new InvalidConfigurationException(\"SSL private key is specified, but certificate chain is not specified.\");\n else   if (path != null)   throw new InvalidConfigurationException(\"Both SSL key store location and separate private key are specified.\");\n else   if (password != null)   throw new InvalidConfigurationException(\"SSL key store password cannot be specified with PEM format, only key password may be specified.\");\n else   return new PemStore(certificateChain,privateKey,keyPassword);\n}\n else if (certificateChain != null) {\n  throw new InvalidConfigurationException(\"SSL certificate chain is specified, but private key is not specified\");\n}\n else if (PEM_TYPE.equals(type) && path != null) {\n  if (password != null)   throw new InvalidConfigurationException(\"SSL key store password cannot be specified with PEM format, only key password may be specified\");\n else   if (keyPassword == null)   throw new InvalidConfigurationException(\"SSL PEM key store is specified, but key password is not specified.\");\n else   return new FileBasedPemStore(path,keyPassword,true);\n}\n else if (path == null && password != null) {\n  throw new InvalidConfigurationException(\"SSL key store is not specified, but key store password is specified.\");\n}\n else if (path != null && password == null) {\n  throw new InvalidConfigurationException(\"SSL key store is specified, but key store password is not specified.\");\n}\n else if (path != null && password != null) {\n  return new FileBasedStore(type,path,password,keyPassword,true);\n}\n else return null;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 146,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2156,
        "startLineNumber" : 273,
        "startColumnNumber" : 158,
        "endLineNumber" : 302,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (privateKey != null) {\n    if (!PEM_TYPE.equals(type))     throw new InvalidConfigurationException(\"SSL private key can be specified only for PEM, but key store type is \" + type + \".\");\n else     if (certificateChain == null)     throw new InvalidConfigurationException(\"SSL private key is specified, but certificate chain is not specified.\");\n else     if (path != null)     throw new InvalidConfigurationException(\"Both SSL key store location and separate private key are specified.\");\n else     if (password != null)     throw new InvalidConfigurationException(\"SSL key store password cannot be specified with PEM format, only key password may be specified.\");\n else     return new PemStore(certificateChain,privateKey,keyPassword);\n  }\n else   if (certificateChain != null) {\n    throw new InvalidConfigurationException(\"SSL certificate chain is specified, but private key is not specified\");\n  }\n else   if (PEM_TYPE.equals(type) && path != null) {\n    if (password != null)     throw new InvalidConfigurationException(\"SSL key store password cannot be specified with PEM format, only key password may be specified\");\n else     if (keyPassword == null)     throw new InvalidConfigurationException(\"SSL PEM key store is specified, but key password is not specified.\");\n else     return new FileBasedPemStore(path,keyPassword,true);\n  }\n else   if (path == null && password != null) {\n    throw new InvalidConfigurationException(\"SSL key store is not specified, but key store password is specified.\");\n  }\n else   if (path != null && password == null) {\n    throw new InvalidConfigurationException(\"SSL key store is specified, but key store password is not specified.\");\n  }\n else   if (path != null && password != null) {\n    return new FileBasedStore(type,path,password,keyPassword,true);\n  }\n else   return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 147,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2310,
        "startLineNumber" : 273,
        "startColumnNumber" : 4,
        "endLineNumber" : 302,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected SecurityStore createKeystore(String type,String path,Password password,Password keyPassword,Password privateKey,Password certificateChain){\n  if (privateKey != null) {\n    if (!PEM_TYPE.equals(type))     throw new InvalidConfigurationException(\"SSL private key can be specified only for PEM, but key store type is \" + type + \".\");\n else     if (certificateChain == null)     throw new InvalidConfigurationException(\"SSL private key is specified, but certificate chain is not specified.\");\n else     if (path != null)     throw new InvalidConfigurationException(\"Both SSL key store location and separate private key are specified.\");\n else     if (password != null)     throw new InvalidConfigurationException(\"SSL key store password cannot be specified with PEM format, only key password may be specified.\");\n else     return new PemStore(certificateChain,privateKey,keyPassword);\n  }\n else   if (certificateChain != null) {\n    throw new InvalidConfigurationException(\"SSL certificate chain is specified, but private key is not specified\");\n  }\n else   if (PEM_TYPE.equals(type) && path != null) {\n    if (password != null)     throw new InvalidConfigurationException(\"SSL key store password cannot be specified with PEM format, only key password may be specified\");\n else     if (keyPassword == null)     throw new InvalidConfigurationException(\"SSL PEM key store is specified, but key password is not specified.\");\n else     return new FileBasedPemStore(path,keyPassword,true);\n  }\n else   if (path == null && password != null) {\n    throw new InvalidConfigurationException(\"SSL key store is not specified, but key store password is specified.\");\n  }\n else   if (path != null && password == null) {\n    throw new InvalidConfigurationException(\"SSL key store is specified, but key store password is not specified.\");\n  }\n else   if (path != null && password != null) {\n    return new FileBasedStore(type,path,password,keyPassword,true);\n  }\n else   return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 299,
        "startColumnNumber" : 12,
        "endLineNumber" : 299,
        "endColumnNumber" : 79
      },
      "nodeContext" : "return new FileBasedStore(type,path,password,keyPassword,true);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 6,
    "type" : "org.apache.kafka.common.security.ssl.DefaultSslEngineFactory.FileBasedStore"
  } ],
  "positionList" : [ {
    "charLength" : 59,
    "startLineNumber" : 299,
    "startColumnNumber" : 19,
    "endLineNumber" : 299,
    "endColumnNumber" : 78
  } ],
  "layoutRelationDataList" : [ ]
}