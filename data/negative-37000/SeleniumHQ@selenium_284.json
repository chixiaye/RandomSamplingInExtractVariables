{
  "id" : 284,
  "expression" : "response.getHeader(\"content-type\")",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/server/test/org/openqa/selenium/remote/server/WebDriverServletTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "response.getHeader(\"content-type\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 136,
      "startColumnNumber" : 17,
      "endLineNumber" : 136,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 135,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertEquals(\"application/json; charset=utf-8\",response.getHeader(\"content-type\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 135,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertEquals(\"application/json; charset=utf-8\",response.getHeader(\"content-type\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 917,
        "startLineNumber" : 122,
        "startColumnNumber" : 43,
        "endLineNumber" : 142,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final SessionId sessionId=createSession();\n  WebDriver driver=testSessions.get(sessionId).getWrappedDriver();\n  Map<String,Object> json=ImmutableMap.of(\"method\",\"POST\",\"path\",String.format(\"/session/%s/url\",sessionId),\"data\",ImmutableMap.of(\"url\",\"http://www.google.com\"));\n  FakeHttpServletResponse response=sendCommand(\"POST\",\"/xdrpc\",json);\n  verify(driver).get(\"http://www.google.com\");\n  assertEquals(HttpServletResponse.SC_OK,response.getStatus());\n  assertEquals(\"application/json; charset=utf-8\",response.getHeader(\"content-type\"));\n  Map<String,Object> jsonResponse=this.json.toType(response.getBody(),MAP_TYPE);\n  assertEquals(ErrorCodes.SUCCESS,((Number)jsonResponse.get(\"status\")).intValue());\n  assertEquals(sessionId.toString(),jsonResponse.get(\"sessionId\"));\n  assertNull(jsonResponse.get(\"value\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1028,
        "startLineNumber" : 120,
        "startColumnNumber" : 2,
        "endLineNumber" : 142,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void handlesWellFormedAndSuccessfulCrossDomainRpcs() throws IOException, ServletException {\n  final SessionId sessionId=createSession();\n  WebDriver driver=testSessions.get(sessionId).getWrappedDriver();\n  Map<String,Object> json=ImmutableMap.of(\"method\",\"POST\",\"path\",String.format(\"/session/%s/url\",sessionId),\"data\",ImmutableMap.of(\"url\",\"http://www.google.com\"));\n  FakeHttpServletResponse response=sendCommand(\"POST\",\"/xdrpc\",json);\n  verify(driver).get(\"http://www.google.com\");\n  assertEquals(HttpServletResponse.SC_OK,response.getStatus());\n  assertEquals(\"application/json; charset=utf-8\",response.getHeader(\"content-type\"));\n  Map<String,Object> jsonResponse=this.json.toType(response.getBody(),MAP_TYPE);\n  assertEquals(ErrorCodes.SUCCESS,((Number)jsonResponse.get(\"status\")).intValue());\n  assertEquals(sessionId.toString(),jsonResponse.get(\"sessionId\"));\n  assertNull(jsonResponse.get(\"value\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 135,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertEquals(\"application/json; charset=utf-8\",response.getHeader(\"content-type\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 136,
    "startColumnNumber" : 17,
    "endLineNumber" : 136,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}