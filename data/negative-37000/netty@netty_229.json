{
  "id" : 229,
  "expression" : "j > 0 && needle[j] != needle[i]",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/buffer/src/main/java/io/netty/buffer/search/KmpSearchProcessorFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "j > 0 && needle[j] != needle[i]",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 73,
      "startColumnNumber" : 19,
      "endLineNumber" : 73,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 11,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 73,
        "startColumnNumber" : 12,
        "endLineNumber" : 75,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (j > 0 && needle[j] != needle[i]) {\n  j=jumpTable[j];\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 232,
        "startLineNumber" : 72,
        "startColumnNumber" : 48,
        "endLineNumber" : 80,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  while (j > 0 && needle[j] != needle[i]) {\n    j=jumpTable[j];\n  }\n  if (needle[j] == needle[i]) {\n    j++;\n  }\n  jumpTable[i + 1]=j;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 272,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=1; i < needle.length; i++) {\n  while (j > 0 && needle[j] != needle[i]) {\n    j=jumpTable[j];\n  }\n  if (needle[j] == needle[i]) {\n    j++;\n  }\n  jumpTable[i + 1]=j;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 405,
        "startLineNumber" : 67,
        "startColumnNumber" : 45,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.needle=needle.clone();\n  this.jumpTable=new int[needle.length + 1];\n  int j=0;\n  for (int i=1; i < needle.length; i++) {\n    while (j > 0 && needle[j] != needle[i]) {\n      j=jumpTable[j];\n    }\n    if (needle[j] == needle[i]) {\n      j++;\n    }\n    jumpTable[i + 1]=j;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 446,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "KmpSearchProcessorFactory(byte[] needle){\n  this.needle=needle.clone();\n  this.jumpTable=new int[needle.length + 1];\n  int j=0;\n  for (int i=1; i < needle.length; i++) {\n    while (j > 0 && needle[j] != needle[i]) {\n      j=jumpTable[j];\n    }\n    if (needle[j] == needle[i]) {\n      j++;\n    }\n    jumpTable[i + 1]=j;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 88,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 73,
        "startColumnNumber" : 12,
        "endLineNumber" : 75,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (j > 0 && needle[j] != needle[i]) {\n  j=jumpTable[j];\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    },
    "tokenLength" : 9,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 73,
    "startColumnNumber" : 19,
    "endLineNumber" : 73,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ ]
}