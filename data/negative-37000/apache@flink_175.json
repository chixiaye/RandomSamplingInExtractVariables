{
  "id" : 175,
  "expression" : "new WakeupException()",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-connectors/flink-connector-kafka/src/main/java/org/apache/flink/streaming/connectors/kafka/internals/Handover.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new WakeupException()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 120,
      "startColumnNumber" : 22,
      "endLineNumber" : 120,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 120,
        "startColumnNumber" : 16,
        "endLineNumber" : 120,
        "endColumnNumber" : 44
      },
      "nodeContext" : "throw new WakeupException();\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 4,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 119,
        "startColumnNumber" : 30,
        "endLineNumber" : 121,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  throw new WakeupException();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 419,
        "startLineNumber" : 119,
        "startColumnNumber" : 12,
        "endLineNumber" : 130,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (next != null) {\n  throw new WakeupException();\n}\n else if (error == null) {\n  next=element;\n  lock.notifyAll();\n}\n else {\n  throw new ClosedException();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 650,
        "startLineNumber" : 111,
        "startColumnNumber" : 28,
        "endLineNumber" : 131,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  while (next != null && !wakeupProducer) {\n    lock.wait();\n  }\n  wakeupProducer=false;\n  if (next != null) {\n    throw new WakeupException();\n  }\n else   if (error == null) {\n    next=element;\n    lock.notifyAll();\n  }\n else {\n    throw new ClosedException();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 670,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 131,
        "endColumnNumber" : 9
      },
      "nodeContext" : "synchronized (lock) {\n  while (next != null && !wakeupProducer) {\n    lock.wait();\n  }\n  wakeupProducer=false;\n  if (next != null) {\n    throw new WakeupException();\n  }\n else   if (error == null) {\n    next=element;\n    lock.notifyAll();\n  }\n else {\n    throw new ClosedException();\n  }\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 46,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 719,
        "startLineNumber" : 107,
        "startColumnNumber" : 74,
        "endLineNumber" : 132,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  checkNotNull(element);\nsynchronized (lock) {\n    while (next != null && !wakeupProducer) {\n      lock.wait();\n    }\n    wakeupProducer=false;\n    if (next != null) {\n      throw new WakeupException();\n    }\n else     if (error == null) {\n      next=element;\n      lock.notifyAll();\n    }\n else {\n      throw new ClosedException();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1599,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 132,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Hands over an element from the producer. If the Handover already has an element that was not yet picked up by the consumer thread, this call blocks until the consumer picks up that previous element. <p>This behavior is similar to a \"size one\" blocking queue.\n * @param element The next element to hand over.\n * @throws InterruptedException Thrown, if the thread is interrupted while blocking for theHandover to be empty.\n * @throws WakeupException Thrown, if the {@link #wakeupProducer()} method is called whileblocking for the Handover to be empty.\n * @throws ClosedException Thrown if the Handover was closed or concurrently being closed.\n */\npublic void produce(final ConsumerRecords<byte[],byte[]> element) throws InterruptedException, WakeupException, ClosedException {\n  checkNotNull(element);\nsynchronized (lock) {\n    while (next != null && !wakeupProducer) {\n      lock.wait();\n    }\n    wakeupProducer=false;\n    if (next != null) {\n      throw new WakeupException();\n    }\n else     if (error == null) {\n      next=element;\n      lock.notifyAll();\n    }\n else {\n      throw new ClosedException();\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 120,
        "startColumnNumber" : 16,
        "endLineNumber" : 120,
        "endColumnNumber" : 44
      },
      "nodeContext" : "throw new WakeupException();\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 4,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.streaming.connectors.kafka.internals.Handover.WakeupException"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 120,
    "startColumnNumber" : 22,
    "endLineNumber" : 120,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}