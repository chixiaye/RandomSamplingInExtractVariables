{
  "id" : 334,
  "expression" : "Status",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-examples/src/main/java/com/netflix/eureka2/example/client/SimpleApp.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Status",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 79,
      "startColumnNumber" : 88,
      "endLineNumber" : 79,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 79,
        "startColumnNumber" : 88,
        "endLineNumber" : 79,
        "endColumnNumber" : 99
      },
      "nodeContext" : "Status.DOWN",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 79,
        "startColumnNumber" : 35,
        "endLineNumber" : 79,
        "endColumnNumber" : 100
      },
      "nodeContext" : "new Builder().withInstanceInfo(SERVICE_A).withStatus(Status.DOWN)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 79,
        "startColumnNumber" : 35,
        "endLineNumber" : 79,
        "endColumnNumber" : 108
      },
      "nodeContext" : "new Builder().withInstanceInfo(SERVICE_A).withStatus(Status.DOWN).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 79,
        "startColumnNumber" : 21,
        "endLineNumber" : 79,
        "endColumnNumber" : 108
      },
      "nodeContext" : "updatedInfo=new Builder().withInstanceInfo(SERVICE_A).withStatus(Status.DOWN).build()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 109
      },
      "nodeContext" : "InstanceInfo updatedInfo=new Builder().withInstanceInfo(SERVICE_A).withStatus(Status.DOWN).build();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1999,
        "startLineNumber" : 46,
        "startColumnNumber" : 71,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  System.out.println(\"Local service info: \" + SERVICE_A);\n  WriteServerResolverSet writeServerResolverSet=WriteServerResolverSet.just(\"localhost\",13100,13101);\n  String readServerVip=\"ReadServer\";\n  EurekaClient client=Eureka.newClientBuilder(writeServerResolverSet,readServerVip).build();\n  client.forInterest(Interests.forApplications(\"WriteServer\",\"ReadServer\",\"ServiceA\")).subscribe(new Subscriber<ChangeNotification<InstanceInfo>>(){\n    @Override public void onCompleted(){\n      System.out.println(\"Change notification stream closed\");\n    }\n    @Override public void onError(    Throwable e){\n      System.out.println(\"Error in the notification channel: \" + e);\n    }\n    @Override public void onNext(    ChangeNotification<InstanceInfo> changeNotification){\n      System.out.println(\"Received notification: \" + changeNotification);\n    }\n  }\n);\n  System.out.println(\"Registering SERVICE_A with Eureka...\");\n  client.register(SERVICE_A).toBlocking().singleOrDefault(null);\n  Thread.sleep(1000);\n  System.out.println(\"Updating service status to DOWN...\");\n  InstanceInfo updatedInfo=new Builder().withInstanceInfo(SERVICE_A).withStatus(Status.DOWN).build();\n  client.register(updatedInfo).toBlocking().singleOrDefault(null);\n  Thread.sleep(1000);\n  System.out.println(\"Unregistering SERVICE_A from Eureka...\");\n  client.unregister(updatedInfo).toBlocking().singleOrDefault(null);\n  Thread.sleep(1000);\n  Thread.sleep(5000);\n  System.out.println(\"Shutting down clients\");\n  client.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 218,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2066,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args) throws InterruptedException {\n  System.out.println(\"Local service info: \" + SERVICE_A);\n  WriteServerResolverSet writeServerResolverSet=WriteServerResolverSet.just(\"localhost\",13100,13101);\n  String readServerVip=\"ReadServer\";\n  EurekaClient client=Eureka.newClientBuilder(writeServerResolverSet,readServerVip).build();\n  client.forInterest(Interests.forApplications(\"WriteServer\",\"ReadServer\",\"ServiceA\")).subscribe(new Subscriber<ChangeNotification<InstanceInfo>>(){\n    @Override public void onCompleted(){\n      System.out.println(\"Change notification stream closed\");\n    }\n    @Override public void onError(    Throwable e){\n      System.out.println(\"Error in the notification channel: \" + e);\n    }\n    @Override public void onNext(    ChangeNotification<InstanceInfo> changeNotification){\n      System.out.println(\"Received notification: \" + changeNotification);\n    }\n  }\n);\n  System.out.println(\"Registering SERVICE_A with Eureka...\");\n  client.register(SERVICE_A).toBlocking().singleOrDefault(null);\n  Thread.sleep(1000);\n  System.out.println(\"Updating service status to DOWN...\");\n  InstanceInfo updatedInfo=new Builder().withInstanceInfo(SERVICE_A).withStatus(Status.DOWN).build();\n  client.register(updatedInfo).toBlocking().singleOrDefault(null);\n  Thread.sleep(1000);\n  System.out.println(\"Unregistering SERVICE_A from Eureka...\");\n  client.unregister(updatedInfo).toBlocking().singleOrDefault(null);\n  Thread.sleep(1000);\n  Thread.sleep(5000);\n  System.out.println(\"Shutting down clients\");\n  client.close();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 231,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 109
      },
      "nodeContext" : "InstanceInfo updatedInfo=new Builder().withInstanceInfo(SERVICE_A).withStatus(Status.DOWN).build();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "com.netflix.eureka2.registry.instance.InstanceInfo.Status"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 79,
    "startColumnNumber" : 88,
    "endLineNumber" : 79,
    "endColumnNumber" : 94
  } ],
  "layoutRelationDataList" : [ ]
}