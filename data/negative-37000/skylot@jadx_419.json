{
  "id" : 419,
  "expression" : "arg.getSVar().getUseCount() != 0",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/main/java/jadx/core/dex/visitors/ClassModifier.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "arg.getSVar().getUseCount() != 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 132,
      "startColumnNumber" : 6,
      "endLineNumber" : 132,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 238,
        "startLineNumber" : 132,
        "startColumnNumber" : 2,
        "endLineNumber" : 138,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (arg.getSVar().getUseCount() != 0) {\n  InsnNode iget=new IndexInsnNode(InsnType.IGET,fieldInfo,1);\n  iget.addArg(insn.getArg(1));\n  for (  InsnArg insnArg : arg.getSVar().getUseList()) {\n    insnArg.wrapInstruction(iget);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1190,
        "startLineNumber" : 103,
        "startColumnNumber" : 110,
        "endLineNumber" : 140,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (mth.isNoCode() || !mth.getAccessFlags().isConstructor()) {\n    return false;\n  }\n  List<RegisterArg> args=mth.getArguments(false);\n  if (args.isEmpty() || mth.contains(AFlag.SKIP_FIRST_ARG)) {\n    return false;\n  }\n  RegisterArg arg=args.get(0);\n  if (!arg.getType().equals(fieldsCls.getClassInfo().getType())) {\n    return false;\n  }\n  BlockNode block=mth.getBasicBlocks().get(0);\n  List<InsnNode> instructions=block.getInstructions();\n  if (instructions.isEmpty()) {\n    return false;\n  }\n  InsnNode insn=instructions.get(0);\n  if (insn.getType() != InsnType.IPUT) {\n    return false;\n  }\n  IndexInsnNode putInsn=(IndexInsnNode)insn;\n  FieldInfo fieldInfo=(FieldInfo)putInsn.getIndex();\n  if (!fieldInfo.equals(field.getFieldInfo()) || !putInsn.getArg(0).equals(arg)) {\n    return false;\n  }\n  mth.removeFirstArgument();\n  InstructionRemover.remove(mth,block,insn);\n  if (arg.getSVar().getUseCount() != 0) {\n    InsnNode iget=new IndexInsnNode(InsnType.IGET,fieldInfo,1);\n    iget.addArg(insn.getArg(1));\n    for (    InsnArg insnArg : arg.getSVar().getUseList()) {\n      insnArg.wrapInstruction(iget);\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 213,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1299,
        "startLineNumber" : 103,
        "startColumnNumber" : 1,
        "endLineNumber" : 140,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private static boolean removeFieldUsageFromConstructor(MethodNode mth,FieldNode field,ClassNode fieldsCls){\n  if (mth.isNoCode() || !mth.getAccessFlags().isConstructor()) {\n    return false;\n  }\n  List<RegisterArg> args=mth.getArguments(false);\n  if (args.isEmpty() || mth.contains(AFlag.SKIP_FIRST_ARG)) {\n    return false;\n  }\n  RegisterArg arg=args.get(0);\n  if (!arg.getType().equals(fieldsCls.getClassInfo().getType())) {\n    return false;\n  }\n  BlockNode block=mth.getBasicBlocks().get(0);\n  List<InsnNode> instructions=block.getInstructions();\n  if (instructions.isEmpty()) {\n    return false;\n  }\n  InsnNode insn=instructions.get(0);\n  if (insn.getType() != InsnType.IPUT) {\n    return false;\n  }\n  IndexInsnNode putInsn=(IndexInsnNode)insn;\n  FieldInfo fieldInfo=(FieldInfo)putInsn.getIndex();\n  if (!fieldInfo.equals(field.getFieldInfo()) || !putInsn.getArg(0).equals(arg)) {\n    return false;\n  }\n  mth.removeFirstArgument();\n  InstructionRemover.remove(mth,block,insn);\n  if (arg.getSVar().getUseCount() != 0) {\n    InsnNode iget=new IndexInsnNode(InsnType.IGET,fieldInfo,1);\n    iget.addArg(insn.getArg(1));\n    for (    InsnArg insnArg : arg.getSVar().getUseList()) {\n      insnArg.wrapInstruction(iget);\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 230,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 238,
        "startLineNumber" : 132,
        "startColumnNumber" : 2,
        "endLineNumber" : 138,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (arg.getSVar().getUseCount() != 0) {\n  InsnNode iget=new IndexInsnNode(InsnType.IGET,fieldInfo,1);\n  iget.addArg(insn.getArg(1));\n  for (  InsnArg insnArg : arg.getSVar().getUseList()) {\n    insnArg.wrapInstruction(iget);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 7
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 132,
    "startColumnNumber" : 6,
    "endLineNumber" : 132,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}