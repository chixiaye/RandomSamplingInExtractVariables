{
  "id" : 328,
  "expression" : "new String[]{\"run\",\"java:\" + TestVerticle.class.getCanonicalName(),\"-instances\",\"10\"}",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/test/java/io/vertx/test/core/LauncherTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new String[]{\"run\",\"java:\" + TestVerticle.class.getCanonicalName(),\"-instances\",\"10\"}",
    "nodeType" : "ArrayCreation",
    "nodePosition" : {
      "charLength" : 97,
      "startLineNumber" : 508,
      "startColumnNumber" : 32,
      "endLineNumber" : 509,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 16,
    "astHeight" : 7,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 508,
        "startColumnNumber" : 4,
        "endLineNumber" : 509,
        "endColumnNumber" : 28
      },
      "nodeContext" : "launcher.dispatch(launcher,new String[]{\"run\",\"java:\" + TestVerticle.class.getCanonicalName(),\"-instances\",\"10\"})",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 508,
        "startColumnNumber" : 4,
        "endLineNumber" : 509,
        "endColumnNumber" : 29
      },
      "nodeContext" : "launcher.dispatch(launcher,new String[]{\"run\",\"java:\" + TestVerticle.class.getCanonicalName(),\"-instances\",\"10\"});\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 21,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 273,
        "startLineNumber" : 505,
        "startColumnNumber" : 62,
        "endLineNumber" : 511,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  MyLauncher launcher=new MyLauncher();\n  int instances=10;\n  launcher.dispatch(launcher,new String[]{\"run\",\"java:\" + TestVerticle.class.getCanonicalName(),\"-instances\",\"10\"});\n  waitUntil(() -> TestVerticle.instanceCount.get() == instances);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 341,
        "startLineNumber" : 504,
        "startColumnNumber" : 2,
        "endLineNumber" : 511,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testWhenPassingTheMainObject() throws Exception {\n  MyLauncher launcher=new MyLauncher();\n  int instances=10;\n  launcher.dispatch(launcher,new String[]{\"run\",\"java:\" + TestVerticle.class.getCanonicalName(),\"-instances\",\"10\"});\n  waitUntil(() -> TestVerticle.instanceCount.get() == instances);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 54,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 508,
        "startColumnNumber" : 4,
        "endLineNumber" : 509,
        "endColumnNumber" : 29
      },
      "nodeContext" : "launcher.dispatch(launcher,new String[]{\"run\",\"java:\" + TestVerticle.class.getCanonicalName(),\"-instances\",\"10\"});\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 21,
      "astHeight" : 9
    },
    "tokenLength" : 8,
    "type" : "java.lang.String[]"
  } ],
  "positionList" : [ {
    "charLength" : 97,
    "startLineNumber" : 508,
    "startColumnNumber" : 32,
    "endLineNumber" : 509,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ ]
}