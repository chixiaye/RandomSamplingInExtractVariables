{
  "id" : 186,
  "expression" : "com",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/imagepipeline-backends/imagepipeline-okhttp/src/main/java/com/facebook/imagepipeline/backends/okhttp/OkHttpNetworkFetcher.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "com",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 131,
      "startColumnNumber" : 12,
      "endLineNumber" : 131,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.QualifiedName,qualifier]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 131,
        "startColumnNumber" : 12,
        "endLineNumber" : 131,
        "endColumnNumber" : 24
      },
      "nodeContext" : "com.squareup",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.QualifiedName,qualifier]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 131,
        "startColumnNumber" : 12,
        "endLineNumber" : 131,
        "endColumnNumber" : 31
      },
      "nodeContext" : "com.squareup.okhttp",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SimpleType,name]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 131,
        "startColumnNumber" : 12,
        "endLineNumber" : 131,
        "endColumnNumber" : 40
      },
      "nodeContext" : "com.squareup.okhttp.Callback",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,type]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 131,
        "startColumnNumber" : 12,
        "endLineNumber" : 131,
        "endColumnNumber" : 40
      },
      "nodeContext" : "com.squareup.okhttp.Callback",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1162,
        "startLineNumber" : 131,
        "startColumnNumber" : 8,
        "endLineNumber" : 163,
        "endColumnNumber" : 9
      },
      "nodeContext" : "new com.squareup.okhttp.Callback(){\n  @Override public void onResponse(  Response response){\n    fetchState.responseTime=SystemClock.uptimeMillis();\n    final ResponseBody body=response.body();\n    try {\n      if (!response.isSuccessful()) {\n        handleException(call,new IOException(\"Unexpected HTTP code \" + response),callback);\n        return;\n      }\n      long contentLength=body.contentLength();\n      if (contentLength < 0) {\n        contentLength=0;\n      }\n      callback.onResponse(body.byteStream(),(int)contentLength);\n    }\n catch (    Exception e) {\n      handleException(call,e,callback);\n    }\n finally {\n      try {\n        body.close();\n      }\n catch (      Exception e) {\n        FLog.w(TAG,\"Exception when closing response body\",e);\n      }\n    }\n  }\n  @Override public void onFailure(  final Request request,  final IOException e){\n    handleException(call,e,callback);\n  }\n}\n",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 139,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 1185,
        "startLineNumber" : 130,
        "startColumnNumber" : 4,
        "endLineNumber" : 163,
        "endColumnNumber" : 10
      },
      "nodeContext" : "call.enqueue(new com.squareup.okhttp.Callback(){\n  @Override public void onResponse(  Response response){\n    fetchState.responseTime=SystemClock.uptimeMillis();\n    final ResponseBody body=response.body();\n    try {\n      if (!response.isSuccessful()) {\n        handleException(call,new IOException(\"Unexpected HTTP code \" + response),callback);\n        return;\n      }\n      long contentLength=body.contentLength();\n      if (contentLength < 0) {\n        contentLength=0;\n      }\n      callback.onResponse(body.byteStream(),(int)contentLength);\n    }\n catch (    Exception e) {\n      handleException(call,e,callback);\n    }\n finally {\n      try {\n        body.close();\n      }\n catch (      Exception e) {\n        FLog.w(TAG,\"Exception when closing response body\",e);\n      }\n    }\n  }\n  @Override public void onFailure(  final Request request,  final IOException e){\n    handleException(call,e,callback);\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 142,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1186,
        "startLineNumber" : 130,
        "startColumnNumber" : 4,
        "endLineNumber" : 163,
        "endColumnNumber" : 11
      },
      "nodeContext" : "call.enqueue(new com.squareup.okhttp.Callback(){\n  @Override public void onResponse(  Response response){\n    fetchState.responseTime=SystemClock.uptimeMillis();\n    final ResponseBody body=response.body();\n    try {\n      if (!response.isSuccessful()) {\n        handleException(call,new IOException(\"Unexpected HTTP code \" + response),callback);\n        return;\n      }\n      long contentLength=body.contentLength();\n      if (contentLength < 0) {\n        contentLength=0;\n      }\n      callback.onResponse(body.byteStream(),(int)contentLength);\n    }\n catch (    Exception e) {\n      handleException(call,e,callback);\n    }\n finally {\n      try {\n        body.close();\n      }\n catch (      Exception e) {\n        FLog.w(TAG,\"Exception when closing response body\",e);\n      }\n    }\n  }\n  @Override public void onFailure(  final Request request,  final IOException e){\n    handleException(call,e,callback);\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 143,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1874,
        "startLineNumber" : 106,
        "startColumnNumber" : 29,
        "endLineNumber" : 164,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final Call call=mOkHttpClient.newCall(request);\n  fetchState.getContext().addCallbacks(new BaseProducerContextCallbacks(){\n    @Override public void onCancellationRequested(){\n      if (Looper.myLooper() != Looper.getMainLooper()) {\n        call.cancel();\n      }\n else {\n        mCancellationExecutor.execute(new Runnable(){\n          @Override public void run(){\n            call.cancel();\n          }\n        }\n);\n      }\n    }\n  }\n);\n  call.enqueue(new com.squareup.okhttp.Callback(){\n    @Override public void onResponse(    Response response){\n      fetchState.responseTime=SystemClock.uptimeMillis();\n      final ResponseBody body=response.body();\n      try {\n        if (!response.isSuccessful()) {\n          handleException(call,new IOException(\"Unexpected HTTP code \" + response),callback);\n          return;\n        }\n        long contentLength=body.contentLength();\n        if (contentLength < 0) {\n          contentLength=0;\n        }\n        callback.onResponse(body.byteStream(),(int)contentLength);\n      }\n catch (      Exception e) {\n        handleException(call,e,callback);\n      }\n finally {\n        try {\n          body.close();\n        }\n catch (        Exception e) {\n          FLog.w(TAG,\"Exception when closing response body\",e);\n        }\n      }\n    }\n    @Override public void onFailure(    final Request request,    final IOException e){\n      handleException(call,e,callback);\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 204,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2030,
        "startLineNumber" : 103,
        "startColumnNumber" : 2,
        "endLineNumber" : 164,
        "endColumnNumber" : 3
      },
      "nodeContext" : "protected void fetchWithRequest(final OkHttpNetworkFetchState fetchState,final NetworkFetcher.Callback callback,final Request request){\n  final Call call=mOkHttpClient.newCall(request);\n  fetchState.getContext().addCallbacks(new BaseProducerContextCallbacks(){\n    @Override public void onCancellationRequested(){\n      if (Looper.myLooper() != Looper.getMainLooper()) {\n        call.cancel();\n      }\n else {\n        mCancellationExecutor.execute(new Runnable(){\n          @Override public void run(){\n            call.cancel();\n          }\n        }\n);\n      }\n    }\n  }\n);\n  call.enqueue(new com.squareup.okhttp.Callback(){\n    @Override public void onResponse(    Response response){\n      fetchState.responseTime=SystemClock.uptimeMillis();\n      final ResponseBody body=response.body();\n      try {\n        if (!response.isSuccessful()) {\n          handleException(call,new IOException(\"Unexpected HTTP code \" + response),callback);\n          return;\n        }\n        long contentLength=body.contentLength();\n        if (contentLength < 0) {\n          contentLength=0;\n        }\n        callback.onResponse(body.byteStream(),(int)contentLength);\n      }\n catch (      Exception e) {\n        handleException(call,e,callback);\n      }\n finally {\n        try {\n          body.close();\n        }\n catch (        Exception e) {\n          FLog.w(TAG,\"Exception when closing response body\",e);\n        }\n      }\n    }\n    @Override public void onFailure(    final Request request,    final IOException e){\n      handleException(call,e,callback);\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 225,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,type]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 131,
        "startColumnNumber" : 12,
        "endLineNumber" : 131,
        "endColumnNumber" : 40
      },
      "nodeContext" : "com.squareup.okhttp.Callback",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 131,
    "startColumnNumber" : 12,
    "endLineNumber" : 131,
    "endColumnNumber" : 15
  } ],
  "layoutRelationDataList" : [ ]
}