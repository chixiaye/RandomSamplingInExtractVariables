{
  "id" : 442,
  "expression" : "Integer",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-core/src/main/java/com/netflix/zuul/netty/server/Server.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Integer",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 169,
      "startColumnNumber" : 68,
      "endLineNumber" : 169,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 169,
        "startColumnNumber" : 68,
        "endLineNumber" : 169,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Integer.valueOf(-1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 169,
        "startColumnNumber" : 12,
        "endLineNumber" : 169,
        "endColumnNumber" : 88
      },
      "nodeContext" : "channelOptions.put(EpollChannelOption.TCP_DEFER_ACCEPT,Integer.valueOf(-1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 169,
        "startColumnNumber" : 12,
        "endLineNumber" : 169,
        "endColumnNumber" : 89
      },
      "nodeContext" : "channelOptions.put(EpollChannelOption.TCP_DEFER_ACCEPT,Integer.valueOf(-1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 260,
        "startLineNumber" : 166,
        "startColumnNumber" : 29,
        "endLineNumber" : 170,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  LOG.warn(\"Proxy listening with TCP transport using EPOLL\");\n  serverBootstrap=serverBootstrap.channel(EpollServerSocketChannel.class);\n  channelOptions.put(EpollChannelOption.TCP_DEFER_ACCEPT,Integer.valueOf(-1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 461,
        "startLineNumber" : 166,
        "startColumnNumber" : 8,
        "endLineNumber" : 174,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (USE_EPOLL.get()) {\n  LOG.warn(\"Proxy listening with TCP transport using EPOLL\");\n  serverBootstrap=serverBootstrap.channel(EpollServerSocketChannel.class);\n  channelOptions.put(EpollChannelOption.TCP_DEFER_ACCEPT,Integer.valueOf(-1));\n}\n else {\n  LOG.warn(\"Proxy listening with TCP transport using NIO\");\n  serverBootstrap=serverBootstrap.channel(NioServerSocketChannel.class);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1734,
        "startLineNumber" : 152,
        "startColumnNumber" : 4,
        "endLineNumber" : 191,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ServerBootstrap serverBootstrap=new ServerBootstrap().group(serverGroup.clientToProxyBossPool,serverGroup.clientToProxyWorkerPool);\n  Map<ChannelOption,Object> channelOptions=new HashMap<>();\n  channelOptions.put(ChannelOption.SO_BACKLOG,128);\n  channelOptions.put(ChannelOption.SO_LINGER,-1);\n  channelOptions.put(ChannelOption.TCP_NODELAY,true);\n  channelOptions.put(ChannelOption.SO_KEEPALIVE,true);\n  if (USE_EPOLL.get()) {\n    LOG.warn(\"Proxy listening with TCP transport using EPOLL\");\n    serverBootstrap=serverBootstrap.channel(EpollServerSocketChannel.class);\n    channelOptions.put(EpollChannelOption.TCP_DEFER_ACCEPT,Integer.valueOf(-1));\n  }\n else {\n    LOG.warn(\"Proxy listening with TCP transport using NIO\");\n    serverBootstrap=serverBootstrap.channel(NioServerSocketChannel.class);\n  }\n  for (  Map.Entry<ChannelOption,Object> optionEntry : channelOptions.entrySet()) {\n    serverBootstrap=serverBootstrap.option(optionEntry.getKey(),optionEntry.getValue());\n  }\n  serverBootstrap.childHandler(channelInitializer);\n  serverBootstrap.validate();\n  LOG.info(\"Binding to port: \" + port);\n  serverStatusManager.localStatus(InstanceInfo.InstanceStatus.UP);\n  return serverBootstrap.bind(port).sync();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1870,
        "startLineNumber" : 150,
        "startColumnNumber" : 4,
        "endLineNumber" : 191,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private ChannelFuture setupServerBootstrap(int port,ChannelInitializer channelInitializer) throws InterruptedException {\n  ServerBootstrap serverBootstrap=new ServerBootstrap().group(serverGroup.clientToProxyBossPool,serverGroup.clientToProxyWorkerPool);\n  Map<ChannelOption,Object> channelOptions=new HashMap<>();\n  channelOptions.put(ChannelOption.SO_BACKLOG,128);\n  channelOptions.put(ChannelOption.SO_LINGER,-1);\n  channelOptions.put(ChannelOption.TCP_NODELAY,true);\n  channelOptions.put(ChannelOption.SO_KEEPALIVE,true);\n  if (USE_EPOLL.get()) {\n    LOG.warn(\"Proxy listening with TCP transport using EPOLL\");\n    serverBootstrap=serverBootstrap.channel(EpollServerSocketChannel.class);\n    channelOptions.put(EpollChannelOption.TCP_DEFER_ACCEPT,Integer.valueOf(-1));\n  }\n else {\n    LOG.warn(\"Proxy listening with TCP transport using NIO\");\n    serverBootstrap=serverBootstrap.channel(NioServerSocketChannel.class);\n  }\n  for (  Map.Entry<ChannelOption,Object> optionEntry : channelOptions.entrySet()) {\n    serverBootstrap=serverBootstrap.option(optionEntry.getKey(),optionEntry.getValue());\n  }\n  serverBootstrap.childHandler(channelInitializer);\n  serverBootstrap.validate();\n  LOG.info(\"Binding to port: \" + port);\n  serverStatusManager.localStatus(InstanceInfo.InstanceStatus.UP);\n  return serverBootstrap.bind(port).sync();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 184,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 169,
        "startColumnNumber" : 12,
        "endLineNumber" : 169,
        "endColumnNumber" : 89
      },
      "nodeContext" : "channelOptions.put(EpollChannelOption.TCP_DEFER_ACCEPT,Integer.valueOf(-1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Integer"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 169,
    "startColumnNumber" : 68,
    "endLineNumber" : 169,
    "endColumnNumber" : 75
  } ],
  "layoutRelationDataList" : [ ]
}