{
  "id" : 223,
  "expression" : "null != name",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-http/src/main/java/cn/hutool/http/HttpBase.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null != name",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 91,
      "startColumnNumber" : 5,
      "endLineNumber" : 91,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 91,
        "startColumnNumber" : 5,
        "endLineNumber" : 91,
        "endColumnNumber" : 34
      },
      "nodeContext" : "null != name && null != value",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 330,
        "startLineNumber" : 91,
        "startColumnNumber" : 2,
        "endLineNumber" : 100,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (null != name && null != value) {\n  final List<String> values=headers.get(name.trim());\n  if (isOverride || CollectionUtil.isEmpty(values)) {\n    final ArrayList<String> valueList=new ArrayList<>();\n    valueList.add(value);\n    headers.put(name.trim(),valueList);\n  }\n else {\n    values.add(value.trim());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 66,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 359,
        "startLineNumber" : 90,
        "startColumnNumber" : 64,
        "endLineNumber" : 102,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (null != name && null != value) {\n    final List<String> values=headers.get(name.trim());\n    if (isOverride || CollectionUtil.isEmpty(values)) {\n      final ArrayList<String> valueList=new ArrayList<>();\n      valueList.add(value);\n      headers.put(name.trim(),valueList);\n    }\n else {\n      values.add(value.trim());\n    }\n  }\n  return (T)this;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 584,
        "startLineNumber" : 82,
        "startColumnNumber" : 1,
        "endLineNumber" : 102,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 设置一个header<br> 如果覆盖模式，则替换之前的值，否则加入到值列表中\n * @param name Header名\n * @param value Header值\n * @param isOverride 是否覆盖已有值\n * @return T 本身\n */\npublic T header(String name,String value,boolean isOverride){\n  if (null != name && null != value) {\n    final List<String> values=headers.get(name.trim());\n    if (isOverride || CollectionUtil.isEmpty(values)) {\n      final ArrayList<String> valueList=new ArrayList<>();\n      valueList.add(value);\n      headers.put(name.trim(),valueList);\n    }\n else {\n      values.add(value.trim());\n    }\n  }\n  return (T)this;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 89,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 91,
        "startColumnNumber" : 5,
        "endLineNumber" : 91,
        "endColumnNumber" : 34
      },
      "nodeContext" : "null != name && null != value",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 91,
    "startColumnNumber" : 5,
    "endLineNumber" : 91,
    "endColumnNumber" : 17
  } ],
  "layoutRelationDataList" : [ ]
}