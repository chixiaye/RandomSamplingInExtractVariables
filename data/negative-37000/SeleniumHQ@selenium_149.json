{
  "id" : 149,
  "expression" : "driver.findElement(By.tagName(\"h1\")).getText()",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/client/test/org/openqa/selenium/devtools/CdpFacadeTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "driver.findElement(By.tagName(\"h1\")).getText()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 46,
      "startLineNumber" : 61,
      "startColumnNumber" : 21,
      "endLineNumber" : 61,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 61,
        "startColumnNumber" : 11,
        "endLineNumber" : 61,
        "endColumnNumber" : 67
      },
      "nodeContext" : "message=driver.findElement(By.tagName(\"h1\")).getText()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 68
      },
      "nodeContext" : "String message=driver.findElement(By.tagName(\"h1\")).getText();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1019,
        "startLineNumber" : 53,
        "startColumnNumber" : 60,
        "endLineNumber" : 81,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assumeThat(driver).isInstanceOf(HasAuthentication.class);\n  ((HasAuthentication)driver).register(UsernameAndPassword.of(\"test\",\"test\"));\n  driver.get(server.whereIs(\"/\"));\n  String message=driver.findElement(By.tagName(\"h1\")).getText();\n  assertThat(message).contains(\"authorized\");\n  try (NetworkInterceptor interceptor=new NetworkInterceptor(driver,Route.matching(req -> true).to(() -> req -> new HttpResponse().setContent(utf8String(\"I like cheese\"))))){\n    driver.get(server.whereIs(\"/\"));\n    message=driver.findElement(By.tagName(\"body\")).getText();\n    assertThat(message).isEqualTo(\"I like cheese\");\n  }\n   driver.get(server.whereIs(\"/\"));\n  message=driver.findElement(By.tagName(\"h1\")).getText();\n  assertThat(message).contains(\"authorized\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 52,
        "startColumnNumber" : 2,
        "endLineNumber" : 81,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void networkInterceptorAndAuthHandlersDoNotFight(){\n  assumeThat(driver).isInstanceOf(HasAuthentication.class);\n  ((HasAuthentication)driver).register(UsernameAndPassword.of(\"test\",\"test\"));\n  driver.get(server.whereIs(\"/\"));\n  String message=driver.findElement(By.tagName(\"h1\")).getText();\n  assertThat(message).contains(\"authorized\");\n  try (NetworkInterceptor interceptor=new NetworkInterceptor(driver,Route.matching(req -> true).to(() -> req -> new HttpResponse().setContent(utf8String(\"I like cheese\"))))){\n    driver.get(server.whereIs(\"/\"));\n    message=driver.findElement(By.tagName(\"body\")).getText();\n    assertThat(message).isEqualTo(\"I like cheese\");\n  }\n   driver.get(server.whereIs(\"/\"));\n  message=driver.findElement(By.tagName(\"h1\")).getText();\n  assertThat(message).contains(\"authorized\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 144,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 68
      },
      "nodeContext" : "String message=driver.findElement(By.tagName(\"h1\")).getText();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 6,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "driver.findElement(By.tagName(\"h1\")).getText()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 46,
      "startLineNumber" : 78,
      "startColumnNumber" : 14,
      "endLineNumber" : 78,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 60
      },
      "nodeContext" : "message=driver.findElement(By.tagName(\"h1\")).getText()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 61
      },
      "nodeContext" : "message=driver.findElement(By.tagName(\"h1\")).getText();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1019,
        "startLineNumber" : 53,
        "startColumnNumber" : 60,
        "endLineNumber" : 81,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assumeThat(driver).isInstanceOf(HasAuthentication.class);\n  ((HasAuthentication)driver).register(UsernameAndPassword.of(\"test\",\"test\"));\n  driver.get(server.whereIs(\"/\"));\n  String message=driver.findElement(By.tagName(\"h1\")).getText();\n  assertThat(message).contains(\"authorized\");\n  try (NetworkInterceptor interceptor=new NetworkInterceptor(driver,Route.matching(req -> true).to(() -> req -> new HttpResponse().setContent(utf8String(\"I like cheese\"))))){\n    driver.get(server.whereIs(\"/\"));\n    message=driver.findElement(By.tagName(\"body\")).getText();\n    assertThat(message).isEqualTo(\"I like cheese\");\n  }\n   driver.get(server.whereIs(\"/\"));\n  message=driver.findElement(By.tagName(\"h1\")).getText();\n  assertThat(message).contains(\"authorized\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 52,
        "startColumnNumber" : 2,
        "endLineNumber" : 81,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void networkInterceptorAndAuthHandlersDoNotFight(){\n  assumeThat(driver).isInstanceOf(HasAuthentication.class);\n  ((HasAuthentication)driver).register(UsernameAndPassword.of(\"test\",\"test\"));\n  driver.get(server.whereIs(\"/\"));\n  String message=driver.findElement(By.tagName(\"h1\")).getText();\n  assertThat(message).contains(\"authorized\");\n  try (NetworkInterceptor interceptor=new NetworkInterceptor(driver,Route.matching(req -> true).to(() -> req -> new HttpResponse().setContent(utf8String(\"I like cheese\"))))){\n    driver.get(server.whereIs(\"/\"));\n    message=driver.findElement(By.tagName(\"body\")).getText();\n    assertThat(message).isEqualTo(\"I like cheese\");\n  }\n   driver.get(server.whereIs(\"/\"));\n  message=driver.findElement(By.tagName(\"h1\")).getText();\n  assertThat(message).contains(\"authorized\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 144,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 61
      },
      "nodeContext" : "message=driver.findElement(By.tagName(\"h1\")).getText();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 6,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 46,
    "startLineNumber" : 61,
    "startColumnNumber" : 21,
    "endLineNumber" : 61,
    "endColumnNumber" : 67
  }, {
    "charLength" : 46,
    "startLineNumber" : 78,
    "startColumnNumber" : 14,
    "endLineNumber" : 78,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}