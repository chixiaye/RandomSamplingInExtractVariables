{
  "id" : 277,
  "expression" : "CASE_INSENSITIVE_HASHER",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/codec-http2/src/test/java/io/netty/handler/codec/http2/InOrderHttp2Headers.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "CASE_INSENSITIVE_HASHER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 102,
      "startColumnNumber" : 55,
      "endLineNumber" : 102,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 102,
        "startColumnNumber" : 37,
        "endLineNumber" : 102,
        "endColumnNumber" : 102
      },
      "nodeContext" : "caseInsensitive ? CASE_INSENSITIVE_HASHER : CASE_SENSITIVE_HASHER",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 102,
        "startColumnNumber" : 15,
        "endLineNumber" : 102,
        "endColumnNumber" : 103
      },
      "nodeContext" : "contains(name,value,caseInsensitive ? CASE_INSENSITIVE_HASHER : CASE_SENSITIVE_HASHER)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 102,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 104
      },
      "nodeContext" : "return contains(name,value,caseInsensitive ? CASE_INSENSITIVE_HASHER : CASE_SENSITIVE_HASHER);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 101,
        "startColumnNumber" : 92,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return contains(name,value,caseInsensitive ? CASE_INSENSITIVE_HASHER : CASE_SENSITIVE_HASHER);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 100,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public boolean contains(CharSequence name,CharSequence value,boolean caseInsensitive){\n  return contains(name,value,caseInsensitive ? CASE_INSENSITIVE_HASHER : CASE_SENSITIVE_HASHER);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 27,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 102,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 104
      },
      "nodeContext" : "return contains(name,value,caseInsensitive ? CASE_INSENSITIVE_HASHER : CASE_SENSITIVE_HASHER);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "io.netty.util.HashingStrategy<java.lang.CharSequence>"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 102,
    "startColumnNumber" : 55,
    "endLineNumber" : 102,
    "endColumnNumber" : 78
  } ],
  "layoutRelationDataList" : [ ]
}