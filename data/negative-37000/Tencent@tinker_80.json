{
  "id" : 80,
  "expression" : "section",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/third-party/aosp-dexutils/src/main/java/com/tencent/tinker/android/dex/TableOfContents.java",
  "occurrences" : 9,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "section",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 205,
      "startColumnNumber" : 17,
      "endLineNumber" : 205,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 205,
        "startColumnNumber" : 17,
        "endLineNumber" : 205,
        "endColumnNumber" : 29
      },
      "nodeContext" : "section.size",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 205,
        "startColumnNumber" : 17,
        "endLineNumber" : 205,
        "endColumnNumber" : 34
      },
      "nodeContext" : "section.size != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 205,
        "startColumnNumber" : 17,
        "endLineNumber" : 205,
        "endColumnNumber" : 58
      },
      "nodeContext" : "section.size != 0 && section.size != size",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 205,
        "startColumnNumber" : 16,
        "endLineNumber" : 205,
        "endColumnNumber" : 59
      },
      "nodeContext" : "(section.size != 0 && section.size != size)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 205,
        "startColumnNumber" : 16,
        "endLineNumber" : 206,
        "endColumnNumber" : 85
      },
      "nodeContext" : "(section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 205,
        "startColumnNumber" : 12,
        "endLineNumber" : 208,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n  throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 750,
        "startLineNumber" : 198,
        "startColumnNumber" : 42,
        "endLineNumber" : 218,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  short type=in.readShort();\n  in.readShort();\n  Section section=getSection(type);\n  int size=in.readInt();\n  int offset=in.readInt();\n  if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n    throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n  }\n  section.size=size;\n  section.off=offset;\n  if (previous != null && previous.off > section.off) {\n    throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n  }\n  previous=section;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 784,
        "startLineNumber" : 198,
        "startColumnNumber" : 8,
        "endLineNumber" : 218,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < mapSize; i++) {\n  short type=in.readShort();\n  in.readShort();\n  Section section=getSection(type);\n  int size=in.readInt();\n  int offset=in.readInt();\n  if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n    throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n  }\n  section.size=size;\n  section.off=offset;\n  if (previous != null && previous.off > section.off) {\n    throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n  }\n  previous=section;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 122,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1180,
        "startLineNumber" : 195,
        "startColumnNumber" : 60,
        "endLineNumber" : 230,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int mapSize=in.readInt();\n  Section previous=null;\n  for (int i=0; i < mapSize; i++) {\n    short type=in.readShort();\n    in.readShort();\n    Section section=getSection(type);\n    int size=in.readInt();\n    int offset=in.readInt();\n    if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n      throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n    }\n    section.size=size;\n    section.off=offset;\n    if (previous != null && previous.off > section.off) {\n      throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n    }\n    previous=section;\n  }\n  header.off=0;\n  Arrays.sort(sections);\n  for (int i=1; i < sections.length; ++i) {\n    if (sections[i].off == Section.UNDEF_OFFSET) {\n      sections[i].off=sections[i - 1].off;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 186,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1236,
        "startLineNumber" : 195,
        "startColumnNumber" : 4,
        "endLineNumber" : 230,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void readMap(Dex.Section in) throws IOException {\n  int mapSize=in.readInt();\n  Section previous=null;\n  for (int i=0; i < mapSize; i++) {\n    short type=in.readShort();\n    in.readShort();\n    Section section=getSection(type);\n    int size=in.readInt();\n    int offset=in.readInt();\n    if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n      throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n    }\n    section.size=size;\n    section.off=offset;\n    if (previous != null && previous.off > section.off) {\n      throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n    }\n    previous=section;\n  }\n  header.off=0;\n  Arrays.sort(sections);\n  for (int i=1; i < sections.length; ++i) {\n    if (sections[i].off == Section.UNDEF_OFFSET) {\n      sections[i].off=sections[i - 1].off;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 198,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 205,
        "startColumnNumber" : 16,
        "endLineNumber" : 205,
        "endColumnNumber" : 59
      },
      "nodeContext" : "(section.size != 0 && section.size != size)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.android.dex.TableOfContents.Section"
  }, {
    "nodeContext" : "section",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 205,
      "startColumnNumber" : 38,
      "endLineNumber" : 205,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 205,
        "startColumnNumber" : 38,
        "endLineNumber" : 205,
        "endColumnNumber" : 50
      },
      "nodeContext" : "section.size",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 205,
        "startColumnNumber" : 38,
        "endLineNumber" : 205,
        "endColumnNumber" : 58
      },
      "nodeContext" : "section.size != size",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 205,
        "startColumnNumber" : 17,
        "endLineNumber" : 205,
        "endColumnNumber" : 58
      },
      "nodeContext" : "section.size != 0 && section.size != size",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 205,
        "startColumnNumber" : 16,
        "endLineNumber" : 205,
        "endColumnNumber" : 59
      },
      "nodeContext" : "(section.size != 0 && section.size != size)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 205,
        "startColumnNumber" : 16,
        "endLineNumber" : 206,
        "endColumnNumber" : 85
      },
      "nodeContext" : "(section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 205,
        "startColumnNumber" : 12,
        "endLineNumber" : 208,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n  throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 750,
        "startLineNumber" : 198,
        "startColumnNumber" : 42,
        "endLineNumber" : 218,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  short type=in.readShort();\n  in.readShort();\n  Section section=getSection(type);\n  int size=in.readInt();\n  int offset=in.readInt();\n  if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n    throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n  }\n  section.size=size;\n  section.off=offset;\n  if (previous != null && previous.off > section.off) {\n    throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n  }\n  previous=section;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 784,
        "startLineNumber" : 198,
        "startColumnNumber" : 8,
        "endLineNumber" : 218,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < mapSize; i++) {\n  short type=in.readShort();\n  in.readShort();\n  Section section=getSection(type);\n  int size=in.readInt();\n  int offset=in.readInt();\n  if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n    throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n  }\n  section.size=size;\n  section.off=offset;\n  if (previous != null && previous.off > section.off) {\n    throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n  }\n  previous=section;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 122,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1180,
        "startLineNumber" : 195,
        "startColumnNumber" : 60,
        "endLineNumber" : 230,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int mapSize=in.readInt();\n  Section previous=null;\n  for (int i=0; i < mapSize; i++) {\n    short type=in.readShort();\n    in.readShort();\n    Section section=getSection(type);\n    int size=in.readInt();\n    int offset=in.readInt();\n    if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n      throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n    }\n    section.size=size;\n    section.off=offset;\n    if (previous != null && previous.off > section.off) {\n      throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n    }\n    previous=section;\n  }\n  header.off=0;\n  Arrays.sort(sections);\n  for (int i=1; i < sections.length; ++i) {\n    if (sections[i].off == Section.UNDEF_OFFSET) {\n      sections[i].off=sections[i - 1].off;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 186,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1236,
        "startLineNumber" : 195,
        "startColumnNumber" : 4,
        "endLineNumber" : 230,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void readMap(Dex.Section in) throws IOException {\n  int mapSize=in.readInt();\n  Section previous=null;\n  for (int i=0; i < mapSize; i++) {\n    short type=in.readShort();\n    in.readShort();\n    Section section=getSection(type);\n    int size=in.readInt();\n    int offset=in.readInt();\n    if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n      throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n    }\n    section.size=size;\n    section.off=offset;\n    if (previous != null && previous.off > section.off) {\n      throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n    }\n    previous=section;\n  }\n  header.off=0;\n  Arrays.sort(sections);\n  for (int i=1; i < sections.length; ++i) {\n    if (sections[i].off == Section.UNDEF_OFFSET) {\n      sections[i].off=sections[i - 1].off;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 198,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 205,
        "startColumnNumber" : 16,
        "endLineNumber" : 205,
        "endColumnNumber" : 59
      },
      "nodeContext" : "(section.size != 0 && section.size != size)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.android.dex.TableOfContents.Section"
  }, {
    "nodeContext" : "section",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 206,
      "startColumnNumber" : 24,
      "endLineNumber" : 206,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 206,
        "startColumnNumber" : 24,
        "endLineNumber" : 206,
        "endColumnNumber" : 35
      },
      "nodeContext" : "section.off",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 206,
        "startColumnNumber" : 24,
        "endLineNumber" : 206,
        "endColumnNumber" : 59
      },
      "nodeContext" : "section.off != Section.UNDEF_OFFSET",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 206,
        "startColumnNumber" : 24,
        "endLineNumber" : 206,
        "endColumnNumber" : 84
      },
      "nodeContext" : "section.off != Section.UNDEF_OFFSET && section.off != offset",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 206,
        "startColumnNumber" : 23,
        "endLineNumber" : 206,
        "endColumnNumber" : 85
      },
      "nodeContext" : "(section.off != Section.UNDEF_OFFSET && section.off != offset)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 205,
        "startColumnNumber" : 16,
        "endLineNumber" : 206,
        "endColumnNumber" : 85
      },
      "nodeContext" : "(section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 205,
        "startColumnNumber" : 12,
        "endLineNumber" : 208,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n  throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 750,
        "startLineNumber" : 198,
        "startColumnNumber" : 42,
        "endLineNumber" : 218,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  short type=in.readShort();\n  in.readShort();\n  Section section=getSection(type);\n  int size=in.readInt();\n  int offset=in.readInt();\n  if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n    throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n  }\n  section.size=size;\n  section.off=offset;\n  if (previous != null && previous.off > section.off) {\n    throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n  }\n  previous=section;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 784,
        "startLineNumber" : 198,
        "startColumnNumber" : 8,
        "endLineNumber" : 218,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < mapSize; i++) {\n  short type=in.readShort();\n  in.readShort();\n  Section section=getSection(type);\n  int size=in.readInt();\n  int offset=in.readInt();\n  if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n    throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n  }\n  section.size=size;\n  section.off=offset;\n  if (previous != null && previous.off > section.off) {\n    throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n  }\n  previous=section;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 122,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1180,
        "startLineNumber" : 195,
        "startColumnNumber" : 60,
        "endLineNumber" : 230,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int mapSize=in.readInt();\n  Section previous=null;\n  for (int i=0; i < mapSize; i++) {\n    short type=in.readShort();\n    in.readShort();\n    Section section=getSection(type);\n    int size=in.readInt();\n    int offset=in.readInt();\n    if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n      throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n    }\n    section.size=size;\n    section.off=offset;\n    if (previous != null && previous.off > section.off) {\n      throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n    }\n    previous=section;\n  }\n  header.off=0;\n  Arrays.sort(sections);\n  for (int i=1; i < sections.length; ++i) {\n    if (sections[i].off == Section.UNDEF_OFFSET) {\n      sections[i].off=sections[i - 1].off;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 186,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1236,
        "startLineNumber" : 195,
        "startColumnNumber" : 4,
        "endLineNumber" : 230,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void readMap(Dex.Section in) throws IOException {\n  int mapSize=in.readInt();\n  Section previous=null;\n  for (int i=0; i < mapSize; i++) {\n    short type=in.readShort();\n    in.readShort();\n    Section section=getSection(type);\n    int size=in.readInt();\n    int offset=in.readInt();\n    if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n      throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n    }\n    section.size=size;\n    section.off=offset;\n    if (previous != null && previous.off > section.off) {\n      throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n    }\n    previous=section;\n  }\n  header.off=0;\n  Arrays.sort(sections);\n  for (int i=1; i < sections.length; ++i) {\n    if (sections[i].off == Section.UNDEF_OFFSET) {\n      sections[i].off=sections[i - 1].off;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 198,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 206,
        "startColumnNumber" : 23,
        "endLineNumber" : 206,
        "endColumnNumber" : 85
      },
      "nodeContext" : "(section.off != Section.UNDEF_OFFSET && section.off != offset)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.android.dex.TableOfContents.Section"
  }, {
    "nodeContext" : "section",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 206,
      "startColumnNumber" : 63,
      "endLineNumber" : 206,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 206,
        "startColumnNumber" : 63,
        "endLineNumber" : 206,
        "endColumnNumber" : 74
      },
      "nodeContext" : "section.off",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 206,
        "startColumnNumber" : 63,
        "endLineNumber" : 206,
        "endColumnNumber" : 84
      },
      "nodeContext" : "section.off != offset",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 206,
        "startColumnNumber" : 24,
        "endLineNumber" : 206,
        "endColumnNumber" : 84
      },
      "nodeContext" : "section.off != Section.UNDEF_OFFSET && section.off != offset",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 206,
        "startColumnNumber" : 23,
        "endLineNumber" : 206,
        "endColumnNumber" : 85
      },
      "nodeContext" : "(section.off != Section.UNDEF_OFFSET && section.off != offset)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 205,
        "startColumnNumber" : 16,
        "endLineNumber" : 206,
        "endColumnNumber" : 85
      },
      "nodeContext" : "(section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 205,
        "startColumnNumber" : 12,
        "endLineNumber" : 208,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n  throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 750,
        "startLineNumber" : 198,
        "startColumnNumber" : 42,
        "endLineNumber" : 218,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  short type=in.readShort();\n  in.readShort();\n  Section section=getSection(type);\n  int size=in.readInt();\n  int offset=in.readInt();\n  if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n    throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n  }\n  section.size=size;\n  section.off=offset;\n  if (previous != null && previous.off > section.off) {\n    throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n  }\n  previous=section;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 784,
        "startLineNumber" : 198,
        "startColumnNumber" : 8,
        "endLineNumber" : 218,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < mapSize; i++) {\n  short type=in.readShort();\n  in.readShort();\n  Section section=getSection(type);\n  int size=in.readInt();\n  int offset=in.readInt();\n  if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n    throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n  }\n  section.size=size;\n  section.off=offset;\n  if (previous != null && previous.off > section.off) {\n    throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n  }\n  previous=section;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 122,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1180,
        "startLineNumber" : 195,
        "startColumnNumber" : 60,
        "endLineNumber" : 230,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int mapSize=in.readInt();\n  Section previous=null;\n  for (int i=0; i < mapSize; i++) {\n    short type=in.readShort();\n    in.readShort();\n    Section section=getSection(type);\n    int size=in.readInt();\n    int offset=in.readInt();\n    if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n      throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n    }\n    section.size=size;\n    section.off=offset;\n    if (previous != null && previous.off > section.off) {\n      throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n    }\n    previous=section;\n  }\n  header.off=0;\n  Arrays.sort(sections);\n  for (int i=1; i < sections.length; ++i) {\n    if (sections[i].off == Section.UNDEF_OFFSET) {\n      sections[i].off=sections[i - 1].off;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 186,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1236,
        "startLineNumber" : 195,
        "startColumnNumber" : 4,
        "endLineNumber" : 230,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void readMap(Dex.Section in) throws IOException {\n  int mapSize=in.readInt();\n  Section previous=null;\n  for (int i=0; i < mapSize; i++) {\n    short type=in.readShort();\n    in.readShort();\n    Section section=getSection(type);\n    int size=in.readInt();\n    int offset=in.readInt();\n    if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n      throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n    }\n    section.size=size;\n    section.off=offset;\n    if (previous != null && previous.off > section.off) {\n      throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n    }\n    previous=section;\n  }\n  header.off=0;\n  Arrays.sort(sections);\n  for (int i=1; i < sections.length; ++i) {\n    if (sections[i].off == Section.UNDEF_OFFSET) {\n      sections[i].off=sections[i - 1].off;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 198,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 206,
        "startColumnNumber" : 23,
        "endLineNumber" : 206,
        "endColumnNumber" : 85
      },
      "nodeContext" : "(section.off != Section.UNDEF_OFFSET && section.off != offset)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.android.dex.TableOfContents.Section"
  }, {
    "nodeContext" : "section",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 210,
      "startColumnNumber" : 12,
      "endLineNumber" : 210,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 210,
        "startColumnNumber" : 12,
        "endLineNumber" : 210,
        "endColumnNumber" : 24
      },
      "nodeContext" : "section.size",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 210,
        "startColumnNumber" : 12,
        "endLineNumber" : 210,
        "endColumnNumber" : 31
      },
      "nodeContext" : "section.size=size",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 210,
        "startColumnNumber" : 12,
        "endLineNumber" : 210,
        "endColumnNumber" : 32
      },
      "nodeContext" : "section.size=size;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 750,
        "startLineNumber" : 198,
        "startColumnNumber" : 42,
        "endLineNumber" : 218,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  short type=in.readShort();\n  in.readShort();\n  Section section=getSection(type);\n  int size=in.readInt();\n  int offset=in.readInt();\n  if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n    throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n  }\n  section.size=size;\n  section.off=offset;\n  if (previous != null && previous.off > section.off) {\n    throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n  }\n  previous=section;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 784,
        "startLineNumber" : 198,
        "startColumnNumber" : 8,
        "endLineNumber" : 218,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < mapSize; i++) {\n  short type=in.readShort();\n  in.readShort();\n  Section section=getSection(type);\n  int size=in.readInt();\n  int offset=in.readInt();\n  if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n    throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n  }\n  section.size=size;\n  section.off=offset;\n  if (previous != null && previous.off > section.off) {\n    throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n  }\n  previous=section;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 122,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1180,
        "startLineNumber" : 195,
        "startColumnNumber" : 60,
        "endLineNumber" : 230,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int mapSize=in.readInt();\n  Section previous=null;\n  for (int i=0; i < mapSize; i++) {\n    short type=in.readShort();\n    in.readShort();\n    Section section=getSection(type);\n    int size=in.readInt();\n    int offset=in.readInt();\n    if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n      throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n    }\n    section.size=size;\n    section.off=offset;\n    if (previous != null && previous.off > section.off) {\n      throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n    }\n    previous=section;\n  }\n  header.off=0;\n  Arrays.sort(sections);\n  for (int i=1; i < sections.length; ++i) {\n    if (sections[i].off == Section.UNDEF_OFFSET) {\n      sections[i].off=sections[i - 1].off;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 186,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1236,
        "startLineNumber" : 195,
        "startColumnNumber" : 4,
        "endLineNumber" : 230,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void readMap(Dex.Section in) throws IOException {\n  int mapSize=in.readInt();\n  Section previous=null;\n  for (int i=0; i < mapSize; i++) {\n    short type=in.readShort();\n    in.readShort();\n    Section section=getSection(type);\n    int size=in.readInt();\n    int offset=in.readInt();\n    if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n      throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n    }\n    section.size=size;\n    section.off=offset;\n    if (previous != null && previous.off > section.off) {\n      throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n    }\n    previous=section;\n  }\n  header.off=0;\n  Arrays.sort(sections);\n  for (int i=1; i < sections.length; ++i) {\n    if (sections[i].off == Section.UNDEF_OFFSET) {\n      sections[i].off=sections[i - 1].off;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 198,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 210,
        "startColumnNumber" : 12,
        "endLineNumber" : 210,
        "endColumnNumber" : 32
      },
      "nodeContext" : "section.size=size;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.android.dex.TableOfContents.Section"
  }, {
    "nodeContext" : "section",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 211,
      "startColumnNumber" : 12,
      "endLineNumber" : 211,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 211,
        "startColumnNumber" : 12,
        "endLineNumber" : 211,
        "endColumnNumber" : 23
      },
      "nodeContext" : "section.off",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 211,
        "startColumnNumber" : 12,
        "endLineNumber" : 211,
        "endColumnNumber" : 32
      },
      "nodeContext" : "section.off=offset",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 211,
        "startColumnNumber" : 12,
        "endLineNumber" : 211,
        "endColumnNumber" : 33
      },
      "nodeContext" : "section.off=offset;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 750,
        "startLineNumber" : 198,
        "startColumnNumber" : 42,
        "endLineNumber" : 218,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  short type=in.readShort();\n  in.readShort();\n  Section section=getSection(type);\n  int size=in.readInt();\n  int offset=in.readInt();\n  if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n    throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n  }\n  section.size=size;\n  section.off=offset;\n  if (previous != null && previous.off > section.off) {\n    throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n  }\n  previous=section;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 784,
        "startLineNumber" : 198,
        "startColumnNumber" : 8,
        "endLineNumber" : 218,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < mapSize; i++) {\n  short type=in.readShort();\n  in.readShort();\n  Section section=getSection(type);\n  int size=in.readInt();\n  int offset=in.readInt();\n  if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n    throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n  }\n  section.size=size;\n  section.off=offset;\n  if (previous != null && previous.off > section.off) {\n    throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n  }\n  previous=section;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 122,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1180,
        "startLineNumber" : 195,
        "startColumnNumber" : 60,
        "endLineNumber" : 230,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int mapSize=in.readInt();\n  Section previous=null;\n  for (int i=0; i < mapSize; i++) {\n    short type=in.readShort();\n    in.readShort();\n    Section section=getSection(type);\n    int size=in.readInt();\n    int offset=in.readInt();\n    if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n      throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n    }\n    section.size=size;\n    section.off=offset;\n    if (previous != null && previous.off > section.off) {\n      throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n    }\n    previous=section;\n  }\n  header.off=0;\n  Arrays.sort(sections);\n  for (int i=1; i < sections.length; ++i) {\n    if (sections[i].off == Section.UNDEF_OFFSET) {\n      sections[i].off=sections[i - 1].off;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 186,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1236,
        "startLineNumber" : 195,
        "startColumnNumber" : 4,
        "endLineNumber" : 230,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void readMap(Dex.Section in) throws IOException {\n  int mapSize=in.readInt();\n  Section previous=null;\n  for (int i=0; i < mapSize; i++) {\n    short type=in.readShort();\n    in.readShort();\n    Section section=getSection(type);\n    int size=in.readInt();\n    int offset=in.readInt();\n    if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n      throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n    }\n    section.size=size;\n    section.off=offset;\n    if (previous != null && previous.off > section.off) {\n      throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n    }\n    previous=section;\n  }\n  header.off=0;\n  Arrays.sort(sections);\n  for (int i=1; i < sections.length; ++i) {\n    if (sections[i].off == Section.UNDEF_OFFSET) {\n      sections[i].off=sections[i - 1].off;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 198,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 211,
        "startColumnNumber" : 12,
        "endLineNumber" : 211,
        "endColumnNumber" : 33
      },
      "nodeContext" : "section.off=offset;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.android.dex.TableOfContents.Section"
  }, {
    "nodeContext" : "section",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 213,
      "startColumnNumber" : 51,
      "endLineNumber" : 213,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 213,
        "startColumnNumber" : 51,
        "endLineNumber" : 213,
        "endColumnNumber" : 62
      },
      "nodeContext" : "section.off",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 213,
        "startColumnNumber" : 36,
        "endLineNumber" : 213,
        "endColumnNumber" : 62
      },
      "nodeContext" : "previous.off > section.off",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 213,
        "startColumnNumber" : 16,
        "endLineNumber" : 213,
        "endColumnNumber" : 62
      },
      "nodeContext" : "previous != null && previous.off > section.off",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 158,
        "startLineNumber" : 213,
        "startColumnNumber" : 12,
        "endLineNumber" : 215,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (previous != null && previous.off > section.off) {\n  throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 750,
        "startLineNumber" : 198,
        "startColumnNumber" : 42,
        "endLineNumber" : 218,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  short type=in.readShort();\n  in.readShort();\n  Section section=getSection(type);\n  int size=in.readInt();\n  int offset=in.readInt();\n  if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n    throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n  }\n  section.size=size;\n  section.off=offset;\n  if (previous != null && previous.off > section.off) {\n    throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n  }\n  previous=section;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 784,
        "startLineNumber" : 198,
        "startColumnNumber" : 8,
        "endLineNumber" : 218,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < mapSize; i++) {\n  short type=in.readShort();\n  in.readShort();\n  Section section=getSection(type);\n  int size=in.readInt();\n  int offset=in.readInt();\n  if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n    throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n  }\n  section.size=size;\n  section.off=offset;\n  if (previous != null && previous.off > section.off) {\n    throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n  }\n  previous=section;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 122,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1180,
        "startLineNumber" : 195,
        "startColumnNumber" : 60,
        "endLineNumber" : 230,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int mapSize=in.readInt();\n  Section previous=null;\n  for (int i=0; i < mapSize; i++) {\n    short type=in.readShort();\n    in.readShort();\n    Section section=getSection(type);\n    int size=in.readInt();\n    int offset=in.readInt();\n    if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n      throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n    }\n    section.size=size;\n    section.off=offset;\n    if (previous != null && previous.off > section.off) {\n      throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n    }\n    previous=section;\n  }\n  header.off=0;\n  Arrays.sort(sections);\n  for (int i=1; i < sections.length; ++i) {\n    if (sections[i].off == Section.UNDEF_OFFSET) {\n      sections[i].off=sections[i - 1].off;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 186,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1236,
        "startLineNumber" : 195,
        "startColumnNumber" : 4,
        "endLineNumber" : 230,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void readMap(Dex.Section in) throws IOException {\n  int mapSize=in.readInt();\n  Section previous=null;\n  for (int i=0; i < mapSize; i++) {\n    short type=in.readShort();\n    in.readShort();\n    Section section=getSection(type);\n    int size=in.readInt();\n    int offset=in.readInt();\n    if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n      throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n    }\n    section.size=size;\n    section.off=offset;\n    if (previous != null && previous.off > section.off) {\n      throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n    }\n    previous=section;\n  }\n  header.off=0;\n  Arrays.sort(sections);\n  for (int i=1; i < sections.length; ++i) {\n    if (sections[i].off == Section.UNDEF_OFFSET) {\n      sections[i].off=sections[i - 1].off;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 198,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 213,
        "startColumnNumber" : 16,
        "endLineNumber" : 213,
        "endColumnNumber" : 62
      },
      "nodeContext" : "previous != null && previous.off > section.off",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.android.dex.TableOfContents.Section"
  }, {
    "nodeContext" : "section",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 214,
      "startColumnNumber" : 81,
      "endLineNumber" : 214,
      "endColumnNumber" : 88
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 214,
        "startColumnNumber" : 39,
        "endLineNumber" : 214,
        "endColumnNumber" : 88
      },
      "nodeContext" : "\"Map is unsorted at \" + previous + \", \"+ section",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 214,
        "startColumnNumber" : 22,
        "endLineNumber" : 214,
        "endColumnNumber" : 89
      },
      "nodeContext" : "new DexException(\"Map is unsorted at \" + previous + \", \"+ section)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 214,
        "startColumnNumber" : 16,
        "endLineNumber" : 214,
        "endColumnNumber" : 90
      },
      "nodeContext" : "throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 213,
        "startColumnNumber" : 64,
        "endLineNumber" : 215,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 158,
        "startLineNumber" : 213,
        "startColumnNumber" : 12,
        "endLineNumber" : 215,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (previous != null && previous.off > section.off) {\n  throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 750,
        "startLineNumber" : 198,
        "startColumnNumber" : 42,
        "endLineNumber" : 218,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  short type=in.readShort();\n  in.readShort();\n  Section section=getSection(type);\n  int size=in.readInt();\n  int offset=in.readInt();\n  if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n    throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n  }\n  section.size=size;\n  section.off=offset;\n  if (previous != null && previous.off > section.off) {\n    throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n  }\n  previous=section;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 784,
        "startLineNumber" : 198,
        "startColumnNumber" : 8,
        "endLineNumber" : 218,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < mapSize; i++) {\n  short type=in.readShort();\n  in.readShort();\n  Section section=getSection(type);\n  int size=in.readInt();\n  int offset=in.readInt();\n  if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n    throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n  }\n  section.size=size;\n  section.off=offset;\n  if (previous != null && previous.off > section.off) {\n    throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n  }\n  previous=section;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 122,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1180,
        "startLineNumber" : 195,
        "startColumnNumber" : 60,
        "endLineNumber" : 230,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int mapSize=in.readInt();\n  Section previous=null;\n  for (int i=0; i < mapSize; i++) {\n    short type=in.readShort();\n    in.readShort();\n    Section section=getSection(type);\n    int size=in.readInt();\n    int offset=in.readInt();\n    if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n      throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n    }\n    section.size=size;\n    section.off=offset;\n    if (previous != null && previous.off > section.off) {\n      throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n    }\n    previous=section;\n  }\n  header.off=0;\n  Arrays.sort(sections);\n  for (int i=1; i < sections.length; ++i) {\n    if (sections[i].off == Section.UNDEF_OFFSET) {\n      sections[i].off=sections[i - 1].off;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 186,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1236,
        "startLineNumber" : 195,
        "startColumnNumber" : 4,
        "endLineNumber" : 230,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void readMap(Dex.Section in) throws IOException {\n  int mapSize=in.readInt();\n  Section previous=null;\n  for (int i=0; i < mapSize; i++) {\n    short type=in.readShort();\n    in.readShort();\n    Section section=getSection(type);\n    int size=in.readInt();\n    int offset=in.readInt();\n    if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n      throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n    }\n    section.size=size;\n    section.off=offset;\n    if (previous != null && previous.off > section.off) {\n      throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n    }\n    previous=section;\n  }\n  header.off=0;\n  Arrays.sort(sections);\n  for (int i=1; i < sections.length; ++i) {\n    if (sections[i].off == Section.UNDEF_OFFSET) {\n      sections[i].off=sections[i - 1].off;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 198,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 214,
        "startColumnNumber" : 16,
        "endLineNumber" : 214,
        "endColumnNumber" : 90
      },
      "nodeContext" : "throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.android.dex.TableOfContents.Section"
  }, {
    "nodeContext" : "section",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 217,
      "startColumnNumber" : 23,
      "endLineNumber" : 217,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 217,
        "startColumnNumber" : 12,
        "endLineNumber" : 217,
        "endColumnNumber" : 30
      },
      "nodeContext" : "previous=section",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 217,
        "startColumnNumber" : 12,
        "endLineNumber" : 217,
        "endColumnNumber" : 31
      },
      "nodeContext" : "previous=section;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 750,
        "startLineNumber" : 198,
        "startColumnNumber" : 42,
        "endLineNumber" : 218,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  short type=in.readShort();\n  in.readShort();\n  Section section=getSection(type);\n  int size=in.readInt();\n  int offset=in.readInt();\n  if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n    throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n  }\n  section.size=size;\n  section.off=offset;\n  if (previous != null && previous.off > section.off) {\n    throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n  }\n  previous=section;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 784,
        "startLineNumber" : 198,
        "startColumnNumber" : 8,
        "endLineNumber" : 218,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < mapSize; i++) {\n  short type=in.readShort();\n  in.readShort();\n  Section section=getSection(type);\n  int size=in.readInt();\n  int offset=in.readInt();\n  if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n    throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n  }\n  section.size=size;\n  section.off=offset;\n  if (previous != null && previous.off > section.off) {\n    throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n  }\n  previous=section;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 122,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1180,
        "startLineNumber" : 195,
        "startColumnNumber" : 60,
        "endLineNumber" : 230,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int mapSize=in.readInt();\n  Section previous=null;\n  for (int i=0; i < mapSize; i++) {\n    short type=in.readShort();\n    in.readShort();\n    Section section=getSection(type);\n    int size=in.readInt();\n    int offset=in.readInt();\n    if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n      throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n    }\n    section.size=size;\n    section.off=offset;\n    if (previous != null && previous.off > section.off) {\n      throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n    }\n    previous=section;\n  }\n  header.off=0;\n  Arrays.sort(sections);\n  for (int i=1; i < sections.length; ++i) {\n    if (sections[i].off == Section.UNDEF_OFFSET) {\n      sections[i].off=sections[i - 1].off;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 186,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1236,
        "startLineNumber" : 195,
        "startColumnNumber" : 4,
        "endLineNumber" : 230,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void readMap(Dex.Section in) throws IOException {\n  int mapSize=in.readInt();\n  Section previous=null;\n  for (int i=0; i < mapSize; i++) {\n    short type=in.readShort();\n    in.readShort();\n    Section section=getSection(type);\n    int size=in.readInt();\n    int offset=in.readInt();\n    if ((section.size != 0 && section.size != size) || (section.off != Section.UNDEF_OFFSET && section.off != offset)) {\n      throw new DexException(\"Unexpected map value for 0x\" + Integer.toHexString(type));\n    }\n    section.size=size;\n    section.off=offset;\n    if (previous != null && previous.off > section.off) {\n      throw new DexException(\"Map is unsorted at \" + previous + \", \"+ section);\n    }\n    previous=section;\n  }\n  header.off=0;\n  Arrays.sort(sections);\n  for (int i=1; i < sections.length; ++i) {\n    if (sections[i].off == Section.UNDEF_OFFSET) {\n      sections[i].off=sections[i - 1].off;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 198,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 217,
        "startColumnNumber" : 12,
        "endLineNumber" : 217,
        "endColumnNumber" : 31
      },
      "nodeContext" : "previous=section;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.android.dex.TableOfContents.Section"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 205,
    "startColumnNumber" : 17,
    "endLineNumber" : 205,
    "endColumnNumber" : 24
  }, {
    "charLength" : 7,
    "startLineNumber" : 205,
    "startColumnNumber" : 38,
    "endLineNumber" : 205,
    "endColumnNumber" : 45
  }, {
    "charLength" : 7,
    "startLineNumber" : 206,
    "startColumnNumber" : 24,
    "endLineNumber" : 206,
    "endColumnNumber" : 31
  }, {
    "charLength" : 7,
    "startLineNumber" : 206,
    "startColumnNumber" : 63,
    "endLineNumber" : 206,
    "endColumnNumber" : 70
  }, {
    "charLength" : 7,
    "startLineNumber" : 210,
    "startColumnNumber" : 12,
    "endLineNumber" : 210,
    "endColumnNumber" : 19
  }, {
    "charLength" : 7,
    "startLineNumber" : 211,
    "startColumnNumber" : 12,
    "endLineNumber" : 211,
    "endColumnNumber" : 19
  }, {
    "charLength" : 7,
    "startLineNumber" : 213,
    "startColumnNumber" : 51,
    "endLineNumber" : 213,
    "endColumnNumber" : 58
  }, {
    "charLength" : 7,
    "startLineNumber" : 214,
    "startColumnNumber" : 81,
    "endLineNumber" : 214,
    "endColumnNumber" : 88
  }, {
    "charLength" : 7,
    "startLineNumber" : 217,
    "startColumnNumber" : 23,
    "endLineNumber" : 217,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 2
  } ]
}