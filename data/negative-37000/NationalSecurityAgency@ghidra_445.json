{
  "id" : 445,
  "expression" : "\"Expected version \" + VERSION + \" for table \"+ COMPOSITE_TABLE_NAME+ \" but got \"+ version",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/database/data/CompositeDBAdapterV5V6.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Expected version \" + VERSION + \" for table \"+ COMPOSITE_TABLE_NAME+ \" but got \"+ version",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 98,
      "startLineNumber" : 90,
      "startColumnNumber" : 17,
      "endLineNumber" : 91,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 7,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 90,
        "startColumnNumber" : 11,
        "endLineNumber" : 91,
        "endColumnNumber" : 26
      },
      "nodeContext" : "msg=\"Expected version \" + VERSION + \" for table \"+ COMPOSITE_TABLE_NAME+ \" but got \"+ version",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 27
      },
      "nodeContext" : "String msg=\"Expected version \" + VERSION + \" for table \"+ COMPOSITE_TABLE_NAME+ \" but got \"+ version;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 316,
        "startLineNumber" : 89,
        "startColumnNumber" : 27,
        "endLineNumber" : 96,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  String msg=\"Expected version \" + VERSION + \" for table \"+ COMPOSITE_TABLE_NAME+ \" but got \"+ version;\n  if (version < VERSION) {\n    throw new VersionException(msg,VersionException.OLDER_VERSION,true);\n  }\n  throw new VersionException(msg,VersionException.NEWER_VERSION,false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 340,
        "startLineNumber" : 89,
        "startColumnNumber" : 3,
        "endLineNumber" : 96,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (version != VERSION) {\n  String msg=\"Expected version \" + VERSION + \" for table \"+ COMPOSITE_TABLE_NAME+ \" but got \"+ version;\n  if (version < VERSION) {\n    throw new VersionException(msg,VersionException.OLDER_VERSION,true);\n  }\n  throw new VersionException(msg,VersionException.NEWER_VERSION,false);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 728,
        "startLineNumber" : 80,
        "startColumnNumber" : 7,
        "endLineNumber" : 97,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  compositeTable=handle.getTable(COMPOSITE_TABLE_NAME);\n  if (compositeTable == null) {\n    throw new VersionException(\"Missing Table: \" + COMPOSITE_TABLE_NAME);\n  }\n  int version=compositeTable.getSchema().getVersion();\n  if (version == V5_VERSION && openMode == DBConstants.READ_ONLY) {\n    return;\n  }\n  if (version != VERSION) {\n    String msg=\"Expected version \" + VERSION + \" for table \"+ COMPOSITE_TABLE_NAME+ \" but got \"+ version;\n    if (version < VERSION) {\n      throw new VersionException(msg,VersionException.OLDER_VERSION,true);\n    }\n    throw new VersionException(msg,VersionException.NEWER_VERSION,false);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 944,
        "startLineNumber" : 76,
        "startColumnNumber" : 2,
        "endLineNumber" : 97,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (openMode == DBConstants.CREATE) {\n  compositeTable=handle.createTable(COMPOSITE_TABLE_NAME,V5V6_COMPOSITE_SCHEMA,new int[]{V5V6_COMPOSITE_CAT_COL,V5V6_COMPOSITE_UNIVERSAL_DT_ID_COL});\n}\n else {\n  compositeTable=handle.getTable(COMPOSITE_TABLE_NAME);\n  if (compositeTable == null) {\n    throw new VersionException(\"Missing Table: \" + COMPOSITE_TABLE_NAME);\n  }\n  int version=compositeTable.getSchema().getVersion();\n  if (version == V5_VERSION && openMode == DBConstants.READ_ONLY) {\n    return;\n  }\n  if (version != VERSION) {\n    String msg=\"Expected version \" + VERSION + \" for table \"+ COMPOSITE_TABLE_NAME+ \" but got \"+ version;\n    if (version < VERSION) {\n      throw new VersionException(msg,VersionException.OLDER_VERSION,true);\n    }\n    throw new VersionException(msg,VersionException.NEWER_VERSION,false);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 103,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 953,
        "startLineNumber" : 75,
        "startColumnNumber" : 40,
        "endLineNumber" : 98,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (openMode == DBConstants.CREATE) {\n    compositeTable=handle.createTable(COMPOSITE_TABLE_NAME,V5V6_COMPOSITE_SCHEMA,new int[]{V5V6_COMPOSITE_CAT_COL,V5V6_COMPOSITE_UNIVERSAL_DT_ID_COL});\n  }\n else {\n    compositeTable=handle.getTable(COMPOSITE_TABLE_NAME);\n    if (compositeTable == null) {\n      throw new VersionException(\"Missing Table: \" + COMPOSITE_TABLE_NAME);\n    }\n    int version=compositeTable.getSchema().getVersion();\n    if (version == V5_VERSION && openMode == DBConstants.READ_ONLY) {\n      return;\n    }\n    if (version != VERSION) {\n      String msg=\"Expected version \" + VERSION + \" for table \"+ COMPOSITE_TABLE_NAME+ \" but got \"+ version;\n      if (version < VERSION) {\n        throw new VersionException(msg,VersionException.OLDER_VERSION,true);\n      }\n      throw new VersionException(msg,VersionException.NEWER_VERSION,false);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1367,
        "startLineNumber" : 66,
        "startColumnNumber" : 1,
        "endLineNumber" : 98,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Gets an adapter for the Composite database table.\n * @param handle handle to the database containing the table.\n * @param openMode\n * @throws VersionException if the the table's version does not match the expected versionfor this adapter.\n * @throws IOException if IO error occurs\n */\npublic CompositeDBAdapterV5V6(DBHandle handle,int openMode) throws VersionException, IOException {\n  if (openMode == DBConstants.CREATE) {\n    compositeTable=handle.createTable(COMPOSITE_TABLE_NAME,V5V6_COMPOSITE_SCHEMA,new int[]{V5V6_COMPOSITE_CAT_COL,V5V6_COMPOSITE_UNIVERSAL_DT_ID_COL});\n  }\n else {\n    compositeTable=handle.getTable(COMPOSITE_TABLE_NAME);\n    if (compositeTable == null) {\n      throw new VersionException(\"Missing Table: \" + COMPOSITE_TABLE_NAME);\n    }\n    int version=compositeTable.getSchema().getVersion();\n    if (version == V5_VERSION && openMode == DBConstants.READ_ONLY) {\n      return;\n    }\n    if (version != VERSION) {\n      String msg=\"Expected version \" + VERSION + \" for table \"+ COMPOSITE_TABLE_NAME+ \" but got \"+ version;\n      if (version < VERSION) {\n        throw new VersionException(msg,VersionException.OLDER_VERSION,true);\n      }\n      throw new VersionException(msg,VersionException.NEWER_VERSION,false);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 119,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 27
      },
      "nodeContext" : "String msg=\"Expected version \" + VERSION + \" for table \"+ COMPOSITE_TABLE_NAME+ \" but got \"+ version;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 14,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 98,
    "startLineNumber" : 90,
    "startColumnNumber" : 17,
    "endLineNumber" : 91,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}