{
  "id" : 84,
  "expression" : "AuthAction",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-proxy/src/test/java/org/apache/pulsar/proxy/server/ProxyAuthenticationTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "AuthAction",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 208,
      "startColumnNumber" : 20,
      "endLineNumber" : 208,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 208,
        "startColumnNumber" : 20,
        "endLineNumber" : 208,
        "endColumnNumber" : 38
      },
      "nodeContext" : "AuthAction.consume",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 208,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Sets.newHashSet(AuthAction.consume,AuthAction.produce)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 207,
        "startColumnNumber" : 2,
        "endLineNumber" : 208,
        "endColumnNumber" : 60
      },
      "nodeContext" : "admin.namespaces().grantPermissionOnNamespace(namespaceName,\"proxy\",Sets.newHashSet(AuthAction.consume,AuthAction.produce))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 207,
        "startColumnNumber" : 2,
        "endLineNumber" : 208,
        "endColumnNumber" : 61
      },
      "nodeContext" : "admin.namespaces().grantPermissionOnNamespace(namespaceName,\"proxy\",Sets.newHashSet(AuthAction.consume,AuthAction.produce));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2456,
        "startLineNumber" : 193,
        "startColumnNumber" : 44,
        "endLineNumber" : 244,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  log.info(\"-- Starting {} test --\",methodName);\n  updateAdminClient();\n  String namespaceName=\"my-property/my-ns\";\n  String topicName=\"persistent://my-property/my-ns/my-topic1\";\n  String subscriptionName=\"my-subscriber-name\";\n  String clientAuthParams=\"entityType:client,expiryTime:\" + (System.currentTimeMillis() + 6 * 1000);\n  String proxyAuthParams=\"entityType:proxy,expiryTime:\" + (System.currentTimeMillis() + 3 * 1000);\n  admin.namespaces().grantPermissionOnNamespace(namespaceName,\"proxy\",Sets.newHashSet(AuthAction.consume,AuthAction.produce));\n  admin.namespaces().grantPermissionOnNamespace(namespaceName,\"client\",Sets.newHashSet(AuthAction.consume,AuthAction.produce));\n  ProxyConfiguration proxyConfig=new ProxyConfiguration();\n  proxyConfig.setAuthenticationEnabled(true);\n  proxyConfig.setServicePort(Optional.of(0));\n  proxyConfig.setWebServicePort(Optional.of(0));\n  proxyConfig.setBrokerServiceURL(pulsar.getBrokerServiceUrl());\n  proxyConfig.setBrokerClientAuthenticationPlugin(BasicAuthentication.class.getName());\n  proxyConfig.setBrokerClientAuthenticationParameters(proxyAuthParams);\n  Set<String> providers=new HashSet<>();\n  providers.add(BasicAuthenticationProvider.class.getName());\n  proxyConfig.setAuthenticationProviders(providers);\n  proxyConfig.setForwardAuthorizationCredentials(true);\n  AuthenticationService authenticationService=new AuthenticationService(PulsarConfigurationLoader.convertFrom(proxyConfig));\n  @Cleanup ProxyService proxyService=new ProxyService(proxyConfig,authenticationService);\n  proxyService.start();\n  final String proxyServiceUrl=proxyService.getServiceUrl();\n  @Cleanup PulsarClient proxyClient=createPulsarClient(proxyServiceUrl,clientAuthParams,1);\n  proxyClient.newProducer(Schema.BYTES).topic(topicName).create();\n  Thread.sleep(4 * 1000);\n  proxyClient.newProducer(Schema.BYTES).topic(topicName).create();\n  Thread.sleep(3 * 1000);\n  proxyClient.newProducer(Schema.BYTES).topic(topicName).create();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 272,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2506,
        "startLineNumber" : 192,
        "startColumnNumber" : 1,
        "endLineNumber" : 244,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test void testAuthentication() throws Exception {\n  log.info(\"-- Starting {} test --\",methodName);\n  updateAdminClient();\n  String namespaceName=\"my-property/my-ns\";\n  String topicName=\"persistent://my-property/my-ns/my-topic1\";\n  String subscriptionName=\"my-subscriber-name\";\n  String clientAuthParams=\"entityType:client,expiryTime:\" + (System.currentTimeMillis() + 6 * 1000);\n  String proxyAuthParams=\"entityType:proxy,expiryTime:\" + (System.currentTimeMillis() + 3 * 1000);\n  admin.namespaces().grantPermissionOnNamespace(namespaceName,\"proxy\",Sets.newHashSet(AuthAction.consume,AuthAction.produce));\n  admin.namespaces().grantPermissionOnNamespace(namespaceName,\"client\",Sets.newHashSet(AuthAction.consume,AuthAction.produce));\n  ProxyConfiguration proxyConfig=new ProxyConfiguration();\n  proxyConfig.setAuthenticationEnabled(true);\n  proxyConfig.setServicePort(Optional.of(0));\n  proxyConfig.setWebServicePort(Optional.of(0));\n  proxyConfig.setBrokerServiceURL(pulsar.getBrokerServiceUrl());\n  proxyConfig.setBrokerClientAuthenticationPlugin(BasicAuthentication.class.getName());\n  proxyConfig.setBrokerClientAuthenticationParameters(proxyAuthParams);\n  Set<String> providers=new HashSet<>();\n  providers.add(BasicAuthenticationProvider.class.getName());\n  proxyConfig.setAuthenticationProviders(providers);\n  proxyConfig.setForwardAuthorizationCredentials(true);\n  AuthenticationService authenticationService=new AuthenticationService(PulsarConfigurationLoader.convertFrom(proxyConfig));\n  @Cleanup ProxyService proxyService=new ProxyService(proxyConfig,authenticationService);\n  proxyService.start();\n  final String proxyServiceUrl=proxyService.getServiceUrl();\n  @Cleanup PulsarClient proxyClient=createPulsarClient(proxyServiceUrl,clientAuthParams,1);\n  proxyClient.newProducer(Schema.BYTES).topic(topicName).create();\n  Thread.sleep(4 * 1000);\n  proxyClient.newProducer(Schema.BYTES).topic(topicName).create();\n  Thread.sleep(3 * 1000);\n  proxyClient.newProducer(Schema.BYTES).topic(topicName).create();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 279,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 208,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Sets.newHashSet(AuthAction.consume,AuthAction.produce)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.common.policies.data.AuthAction"
  }, {
    "nodeContext" : "AuthAction",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 208,
      "startColumnNumber" : 40,
      "endLineNumber" : 208,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 208,
        "startColumnNumber" : 40,
        "endLineNumber" : 208,
        "endColumnNumber" : 58
      },
      "nodeContext" : "AuthAction.produce",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 208,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Sets.newHashSet(AuthAction.consume,AuthAction.produce)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 207,
        "startColumnNumber" : 2,
        "endLineNumber" : 208,
        "endColumnNumber" : 60
      },
      "nodeContext" : "admin.namespaces().grantPermissionOnNamespace(namespaceName,\"proxy\",Sets.newHashSet(AuthAction.consume,AuthAction.produce))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 207,
        "startColumnNumber" : 2,
        "endLineNumber" : 208,
        "endColumnNumber" : 61
      },
      "nodeContext" : "admin.namespaces().grantPermissionOnNamespace(namespaceName,\"proxy\",Sets.newHashSet(AuthAction.consume,AuthAction.produce));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2456,
        "startLineNumber" : 193,
        "startColumnNumber" : 44,
        "endLineNumber" : 244,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  log.info(\"-- Starting {} test --\",methodName);\n  updateAdminClient();\n  String namespaceName=\"my-property/my-ns\";\n  String topicName=\"persistent://my-property/my-ns/my-topic1\";\n  String subscriptionName=\"my-subscriber-name\";\n  String clientAuthParams=\"entityType:client,expiryTime:\" + (System.currentTimeMillis() + 6 * 1000);\n  String proxyAuthParams=\"entityType:proxy,expiryTime:\" + (System.currentTimeMillis() + 3 * 1000);\n  admin.namespaces().grantPermissionOnNamespace(namespaceName,\"proxy\",Sets.newHashSet(AuthAction.consume,AuthAction.produce));\n  admin.namespaces().grantPermissionOnNamespace(namespaceName,\"client\",Sets.newHashSet(AuthAction.consume,AuthAction.produce));\n  ProxyConfiguration proxyConfig=new ProxyConfiguration();\n  proxyConfig.setAuthenticationEnabled(true);\n  proxyConfig.setServicePort(Optional.of(0));\n  proxyConfig.setWebServicePort(Optional.of(0));\n  proxyConfig.setBrokerServiceURL(pulsar.getBrokerServiceUrl());\n  proxyConfig.setBrokerClientAuthenticationPlugin(BasicAuthentication.class.getName());\n  proxyConfig.setBrokerClientAuthenticationParameters(proxyAuthParams);\n  Set<String> providers=new HashSet<>();\n  providers.add(BasicAuthenticationProvider.class.getName());\n  proxyConfig.setAuthenticationProviders(providers);\n  proxyConfig.setForwardAuthorizationCredentials(true);\n  AuthenticationService authenticationService=new AuthenticationService(PulsarConfigurationLoader.convertFrom(proxyConfig));\n  @Cleanup ProxyService proxyService=new ProxyService(proxyConfig,authenticationService);\n  proxyService.start();\n  final String proxyServiceUrl=proxyService.getServiceUrl();\n  @Cleanup PulsarClient proxyClient=createPulsarClient(proxyServiceUrl,clientAuthParams,1);\n  proxyClient.newProducer(Schema.BYTES).topic(topicName).create();\n  Thread.sleep(4 * 1000);\n  proxyClient.newProducer(Schema.BYTES).topic(topicName).create();\n  Thread.sleep(3 * 1000);\n  proxyClient.newProducer(Schema.BYTES).topic(topicName).create();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 272,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2506,
        "startLineNumber" : 192,
        "startColumnNumber" : 1,
        "endLineNumber" : 244,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test void testAuthentication() throws Exception {\n  log.info(\"-- Starting {} test --\",methodName);\n  updateAdminClient();\n  String namespaceName=\"my-property/my-ns\";\n  String topicName=\"persistent://my-property/my-ns/my-topic1\";\n  String subscriptionName=\"my-subscriber-name\";\n  String clientAuthParams=\"entityType:client,expiryTime:\" + (System.currentTimeMillis() + 6 * 1000);\n  String proxyAuthParams=\"entityType:proxy,expiryTime:\" + (System.currentTimeMillis() + 3 * 1000);\n  admin.namespaces().grantPermissionOnNamespace(namespaceName,\"proxy\",Sets.newHashSet(AuthAction.consume,AuthAction.produce));\n  admin.namespaces().grantPermissionOnNamespace(namespaceName,\"client\",Sets.newHashSet(AuthAction.consume,AuthAction.produce));\n  ProxyConfiguration proxyConfig=new ProxyConfiguration();\n  proxyConfig.setAuthenticationEnabled(true);\n  proxyConfig.setServicePort(Optional.of(0));\n  proxyConfig.setWebServicePort(Optional.of(0));\n  proxyConfig.setBrokerServiceURL(pulsar.getBrokerServiceUrl());\n  proxyConfig.setBrokerClientAuthenticationPlugin(BasicAuthentication.class.getName());\n  proxyConfig.setBrokerClientAuthenticationParameters(proxyAuthParams);\n  Set<String> providers=new HashSet<>();\n  providers.add(BasicAuthenticationProvider.class.getName());\n  proxyConfig.setAuthenticationProviders(providers);\n  proxyConfig.setForwardAuthorizationCredentials(true);\n  AuthenticationService authenticationService=new AuthenticationService(PulsarConfigurationLoader.convertFrom(proxyConfig));\n  @Cleanup ProxyService proxyService=new ProxyService(proxyConfig,authenticationService);\n  proxyService.start();\n  final String proxyServiceUrl=proxyService.getServiceUrl();\n  @Cleanup PulsarClient proxyClient=createPulsarClient(proxyServiceUrl,clientAuthParams,1);\n  proxyClient.newProducer(Schema.BYTES).topic(topicName).create();\n  Thread.sleep(4 * 1000);\n  proxyClient.newProducer(Schema.BYTES).topic(topicName).create();\n  Thread.sleep(3 * 1000);\n  proxyClient.newProducer(Schema.BYTES).topic(topicName).create();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 279,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 208,
        "startColumnNumber" : 4,
        "endLineNumber" : 208,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Sets.newHashSet(AuthAction.consume,AuthAction.produce)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.common.policies.data.AuthAction"
  }, {
    "nodeContext" : "AuthAction",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 210,
      "startColumnNumber" : 20,
      "endLineNumber" : 210,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 210,
        "startColumnNumber" : 20,
        "endLineNumber" : 210,
        "endColumnNumber" : 38
      },
      "nodeContext" : "AuthAction.consume",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 210,
        "startColumnNumber" : 4,
        "endLineNumber" : 210,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Sets.newHashSet(AuthAction.consume,AuthAction.produce)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 209,
        "startColumnNumber" : 2,
        "endLineNumber" : 210,
        "endColumnNumber" : 60
      },
      "nodeContext" : "admin.namespaces().grantPermissionOnNamespace(namespaceName,\"client\",Sets.newHashSet(AuthAction.consume,AuthAction.produce))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 209,
        "startColumnNumber" : 2,
        "endLineNumber" : 210,
        "endColumnNumber" : 61
      },
      "nodeContext" : "admin.namespaces().grantPermissionOnNamespace(namespaceName,\"client\",Sets.newHashSet(AuthAction.consume,AuthAction.produce));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2456,
        "startLineNumber" : 193,
        "startColumnNumber" : 44,
        "endLineNumber" : 244,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  log.info(\"-- Starting {} test --\",methodName);\n  updateAdminClient();\n  String namespaceName=\"my-property/my-ns\";\n  String topicName=\"persistent://my-property/my-ns/my-topic1\";\n  String subscriptionName=\"my-subscriber-name\";\n  String clientAuthParams=\"entityType:client,expiryTime:\" + (System.currentTimeMillis() + 6 * 1000);\n  String proxyAuthParams=\"entityType:proxy,expiryTime:\" + (System.currentTimeMillis() + 3 * 1000);\n  admin.namespaces().grantPermissionOnNamespace(namespaceName,\"proxy\",Sets.newHashSet(AuthAction.consume,AuthAction.produce));\n  admin.namespaces().grantPermissionOnNamespace(namespaceName,\"client\",Sets.newHashSet(AuthAction.consume,AuthAction.produce));\n  ProxyConfiguration proxyConfig=new ProxyConfiguration();\n  proxyConfig.setAuthenticationEnabled(true);\n  proxyConfig.setServicePort(Optional.of(0));\n  proxyConfig.setWebServicePort(Optional.of(0));\n  proxyConfig.setBrokerServiceURL(pulsar.getBrokerServiceUrl());\n  proxyConfig.setBrokerClientAuthenticationPlugin(BasicAuthentication.class.getName());\n  proxyConfig.setBrokerClientAuthenticationParameters(proxyAuthParams);\n  Set<String> providers=new HashSet<>();\n  providers.add(BasicAuthenticationProvider.class.getName());\n  proxyConfig.setAuthenticationProviders(providers);\n  proxyConfig.setForwardAuthorizationCredentials(true);\n  AuthenticationService authenticationService=new AuthenticationService(PulsarConfigurationLoader.convertFrom(proxyConfig));\n  @Cleanup ProxyService proxyService=new ProxyService(proxyConfig,authenticationService);\n  proxyService.start();\n  final String proxyServiceUrl=proxyService.getServiceUrl();\n  @Cleanup PulsarClient proxyClient=createPulsarClient(proxyServiceUrl,clientAuthParams,1);\n  proxyClient.newProducer(Schema.BYTES).topic(topicName).create();\n  Thread.sleep(4 * 1000);\n  proxyClient.newProducer(Schema.BYTES).topic(topicName).create();\n  Thread.sleep(3 * 1000);\n  proxyClient.newProducer(Schema.BYTES).topic(topicName).create();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 272,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2506,
        "startLineNumber" : 192,
        "startColumnNumber" : 1,
        "endLineNumber" : 244,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test void testAuthentication() throws Exception {\n  log.info(\"-- Starting {} test --\",methodName);\n  updateAdminClient();\n  String namespaceName=\"my-property/my-ns\";\n  String topicName=\"persistent://my-property/my-ns/my-topic1\";\n  String subscriptionName=\"my-subscriber-name\";\n  String clientAuthParams=\"entityType:client,expiryTime:\" + (System.currentTimeMillis() + 6 * 1000);\n  String proxyAuthParams=\"entityType:proxy,expiryTime:\" + (System.currentTimeMillis() + 3 * 1000);\n  admin.namespaces().grantPermissionOnNamespace(namespaceName,\"proxy\",Sets.newHashSet(AuthAction.consume,AuthAction.produce));\n  admin.namespaces().grantPermissionOnNamespace(namespaceName,\"client\",Sets.newHashSet(AuthAction.consume,AuthAction.produce));\n  ProxyConfiguration proxyConfig=new ProxyConfiguration();\n  proxyConfig.setAuthenticationEnabled(true);\n  proxyConfig.setServicePort(Optional.of(0));\n  proxyConfig.setWebServicePort(Optional.of(0));\n  proxyConfig.setBrokerServiceURL(pulsar.getBrokerServiceUrl());\n  proxyConfig.setBrokerClientAuthenticationPlugin(BasicAuthentication.class.getName());\n  proxyConfig.setBrokerClientAuthenticationParameters(proxyAuthParams);\n  Set<String> providers=new HashSet<>();\n  providers.add(BasicAuthenticationProvider.class.getName());\n  proxyConfig.setAuthenticationProviders(providers);\n  proxyConfig.setForwardAuthorizationCredentials(true);\n  AuthenticationService authenticationService=new AuthenticationService(PulsarConfigurationLoader.convertFrom(proxyConfig));\n  @Cleanup ProxyService proxyService=new ProxyService(proxyConfig,authenticationService);\n  proxyService.start();\n  final String proxyServiceUrl=proxyService.getServiceUrl();\n  @Cleanup PulsarClient proxyClient=createPulsarClient(proxyServiceUrl,clientAuthParams,1);\n  proxyClient.newProducer(Schema.BYTES).topic(topicName).create();\n  Thread.sleep(4 * 1000);\n  proxyClient.newProducer(Schema.BYTES).topic(topicName).create();\n  Thread.sleep(3 * 1000);\n  proxyClient.newProducer(Schema.BYTES).topic(topicName).create();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 279,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 210,
        "startColumnNumber" : 4,
        "endLineNumber" : 210,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Sets.newHashSet(AuthAction.consume,AuthAction.produce)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.common.policies.data.AuthAction"
  }, {
    "nodeContext" : "AuthAction",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 210,
      "startColumnNumber" : 40,
      "endLineNumber" : 210,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 210,
        "startColumnNumber" : 40,
        "endLineNumber" : 210,
        "endColumnNumber" : 58
      },
      "nodeContext" : "AuthAction.produce",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 210,
        "startColumnNumber" : 4,
        "endLineNumber" : 210,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Sets.newHashSet(AuthAction.consume,AuthAction.produce)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 209,
        "startColumnNumber" : 2,
        "endLineNumber" : 210,
        "endColumnNumber" : 60
      },
      "nodeContext" : "admin.namespaces().grantPermissionOnNamespace(namespaceName,\"client\",Sets.newHashSet(AuthAction.consume,AuthAction.produce))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 209,
        "startColumnNumber" : 2,
        "endLineNumber" : 210,
        "endColumnNumber" : 61
      },
      "nodeContext" : "admin.namespaces().grantPermissionOnNamespace(namespaceName,\"client\",Sets.newHashSet(AuthAction.consume,AuthAction.produce));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2456,
        "startLineNumber" : 193,
        "startColumnNumber" : 44,
        "endLineNumber" : 244,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  log.info(\"-- Starting {} test --\",methodName);\n  updateAdminClient();\n  String namespaceName=\"my-property/my-ns\";\n  String topicName=\"persistent://my-property/my-ns/my-topic1\";\n  String subscriptionName=\"my-subscriber-name\";\n  String clientAuthParams=\"entityType:client,expiryTime:\" + (System.currentTimeMillis() + 6 * 1000);\n  String proxyAuthParams=\"entityType:proxy,expiryTime:\" + (System.currentTimeMillis() + 3 * 1000);\n  admin.namespaces().grantPermissionOnNamespace(namespaceName,\"proxy\",Sets.newHashSet(AuthAction.consume,AuthAction.produce));\n  admin.namespaces().grantPermissionOnNamespace(namespaceName,\"client\",Sets.newHashSet(AuthAction.consume,AuthAction.produce));\n  ProxyConfiguration proxyConfig=new ProxyConfiguration();\n  proxyConfig.setAuthenticationEnabled(true);\n  proxyConfig.setServicePort(Optional.of(0));\n  proxyConfig.setWebServicePort(Optional.of(0));\n  proxyConfig.setBrokerServiceURL(pulsar.getBrokerServiceUrl());\n  proxyConfig.setBrokerClientAuthenticationPlugin(BasicAuthentication.class.getName());\n  proxyConfig.setBrokerClientAuthenticationParameters(proxyAuthParams);\n  Set<String> providers=new HashSet<>();\n  providers.add(BasicAuthenticationProvider.class.getName());\n  proxyConfig.setAuthenticationProviders(providers);\n  proxyConfig.setForwardAuthorizationCredentials(true);\n  AuthenticationService authenticationService=new AuthenticationService(PulsarConfigurationLoader.convertFrom(proxyConfig));\n  @Cleanup ProxyService proxyService=new ProxyService(proxyConfig,authenticationService);\n  proxyService.start();\n  final String proxyServiceUrl=proxyService.getServiceUrl();\n  @Cleanup PulsarClient proxyClient=createPulsarClient(proxyServiceUrl,clientAuthParams,1);\n  proxyClient.newProducer(Schema.BYTES).topic(topicName).create();\n  Thread.sleep(4 * 1000);\n  proxyClient.newProducer(Schema.BYTES).topic(topicName).create();\n  Thread.sleep(3 * 1000);\n  proxyClient.newProducer(Schema.BYTES).topic(topicName).create();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 272,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2506,
        "startLineNumber" : 192,
        "startColumnNumber" : 1,
        "endLineNumber" : 244,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test void testAuthentication() throws Exception {\n  log.info(\"-- Starting {} test --\",methodName);\n  updateAdminClient();\n  String namespaceName=\"my-property/my-ns\";\n  String topicName=\"persistent://my-property/my-ns/my-topic1\";\n  String subscriptionName=\"my-subscriber-name\";\n  String clientAuthParams=\"entityType:client,expiryTime:\" + (System.currentTimeMillis() + 6 * 1000);\n  String proxyAuthParams=\"entityType:proxy,expiryTime:\" + (System.currentTimeMillis() + 3 * 1000);\n  admin.namespaces().grantPermissionOnNamespace(namespaceName,\"proxy\",Sets.newHashSet(AuthAction.consume,AuthAction.produce));\n  admin.namespaces().grantPermissionOnNamespace(namespaceName,\"client\",Sets.newHashSet(AuthAction.consume,AuthAction.produce));\n  ProxyConfiguration proxyConfig=new ProxyConfiguration();\n  proxyConfig.setAuthenticationEnabled(true);\n  proxyConfig.setServicePort(Optional.of(0));\n  proxyConfig.setWebServicePort(Optional.of(0));\n  proxyConfig.setBrokerServiceURL(pulsar.getBrokerServiceUrl());\n  proxyConfig.setBrokerClientAuthenticationPlugin(BasicAuthentication.class.getName());\n  proxyConfig.setBrokerClientAuthenticationParameters(proxyAuthParams);\n  Set<String> providers=new HashSet<>();\n  providers.add(BasicAuthenticationProvider.class.getName());\n  proxyConfig.setAuthenticationProviders(providers);\n  proxyConfig.setForwardAuthorizationCredentials(true);\n  AuthenticationService authenticationService=new AuthenticationService(PulsarConfigurationLoader.convertFrom(proxyConfig));\n  @Cleanup ProxyService proxyService=new ProxyService(proxyConfig,authenticationService);\n  proxyService.start();\n  final String proxyServiceUrl=proxyService.getServiceUrl();\n  @Cleanup PulsarClient proxyClient=createPulsarClient(proxyServiceUrl,clientAuthParams,1);\n  proxyClient.newProducer(Schema.BYTES).topic(topicName).create();\n  Thread.sleep(4 * 1000);\n  proxyClient.newProducer(Schema.BYTES).topic(topicName).create();\n  Thread.sleep(3 * 1000);\n  proxyClient.newProducer(Schema.BYTES).topic(topicName).create();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 279,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 210,
        "startColumnNumber" : 4,
        "endLineNumber" : 210,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Sets.newHashSet(AuthAction.consume,AuthAction.produce)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.common.policies.data.AuthAction"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 208,
    "startColumnNumber" : 20,
    "endLineNumber" : 208,
    "endColumnNumber" : 30
  }, {
    "charLength" : 10,
    "startLineNumber" : 208,
    "startColumnNumber" : 40,
    "endLineNumber" : 208,
    "endColumnNumber" : 50
  }, {
    "charLength" : 10,
    "startLineNumber" : 210,
    "startColumnNumber" : 20,
    "endLineNumber" : 210,
    "endColumnNumber" : 30
  }, {
    "charLength" : 10,
    "startLineNumber" : 210,
    "startColumnNumber" : 40,
    "endLineNumber" : 210,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 1
  } ]
}