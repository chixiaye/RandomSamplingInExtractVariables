{
  "id" : 455,
  "expression" : "Primitives.wrap(type.getJavaType())",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-spi/src/main/java/com/facebook/presto/spi/relation/ConstantExpression.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Primitives.wrap(type.getJavaType())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 44,
      "startColumnNumber" : 30,
      "endLineNumber" : 44,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 44,
        "startColumnNumber" : 30,
        "endLineNumber" : 44,
        "endColumnNumber" : 83
      },
      "nodeContext" : "Primitives.wrap(type.getJavaType()).isInstance(value)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 44,
        "startColumnNumber" : 29,
        "endLineNumber" : 44,
        "endColumnNumber" : 83
      },
      "nodeContext" : "!Primitives.wrap(type.getJavaType()).isInstance(value)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 83
      },
      "nodeContext" : "value != null && !Primitives.wrap(type.getJavaType()).isInstance(value)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 216,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (value != null && !Primitives.wrap(type.getJavaType()).isInstance(value)) {\n  throw new IllegalArgumentException(String.format(\"Object '%s' does not match type %s\",value,type.getJavaType()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 28,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 363,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(sourceLocation);\n  requireNonNull(type,\"type is null\");\n  if (value != null && !Primitives.wrap(type.getJavaType()).isInstance(value)) {\n    throw new IllegalArgumentException(String.format(\"Object '%s' does not match type %s\",value,type.getJavaType()));\n  }\n  this.value=value;\n  this.type=type;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 484,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public ConstantExpression(Optional<SourceLocation> sourceLocation,Object value,Type type){\n  super(sourceLocation);\n  requireNonNull(type,\"type is null\");\n  if (value != null && !Primitives.wrap(type.getJavaType()).isInstance(value)) {\n    throw new IllegalArgumentException(String.format(\"Object '%s' does not match type %s\",value,type.getJavaType()));\n  }\n  this.value=value;\n  this.type=type;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 66,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 83
      },
      "nodeContext" : "value != null && !Primitives.wrap(type.getJavaType()).isInstance(value)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "java.lang.Class<>"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 44,
    "startColumnNumber" : 30,
    "endLineNumber" : 44,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}