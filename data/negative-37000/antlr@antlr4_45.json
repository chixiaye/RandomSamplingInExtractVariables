{
  "id" : 45,
  "expression" : "Files",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/runtime-testsuite/test/org/antlr/v4/test/runtime/java/TestCharStreams.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Files",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 55,
      "startColumnNumber" : 2,
      "endLineNumber" : 55,
      "endColumnNumber" : 7
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 55,
        "startColumnNumber" : 2,
        "endLineNumber" : 55,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Files.write(p,\"hello\".getBytes(StandardCharsets.UTF_8))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 55,
        "startColumnNumber" : 2,
        "endLineNumber" : 55,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Files.write(p,\"hello\".getBytes(StandardCharsets.UTF_8));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 299,
        "startLineNumber" : 53,
        "startColumnNumber" : 63,
        "endLineNumber" : 61,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Path p=folder.newFile().toPath();\n  Files.write(p,\"hello\".getBytes(StandardCharsets.UTF_8));\n  CharStream s=CharStreams.fromPath(p);\n  assertEquals(5,s.size());\n  assertEquals(0,s.index());\n  assertEquals(\"hello\",s.toString());\n  assertEquals(p.toString(),s.getSourceName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 369,
        "startLineNumber" : 52,
        "startColumnNumber" : 1,
        "endLineNumber" : 61,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void fromBMPUTF8PathHasExpectedSize() throws Exception {\n  Path p=folder.newFile().toPath();\n  Files.write(p,\"hello\".getBytes(StandardCharsets.UTF_8));\n  CharStream s=CharStreams.fromPath(p);\n  assertEquals(5,s.size());\n  assertEquals(0,s.index());\n  assertEquals(\"hello\",s.toString());\n  assertEquals(p.toString(),s.getSourceName());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 55,
        "startColumnNumber" : 2,
        "endLineNumber" : 55,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Files.write(p,\"hello\".getBytes(StandardCharsets.UTF_8));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.nio.file.Files"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 55,
    "startColumnNumber" : 2,
    "endLineNumber" : 55,
    "endColumnNumber" : 7
  } ],
  "layoutRelationDataList" : [ ]
}