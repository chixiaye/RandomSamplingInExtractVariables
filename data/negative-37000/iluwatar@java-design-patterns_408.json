{
  "id" : 408,
  "expression" : "Optional.empty()",
  "projectName" : "iluwatar@java-design-patterns",
  "commitID" : "428efc7d53449a51d25dfda4141742629ecbb0b2",
  "filePath" : "/fluentinterface/src/main/java/com/iluwatar/fluentinterface/fluentiterable/simple/SimpleFluentIterable.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Optional.empty()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 83,
      "startColumnNumber" : 75,
      "endLineNumber" : 83,
      "endColumnNumber" : 91
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 83,
        "startColumnNumber" : 11,
        "endLineNumber" : 83,
        "endColumnNumber" : 91
      },
      "nodeContext" : "resultIterator.hasNext() ? Optional.of(resultIterator.next()) : Optional.empty()",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 92
      },
      "nodeContext" : "return resultIterator.hasNext() ? Optional.of(resultIterator.next()) : Optional.empty();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 81,
        "startColumnNumber" : 35,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  var resultIterator=first(1).iterator();\n  return resultIterator.hasNext() ? Optional.of(resultIterator.next()) : Optional.empty();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 348,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Can be used to collect objects from the Iterable. Is a terminating operation.\n * @return an option of the first object of the Iterable\n */\n@Override public final Optional<E> first(){\n  var resultIterator=first(1).iterator();\n  return resultIterator.hasNext() ? Optional.of(resultIterator.next()) : Optional.empty();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 37,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 92
      },
      "nodeContext" : "return resultIterator.hasNext() ? Optional.of(resultIterator.next()) : Optional.empty();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.util.Optional<E>"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 83,
    "startColumnNumber" : 75,
    "endLineNumber" : 83,
    "endColumnNumber" : 91
  } ],
  "layoutRelationDataList" : [ ]
}