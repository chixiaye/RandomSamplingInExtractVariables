{
  "id" : 311,
  "expression" : "Character.class",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-common/src/test/java/org/apache/pulsar/common/util/collections/FieldParserTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Character.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 71,
      "startColumnNumber" : 25,
      "endLineNumber" : 71,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 41
      },
      "nodeContext" : "convert(\"1\",Character.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 42
      },
      "nodeContext" : "convert(\"1\",Character.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 70,
        "startColumnNumber" : 12,
        "endLineNumber" : 73,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  convert(\"1\",Character.class);\n  fail(\"Should fail w/ UnsupportedOperationException\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 206,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  convert(\"1\",Character.class);\n  fail(\"Should fail w/ UnsupportedOperationException\");\n}\n catch (UnsupportedOperationException iae) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1195,
        "startLineNumber" : 48,
        "startColumnNumber" : 33,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertEquals(convert(\"2\",Integer.class),Integer.valueOf(2));\n  assertEquals(convert(\"2\",Double.class),Double.valueOf(2));\n  assertEquals(convert(\"2\",Long.class),Long.valueOf(2));\n  assertEquals(convert(\"true\",Boolean.class),Boolean.TRUE);\n  assertEquals(integerToString(1),String.valueOf(1));\n  assertEquals(stringToList(\"1,2,3\",Integer.class).get(2),Integer.valueOf(3));\n  assertTrue(stringToSet(\"1,2,3\",Integer.class).contains(3));\n  assertEquals(stringToBoolean(\"true\"),Boolean.TRUE);\n  assertEquals(stringToDouble(\"2.2\"),Double.valueOf(2.2));\n  assertEquals(stringToLong(\"2\"),Long.valueOf(2));\n  assertEquals(booleanToString(Boolean.TRUE),String.valueOf(true));\n  try {\n    convert(\"invalid\",Long.class);\n    fail(\"Should fail w/ conversion exception\");\n  }\n catch (  Exception e) {\n  }\n  try {\n    convert(\"1\",Character.class);\n    fail(\"Should fail w/ UnsupportedOperationException\");\n  }\n catch (  UnsupportedOperationException iae) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 169,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1295,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * test all conversion scenarios.\n */\n@Test public void testConversion(){\n  assertEquals(convert(\"2\",Integer.class),Integer.valueOf(2));\n  assertEquals(convert(\"2\",Double.class),Double.valueOf(2));\n  assertEquals(convert(\"2\",Long.class),Long.valueOf(2));\n  assertEquals(convert(\"true\",Boolean.class),Boolean.TRUE);\n  assertEquals(integerToString(1),String.valueOf(1));\n  assertEquals(stringToList(\"1,2,3\",Integer.class).get(2),Integer.valueOf(3));\n  assertTrue(stringToSet(\"1,2,3\",Integer.class).contains(3));\n  assertEquals(stringToBoolean(\"true\"),Boolean.TRUE);\n  assertEquals(stringToDouble(\"2.2\"),Double.valueOf(2.2));\n  assertEquals(stringToLong(\"2\"),Long.valueOf(2));\n  assertEquals(booleanToString(Boolean.TRUE),String.valueOf(true));\n  try {\n    convert(\"invalid\",Long.class);\n    fail(\"Should fail w/ conversion exception\");\n  }\n catch (  Exception e) {\n  }\n  try {\n    convert(\"1\",Character.class);\n    fail(\"Should fail w/ UnsupportedOperationException\");\n  }\n catch (  UnsupportedOperationException iae) {\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 42
      },
      "nodeContext" : "convert(\"1\",Character.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<java.lang.Character>"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 71,
    "startColumnNumber" : 25,
    "endLineNumber" : 71,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}