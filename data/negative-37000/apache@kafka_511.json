{
  "id" : 511,
  "expression" : "Utils",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/main/java/org/apache/kafka/streams/kstream/internals/WindowedStreamPartitioner.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Utils",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 49,
      "startColumnNumber" : 26,
      "endLineNumber" : 49,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 49,
        "startColumnNumber" : 26,
        "endLineNumber" : 49,
        "endColumnNumber" : 49
      },
      "nodeContext" : "Utils.murmur2(keyBytes)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 49,
        "startColumnNumber" : 15,
        "endLineNumber" : 49,
        "endColumnNumber" : 50
      },
      "nodeContext" : "toPositive(Utils.murmur2(keyBytes))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 49,
        "startColumnNumber" : 15,
        "endLineNumber" : 49,
        "endColumnNumber" : 66
      },
      "nodeContext" : "toPositive(Utils.murmur2(keyBytes)) % numPartitions",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 67
      },
      "nodeContext" : "return toPositive(Utils.murmur2(keyBytes)) % numPartitions;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 208,
        "startLineNumber" : 45,
        "startColumnNumber" : 120,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final byte[] keyBytes=serializer.serializeBaseKey(topic,windowedKey);\n  return toPositive(Utils.murmur2(keyBytes)) % numPartitions;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1040,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * WindowedStreamPartitioner determines the partition number for a record with the given windowed key and value and the current number of partitions. The partition number id determined by the original key of the windowed key using the same logic as DefaultPartitioner so that the topic is partitioned by the original key.\n * @param topic the topic name this record is sent to\n * @param windowedKey the key of the record\n * @param value the value of the record\n * @param numPartitions the total number of partitions\n * @return an integer between 0 and {@code numPartitions-1}, or  {@code null} if the default partitioning logic should be used\n */\n@Override public Integer partition(final String topic,final Windowed<K> windowedKey,final V value,final int numPartitions){\n  final byte[] keyBytes=serializer.serializeBaseKey(topic,windowedKey);\n  return toPositive(Utils.murmur2(keyBytes)) % numPartitions;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 52,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 67
      },
      "nodeContext" : "return toPositive(Utils.murmur2(keyBytes)) % numPartitions;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.kafka.common.utils.Utils"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 49,
    "startColumnNumber" : 26,
    "endLineNumber" : 49,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}