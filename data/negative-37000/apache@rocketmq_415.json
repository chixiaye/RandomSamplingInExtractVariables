{
  "id" : 415,
  "expression" : "delayLevel - 1",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/test/src/test/java/org/apache/rocketmq/test/delay/NormalMsgDelayIT.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "delayLevel - 1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 65,
      "startColumnNumber" : 48,
      "endLineNumber" : 65,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 65,
        "startColumnNumber" : 36,
        "endLineNumber" : 65,
        "endColumnNumber" : 63
      },
      "nodeContext" : "DELAY_LEVEL[delayLevel - 1]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 65,
        "startColumnNumber" : 36,
        "endLineNumber" : 65,
        "endColumnNumber" : 70
      },
      "nodeContext" : "DELAY_LEVEL[delayLevel - 1] * 1000",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 65,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 78
      },
      "nodeContext" : "VerifyUtils.verifyDelay(DELAY_LEVEL[delayLevel - 1] * 1000,((RMQDelayListner)consumer.getListener()).getMsgDelayTimes())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 201,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 79
      },
      "nodeContext" : "Assert.assertEquals(\"Timer is not correct\",true,VerifyUtils.verifyDelay(DELAY_LEVEL[delayLevel - 1] * 1000,((RMQDelayListner)consumer.getListener()).getMsgDelayTimes()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 80
      },
      "nodeContext" : "Assert.assertEquals(\"Timer is not correct\",true,VerifyUtils.verifyDelay(DELAY_LEVEL[delayLevel - 1] * 1000,((RMQDelayListner)consumer.getListener()).getMsgDelayTimes()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 749,
        "startLineNumber" : 54,
        "startColumnNumber" : 51,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Thread.sleep(3000);\n  int delayLevel=1;\n  List<Object> delayMsgs=MQMessageFactory.getDelayMsg(topic,delayLevel,msgSize);\n  producer.send(delayMsgs);\n  Assert.assertEquals(\"Not all sent succeeded\",msgSize,producer.getAllUndupMsgBody().size());\n  consumer.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  Assert.assertEquals(\"Not all are consumed\",0,VerifyUtils.verify(producer.getAllMsgBody(),consumer.getListener().getAllMsgBody()));\n  Assert.assertEquals(\"Timer is not correct\",true,VerifyUtils.verifyDelay(DELAY_LEVEL[delayLevel - 1] * 1000,((RMQDelayListner)consumer.getListener()).getMsgDelayTimes()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 806,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testDelayLevel1() throws Exception {\n  Thread.sleep(3000);\n  int delayLevel=1;\n  List<Object> delayMsgs=MQMessageFactory.getDelayMsg(topic,delayLevel,msgSize);\n  producer.send(delayMsgs);\n  Assert.assertEquals(\"Not all sent succeeded\",msgSize,producer.getAllUndupMsgBody().size());\n  consumer.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  Assert.assertEquals(\"Not all are consumed\",0,VerifyUtils.verify(producer.getAllMsgBody(),consumer.getListener().getAllMsgBody()));\n  Assert.assertEquals(\"Timer is not correct\",true,VerifyUtils.verifyDelay(DELAY_LEVEL[delayLevel - 1] * 1000,((RMQDelayListner)consumer.getListener()).getMsgDelayTimes()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 65,
        "startColumnNumber" : 36,
        "endLineNumber" : 65,
        "endColumnNumber" : 70
      },
      "nodeContext" : "DELAY_LEVEL[delayLevel - 1] * 1000",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 65,
    "startColumnNumber" : 48,
    "endLineNumber" : 65,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}