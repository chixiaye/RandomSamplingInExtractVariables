{
  "id" : 148,
  "expression" : "mapper.apply(value)",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/main/java/io/reactivex/internal/operators/single/SingleFlatMap.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mapper.apply(value)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 60,
      "startColumnNumber" : 20,
      "endLineNumber" : 60,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 60,
        "startColumnNumber" : 16,
        "endLineNumber" : 60,
        "endColumnNumber" : 39
      },
      "nodeContext" : "o=mapper.apply(value)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 60,
        "startColumnNumber" : 16,
        "endLineNumber" : 60,
        "endColumnNumber" : 40
      },
      "nodeContext" : "o=mapper.apply(value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 59,
        "startColumnNumber" : 16,
        "endLineNumber" : 61,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  o=mapper.apply(value);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 160,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 64,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  o=mapper.apply(value);\n}\n catch (Throwable e) {\n  actual.onError(e);\n  return;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1063,
        "startLineNumber" : 56,
        "startColumnNumber" : 39,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  SingleConsumable<? extends R> o;\n  try {\n    o=mapper.apply(value);\n  }\n catch (  Throwable e) {\n    actual.onError(e);\n    return;\n  }\n  if (o == null) {\n    actual.onError(new NullPointerException(\"The single returned by the mapper is null\"));\n    return;\n  }\n  if (sd.isDisposed()) {\n    return;\n  }\n  o.subscribe(new SingleSubscriber<R>(){\n    @Override public void onSubscribe(    Disposable d){\n      sd.replace(d);\n    }\n    @Override public void onSuccess(    R value){\n      actual.onSuccess(value);\n    }\n    @Override public void onError(    Throwable e){\n      actual.onError(e);\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1113,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void onSuccess(T value){\n  SingleConsumable<? extends R> o;\n  try {\n    o=mapper.apply(value);\n  }\n catch (  Throwable e) {\n    actual.onError(e);\n    return;\n  }\n  if (o == null) {\n    actual.onError(new NullPointerException(\"The single returned by the mapper is null\"));\n    return;\n  }\n  if (sd.isDisposed()) {\n    return;\n  }\n  o.subscribe(new SingleSubscriber<R>(){\n    @Override public void onSubscribe(    Disposable d){\n      sd.replace(d);\n    }\n    @Override public void onSuccess(    R value){\n      actual.onSuccess(value);\n    }\n    @Override public void onError(    Throwable e){\n      actual.onError(e);\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 60,
        "startColumnNumber" : 16,
        "endLineNumber" : 60,
        "endColumnNumber" : 40
      },
      "nodeContext" : "o=mapper.apply(value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 60,
    "startColumnNumber" : 20,
    "endLineNumber" : 60,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}