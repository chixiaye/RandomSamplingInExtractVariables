{
  "id" : 506,
  "expression" : "\"random\"",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-distsql/shardingsphere-readwrite-splitting-distsql-handler/src/test/java/org/apache/shardingsphere/readwritesplitting/distsql/handler/query/ReadwriteSplittingRuleQueryResultSetTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"random\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 60,
      "startColumnNumber" : 35,
      "endLineNumber" : 60,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 60,
        "startColumnNumber" : 19,
        "endLineNumber" : 60,
        "endColumnNumber" : 44
      },
      "nodeContext" : "actual.contains(\"random\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 45
      },
      "nodeContext" : "assertTrue(actual.contains(\"random\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertTrue(actual.contains(\"random\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1014,
        "startLineNumber" : 47,
        "startColumnNumber" : 35,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ShardingSphereMetaData metaData=mock(ShardingSphereMetaData.class,RETURNS_DEEP_STUBS);\n  ExportableRule exportableRule=mock(ExportableRule.class);\n  when(metaData.getRuleMetaData().getRules()).thenReturn(Arrays.asList(exportableRule));\n  when(exportableRule.export()).thenReturn(Collections.emptyMap());\n  when(metaData.getRuleMetaData().getConfigurations()).thenReturn(Collections.singleton(createRuleConfiguration()));\n  ReadwriteSplittingRuleQueryResultSet resultSet=new ReadwriteSplittingRuleQueryResultSet();\n  resultSet.init(metaData,mock(ShowReadwriteSplittingRulesStatement.class));\n  Collection<Object> actual=resultSet.getRowData();\n  assertThat(actual.size(),is(6));\n  assertTrue(actual.contains(\"pr_ds\"));\n  assertTrue(actual.contains(\"ds_primary\"));\n  assertTrue(actual.contains(\"ds_slave_0,ds_slave_1\"));\n  assertTrue(actual.contains(\"random\"));\n  assertTrue(actual.contains(\"read_weight=2:1\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1055,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void assertGetRowData(){\n  ShardingSphereMetaData metaData=mock(ShardingSphereMetaData.class,RETURNS_DEEP_STUBS);\n  ExportableRule exportableRule=mock(ExportableRule.class);\n  when(metaData.getRuleMetaData().getRules()).thenReturn(Arrays.asList(exportableRule));\n  when(exportableRule.export()).thenReturn(Collections.emptyMap());\n  when(metaData.getRuleMetaData().getConfigurations()).thenReturn(Collections.singleton(createRuleConfiguration()));\n  ReadwriteSplittingRuleQueryResultSet resultSet=new ReadwriteSplittingRuleQueryResultSet();\n  resultSet.init(metaData,mock(ShowReadwriteSplittingRulesStatement.class));\n  Collection<Object> actual=resultSet.getRowData();\n  assertThat(actual.size(),is(6));\n  assertTrue(actual.contains(\"pr_ds\"));\n  assertTrue(actual.contains(\"ds_primary\"));\n  assertTrue(actual.contains(\"ds_slave_0,ds_slave_1\"));\n  assertTrue(actual.contains(\"random\"));\n  assertTrue(actual.contains(\"read_weight=2:1\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 141,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertTrue(actual.contains(\"random\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 60,
    "startColumnNumber" : 35,
    "endLineNumber" : 60,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}