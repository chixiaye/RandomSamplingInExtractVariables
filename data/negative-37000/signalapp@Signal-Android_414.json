{
  "id" : 414,
  "expression" : "\"Failed to extract frame for URI: \"",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/app/src/main/java/org/thoughtcrime/securesms/util/MediaUtil.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Failed to extract frame for URI: \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 399,
      "startColumnNumber" : 19,
      "endLineNumber" : 399,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 399,
        "startColumnNumber" : 19,
        "endLineNumber" : 399,
        "endColumnNumber" : 60
      },
      "nodeContext" : "\"Failed to extract frame for URI: \" + uri",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 399,
        "startColumnNumber" : 8,
        "endLineNumber" : 399,
        "endColumnNumber" : 64
      },
      "nodeContext" : "Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 399,
        "startColumnNumber" : 8,
        "endLineNumber" : 399,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 398,
        "startColumnNumber" : 30,
        "endLineNumber" : 400,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 398,
        "startColumnNumber" : 8,
        "endLineNumber" : 400,
        "endColumnNumber" : 7
      },
      "nodeContext" : "catch (IOException e) {\n  Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 250,
        "startLineNumber" : 395,
        "startColumnNumber" : 6,
        "endLineNumber" : 400,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  MediaDataSource source=BlobProvider.getInstance().getMediaDataSource(context,uri);\n  return extractFrame(source,timeUs);\n}\n catch (IOException e) {\n  Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 264,
        "startLineNumber" : 394,
        "startColumnNumber" : 4,
        "endLineNumber" : 401,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    MediaDataSource source=BlobProvider.getInstance().getMediaDataSource(context,uri);\n    return extractFrame(source,timeUs);\n  }\n catch (  IOException e) {\n    Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 984,
        "startLineNumber" : 391,
        "startColumnNumber" : 11,
        "endLineNumber" : 412,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (Build.VERSION.SDK_INT >= 23 && BlobProvider.isAuthority(uri) && MediaUtil.isVideo(BlobProvider.getMimeType(uri))) {\n  try {\n    MediaDataSource source=BlobProvider.getInstance().getMediaDataSource(context,uri);\n    return extractFrame(source,timeUs);\n  }\n catch (  IOException e) {\n    Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n  }\n}\n else if (Build.VERSION.SDK_INT >= 23 && PartAuthority.isAttachmentUri(uri) && MediaUtil.isVideoType(PartAuthority.getAttachmentContentType(context,uri))) {\n  try {\n    AttachmentId attachmentId=PartAuthority.requireAttachmentId(uri);\n    MediaDataSource source=DatabaseFactory.getAttachmentDatabase(context).mediaDataSourceFor(attachmentId);\n    return extractFrame(source,timeUs);\n  }\n catch (  IOException e) {\n    Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 122,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1308,
        "startLineNumber" : 387,
        "startColumnNumber" : 11,
        "endLineNumber" : 412,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (uri.toString().startsWith(\"file://\") && MediaUtil.isVideo(URLConnection.guessContentTypeFromName(uri.toString()))) {\n  return ThumbnailUtils.createVideoThumbnail(uri.toString().replace(\"file://\",\"\"),MediaStore.Video.Thumbnails.MINI_KIND);\n}\n else if (Build.VERSION.SDK_INT >= 23 && BlobProvider.isAuthority(uri) && MediaUtil.isVideo(BlobProvider.getMimeType(uri))) {\n  try {\n    MediaDataSource source=BlobProvider.getInstance().getMediaDataSource(context,uri);\n    return extractFrame(source,timeUs);\n  }\n catch (  IOException e) {\n    Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n  }\n}\n else if (Build.VERSION.SDK_INT >= 23 && PartAuthority.isAttachmentUri(uri) && MediaUtil.isVideoType(PartAuthority.getAttachmentContentType(context,uri))) {\n  try {\n    AttachmentId attachmentId=PartAuthority.requireAttachmentId(uri);\n    MediaDataSource source=DatabaseFactory.getAttachmentDatabase(context).mediaDataSourceFor(attachmentId);\n    return extractFrame(source,timeUs);\n  }\n catch (  IOException e) {\n    Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 158,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1774,
        "startLineNumber" : 380,
        "startColumnNumber" : 11,
        "endLineNumber" : 412,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (uri.toString().startsWith(MediaStore.Video.Media.EXTERNAL_CONTENT_URI.toString())) {\n  long videoId=Long.parseLong(uri.getLastPathSegment());\n  return MediaStore.Video.Thumbnails.getThumbnail(context.getContentResolver(),videoId,MediaStore.Images.Thumbnails.MINI_KIND,null);\n}\n else if (uri.toString().startsWith(\"file://\") && MediaUtil.isVideo(URLConnection.guessContentTypeFromName(uri.toString()))) {\n  return ThumbnailUtils.createVideoThumbnail(uri.toString().replace(\"file://\",\"\"),MediaStore.Video.Thumbnails.MINI_KIND);\n}\n else if (Build.VERSION.SDK_INT >= 23 && BlobProvider.isAuthority(uri) && MediaUtil.isVideo(BlobProvider.getMimeType(uri))) {\n  try {\n    MediaDataSource source=BlobProvider.getInstance().getMediaDataSource(context,uri);\n    return extractFrame(source,timeUs);\n  }\n catch (  IOException e) {\n    Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n  }\n}\n else if (Build.VERSION.SDK_INT >= 23 && PartAuthority.isAttachmentUri(uri) && MediaUtil.isVideoType(PartAuthority.getAttachmentContentType(context,uri))) {\n  try {\n    AttachmentId attachmentId=PartAuthority.requireAttachmentId(uri);\n    MediaDataSource source=DatabaseFactory.getAttachmentDatabase(context).mediaDataSourceFor(attachmentId);\n    return extractFrame(source,timeUs);\n  }\n catch (  IOException e) {\n    Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 204,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2239,
        "startLineNumber" : 373,
        "startColumnNumber" : 11,
        "endLineNumber" : 412,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (\"com.android.providers.media.documents\".equals(uri.getAuthority())) {\n  long videoId=Long.parseLong(uri.getLastPathSegment().split(\":\")[1]);\n  return MediaStore.Video.Thumbnails.getThumbnail(context.getContentResolver(),videoId,MediaStore.Images.Thumbnails.MINI_KIND,null);\n}\n else if (uri.toString().startsWith(MediaStore.Video.Media.EXTERNAL_CONTENT_URI.toString())) {\n  long videoId=Long.parseLong(uri.getLastPathSegment());\n  return MediaStore.Video.Thumbnails.getThumbnail(context.getContentResolver(),videoId,MediaStore.Images.Thumbnails.MINI_KIND,null);\n}\n else if (uri.toString().startsWith(\"file://\") && MediaUtil.isVideo(URLConnection.guessContentTypeFromName(uri.toString()))) {\n  return ThumbnailUtils.createVideoThumbnail(uri.toString().replace(\"file://\",\"\"),MediaStore.Video.Thumbnails.MINI_KIND);\n}\n else if (Build.VERSION.SDK_INT >= 23 && BlobProvider.isAuthority(uri) && MediaUtil.isVideo(BlobProvider.getMimeType(uri))) {\n  try {\n    MediaDataSource source=BlobProvider.getInstance().getMediaDataSource(context,uri);\n    return extractFrame(source,timeUs);\n  }\n catch (  IOException e) {\n    Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n  }\n}\n else if (Build.VERSION.SDK_INT >= 23 && PartAuthority.isAttachmentUri(uri) && MediaUtil.isVideoType(PartAuthority.getAttachmentContentType(context,uri))) {\n  try {\n    AttachmentId attachmentId=PartAuthority.requireAttachmentId(uri);\n    MediaDataSource source=DatabaseFactory.getAttachmentDatabase(context).mediaDataSourceFor(attachmentId);\n    return extractFrame(source,timeUs);\n  }\n catch (  IOException e) {\n    Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 247,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2288,
        "startLineNumber" : 371,
        "startColumnNumber" : 4,
        "endLineNumber" : 412,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (uri == null) {\n  return null;\n}\n else if (\"com.android.providers.media.documents\".equals(uri.getAuthority())) {\n  long videoId=Long.parseLong(uri.getLastPathSegment().split(\":\")[1]);\n  return MediaStore.Video.Thumbnails.getThumbnail(context.getContentResolver(),videoId,MediaStore.Images.Thumbnails.MINI_KIND,null);\n}\n else if (uri.toString().startsWith(MediaStore.Video.Media.EXTERNAL_CONTENT_URI.toString())) {\n  long videoId=Long.parseLong(uri.getLastPathSegment());\n  return MediaStore.Video.Thumbnails.getThumbnail(context.getContentResolver(),videoId,MediaStore.Images.Thumbnails.MINI_KIND,null);\n}\n else if (uri.toString().startsWith(\"file://\") && MediaUtil.isVideo(URLConnection.guessContentTypeFromName(uri.toString()))) {\n  return ThumbnailUtils.createVideoThumbnail(uri.toString().replace(\"file://\",\"\"),MediaStore.Video.Thumbnails.MINI_KIND);\n}\n else if (Build.VERSION.SDK_INT >= 23 && BlobProvider.isAuthority(uri) && MediaUtil.isVideo(BlobProvider.getMimeType(uri))) {\n  try {\n    MediaDataSource source=BlobProvider.getInstance().getMediaDataSource(context,uri);\n    return extractFrame(source,timeUs);\n  }\n catch (  IOException e) {\n    Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n  }\n}\n else if (Build.VERSION.SDK_INT >= 23 && PartAuthority.isAttachmentUri(uri) && MediaUtil.isVideoType(PartAuthority.getAttachmentContentType(context,uri))) {\n  try {\n    AttachmentId attachmentId=PartAuthority.requireAttachmentId(uri);\n    MediaDataSource source=DatabaseFactory.getAttachmentDatabase(context).mediaDataSourceFor(attachmentId);\n    return extractFrame(source,timeUs);\n  }\n catch (  IOException e) {\n    Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 254,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2316,
        "startLineNumber" : 370,
        "startColumnNumber" : 109,
        "endLineNumber" : 415,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (uri == null) {\n    return null;\n  }\n else   if (\"com.android.providers.media.documents\".equals(uri.getAuthority())) {\n    long videoId=Long.parseLong(uri.getLastPathSegment().split(\":\")[1]);\n    return MediaStore.Video.Thumbnails.getThumbnail(context.getContentResolver(),videoId,MediaStore.Images.Thumbnails.MINI_KIND,null);\n  }\n else   if (uri.toString().startsWith(MediaStore.Video.Media.EXTERNAL_CONTENT_URI.toString())) {\n    long videoId=Long.parseLong(uri.getLastPathSegment());\n    return MediaStore.Video.Thumbnails.getThumbnail(context.getContentResolver(),videoId,MediaStore.Images.Thumbnails.MINI_KIND,null);\n  }\n else   if (uri.toString().startsWith(\"file://\") && MediaUtil.isVideo(URLConnection.guessContentTypeFromName(uri.toString()))) {\n    return ThumbnailUtils.createVideoThumbnail(uri.toString().replace(\"file://\",\"\"),MediaStore.Video.Thumbnails.MINI_KIND);\n  }\n else   if (Build.VERSION.SDK_INT >= 23 && BlobProvider.isAuthority(uri) && MediaUtil.isVideo(BlobProvider.getMimeType(uri))) {\n    try {\n      MediaDataSource source=BlobProvider.getInstance().getMediaDataSource(context,uri);\n      return extractFrame(source,timeUs);\n    }\n catch (    IOException e) {\n      Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n    }\n  }\n else   if (Build.VERSION.SDK_INT >= 23 && PartAuthority.isAttachmentUri(uri) && MediaUtil.isVideoType(PartAuthority.getAttachmentContentType(context,uri))) {\n    try {\n      AttachmentId attachmentId=PartAuthority.requireAttachmentId(uri);\n      MediaDataSource source=DatabaseFactory.getAttachmentDatabase(context).mediaDataSourceFor(attachmentId);\n      return extractFrame(source,timeUs);\n    }\n catch (    IOException e) {\n      Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 257,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2439,
        "startLineNumber" : 369,
        "startColumnNumber" : 2,
        "endLineNumber" : 415,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@WorkerThread public static @Nullable Bitmap getVideoThumbnail(@NonNull Context context,@Nullable Uri uri,long timeUs){\n  if (uri == null) {\n    return null;\n  }\n else   if (\"com.android.providers.media.documents\".equals(uri.getAuthority())) {\n    long videoId=Long.parseLong(uri.getLastPathSegment().split(\":\")[1]);\n    return MediaStore.Video.Thumbnails.getThumbnail(context.getContentResolver(),videoId,MediaStore.Images.Thumbnails.MINI_KIND,null);\n  }\n else   if (uri.toString().startsWith(MediaStore.Video.Media.EXTERNAL_CONTENT_URI.toString())) {\n    long videoId=Long.parseLong(uri.getLastPathSegment());\n    return MediaStore.Video.Thumbnails.getThumbnail(context.getContentResolver(),videoId,MediaStore.Images.Thumbnails.MINI_KIND,null);\n  }\n else   if (uri.toString().startsWith(\"file://\") && MediaUtil.isVideo(URLConnection.guessContentTypeFromName(uri.toString()))) {\n    return ThumbnailUtils.createVideoThumbnail(uri.toString().replace(\"file://\",\"\"),MediaStore.Video.Thumbnails.MINI_KIND);\n  }\n else   if (Build.VERSION.SDK_INT >= 23 && BlobProvider.isAuthority(uri) && MediaUtil.isVideo(BlobProvider.getMimeType(uri))) {\n    try {\n      MediaDataSource source=BlobProvider.getInstance().getMediaDataSource(context,uri);\n      return extractFrame(source,timeUs);\n    }\n catch (    IOException e) {\n      Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n    }\n  }\n else   if (Build.VERSION.SDK_INT >= 23 && PartAuthority.isAttachmentUri(uri) && MediaUtil.isVideoType(PartAuthority.getAttachmentContentType(context,uri))) {\n    try {\n      AttachmentId attachmentId=PartAuthority.requireAttachmentId(uri);\n      MediaDataSource source=DatabaseFactory.getAttachmentDatabase(context).mediaDataSourceFor(attachmentId);\n      return extractFrame(source,timeUs);\n    }\n catch (    IOException e) {\n      Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 282,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 399,
        "startColumnNumber" : 8,
        "endLineNumber" : 399,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"Failed to extract frame for URI: \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 410,
      "startColumnNumber" : 19,
      "endLineNumber" : 410,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 410,
        "startColumnNumber" : 19,
        "endLineNumber" : 410,
        "endColumnNumber" : 60
      },
      "nodeContext" : "\"Failed to extract frame for URI: \" + uri",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 410,
        "startColumnNumber" : 8,
        "endLineNumber" : 410,
        "endColumnNumber" : 64
      },
      "nodeContext" : "Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 410,
        "startColumnNumber" : 8,
        "endLineNumber" : 410,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 409,
        "startColumnNumber" : 30,
        "endLineNumber" : 411,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 409,
        "startColumnNumber" : 8,
        "endLineNumber" : 411,
        "endColumnNumber" : 7
      },
      "nodeContext" : "catch (IOException e) {\n  Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 355,
        "startLineNumber" : 405,
        "startColumnNumber" : 6,
        "endLineNumber" : 411,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  AttachmentId attachmentId=PartAuthority.requireAttachmentId(uri);\n  MediaDataSource source=DatabaseFactory.getAttachmentDatabase(context).mediaDataSourceFor(attachmentId);\n  return extractFrame(source,timeUs);\n}\n catch (IOException e) {\n  Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 43,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 369,
        "startLineNumber" : 404,
        "startColumnNumber" : 4,
        "endLineNumber" : 412,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    AttachmentId attachmentId=PartAuthority.requireAttachmentId(uri);\n    MediaDataSource source=DatabaseFactory.getAttachmentDatabase(context).mediaDataSourceFor(attachmentId);\n    return extractFrame(source,timeUs);\n  }\n catch (  IOException e) {\n    Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 560,
        "startLineNumber" : 401,
        "startColumnNumber" : 11,
        "endLineNumber" : 412,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (Build.VERSION.SDK_INT >= 23 && PartAuthority.isAttachmentUri(uri) && MediaUtil.isVideoType(PartAuthority.getAttachmentContentType(context,uri))) {\n  try {\n    AttachmentId attachmentId=PartAuthority.requireAttachmentId(uri);\n    MediaDataSource source=DatabaseFactory.getAttachmentDatabase(context).mediaDataSourceFor(attachmentId);\n    return extractFrame(source,timeUs);\n  }\n catch (  IOException e) {\n    Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 66,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 984,
        "startLineNumber" : 391,
        "startColumnNumber" : 11,
        "endLineNumber" : 412,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (Build.VERSION.SDK_INT >= 23 && BlobProvider.isAuthority(uri) && MediaUtil.isVideo(BlobProvider.getMimeType(uri))) {\n  try {\n    MediaDataSource source=BlobProvider.getInstance().getMediaDataSource(context,uri);\n    return extractFrame(source,timeUs);\n  }\n catch (  IOException e) {\n    Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n  }\n}\n else if (Build.VERSION.SDK_INT >= 23 && PartAuthority.isAttachmentUri(uri) && MediaUtil.isVideoType(PartAuthority.getAttachmentContentType(context,uri))) {\n  try {\n    AttachmentId attachmentId=PartAuthority.requireAttachmentId(uri);\n    MediaDataSource source=DatabaseFactory.getAttachmentDatabase(context).mediaDataSourceFor(attachmentId);\n    return extractFrame(source,timeUs);\n  }\n catch (  IOException e) {\n    Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 122,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1308,
        "startLineNumber" : 387,
        "startColumnNumber" : 11,
        "endLineNumber" : 412,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (uri.toString().startsWith(\"file://\") && MediaUtil.isVideo(URLConnection.guessContentTypeFromName(uri.toString()))) {\n  return ThumbnailUtils.createVideoThumbnail(uri.toString().replace(\"file://\",\"\"),MediaStore.Video.Thumbnails.MINI_KIND);\n}\n else if (Build.VERSION.SDK_INT >= 23 && BlobProvider.isAuthority(uri) && MediaUtil.isVideo(BlobProvider.getMimeType(uri))) {\n  try {\n    MediaDataSource source=BlobProvider.getInstance().getMediaDataSource(context,uri);\n    return extractFrame(source,timeUs);\n  }\n catch (  IOException e) {\n    Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n  }\n}\n else if (Build.VERSION.SDK_INT >= 23 && PartAuthority.isAttachmentUri(uri) && MediaUtil.isVideoType(PartAuthority.getAttachmentContentType(context,uri))) {\n  try {\n    AttachmentId attachmentId=PartAuthority.requireAttachmentId(uri);\n    MediaDataSource source=DatabaseFactory.getAttachmentDatabase(context).mediaDataSourceFor(attachmentId);\n    return extractFrame(source,timeUs);\n  }\n catch (  IOException e) {\n    Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 158,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1774,
        "startLineNumber" : 380,
        "startColumnNumber" : 11,
        "endLineNumber" : 412,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (uri.toString().startsWith(MediaStore.Video.Media.EXTERNAL_CONTENT_URI.toString())) {\n  long videoId=Long.parseLong(uri.getLastPathSegment());\n  return MediaStore.Video.Thumbnails.getThumbnail(context.getContentResolver(),videoId,MediaStore.Images.Thumbnails.MINI_KIND,null);\n}\n else if (uri.toString().startsWith(\"file://\") && MediaUtil.isVideo(URLConnection.guessContentTypeFromName(uri.toString()))) {\n  return ThumbnailUtils.createVideoThumbnail(uri.toString().replace(\"file://\",\"\"),MediaStore.Video.Thumbnails.MINI_KIND);\n}\n else if (Build.VERSION.SDK_INT >= 23 && BlobProvider.isAuthority(uri) && MediaUtil.isVideo(BlobProvider.getMimeType(uri))) {\n  try {\n    MediaDataSource source=BlobProvider.getInstance().getMediaDataSource(context,uri);\n    return extractFrame(source,timeUs);\n  }\n catch (  IOException e) {\n    Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n  }\n}\n else if (Build.VERSION.SDK_INT >= 23 && PartAuthority.isAttachmentUri(uri) && MediaUtil.isVideoType(PartAuthority.getAttachmentContentType(context,uri))) {\n  try {\n    AttachmentId attachmentId=PartAuthority.requireAttachmentId(uri);\n    MediaDataSource source=DatabaseFactory.getAttachmentDatabase(context).mediaDataSourceFor(attachmentId);\n    return extractFrame(source,timeUs);\n  }\n catch (  IOException e) {\n    Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 204,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2239,
        "startLineNumber" : 373,
        "startColumnNumber" : 11,
        "endLineNumber" : 412,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (\"com.android.providers.media.documents\".equals(uri.getAuthority())) {\n  long videoId=Long.parseLong(uri.getLastPathSegment().split(\":\")[1]);\n  return MediaStore.Video.Thumbnails.getThumbnail(context.getContentResolver(),videoId,MediaStore.Images.Thumbnails.MINI_KIND,null);\n}\n else if (uri.toString().startsWith(MediaStore.Video.Media.EXTERNAL_CONTENT_URI.toString())) {\n  long videoId=Long.parseLong(uri.getLastPathSegment());\n  return MediaStore.Video.Thumbnails.getThumbnail(context.getContentResolver(),videoId,MediaStore.Images.Thumbnails.MINI_KIND,null);\n}\n else if (uri.toString().startsWith(\"file://\") && MediaUtil.isVideo(URLConnection.guessContentTypeFromName(uri.toString()))) {\n  return ThumbnailUtils.createVideoThumbnail(uri.toString().replace(\"file://\",\"\"),MediaStore.Video.Thumbnails.MINI_KIND);\n}\n else if (Build.VERSION.SDK_INT >= 23 && BlobProvider.isAuthority(uri) && MediaUtil.isVideo(BlobProvider.getMimeType(uri))) {\n  try {\n    MediaDataSource source=BlobProvider.getInstance().getMediaDataSource(context,uri);\n    return extractFrame(source,timeUs);\n  }\n catch (  IOException e) {\n    Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n  }\n}\n else if (Build.VERSION.SDK_INT >= 23 && PartAuthority.isAttachmentUri(uri) && MediaUtil.isVideoType(PartAuthority.getAttachmentContentType(context,uri))) {\n  try {\n    AttachmentId attachmentId=PartAuthority.requireAttachmentId(uri);\n    MediaDataSource source=DatabaseFactory.getAttachmentDatabase(context).mediaDataSourceFor(attachmentId);\n    return extractFrame(source,timeUs);\n  }\n catch (  IOException e) {\n    Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 247,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2288,
        "startLineNumber" : 371,
        "startColumnNumber" : 4,
        "endLineNumber" : 412,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (uri == null) {\n  return null;\n}\n else if (\"com.android.providers.media.documents\".equals(uri.getAuthority())) {\n  long videoId=Long.parseLong(uri.getLastPathSegment().split(\":\")[1]);\n  return MediaStore.Video.Thumbnails.getThumbnail(context.getContentResolver(),videoId,MediaStore.Images.Thumbnails.MINI_KIND,null);\n}\n else if (uri.toString().startsWith(MediaStore.Video.Media.EXTERNAL_CONTENT_URI.toString())) {\n  long videoId=Long.parseLong(uri.getLastPathSegment());\n  return MediaStore.Video.Thumbnails.getThumbnail(context.getContentResolver(),videoId,MediaStore.Images.Thumbnails.MINI_KIND,null);\n}\n else if (uri.toString().startsWith(\"file://\") && MediaUtil.isVideo(URLConnection.guessContentTypeFromName(uri.toString()))) {\n  return ThumbnailUtils.createVideoThumbnail(uri.toString().replace(\"file://\",\"\"),MediaStore.Video.Thumbnails.MINI_KIND);\n}\n else if (Build.VERSION.SDK_INT >= 23 && BlobProvider.isAuthority(uri) && MediaUtil.isVideo(BlobProvider.getMimeType(uri))) {\n  try {\n    MediaDataSource source=BlobProvider.getInstance().getMediaDataSource(context,uri);\n    return extractFrame(source,timeUs);\n  }\n catch (  IOException e) {\n    Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n  }\n}\n else if (Build.VERSION.SDK_INT >= 23 && PartAuthority.isAttachmentUri(uri) && MediaUtil.isVideoType(PartAuthority.getAttachmentContentType(context,uri))) {\n  try {\n    AttachmentId attachmentId=PartAuthority.requireAttachmentId(uri);\n    MediaDataSource source=DatabaseFactory.getAttachmentDatabase(context).mediaDataSourceFor(attachmentId);\n    return extractFrame(source,timeUs);\n  }\n catch (  IOException e) {\n    Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 254,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2316,
        "startLineNumber" : 370,
        "startColumnNumber" : 109,
        "endLineNumber" : 415,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (uri == null) {\n    return null;\n  }\n else   if (\"com.android.providers.media.documents\".equals(uri.getAuthority())) {\n    long videoId=Long.parseLong(uri.getLastPathSegment().split(\":\")[1]);\n    return MediaStore.Video.Thumbnails.getThumbnail(context.getContentResolver(),videoId,MediaStore.Images.Thumbnails.MINI_KIND,null);\n  }\n else   if (uri.toString().startsWith(MediaStore.Video.Media.EXTERNAL_CONTENT_URI.toString())) {\n    long videoId=Long.parseLong(uri.getLastPathSegment());\n    return MediaStore.Video.Thumbnails.getThumbnail(context.getContentResolver(),videoId,MediaStore.Images.Thumbnails.MINI_KIND,null);\n  }\n else   if (uri.toString().startsWith(\"file://\") && MediaUtil.isVideo(URLConnection.guessContentTypeFromName(uri.toString()))) {\n    return ThumbnailUtils.createVideoThumbnail(uri.toString().replace(\"file://\",\"\"),MediaStore.Video.Thumbnails.MINI_KIND);\n  }\n else   if (Build.VERSION.SDK_INT >= 23 && BlobProvider.isAuthority(uri) && MediaUtil.isVideo(BlobProvider.getMimeType(uri))) {\n    try {\n      MediaDataSource source=BlobProvider.getInstance().getMediaDataSource(context,uri);\n      return extractFrame(source,timeUs);\n    }\n catch (    IOException e) {\n      Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n    }\n  }\n else   if (Build.VERSION.SDK_INT >= 23 && PartAuthority.isAttachmentUri(uri) && MediaUtil.isVideoType(PartAuthority.getAttachmentContentType(context,uri))) {\n    try {\n      AttachmentId attachmentId=PartAuthority.requireAttachmentId(uri);\n      MediaDataSource source=DatabaseFactory.getAttachmentDatabase(context).mediaDataSourceFor(attachmentId);\n      return extractFrame(source,timeUs);\n    }\n catch (    IOException e) {\n      Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 257,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2439,
        "startLineNumber" : 369,
        "startColumnNumber" : 2,
        "endLineNumber" : 415,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@WorkerThread public static @Nullable Bitmap getVideoThumbnail(@NonNull Context context,@Nullable Uri uri,long timeUs){\n  if (uri == null) {\n    return null;\n  }\n else   if (\"com.android.providers.media.documents\".equals(uri.getAuthority())) {\n    long videoId=Long.parseLong(uri.getLastPathSegment().split(\":\")[1]);\n    return MediaStore.Video.Thumbnails.getThumbnail(context.getContentResolver(),videoId,MediaStore.Images.Thumbnails.MINI_KIND,null);\n  }\n else   if (uri.toString().startsWith(MediaStore.Video.Media.EXTERNAL_CONTENT_URI.toString())) {\n    long videoId=Long.parseLong(uri.getLastPathSegment());\n    return MediaStore.Video.Thumbnails.getThumbnail(context.getContentResolver(),videoId,MediaStore.Images.Thumbnails.MINI_KIND,null);\n  }\n else   if (uri.toString().startsWith(\"file://\") && MediaUtil.isVideo(URLConnection.guessContentTypeFromName(uri.toString()))) {\n    return ThumbnailUtils.createVideoThumbnail(uri.toString().replace(\"file://\",\"\"),MediaStore.Video.Thumbnails.MINI_KIND);\n  }\n else   if (Build.VERSION.SDK_INT >= 23 && BlobProvider.isAuthority(uri) && MediaUtil.isVideo(BlobProvider.getMimeType(uri))) {\n    try {\n      MediaDataSource source=BlobProvider.getInstance().getMediaDataSource(context,uri);\n      return extractFrame(source,timeUs);\n    }\n catch (    IOException e) {\n      Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n    }\n  }\n else   if (Build.VERSION.SDK_INT >= 23 && PartAuthority.isAttachmentUri(uri) && MediaUtil.isVideoType(PartAuthority.getAttachmentContentType(context,uri))) {\n    try {\n      AttachmentId attachmentId=PartAuthority.requireAttachmentId(uri);\n      MediaDataSource source=DatabaseFactory.getAttachmentDatabase(context).mediaDataSourceFor(attachmentId);\n      return extractFrame(source,timeUs);\n    }\n catch (    IOException e) {\n      Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 282,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 410,
        "startColumnNumber" : 8,
        "endLineNumber" : 410,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Log.w(TAG,\"Failed to extract frame for URI: \" + uri,e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 399,
    "startColumnNumber" : 19,
    "endLineNumber" : 399,
    "endColumnNumber" : 54
  }, {
    "charLength" : 35,
    "startLineNumber" : 410,
    "startColumnNumber" : 19,
    "endLineNumber" : 410,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 8
  } ]
}