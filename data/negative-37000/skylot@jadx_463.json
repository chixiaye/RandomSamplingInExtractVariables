{
  "id" : 463,
  "expression" : "id",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/test/java/jadx/tests/integration/names/TestNameAssign2.java",
  "occurrences" : 12,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "id",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 31,
      "startColumnNumber" : 45,
      "endLineNumber" : 31,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 31,
        "startColumnNumber" : 45,
        "endLineNumber" : 31,
        "endColumnNumber" : 52
      },
      "nodeContext" : "id >= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 31,
        "startColumnNumber" : 3,
        "endLineNumber" : 34,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (int id=assignBlocks.nextSetBit(0); id >= 0; id=assignBlocks.nextSetBit(id + 1)) {\n  processed.set(id);\n  workList.add(blocks.get(id));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 34,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 903,
        "startLineNumber" : 23,
        "startColumnNumber" : 75,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<BlockNode> blocks=mth.getBasicBlocks();\n  int blocksCount=blocks.size();\n  BitSet hasPhi=new BitSet(blocksCount);\n  BitSet processed=new BitSet(blocksCount);\n  Deque<BlockNode> workList=new LinkedList<>();\n  BitSet assignBlocks=la.getAssignBlocks(regNum);\n  for (int id=assignBlocks.nextSetBit(0); id >= 0; id=assignBlocks.nextSetBit(id + 1)) {\n    processed.set(id);\n    workList.add(blocks.get(id));\n  }\n  while (!workList.isEmpty()) {\n    BlockNode block=workList.pop();\n    BitSet domFrontier=block.getDomFrontier();\n    for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n      if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n        BlockNode df=blocks.get(id);\n        addPhi(df,regNum);\n        hasPhi.set(id);\n        if (!processed.get(id)) {\n          processed.set(id);\n          workList.add(df);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 184,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 976,
        "startLineNumber" : 23,
        "startColumnNumber" : 2,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void test(MethodNode mth,int regNum,LiveVarAnalysis la){\n  List<BlockNode> blocks=mth.getBasicBlocks();\n  int blocksCount=blocks.size();\n  BitSet hasPhi=new BitSet(blocksCount);\n  BitSet processed=new BitSet(blocksCount);\n  Deque<BlockNode> workList=new LinkedList<>();\n  BitSet assignBlocks=la.getAssignBlocks(regNum);\n  for (int id=assignBlocks.nextSetBit(0); id >= 0; id=assignBlocks.nextSetBit(id + 1)) {\n    processed.set(id);\n    workList.add(blocks.get(id));\n  }\n  while (!workList.isEmpty()) {\n    BlockNode block=workList.pop();\n    BitSet domFrontier=block.getDomFrontier();\n    for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n      if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n        BlockNode df=blocks.get(id);\n        addPhi(df,regNum);\n        hasPhi.set(id);\n        if (!processed.get(id)) {\n          processed.set(id);\n          workList.add(df);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 200,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 31,
        "startColumnNumber" : 45,
        "endLineNumber" : 31,
        "endColumnNumber" : 52
      },
      "nodeContext" : "id >= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "id",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 31,
      "startColumnNumber" : 83,
      "endLineNumber" : 31,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 31,
        "startColumnNumber" : 83,
        "endLineNumber" : 31,
        "endColumnNumber" : 89
      },
      "nodeContext" : "id + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 31,
        "startColumnNumber" : 59,
        "endLineNumber" : 31,
        "endColumnNumber" : 90
      },
      "nodeContext" : "assignBlocks.nextSetBit(id + 1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,updaters]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 31,
        "startColumnNumber" : 54,
        "endLineNumber" : 31,
        "endColumnNumber" : 90
      },
      "nodeContext" : "id=assignBlocks.nextSetBit(id + 1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 31,
        "startColumnNumber" : 3,
        "endLineNumber" : 34,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (int id=assignBlocks.nextSetBit(0); id >= 0; id=assignBlocks.nextSetBit(id + 1)) {\n  processed.set(id);\n  workList.add(blocks.get(id));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 34,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 903,
        "startLineNumber" : 23,
        "startColumnNumber" : 75,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<BlockNode> blocks=mth.getBasicBlocks();\n  int blocksCount=blocks.size();\n  BitSet hasPhi=new BitSet(blocksCount);\n  BitSet processed=new BitSet(blocksCount);\n  Deque<BlockNode> workList=new LinkedList<>();\n  BitSet assignBlocks=la.getAssignBlocks(regNum);\n  for (int id=assignBlocks.nextSetBit(0); id >= 0; id=assignBlocks.nextSetBit(id + 1)) {\n    processed.set(id);\n    workList.add(blocks.get(id));\n  }\n  while (!workList.isEmpty()) {\n    BlockNode block=workList.pop();\n    BitSet domFrontier=block.getDomFrontier();\n    for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n      if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n        BlockNode df=blocks.get(id);\n        addPhi(df,regNum);\n        hasPhi.set(id);\n        if (!processed.get(id)) {\n          processed.set(id);\n          workList.add(df);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 184,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 976,
        "startLineNumber" : 23,
        "startColumnNumber" : 2,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void test(MethodNode mth,int regNum,LiveVarAnalysis la){\n  List<BlockNode> blocks=mth.getBasicBlocks();\n  int blocksCount=blocks.size();\n  BitSet hasPhi=new BitSet(blocksCount);\n  BitSet processed=new BitSet(blocksCount);\n  Deque<BlockNode> workList=new LinkedList<>();\n  BitSet assignBlocks=la.getAssignBlocks(regNum);\n  for (int id=assignBlocks.nextSetBit(0); id >= 0; id=assignBlocks.nextSetBit(id + 1)) {\n    processed.set(id);\n    workList.add(blocks.get(id));\n  }\n  while (!workList.isEmpty()) {\n    BlockNode block=workList.pop();\n    BitSet domFrontier=block.getDomFrontier();\n    for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n      if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n        BlockNode df=blocks.get(id);\n        addPhi(df,regNum);\n        hasPhi.set(id);\n        if (!processed.get(id)) {\n          processed.set(id);\n          workList.add(df);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 200,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,updaters]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 31,
        "startColumnNumber" : 54,
        "endLineNumber" : 31,
        "endColumnNumber" : 90
      },
      "nodeContext" : "id=assignBlocks.nextSetBit(id + 1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "id",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 32,
      "startColumnNumber" : 18,
      "endLineNumber" : 32,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 32,
        "endColumnNumber" : 21
      },
      "nodeContext" : "processed.set(id)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 32,
        "endColumnNumber" : 22
      },
      "nodeContext" : "processed.set(id);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 31,
        "startColumnNumber" : 92,
        "endLineNumber" : 34,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  processed.set(id);\n  workList.add(blocks.get(id));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 31,
        "startColumnNumber" : 3,
        "endLineNumber" : 34,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (int id=assignBlocks.nextSetBit(0); id >= 0; id=assignBlocks.nextSetBit(id + 1)) {\n  processed.set(id);\n  workList.add(blocks.get(id));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 34,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 903,
        "startLineNumber" : 23,
        "startColumnNumber" : 75,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<BlockNode> blocks=mth.getBasicBlocks();\n  int blocksCount=blocks.size();\n  BitSet hasPhi=new BitSet(blocksCount);\n  BitSet processed=new BitSet(blocksCount);\n  Deque<BlockNode> workList=new LinkedList<>();\n  BitSet assignBlocks=la.getAssignBlocks(regNum);\n  for (int id=assignBlocks.nextSetBit(0); id >= 0; id=assignBlocks.nextSetBit(id + 1)) {\n    processed.set(id);\n    workList.add(blocks.get(id));\n  }\n  while (!workList.isEmpty()) {\n    BlockNode block=workList.pop();\n    BitSet domFrontier=block.getDomFrontier();\n    for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n      if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n        BlockNode df=blocks.get(id);\n        addPhi(df,regNum);\n        hasPhi.set(id);\n        if (!processed.get(id)) {\n          processed.set(id);\n          workList.add(df);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 184,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 976,
        "startLineNumber" : 23,
        "startColumnNumber" : 2,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void test(MethodNode mth,int regNum,LiveVarAnalysis la){\n  List<BlockNode> blocks=mth.getBasicBlocks();\n  int blocksCount=blocks.size();\n  BitSet hasPhi=new BitSet(blocksCount);\n  BitSet processed=new BitSet(blocksCount);\n  Deque<BlockNode> workList=new LinkedList<>();\n  BitSet assignBlocks=la.getAssignBlocks(regNum);\n  for (int id=assignBlocks.nextSetBit(0); id >= 0; id=assignBlocks.nextSetBit(id + 1)) {\n    processed.set(id);\n    workList.add(blocks.get(id));\n  }\n  while (!workList.isEmpty()) {\n    BlockNode block=workList.pop();\n    BitSet domFrontier=block.getDomFrontier();\n    for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n      if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n        BlockNode df=blocks.get(id);\n        addPhi(df,regNum);\n        hasPhi.set(id);\n        if (!processed.get(id)) {\n          processed.set(id);\n          workList.add(df);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 200,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 32,
        "endColumnNumber" : 22
      },
      "nodeContext" : "processed.set(id);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "id",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 33,
      "startColumnNumber" : 28,
      "endLineNumber" : 33,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 33,
        "startColumnNumber" : 17,
        "endLineNumber" : 33,
        "endColumnNumber" : 31
      },
      "nodeContext" : "blocks.get(id)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 32
      },
      "nodeContext" : "workList.add(blocks.get(id))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 33
      },
      "nodeContext" : "workList.add(blocks.get(id));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 31,
        "startColumnNumber" : 92,
        "endLineNumber" : 34,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  processed.set(id);\n  workList.add(blocks.get(id));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 31,
        "startColumnNumber" : 3,
        "endLineNumber" : 34,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (int id=assignBlocks.nextSetBit(0); id >= 0; id=assignBlocks.nextSetBit(id + 1)) {\n  processed.set(id);\n  workList.add(blocks.get(id));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 34,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 903,
        "startLineNumber" : 23,
        "startColumnNumber" : 75,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<BlockNode> blocks=mth.getBasicBlocks();\n  int blocksCount=blocks.size();\n  BitSet hasPhi=new BitSet(blocksCount);\n  BitSet processed=new BitSet(blocksCount);\n  Deque<BlockNode> workList=new LinkedList<>();\n  BitSet assignBlocks=la.getAssignBlocks(regNum);\n  for (int id=assignBlocks.nextSetBit(0); id >= 0; id=assignBlocks.nextSetBit(id + 1)) {\n    processed.set(id);\n    workList.add(blocks.get(id));\n  }\n  while (!workList.isEmpty()) {\n    BlockNode block=workList.pop();\n    BitSet domFrontier=block.getDomFrontier();\n    for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n      if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n        BlockNode df=blocks.get(id);\n        addPhi(df,regNum);\n        hasPhi.set(id);\n        if (!processed.get(id)) {\n          processed.set(id);\n          workList.add(df);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 184,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 976,
        "startLineNumber" : 23,
        "startColumnNumber" : 2,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void test(MethodNode mth,int regNum,LiveVarAnalysis la){\n  List<BlockNode> blocks=mth.getBasicBlocks();\n  int blocksCount=blocks.size();\n  BitSet hasPhi=new BitSet(blocksCount);\n  BitSet processed=new BitSet(blocksCount);\n  Deque<BlockNode> workList=new LinkedList<>();\n  BitSet assignBlocks=la.getAssignBlocks(regNum);\n  for (int id=assignBlocks.nextSetBit(0); id >= 0; id=assignBlocks.nextSetBit(id + 1)) {\n    processed.set(id);\n    workList.add(blocks.get(id));\n  }\n  while (!workList.isEmpty()) {\n    BlockNode block=workList.pop();\n    BitSet domFrontier=block.getDomFrontier();\n    for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n      if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n        BlockNode df=blocks.get(id);\n        addPhi(df,regNum);\n        hasPhi.set(id);\n        if (!processed.get(id)) {\n          processed.set(id);\n          workList.add(df);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 200,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 33
      },
      "nodeContext" : "workList.add(blocks.get(id));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "id",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 38,
      "startColumnNumber" : 45,
      "endLineNumber" : 38,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 38,
        "startColumnNumber" : 45,
        "endLineNumber" : 38,
        "endColumnNumber" : 52
      },
      "nodeContext" : "id >= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 330,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n  if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n    BlockNode df=blocks.get(id);\n    addPhi(df,regNum);\n    hasPhi.set(id);\n    if (!processed.get(id)) {\n      processed.set(id);\n      workList.add(df);\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 70,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 35,
        "startColumnNumber" : 31,
        "endLineNumber" : 49,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  BlockNode block=workList.pop();\n  BitSet domFrontier=block.getDomFrontier();\n  for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n    if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n      BlockNode df=blocks.get(id);\n      addPhi(df,regNum);\n      hasPhi.set(id);\n      if (!processed.get(id)) {\n        processed.set(id);\n        workList.add(df);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 456,
        "startLineNumber" : 35,
        "startColumnNumber" : 3,
        "endLineNumber" : 49,
        "endColumnNumber" : 4
      },
      "nodeContext" : "while (!workList.isEmpty()) {\n  BlockNode block=workList.pop();\n  BitSet domFrontier=block.getDomFrontier();\n  for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n    if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n      BlockNode df=blocks.get(id);\n      addPhi(df,regNum);\n      hasPhi.set(id);\n      if (!processed.get(id)) {\n        processed.set(id);\n        workList.add(df);\n      }\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 92,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 903,
        "startLineNumber" : 23,
        "startColumnNumber" : 75,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<BlockNode> blocks=mth.getBasicBlocks();\n  int blocksCount=blocks.size();\n  BitSet hasPhi=new BitSet(blocksCount);\n  BitSet processed=new BitSet(blocksCount);\n  Deque<BlockNode> workList=new LinkedList<>();\n  BitSet assignBlocks=la.getAssignBlocks(regNum);\n  for (int id=assignBlocks.nextSetBit(0); id >= 0; id=assignBlocks.nextSetBit(id + 1)) {\n    processed.set(id);\n    workList.add(blocks.get(id));\n  }\n  while (!workList.isEmpty()) {\n    BlockNode block=workList.pop();\n    BitSet domFrontier=block.getDomFrontier();\n    for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n      if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n        BlockNode df=blocks.get(id);\n        addPhi(df,regNum);\n        hasPhi.set(id);\n        if (!processed.get(id)) {\n          processed.set(id);\n          workList.add(df);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 184,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 976,
        "startLineNumber" : 23,
        "startColumnNumber" : 2,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void test(MethodNode mth,int regNum,LiveVarAnalysis la){\n  List<BlockNode> blocks=mth.getBasicBlocks();\n  int blocksCount=blocks.size();\n  BitSet hasPhi=new BitSet(blocksCount);\n  BitSet processed=new BitSet(blocksCount);\n  Deque<BlockNode> workList=new LinkedList<>();\n  BitSet assignBlocks=la.getAssignBlocks(regNum);\n  for (int id=assignBlocks.nextSetBit(0); id >= 0; id=assignBlocks.nextSetBit(id + 1)) {\n    processed.set(id);\n    workList.add(blocks.get(id));\n  }\n  while (!workList.isEmpty()) {\n    BlockNode block=workList.pop();\n    BitSet domFrontier=block.getDomFrontier();\n    for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n      if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n        BlockNode df=blocks.get(id);\n        addPhi(df,regNum);\n        hasPhi.set(id);\n        if (!processed.get(id)) {\n          processed.set(id);\n          workList.add(df);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 200,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 38,
        "startColumnNumber" : 45,
        "endLineNumber" : 38,
        "endColumnNumber" : 52
      },
      "nodeContext" : "id >= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "id",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 38,
      "startColumnNumber" : 82,
      "endLineNumber" : 38,
      "endColumnNumber" : 84
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 38,
        "startColumnNumber" : 82,
        "endLineNumber" : 38,
        "endColumnNumber" : 88
      },
      "nodeContext" : "id + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 38,
        "startColumnNumber" : 59,
        "endLineNumber" : 38,
        "endColumnNumber" : 89
      },
      "nodeContext" : "domFrontier.nextSetBit(id + 1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,updaters]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 38,
        "startColumnNumber" : 54,
        "endLineNumber" : 38,
        "endColumnNumber" : 89
      },
      "nodeContext" : "id=domFrontier.nextSetBit(id + 1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 330,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n  if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n    BlockNode df=blocks.get(id);\n    addPhi(df,regNum);\n    hasPhi.set(id);\n    if (!processed.get(id)) {\n      processed.set(id);\n      workList.add(df);\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 70,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 35,
        "startColumnNumber" : 31,
        "endLineNumber" : 49,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  BlockNode block=workList.pop();\n  BitSet domFrontier=block.getDomFrontier();\n  for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n    if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n      BlockNode df=blocks.get(id);\n      addPhi(df,regNum);\n      hasPhi.set(id);\n      if (!processed.get(id)) {\n        processed.set(id);\n        workList.add(df);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 456,
        "startLineNumber" : 35,
        "startColumnNumber" : 3,
        "endLineNumber" : 49,
        "endColumnNumber" : 4
      },
      "nodeContext" : "while (!workList.isEmpty()) {\n  BlockNode block=workList.pop();\n  BitSet domFrontier=block.getDomFrontier();\n  for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n    if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n      BlockNode df=blocks.get(id);\n      addPhi(df,regNum);\n      hasPhi.set(id);\n      if (!processed.get(id)) {\n        processed.set(id);\n        workList.add(df);\n      }\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 92,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 903,
        "startLineNumber" : 23,
        "startColumnNumber" : 75,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<BlockNode> blocks=mth.getBasicBlocks();\n  int blocksCount=blocks.size();\n  BitSet hasPhi=new BitSet(blocksCount);\n  BitSet processed=new BitSet(blocksCount);\n  Deque<BlockNode> workList=new LinkedList<>();\n  BitSet assignBlocks=la.getAssignBlocks(regNum);\n  for (int id=assignBlocks.nextSetBit(0); id >= 0; id=assignBlocks.nextSetBit(id + 1)) {\n    processed.set(id);\n    workList.add(blocks.get(id));\n  }\n  while (!workList.isEmpty()) {\n    BlockNode block=workList.pop();\n    BitSet domFrontier=block.getDomFrontier();\n    for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n      if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n        BlockNode df=blocks.get(id);\n        addPhi(df,regNum);\n        hasPhi.set(id);\n        if (!processed.get(id)) {\n          processed.set(id);\n          workList.add(df);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 184,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 976,
        "startLineNumber" : 23,
        "startColumnNumber" : 2,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void test(MethodNode mth,int regNum,LiveVarAnalysis la){\n  List<BlockNode> blocks=mth.getBasicBlocks();\n  int blocksCount=blocks.size();\n  BitSet hasPhi=new BitSet(blocksCount);\n  BitSet processed=new BitSet(blocksCount);\n  Deque<BlockNode> workList=new LinkedList<>();\n  BitSet assignBlocks=la.getAssignBlocks(regNum);\n  for (int id=assignBlocks.nextSetBit(0); id >= 0; id=assignBlocks.nextSetBit(id + 1)) {\n    processed.set(id);\n    workList.add(blocks.get(id));\n  }\n  while (!workList.isEmpty()) {\n    BlockNode block=workList.pop();\n    BitSet domFrontier=block.getDomFrontier();\n    for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n      if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n        BlockNode df=blocks.get(id);\n        addPhi(df,regNum);\n        hasPhi.set(id);\n        if (!processed.get(id)) {\n          processed.set(id);\n          workList.add(df);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 200,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,updaters]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 38,
        "startColumnNumber" : 54,
        "endLineNumber" : 38,
        "endColumnNumber" : 89
      },
      "nodeContext" : "id=domFrontier.nextSetBit(id + 1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "id",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 39,
      "startColumnNumber" : 21,
      "endLineNumber" : 39,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 39,
        "startColumnNumber" : 10,
        "endLineNumber" : 39,
        "endColumnNumber" : 24
      },
      "nodeContext" : "hasPhi.get(id)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 39,
        "startColumnNumber" : 9,
        "endLineNumber" : 39,
        "endColumnNumber" : 24
      },
      "nodeContext" : "!hasPhi.get(id)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 39,
        "startColumnNumber" : 9,
        "endLineNumber" : 39,
        "endColumnNumber" : 49
      },
      "nodeContext" : "!hasPhi.get(id) && la.isLive(id,regNum)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 230,
        "startLineNumber" : 39,
        "startColumnNumber" : 5,
        "endLineNumber" : 47,
        "endColumnNumber" : 6
      },
      "nodeContext" : "if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n  BlockNode df=blocks.get(id);\n  addPhi(df,regNum);\n  hasPhi.set(id);\n  if (!processed.get(id)) {\n    processed.set(id);\n    workList.add(df);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 38,
        "startColumnNumber" : 91,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n    BlockNode df=blocks.get(id);\n    addPhi(df,regNum);\n    hasPhi.set(id);\n    if (!processed.get(id)) {\n      processed.set(id);\n      workList.add(df);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 330,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n  if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n    BlockNode df=blocks.get(id);\n    addPhi(df,regNum);\n    hasPhi.set(id);\n    if (!processed.get(id)) {\n      processed.set(id);\n      workList.add(df);\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 70,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 35,
        "startColumnNumber" : 31,
        "endLineNumber" : 49,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  BlockNode block=workList.pop();\n  BitSet domFrontier=block.getDomFrontier();\n  for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n    if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n      BlockNode df=blocks.get(id);\n      addPhi(df,regNum);\n      hasPhi.set(id);\n      if (!processed.get(id)) {\n        processed.set(id);\n        workList.add(df);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 456,
        "startLineNumber" : 35,
        "startColumnNumber" : 3,
        "endLineNumber" : 49,
        "endColumnNumber" : 4
      },
      "nodeContext" : "while (!workList.isEmpty()) {\n  BlockNode block=workList.pop();\n  BitSet domFrontier=block.getDomFrontier();\n  for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n    if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n      BlockNode df=blocks.get(id);\n      addPhi(df,regNum);\n      hasPhi.set(id);\n      if (!processed.get(id)) {\n        processed.set(id);\n        workList.add(df);\n      }\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 92,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 903,
        "startLineNumber" : 23,
        "startColumnNumber" : 75,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<BlockNode> blocks=mth.getBasicBlocks();\n  int blocksCount=blocks.size();\n  BitSet hasPhi=new BitSet(blocksCount);\n  BitSet processed=new BitSet(blocksCount);\n  Deque<BlockNode> workList=new LinkedList<>();\n  BitSet assignBlocks=la.getAssignBlocks(regNum);\n  for (int id=assignBlocks.nextSetBit(0); id >= 0; id=assignBlocks.nextSetBit(id + 1)) {\n    processed.set(id);\n    workList.add(blocks.get(id));\n  }\n  while (!workList.isEmpty()) {\n    BlockNode block=workList.pop();\n    BitSet domFrontier=block.getDomFrontier();\n    for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n      if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n        BlockNode df=blocks.get(id);\n        addPhi(df,regNum);\n        hasPhi.set(id);\n        if (!processed.get(id)) {\n          processed.set(id);\n          workList.add(df);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 184,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 976,
        "startLineNumber" : 23,
        "startColumnNumber" : 2,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void test(MethodNode mth,int regNum,LiveVarAnalysis la){\n  List<BlockNode> blocks=mth.getBasicBlocks();\n  int blocksCount=blocks.size();\n  BitSet hasPhi=new BitSet(blocksCount);\n  BitSet processed=new BitSet(blocksCount);\n  Deque<BlockNode> workList=new LinkedList<>();\n  BitSet assignBlocks=la.getAssignBlocks(regNum);\n  for (int id=assignBlocks.nextSetBit(0); id >= 0; id=assignBlocks.nextSetBit(id + 1)) {\n    processed.set(id);\n    workList.add(blocks.get(id));\n  }\n  while (!workList.isEmpty()) {\n    BlockNode block=workList.pop();\n    BitSet domFrontier=block.getDomFrontier();\n    for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n      if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n        BlockNode df=blocks.get(id);\n        addPhi(df,regNum);\n        hasPhi.set(id);\n        if (!processed.get(id)) {\n          processed.set(id);\n          workList.add(df);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 200,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 39,
        "startColumnNumber" : 9,
        "endLineNumber" : 39,
        "endColumnNumber" : 49
      },
      "nodeContext" : "!hasPhi.get(id) && la.isLive(id,regNum)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "id",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 39,
      "startColumnNumber" : 38,
      "endLineNumber" : 39,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 39,
        "startColumnNumber" : 28,
        "endLineNumber" : 39,
        "endColumnNumber" : 49
      },
      "nodeContext" : "la.isLive(id,regNum)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 39,
        "startColumnNumber" : 9,
        "endLineNumber" : 39,
        "endColumnNumber" : 49
      },
      "nodeContext" : "!hasPhi.get(id) && la.isLive(id,regNum)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 230,
        "startLineNumber" : 39,
        "startColumnNumber" : 5,
        "endLineNumber" : 47,
        "endColumnNumber" : 6
      },
      "nodeContext" : "if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n  BlockNode df=blocks.get(id);\n  addPhi(df,regNum);\n  hasPhi.set(id);\n  if (!processed.get(id)) {\n    processed.set(id);\n    workList.add(df);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 38,
        "startColumnNumber" : 91,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n    BlockNode df=blocks.get(id);\n    addPhi(df,regNum);\n    hasPhi.set(id);\n    if (!processed.get(id)) {\n      processed.set(id);\n      workList.add(df);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 330,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n  if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n    BlockNode df=blocks.get(id);\n    addPhi(df,regNum);\n    hasPhi.set(id);\n    if (!processed.get(id)) {\n      processed.set(id);\n      workList.add(df);\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 70,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 35,
        "startColumnNumber" : 31,
        "endLineNumber" : 49,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  BlockNode block=workList.pop();\n  BitSet domFrontier=block.getDomFrontier();\n  for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n    if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n      BlockNode df=blocks.get(id);\n      addPhi(df,regNum);\n      hasPhi.set(id);\n      if (!processed.get(id)) {\n        processed.set(id);\n        workList.add(df);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 456,
        "startLineNumber" : 35,
        "startColumnNumber" : 3,
        "endLineNumber" : 49,
        "endColumnNumber" : 4
      },
      "nodeContext" : "while (!workList.isEmpty()) {\n  BlockNode block=workList.pop();\n  BitSet domFrontier=block.getDomFrontier();\n  for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n    if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n      BlockNode df=blocks.get(id);\n      addPhi(df,regNum);\n      hasPhi.set(id);\n      if (!processed.get(id)) {\n        processed.set(id);\n        workList.add(df);\n      }\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 92,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 903,
        "startLineNumber" : 23,
        "startColumnNumber" : 75,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<BlockNode> blocks=mth.getBasicBlocks();\n  int blocksCount=blocks.size();\n  BitSet hasPhi=new BitSet(blocksCount);\n  BitSet processed=new BitSet(blocksCount);\n  Deque<BlockNode> workList=new LinkedList<>();\n  BitSet assignBlocks=la.getAssignBlocks(regNum);\n  for (int id=assignBlocks.nextSetBit(0); id >= 0; id=assignBlocks.nextSetBit(id + 1)) {\n    processed.set(id);\n    workList.add(blocks.get(id));\n  }\n  while (!workList.isEmpty()) {\n    BlockNode block=workList.pop();\n    BitSet domFrontier=block.getDomFrontier();\n    for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n      if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n        BlockNode df=blocks.get(id);\n        addPhi(df,regNum);\n        hasPhi.set(id);\n        if (!processed.get(id)) {\n          processed.set(id);\n          workList.add(df);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 184,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 976,
        "startLineNumber" : 23,
        "startColumnNumber" : 2,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void test(MethodNode mth,int regNum,LiveVarAnalysis la){\n  List<BlockNode> blocks=mth.getBasicBlocks();\n  int blocksCount=blocks.size();\n  BitSet hasPhi=new BitSet(blocksCount);\n  BitSet processed=new BitSet(blocksCount);\n  Deque<BlockNode> workList=new LinkedList<>();\n  BitSet assignBlocks=la.getAssignBlocks(regNum);\n  for (int id=assignBlocks.nextSetBit(0); id >= 0; id=assignBlocks.nextSetBit(id + 1)) {\n    processed.set(id);\n    workList.add(blocks.get(id));\n  }\n  while (!workList.isEmpty()) {\n    BlockNode block=workList.pop();\n    BitSet domFrontier=block.getDomFrontier();\n    for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n      if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n        BlockNode df=blocks.get(id);\n        addPhi(df,regNum);\n        hasPhi.set(id);\n        if (!processed.get(id)) {\n          processed.set(id);\n          workList.add(df);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 200,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 39,
        "startColumnNumber" : 9,
        "endLineNumber" : 39,
        "endColumnNumber" : 49
      },
      "nodeContext" : "!hasPhi.get(id) && la.isLive(id,regNum)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "id",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 40,
      "startColumnNumber" : 32,
      "endLineNumber" : 40,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 40,
        "startColumnNumber" : 21,
        "endLineNumber" : 40,
        "endColumnNumber" : 35
      },
      "nodeContext" : "blocks.get(id)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 40,
        "startColumnNumber" : 16,
        "endLineNumber" : 40,
        "endColumnNumber" : 35
      },
      "nodeContext" : "df=blocks.get(id)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 40,
        "startColumnNumber" : 6,
        "endLineNumber" : 40,
        "endColumnNumber" : 36
      },
      "nodeContext" : "BlockNode df=blocks.get(id);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 39,
        "startColumnNumber" : 51,
        "endLineNumber" : 47,
        "endColumnNumber" : 6
      },
      "nodeContext" : "{\n  BlockNode df=blocks.get(id);\n  addPhi(df,regNum);\n  hasPhi.set(id);\n  if (!processed.get(id)) {\n    processed.set(id);\n    workList.add(df);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 230,
        "startLineNumber" : 39,
        "startColumnNumber" : 5,
        "endLineNumber" : 47,
        "endColumnNumber" : 6
      },
      "nodeContext" : "if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n  BlockNode df=blocks.get(id);\n  addPhi(df,regNum);\n  hasPhi.set(id);\n  if (!processed.get(id)) {\n    processed.set(id);\n    workList.add(df);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 38,
        "startColumnNumber" : 91,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n    BlockNode df=blocks.get(id);\n    addPhi(df,regNum);\n    hasPhi.set(id);\n    if (!processed.get(id)) {\n      processed.set(id);\n      workList.add(df);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 330,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n  if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n    BlockNode df=blocks.get(id);\n    addPhi(df,regNum);\n    hasPhi.set(id);\n    if (!processed.get(id)) {\n      processed.set(id);\n      workList.add(df);\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 70,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 35,
        "startColumnNumber" : 31,
        "endLineNumber" : 49,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  BlockNode block=workList.pop();\n  BitSet domFrontier=block.getDomFrontier();\n  for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n    if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n      BlockNode df=blocks.get(id);\n      addPhi(df,regNum);\n      hasPhi.set(id);\n      if (!processed.get(id)) {\n        processed.set(id);\n        workList.add(df);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 456,
        "startLineNumber" : 35,
        "startColumnNumber" : 3,
        "endLineNumber" : 49,
        "endColumnNumber" : 4
      },
      "nodeContext" : "while (!workList.isEmpty()) {\n  BlockNode block=workList.pop();\n  BitSet domFrontier=block.getDomFrontier();\n  for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n    if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n      BlockNode df=blocks.get(id);\n      addPhi(df,regNum);\n      hasPhi.set(id);\n      if (!processed.get(id)) {\n        processed.set(id);\n        workList.add(df);\n      }\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 92,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 903,
        "startLineNumber" : 23,
        "startColumnNumber" : 75,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<BlockNode> blocks=mth.getBasicBlocks();\n  int blocksCount=blocks.size();\n  BitSet hasPhi=new BitSet(blocksCount);\n  BitSet processed=new BitSet(blocksCount);\n  Deque<BlockNode> workList=new LinkedList<>();\n  BitSet assignBlocks=la.getAssignBlocks(regNum);\n  for (int id=assignBlocks.nextSetBit(0); id >= 0; id=assignBlocks.nextSetBit(id + 1)) {\n    processed.set(id);\n    workList.add(blocks.get(id));\n  }\n  while (!workList.isEmpty()) {\n    BlockNode block=workList.pop();\n    BitSet domFrontier=block.getDomFrontier();\n    for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n      if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n        BlockNode df=blocks.get(id);\n        addPhi(df,regNum);\n        hasPhi.set(id);\n        if (!processed.get(id)) {\n          processed.set(id);\n          workList.add(df);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 184,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 976,
        "startLineNumber" : 23,
        "startColumnNumber" : 2,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void test(MethodNode mth,int regNum,LiveVarAnalysis la){\n  List<BlockNode> blocks=mth.getBasicBlocks();\n  int blocksCount=blocks.size();\n  BitSet hasPhi=new BitSet(blocksCount);\n  BitSet processed=new BitSet(blocksCount);\n  Deque<BlockNode> workList=new LinkedList<>();\n  BitSet assignBlocks=la.getAssignBlocks(regNum);\n  for (int id=assignBlocks.nextSetBit(0); id >= 0; id=assignBlocks.nextSetBit(id + 1)) {\n    processed.set(id);\n    workList.add(blocks.get(id));\n  }\n  while (!workList.isEmpty()) {\n    BlockNode block=workList.pop();\n    BitSet domFrontier=block.getDomFrontier();\n    for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n      if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n        BlockNode df=blocks.get(id);\n        addPhi(df,regNum);\n        hasPhi.set(id);\n        if (!processed.get(id)) {\n          processed.set(id);\n          workList.add(df);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 200,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 40,
        "startColumnNumber" : 6,
        "endLineNumber" : 40,
        "endColumnNumber" : 36
      },
      "nodeContext" : "BlockNode df=blocks.get(id);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "id",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 42,
      "startColumnNumber" : 17,
      "endLineNumber" : 42,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 42,
        "startColumnNumber" : 6,
        "endLineNumber" : 42,
        "endColumnNumber" : 20
      },
      "nodeContext" : "hasPhi.set(id)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 42,
        "startColumnNumber" : 6,
        "endLineNumber" : 42,
        "endColumnNumber" : 21
      },
      "nodeContext" : "hasPhi.set(id);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 39,
        "startColumnNumber" : 51,
        "endLineNumber" : 47,
        "endColumnNumber" : 6
      },
      "nodeContext" : "{\n  BlockNode df=blocks.get(id);\n  addPhi(df,regNum);\n  hasPhi.set(id);\n  if (!processed.get(id)) {\n    processed.set(id);\n    workList.add(df);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 230,
        "startLineNumber" : 39,
        "startColumnNumber" : 5,
        "endLineNumber" : 47,
        "endColumnNumber" : 6
      },
      "nodeContext" : "if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n  BlockNode df=blocks.get(id);\n  addPhi(df,regNum);\n  hasPhi.set(id);\n  if (!processed.get(id)) {\n    processed.set(id);\n    workList.add(df);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 38,
        "startColumnNumber" : 91,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n    BlockNode df=blocks.get(id);\n    addPhi(df,regNum);\n    hasPhi.set(id);\n    if (!processed.get(id)) {\n      processed.set(id);\n      workList.add(df);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 330,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n  if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n    BlockNode df=blocks.get(id);\n    addPhi(df,regNum);\n    hasPhi.set(id);\n    if (!processed.get(id)) {\n      processed.set(id);\n      workList.add(df);\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 70,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 35,
        "startColumnNumber" : 31,
        "endLineNumber" : 49,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  BlockNode block=workList.pop();\n  BitSet domFrontier=block.getDomFrontier();\n  for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n    if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n      BlockNode df=blocks.get(id);\n      addPhi(df,regNum);\n      hasPhi.set(id);\n      if (!processed.get(id)) {\n        processed.set(id);\n        workList.add(df);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 456,
        "startLineNumber" : 35,
        "startColumnNumber" : 3,
        "endLineNumber" : 49,
        "endColumnNumber" : 4
      },
      "nodeContext" : "while (!workList.isEmpty()) {\n  BlockNode block=workList.pop();\n  BitSet domFrontier=block.getDomFrontier();\n  for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n    if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n      BlockNode df=blocks.get(id);\n      addPhi(df,regNum);\n      hasPhi.set(id);\n      if (!processed.get(id)) {\n        processed.set(id);\n        workList.add(df);\n      }\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 92,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 903,
        "startLineNumber" : 23,
        "startColumnNumber" : 75,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<BlockNode> blocks=mth.getBasicBlocks();\n  int blocksCount=blocks.size();\n  BitSet hasPhi=new BitSet(blocksCount);\n  BitSet processed=new BitSet(blocksCount);\n  Deque<BlockNode> workList=new LinkedList<>();\n  BitSet assignBlocks=la.getAssignBlocks(regNum);\n  for (int id=assignBlocks.nextSetBit(0); id >= 0; id=assignBlocks.nextSetBit(id + 1)) {\n    processed.set(id);\n    workList.add(blocks.get(id));\n  }\n  while (!workList.isEmpty()) {\n    BlockNode block=workList.pop();\n    BitSet domFrontier=block.getDomFrontier();\n    for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n      if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n        BlockNode df=blocks.get(id);\n        addPhi(df,regNum);\n        hasPhi.set(id);\n        if (!processed.get(id)) {\n          processed.set(id);\n          workList.add(df);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 184,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 976,
        "startLineNumber" : 23,
        "startColumnNumber" : 2,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void test(MethodNode mth,int regNum,LiveVarAnalysis la){\n  List<BlockNode> blocks=mth.getBasicBlocks();\n  int blocksCount=blocks.size();\n  BitSet hasPhi=new BitSet(blocksCount);\n  BitSet processed=new BitSet(blocksCount);\n  Deque<BlockNode> workList=new LinkedList<>();\n  BitSet assignBlocks=la.getAssignBlocks(regNum);\n  for (int id=assignBlocks.nextSetBit(0); id >= 0; id=assignBlocks.nextSetBit(id + 1)) {\n    processed.set(id);\n    workList.add(blocks.get(id));\n  }\n  while (!workList.isEmpty()) {\n    BlockNode block=workList.pop();\n    BitSet domFrontier=block.getDomFrontier();\n    for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n      if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n        BlockNode df=blocks.get(id);\n        addPhi(df,regNum);\n        hasPhi.set(id);\n        if (!processed.get(id)) {\n          processed.set(id);\n          workList.add(df);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 200,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 42,
        "startColumnNumber" : 6,
        "endLineNumber" : 42,
        "endColumnNumber" : 21
      },
      "nodeContext" : "hasPhi.set(id);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "id",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 43,
      "startColumnNumber" : 25,
      "endLineNumber" : 43,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 43,
        "startColumnNumber" : 11,
        "endLineNumber" : 43,
        "endColumnNumber" : 28
      },
      "nodeContext" : "processed.get(id)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 43,
        "startColumnNumber" : 10,
        "endLineNumber" : 43,
        "endColumnNumber" : 28
      },
      "nodeContext" : "!processed.get(id)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 43,
        "startColumnNumber" : 6,
        "endLineNumber" : 46,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (!processed.get(id)) {\n  processed.set(id);\n  workList.add(df);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 39,
        "startColumnNumber" : 51,
        "endLineNumber" : 47,
        "endColumnNumber" : 6
      },
      "nodeContext" : "{\n  BlockNode df=blocks.get(id);\n  addPhi(df,regNum);\n  hasPhi.set(id);\n  if (!processed.get(id)) {\n    processed.set(id);\n    workList.add(df);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 230,
        "startLineNumber" : 39,
        "startColumnNumber" : 5,
        "endLineNumber" : 47,
        "endColumnNumber" : 6
      },
      "nodeContext" : "if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n  BlockNode df=blocks.get(id);\n  addPhi(df,regNum);\n  hasPhi.set(id);\n  if (!processed.get(id)) {\n    processed.set(id);\n    workList.add(df);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 38,
        "startColumnNumber" : 91,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n    BlockNode df=blocks.get(id);\n    addPhi(df,regNum);\n    hasPhi.set(id);\n    if (!processed.get(id)) {\n      processed.set(id);\n      workList.add(df);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 330,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n  if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n    BlockNode df=blocks.get(id);\n    addPhi(df,regNum);\n    hasPhi.set(id);\n    if (!processed.get(id)) {\n      processed.set(id);\n      workList.add(df);\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 70,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 35,
        "startColumnNumber" : 31,
        "endLineNumber" : 49,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  BlockNode block=workList.pop();\n  BitSet domFrontier=block.getDomFrontier();\n  for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n    if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n      BlockNode df=blocks.get(id);\n      addPhi(df,regNum);\n      hasPhi.set(id);\n      if (!processed.get(id)) {\n        processed.set(id);\n        workList.add(df);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 456,
        "startLineNumber" : 35,
        "startColumnNumber" : 3,
        "endLineNumber" : 49,
        "endColumnNumber" : 4
      },
      "nodeContext" : "while (!workList.isEmpty()) {\n  BlockNode block=workList.pop();\n  BitSet domFrontier=block.getDomFrontier();\n  for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n    if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n      BlockNode df=blocks.get(id);\n      addPhi(df,regNum);\n      hasPhi.set(id);\n      if (!processed.get(id)) {\n        processed.set(id);\n        workList.add(df);\n      }\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 92,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 903,
        "startLineNumber" : 23,
        "startColumnNumber" : 75,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<BlockNode> blocks=mth.getBasicBlocks();\n  int blocksCount=blocks.size();\n  BitSet hasPhi=new BitSet(blocksCount);\n  BitSet processed=new BitSet(blocksCount);\n  Deque<BlockNode> workList=new LinkedList<>();\n  BitSet assignBlocks=la.getAssignBlocks(regNum);\n  for (int id=assignBlocks.nextSetBit(0); id >= 0; id=assignBlocks.nextSetBit(id + 1)) {\n    processed.set(id);\n    workList.add(blocks.get(id));\n  }\n  while (!workList.isEmpty()) {\n    BlockNode block=workList.pop();\n    BitSet domFrontier=block.getDomFrontier();\n    for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n      if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n        BlockNode df=blocks.get(id);\n        addPhi(df,regNum);\n        hasPhi.set(id);\n        if (!processed.get(id)) {\n          processed.set(id);\n          workList.add(df);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 184,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 976,
        "startLineNumber" : 23,
        "startColumnNumber" : 2,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void test(MethodNode mth,int regNum,LiveVarAnalysis la){\n  List<BlockNode> blocks=mth.getBasicBlocks();\n  int blocksCount=blocks.size();\n  BitSet hasPhi=new BitSet(blocksCount);\n  BitSet processed=new BitSet(blocksCount);\n  Deque<BlockNode> workList=new LinkedList<>();\n  BitSet assignBlocks=la.getAssignBlocks(regNum);\n  for (int id=assignBlocks.nextSetBit(0); id >= 0; id=assignBlocks.nextSetBit(id + 1)) {\n    processed.set(id);\n    workList.add(blocks.get(id));\n  }\n  while (!workList.isEmpty()) {\n    BlockNode block=workList.pop();\n    BitSet domFrontier=block.getDomFrontier();\n    for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n      if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n        BlockNode df=blocks.get(id);\n        addPhi(df,regNum);\n        hasPhi.set(id);\n        if (!processed.get(id)) {\n          processed.set(id);\n          workList.add(df);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 200,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 43,
        "startColumnNumber" : 10,
        "endLineNumber" : 43,
        "endColumnNumber" : 28
      },
      "nodeContext" : "!processed.get(id)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "id",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 44,
      "startColumnNumber" : 21,
      "endLineNumber" : 44,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 44,
        "startColumnNumber" : 7,
        "endLineNumber" : 44,
        "endColumnNumber" : 24
      },
      "nodeContext" : "processed.set(id)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 44,
        "startColumnNumber" : 7,
        "endLineNumber" : 44,
        "endColumnNumber" : 25
      },
      "nodeContext" : "processed.set(id);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 43,
        "startColumnNumber" : 30,
        "endLineNumber" : 46,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  processed.set(id);\n  workList.add(df);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 43,
        "startColumnNumber" : 6,
        "endLineNumber" : 46,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (!processed.get(id)) {\n  processed.set(id);\n  workList.add(df);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 39,
        "startColumnNumber" : 51,
        "endLineNumber" : 47,
        "endColumnNumber" : 6
      },
      "nodeContext" : "{\n  BlockNode df=blocks.get(id);\n  addPhi(df,regNum);\n  hasPhi.set(id);\n  if (!processed.get(id)) {\n    processed.set(id);\n    workList.add(df);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 230,
        "startLineNumber" : 39,
        "startColumnNumber" : 5,
        "endLineNumber" : 47,
        "endColumnNumber" : 6
      },
      "nodeContext" : "if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n  BlockNode df=blocks.get(id);\n  addPhi(df,regNum);\n  hasPhi.set(id);\n  if (!processed.get(id)) {\n    processed.set(id);\n    workList.add(df);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 38,
        "startColumnNumber" : 91,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n    BlockNode df=blocks.get(id);\n    addPhi(df,regNum);\n    hasPhi.set(id);\n    if (!processed.get(id)) {\n      processed.set(id);\n      workList.add(df);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 330,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n  if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n    BlockNode df=blocks.get(id);\n    addPhi(df,regNum);\n    hasPhi.set(id);\n    if (!processed.get(id)) {\n      processed.set(id);\n      workList.add(df);\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 70,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 35,
        "startColumnNumber" : 31,
        "endLineNumber" : 49,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  BlockNode block=workList.pop();\n  BitSet domFrontier=block.getDomFrontier();\n  for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n    if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n      BlockNode df=blocks.get(id);\n      addPhi(df,regNum);\n      hasPhi.set(id);\n      if (!processed.get(id)) {\n        processed.set(id);\n        workList.add(df);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 456,
        "startLineNumber" : 35,
        "startColumnNumber" : 3,
        "endLineNumber" : 49,
        "endColumnNumber" : 4
      },
      "nodeContext" : "while (!workList.isEmpty()) {\n  BlockNode block=workList.pop();\n  BitSet domFrontier=block.getDomFrontier();\n  for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n    if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n      BlockNode df=blocks.get(id);\n      addPhi(df,regNum);\n      hasPhi.set(id);\n      if (!processed.get(id)) {\n        processed.set(id);\n        workList.add(df);\n      }\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 92,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 903,
        "startLineNumber" : 23,
        "startColumnNumber" : 75,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<BlockNode> blocks=mth.getBasicBlocks();\n  int blocksCount=blocks.size();\n  BitSet hasPhi=new BitSet(blocksCount);\n  BitSet processed=new BitSet(blocksCount);\n  Deque<BlockNode> workList=new LinkedList<>();\n  BitSet assignBlocks=la.getAssignBlocks(regNum);\n  for (int id=assignBlocks.nextSetBit(0); id >= 0; id=assignBlocks.nextSetBit(id + 1)) {\n    processed.set(id);\n    workList.add(blocks.get(id));\n  }\n  while (!workList.isEmpty()) {\n    BlockNode block=workList.pop();\n    BitSet domFrontier=block.getDomFrontier();\n    for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n      if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n        BlockNode df=blocks.get(id);\n        addPhi(df,regNum);\n        hasPhi.set(id);\n        if (!processed.get(id)) {\n          processed.set(id);\n          workList.add(df);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 184,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 976,
        "startLineNumber" : 23,
        "startColumnNumber" : 2,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void test(MethodNode mth,int regNum,LiveVarAnalysis la){\n  List<BlockNode> blocks=mth.getBasicBlocks();\n  int blocksCount=blocks.size();\n  BitSet hasPhi=new BitSet(blocksCount);\n  BitSet processed=new BitSet(blocksCount);\n  Deque<BlockNode> workList=new LinkedList<>();\n  BitSet assignBlocks=la.getAssignBlocks(regNum);\n  for (int id=assignBlocks.nextSetBit(0); id >= 0; id=assignBlocks.nextSetBit(id + 1)) {\n    processed.set(id);\n    workList.add(blocks.get(id));\n  }\n  while (!workList.isEmpty()) {\n    BlockNode block=workList.pop();\n    BitSet domFrontier=block.getDomFrontier();\n    for (int id=domFrontier.nextSetBit(0); id >= 0; id=domFrontier.nextSetBit(id + 1)) {\n      if (!hasPhi.get(id) && la.isLive(id,regNum)) {\n        BlockNode df=blocks.get(id);\n        addPhi(df,regNum);\n        hasPhi.set(id);\n        if (!processed.get(id)) {\n          processed.set(id);\n          workList.add(df);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 200,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 44,
        "startColumnNumber" : 7,
        "endLineNumber" : 44,
        "endColumnNumber" : 25
      },
      "nodeContext" : "processed.set(id);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 31,
    "startColumnNumber" : 45,
    "endLineNumber" : 31,
    "endColumnNumber" : 47
  }, {
    "charLength" : 2,
    "startLineNumber" : 31,
    "startColumnNumber" : 83,
    "endLineNumber" : 31,
    "endColumnNumber" : 85
  }, {
    "charLength" : 2,
    "startLineNumber" : 32,
    "startColumnNumber" : 18,
    "endLineNumber" : 32,
    "endColumnNumber" : 20
  }, {
    "charLength" : 2,
    "startLineNumber" : 33,
    "startColumnNumber" : 28,
    "endLineNumber" : 33,
    "endColumnNumber" : 30
  }, {
    "charLength" : 2,
    "startLineNumber" : 38,
    "startColumnNumber" : 45,
    "endLineNumber" : 38,
    "endColumnNumber" : 47
  }, {
    "charLength" : 2,
    "startLineNumber" : 38,
    "startColumnNumber" : 82,
    "endLineNumber" : 38,
    "endColumnNumber" : 84
  }, {
    "charLength" : 2,
    "startLineNumber" : 39,
    "startColumnNumber" : 21,
    "endLineNumber" : 39,
    "endColumnNumber" : 23
  }, {
    "charLength" : 2,
    "startLineNumber" : 39,
    "startColumnNumber" : 38,
    "endLineNumber" : 39,
    "endColumnNumber" : 40
  }, {
    "charLength" : 2,
    "startLineNumber" : 40,
    "startColumnNumber" : 32,
    "endLineNumber" : 40,
    "endColumnNumber" : 34
  }, {
    "charLength" : 2,
    "startLineNumber" : 42,
    "startColumnNumber" : 17,
    "endLineNumber" : 42,
    "endColumnNumber" : 19
  }, {
    "charLength" : 2,
    "startLineNumber" : 43,
    "startColumnNumber" : 25,
    "endLineNumber" : 43,
    "endColumnNumber" : 27
  }, {
    "charLength" : 2,
    "startLineNumber" : 44,
    "startColumnNumber" : 21,
    "endLineNumber" : 44,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 10,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 11,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 9
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 9
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 9
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 10,
    "secondKey" : 1,
    "layout" : 9
  }, {
    "firstKey" : 10,
    "secondKey" : 2,
    "layout" : 9
  }, {
    "firstKey" : 10,
    "secondKey" : 3,
    "layout" : 9
  }, {
    "firstKey" : 10,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 0,
    "layout" : 10
  }, {
    "firstKey" : 11,
    "secondKey" : 1,
    "layout" : 10
  }, {
    "firstKey" : 11,
    "secondKey" : 2,
    "layout" : 10
  }, {
    "firstKey" : 11,
    "secondKey" : 3,
    "layout" : 10
  }, {
    "firstKey" : 11,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 11,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 11,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 11,
    "secondKey" : 10,
    "layout" : 3
  } ]
}