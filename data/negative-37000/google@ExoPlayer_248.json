{
  "id" : 248,
  "expression" : "\"trackName\"",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/rtsp/src/test/java/com/google/android/exoplayer2/source/rtsp/RtpPacketStreamDump.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"trackName\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 66,
      "startColumnNumber" : 46,
      "endLineNumber" : 66,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 66,
        "startColumnNumber" : 25,
        "endLineNumber" : 66,
        "endColumnNumber" : 58
      },
      "nodeContext" : "jsonObject.getString(\"trackName\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 66,
        "startColumnNumber" : 13,
        "endLineNumber" : 66,
        "endColumnNumber" : 58
      },
      "nodeContext" : "trackName=jsonObject.getString(\"trackName\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 66,
        "startColumnNumber" : 6,
        "endLineNumber" : 66,
        "endColumnNumber" : 59
      },
      "nodeContext" : "String trackName=jsonObject.getString(\"trackName\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 899,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  JSONObject jsonObject=new JSONObject(jsonString);\n  String trackName=jsonObject.getString(\"trackName\");\n  int firstSequenceNumber=jsonObject.getInt(\"firstSequenceNumber\");\n  long firstTimestamp=jsonObject.getLong(\"firstTimestamp\");\n  long transmissionIntervalMs=jsonObject.getLong(\"transmitIntervalMs\");\n  String mediaDescription=jsonObject.getString(\"mediaDescription\");\n  ImmutableList.Builder<String> packetsBuilder=new ImmutableList.Builder<>();\n  JSONArray jsonPackets=jsonObject.getJSONArray(\"packets\");\n  for (int i=0; i < jsonPackets.length(); i++) {\n    packetsBuilder.add(jsonPackets.getString(i));\n  }\n  return new RtpPacketStreamDump(trackName,firstSequenceNumber,firstTimestamp,transmissionIntervalMs,mediaDescription,packetsBuilder.build());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1015,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  JSONObject jsonObject=new JSONObject(jsonString);\n  String trackName=jsonObject.getString(\"trackName\");\n  int firstSequenceNumber=jsonObject.getInt(\"firstSequenceNumber\");\n  long firstTimestamp=jsonObject.getLong(\"firstTimestamp\");\n  long transmissionIntervalMs=jsonObject.getLong(\"transmitIntervalMs\");\n  String mediaDescription=jsonObject.getString(\"mediaDescription\");\n  ImmutableList.Builder<String> packetsBuilder=new ImmutableList.Builder<>();\n  JSONArray jsonPackets=jsonObject.getJSONArray(\"packets\");\n  for (int i=0; i < jsonPackets.length(); i++) {\n    packetsBuilder.add(jsonPackets.getString(i));\n  }\n  return new RtpPacketStreamDump(trackName,firstSequenceNumber,firstTimestamp,transmissionIntervalMs,mediaDescription,packetsBuilder.build());\n}\n catch (JSONException e) {\n  throw ParserException.createForMalformedManifest(null,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 124,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1025,
        "startLineNumber" : 63,
        "startColumnNumber" : 84,
        "endLineNumber" : 88,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    JSONObject jsonObject=new JSONObject(jsonString);\n    String trackName=jsonObject.getString(\"trackName\");\n    int firstSequenceNumber=jsonObject.getInt(\"firstSequenceNumber\");\n    long firstTimestamp=jsonObject.getLong(\"firstTimestamp\");\n    long transmissionIntervalMs=jsonObject.getLong(\"transmitIntervalMs\");\n    String mediaDescription=jsonObject.getString(\"mediaDescription\");\n    ImmutableList.Builder<String> packetsBuilder=new ImmutableList.Builder<>();\n    JSONArray jsonPackets=jsonObject.getJSONArray(\"packets\");\n    for (int i=0; i < jsonPackets.length(); i++) {\n      packetsBuilder.add(jsonPackets.getString(i));\n    }\n    return new RtpPacketStreamDump(trackName,firstSequenceNumber,firstTimestamp,transmissionIntervalMs,mediaDescription,packetsBuilder.build());\n  }\n catch (  JSONException e) {\n    throw ParserException.createForMalformedManifest(null,e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2297,
        "startLineNumber" : 39,
        "startColumnNumber" : 2,
        "endLineNumber" : 88,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Parses a JSON string into an  {@code RtpPacketStreamDump}. <p>The input JSON must include the following key-value pairs: <ul> <li>Key: \"trackName\", Value type: String. The name of the RTP track. <li>Key: \"firstSequenceNumber\", Value type: int. The sequence number of the first RTP packet in the dump file. <li>Key: \"firstTimestamp\", Value type: long. The timestamp of the first RTP packet in the dump file. <li>Key: \"transmissionIntervalMs\", Value type: long. The interval between transmitting two consecutive RTP packets, in milliseconds. <li>Key: \"mediaDescription\", Value type: String. The description of the dumped media in SDP(RFC2327) format. <li>Key: \"packets\", Value type: Array of hex strings. Each element is a hex string representing an RTP packet's binary data. </ul>\n * @param jsonString The JSON string that contains the dumped RTP packets and metadata.\n * @return The parsed {@code RtpDumpFile}.\n * @throws ParserException If the argument does not contain all required key-value pairs, or thereare incorrect values.\n */\npublic static RtpPacketStreamDump parse(String jsonString) throws ParserException {\n  try {\n    JSONObject jsonObject=new JSONObject(jsonString);\n    String trackName=jsonObject.getString(\"trackName\");\n    int firstSequenceNumber=jsonObject.getInt(\"firstSequenceNumber\");\n    long firstTimestamp=jsonObject.getLong(\"firstTimestamp\");\n    long transmissionIntervalMs=jsonObject.getLong(\"transmitIntervalMs\");\n    String mediaDescription=jsonObject.getString(\"mediaDescription\");\n    ImmutableList.Builder<String> packetsBuilder=new ImmutableList.Builder<>();\n    JSONArray jsonPackets=jsonObject.getJSONArray(\"packets\");\n    for (int i=0; i < jsonPackets.length(); i++) {\n      packetsBuilder.add(jsonPackets.getString(i));\n    }\n    return new RtpPacketStreamDump(trackName,firstSequenceNumber,firstTimestamp,transmissionIntervalMs,mediaDescription,packetsBuilder.build());\n  }\n catch (  JSONException e) {\n    throw ParserException.createForMalformedManifest(null,e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 138,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 66,
        "startColumnNumber" : 6,
        "endLineNumber" : 66,
        "endColumnNumber" : 59
      },
      "nodeContext" : "String trackName=jsonObject.getString(\"trackName\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 66,
    "startColumnNumber" : 46,
    "endLineNumber" : 66,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}