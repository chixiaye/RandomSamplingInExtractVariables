{
  "id" : 186,
  "expression" : "mYVals.size()",
  "projectName" : "PhilJay@MPAndroidChart",
  "commitID" : "43046425fc2ed73d0d3f177759706116e02a9053",
  "filePath" : "/MPChartLib/src/com/github/mikephil/charting/data/BarDataSet.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mYVals.size()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 51,
      "startColumnNumber" : 28,
      "endLineNumber" : 51,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 51,
        "startColumnNumber" : 24,
        "endLineNumber" : 51,
        "endColumnNumber" : 41
      },
      "nodeContext" : "i < mYVals.size()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < mYVals.size(); i++) {\n  yVals.add(((BarEntry)mYVals.get(i)).copy());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 28,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 584,
        "startLineNumber" : 47,
        "startColumnNumber" : 36,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ArrayList<BarEntry> yVals=new ArrayList<BarEntry>();\n  for (int i=0; i < mYVals.size(); i++) {\n    yVals.add(((BarEntry)mYVals.get(i)).copy());\n  }\n  BarDataSet copied=new BarDataSet(yVals,getLabel());\n  copied.mColors=mColors;\n  copied.mStackSize=mStackSize;\n  copied.mBarSpace=mBarSpace;\n  copied.mBarShadowColor=mBarShadowColor;\n  copied.mStackLabels=mStackLabels;\n  copied.mHighLightColor=mHighLightColor;\n  copied.mHighLightAlpha=mHighLightAlpha;\n  return copied;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 630,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public DataSet<BarEntry> copy(){\n  ArrayList<BarEntry> yVals=new ArrayList<BarEntry>();\n  for (int i=0; i < mYVals.size(); i++) {\n    yVals.add(((BarEntry)mYVals.get(i)).copy());\n  }\n  BarDataSet copied=new BarDataSet(yVals,getLabel());\n  copied.mColors=mColors;\n  copied.mStackSize=mStackSize;\n  copied.mBarSpace=mBarSpace;\n  copied.mBarShadowColor=mBarShadowColor;\n  copied.mStackLabels=mStackLabels;\n  copied.mHighLightColor=mHighLightColor;\n  copied.mHighLightAlpha=mHighLightAlpha;\n  return copied;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 51,
        "startColumnNumber" : 24,
        "endLineNumber" : 51,
        "endColumnNumber" : 41
      },
      "nodeContext" : "i < mYVals.size()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 51,
    "startColumnNumber" : 28,
    "endLineNumber" : 51,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}