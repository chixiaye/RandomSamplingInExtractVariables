{
  "id" : 127,
  "expression" : "\"Plan\"",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ext.postgresql/src/org/jkiss/dbeaver/ext/postgresql/model/plan/PostgrePlanNodeXML.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Plan\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 45,
      "startColumnNumber" : 88,
      "endLineNumber" : 45,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 45,
        "startColumnNumber" : 39,
        "endLineNumber" : 45,
        "endColumnNumber" : 95
      },
      "nodeContext" : "XMLUtils.getChildElementList(nestedPlansElement,\"Plan\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 45,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Element planElement : XMLUtils.getChildElementList(nestedPlansElement,\"Plan\")) {\n  nested.add(new PostgrePlanNodeXML(dataSource,null,planElement));\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 44,
        "startColumnNumber" : 40,
        "endLineNumber" : 48,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (  Element planElement : XMLUtils.getChildElementList(nestedPlansElement,\"Plan\")) {\n    nested.add(new PostgrePlanNodeXML(dataSource,null,planElement));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 239,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (nestedPlansElement != null) {\n  for (  Element planElement : XMLUtils.getChildElementList(nestedPlansElement,\"Plan\")) {\n    nested.add(new PostgrePlanNodeXML(dataSource,null,planElement));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 757,
        "startLineNumber" : 32,
        "startColumnNumber" : 104,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(dataSource,parent);\n  Map<String,String> attributes=new LinkedHashMap<>();\n  for (Node child=element.getFirstChild(); child != null; child=child.getNextSibling()) {\n    if (child instanceof Element && !\"Plans\".equals(child.getNodeName())) {\n      attributes.put(child.getNodeName(),child.getTextContent());\n    }\n  }\n  setAttributes(attributes);\n  Element nestedPlansElement=XMLUtils.getChildElement(element,\"Plans\");\n  if (nestedPlansElement != null) {\n    for (    Element planElement : XMLUtils.getChildElementList(nestedPlansElement,\"Plan\")) {\n      nested.add(new PostgrePlanNodeXML(dataSource,null,planElement));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 857,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public PostgrePlanNodeXML(PostgreDataSource dataSource,PostgrePlanNodeXML parent,Element element){\n  super(dataSource,parent);\n  Map<String,String> attributes=new LinkedHashMap<>();\n  for (Node child=element.getFirstChild(); child != null; child=child.getNextSibling()) {\n    if (child instanceof Element && !\"Plans\".equals(child.getNodeName())) {\n      attributes.put(child.getNodeName(),child.getTextContent());\n    }\n  }\n  setAttributes(attributes);\n  Element nestedPlansElement=XMLUtils.getChildElement(element,\"Plans\");\n  if (nestedPlansElement != null) {\n    for (    Element planElement : XMLUtils.getChildElementList(nestedPlansElement,\"Plan\")) {\n      nested.add(new PostgrePlanNodeXML(dataSource,null,planElement));\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 115,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 45,
        "startColumnNumber" : 39,
        "endLineNumber" : 45,
        "endColumnNumber" : 95
      },
      "nodeContext" : "XMLUtils.getChildElementList(nestedPlansElement,\"Plan\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 45,
    "startColumnNumber" : 88,
    "endLineNumber" : 45,
    "endColumnNumber" : 94
  } ],
  "layoutRelationDataList" : [ ]
}