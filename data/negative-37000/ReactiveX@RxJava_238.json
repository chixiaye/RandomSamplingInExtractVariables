{
  "id" : 238,
  "expression" : "false",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/observable/BlockingObservableToIteratorTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 43,
      "startColumnNumber" : 21,
      "endLineNumber" : 43,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 41
      },
      "nodeContext" : "assertEquals(false,it.hasNext())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 42
      },
      "nodeContext" : "assertEquals(false,it.hasNext());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 452,
        "startLineNumber" : 29,
        "startColumnNumber" : 33,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Observable<String> obs=Observable.just(\"one\",\"two\",\"three\");\n  Iterator<String> it=obs.toBlocking().iterator();\n  assertEquals(true,it.hasNext());\n  assertEquals(\"one\",it.next());\n  assertEquals(true,it.hasNext());\n  assertEquals(\"two\",it.next());\n  assertEquals(true,it.hasNext());\n  assertEquals(\"three\",it.next());\n  assertEquals(false,it.hasNext());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 492,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testToIterator(){\n  Observable<String> obs=Observable.just(\"one\",\"two\",\"three\");\n  Iterator<String> it=obs.toBlocking().iterator();\n  assertEquals(true,it.hasNext());\n  assertEquals(\"one\",it.next());\n  assertEquals(true,it.hasNext());\n  assertEquals(\"two\",it.next());\n  assertEquals(true,it.hasNext());\n  assertEquals(\"three\",it.next());\n  assertEquals(false,it.hasNext());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 83,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 42
      },
      "nodeContext" : "assertEquals(false,it.hasNext());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 43,
    "startColumnNumber" : 21,
    "endLineNumber" : 43,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}