{
  "id" : 179,
  "expression" : "idleTimeout",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-core/src/main/java/com/netflix/eureka2/utils/rx/ResourceObservable.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "idleTimeout",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 64,
      "startColumnNumber" : 27,
      "endLineNumber" : 64,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 38
      },
      "nodeContext" : "this.idleTimeout=idleTimeout",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 39
      },
      "nodeContext" : "this.idleTimeout=idleTimeout;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1520,
        "startLineNumber" : 60,
        "startColumnNumber" : 136,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.loader=loader;\n  this.scheduler=scheduler;\n  this.refreshInterval=refreshInterval;\n  this.idleTimeout=idleTimeout;\n  this.timeUnit=timeUnit;\n  this.observable=Observable.create(new OnSubscribe<T>(){\n    @Override public void call(    Subscriber<? super T> subscriber){\n      lock.lock();\n      try {\n        if (executor == null) {\n          executor=new ResourceLoaderExecutor();\n          executor.call();\n        }\n        subscriptionCounter.incrementAndGet();\n        for (        T entry : executor.getDataSnapshot()) {\n          subscriber.onNext(entry);\n        }\n        executor.getDataUpdates().subscribe(subscriber);\n      }\n  finally {\n        lock.unlock();\n      }\n      subscriber.add(new Subscription(){\n        @Override public void unsubscribe(){\n          if (subscriptionCounter.decrementAndGet() == 0) {\n            scheduleCleanupTask();\n          }\n        }\n        @Override public boolean isUnsubscribed(){\n          return false;\n        }\n      }\n);\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1652,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public ResourceObservable(ResourceLoader<T> loader,Scheduler scheduler,long refreshInterval,long idleTimeout,TimeUnit timeUnit){\n  this.loader=loader;\n  this.scheduler=scheduler;\n  this.refreshInterval=refreshInterval;\n  this.idleTimeout=idleTimeout;\n  this.timeUnit=timeUnit;\n  this.observable=Observable.create(new OnSubscribe<T>(){\n    @Override public void call(    Subscriber<? super T> subscriber){\n      lock.lock();\n      try {\n        if (executor == null) {\n          executor=new ResourceLoaderExecutor();\n          executor.call();\n        }\n        subscriptionCounter.incrementAndGet();\n        for (        T entry : executor.getDataSnapshot()) {\n          subscriber.onNext(entry);\n        }\n        executor.getDataUpdates().subscribe(subscriber);\n      }\n  finally {\n        lock.unlock();\n      }\n      subscriber.add(new Subscription(){\n        @Override public void unsubscribe(){\n          if (subscriptionCounter.decrementAndGet() == 0) {\n            scheduleCleanupTask();\n          }\n        }\n        @Override public boolean isUnsubscribed(){\n          return false;\n        }\n      }\n);\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 170,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 39
      },
      "nodeContext" : "this.idleTimeout=idleTimeout;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 64,
    "startColumnNumber" : 27,
    "endLineNumber" : 64,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}