{
  "id" : 56,
  "expression" : "modulo",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/Others/LinearCongruentialGenerator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "modulo",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 20,
      "startColumnNumber" : 64,
      "endLineNumber" : 20,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 20,
        "startColumnNumber" : 8,
        "endLineNumber" : 20,
        "endColumnNumber" : 72
      },
      "nodeContext" : "this(System.currentTimeMillis(),multiplier,increment,modulo);\n",
      "nodeType" : "ConstructorInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 19,
        "startColumnNumber" : 93,
        "endLineNumber" : 21,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this(System.currentTimeMillis(),multiplier,increment,modulo);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 480,
        "startLineNumber" : 11,
        "startColumnNumber" : 4,
        "endLineNumber" : 21,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * These parameters are saved and used when nextNumber() is called. The current timestamp in milliseconds is used as the seed.\n * @param multiplier\n * @param increment\n * @param modulo The maximum number that can be generated (exclusive). A common value is 2^32.\n */\npublic LinearCongruentialGenerator(double multiplier,double increment,double modulo){\n  this(System.currentTimeMillis(),multiplier,increment,modulo);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 21,
      "astHeight" : 5
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 20,
        "startColumnNumber" : 8,
        "endLineNumber" : 20,
        "endColumnNumber" : 72
      },
      "nodeContext" : "this(System.currentTimeMillis(),multiplier,increment,modulo);\n",
      "nodeType" : "ConstructorInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 20,
    "startColumnNumber" : 64,
    "endLineNumber" : 20,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}