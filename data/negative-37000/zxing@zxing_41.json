{
  "id" : 41,
  "expression" : "denominatorLeadingTerm",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/common/reedsolomon/ReedSolomonDecoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "denominatorLeadingTerm",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 123,
      "startColumnNumber" : 37,
      "endLineNumber" : 123,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 123,
        "startColumnNumber" : 23,
        "endLineNumber" : 123,
        "endColumnNumber" : 60
      },
      "nodeContext" : "field.inverse(denominatorLeadingTerm)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 123,
        "startColumnNumber" : 10,
        "endLineNumber" : 123,
        "endColumnNumber" : 60
      },
      "nodeContext" : "dltInverse=field.inverse(denominatorLeadingTerm)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 123,
        "startColumnNumber" : 6,
        "endLineNumber" : 123,
        "endColumnNumber" : 61
      },
      "nodeContext" : "int dltInverse=field.inverse(denominatorLeadingTerm);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1096,
        "startLineNumber" : 107,
        "startColumnNumber" : 35,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  GenericGFPoly rLastLast=rLast;\n  GenericGFPoly sLastLast=sLast;\n  GenericGFPoly tLastLast=tLast;\n  rLast=r;\n  sLast=s;\n  tLast=t;\n  if (rLast.isZero()) {\n    throw new ReedSolomonException(\"r_{i-1} was zero\");\n  }\n  r=rLastLast;\n  GenericGFPoly q=field.getZero();\n  int denominatorLeadingTerm=rLast.getCoefficient(rLast.getDegree());\n  int dltInverse=field.inverse(denominatorLeadingTerm);\n  while (r.getDegree() >= rLast.getDegree() && !r.isZero()) {\n    int degreeDiff=r.getDegree() - rLast.getDegree();\n    int scale=field.multiply(r.getCoefficient(r.getDegree()),dltInverse);\n    q=q.addOrSubtract(field.buildMonomial(degreeDiff,scale));\n    r=r.addOrSubtract(rLast.multiplyByMonomial(degreeDiff,scale));\n  }\n  s=q.multiply(sLast).addOrSubtract(sLastLast);\n  t=q.multiply(tLast).addOrSubtract(tLastLast);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1127,
        "startLineNumber" : 107,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (r.getDegree() >= R / 2) {\n  GenericGFPoly rLastLast=rLast;\n  GenericGFPoly sLastLast=sLast;\n  GenericGFPoly tLastLast=tLast;\n  rLast=r;\n  sLast=s;\n  tLast=t;\n  if (rLast.isZero()) {\n    throw new ReedSolomonException(\"r_{i-1} was zero\");\n  }\n  r=rLastLast;\n  GenericGFPoly q=field.getZero();\n  int denominatorLeadingTerm=rLast.getCoefficient(rLast.getDegree());\n  int dltInverse=field.inverse(denominatorLeadingTerm);\n  while (r.getDegree() >= rLast.getDegree() && !r.isZero()) {\n    int degreeDiff=r.getDegree() - rLast.getDegree();\n    int scale=field.multiply(r.getCoefficient(r.getDegree()),dltInverse);\n    q=q.addOrSubtract(field.buildMonomial(degreeDiff,scale));\n    r=r.addOrSubtract(rLast.multiplyByMonomial(degreeDiff,scale));\n  }\n  s=q.multiply(sLast).addOrSubtract(sLastLast);\n  t=q.multiply(tLast).addOrSubtract(tLastLast);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 160,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1932,
        "startLineNumber" : 91,
        "startColumnNumber" : 34,
        "endLineNumber" : 144,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (a.getDegree() < b.getDegree()) {\n    GenericGFPoly temp=a;\n    a=b;\n    b=temp;\n  }\n  GenericGFPoly rLast=a;\n  GenericGFPoly r=b;\n  GenericGFPoly sLast=field.getOne();\n  GenericGFPoly s=field.getZero();\n  GenericGFPoly tLast=field.getZero();\n  GenericGFPoly t=field.getOne();\n  while (r.getDegree() >= R / 2) {\n    GenericGFPoly rLastLast=rLast;\n    GenericGFPoly sLastLast=sLast;\n    GenericGFPoly tLastLast=tLast;\n    rLast=r;\n    sLast=s;\n    tLast=t;\n    if (rLast.isZero()) {\n      throw new ReedSolomonException(\"r_{i-1} was zero\");\n    }\n    r=rLastLast;\n    GenericGFPoly q=field.getZero();\n    int denominatorLeadingTerm=rLast.getCoefficient(rLast.getDegree());\n    int dltInverse=field.inverse(denominatorLeadingTerm);\n    while (r.getDegree() >= rLast.getDegree() && !r.isZero()) {\n      int degreeDiff=r.getDegree() - rLast.getDegree();\n      int scale=field.multiply(r.getCoefficient(r.getDegree()),dltInverse);\n      q=q.addOrSubtract(field.buildMonomial(degreeDiff,scale));\n      r=r.addOrSubtract(rLast.multiplyByMonomial(degreeDiff,scale));\n    }\n    s=q.multiply(sLast).addOrSubtract(sLastLast);\n    t=q.multiply(tLast).addOrSubtract(tLastLast);\n  }\n  int sigmaTildeAtZero=t.getCoefficient(0);\n  if (sigmaTildeAtZero == 0) {\n    throw new ReedSolomonException(\"sigmaTilde(0) was zero\");\n  }\n  int inverse=field.inverse(sigmaTildeAtZero);\n  GenericGFPoly sigma=t.multiply(inverse);\n  GenericGFPoly omega=r.multiply(inverse);\n  return new GenericGFPoly[]{sigma,omega};\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 281,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2054,
        "startLineNumber" : 90,
        "startColumnNumber" : 2,
        "endLineNumber" : 144,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private GenericGFPoly[] runEuclideanAlgorithm(GenericGFPoly a,GenericGFPoly b,int R) throws ReedSolomonException {\n  if (a.getDegree() < b.getDegree()) {\n    GenericGFPoly temp=a;\n    a=b;\n    b=temp;\n  }\n  GenericGFPoly rLast=a;\n  GenericGFPoly r=b;\n  GenericGFPoly sLast=field.getOne();\n  GenericGFPoly s=field.getZero();\n  GenericGFPoly tLast=field.getZero();\n  GenericGFPoly t=field.getOne();\n  while (r.getDegree() >= R / 2) {\n    GenericGFPoly rLastLast=rLast;\n    GenericGFPoly sLastLast=sLast;\n    GenericGFPoly tLastLast=tLast;\n    rLast=r;\n    sLast=s;\n    tLast=t;\n    if (rLast.isZero()) {\n      throw new ReedSolomonException(\"r_{i-1} was zero\");\n    }\n    r=rLastLast;\n    GenericGFPoly q=field.getZero();\n    int denominatorLeadingTerm=rLast.getCoefficient(rLast.getDegree());\n    int dltInverse=field.inverse(denominatorLeadingTerm);\n    while (r.getDegree() >= rLast.getDegree() && !r.isZero()) {\n      int degreeDiff=r.getDegree() - rLast.getDegree();\n      int scale=field.multiply(r.getCoefficient(r.getDegree()),dltInverse);\n      q=q.addOrSubtract(field.buildMonomial(degreeDiff,scale));\n      r=r.addOrSubtract(rLast.multiplyByMonomial(degreeDiff,scale));\n    }\n    s=q.multiply(sLast).addOrSubtract(sLastLast);\n    t=q.multiply(tLast).addOrSubtract(tLastLast);\n  }\n  int sigmaTildeAtZero=t.getCoefficient(0);\n  if (sigmaTildeAtZero == 0) {\n    throw new ReedSolomonException(\"sigmaTilde(0) was zero\");\n  }\n  int inverse=field.inverse(sigmaTildeAtZero);\n  GenericGFPoly sigma=t.multiply(inverse);\n  GenericGFPoly omega=r.multiply(inverse);\n  return new GenericGFPoly[]{sigma,omega};\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 301,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 123,
        "startColumnNumber" : 6,
        "endLineNumber" : 123,
        "endColumnNumber" : 61
      },
      "nodeContext" : "int dltInverse=field.inverse(denominatorLeadingTerm);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 123,
    "startColumnNumber" : 37,
    "endLineNumber" : 123,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ ]
}