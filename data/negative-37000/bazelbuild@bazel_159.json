{
  "id" : 159,
  "expression" : "indirectJars",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/java_tools/import_deps_checker/java/com/google/devtools/build/importdeps/ImportDepsChecker.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "indirectJars",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 142,
      "startColumnNumber" : 9,
      "endLineNumber" : 142,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 142,
        "startColumnNumber" : 9,
        "endLineNumber" : 142,
        "endColumnNumber" : 31
      },
      "nodeContext" : "indirectJars.isEmpty()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 142,
        "startColumnNumber" : 8,
        "endLineNumber" : 142,
        "endColumnNumber" : 31
      },
      "nodeContext" : "!indirectJars.isEmpty()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 950,
        "startLineNumber" : 142,
        "startColumnNumber" : 4,
        "endLineNumber" : 163,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!indirectJars.isEmpty()) {\n  ImmutableList<String> labels=extractLabels(indirectJars);\n  if (ruleLabel.isEmpty() || labels.isEmpty()) {\n    builder.append(\"*** Missing strict dependencies on the following Jars which don't carry \" + \"rule labels.\\nPlease determine the originating rules, e.g., using Bazel's \" + \"'query' command, and add them to the dependencies of \").append(ruleLabel.isEmpty() ? inputJars : ruleLabel).append('\\n');\n    for (    Path jar : indirectJars) {\n      builder.append(jar).append('\\n');\n    }\n  }\n else {\n    builder.append(\"*** Command to add missing strict dependencies: ***\\n\\n\");\n    builder.append(\"    add_dep \");\n    for (    String indirectLabel : labels) {\n      builder.append(indirectLabel).append(\" \");\n    }\n    builder.append(ruleLabel).append('\\n');\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 94,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1040,
        "startLineNumber" : 140,
        "startColumnNumber" : 89,
        "endLineNumber" : 164,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ImmutableList<Path> indirectJars=resultCollector.getSortedIndirectDeps();\n  if (!indirectJars.isEmpty()) {\n    ImmutableList<String> labels=extractLabels(indirectJars);\n    if (ruleLabel.isEmpty() || labels.isEmpty()) {\n      builder.append(\"*** Missing strict dependencies on the following Jars which don't carry \" + \"rule labels.\\nPlease determine the originating rules, e.g., using Bazel's \" + \"'query' command, and add them to the dependencies of \").append(ruleLabel.isEmpty() ? inputJars : ruleLabel).append('\\n');\n      for (      Path jar : indirectJars) {\n        builder.append(jar).append('\\n');\n      }\n    }\n else {\n      builder.append(\"*** Command to add missing strict dependencies: ***\\n\\n\");\n      builder.append(\"    add_dep \");\n      for (      String indirectLabel : labels) {\n        builder.append(indirectLabel).append(\" \");\n      }\n      builder.append(ruleLabel).append('\\n');\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1127,
        "startLineNumber" : 140,
        "startColumnNumber" : 2,
        "endLineNumber" : 164,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void emitAddDepCommandForIndirectJars(String ruleLabel,StringBuilder builder){\n  ImmutableList<Path> indirectJars=resultCollector.getSortedIndirectDeps();\n  if (!indirectJars.isEmpty()) {\n    ImmutableList<String> labels=extractLabels(indirectJars);\n    if (ruleLabel.isEmpty() || labels.isEmpty()) {\n      builder.append(\"*** Missing strict dependencies on the following Jars which don't carry \" + \"rule labels.\\nPlease determine the originating rules, e.g., using Bazel's \" + \"'query' command, and add them to the dependencies of \").append(ruleLabel.isEmpty() ? inputJars : ruleLabel).append('\\n');\n      for (      Path jar : indirectJars) {\n        builder.append(jar).append('\\n');\n      }\n    }\n else {\n      builder.append(\"*** Command to add missing strict dependencies: ***\\n\\n\");\n      builder.append(\"    add_dep \");\n      for (      String indirectLabel : labels) {\n        builder.append(indirectLabel).append(\" \");\n      }\n      builder.append(ruleLabel).append('\\n');\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 142,
        "startColumnNumber" : 8,
        "endLineNumber" : 142,
        "endColumnNumber" : 31
      },
      "nodeContext" : "!indirectJars.isEmpty()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.google.devtools.build.importdeps.ImmutableList<java.nio.file.Path>"
  }, {
    "nodeContext" : "indirectJars",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 143,
      "startColumnNumber" : 51,
      "endLineNumber" : 143,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 143,
        "startColumnNumber" : 37,
        "endLineNumber" : 143,
        "endColumnNumber" : 64
      },
      "nodeContext" : "extractLabels(indirectJars)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 143,
        "startColumnNumber" : 28,
        "endLineNumber" : 143,
        "endColumnNumber" : 64
      },
      "nodeContext" : "labels=extractLabels(indirectJars)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 143,
        "startColumnNumber" : 6,
        "endLineNumber" : 143,
        "endColumnNumber" : 65
      },
      "nodeContext" : "ImmutableList<String> labels=extractLabels(indirectJars);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 921,
        "startLineNumber" : 142,
        "startColumnNumber" : 33,
        "endLineNumber" : 163,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ImmutableList<String> labels=extractLabels(indirectJars);\n  if (ruleLabel.isEmpty() || labels.isEmpty()) {\n    builder.append(\"*** Missing strict dependencies on the following Jars which don't carry \" + \"rule labels.\\nPlease determine the originating rules, e.g., using Bazel's \" + \"'query' command, and add them to the dependencies of \").append(ruleLabel.isEmpty() ? inputJars : ruleLabel).append('\\n');\n    for (    Path jar : indirectJars) {\n      builder.append(jar).append('\\n');\n    }\n  }\n else {\n    builder.append(\"*** Command to add missing strict dependencies: ***\\n\\n\");\n    builder.append(\"    add_dep \");\n    for (    String indirectLabel : labels) {\n      builder.append(indirectLabel).append(\" \");\n    }\n    builder.append(ruleLabel).append('\\n');\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 950,
        "startLineNumber" : 142,
        "startColumnNumber" : 4,
        "endLineNumber" : 163,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!indirectJars.isEmpty()) {\n  ImmutableList<String> labels=extractLabels(indirectJars);\n  if (ruleLabel.isEmpty() || labels.isEmpty()) {\n    builder.append(\"*** Missing strict dependencies on the following Jars which don't carry \" + \"rule labels.\\nPlease determine the originating rules, e.g., using Bazel's \" + \"'query' command, and add them to the dependencies of \").append(ruleLabel.isEmpty() ? inputJars : ruleLabel).append('\\n');\n    for (    Path jar : indirectJars) {\n      builder.append(jar).append('\\n');\n    }\n  }\n else {\n    builder.append(\"*** Command to add missing strict dependencies: ***\\n\\n\");\n    builder.append(\"    add_dep \");\n    for (    String indirectLabel : labels) {\n      builder.append(indirectLabel).append(\" \");\n    }\n    builder.append(ruleLabel).append('\\n');\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 94,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1040,
        "startLineNumber" : 140,
        "startColumnNumber" : 89,
        "endLineNumber" : 164,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ImmutableList<Path> indirectJars=resultCollector.getSortedIndirectDeps();\n  if (!indirectJars.isEmpty()) {\n    ImmutableList<String> labels=extractLabels(indirectJars);\n    if (ruleLabel.isEmpty() || labels.isEmpty()) {\n      builder.append(\"*** Missing strict dependencies on the following Jars which don't carry \" + \"rule labels.\\nPlease determine the originating rules, e.g., using Bazel's \" + \"'query' command, and add them to the dependencies of \").append(ruleLabel.isEmpty() ? inputJars : ruleLabel).append('\\n');\n      for (      Path jar : indirectJars) {\n        builder.append(jar).append('\\n');\n      }\n    }\n else {\n      builder.append(\"*** Command to add missing strict dependencies: ***\\n\\n\");\n      builder.append(\"    add_dep \");\n      for (      String indirectLabel : labels) {\n        builder.append(indirectLabel).append(\" \");\n      }\n      builder.append(ruleLabel).append('\\n');\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1127,
        "startLineNumber" : 140,
        "startColumnNumber" : 2,
        "endLineNumber" : 164,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void emitAddDepCommandForIndirectJars(String ruleLabel,StringBuilder builder){\n  ImmutableList<Path> indirectJars=resultCollector.getSortedIndirectDeps();\n  if (!indirectJars.isEmpty()) {\n    ImmutableList<String> labels=extractLabels(indirectJars);\n    if (ruleLabel.isEmpty() || labels.isEmpty()) {\n      builder.append(\"*** Missing strict dependencies on the following Jars which don't carry \" + \"rule labels.\\nPlease determine the originating rules, e.g., using Bazel's \" + \"'query' command, and add them to the dependencies of \").append(ruleLabel.isEmpty() ? inputJars : ruleLabel).append('\\n');\n      for (      Path jar : indirectJars) {\n        builder.append(jar).append('\\n');\n      }\n    }\n else {\n      builder.append(\"*** Command to add missing strict dependencies: ***\\n\\n\");\n      builder.append(\"    add_dep \");\n      for (      String indirectLabel : labels) {\n        builder.append(indirectLabel).append(\" \");\n      }\n      builder.append(ruleLabel).append('\\n');\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 143,
        "startColumnNumber" : 6,
        "endLineNumber" : 143,
        "endColumnNumber" : 65
      },
      "nodeContext" : "ImmutableList<String> labels=extractLabels(indirectJars);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.devtools.build.importdeps.ImmutableList<java.nio.file.Path>"
  }, {
    "nodeContext" : "indirectJars",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 152,
      "startColumnNumber" : 24,
      "endLineNumber" : 152,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 152,
        "startColumnNumber" : 8,
        "endLineNumber" : 154,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Path jar : indirectJars) {\n  builder.append(jar).append('\\n');\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 501,
        "startLineNumber" : 144,
        "startColumnNumber" : 51,
        "endLineNumber" : 155,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  builder.append(\"*** Missing strict dependencies on the following Jars which don't carry \" + \"rule labels.\\nPlease determine the originating rules, e.g., using Bazel's \" + \"'query' command, and add them to the dependencies of \").append(ruleLabel.isEmpty() ? inputJars : ruleLabel).append('\\n');\n  for (  Path jar : indirectJars) {\n    builder.append(jar).append('\\n');\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 841,
        "startLineNumber" : 144,
        "startColumnNumber" : 6,
        "endLineNumber" : 162,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (ruleLabel.isEmpty() || labels.isEmpty()) {\n  builder.append(\"*** Missing strict dependencies on the following Jars which don't carry \" + \"rule labels.\\nPlease determine the originating rules, e.g., using Bazel's \" + \"'query' command, and add them to the dependencies of \").append(ruleLabel.isEmpty() ? inputJars : ruleLabel).append('\\n');\n  for (  Path jar : indirectJars) {\n    builder.append(jar).append('\\n');\n  }\n}\n else {\n  builder.append(\"*** Command to add missing strict dependencies: ***\\n\\n\");\n  builder.append(\"    add_dep \");\n  for (  String indirectLabel : labels) {\n    builder.append(indirectLabel).append(\" \");\n  }\n  builder.append(ruleLabel).append('\\n');\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 77,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 921,
        "startLineNumber" : 142,
        "startColumnNumber" : 33,
        "endLineNumber" : 163,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ImmutableList<String> labels=extractLabels(indirectJars);\n  if (ruleLabel.isEmpty() || labels.isEmpty()) {\n    builder.append(\"*** Missing strict dependencies on the following Jars which don't carry \" + \"rule labels.\\nPlease determine the originating rules, e.g., using Bazel's \" + \"'query' command, and add them to the dependencies of \").append(ruleLabel.isEmpty() ? inputJars : ruleLabel).append('\\n');\n    for (    Path jar : indirectJars) {\n      builder.append(jar).append('\\n');\n    }\n  }\n else {\n    builder.append(\"*** Command to add missing strict dependencies: ***\\n\\n\");\n    builder.append(\"    add_dep \");\n    for (    String indirectLabel : labels) {\n      builder.append(indirectLabel).append(\" \");\n    }\n    builder.append(ruleLabel).append('\\n');\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 950,
        "startLineNumber" : 142,
        "startColumnNumber" : 4,
        "endLineNumber" : 163,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!indirectJars.isEmpty()) {\n  ImmutableList<String> labels=extractLabels(indirectJars);\n  if (ruleLabel.isEmpty() || labels.isEmpty()) {\n    builder.append(\"*** Missing strict dependencies on the following Jars which don't carry \" + \"rule labels.\\nPlease determine the originating rules, e.g., using Bazel's \" + \"'query' command, and add them to the dependencies of \").append(ruleLabel.isEmpty() ? inputJars : ruleLabel).append('\\n');\n    for (    Path jar : indirectJars) {\n      builder.append(jar).append('\\n');\n    }\n  }\n else {\n    builder.append(\"*** Command to add missing strict dependencies: ***\\n\\n\");\n    builder.append(\"    add_dep \");\n    for (    String indirectLabel : labels) {\n      builder.append(indirectLabel).append(\" \");\n    }\n    builder.append(ruleLabel).append('\\n');\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 94,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1040,
        "startLineNumber" : 140,
        "startColumnNumber" : 89,
        "endLineNumber" : 164,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ImmutableList<Path> indirectJars=resultCollector.getSortedIndirectDeps();\n  if (!indirectJars.isEmpty()) {\n    ImmutableList<String> labels=extractLabels(indirectJars);\n    if (ruleLabel.isEmpty() || labels.isEmpty()) {\n      builder.append(\"*** Missing strict dependencies on the following Jars which don't carry \" + \"rule labels.\\nPlease determine the originating rules, e.g., using Bazel's \" + \"'query' command, and add them to the dependencies of \").append(ruleLabel.isEmpty() ? inputJars : ruleLabel).append('\\n');\n      for (      Path jar : indirectJars) {\n        builder.append(jar).append('\\n');\n      }\n    }\n else {\n      builder.append(\"*** Command to add missing strict dependencies: ***\\n\\n\");\n      builder.append(\"    add_dep \");\n      for (      String indirectLabel : labels) {\n        builder.append(indirectLabel).append(\" \");\n      }\n      builder.append(ruleLabel).append('\\n');\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1127,
        "startLineNumber" : 140,
        "startColumnNumber" : 2,
        "endLineNumber" : 164,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void emitAddDepCommandForIndirectJars(String ruleLabel,StringBuilder builder){\n  ImmutableList<Path> indirectJars=resultCollector.getSortedIndirectDeps();\n  if (!indirectJars.isEmpty()) {\n    ImmutableList<String> labels=extractLabels(indirectJars);\n    if (ruleLabel.isEmpty() || labels.isEmpty()) {\n      builder.append(\"*** Missing strict dependencies on the following Jars which don't carry \" + \"rule labels.\\nPlease determine the originating rules, e.g., using Bazel's \" + \"'query' command, and add them to the dependencies of \").append(ruleLabel.isEmpty() ? inputJars : ruleLabel).append('\\n');\n      for (      Path jar : indirectJars) {\n        builder.append(jar).append('\\n');\n      }\n    }\n else {\n      builder.append(\"*** Command to add missing strict dependencies: ***\\n\\n\");\n      builder.append(\"    add_dep \");\n      for (      String indirectLabel : labels) {\n        builder.append(indirectLabel).append(\" \");\n      }\n      builder.append(ruleLabel).append('\\n');\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 152,
        "startColumnNumber" : 8,
        "endLineNumber" : 154,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Path jar : indirectJars) {\n  builder.append(jar).append('\\n');\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "com.google.devtools.build.importdeps.ImmutableList<java.nio.file.Path>"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 142,
    "startColumnNumber" : 9,
    "endLineNumber" : 142,
    "endColumnNumber" : 21
  }, {
    "charLength" : 12,
    "startLineNumber" : 143,
    "startColumnNumber" : 51,
    "endLineNumber" : 143,
    "endColumnNumber" : 63
  }, {
    "charLength" : 12,
    "startLineNumber" : 152,
    "startColumnNumber" : 24,
    "endLineNumber" : 152,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}