{
  "id" : 234,
  "expression" : "\"Expected [\" + targetName + \"] to be on fire after colliding with [\"+ otherName+ \"] but it was not!\"",
  "projectName" : "iluwatar@java-design-patterns",
  "commitID" : "428efc7d53449a51d25dfda4141742629ecbb0b2",
  "filePath" : "/double-dispatch/src/test/java/com/iluwatar/doubledispatch/CollisionTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Expected [\" + targetName + \"] to be on fire after colliding with [\"+ otherName+ \"] but it was not!\"",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 102,
      "startLineNumber" : 86,
      "startColumnNumber" : 10,
      "endLineNumber" : 86,
      "endColumnNumber" : 112
    },
    "astNodeNumber" : 6,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 244,
        "startLineNumber" : 85,
        "startColumnNumber" : 29,
        "endLineNumber" : 87,
        "endColumnNumber" : 112
      },
      "nodeContext" : "expectTargetOnFire ? \"Expected [\" + targetName + \"] to be on fire after colliding with [\"+ otherName+ \"] but it was not!\" : \"Expected [\" + targetName + \"] not to be on fire after colliding with [\"+ otherName+ \"] but it was!\"",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 14,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 259,
        "startLineNumber" : 85,
        "startColumnNumber" : 14,
        "endLineNumber" : 87,
        "endColumnNumber" : 112
      },
      "nodeContext" : "errorMessage=expectTargetOnFire ? \"Expected [\" + targetName + \"] to be on fire after colliding with [\"+ otherName+ \"] but it was not!\" : \"Expected [\" + targetName + \"] not to be on fire after colliding with [\"+ otherName+ \"] but it was!\"",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 270,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 87,
        "endColumnNumber" : 113
      },
      "nodeContext" : "final var errorMessage=expectTargetOnFire ? \"Expected [\" + targetName + \"] to be on fire after colliding with [\"+ otherName+ \"] but it was not!\" : \"Expected [\" + targetName + \"] not to be on fire after colliding with [\"+ otherName+ \"] but it was!\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 475,
        "startLineNumber" : 81,
        "startColumnNumber" : 109,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final var targetName=target.getClass().getSimpleName();\n  final var otherName=other.getClass().getSimpleName();\n  final var errorMessage=expectTargetOnFire ? \"Expected [\" + targetName + \"] to be on fire after colliding with [\"+ otherName+ \"] but it was not!\" : \"Expected [\" + targetName + \"] not to be on fire after colliding with [\"+ otherName+ \"] but it was!\";\n  assertEquals(expectTargetOnFire,target.isOnFire(),errorMessage);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 887,
        "startLineNumber" : 73,
        "startColumnNumber" : 2,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Test if the fire state of the target matches the expected state after colliding with the given object\n * @param target             The target object\n * @param other              The other object\n * @param expectTargetOnFire The expected state of fire on the target object\n */\nprivate void testOnFire(final GameObject target,final GameObject other,final boolean expectTargetOnFire){\n  final var targetName=target.getClass().getSimpleName();\n  final var otherName=other.getClass().getSimpleName();\n  final var errorMessage=expectTargetOnFire ? \"Expected [\" + targetName + \"] to be on fire after colliding with [\"+ otherName+ \"] but it was not!\" : \"Expected [\" + targetName + \"] not to be on fire after colliding with [\"+ otherName+ \"] but it was!\";\n  assertEquals(expectTargetOnFire,target.isOnFire(),errorMessage);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 70,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 244,
        "startLineNumber" : 85,
        "startColumnNumber" : 29,
        "endLineNumber" : 87,
        "endColumnNumber" : 112
      },
      "nodeContext" : "expectTargetOnFire ? \"Expected [\" + targetName + \"] to be on fire after colliding with [\"+ otherName+ \"] but it was not!\" : \"Expected [\" + targetName + \"] not to be on fire after colliding with [\"+ otherName+ \"] but it was!\"",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 14,
      "astHeight" : 3
    },
    "tokenLength" : 17,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 102,
    "startLineNumber" : 86,
    "startColumnNumber" : 10,
    "endLineNumber" : 86,
    "endColumnNumber" : 112
  } ],
  "layoutRelationDataList" : [ ]
}