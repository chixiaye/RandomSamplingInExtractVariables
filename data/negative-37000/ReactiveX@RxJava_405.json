{
  "id" : 405,
  "expression" : "Schedulers",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/observable/ObservableCacheTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Schedulers",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 140,
      "startColumnNumber" : 29,
      "endLineNumber" : 140,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 140,
        "startColumnNumber" : 29,
        "endLineNumber" : 140,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Schedulers.computation()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 140,
        "startColumnNumber" : 12,
        "endLineNumber" : 140,
        "endColumnNumber" : 54
      },
      "nodeContext" : "cached.observeOn(Schedulers.computation())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 140,
        "startColumnNumber" : 12,
        "endLineNumber" : 140,
        "endColumnNumber" : 69
      },
      "nodeContext" : "cached.observeOn(Schedulers.computation()).subscribe(ts1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 140,
        "startColumnNumber" : 12,
        "endLineNumber" : 140,
        "endColumnNumber" : 70
      },
      "nodeContext" : "cached.observeOn(Schedulers.computation()).subscribe(ts1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 809,
        "startLineNumber" : 135,
        "startColumnNumber" : 38,
        "endLineNumber" : 154,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  TestObserver<Integer> ts1=new TestObserver<Integer>();\n  ObservableCache<Integer> cached=ObservableCache.from(source);\n  cached.observeOn(Schedulers.computation()).subscribe(ts1);\n  ts1.awaitTerminalEvent(2,TimeUnit.SECONDS);\n  ts1.assertNoErrors();\n  ts1.assertComplete();\n  assertEquals(10000,ts1.values().size());\n  TestObserver<Integer> ts2=new TestObserver<Integer>();\n  cached.observeOn(Schedulers.computation()).subscribe(ts2);\n  ts2.awaitTerminalEvent(2,TimeUnit.SECONDS);\n  ts2.assertNoErrors();\n  ts2.assertComplete();\n  assertEquals(10000,ts2.values().size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 839,
        "startLineNumber" : 135,
        "startColumnNumber" : 8,
        "endLineNumber" : 154,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 100; i++) {\n  TestObserver<Integer> ts1=new TestObserver<Integer>();\n  ObservableCache<Integer> cached=ObservableCache.from(source);\n  cached.observeOn(Schedulers.computation()).subscribe(ts1);\n  ts1.awaitTerminalEvent(2,TimeUnit.SECONDS);\n  ts1.assertNoErrors();\n  ts1.assertComplete();\n  assertEquals(10000,ts1.values().size());\n  TestObserver<Integer> ts2=new TestObserver<Integer>();\n  cached.observeOn(Schedulers.computation()).subscribe(ts2);\n  ts2.awaitTerminalEvent(2,TimeUnit.SECONDS);\n  ts2.assertNoErrors();\n  ts2.assertComplete();\n  assertEquals(10000,ts2.values().size());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 122,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 923,
        "startLineNumber" : 133,
        "startColumnNumber" : 28,
        "endLineNumber" : 155,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Observable<Integer> source=Observable.range(1,10000);\n  for (int i=0; i < 100; i++) {\n    TestObserver<Integer> ts1=new TestObserver<Integer>();\n    ObservableCache<Integer> cached=ObservableCache.from(source);\n    cached.observeOn(Schedulers.computation()).subscribe(ts1);\n    ts1.awaitTerminalEvent(2,TimeUnit.SECONDS);\n    ts1.assertNoErrors();\n    ts1.assertComplete();\n    assertEquals(10000,ts1.values().size());\n    TestObserver<Integer> ts2=new TestObserver<Integer>();\n    cached.observeOn(Schedulers.computation()).subscribe(ts2);\n    ts2.awaitTerminalEvent(2,TimeUnit.SECONDS);\n    ts2.assertNoErrors();\n    ts2.assertComplete();\n    assertEquals(10000,ts2.values().size());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 958,
        "startLineNumber" : 132,
        "startColumnNumber" : 4,
        "endLineNumber" : 155,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testAsync(){\n  Observable<Integer> source=Observable.range(1,10000);\n  for (int i=0; i < 100; i++) {\n    TestObserver<Integer> ts1=new TestObserver<Integer>();\n    ObservableCache<Integer> cached=ObservableCache.from(source);\n    cached.observeOn(Schedulers.computation()).subscribe(ts1);\n    ts1.awaitTerminalEvent(2,TimeUnit.SECONDS);\n    ts1.assertNoErrors();\n    ts1.assertComplete();\n    assertEquals(10000,ts1.values().size());\n    TestObserver<Integer> ts2=new TestObserver<Integer>();\n    cached.observeOn(Schedulers.computation()).subscribe(ts2);\n    ts2.awaitTerminalEvent(2,TimeUnit.SECONDS);\n    ts2.assertNoErrors();\n    ts2.assertComplete();\n    assertEquals(10000,ts2.values().size());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 142,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 140,
        "startColumnNumber" : 12,
        "endLineNumber" : 140,
        "endColumnNumber" : 70
      },
      "nodeContext" : "cached.observeOn(Schedulers.computation()).subscribe(ts1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.schedulers.Schedulers"
  }, {
    "nodeContext" : "Schedulers",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 148,
      "startColumnNumber" : 29,
      "endLineNumber" : 148,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 148,
        "startColumnNumber" : 29,
        "endLineNumber" : 148,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Schedulers.computation()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 148,
        "startColumnNumber" : 12,
        "endLineNumber" : 148,
        "endColumnNumber" : 54
      },
      "nodeContext" : "cached.observeOn(Schedulers.computation())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 148,
        "startColumnNumber" : 12,
        "endLineNumber" : 148,
        "endColumnNumber" : 69
      },
      "nodeContext" : "cached.observeOn(Schedulers.computation()).subscribe(ts2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 148,
        "startColumnNumber" : 12,
        "endLineNumber" : 148,
        "endColumnNumber" : 70
      },
      "nodeContext" : "cached.observeOn(Schedulers.computation()).subscribe(ts2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 809,
        "startLineNumber" : 135,
        "startColumnNumber" : 38,
        "endLineNumber" : 154,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  TestObserver<Integer> ts1=new TestObserver<Integer>();\n  ObservableCache<Integer> cached=ObservableCache.from(source);\n  cached.observeOn(Schedulers.computation()).subscribe(ts1);\n  ts1.awaitTerminalEvent(2,TimeUnit.SECONDS);\n  ts1.assertNoErrors();\n  ts1.assertComplete();\n  assertEquals(10000,ts1.values().size());\n  TestObserver<Integer> ts2=new TestObserver<Integer>();\n  cached.observeOn(Schedulers.computation()).subscribe(ts2);\n  ts2.awaitTerminalEvent(2,TimeUnit.SECONDS);\n  ts2.assertNoErrors();\n  ts2.assertComplete();\n  assertEquals(10000,ts2.values().size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 839,
        "startLineNumber" : 135,
        "startColumnNumber" : 8,
        "endLineNumber" : 154,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 100; i++) {\n  TestObserver<Integer> ts1=new TestObserver<Integer>();\n  ObservableCache<Integer> cached=ObservableCache.from(source);\n  cached.observeOn(Schedulers.computation()).subscribe(ts1);\n  ts1.awaitTerminalEvent(2,TimeUnit.SECONDS);\n  ts1.assertNoErrors();\n  ts1.assertComplete();\n  assertEquals(10000,ts1.values().size());\n  TestObserver<Integer> ts2=new TestObserver<Integer>();\n  cached.observeOn(Schedulers.computation()).subscribe(ts2);\n  ts2.awaitTerminalEvent(2,TimeUnit.SECONDS);\n  ts2.assertNoErrors();\n  ts2.assertComplete();\n  assertEquals(10000,ts2.values().size());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 122,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 923,
        "startLineNumber" : 133,
        "startColumnNumber" : 28,
        "endLineNumber" : 155,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Observable<Integer> source=Observable.range(1,10000);\n  for (int i=0; i < 100; i++) {\n    TestObserver<Integer> ts1=new TestObserver<Integer>();\n    ObservableCache<Integer> cached=ObservableCache.from(source);\n    cached.observeOn(Schedulers.computation()).subscribe(ts1);\n    ts1.awaitTerminalEvent(2,TimeUnit.SECONDS);\n    ts1.assertNoErrors();\n    ts1.assertComplete();\n    assertEquals(10000,ts1.values().size());\n    TestObserver<Integer> ts2=new TestObserver<Integer>();\n    cached.observeOn(Schedulers.computation()).subscribe(ts2);\n    ts2.awaitTerminalEvent(2,TimeUnit.SECONDS);\n    ts2.assertNoErrors();\n    ts2.assertComplete();\n    assertEquals(10000,ts2.values().size());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 958,
        "startLineNumber" : 132,
        "startColumnNumber" : 4,
        "endLineNumber" : 155,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testAsync(){\n  Observable<Integer> source=Observable.range(1,10000);\n  for (int i=0; i < 100; i++) {\n    TestObserver<Integer> ts1=new TestObserver<Integer>();\n    ObservableCache<Integer> cached=ObservableCache.from(source);\n    cached.observeOn(Schedulers.computation()).subscribe(ts1);\n    ts1.awaitTerminalEvent(2,TimeUnit.SECONDS);\n    ts1.assertNoErrors();\n    ts1.assertComplete();\n    assertEquals(10000,ts1.values().size());\n    TestObserver<Integer> ts2=new TestObserver<Integer>();\n    cached.observeOn(Schedulers.computation()).subscribe(ts2);\n    ts2.awaitTerminalEvent(2,TimeUnit.SECONDS);\n    ts2.assertNoErrors();\n    ts2.assertComplete();\n    assertEquals(10000,ts2.values().size());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 142,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 148,
        "startColumnNumber" : 12,
        "endLineNumber" : 148,
        "endColumnNumber" : 70
      },
      "nodeContext" : "cached.observeOn(Schedulers.computation()).subscribe(ts2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.schedulers.Schedulers"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 140,
    "startColumnNumber" : 29,
    "endLineNumber" : 140,
    "endColumnNumber" : 39
  }, {
    "charLength" : 10,
    "startLineNumber" : 148,
    "startColumnNumber" : 29,
    "endLineNumber" : 148,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}