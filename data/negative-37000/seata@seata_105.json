{
  "id" : 105,
  "expression" : "\"a\"",
  "projectName" : "seata@seata",
  "commitID" : "42d41623178ab076b11b27a0f049ac3ed7f1a9dc",
  "filePath" : "/common/src/test/java/io/seata/common/util/StringUtilsTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"a\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 82,
      "startColumnNumber" : 59,
      "endLineNumber" : 82,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 82,
        "startColumnNumber" : 30,
        "endLineNumber" : 82,
        "endColumnNumber" : 68
      },
      "nodeContext" : "StringUtils.equalsIgnoreCase(\"a\",\"a\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"a\",\"a\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"a\",\"a\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 582,
        "startLineNumber" : 81,
        "startColumnNumber" : 32,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"a\",\"a\"));\n  Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"a\",\"A\"));\n  Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"A\",\"a\"));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(\"1\",\"2\"));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(null,\"1\"));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(\"1\",null));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(\"\",null));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(null,\"\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 620,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test void testEqualsIgnoreCase(){\n  Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"a\",\"a\"));\n  Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"a\",\"A\"));\n  Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"A\",\"a\"));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(\"1\",\"2\"));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(null,\"1\"));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(\"1\",null));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(\"\",null));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(null,\"\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 78,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"a\",\"a\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"a\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 82,
      "startColumnNumber" : 64,
      "endLineNumber" : 82,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 82,
        "startColumnNumber" : 30,
        "endLineNumber" : 82,
        "endColumnNumber" : 68
      },
      "nodeContext" : "StringUtils.equalsIgnoreCase(\"a\",\"a\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"a\",\"a\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"a\",\"a\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 582,
        "startLineNumber" : 81,
        "startColumnNumber" : 32,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"a\",\"a\"));\n  Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"a\",\"A\"));\n  Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"A\",\"a\"));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(\"1\",\"2\"));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(null,\"1\"));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(\"1\",null));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(\"\",null));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(null,\"\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 620,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test void testEqualsIgnoreCase(){\n  Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"a\",\"a\"));\n  Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"a\",\"A\"));\n  Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"A\",\"a\"));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(\"1\",\"2\"));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(null,\"1\"));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(\"1\",null));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(\"\",null));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(null,\"\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 78,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"a\",\"a\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"a\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 83,
      "startColumnNumber" : 59,
      "endLineNumber" : 83,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 83,
        "startColumnNumber" : 30,
        "endLineNumber" : 83,
        "endColumnNumber" : 68
      },
      "nodeContext" : "StringUtils.equalsIgnoreCase(\"a\",\"A\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 83,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"a\",\"A\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 83,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"a\",\"A\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 582,
        "startLineNumber" : 81,
        "startColumnNumber" : 32,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"a\",\"a\"));\n  Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"a\",\"A\"));\n  Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"A\",\"a\"));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(\"1\",\"2\"));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(null,\"1\"));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(\"1\",null));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(\"\",null));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(null,\"\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 620,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test void testEqualsIgnoreCase(){\n  Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"a\",\"a\"));\n  Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"a\",\"A\"));\n  Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"A\",\"a\"));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(\"1\",\"2\"));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(null,\"1\"));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(\"1\",null));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(\"\",null));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(null,\"\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 78,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 83,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"a\",\"A\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"a\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 84,
      "startColumnNumber" : 64,
      "endLineNumber" : 84,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 84,
        "startColumnNumber" : 30,
        "endLineNumber" : 84,
        "endColumnNumber" : 68
      },
      "nodeContext" : "StringUtils.equalsIgnoreCase(\"A\",\"a\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"A\",\"a\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"A\",\"a\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 582,
        "startLineNumber" : 81,
        "startColumnNumber" : 32,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"a\",\"a\"));\n  Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"a\",\"A\"));\n  Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"A\",\"a\"));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(\"1\",\"2\"));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(null,\"1\"));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(\"1\",null));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(\"\",null));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(null,\"\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 620,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test void testEqualsIgnoreCase(){\n  Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"a\",\"a\"));\n  Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"a\",\"A\"));\n  Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"A\",\"a\"));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(\"1\",\"2\"));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(null,\"1\"));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(\"1\",null));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(\"\",null));\n  Assertions.assertFalse(StringUtils.equalsIgnoreCase(null,\"\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 78,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Assertions.assertTrue(StringUtils.equalsIgnoreCase(\"A\",\"a\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 82,
    "startColumnNumber" : 59,
    "endLineNumber" : 82,
    "endColumnNumber" : 62
  }, {
    "charLength" : 3,
    "startLineNumber" : 82,
    "startColumnNumber" : 64,
    "endLineNumber" : 82,
    "endColumnNumber" : 67
  }, {
    "charLength" : 3,
    "startLineNumber" : 83,
    "startColumnNumber" : 59,
    "endLineNumber" : 83,
    "endColumnNumber" : 62
  }, {
    "charLength" : 3,
    "startLineNumber" : 84,
    "startColumnNumber" : 64,
    "endLineNumber" : 84,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}