{
  "id" : 249,
  "expression" : "specSize",
  "projectName" : "android-hacker@VirtualXposed",
  "commitID" : "8e98dd20e6a751089d4eb2642fa6bf088a3e7a79",
  "filePath" : "/VirtualApp/app/src/main/java/io/virtualapp/widgets/LabelView.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "specSize",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 280,
      "startColumnNumber" : 21,
      "endLineNumber" : 280,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 280,
        "startColumnNumber" : 12,
        "endLineNumber" : 280,
        "endColumnNumber" : 29
      },
      "nodeContext" : "result=specSize",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 280,
        "startColumnNumber" : 12,
        "endLineNumber" : 280,
        "endColumnNumber" : 30
      },
      "nodeContext" : "result=specSize;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 279,
        "startColumnNumber" : 45,
        "endLineNumber" : 281,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  result=specSize;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 647,
        "startLineNumber" : 279,
        "startColumnNumber" : 8,
        "endLineNumber" : 293,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (specMode == MeasureSpec.EXACTLY) {\n  result=specSize;\n}\n else {\n  int padding=getPaddingLeft() + getPaddingRight();\n  mTextPaint.setColor(mTextColor);\n  mTextPaint.setTextSize(mTextSize);\n  float textWidth=mTextPaint.measureText(mTextContent + \"\");\n  result=(int)((padding + (int)textWidth) * Math.sqrt(2));\n  if (specMode == MeasureSpec.AT_MOST) {\n    result=Math.min(result,specSize);\n  }\n  result=Math.max((int)mMinSize,result);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 83,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 831,
        "startLineNumber" : 275,
        "startColumnNumber" : 51,
        "endLineNumber" : 296,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int result;\n  int specMode=MeasureSpec.getMode(widthMeasureSpec);\n  int specSize=MeasureSpec.getSize(widthMeasureSpec);\n  if (specMode == MeasureSpec.EXACTLY) {\n    result=specSize;\n  }\n else {\n    int padding=getPaddingLeft() + getPaddingRight();\n    mTextPaint.setColor(mTextColor);\n    mTextPaint.setTextSize(mTextSize);\n    float textWidth=mTextPaint.measureText(mTextContent + \"\");\n    result=(int)((padding + (int)textWidth) * Math.sqrt(2));\n    if (specMode == MeasureSpec.AT_MOST) {\n      result=Math.min(result,specSize);\n    }\n    result=Math.max((int)mMinSize,result);\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 912,
        "startLineNumber" : 272,
        "startColumnNumber" : 4,
        "endLineNumber" : 296,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 确定View宽度大小\n */\nprivate int measureWidth(int widthMeasureSpec){\n  int result;\n  int specMode=MeasureSpec.getMode(widthMeasureSpec);\n  int specSize=MeasureSpec.getSize(widthMeasureSpec);\n  if (specMode == MeasureSpec.EXACTLY) {\n    result=specSize;\n  }\n else {\n    int padding=getPaddingLeft() + getPaddingRight();\n    mTextPaint.setColor(mTextColor);\n    mTextPaint.setTextSize(mTextSize);\n    float textWidth=mTextPaint.measureText(mTextContent + \"\");\n    result=(int)((padding + (int)textWidth) * Math.sqrt(2));\n    if (specMode == MeasureSpec.AT_MOST) {\n      result=Math.min(result,specSize);\n    }\n    result=Math.max((int)mMinSize,result);\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 114,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 280,
        "startColumnNumber" : 12,
        "endLineNumber" : 280,
        "endColumnNumber" : 30
      },
      "nodeContext" : "result=specSize;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "specSize",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 289,
      "startColumnNumber" : 42,
      "endLineNumber" : 289,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 289,
        "startColumnNumber" : 25,
        "endLineNumber" : 289,
        "endColumnNumber" : 51
      },
      "nodeContext" : "Math.min(result,specSize)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 289,
        "startColumnNumber" : 16,
        "endLineNumber" : 289,
        "endColumnNumber" : 51
      },
      "nodeContext" : "result=Math.min(result,specSize)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 289,
        "startColumnNumber" : 16,
        "endLineNumber" : 289,
        "endColumnNumber" : 52
      },
      "nodeContext" : "result=Math.min(result,specSize);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 288,
        "startColumnNumber" : 49,
        "endLineNumber" : 290,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  result=Math.min(result,specSize);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 288,
        "startColumnNumber" : 12,
        "endLineNumber" : 290,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (specMode == MeasureSpec.AT_MOST) {\n  result=Math.min(result,specSize);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 552,
        "startLineNumber" : 281,
        "startColumnNumber" : 15,
        "endLineNumber" : 293,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int padding=getPaddingLeft() + getPaddingRight();\n  mTextPaint.setColor(mTextColor);\n  mTextPaint.setTextSize(mTextSize);\n  float textWidth=mTextPaint.measureText(mTextContent + \"\");\n  result=(int)((padding + (int)textWidth) * Math.sqrt(2));\n  if (specMode == MeasureSpec.AT_MOST) {\n    result=Math.min(result,specSize);\n  }\n  result=Math.max((int)mMinSize,result);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 647,
        "startLineNumber" : 279,
        "startColumnNumber" : 8,
        "endLineNumber" : 293,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (specMode == MeasureSpec.EXACTLY) {\n  result=specSize;\n}\n else {\n  int padding=getPaddingLeft() + getPaddingRight();\n  mTextPaint.setColor(mTextColor);\n  mTextPaint.setTextSize(mTextSize);\n  float textWidth=mTextPaint.measureText(mTextContent + \"\");\n  result=(int)((padding + (int)textWidth) * Math.sqrt(2));\n  if (specMode == MeasureSpec.AT_MOST) {\n    result=Math.min(result,specSize);\n  }\n  result=Math.max((int)mMinSize,result);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 83,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 831,
        "startLineNumber" : 275,
        "startColumnNumber" : 51,
        "endLineNumber" : 296,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int result;\n  int specMode=MeasureSpec.getMode(widthMeasureSpec);\n  int specSize=MeasureSpec.getSize(widthMeasureSpec);\n  if (specMode == MeasureSpec.EXACTLY) {\n    result=specSize;\n  }\n else {\n    int padding=getPaddingLeft() + getPaddingRight();\n    mTextPaint.setColor(mTextColor);\n    mTextPaint.setTextSize(mTextSize);\n    float textWidth=mTextPaint.measureText(mTextContent + \"\");\n    result=(int)((padding + (int)textWidth) * Math.sqrt(2));\n    if (specMode == MeasureSpec.AT_MOST) {\n      result=Math.min(result,specSize);\n    }\n    result=Math.max((int)mMinSize,result);\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 912,
        "startLineNumber" : 272,
        "startColumnNumber" : 4,
        "endLineNumber" : 296,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 确定View宽度大小\n */\nprivate int measureWidth(int widthMeasureSpec){\n  int result;\n  int specMode=MeasureSpec.getMode(widthMeasureSpec);\n  int specSize=MeasureSpec.getSize(widthMeasureSpec);\n  if (specMode == MeasureSpec.EXACTLY) {\n    result=specSize;\n  }\n else {\n    int padding=getPaddingLeft() + getPaddingRight();\n    mTextPaint.setColor(mTextColor);\n    mTextPaint.setTextSize(mTextSize);\n    float textWidth=mTextPaint.measureText(mTextContent + \"\");\n    result=(int)((padding + (int)textWidth) * Math.sqrt(2));\n    if (specMode == MeasureSpec.AT_MOST) {\n      result=Math.min(result,specSize);\n    }\n    result=Math.max((int)mMinSize,result);\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 114,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 289,
        "startColumnNumber" : 16,
        "endLineNumber" : 289,
        "endColumnNumber" : 52
      },
      "nodeContext" : "result=Math.min(result,specSize);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 280,
    "startColumnNumber" : 21,
    "endLineNumber" : 280,
    "endColumnNumber" : 29
  }, {
    "charLength" : 8,
    "startLineNumber" : 289,
    "startColumnNumber" : 42,
    "endLineNumber" : 289,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  } ]
}