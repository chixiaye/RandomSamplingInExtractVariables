{
  "id" : 191,
  "expression" : "StandardAllocationTypes",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/buffer/src/main/java/io/netty/buffer/api/bytebuffer/ByteBufferMemoryManager.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "StandardAllocationTypes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 37,
      "startColumnNumber" : 30,
      "endLineNumber" : 37,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 37,
        "startColumnNumber" : 30,
        "endLineNumber" : 37,
        "endColumnNumber" : 62
      },
      "nodeContext" : "StandardAllocationTypes.OFF_HEAP",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 37,
        "startColumnNumber" : 12,
        "endLineNumber" : 37,
        "endColumnNumber" : 62
      },
      "nodeContext" : "allocationType == StandardAllocationTypes.OFF_HEAP",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (allocationType == StandardAllocationTypes.OFF_HEAP) {\n  buffer=ByteBuffer.allocateDirect(capacity);\n}\n else if (allocationType == StandardAllocationTypes.ON_HEAP) {\n  buffer=ByteBuffer.allocate(capacity);\n}\n else {\n  throw new IllegalArgumentException(\"Unknown allocation type: \" + allocationType);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 527,
        "startLineNumber" : 34,
        "startColumnNumber" : 64,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int capacity=Math.toIntExact(size);\n  final ByteBuffer buffer;\n  if (allocationType == StandardAllocationTypes.OFF_HEAP) {\n    buffer=ByteBuffer.allocateDirect(capacity);\n  }\n else   if (allocationType == StandardAllocationTypes.ON_HEAP) {\n    buffer=ByteBuffer.allocate(capacity);\n  }\n else {\n    throw new IllegalArgumentException(\"Unknown allocation type: \" + allocationType);\n  }\n  return createBuffer(buffer,allocatorControl,drop);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 701,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Buffer allocateShared(AllocatorControl allocatorControl,long size,Drop<Buffer> drop,AllocationType allocationType){\n  int capacity=Math.toIntExact(size);\n  final ByteBuffer buffer;\n  if (allocationType == StandardAllocationTypes.OFF_HEAP) {\n    buffer=ByteBuffer.allocateDirect(capacity);\n  }\n else   if (allocationType == StandardAllocationTypes.ON_HEAP) {\n    buffer=ByteBuffer.allocate(capacity);\n  }\n else {\n    throw new IllegalArgumentException(\"Unknown allocation type: \" + allocationType);\n  }\n  return createBuffer(buffer,allocatorControl,drop);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 82,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 37,
        "startColumnNumber" : 12,
        "endLineNumber" : 37,
        "endColumnNumber" : 62
      },
      "nodeContext" : "allocationType == StandardAllocationTypes.OFF_HEAP",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.netty.buffer.api.StandardAllocationTypes"
  }, {
    "nodeContext" : "StandardAllocationTypes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 39,
      "startColumnNumber" : 37,
      "endLineNumber" : 39,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 39,
        "startColumnNumber" : 37,
        "endLineNumber" : 39,
        "endColumnNumber" : 68
      },
      "nodeContext" : "StandardAllocationTypes.ON_HEAP",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 39,
        "startColumnNumber" : 19,
        "endLineNumber" : 39,
        "endColumnNumber" : 68
      },
      "nodeContext" : "allocationType == StandardAllocationTypes.ON_HEAP",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 233,
        "startLineNumber" : 39,
        "startColumnNumber" : 15,
        "endLineNumber" : 43,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (allocationType == StandardAllocationTypes.ON_HEAP) {\n  buffer=ByteBuffer.allocate(capacity);\n}\n else {\n  throw new IllegalArgumentException(\"Unknown allocation type: \" + allocationType);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (allocationType == StandardAllocationTypes.OFF_HEAP) {\n  buffer=ByteBuffer.allocateDirect(capacity);\n}\n else if (allocationType == StandardAllocationTypes.ON_HEAP) {\n  buffer=ByteBuffer.allocate(capacity);\n}\n else {\n  throw new IllegalArgumentException(\"Unknown allocation type: \" + allocationType);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 527,
        "startLineNumber" : 34,
        "startColumnNumber" : 64,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int capacity=Math.toIntExact(size);\n  final ByteBuffer buffer;\n  if (allocationType == StandardAllocationTypes.OFF_HEAP) {\n    buffer=ByteBuffer.allocateDirect(capacity);\n  }\n else   if (allocationType == StandardAllocationTypes.ON_HEAP) {\n    buffer=ByteBuffer.allocate(capacity);\n  }\n else {\n    throw new IllegalArgumentException(\"Unknown allocation type: \" + allocationType);\n  }\n  return createBuffer(buffer,allocatorControl,drop);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 701,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Buffer allocateShared(AllocatorControl allocatorControl,long size,Drop<Buffer> drop,AllocationType allocationType){\n  int capacity=Math.toIntExact(size);\n  final ByteBuffer buffer;\n  if (allocationType == StandardAllocationTypes.OFF_HEAP) {\n    buffer=ByteBuffer.allocateDirect(capacity);\n  }\n else   if (allocationType == StandardAllocationTypes.ON_HEAP) {\n    buffer=ByteBuffer.allocate(capacity);\n  }\n else {\n    throw new IllegalArgumentException(\"Unknown allocation type: \" + allocationType);\n  }\n  return createBuffer(buffer,allocatorControl,drop);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 82,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 39,
        "startColumnNumber" : 19,
        "endLineNumber" : 39,
        "endColumnNumber" : 68
      },
      "nodeContext" : "allocationType == StandardAllocationTypes.ON_HEAP",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.netty.buffer.api.StandardAllocationTypes"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 37,
    "startColumnNumber" : 30,
    "endLineNumber" : 37,
    "endColumnNumber" : 53
  }, {
    "charLength" : 23,
    "startLineNumber" : 39,
    "startColumnNumber" : 37,
    "endLineNumber" : 39,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}