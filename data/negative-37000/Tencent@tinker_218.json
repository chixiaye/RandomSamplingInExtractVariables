{
  "id" : 218,
  "expression" : "0x80",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/third-party/aosp-dexutils/src/main/java/com/tencent/tinker/android/dex/Leb128.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0x80",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 96,
      "startColumnNumber" : 25,
      "endLineNumber" : 96,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 96,
        "startColumnNumber" : 19,
        "endLineNumber" : 96,
        "endColumnNumber" : 29
      },
      "nodeContext" : "cur & 0x80",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 96,
        "startColumnNumber" : 18,
        "endLineNumber" : 96,
        "endColumnNumber" : 30
      },
      "nodeContext" : "(cur & 0x80)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 96,
        "startColumnNumber" : 18,
        "endLineNumber" : 96,
        "endColumnNumber" : 38
      },
      "nodeContext" : "(cur & 0x80) == 0x80",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 96,
        "startColumnNumber" : 17,
        "endLineNumber" : 96,
        "endColumnNumber" : 39
      },
      "nodeContext" : "((cur & 0x80) == 0x80)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.DoStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 96,
        "startColumnNumber" : 17,
        "endLineNumber" : 96,
        "endColumnNumber" : 52
      },
      "nodeContext" : "((cur & 0x80) == 0x80) && count < 5",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 54
      },
      "nodeContext" : "do {\n  cur=in.readByte() & 0xff;\n  result|=(cur & 0x7f) << (count * 7);\n  signBits<<=7;\n  count++;\n}\n while (((cur & 0x80) == 0x80) && count < 5);\n",
      "nodeType" : "DoStatement",
      "astNodeNumber" : 40,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 569,
        "startLineNumber" : 85,
        "startColumnNumber" : 53,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int result=0;\n  int cur;\n  int count=0;\n  int signBits=-1;\n  do {\n    cur=in.readByte() & 0xff;\n    result|=(cur & 0x7f) << (count * 7);\n    signBits<<=7;\n    count++;\n  }\n while (((cur & 0x80) == 0x80) && count < 5);\n  if ((cur & 0x80) == 0x80) {\n    throw new DexException(\"invalid LEB128 sequence\");\n  }\n  if (((signBits >> 1) & result) != 0) {\n    result|=signBits;\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 682,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Reads an signed integer from  {@code in}.\n */\npublic static int readSignedLeb128(ByteInput in){\n  int result=0;\n  int cur;\n  int count=0;\n  int signBits=-1;\n  do {\n    cur=in.readByte() & 0xff;\n    result|=(cur & 0x7f) << (count * 7);\n    signBits<<=7;\n    count++;\n  }\n while (((cur & 0x80) == 0x80) && count < 5);\n  if ((cur & 0x80) == 0x80) {\n    throw new DexException(\"invalid LEB128 sequence\");\n  }\n  if (((signBits >> 1) & result) != 0) {\n    result|=signBits;\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.DoStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 96,
        "startColumnNumber" : 17,
        "endLineNumber" : 96,
        "endColumnNumber" : 52
      },
      "nodeContext" : "((cur & 0x80) == 0x80) && count < 5",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0x80",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 96,
      "startColumnNumber" : 34,
      "endLineNumber" : 96,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 96,
        "startColumnNumber" : 18,
        "endLineNumber" : 96,
        "endColumnNumber" : 38
      },
      "nodeContext" : "(cur & 0x80) == 0x80",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 96,
        "startColumnNumber" : 17,
        "endLineNumber" : 96,
        "endColumnNumber" : 39
      },
      "nodeContext" : "((cur & 0x80) == 0x80)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.DoStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 96,
        "startColumnNumber" : 17,
        "endLineNumber" : 96,
        "endColumnNumber" : 52
      },
      "nodeContext" : "((cur & 0x80) == 0x80) && count < 5",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 54
      },
      "nodeContext" : "do {\n  cur=in.readByte() & 0xff;\n  result|=(cur & 0x7f) << (count * 7);\n  signBits<<=7;\n  count++;\n}\n while (((cur & 0x80) == 0x80) && count < 5);\n",
      "nodeType" : "DoStatement",
      "astNodeNumber" : 40,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 569,
        "startLineNumber" : 85,
        "startColumnNumber" : 53,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int result=0;\n  int cur;\n  int count=0;\n  int signBits=-1;\n  do {\n    cur=in.readByte() & 0xff;\n    result|=(cur & 0x7f) << (count * 7);\n    signBits<<=7;\n    count++;\n  }\n while (((cur & 0x80) == 0x80) && count < 5);\n  if ((cur & 0x80) == 0x80) {\n    throw new DexException(\"invalid LEB128 sequence\");\n  }\n  if (((signBits >> 1) & result) != 0) {\n    result|=signBits;\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 682,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Reads an signed integer from  {@code in}.\n */\npublic static int readSignedLeb128(ByteInput in){\n  int result=0;\n  int cur;\n  int count=0;\n  int signBits=-1;\n  do {\n    cur=in.readByte() & 0xff;\n    result|=(cur & 0x7f) << (count * 7);\n    signBits<<=7;\n    count++;\n  }\n while (((cur & 0x80) == 0x80) && count < 5);\n  if ((cur & 0x80) == 0x80) {\n    throw new DexException(\"invalid LEB128 sequence\");\n  }\n  if (((signBits >> 1) & result) != 0) {\n    result|=signBits;\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.DoStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 96,
        "startColumnNumber" : 17,
        "endLineNumber" : 96,
        "endColumnNumber" : 52
      },
      "nodeContext" : "((cur & 0x80) == 0x80) && count < 5",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0x80",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 98,
      "startColumnNumber" : 19,
      "endLineNumber" : 98,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 98,
        "startColumnNumber" : 13,
        "endLineNumber" : 98,
        "endColumnNumber" : 23
      },
      "nodeContext" : "cur & 0x80",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 98,
        "startColumnNumber" : 12,
        "endLineNumber" : 98,
        "endColumnNumber" : 24
      },
      "nodeContext" : "(cur & 0x80)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 98,
        "startColumnNumber" : 12,
        "endLineNumber" : 98,
        "endColumnNumber" : 32
      },
      "nodeContext" : "(cur & 0x80) == 0x80",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 100,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if ((cur & 0x80) == 0x80) {\n  throw new DexException(\"invalid LEB128 sequence\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 569,
        "startLineNumber" : 85,
        "startColumnNumber" : 53,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int result=0;\n  int cur;\n  int count=0;\n  int signBits=-1;\n  do {\n    cur=in.readByte() & 0xff;\n    result|=(cur & 0x7f) << (count * 7);\n    signBits<<=7;\n    count++;\n  }\n while (((cur & 0x80) == 0x80) && count < 5);\n  if ((cur & 0x80) == 0x80) {\n    throw new DexException(\"invalid LEB128 sequence\");\n  }\n  if (((signBits >> 1) & result) != 0) {\n    result|=signBits;\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 682,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Reads an signed integer from  {@code in}.\n */\npublic static int readSignedLeb128(ByteInput in){\n  int result=0;\n  int cur;\n  int count=0;\n  int signBits=-1;\n  do {\n    cur=in.readByte() & 0xff;\n    result|=(cur & 0x7f) << (count * 7);\n    signBits<<=7;\n    count++;\n  }\n while (((cur & 0x80) == 0x80) && count < 5);\n  if ((cur & 0x80) == 0x80) {\n    throw new DexException(\"invalid LEB128 sequence\");\n  }\n  if (((signBits >> 1) & result) != 0) {\n    result|=signBits;\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 98,
        "startColumnNumber" : 12,
        "endLineNumber" : 98,
        "endColumnNumber" : 32
      },
      "nodeContext" : "(cur & 0x80) == 0x80",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0x80",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 98,
      "startColumnNumber" : 28,
      "endLineNumber" : 98,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 98,
        "startColumnNumber" : 12,
        "endLineNumber" : 98,
        "endColumnNumber" : 32
      },
      "nodeContext" : "(cur & 0x80) == 0x80",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 100,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if ((cur & 0x80) == 0x80) {\n  throw new DexException(\"invalid LEB128 sequence\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 569,
        "startLineNumber" : 85,
        "startColumnNumber" : 53,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int result=0;\n  int cur;\n  int count=0;\n  int signBits=-1;\n  do {\n    cur=in.readByte() & 0xff;\n    result|=(cur & 0x7f) << (count * 7);\n    signBits<<=7;\n    count++;\n  }\n while (((cur & 0x80) == 0x80) && count < 5);\n  if ((cur & 0x80) == 0x80) {\n    throw new DexException(\"invalid LEB128 sequence\");\n  }\n  if (((signBits >> 1) & result) != 0) {\n    result|=signBits;\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 682,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Reads an signed integer from  {@code in}.\n */\npublic static int readSignedLeb128(ByteInput in){\n  int result=0;\n  int cur;\n  int count=0;\n  int signBits=-1;\n  do {\n    cur=in.readByte() & 0xff;\n    result|=(cur & 0x7f) << (count * 7);\n    signBits<<=7;\n    count++;\n  }\n while (((cur & 0x80) == 0x80) && count < 5);\n  if ((cur & 0x80) == 0x80) {\n    throw new DexException(\"invalid LEB128 sequence\");\n  }\n  if (((signBits >> 1) & result) != 0) {\n    result|=signBits;\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 98,
        "startColumnNumber" : 12,
        "endLineNumber" : 98,
        "endColumnNumber" : 32
      },
      "nodeContext" : "(cur & 0x80) == 0x80",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 96,
    "startColumnNumber" : 25,
    "endLineNumber" : 96,
    "endColumnNumber" : 29
  }, {
    "charLength" : 4,
    "startLineNumber" : 96,
    "startColumnNumber" : 34,
    "endLineNumber" : 96,
    "endColumnNumber" : 38
  }, {
    "charLength" : 4,
    "startLineNumber" : 98,
    "startColumnNumber" : 19,
    "endLineNumber" : 98,
    "endColumnNumber" : 23
  }, {
    "charLength" : 4,
    "startLineNumber" : 98,
    "startColumnNumber" : 28,
    "endLineNumber" : 98,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 0
  } ]
}