{
  "id" : 497,
  "expression" : "records",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/main/java/org/apache/kafka/common/protocol/Writable.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "records",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 39,
      "startColumnNumber" : 12,
      "endLineNumber" : 39,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 39,
        "endColumnNumber" : 44
      },
      "nodeContext" : "records instanceof MemoryRecords",
      "nodeType" : "InstanceofExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 282,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (records instanceof MemoryRecords) {\n  MemoryRecords memRecords=(MemoryRecords)records;\n  writeByteBuffer(memRecords.buffer());\n}\n else {\n  throw new UnsupportedOperationException(\"Unsupported record type \" + records.getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 298,
        "startLineNumber" : 38,
        "startColumnNumber" : 51,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (records instanceof MemoryRecords) {\n    MemoryRecords memRecords=(MemoryRecords)records;\n    writeByteBuffer(memRecords.buffer());\n  }\n else {\n    throw new UnsupportedOperationException(\"Unsupported record type \" + records.getClass());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 345,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "default void writeRecords(BaseRecords records){\n  if (records instanceof MemoryRecords) {\n    MemoryRecords memRecords=(MemoryRecords)records;\n    writeByteBuffer(memRecords.buffer());\n  }\n else {\n    throw new UnsupportedOperationException(\"Unsupported record type \" + records.getClass());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 40,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 39,
        "endColumnNumber" : 44
      },
      "nodeContext" : "records instanceof MemoryRecords",
      "nodeType" : "InstanceofExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.kafka.common.record.BaseRecords"
  }, {
    "nodeContext" : "records",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 40,
      "startColumnNumber" : 55,
      "endLineNumber" : 40,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 40,
        "startColumnNumber" : 39,
        "endLineNumber" : 40,
        "endColumnNumber" : 62
      },
      "nodeContext" : "(MemoryRecords)records",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 40,
        "startColumnNumber" : 26,
        "endLineNumber" : 40,
        "endColumnNumber" : 62
      },
      "nodeContext" : "memRecords=(MemoryRecords)records",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 40,
        "startColumnNumber" : 12,
        "endLineNumber" : 40,
        "endColumnNumber" : 63
      },
      "nodeContext" : "MemoryRecords memRecords=(MemoryRecords)records;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 39,
        "startColumnNumber" : 46,
        "endLineNumber" : 42,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  MemoryRecords memRecords=(MemoryRecords)records;\n  writeByteBuffer(memRecords.buffer());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 282,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (records instanceof MemoryRecords) {\n  MemoryRecords memRecords=(MemoryRecords)records;\n  writeByteBuffer(memRecords.buffer());\n}\n else {\n  throw new UnsupportedOperationException(\"Unsupported record type \" + records.getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 298,
        "startLineNumber" : 38,
        "startColumnNumber" : 51,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (records instanceof MemoryRecords) {\n    MemoryRecords memRecords=(MemoryRecords)records;\n    writeByteBuffer(memRecords.buffer());\n  }\n else {\n    throw new UnsupportedOperationException(\"Unsupported record type \" + records.getClass());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 345,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "default void writeRecords(BaseRecords records){\n  if (records instanceof MemoryRecords) {\n    MemoryRecords memRecords=(MemoryRecords)records;\n    writeByteBuffer(memRecords.buffer());\n  }\n else {\n    throw new UnsupportedOperationException(\"Unsupported record type \" + records.getClass());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 40,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 40,
        "startColumnNumber" : 12,
        "endLineNumber" : 40,
        "endColumnNumber" : 63
      },
      "nodeContext" : "MemoryRecords memRecords=(MemoryRecords)records;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.kafka.common.record.BaseRecords"
  }, {
    "nodeContext" : "records",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 43,
      "startColumnNumber" : 81,
      "endLineNumber" : 43,
      "endColumnNumber" : 88
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 43,
        "startColumnNumber" : 81,
        "endLineNumber" : 43,
        "endColumnNumber" : 99
      },
      "nodeContext" : "records.getClass()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 43,
        "startColumnNumber" : 52,
        "endLineNumber" : 43,
        "endColumnNumber" : 99
      },
      "nodeContext" : "\"Unsupported record type \" + records.getClass()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 43,
        "startColumnNumber" : 18,
        "endLineNumber" : 43,
        "endColumnNumber" : 100
      },
      "nodeContext" : "new UnsupportedOperationException(\"Unsupported record type \" + records.getClass())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 43,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 101
      },
      "nodeContext" : "throw new UnsupportedOperationException(\"Unsupported record type \" + records.getClass());\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 42,
        "startColumnNumber" : 15,
        "endLineNumber" : 44,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new UnsupportedOperationException(\"Unsupported record type \" + records.getClass());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 282,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (records instanceof MemoryRecords) {\n  MemoryRecords memRecords=(MemoryRecords)records;\n  writeByteBuffer(memRecords.buffer());\n}\n else {\n  throw new UnsupportedOperationException(\"Unsupported record type \" + records.getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 298,
        "startLineNumber" : 38,
        "startColumnNumber" : 51,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (records instanceof MemoryRecords) {\n    MemoryRecords memRecords=(MemoryRecords)records;\n    writeByteBuffer(memRecords.buffer());\n  }\n else {\n    throw new UnsupportedOperationException(\"Unsupported record type \" + records.getClass());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 345,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "default void writeRecords(BaseRecords records){\n  if (records instanceof MemoryRecords) {\n    MemoryRecords memRecords=(MemoryRecords)records;\n    writeByteBuffer(memRecords.buffer());\n  }\n else {\n    throw new UnsupportedOperationException(\"Unsupported record type \" + records.getClass());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 40,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 43,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 101
      },
      "nodeContext" : "throw new UnsupportedOperationException(\"Unsupported record type \" + records.getClass());\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.kafka.common.record.BaseRecords"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 39,
    "startColumnNumber" : 12,
    "endLineNumber" : 39,
    "endColumnNumber" : 19
  }, {
    "charLength" : 7,
    "startLineNumber" : 40,
    "startColumnNumber" : 55,
    "endLineNumber" : 40,
    "endColumnNumber" : 62
  }, {
    "charLength" : 7,
    "startLineNumber" : 43,
    "startColumnNumber" : 81,
    "endLineNumber" : 43,
    "endColumnNumber" : 88
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  } ]
}