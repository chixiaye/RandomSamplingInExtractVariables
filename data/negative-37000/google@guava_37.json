{
  "id" : 37,
  "expression" : "Ordering",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava/src/com/google/common/collect/Range.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Ordering",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 336,
      "startColumnNumber" : 10,
      "endLineNumber" : 336,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 336,
        "startColumnNumber" : 10,
        "endLineNumber" : 336,
        "endColumnNumber" : 28
      },
      "nodeContext" : "Ordering.natural()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 336,
        "startColumnNumber" : 10,
        "endLineNumber" : 336,
        "endColumnNumber" : 47
      },
      "nodeContext" : "Ordering.natural().equals(comparator)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 336,
        "startColumnNumber" : 10,
        "endLineNumber" : 336,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Ordering.natural().equals(comparator) || comparator == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 336,
        "startColumnNumber" : 6,
        "endLineNumber" : 338,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (Ordering.natural().equals(comparator) || comparator == null) {\n  return closed(set.first(),set.last());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 241,
        "startLineNumber" : 333,
        "startColumnNumber" : 37,
        "endLineNumber" : 339,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SortedSet<C> set=(SortedSet<C>)values;\n  Comparator<?> comparator=set.comparator();\n  if (Ordering.natural().equals(comparator) || comparator == null) {\n    return closed(set.first(),set.last());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 274,
        "startLineNumber" : 333,
        "startColumnNumber" : 4,
        "endLineNumber" : 339,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (values instanceof SortedSet) {\n  SortedSet<C> set=(SortedSet<C>)values;\n  Comparator<?> comparator=set.comparator();\n  if (Ordering.natural().equals(comparator) || comparator == null) {\n    return closed(set.first(),set.last());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 52,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 659,
        "startLineNumber" : 331,
        "startColumnNumber" : 82,
        "endLineNumber" : 349,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  checkNotNull(values);\n  if (values instanceof SortedSet) {\n    SortedSet<C> set=(SortedSet<C>)values;\n    Comparator<?> comparator=set.comparator();\n    if (Ordering.natural().equals(comparator) || comparator == null) {\n      return closed(set.first(),set.last());\n    }\n  }\n  Iterator<C> valueIterator=values.iterator();\n  C min=checkNotNull(valueIterator.next());\n  C max=min;\n  while (valueIterator.hasNext()) {\n    C value=checkNotNull(valueIterator.next());\n    min=Ordering.natural().min(min,value);\n    max=Ordering.natural().max(max,value);\n  }\n  return closed(min,max);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1174,
        "startLineNumber" : 322,
        "startColumnNumber" : 2,
        "endLineNumber" : 349,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns the minimal range that  {@linkplain Range#contains(Comparable) contains} all of thegiven values. The returned range is  {@linkplain BoundType#CLOSED closed} on both ends.\n * @throws ClassCastException if the values are not mutually comparable\n * @throws NoSuchElementException if {@code values} is empty\n * @throws NullPointerException if any of {@code values} is null\n * @since 14.0\n */\npublic static <C extends Comparable<?>>Range<C> encloseAll(Iterable<C> values){\n  checkNotNull(values);\n  if (values instanceof SortedSet) {\n    SortedSet<C> set=(SortedSet<C>)values;\n    Comparator<?> comparator=set.comparator();\n    if (Ordering.natural().equals(comparator) || comparator == null) {\n      return closed(set.first(),set.last());\n    }\n  }\n  Iterator<C> valueIterator=values.iterator();\n  C min=checkNotNull(valueIterator.next());\n  C max=min;\n  while (valueIterator.hasNext()) {\n    C value=checkNotNull(valueIterator.next());\n    min=Ordering.natural().min(min,value);\n    max=Ordering.natural().max(max,value);\n  }\n  return closed(min,max);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 147,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 336,
        "startColumnNumber" : 10,
        "endLineNumber" : 336,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Ordering.natural().equals(comparator) || comparator == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.common.collect.Ordering"
  }, {
    "nodeContext" : "Ordering",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 345,
      "startColumnNumber" : 12,
      "endLineNumber" : 345,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 345,
        "startColumnNumber" : 12,
        "endLineNumber" : 345,
        "endColumnNumber" : 30
      },
      "nodeContext" : "Ordering.natural()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 345,
        "startColumnNumber" : 12,
        "endLineNumber" : 345,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Ordering.natural().min(min,value)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 345,
        "startColumnNumber" : 6,
        "endLineNumber" : 345,
        "endColumnNumber" : 46
      },
      "nodeContext" : "min=Ordering.natural().min(min,value)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 345,
        "startColumnNumber" : 6,
        "endLineNumber" : 345,
        "endColumnNumber" : 47
      },
      "nodeContext" : "min=Ordering.natural().min(min,value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 343,
        "startColumnNumber" : 36,
        "endLineNumber" : 347,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  C value=checkNotNull(valueIterator.next());\n  min=Ordering.natural().min(min,value);\n  max=Ordering.natural().max(max,value);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 191,
        "startLineNumber" : 343,
        "startColumnNumber" : 4,
        "endLineNumber" : 347,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (valueIterator.hasNext()) {\n  C value=checkNotNull(valueIterator.next());\n  min=Ordering.natural().min(min,value);\n  max=Ordering.natural().max(max,value);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 659,
        "startLineNumber" : 331,
        "startColumnNumber" : 82,
        "endLineNumber" : 349,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  checkNotNull(values);\n  if (values instanceof SortedSet) {\n    SortedSet<C> set=(SortedSet<C>)values;\n    Comparator<?> comparator=set.comparator();\n    if (Ordering.natural().equals(comparator) || comparator == null) {\n      return closed(set.first(),set.last());\n    }\n  }\n  Iterator<C> valueIterator=values.iterator();\n  C min=checkNotNull(valueIterator.next());\n  C max=min;\n  while (valueIterator.hasNext()) {\n    C value=checkNotNull(valueIterator.next());\n    min=Ordering.natural().min(min,value);\n    max=Ordering.natural().max(max,value);\n  }\n  return closed(min,max);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1174,
        "startLineNumber" : 322,
        "startColumnNumber" : 2,
        "endLineNumber" : 349,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns the minimal range that  {@linkplain Range#contains(Comparable) contains} all of thegiven values. The returned range is  {@linkplain BoundType#CLOSED closed} on both ends.\n * @throws ClassCastException if the values are not mutually comparable\n * @throws NoSuchElementException if {@code values} is empty\n * @throws NullPointerException if any of {@code values} is null\n * @since 14.0\n */\npublic static <C extends Comparable<?>>Range<C> encloseAll(Iterable<C> values){\n  checkNotNull(values);\n  if (values instanceof SortedSet) {\n    SortedSet<C> set=(SortedSet<C>)values;\n    Comparator<?> comparator=set.comparator();\n    if (Ordering.natural().equals(comparator) || comparator == null) {\n      return closed(set.first(),set.last());\n    }\n  }\n  Iterator<C> valueIterator=values.iterator();\n  C min=checkNotNull(valueIterator.next());\n  C max=min;\n  while (valueIterator.hasNext()) {\n    C value=checkNotNull(valueIterator.next());\n    min=Ordering.natural().min(min,value);\n    max=Ordering.natural().max(max,value);\n  }\n  return closed(min,max);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 147,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 345,
        "startColumnNumber" : 6,
        "endLineNumber" : 345,
        "endColumnNumber" : 47
      },
      "nodeContext" : "min=Ordering.natural().min(min,value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.google.common.collect.Ordering"
  }, {
    "nodeContext" : "Ordering",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 346,
      "startColumnNumber" : 12,
      "endLineNumber" : 346,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 346,
        "startColumnNumber" : 12,
        "endLineNumber" : 346,
        "endColumnNumber" : 30
      },
      "nodeContext" : "Ordering.natural()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 346,
        "startColumnNumber" : 12,
        "endLineNumber" : 346,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Ordering.natural().max(max,value)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 346,
        "startColumnNumber" : 6,
        "endLineNumber" : 346,
        "endColumnNumber" : 46
      },
      "nodeContext" : "max=Ordering.natural().max(max,value)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 346,
        "startColumnNumber" : 6,
        "endLineNumber" : 346,
        "endColumnNumber" : 47
      },
      "nodeContext" : "max=Ordering.natural().max(max,value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 343,
        "startColumnNumber" : 36,
        "endLineNumber" : 347,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  C value=checkNotNull(valueIterator.next());\n  min=Ordering.natural().min(min,value);\n  max=Ordering.natural().max(max,value);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 191,
        "startLineNumber" : 343,
        "startColumnNumber" : 4,
        "endLineNumber" : 347,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (valueIterator.hasNext()) {\n  C value=checkNotNull(valueIterator.next());\n  min=Ordering.natural().min(min,value);\n  max=Ordering.natural().max(max,value);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 659,
        "startLineNumber" : 331,
        "startColumnNumber" : 82,
        "endLineNumber" : 349,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  checkNotNull(values);\n  if (values instanceof SortedSet) {\n    SortedSet<C> set=(SortedSet<C>)values;\n    Comparator<?> comparator=set.comparator();\n    if (Ordering.natural().equals(comparator) || comparator == null) {\n      return closed(set.first(),set.last());\n    }\n  }\n  Iterator<C> valueIterator=values.iterator();\n  C min=checkNotNull(valueIterator.next());\n  C max=min;\n  while (valueIterator.hasNext()) {\n    C value=checkNotNull(valueIterator.next());\n    min=Ordering.natural().min(min,value);\n    max=Ordering.natural().max(max,value);\n  }\n  return closed(min,max);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1174,
        "startLineNumber" : 322,
        "startColumnNumber" : 2,
        "endLineNumber" : 349,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns the minimal range that  {@linkplain Range#contains(Comparable) contains} all of thegiven values. The returned range is  {@linkplain BoundType#CLOSED closed} on both ends.\n * @throws ClassCastException if the values are not mutually comparable\n * @throws NoSuchElementException if {@code values} is empty\n * @throws NullPointerException if any of {@code values} is null\n * @since 14.0\n */\npublic static <C extends Comparable<?>>Range<C> encloseAll(Iterable<C> values){\n  checkNotNull(values);\n  if (values instanceof SortedSet) {\n    SortedSet<C> set=(SortedSet<C>)values;\n    Comparator<?> comparator=set.comparator();\n    if (Ordering.natural().equals(comparator) || comparator == null) {\n      return closed(set.first(),set.last());\n    }\n  }\n  Iterator<C> valueIterator=values.iterator();\n  C min=checkNotNull(valueIterator.next());\n  C max=min;\n  while (valueIterator.hasNext()) {\n    C value=checkNotNull(valueIterator.next());\n    min=Ordering.natural().min(min,value);\n    max=Ordering.natural().max(max,value);\n  }\n  return closed(min,max);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 147,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 346,
        "startColumnNumber" : 6,
        "endLineNumber" : 346,
        "endColumnNumber" : 47
      },
      "nodeContext" : "max=Ordering.natural().max(max,value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.google.common.collect.Ordering"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 336,
    "startColumnNumber" : 10,
    "endLineNumber" : 336,
    "endColumnNumber" : 18
  }, {
    "charLength" : 8,
    "startLineNumber" : 345,
    "startColumnNumber" : 12,
    "endLineNumber" : 345,
    "endColumnNumber" : 20
  }, {
    "charLength" : 8,
    "startLineNumber" : 346,
    "startColumnNumber" : 12,
    "endLineNumber" : 346,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}