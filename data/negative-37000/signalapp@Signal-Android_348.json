{
  "id" : 348,
  "expression" : "groupStatesFromRevision",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/app/src/main/java/org/thoughtcrime/securesms/groups/v2/processing/GroupsV2StateProcessor.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "groupStatesFromRevision",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 476,
      "startColumnNumber" : 89,
      "endLineNumber" : 476,
      "endColumnNumber" : 112
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 476,
        "startColumnNumber" : 89,
        "endLineNumber" : 476,
        "endColumnNumber" : 119
      },
      "nodeContext" : "groupStatesFromRevision.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 476,
        "startColumnNumber" : 73,
        "endLineNumber" : 476,
        "endColumnNumber" : 120
      },
      "nodeContext" : "new ArrayList<>(groupStatesFromRevision.size())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 476,
        "startColumnNumber" : 47,
        "endLineNumber" : 476,
        "endColumnNumber" : 120
      },
      "nodeContext" : "history=new ArrayList<>(groupStatesFromRevision.size())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 476,
        "startColumnNumber" : 8,
        "endLineNumber" : 476,
        "endColumnNumber" : 121
      },
      "nodeContext" : "ArrayList<ServerGroupLogEntry> history=new ArrayList<>(groupStatesFromRevision.size());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 996,
        "startLineNumber" : 474,
        "startColumnNumber" : 10,
        "endLineNumber" : 493,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  Collection<DecryptedGroupHistoryEntry> groupStatesFromRevision=groupsV2Api.getGroupHistory(groupSecretParams,logsNeededFromRevision,groupsV2Authorization.getAuthorizationForToday(selfUuid,groupSecretParams));\n  ArrayList<ServerGroupLogEntry> history=new ArrayList<>(groupStatesFromRevision.size());\n  boolean ignoreServerChanges=SignalStore.internalValues().gv2IgnoreServerChanges();\n  if (ignoreServerChanges) {\n    Log.w(TAG,\"Server change logs are ignored by setting\");\n  }\n  for (  DecryptedGroupHistoryEntry entry : groupStatesFromRevision) {\n    DecryptedGroup group=entry.getGroup().orNull();\n    DecryptedGroupChange change=ignoreServerChanges ? null : entry.getChange().orNull();\n    if (group != null || change != null) {\n      history.add(new ServerGroupLogEntry(group,change));\n    }\n  }\n  return history;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1111,
        "startLineNumber" : 474,
        "startColumnNumber" : 6,
        "endLineNumber" : 495,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  Collection<DecryptedGroupHistoryEntry> groupStatesFromRevision=groupsV2Api.getGroupHistory(groupSecretParams,logsNeededFromRevision,groupsV2Authorization.getAuthorizationForToday(selfUuid,groupSecretParams));\n  ArrayList<ServerGroupLogEntry> history=new ArrayList<>(groupStatesFromRevision.size());\n  boolean ignoreServerChanges=SignalStore.internalValues().gv2IgnoreServerChanges();\n  if (ignoreServerChanges) {\n    Log.w(TAG,\"Server change logs are ignored by setting\");\n  }\n  for (  DecryptedGroupHistoryEntry entry : groupStatesFromRevision) {\n    DecryptedGroup group=entry.getGroup().orNull();\n    DecryptedGroupChange change=ignoreServerChanges ? null : entry.getChange().orNull();\n    if (group != null || change != null) {\n      history.add(new ServerGroupLogEntry(group,change));\n    }\n  }\n  return history;\n}\n catch (InvalidGroupStateException|VerificationFailedException e) {\n  throw new IOException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 117,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1125,
        "startLineNumber" : 473,
        "startColumnNumber" : 130,
        "endLineNumber" : 496,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    Collection<DecryptedGroupHistoryEntry> groupStatesFromRevision=groupsV2Api.getGroupHistory(groupSecretParams,logsNeededFromRevision,groupsV2Authorization.getAuthorizationForToday(selfUuid,groupSecretParams));\n    ArrayList<ServerGroupLogEntry> history=new ArrayList<>(groupStatesFromRevision.size());\n    boolean ignoreServerChanges=SignalStore.internalValues().gv2IgnoreServerChanges();\n    if (ignoreServerChanges) {\n      Log.w(TAG,\"Server change logs are ignored by setting\");\n    }\n    for (    DecryptedGroupHistoryEntry entry : groupStatesFromRevision) {\n      DecryptedGroup group=entry.getGroup().orNull();\n      DecryptedGroupChange change=ignoreServerChanges ? null : entry.getChange().orNull();\n      if (group != null || change != null) {\n        history.add(new ServerGroupLogEntry(group,change));\n      }\n    }\n    return history;\n  }\n catch (  InvalidGroupStateException|VerificationFailedException e) {\n    throw new IOException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1251,
        "startLineNumber" : 473,
        "startColumnNumber" : 4,
        "endLineNumber" : 496,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private List<ServerGroupLogEntry> getFullMemberHistory(@NonNull UUID selfUuid,int logsNeededFromRevision) throws IOException {\n  try {\n    Collection<DecryptedGroupHistoryEntry> groupStatesFromRevision=groupsV2Api.getGroupHistory(groupSecretParams,logsNeededFromRevision,groupsV2Authorization.getAuthorizationForToday(selfUuid,groupSecretParams));\n    ArrayList<ServerGroupLogEntry> history=new ArrayList<>(groupStatesFromRevision.size());\n    boolean ignoreServerChanges=SignalStore.internalValues().gv2IgnoreServerChanges();\n    if (ignoreServerChanges) {\n      Log.w(TAG,\"Server change logs are ignored by setting\");\n    }\n    for (    DecryptedGroupHistoryEntry entry : groupStatesFromRevision) {\n      DecryptedGroup group=entry.getGroup().orNull();\n      DecryptedGroupChange change=ignoreServerChanges ? null : entry.getChange().orNull();\n      if (group != null || change != null) {\n        history.add(new ServerGroupLogEntry(group,change));\n      }\n    }\n    return history;\n  }\n catch (  InvalidGroupStateException|VerificationFailedException e) {\n    throw new IOException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 137,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 476,
        "startColumnNumber" : 8,
        "endLineNumber" : 476,
        "endColumnNumber" : 121
      },
      "nodeContext" : "ArrayList<ServerGroupLogEntry> history=new ArrayList<>(groupStatesFromRevision.size());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.Collection<org.whispersystems.signalservice.api.groupsv2.DecryptedGroupHistoryEntry>"
  }, {
    "nodeContext" : "groupStatesFromRevision",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 483,
      "startColumnNumber" : 48,
      "endLineNumber" : 483,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 367,
        "startLineNumber" : 483,
        "startColumnNumber" : 8,
        "endLineNumber" : 490,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (DecryptedGroupHistoryEntry entry : groupStatesFromRevision) {\n  DecryptedGroup group=entry.getGroup().orNull();\n  DecryptedGroupChange change=ignoreServerChanges ? null : entry.getChange().orNull();\n  if (group != null || change != null) {\n    history.add(new ServerGroupLogEntry(group,change));\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 48,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 996,
        "startLineNumber" : 474,
        "startColumnNumber" : 10,
        "endLineNumber" : 493,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  Collection<DecryptedGroupHistoryEntry> groupStatesFromRevision=groupsV2Api.getGroupHistory(groupSecretParams,logsNeededFromRevision,groupsV2Authorization.getAuthorizationForToday(selfUuid,groupSecretParams));\n  ArrayList<ServerGroupLogEntry> history=new ArrayList<>(groupStatesFromRevision.size());\n  boolean ignoreServerChanges=SignalStore.internalValues().gv2IgnoreServerChanges();\n  if (ignoreServerChanges) {\n    Log.w(TAG,\"Server change logs are ignored by setting\");\n  }\n  for (  DecryptedGroupHistoryEntry entry : groupStatesFromRevision) {\n    DecryptedGroup group=entry.getGroup().orNull();\n    DecryptedGroupChange change=ignoreServerChanges ? null : entry.getChange().orNull();\n    if (group != null || change != null) {\n      history.add(new ServerGroupLogEntry(group,change));\n    }\n  }\n  return history;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1111,
        "startLineNumber" : 474,
        "startColumnNumber" : 6,
        "endLineNumber" : 495,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  Collection<DecryptedGroupHistoryEntry> groupStatesFromRevision=groupsV2Api.getGroupHistory(groupSecretParams,logsNeededFromRevision,groupsV2Authorization.getAuthorizationForToday(selfUuid,groupSecretParams));\n  ArrayList<ServerGroupLogEntry> history=new ArrayList<>(groupStatesFromRevision.size());\n  boolean ignoreServerChanges=SignalStore.internalValues().gv2IgnoreServerChanges();\n  if (ignoreServerChanges) {\n    Log.w(TAG,\"Server change logs are ignored by setting\");\n  }\n  for (  DecryptedGroupHistoryEntry entry : groupStatesFromRevision) {\n    DecryptedGroup group=entry.getGroup().orNull();\n    DecryptedGroupChange change=ignoreServerChanges ? null : entry.getChange().orNull();\n    if (group != null || change != null) {\n      history.add(new ServerGroupLogEntry(group,change));\n    }\n  }\n  return history;\n}\n catch (InvalidGroupStateException|VerificationFailedException e) {\n  throw new IOException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 117,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1125,
        "startLineNumber" : 473,
        "startColumnNumber" : 130,
        "endLineNumber" : 496,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    Collection<DecryptedGroupHistoryEntry> groupStatesFromRevision=groupsV2Api.getGroupHistory(groupSecretParams,logsNeededFromRevision,groupsV2Authorization.getAuthorizationForToday(selfUuid,groupSecretParams));\n    ArrayList<ServerGroupLogEntry> history=new ArrayList<>(groupStatesFromRevision.size());\n    boolean ignoreServerChanges=SignalStore.internalValues().gv2IgnoreServerChanges();\n    if (ignoreServerChanges) {\n      Log.w(TAG,\"Server change logs are ignored by setting\");\n    }\n    for (    DecryptedGroupHistoryEntry entry : groupStatesFromRevision) {\n      DecryptedGroup group=entry.getGroup().orNull();\n      DecryptedGroupChange change=ignoreServerChanges ? null : entry.getChange().orNull();\n      if (group != null || change != null) {\n        history.add(new ServerGroupLogEntry(group,change));\n      }\n    }\n    return history;\n  }\n catch (  InvalidGroupStateException|VerificationFailedException e) {\n    throw new IOException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1251,
        "startLineNumber" : 473,
        "startColumnNumber" : 4,
        "endLineNumber" : 496,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private List<ServerGroupLogEntry> getFullMemberHistory(@NonNull UUID selfUuid,int logsNeededFromRevision) throws IOException {\n  try {\n    Collection<DecryptedGroupHistoryEntry> groupStatesFromRevision=groupsV2Api.getGroupHistory(groupSecretParams,logsNeededFromRevision,groupsV2Authorization.getAuthorizationForToday(selfUuid,groupSecretParams));\n    ArrayList<ServerGroupLogEntry> history=new ArrayList<>(groupStatesFromRevision.size());\n    boolean ignoreServerChanges=SignalStore.internalValues().gv2IgnoreServerChanges();\n    if (ignoreServerChanges) {\n      Log.w(TAG,\"Server change logs are ignored by setting\");\n    }\n    for (    DecryptedGroupHistoryEntry entry : groupStatesFromRevision) {\n      DecryptedGroup group=entry.getGroup().orNull();\n      DecryptedGroupChange change=ignoreServerChanges ? null : entry.getChange().orNull();\n      if (group != null || change != null) {\n        history.add(new ServerGroupLogEntry(group,change));\n      }\n    }\n    return history;\n  }\n catch (  InvalidGroupStateException|VerificationFailedException e) {\n    throw new IOException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 137,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 367,
        "startLineNumber" : 483,
        "startColumnNumber" : 8,
        "endLineNumber" : 490,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (DecryptedGroupHistoryEntry entry : groupStatesFromRevision) {\n  DecryptedGroup group=entry.getGroup().orNull();\n  DecryptedGroupChange change=ignoreServerChanges ? null : entry.getChange().orNull();\n  if (group != null || change != null) {\n    history.add(new ServerGroupLogEntry(group,change));\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 48,
      "astHeight" : 9
    },
    "tokenLength" : 1,
    "type" : "java.util.Collection<org.whispersystems.signalservice.api.groupsv2.DecryptedGroupHistoryEntry>"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 476,
    "startColumnNumber" : 89,
    "endLineNumber" : 476,
    "endColumnNumber" : 112
  }, {
    "charLength" : 23,
    "startLineNumber" : 483,
    "startColumnNumber" : 48,
    "endLineNumber" : 483,
    "endColumnNumber" : 71
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}