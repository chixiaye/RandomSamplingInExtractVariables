{
  "id" : 464,
  "expression" : "127 + 3",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-common/src/test/java/org/apache/dubbo/common/utils/AtomicPositiveIntegerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "127 + 3",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 140,
      "startColumnNumber" : 21,
      "endLineNumber" : 140,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 140,
        "startColumnNumber" : 8,
        "endLineNumber" : 140,
        "endColumnNumber" : 39
      },
      "nodeContext" : "assertEquals(127 + 3,i2.get())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 140,
        "startColumnNumber" : 8,
        "endLineNumber" : 140,
        "endColumnNumber" : 40
      },
      "nodeContext" : "assertEquals(127 + 3,i2.get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 325,
        "startLineNumber" : 133,
        "startColumnNumber" : 49,
        "endLineNumber" : 145,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int get=i1.getAndAdd(3);\n  assertEquals(0,get);\n  assertEquals(3,i1.get());\n  get=i2.getAndAdd(3);\n  assertEquals(127,get);\n  assertEquals(127 + 3,i2.get());\n  get=i3.getAndAdd(3);\n  assertEquals(Integer.MAX_VALUE,get);\n  assertEquals(2,i3.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 380,
        "startLineNumber" : 132,
        "startColumnNumber" : 4,
        "endLineNumber" : 145,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testGetAndAnd() throws Exception {\n  int get=i1.getAndAdd(3);\n  assertEquals(0,get);\n  assertEquals(3,i1.get());\n  get=i2.getAndAdd(3);\n  assertEquals(127,get);\n  assertEquals(127 + 3,i2.get());\n  get=i3.getAndAdd(3);\n  assertEquals(Integer.MAX_VALUE,get);\n  assertEquals(2,i3.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 71,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 140,
        "startColumnNumber" : 8,
        "endLineNumber" : 140,
        "endColumnNumber" : 40
      },
      "nodeContext" : "assertEquals(127 + 3,i2.get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 140,
    "startColumnNumber" : 21,
    "endLineNumber" : 140,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ ]
}