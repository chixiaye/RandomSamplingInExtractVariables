{
  "id" : 76,
  "expression" : "a == null",
  "projectName" : "Blankj@AndroidUtilCode",
  "commitID" : "b0f09e2df62a8b5e40c07016bf0588e3d1eb4151",
  "filePath" : "/utilcode/src/main/java/com/blankj/utilcode/util/StringUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "a == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 84,
      "startColumnNumber" : 15,
      "endLineNumber" : 84,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 84,
        "startColumnNumber" : 15,
        "endLineNumber" : 84,
        "endColumnNumber" : 60
      },
      "nodeContext" : "a == null ? b == null : a.equalsIgnoreCase(b)",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 61
      },
      "nodeContext" : "return a == null ? b == null : a.equalsIgnoreCase(b);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 83,
        "startColumnNumber" : 75,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return a == null ? b == null : a.equalsIgnoreCase(b);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 288,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 判断两字符串忽略大小写是否相等\n * @param a 待校验字符串a\n * @param b 待校验字符串b\n * @return {@code true}: 相等<br> {@code false}: 不相等\n */\npublic static boolean equalsIgnoreCase(final String a,final String b){\n  return a == null ? b == null : a.equalsIgnoreCase(b);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 29,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 61
      },
      "nodeContext" : "return a == null ? b == null : a.equalsIgnoreCase(b);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 84,
    "startColumnNumber" : 15,
    "endLineNumber" : 84,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ ]
}