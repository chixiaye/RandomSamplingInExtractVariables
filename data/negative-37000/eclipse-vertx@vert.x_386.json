{
  "id" : 386,
  "expression" : "REQUEST",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/java/io/vertx/core/net/impl/SSLHelper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "REQUEST",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 400,
      "startColumnNumber" : 13,
      "endLineNumber" : 400,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 400,
        "startColumnNumber" : 8,
        "endLineNumber" : 400,
        "endColumnNumber" : 21
      },
      "nodeContext" : "case REQUEST:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 312,
        "startLineNumber" : 399,
        "startColumnNumber" : 6,
        "endLineNumber" : 412,
        "endColumnNumber" : 7
      },
      "nodeContext" : "switch (getClientAuth()) {\ncase REQUEST:{\n    engine.setWantClientAuth(true);\n    break;\n  }\ncase REQUIRED:{\n  engine.setNeedClientAuth(true);\n  break;\n}\ncase NONE:{\nengine.setNeedClientAuth(false);\nbreak;\n}\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 30,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 326,
        "startLineNumber" : 398,
        "startColumnNumber" : 17,
        "endLineNumber" : 413,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (getClientAuth()) {\ncase REQUEST:{\n      engine.setWantClientAuth(true);\n      break;\n    }\ncase REQUIRED:{\n    engine.setNeedClientAuth(true);\n    break;\n  }\ncase NONE:{\n  engine.setNeedClientAuth(false);\n  break;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 542,
        "startLineNumber" : 398,
        "startColumnNumber" : 4,
        "endLineNumber" : 417,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!client) {\nswitch (getClientAuth()) {\ncase REQUEST:{\n      engine.setWantClientAuth(true);\n      break;\n    }\ncase REQUIRED:{\n    engine.setNeedClientAuth(true);\n    break;\n  }\ncase NONE:{\n  engine.setNeedClientAuth(false);\n  break;\n}\n}\n}\n else if (verifyHost) {\nSSLParameters sslParameters=engine.getSSLParameters();\nsslParameters.setEndpointIdentificationAlgorithm(\"HTTPS\");\nengine.setSSLParameters(sslParameters);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1346,
        "startLineNumber" : 383,
        "startColumnNumber" : 69,
        "endLineNumber" : 419,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (enabledCipherSuites != null && !enabledCipherSuites.isEmpty()) {\n    String[] toUse=enabledCipherSuites.toArray(new String[enabledCipherSuites.size()]);\n    engine.setEnabledCipherSuites(toUse);\n  }\n  engine.setUseClientMode(client);\n  Set<String> protocols=new HashSet<>(Arrays.asList(DEFAULT_ENABLED_PROTOCOLS));\n  protocols.retainAll(Arrays.asList(engine.getEnabledProtocols()));\n  if (enabledProtocols != null && !enabledProtocols.isEmpty() && !protocols.isEmpty()) {\n    protocols.retainAll(enabledProtocols);\n    if (protocols.isEmpty()) {\n      log.warn(\"no SSL/TLS protocols are enabled due to configuration restrictions\");\n    }\n  }\n  engine.setEnabledProtocols(protocols.toArray(new String[protocols.size()]));\n  if (!client) {\nswitch (getClientAuth()) {\ncase REQUEST:{\n        engine.setWantClientAuth(true);\n        break;\n      }\ncase REQUIRED:{\n      engine.setNeedClientAuth(true);\n      break;\n    }\ncase NONE:{\n    engine.setNeedClientAuth(false);\n    break;\n  }\n}\n}\n else if (verifyHost) {\nSSLParameters sslParameters=engine.getSSLParameters();\nsslParameters.setEndpointIdentificationAlgorithm(\"HTTPS\");\nengine.setSSLParameters(sslParameters);\n}\nreturn new SslHandler(engine);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1413,
        "startLineNumber" : 383,
        "startColumnNumber" : 2,
        "endLineNumber" : 419,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private SslHandler createHandler(SSLEngine engine,boolean client){\n  if (enabledCipherSuites != null && !enabledCipherSuites.isEmpty()) {\n    String[] toUse=enabledCipherSuites.toArray(new String[enabledCipherSuites.size()]);\n    engine.setEnabledCipherSuites(toUse);\n  }\n  engine.setUseClientMode(client);\n  Set<String> protocols=new HashSet<>(Arrays.asList(DEFAULT_ENABLED_PROTOCOLS));\n  protocols.retainAll(Arrays.asList(engine.getEnabledProtocols()));\n  if (enabledProtocols != null && !enabledProtocols.isEmpty() && !protocols.isEmpty()) {\n    protocols.retainAll(enabledProtocols);\n    if (protocols.isEmpty()) {\n      log.warn(\"no SSL/TLS protocols are enabled due to configuration restrictions\");\n    }\n  }\n  engine.setEnabledProtocols(protocols.toArray(new String[protocols.size()]));\n  if (!client) {\nswitch (getClientAuth()) {\ncase REQUEST:{\n        engine.setWantClientAuth(true);\n        break;\n      }\ncase REQUIRED:{\n      engine.setNeedClientAuth(true);\n      break;\n    }\ncase NONE:{\n    engine.setNeedClientAuth(false);\n    break;\n  }\n}\n}\n else if (verifyHost) {\nSSLParameters sslParameters=engine.getSSLParameters();\nsslParameters.setEndpointIdentificationAlgorithm(\"HTTPS\");\nengine.setSSLParameters(sslParameters);\n}\nreturn new SslHandler(engine);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 182,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 400,
        "startColumnNumber" : 8,
        "endLineNumber" : 400,
        "endColumnNumber" : 21
      },
      "nodeContext" : "case REQUEST:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "io.vertx.core.http.ClientAuth"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 400,
    "startColumnNumber" : 13,
    "endLineNumber" : 400,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ ]
}