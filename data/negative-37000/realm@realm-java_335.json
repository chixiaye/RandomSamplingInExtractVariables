{
  "id" : 335,
  "expression" : "org.bson.types.Decimal128",
  "projectName" : "realm@realm-java",
  "commitID" : "9da3b229a46407f73e2003fb40857cadf062086b",
  "filePath" : "/realm/realm-library/src/main/java/io/realm/ProxyUtils.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "org.bson.types.Decimal128",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 150,
      "startColumnNumber" : 39,
      "endLineNumber" : 150,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InstanceofExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 150,
        "startColumnNumber" : 39,
        "endLineNumber" : 150,
        "endColumnNumber" : 64
      },
      "nodeContext" : "org.bson.types.Decimal128",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 150,
        "startColumnNumber" : 20,
        "endLineNumber" : 150,
        "endColumnNumber" : 64
      },
      "nodeContext" : "decimal instanceof org.bson.types.Decimal128",
      "nodeType" : "InstanceofExpression",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 857,
        "startLineNumber" : 150,
        "startColumnNumber" : 16,
        "endLineNumber" : 162,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (decimal instanceof org.bson.types.Decimal128) {\n  osList.addDecimal128((org.bson.types.Decimal128)decimal);\n}\n else if (decimal instanceof String) {\n  osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n}\n else if (decimal instanceof Integer) {\n  osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n}\n else if (decimal instanceof Long) {\n  osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n}\n else if (decimal instanceof Double) {\n  osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n}\n else {\n  osList.addDecimal128((Decimal128)decimal);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 137,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1071,
        "startLineNumber" : 142,
        "startColumnNumber" : 48,
        "endLineNumber" : 163,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (jsonArray.isNull(i)) {\n    osList.addNull();\n    continue;\n  }\n  Object decimal=jsonArray.get(i);\n  if (decimal instanceof org.bson.types.Decimal128) {\n    osList.addDecimal128((org.bson.types.Decimal128)decimal);\n  }\n else   if (decimal instanceof String) {\n    osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n  }\n else   if (decimal instanceof Integer) {\n    osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n  }\n else   if (decimal instanceof Long) {\n    osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n  }\n else   if (decimal instanceof Double) {\n    osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n  }\n else {\n    osList.addDecimal128((Decimal128)decimal);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 158,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1107,
        "startLineNumber" : 142,
        "startColumnNumber" : 12,
        "endLineNumber" : 163,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < arraySize; i++) {\n  if (jsonArray.isNull(i)) {\n    osList.addNull();\n    continue;\n  }\n  Object decimal=jsonArray.get(i);\n  if (decimal instanceof org.bson.types.Decimal128) {\n    osList.addDecimal128((org.bson.types.Decimal128)decimal);\n  }\n else   if (decimal instanceof String) {\n    osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n  }\n else   if (decimal instanceof Integer) {\n    osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n  }\n else   if (decimal instanceof Long) {\n    osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n  }\n else   if (decimal instanceof Double) {\n    osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n  }\n else {\n    osList.addDecimal128((Decimal128)decimal);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 169,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1131,
        "startLineNumber" : 141,
        "startColumnNumber" : 56,
        "endLineNumber" : 164,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3514,
        "startLineNumber" : 141,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 509,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4019,
        "startLineNumber" : 127,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 576,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4560,
        "startLineNumber" : 113,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 646,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4889,
        "startLineNumber" : 105,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == byte[].class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n    }\n  }\n}\n else if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 690,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5193,
        "startLineNumber" : 97,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == String.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addString(jsonArray.getString(i));\n    }\n  }\n}\n else if (realmList.clazz == byte[].class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n    }\n  }\n}\n else if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 730,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5497,
        "startLineNumber" : 89,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == Double.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addDouble(jsonArray.getDouble(i));\n    }\n  }\n}\n else if (realmList.clazz == String.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addString(jsonArray.getString(i));\n    }\n  }\n}\n else if (realmList.clazz == byte[].class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n    }\n  }\n}\n else if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 770,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5807,
        "startLineNumber" : 81,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == Float.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addFloat((float)jsonArray.getDouble(i));\n    }\n  }\n}\n else if (realmList.clazz == Double.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addDouble(jsonArray.getDouble(i));\n    }\n  }\n}\n else if (realmList.clazz == String.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addString(jsonArray.getString(i));\n    }\n  }\n}\n else if (realmList.clazz == byte[].class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n    }\n  }\n}\n else if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 812,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 6114,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == Boolean.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBoolean(jsonArray.getBoolean(i));\n    }\n  }\n}\n else if (realmList.clazz == Float.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addFloat((float)jsonArray.getDouble(i));\n    }\n  }\n}\n else if (realmList.clazz == Double.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addDouble(jsonArray.getDouble(i));\n    }\n  }\n}\n else if (realmList.clazz == String.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addString(jsonArray.getString(i));\n    }\n  }\n}\n else if (realmList.clazz == byte[].class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n    }\n  }\n}\n else if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 852,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6496,
        "startLineNumber" : 58,
        "startColumnNumber" : 114,
        "endLineNumber" : 217,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!jsonObject.has(fieldName)) {\n    return;\n  }\n  OsList osList=realmList.getOsList();\n  if (jsonObject.isNull(fieldName)) {\n    osList.removeAll();\n    return;\n  }\n  JSONArray jsonArray=jsonObject.getJSONArray(fieldName);\n  osList.removeAll();\n  int arraySize=jsonArray.length();\n  if (realmList.clazz == Boolean.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addBoolean(jsonArray.getBoolean(i));\n      }\n    }\n  }\n else   if (realmList.clazz == Float.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addFloat((float)jsonArray.getDouble(i));\n      }\n    }\n  }\n else   if (realmList.clazz == Double.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addDouble(jsonArray.getDouble(i));\n      }\n    }\n  }\n else   if (realmList.clazz == String.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addString(jsonArray.getString(i));\n      }\n    }\n  }\n else   if (realmList.clazz == byte[].class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n      }\n    }\n  }\n else   if (realmList.clazz == Date.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object timestamp=jsonArray.get(i);\n      if (timestamp instanceof String) {\n        osList.addDate(JsonUtils.stringToDate((String)timestamp));\n      }\n else {\n        osList.addDate(new Date(jsonArray.getLong(i)));\n      }\n    }\n  }\n else   if (realmList.clazz == ObjectId.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object id=jsonArray.get(i);\n      if (id instanceof String) {\n        osList.addObjectId(new ObjectId((String)id));\n      }\n else {\n        osList.addObjectId((ObjectId)id);\n      }\n    }\n  }\n else   if (realmList.clazz == Decimal128.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object decimal=jsonArray.get(i);\n      if (decimal instanceof org.bson.types.Decimal128) {\n        osList.addDecimal128((org.bson.types.Decimal128)decimal);\n      }\n else       if (decimal instanceof String) {\n        osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n      }\n else       if (decimal instanceof Integer) {\n        osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n      }\n else       if (decimal instanceof Long) {\n        osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n      }\n else       if (decimal instanceof Double) {\n        osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n      }\n else {\n        osList.addDecimal128((Decimal128)decimal);\n      }\n    }\n  }\n else   if (realmList.clazz == UUID.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object uuid=jsonArray.get(i);\n      if (uuid instanceof java.util.UUID) {\n        osList.addUUID((java.util.UUID)uuid);\n      }\n else {\n        osList.addUUID(java.util.UUID.fromString((String)uuid));\n      }\n    }\n  }\n else   if (realmList.clazz == Mixed.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object value=jsonArray.get(i);\n      Mixed mixed;\n      if (value instanceof String) {\n        mixed=Mixed.valueOf((String)value);\n      }\n else       if (value instanceof Integer) {\n        mixed=Mixed.valueOf((Integer)value);\n      }\n else       if (value instanceof Long) {\n        mixed=Mixed.valueOf((Long)value);\n      }\n else       if (value instanceof Double) {\n        mixed=Mixed.valueOf((Double)value);\n      }\n else       if (value instanceof Boolean) {\n        mixed=Mixed.valueOf((Boolean)value);\n      }\n else       if (value instanceof Mixed) {\n        mixed=(io.realm.Mixed)value;\n        mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n      }\n else {\n        throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n      }\n      osList.addMixed(mixed.getNativePtr());\n    }\n  }\n else   if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addLong(jsonArray.getLong(i));\n      }\n    }\n  }\n else {\n    throwWrongElementType(realmList.clazz);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 900,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7124,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 217,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Called by proxy to set the managed  {@link RealmList} according to the given {@link JSONObject}.\n * @param realmList  the managed {@link RealmList}.\n * @param jsonObject the {@link JSONObject} which may contain the data of the list to be set.\n * @param fieldName  the field name of the {@link RealmList}.\n * @param < E >        type of the {@link RealmList}.\n * @throws JSONException if it fails to parse JSON.\n */\nstatic <E>void setRealmListWithJsonObject(Realm realm,RealmList<E> realmList,JSONObject jsonObject,String fieldName,boolean update) throws JSONException {\n  if (!jsonObject.has(fieldName)) {\n    return;\n  }\n  OsList osList=realmList.getOsList();\n  if (jsonObject.isNull(fieldName)) {\n    osList.removeAll();\n    return;\n  }\n  JSONArray jsonArray=jsonObject.getJSONArray(fieldName);\n  osList.removeAll();\n  int arraySize=jsonArray.length();\n  if (realmList.clazz == Boolean.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addBoolean(jsonArray.getBoolean(i));\n      }\n    }\n  }\n else   if (realmList.clazz == Float.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addFloat((float)jsonArray.getDouble(i));\n      }\n    }\n  }\n else   if (realmList.clazz == Double.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addDouble(jsonArray.getDouble(i));\n      }\n    }\n  }\n else   if (realmList.clazz == String.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addString(jsonArray.getString(i));\n      }\n    }\n  }\n else   if (realmList.clazz == byte[].class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n      }\n    }\n  }\n else   if (realmList.clazz == Date.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object timestamp=jsonArray.get(i);\n      if (timestamp instanceof String) {\n        osList.addDate(JsonUtils.stringToDate((String)timestamp));\n      }\n else {\n        osList.addDate(new Date(jsonArray.getLong(i)));\n      }\n    }\n  }\n else   if (realmList.clazz == ObjectId.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object id=jsonArray.get(i);\n      if (id instanceof String) {\n        osList.addObjectId(new ObjectId((String)id));\n      }\n else {\n        osList.addObjectId((ObjectId)id);\n      }\n    }\n  }\n else   if (realmList.clazz == Decimal128.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object decimal=jsonArray.get(i);\n      if (decimal instanceof org.bson.types.Decimal128) {\n        osList.addDecimal128((org.bson.types.Decimal128)decimal);\n      }\n else       if (decimal instanceof String) {\n        osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n      }\n else       if (decimal instanceof Integer) {\n        osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n      }\n else       if (decimal instanceof Long) {\n        osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n      }\n else       if (decimal instanceof Double) {\n        osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n      }\n else {\n        osList.addDecimal128((Decimal128)decimal);\n      }\n    }\n  }\n else   if (realmList.clazz == UUID.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object uuid=jsonArray.get(i);\n      if (uuid instanceof java.util.UUID) {\n        osList.addUUID((java.util.UUID)uuid);\n      }\n else {\n        osList.addUUID(java.util.UUID.fromString((String)uuid));\n      }\n    }\n  }\n else   if (realmList.clazz == Mixed.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object value=jsonArray.get(i);\n      Mixed mixed;\n      if (value instanceof String) {\n        mixed=Mixed.valueOf((String)value);\n      }\n else       if (value instanceof Integer) {\n        mixed=Mixed.valueOf((Integer)value);\n      }\n else       if (value instanceof Long) {\n        mixed=Mixed.valueOf((Long)value);\n      }\n else       if (value instanceof Double) {\n        mixed=Mixed.valueOf((Double)value);\n      }\n else       if (value instanceof Boolean) {\n        mixed=Mixed.valueOf((Boolean)value);\n      }\n else       if (value instanceof Mixed) {\n        mixed=(io.realm.Mixed)value;\n        mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n      }\n else {\n        throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n      }\n      osList.addMixed(mixed.getNativePtr());\n    }\n  }\n else   if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addLong(jsonArray.getLong(i));\n      }\n    }\n  }\n else {\n    throwWrongElementType(realmList.clazz);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 931,
      "astHeight" : 29
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 150,
        "startColumnNumber" : 20,
        "endLineNumber" : 150,
        "endColumnNumber" : 64
      },
      "nodeContext" : "decimal instanceof org.bson.types.Decimal128",
      "nodeType" : "InstanceofExpression",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "org.bson"
  }, {
    "nodeContext" : "org.bson.types.Decimal128",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 151,
      "startColumnNumber" : 42,
      "endLineNumber" : 151,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,type]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 151,
        "startColumnNumber" : 42,
        "endLineNumber" : 151,
        "endColumnNumber" : 67
      },
      "nodeContext" : "org.bson.types.Decimal128",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 151,
        "startColumnNumber" : 41,
        "endLineNumber" : 151,
        "endColumnNumber" : 76
      },
      "nodeContext" : "(org.bson.types.Decimal128)decimal",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 151,
        "startColumnNumber" : 20,
        "endLineNumber" : 151,
        "endColumnNumber" : 77
      },
      "nodeContext" : "osList.addDecimal128((org.bson.types.Decimal128)decimal)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 151,
        "startColumnNumber" : 20,
        "endLineNumber" : 151,
        "endColumnNumber" : 78
      },
      "nodeContext" : "osList.addDecimal128((org.bson.types.Decimal128)decimal);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 150,
        "startColumnNumber" : 66,
        "endLineNumber" : 152,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  osList.addDecimal128((org.bson.types.Decimal128)decimal);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 857,
        "startLineNumber" : 150,
        "startColumnNumber" : 16,
        "endLineNumber" : 162,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (decimal instanceof org.bson.types.Decimal128) {\n  osList.addDecimal128((org.bson.types.Decimal128)decimal);\n}\n else if (decimal instanceof String) {\n  osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n}\n else if (decimal instanceof Integer) {\n  osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n}\n else if (decimal instanceof Long) {\n  osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n}\n else if (decimal instanceof Double) {\n  osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n}\n else {\n  osList.addDecimal128((Decimal128)decimal);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 137,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1071,
        "startLineNumber" : 142,
        "startColumnNumber" : 48,
        "endLineNumber" : 163,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (jsonArray.isNull(i)) {\n    osList.addNull();\n    continue;\n  }\n  Object decimal=jsonArray.get(i);\n  if (decimal instanceof org.bson.types.Decimal128) {\n    osList.addDecimal128((org.bson.types.Decimal128)decimal);\n  }\n else   if (decimal instanceof String) {\n    osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n  }\n else   if (decimal instanceof Integer) {\n    osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n  }\n else   if (decimal instanceof Long) {\n    osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n  }\n else   if (decimal instanceof Double) {\n    osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n  }\n else {\n    osList.addDecimal128((Decimal128)decimal);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 158,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1107,
        "startLineNumber" : 142,
        "startColumnNumber" : 12,
        "endLineNumber" : 163,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < arraySize; i++) {\n  if (jsonArray.isNull(i)) {\n    osList.addNull();\n    continue;\n  }\n  Object decimal=jsonArray.get(i);\n  if (decimal instanceof org.bson.types.Decimal128) {\n    osList.addDecimal128((org.bson.types.Decimal128)decimal);\n  }\n else   if (decimal instanceof String) {\n    osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n  }\n else   if (decimal instanceof Integer) {\n    osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n  }\n else   if (decimal instanceof Long) {\n    osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n  }\n else   if (decimal instanceof Double) {\n    osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n  }\n else {\n    osList.addDecimal128((Decimal128)decimal);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 169,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1131,
        "startLineNumber" : 141,
        "startColumnNumber" : 56,
        "endLineNumber" : 164,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3514,
        "startLineNumber" : 141,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 509,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4019,
        "startLineNumber" : 127,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 576,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4560,
        "startLineNumber" : 113,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 646,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4889,
        "startLineNumber" : 105,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == byte[].class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n    }\n  }\n}\n else if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 690,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5193,
        "startLineNumber" : 97,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == String.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addString(jsonArray.getString(i));\n    }\n  }\n}\n else if (realmList.clazz == byte[].class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n    }\n  }\n}\n else if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 730,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5497,
        "startLineNumber" : 89,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == Double.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addDouble(jsonArray.getDouble(i));\n    }\n  }\n}\n else if (realmList.clazz == String.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addString(jsonArray.getString(i));\n    }\n  }\n}\n else if (realmList.clazz == byte[].class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n    }\n  }\n}\n else if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 770,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5807,
        "startLineNumber" : 81,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == Float.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addFloat((float)jsonArray.getDouble(i));\n    }\n  }\n}\n else if (realmList.clazz == Double.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addDouble(jsonArray.getDouble(i));\n    }\n  }\n}\n else if (realmList.clazz == String.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addString(jsonArray.getString(i));\n    }\n  }\n}\n else if (realmList.clazz == byte[].class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n    }\n  }\n}\n else if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 812,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 6114,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == Boolean.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBoolean(jsonArray.getBoolean(i));\n    }\n  }\n}\n else if (realmList.clazz == Float.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addFloat((float)jsonArray.getDouble(i));\n    }\n  }\n}\n else if (realmList.clazz == Double.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addDouble(jsonArray.getDouble(i));\n    }\n  }\n}\n else if (realmList.clazz == String.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addString(jsonArray.getString(i));\n    }\n  }\n}\n else if (realmList.clazz == byte[].class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n    }\n  }\n}\n else if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 852,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6496,
        "startLineNumber" : 58,
        "startColumnNumber" : 114,
        "endLineNumber" : 217,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!jsonObject.has(fieldName)) {\n    return;\n  }\n  OsList osList=realmList.getOsList();\n  if (jsonObject.isNull(fieldName)) {\n    osList.removeAll();\n    return;\n  }\n  JSONArray jsonArray=jsonObject.getJSONArray(fieldName);\n  osList.removeAll();\n  int arraySize=jsonArray.length();\n  if (realmList.clazz == Boolean.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addBoolean(jsonArray.getBoolean(i));\n      }\n    }\n  }\n else   if (realmList.clazz == Float.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addFloat((float)jsonArray.getDouble(i));\n      }\n    }\n  }\n else   if (realmList.clazz == Double.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addDouble(jsonArray.getDouble(i));\n      }\n    }\n  }\n else   if (realmList.clazz == String.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addString(jsonArray.getString(i));\n      }\n    }\n  }\n else   if (realmList.clazz == byte[].class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n      }\n    }\n  }\n else   if (realmList.clazz == Date.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object timestamp=jsonArray.get(i);\n      if (timestamp instanceof String) {\n        osList.addDate(JsonUtils.stringToDate((String)timestamp));\n      }\n else {\n        osList.addDate(new Date(jsonArray.getLong(i)));\n      }\n    }\n  }\n else   if (realmList.clazz == ObjectId.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object id=jsonArray.get(i);\n      if (id instanceof String) {\n        osList.addObjectId(new ObjectId((String)id));\n      }\n else {\n        osList.addObjectId((ObjectId)id);\n      }\n    }\n  }\n else   if (realmList.clazz == Decimal128.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object decimal=jsonArray.get(i);\n      if (decimal instanceof org.bson.types.Decimal128) {\n        osList.addDecimal128((org.bson.types.Decimal128)decimal);\n      }\n else       if (decimal instanceof String) {\n        osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n      }\n else       if (decimal instanceof Integer) {\n        osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n      }\n else       if (decimal instanceof Long) {\n        osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n      }\n else       if (decimal instanceof Double) {\n        osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n      }\n else {\n        osList.addDecimal128((Decimal128)decimal);\n      }\n    }\n  }\n else   if (realmList.clazz == UUID.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object uuid=jsonArray.get(i);\n      if (uuid instanceof java.util.UUID) {\n        osList.addUUID((java.util.UUID)uuid);\n      }\n else {\n        osList.addUUID(java.util.UUID.fromString((String)uuid));\n      }\n    }\n  }\n else   if (realmList.clazz == Mixed.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object value=jsonArray.get(i);\n      Mixed mixed;\n      if (value instanceof String) {\n        mixed=Mixed.valueOf((String)value);\n      }\n else       if (value instanceof Integer) {\n        mixed=Mixed.valueOf((Integer)value);\n      }\n else       if (value instanceof Long) {\n        mixed=Mixed.valueOf((Long)value);\n      }\n else       if (value instanceof Double) {\n        mixed=Mixed.valueOf((Double)value);\n      }\n else       if (value instanceof Boolean) {\n        mixed=Mixed.valueOf((Boolean)value);\n      }\n else       if (value instanceof Mixed) {\n        mixed=(io.realm.Mixed)value;\n        mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n      }\n else {\n        throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n      }\n      osList.addMixed(mixed.getNativePtr());\n    }\n  }\n else   if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addLong(jsonArray.getLong(i));\n      }\n    }\n  }\n else {\n    throwWrongElementType(realmList.clazz);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 900,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7124,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 217,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Called by proxy to set the managed  {@link RealmList} according to the given {@link JSONObject}.\n * @param realmList  the managed {@link RealmList}.\n * @param jsonObject the {@link JSONObject} which may contain the data of the list to be set.\n * @param fieldName  the field name of the {@link RealmList}.\n * @param < E >        type of the {@link RealmList}.\n * @throws JSONException if it fails to parse JSON.\n */\nstatic <E>void setRealmListWithJsonObject(Realm realm,RealmList<E> realmList,JSONObject jsonObject,String fieldName,boolean update) throws JSONException {\n  if (!jsonObject.has(fieldName)) {\n    return;\n  }\n  OsList osList=realmList.getOsList();\n  if (jsonObject.isNull(fieldName)) {\n    osList.removeAll();\n    return;\n  }\n  JSONArray jsonArray=jsonObject.getJSONArray(fieldName);\n  osList.removeAll();\n  int arraySize=jsonArray.length();\n  if (realmList.clazz == Boolean.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addBoolean(jsonArray.getBoolean(i));\n      }\n    }\n  }\n else   if (realmList.clazz == Float.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addFloat((float)jsonArray.getDouble(i));\n      }\n    }\n  }\n else   if (realmList.clazz == Double.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addDouble(jsonArray.getDouble(i));\n      }\n    }\n  }\n else   if (realmList.clazz == String.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addString(jsonArray.getString(i));\n      }\n    }\n  }\n else   if (realmList.clazz == byte[].class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n      }\n    }\n  }\n else   if (realmList.clazz == Date.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object timestamp=jsonArray.get(i);\n      if (timestamp instanceof String) {\n        osList.addDate(JsonUtils.stringToDate((String)timestamp));\n      }\n else {\n        osList.addDate(new Date(jsonArray.getLong(i)));\n      }\n    }\n  }\n else   if (realmList.clazz == ObjectId.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object id=jsonArray.get(i);\n      if (id instanceof String) {\n        osList.addObjectId(new ObjectId((String)id));\n      }\n else {\n        osList.addObjectId((ObjectId)id);\n      }\n    }\n  }\n else   if (realmList.clazz == Decimal128.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object decimal=jsonArray.get(i);\n      if (decimal instanceof org.bson.types.Decimal128) {\n        osList.addDecimal128((org.bson.types.Decimal128)decimal);\n      }\n else       if (decimal instanceof String) {\n        osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n      }\n else       if (decimal instanceof Integer) {\n        osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n      }\n else       if (decimal instanceof Long) {\n        osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n      }\n else       if (decimal instanceof Double) {\n        osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n      }\n else {\n        osList.addDecimal128((Decimal128)decimal);\n      }\n    }\n  }\n else   if (realmList.clazz == UUID.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object uuid=jsonArray.get(i);\n      if (uuid instanceof java.util.UUID) {\n        osList.addUUID((java.util.UUID)uuid);\n      }\n else {\n        osList.addUUID(java.util.UUID.fromString((String)uuid));\n      }\n    }\n  }\n else   if (realmList.clazz == Mixed.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object value=jsonArray.get(i);\n      Mixed mixed;\n      if (value instanceof String) {\n        mixed=Mixed.valueOf((String)value);\n      }\n else       if (value instanceof Integer) {\n        mixed=Mixed.valueOf((Integer)value);\n      }\n else       if (value instanceof Long) {\n        mixed=Mixed.valueOf((Long)value);\n      }\n else       if (value instanceof Double) {\n        mixed=Mixed.valueOf((Double)value);\n      }\n else       if (value instanceof Boolean) {\n        mixed=Mixed.valueOf((Boolean)value);\n      }\n else       if (value instanceof Mixed) {\n        mixed=(io.realm.Mixed)value;\n        mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n      }\n else {\n        throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n      }\n      osList.addMixed(mixed.getNativePtr());\n    }\n  }\n else   if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addLong(jsonArray.getLong(i));\n      }\n    }\n  }\n else {\n    throwWrongElementType(realmList.clazz);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 931,
      "astHeight" : 29
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 151,
        "startColumnNumber" : 20,
        "endLineNumber" : 151,
        "endColumnNumber" : 78
      },
      "nodeContext" : "osList.addDecimal128((org.bson.types.Decimal128)decimal);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 8
    },
    "tokenLength" : 4,
    "type" : "org.bson"
  }, {
    "nodeContext" : "org.bson.types.Decimal128",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 155,
      "startColumnNumber" : 45,
      "endLineNumber" : 155,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,type]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 155,
        "startColumnNumber" : 45,
        "endLineNumber" : 155,
        "endColumnNumber" : 70
      },
      "nodeContext" : "org.bson.types.Decimal128",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 155,
        "startColumnNumber" : 41,
        "endLineNumber" : 155,
        "endColumnNumber" : 91
      },
      "nodeContext" : "new org.bson.types.Decimal128((Integer)(decimal))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 155,
        "startColumnNumber" : 20,
        "endLineNumber" : 155,
        "endColumnNumber" : 92
      },
      "nodeContext" : "osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 155,
        "startColumnNumber" : 20,
        "endLineNumber" : 155,
        "endColumnNumber" : 93
      },
      "nodeContext" : "osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 154,
        "startColumnNumber" : 55,
        "endLineNumber" : 156,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 554,
        "startLineNumber" : 154,
        "startColumnNumber" : 23,
        "endLineNumber" : 162,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (decimal instanceof Integer) {\n  osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n}\n else if (decimal instanceof Long) {\n  osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n}\n else if (decimal instanceof Double) {\n  osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n}\n else {\n  osList.addDecimal128((Decimal128)decimal);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 88,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 703,
        "startLineNumber" : 152,
        "startColumnNumber" : 23,
        "endLineNumber" : 162,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (decimal instanceof String) {\n  osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n}\n else if (decimal instanceof Integer) {\n  osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n}\n else if (decimal instanceof Long) {\n  osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n}\n else if (decimal instanceof Double) {\n  osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n}\n else {\n  osList.addDecimal128((Decimal128)decimal);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 111,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 857,
        "startLineNumber" : 150,
        "startColumnNumber" : 16,
        "endLineNumber" : 162,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (decimal instanceof org.bson.types.Decimal128) {\n  osList.addDecimal128((org.bson.types.Decimal128)decimal);\n}\n else if (decimal instanceof String) {\n  osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n}\n else if (decimal instanceof Integer) {\n  osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n}\n else if (decimal instanceof Long) {\n  osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n}\n else if (decimal instanceof Double) {\n  osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n}\n else {\n  osList.addDecimal128((Decimal128)decimal);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 137,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1071,
        "startLineNumber" : 142,
        "startColumnNumber" : 48,
        "endLineNumber" : 163,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (jsonArray.isNull(i)) {\n    osList.addNull();\n    continue;\n  }\n  Object decimal=jsonArray.get(i);\n  if (decimal instanceof org.bson.types.Decimal128) {\n    osList.addDecimal128((org.bson.types.Decimal128)decimal);\n  }\n else   if (decimal instanceof String) {\n    osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n  }\n else   if (decimal instanceof Integer) {\n    osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n  }\n else   if (decimal instanceof Long) {\n    osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n  }\n else   if (decimal instanceof Double) {\n    osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n  }\n else {\n    osList.addDecimal128((Decimal128)decimal);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 158,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1107,
        "startLineNumber" : 142,
        "startColumnNumber" : 12,
        "endLineNumber" : 163,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < arraySize; i++) {\n  if (jsonArray.isNull(i)) {\n    osList.addNull();\n    continue;\n  }\n  Object decimal=jsonArray.get(i);\n  if (decimal instanceof org.bson.types.Decimal128) {\n    osList.addDecimal128((org.bson.types.Decimal128)decimal);\n  }\n else   if (decimal instanceof String) {\n    osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n  }\n else   if (decimal instanceof Integer) {\n    osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n  }\n else   if (decimal instanceof Long) {\n    osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n  }\n else   if (decimal instanceof Double) {\n    osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n  }\n else {\n    osList.addDecimal128((Decimal128)decimal);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 169,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1131,
        "startLineNumber" : 141,
        "startColumnNumber" : 56,
        "endLineNumber" : 164,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3514,
        "startLineNumber" : 141,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 509,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4019,
        "startLineNumber" : 127,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 576,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4560,
        "startLineNumber" : 113,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 646,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4889,
        "startLineNumber" : 105,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == byte[].class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n    }\n  }\n}\n else if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 690,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5193,
        "startLineNumber" : 97,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == String.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addString(jsonArray.getString(i));\n    }\n  }\n}\n else if (realmList.clazz == byte[].class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n    }\n  }\n}\n else if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 730,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5497,
        "startLineNumber" : 89,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == Double.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addDouble(jsonArray.getDouble(i));\n    }\n  }\n}\n else if (realmList.clazz == String.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addString(jsonArray.getString(i));\n    }\n  }\n}\n else if (realmList.clazz == byte[].class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n    }\n  }\n}\n else if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 770,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5807,
        "startLineNumber" : 81,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == Float.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addFloat((float)jsonArray.getDouble(i));\n    }\n  }\n}\n else if (realmList.clazz == Double.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addDouble(jsonArray.getDouble(i));\n    }\n  }\n}\n else if (realmList.clazz == String.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addString(jsonArray.getString(i));\n    }\n  }\n}\n else if (realmList.clazz == byte[].class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n    }\n  }\n}\n else if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 812,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 6114,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == Boolean.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBoolean(jsonArray.getBoolean(i));\n    }\n  }\n}\n else if (realmList.clazz == Float.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addFloat((float)jsonArray.getDouble(i));\n    }\n  }\n}\n else if (realmList.clazz == Double.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addDouble(jsonArray.getDouble(i));\n    }\n  }\n}\n else if (realmList.clazz == String.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addString(jsonArray.getString(i));\n    }\n  }\n}\n else if (realmList.clazz == byte[].class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n    }\n  }\n}\n else if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 852,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6496,
        "startLineNumber" : 58,
        "startColumnNumber" : 114,
        "endLineNumber" : 217,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!jsonObject.has(fieldName)) {\n    return;\n  }\n  OsList osList=realmList.getOsList();\n  if (jsonObject.isNull(fieldName)) {\n    osList.removeAll();\n    return;\n  }\n  JSONArray jsonArray=jsonObject.getJSONArray(fieldName);\n  osList.removeAll();\n  int arraySize=jsonArray.length();\n  if (realmList.clazz == Boolean.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addBoolean(jsonArray.getBoolean(i));\n      }\n    }\n  }\n else   if (realmList.clazz == Float.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addFloat((float)jsonArray.getDouble(i));\n      }\n    }\n  }\n else   if (realmList.clazz == Double.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addDouble(jsonArray.getDouble(i));\n      }\n    }\n  }\n else   if (realmList.clazz == String.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addString(jsonArray.getString(i));\n      }\n    }\n  }\n else   if (realmList.clazz == byte[].class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n      }\n    }\n  }\n else   if (realmList.clazz == Date.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object timestamp=jsonArray.get(i);\n      if (timestamp instanceof String) {\n        osList.addDate(JsonUtils.stringToDate((String)timestamp));\n      }\n else {\n        osList.addDate(new Date(jsonArray.getLong(i)));\n      }\n    }\n  }\n else   if (realmList.clazz == ObjectId.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object id=jsonArray.get(i);\n      if (id instanceof String) {\n        osList.addObjectId(new ObjectId((String)id));\n      }\n else {\n        osList.addObjectId((ObjectId)id);\n      }\n    }\n  }\n else   if (realmList.clazz == Decimal128.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object decimal=jsonArray.get(i);\n      if (decimal instanceof org.bson.types.Decimal128) {\n        osList.addDecimal128((org.bson.types.Decimal128)decimal);\n      }\n else       if (decimal instanceof String) {\n        osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n      }\n else       if (decimal instanceof Integer) {\n        osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n      }\n else       if (decimal instanceof Long) {\n        osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n      }\n else       if (decimal instanceof Double) {\n        osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n      }\n else {\n        osList.addDecimal128((Decimal128)decimal);\n      }\n    }\n  }\n else   if (realmList.clazz == UUID.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object uuid=jsonArray.get(i);\n      if (uuid instanceof java.util.UUID) {\n        osList.addUUID((java.util.UUID)uuid);\n      }\n else {\n        osList.addUUID(java.util.UUID.fromString((String)uuid));\n      }\n    }\n  }\n else   if (realmList.clazz == Mixed.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object value=jsonArray.get(i);\n      Mixed mixed;\n      if (value instanceof String) {\n        mixed=Mixed.valueOf((String)value);\n      }\n else       if (value instanceof Integer) {\n        mixed=Mixed.valueOf((Integer)value);\n      }\n else       if (value instanceof Long) {\n        mixed=Mixed.valueOf((Long)value);\n      }\n else       if (value instanceof Double) {\n        mixed=Mixed.valueOf((Double)value);\n      }\n else       if (value instanceof Boolean) {\n        mixed=Mixed.valueOf((Boolean)value);\n      }\n else       if (value instanceof Mixed) {\n        mixed=(io.realm.Mixed)value;\n        mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n      }\n else {\n        throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n      }\n      osList.addMixed(mixed.getNativePtr());\n    }\n  }\n else   if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addLong(jsonArray.getLong(i));\n      }\n    }\n  }\n else {\n    throwWrongElementType(realmList.clazz);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 900,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7124,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 217,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Called by proxy to set the managed  {@link RealmList} according to the given {@link JSONObject}.\n * @param realmList  the managed {@link RealmList}.\n * @param jsonObject the {@link JSONObject} which may contain the data of the list to be set.\n * @param fieldName  the field name of the {@link RealmList}.\n * @param < E >        type of the {@link RealmList}.\n * @throws JSONException if it fails to parse JSON.\n */\nstatic <E>void setRealmListWithJsonObject(Realm realm,RealmList<E> realmList,JSONObject jsonObject,String fieldName,boolean update) throws JSONException {\n  if (!jsonObject.has(fieldName)) {\n    return;\n  }\n  OsList osList=realmList.getOsList();\n  if (jsonObject.isNull(fieldName)) {\n    osList.removeAll();\n    return;\n  }\n  JSONArray jsonArray=jsonObject.getJSONArray(fieldName);\n  osList.removeAll();\n  int arraySize=jsonArray.length();\n  if (realmList.clazz == Boolean.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addBoolean(jsonArray.getBoolean(i));\n      }\n    }\n  }\n else   if (realmList.clazz == Float.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addFloat((float)jsonArray.getDouble(i));\n      }\n    }\n  }\n else   if (realmList.clazz == Double.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addDouble(jsonArray.getDouble(i));\n      }\n    }\n  }\n else   if (realmList.clazz == String.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addString(jsonArray.getString(i));\n      }\n    }\n  }\n else   if (realmList.clazz == byte[].class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n      }\n    }\n  }\n else   if (realmList.clazz == Date.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object timestamp=jsonArray.get(i);\n      if (timestamp instanceof String) {\n        osList.addDate(JsonUtils.stringToDate((String)timestamp));\n      }\n else {\n        osList.addDate(new Date(jsonArray.getLong(i)));\n      }\n    }\n  }\n else   if (realmList.clazz == ObjectId.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object id=jsonArray.get(i);\n      if (id instanceof String) {\n        osList.addObjectId(new ObjectId((String)id));\n      }\n else {\n        osList.addObjectId((ObjectId)id);\n      }\n    }\n  }\n else   if (realmList.clazz == Decimal128.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object decimal=jsonArray.get(i);\n      if (decimal instanceof org.bson.types.Decimal128) {\n        osList.addDecimal128((org.bson.types.Decimal128)decimal);\n      }\n else       if (decimal instanceof String) {\n        osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n      }\n else       if (decimal instanceof Integer) {\n        osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n      }\n else       if (decimal instanceof Long) {\n        osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n      }\n else       if (decimal instanceof Double) {\n        osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n      }\n else {\n        osList.addDecimal128((Decimal128)decimal);\n      }\n    }\n  }\n else   if (realmList.clazz == UUID.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object uuid=jsonArray.get(i);\n      if (uuid instanceof java.util.UUID) {\n        osList.addUUID((java.util.UUID)uuid);\n      }\n else {\n        osList.addUUID(java.util.UUID.fromString((String)uuid));\n      }\n    }\n  }\n else   if (realmList.clazz == Mixed.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object value=jsonArray.get(i);\n      Mixed mixed;\n      if (value instanceof String) {\n        mixed=Mixed.valueOf((String)value);\n      }\n else       if (value instanceof Integer) {\n        mixed=Mixed.valueOf((Integer)value);\n      }\n else       if (value instanceof Long) {\n        mixed=Mixed.valueOf((Long)value);\n      }\n else       if (value instanceof Double) {\n        mixed=Mixed.valueOf((Double)value);\n      }\n else       if (value instanceof Boolean) {\n        mixed=Mixed.valueOf((Boolean)value);\n      }\n else       if (value instanceof Mixed) {\n        mixed=(io.realm.Mixed)value;\n        mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n      }\n else {\n        throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n      }\n      osList.addMixed(mixed.getNativePtr());\n    }\n  }\n else   if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addLong(jsonArray.getLong(i));\n      }\n    }\n  }\n else {\n    throwWrongElementType(realmList.clazz);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 931,
      "astHeight" : 29
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 155,
        "startColumnNumber" : 20,
        "endLineNumber" : 155,
        "endColumnNumber" : 93
      },
      "nodeContext" : "osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 8
    },
    "tokenLength" : 4,
    "type" : "org.bson"
  }, {
    "nodeContext" : "org.bson.types.Decimal128",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 157,
      "startColumnNumber" : 45,
      "endLineNumber" : 157,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,type]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 157,
        "startColumnNumber" : 45,
        "endLineNumber" : 157,
        "endColumnNumber" : 70
      },
      "nodeContext" : "org.bson.types.Decimal128",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 157,
        "startColumnNumber" : 41,
        "endLineNumber" : 157,
        "endColumnNumber" : 88
      },
      "nodeContext" : "new org.bson.types.Decimal128((Long)(decimal))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 157,
        "startColumnNumber" : 20,
        "endLineNumber" : 157,
        "endColumnNumber" : 89
      },
      "nodeContext" : "osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 157,
        "startColumnNumber" : 20,
        "endLineNumber" : 157,
        "endColumnNumber" : 90
      },
      "nodeContext" : "osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 156,
        "startColumnNumber" : 52,
        "endLineNumber" : 158,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 403,
        "startLineNumber" : 156,
        "startColumnNumber" : 23,
        "endLineNumber" : 162,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (decimal instanceof Long) {\n  osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n}\n else if (decimal instanceof Double) {\n  osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n}\n else {\n  osList.addDecimal128((Decimal128)decimal);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 64,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 554,
        "startLineNumber" : 154,
        "startColumnNumber" : 23,
        "endLineNumber" : 162,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (decimal instanceof Integer) {\n  osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n}\n else if (decimal instanceof Long) {\n  osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n}\n else if (decimal instanceof Double) {\n  osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n}\n else {\n  osList.addDecimal128((Decimal128)decimal);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 88,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 703,
        "startLineNumber" : 152,
        "startColumnNumber" : 23,
        "endLineNumber" : 162,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (decimal instanceof String) {\n  osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n}\n else if (decimal instanceof Integer) {\n  osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n}\n else if (decimal instanceof Long) {\n  osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n}\n else if (decimal instanceof Double) {\n  osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n}\n else {\n  osList.addDecimal128((Decimal128)decimal);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 111,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 857,
        "startLineNumber" : 150,
        "startColumnNumber" : 16,
        "endLineNumber" : 162,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (decimal instanceof org.bson.types.Decimal128) {\n  osList.addDecimal128((org.bson.types.Decimal128)decimal);\n}\n else if (decimal instanceof String) {\n  osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n}\n else if (decimal instanceof Integer) {\n  osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n}\n else if (decimal instanceof Long) {\n  osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n}\n else if (decimal instanceof Double) {\n  osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n}\n else {\n  osList.addDecimal128((Decimal128)decimal);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 137,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1071,
        "startLineNumber" : 142,
        "startColumnNumber" : 48,
        "endLineNumber" : 163,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (jsonArray.isNull(i)) {\n    osList.addNull();\n    continue;\n  }\n  Object decimal=jsonArray.get(i);\n  if (decimal instanceof org.bson.types.Decimal128) {\n    osList.addDecimal128((org.bson.types.Decimal128)decimal);\n  }\n else   if (decimal instanceof String) {\n    osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n  }\n else   if (decimal instanceof Integer) {\n    osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n  }\n else   if (decimal instanceof Long) {\n    osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n  }\n else   if (decimal instanceof Double) {\n    osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n  }\n else {\n    osList.addDecimal128((Decimal128)decimal);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 158,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1107,
        "startLineNumber" : 142,
        "startColumnNumber" : 12,
        "endLineNumber" : 163,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < arraySize; i++) {\n  if (jsonArray.isNull(i)) {\n    osList.addNull();\n    continue;\n  }\n  Object decimal=jsonArray.get(i);\n  if (decimal instanceof org.bson.types.Decimal128) {\n    osList.addDecimal128((org.bson.types.Decimal128)decimal);\n  }\n else   if (decimal instanceof String) {\n    osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n  }\n else   if (decimal instanceof Integer) {\n    osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n  }\n else   if (decimal instanceof Long) {\n    osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n  }\n else   if (decimal instanceof Double) {\n    osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n  }\n else {\n    osList.addDecimal128((Decimal128)decimal);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 169,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1131,
        "startLineNumber" : 141,
        "startColumnNumber" : 56,
        "endLineNumber" : 164,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3514,
        "startLineNumber" : 141,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 509,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4019,
        "startLineNumber" : 127,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 576,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4560,
        "startLineNumber" : 113,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 646,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4889,
        "startLineNumber" : 105,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == byte[].class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n    }\n  }\n}\n else if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 690,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5193,
        "startLineNumber" : 97,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == String.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addString(jsonArray.getString(i));\n    }\n  }\n}\n else if (realmList.clazz == byte[].class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n    }\n  }\n}\n else if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 730,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5497,
        "startLineNumber" : 89,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == Double.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addDouble(jsonArray.getDouble(i));\n    }\n  }\n}\n else if (realmList.clazz == String.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addString(jsonArray.getString(i));\n    }\n  }\n}\n else if (realmList.clazz == byte[].class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n    }\n  }\n}\n else if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 770,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5807,
        "startLineNumber" : 81,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == Float.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addFloat((float)jsonArray.getDouble(i));\n    }\n  }\n}\n else if (realmList.clazz == Double.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addDouble(jsonArray.getDouble(i));\n    }\n  }\n}\n else if (realmList.clazz == String.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addString(jsonArray.getString(i));\n    }\n  }\n}\n else if (realmList.clazz == byte[].class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n    }\n  }\n}\n else if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 812,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 6114,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == Boolean.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBoolean(jsonArray.getBoolean(i));\n    }\n  }\n}\n else if (realmList.clazz == Float.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addFloat((float)jsonArray.getDouble(i));\n    }\n  }\n}\n else if (realmList.clazz == Double.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addDouble(jsonArray.getDouble(i));\n    }\n  }\n}\n else if (realmList.clazz == String.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addString(jsonArray.getString(i));\n    }\n  }\n}\n else if (realmList.clazz == byte[].class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n    }\n  }\n}\n else if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 852,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6496,
        "startLineNumber" : 58,
        "startColumnNumber" : 114,
        "endLineNumber" : 217,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!jsonObject.has(fieldName)) {\n    return;\n  }\n  OsList osList=realmList.getOsList();\n  if (jsonObject.isNull(fieldName)) {\n    osList.removeAll();\n    return;\n  }\n  JSONArray jsonArray=jsonObject.getJSONArray(fieldName);\n  osList.removeAll();\n  int arraySize=jsonArray.length();\n  if (realmList.clazz == Boolean.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addBoolean(jsonArray.getBoolean(i));\n      }\n    }\n  }\n else   if (realmList.clazz == Float.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addFloat((float)jsonArray.getDouble(i));\n      }\n    }\n  }\n else   if (realmList.clazz == Double.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addDouble(jsonArray.getDouble(i));\n      }\n    }\n  }\n else   if (realmList.clazz == String.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addString(jsonArray.getString(i));\n      }\n    }\n  }\n else   if (realmList.clazz == byte[].class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n      }\n    }\n  }\n else   if (realmList.clazz == Date.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object timestamp=jsonArray.get(i);\n      if (timestamp instanceof String) {\n        osList.addDate(JsonUtils.stringToDate((String)timestamp));\n      }\n else {\n        osList.addDate(new Date(jsonArray.getLong(i)));\n      }\n    }\n  }\n else   if (realmList.clazz == ObjectId.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object id=jsonArray.get(i);\n      if (id instanceof String) {\n        osList.addObjectId(new ObjectId((String)id));\n      }\n else {\n        osList.addObjectId((ObjectId)id);\n      }\n    }\n  }\n else   if (realmList.clazz == Decimal128.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object decimal=jsonArray.get(i);\n      if (decimal instanceof org.bson.types.Decimal128) {\n        osList.addDecimal128((org.bson.types.Decimal128)decimal);\n      }\n else       if (decimal instanceof String) {\n        osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n      }\n else       if (decimal instanceof Integer) {\n        osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n      }\n else       if (decimal instanceof Long) {\n        osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n      }\n else       if (decimal instanceof Double) {\n        osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n      }\n else {\n        osList.addDecimal128((Decimal128)decimal);\n      }\n    }\n  }\n else   if (realmList.clazz == UUID.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object uuid=jsonArray.get(i);\n      if (uuid instanceof java.util.UUID) {\n        osList.addUUID((java.util.UUID)uuid);\n      }\n else {\n        osList.addUUID(java.util.UUID.fromString((String)uuid));\n      }\n    }\n  }\n else   if (realmList.clazz == Mixed.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object value=jsonArray.get(i);\n      Mixed mixed;\n      if (value instanceof String) {\n        mixed=Mixed.valueOf((String)value);\n      }\n else       if (value instanceof Integer) {\n        mixed=Mixed.valueOf((Integer)value);\n      }\n else       if (value instanceof Long) {\n        mixed=Mixed.valueOf((Long)value);\n      }\n else       if (value instanceof Double) {\n        mixed=Mixed.valueOf((Double)value);\n      }\n else       if (value instanceof Boolean) {\n        mixed=Mixed.valueOf((Boolean)value);\n      }\n else       if (value instanceof Mixed) {\n        mixed=(io.realm.Mixed)value;\n        mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n      }\n else {\n        throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n      }\n      osList.addMixed(mixed.getNativePtr());\n    }\n  }\n else   if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addLong(jsonArray.getLong(i));\n      }\n    }\n  }\n else {\n    throwWrongElementType(realmList.clazz);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 900,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7124,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 217,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Called by proxy to set the managed  {@link RealmList} according to the given {@link JSONObject}.\n * @param realmList  the managed {@link RealmList}.\n * @param jsonObject the {@link JSONObject} which may contain the data of the list to be set.\n * @param fieldName  the field name of the {@link RealmList}.\n * @param < E >        type of the {@link RealmList}.\n * @throws JSONException if it fails to parse JSON.\n */\nstatic <E>void setRealmListWithJsonObject(Realm realm,RealmList<E> realmList,JSONObject jsonObject,String fieldName,boolean update) throws JSONException {\n  if (!jsonObject.has(fieldName)) {\n    return;\n  }\n  OsList osList=realmList.getOsList();\n  if (jsonObject.isNull(fieldName)) {\n    osList.removeAll();\n    return;\n  }\n  JSONArray jsonArray=jsonObject.getJSONArray(fieldName);\n  osList.removeAll();\n  int arraySize=jsonArray.length();\n  if (realmList.clazz == Boolean.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addBoolean(jsonArray.getBoolean(i));\n      }\n    }\n  }\n else   if (realmList.clazz == Float.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addFloat((float)jsonArray.getDouble(i));\n      }\n    }\n  }\n else   if (realmList.clazz == Double.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addDouble(jsonArray.getDouble(i));\n      }\n    }\n  }\n else   if (realmList.clazz == String.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addString(jsonArray.getString(i));\n      }\n    }\n  }\n else   if (realmList.clazz == byte[].class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n      }\n    }\n  }\n else   if (realmList.clazz == Date.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object timestamp=jsonArray.get(i);\n      if (timestamp instanceof String) {\n        osList.addDate(JsonUtils.stringToDate((String)timestamp));\n      }\n else {\n        osList.addDate(new Date(jsonArray.getLong(i)));\n      }\n    }\n  }\n else   if (realmList.clazz == ObjectId.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object id=jsonArray.get(i);\n      if (id instanceof String) {\n        osList.addObjectId(new ObjectId((String)id));\n      }\n else {\n        osList.addObjectId((ObjectId)id);\n      }\n    }\n  }\n else   if (realmList.clazz == Decimal128.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object decimal=jsonArray.get(i);\n      if (decimal instanceof org.bson.types.Decimal128) {\n        osList.addDecimal128((org.bson.types.Decimal128)decimal);\n      }\n else       if (decimal instanceof String) {\n        osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n      }\n else       if (decimal instanceof Integer) {\n        osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n      }\n else       if (decimal instanceof Long) {\n        osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n      }\n else       if (decimal instanceof Double) {\n        osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n      }\n else {\n        osList.addDecimal128((Decimal128)decimal);\n      }\n    }\n  }\n else   if (realmList.clazz == UUID.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object uuid=jsonArray.get(i);\n      if (uuid instanceof java.util.UUID) {\n        osList.addUUID((java.util.UUID)uuid);\n      }\n else {\n        osList.addUUID(java.util.UUID.fromString((String)uuid));\n      }\n    }\n  }\n else   if (realmList.clazz == Mixed.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object value=jsonArray.get(i);\n      Mixed mixed;\n      if (value instanceof String) {\n        mixed=Mixed.valueOf((String)value);\n      }\n else       if (value instanceof Integer) {\n        mixed=Mixed.valueOf((Integer)value);\n      }\n else       if (value instanceof Long) {\n        mixed=Mixed.valueOf((Long)value);\n      }\n else       if (value instanceof Double) {\n        mixed=Mixed.valueOf((Double)value);\n      }\n else       if (value instanceof Boolean) {\n        mixed=Mixed.valueOf((Boolean)value);\n      }\n else       if (value instanceof Mixed) {\n        mixed=(io.realm.Mixed)value;\n        mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n      }\n else {\n        throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n      }\n      osList.addMixed(mixed.getNativePtr());\n    }\n  }\n else   if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addLong(jsonArray.getLong(i));\n      }\n    }\n  }\n else {\n    throwWrongElementType(realmList.clazz);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 931,
      "astHeight" : 29
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 157,
        "startColumnNumber" : 20,
        "endLineNumber" : 157,
        "endColumnNumber" : 90
      },
      "nodeContext" : "osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 8
    },
    "tokenLength" : 4,
    "type" : "org.bson"
  }, {
    "nodeContext" : "org.bson.types.Decimal128",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 159,
      "startColumnNumber" : 45,
      "endLineNumber" : 159,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,type]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 159,
        "startColumnNumber" : 45,
        "endLineNumber" : 159,
        "endColumnNumber" : 70
      },
      "nodeContext" : "org.bson.types.Decimal128",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 159,
        "startColumnNumber" : 41,
        "endLineNumber" : 159,
        "endColumnNumber" : 116
      },
      "nodeContext" : "new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal)))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 159,
        "startColumnNumber" : 20,
        "endLineNumber" : 159,
        "endColumnNumber" : 117
      },
      "nodeContext" : "osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 159,
        "startColumnNumber" : 20,
        "endLineNumber" : 159,
        "endColumnNumber" : 118
      },
      "nodeContext" : "osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 158,
        "startColumnNumber" : 54,
        "endLineNumber" : 160,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 258,
        "startLineNumber" : 158,
        "startColumnNumber" : 23,
        "endLineNumber" : 162,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (decimal instanceof Double) {\n  osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n}\n else {\n  osList.addDecimal128((Decimal128)decimal);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 403,
        "startLineNumber" : 156,
        "startColumnNumber" : 23,
        "endLineNumber" : 162,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (decimal instanceof Long) {\n  osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n}\n else if (decimal instanceof Double) {\n  osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n}\n else {\n  osList.addDecimal128((Decimal128)decimal);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 64,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 554,
        "startLineNumber" : 154,
        "startColumnNumber" : 23,
        "endLineNumber" : 162,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (decimal instanceof Integer) {\n  osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n}\n else if (decimal instanceof Long) {\n  osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n}\n else if (decimal instanceof Double) {\n  osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n}\n else {\n  osList.addDecimal128((Decimal128)decimal);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 88,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 703,
        "startLineNumber" : 152,
        "startColumnNumber" : 23,
        "endLineNumber" : 162,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (decimal instanceof String) {\n  osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n}\n else if (decimal instanceof Integer) {\n  osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n}\n else if (decimal instanceof Long) {\n  osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n}\n else if (decimal instanceof Double) {\n  osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n}\n else {\n  osList.addDecimal128((Decimal128)decimal);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 111,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 857,
        "startLineNumber" : 150,
        "startColumnNumber" : 16,
        "endLineNumber" : 162,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (decimal instanceof org.bson.types.Decimal128) {\n  osList.addDecimal128((org.bson.types.Decimal128)decimal);\n}\n else if (decimal instanceof String) {\n  osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n}\n else if (decimal instanceof Integer) {\n  osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n}\n else if (decimal instanceof Long) {\n  osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n}\n else if (decimal instanceof Double) {\n  osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n}\n else {\n  osList.addDecimal128((Decimal128)decimal);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 137,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1071,
        "startLineNumber" : 142,
        "startColumnNumber" : 48,
        "endLineNumber" : 163,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (jsonArray.isNull(i)) {\n    osList.addNull();\n    continue;\n  }\n  Object decimal=jsonArray.get(i);\n  if (decimal instanceof org.bson.types.Decimal128) {\n    osList.addDecimal128((org.bson.types.Decimal128)decimal);\n  }\n else   if (decimal instanceof String) {\n    osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n  }\n else   if (decimal instanceof Integer) {\n    osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n  }\n else   if (decimal instanceof Long) {\n    osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n  }\n else   if (decimal instanceof Double) {\n    osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n  }\n else {\n    osList.addDecimal128((Decimal128)decimal);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 158,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1107,
        "startLineNumber" : 142,
        "startColumnNumber" : 12,
        "endLineNumber" : 163,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < arraySize; i++) {\n  if (jsonArray.isNull(i)) {\n    osList.addNull();\n    continue;\n  }\n  Object decimal=jsonArray.get(i);\n  if (decimal instanceof org.bson.types.Decimal128) {\n    osList.addDecimal128((org.bson.types.Decimal128)decimal);\n  }\n else   if (decimal instanceof String) {\n    osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n  }\n else   if (decimal instanceof Integer) {\n    osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n  }\n else   if (decimal instanceof Long) {\n    osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n  }\n else   if (decimal instanceof Double) {\n    osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n  }\n else {\n    osList.addDecimal128((Decimal128)decimal);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 169,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1131,
        "startLineNumber" : 141,
        "startColumnNumber" : 56,
        "endLineNumber" : 164,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3514,
        "startLineNumber" : 141,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 509,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4019,
        "startLineNumber" : 127,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 576,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4560,
        "startLineNumber" : 113,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 646,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4889,
        "startLineNumber" : 105,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == byte[].class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n    }\n  }\n}\n else if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 690,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5193,
        "startLineNumber" : 97,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == String.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addString(jsonArray.getString(i));\n    }\n  }\n}\n else if (realmList.clazz == byte[].class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n    }\n  }\n}\n else if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 730,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5497,
        "startLineNumber" : 89,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == Double.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addDouble(jsonArray.getDouble(i));\n    }\n  }\n}\n else if (realmList.clazz == String.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addString(jsonArray.getString(i));\n    }\n  }\n}\n else if (realmList.clazz == byte[].class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n    }\n  }\n}\n else if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 770,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5807,
        "startLineNumber" : 81,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == Float.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addFloat((float)jsonArray.getDouble(i));\n    }\n  }\n}\n else if (realmList.clazz == Double.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addDouble(jsonArray.getDouble(i));\n    }\n  }\n}\n else if (realmList.clazz == String.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addString(jsonArray.getString(i));\n    }\n  }\n}\n else if (realmList.clazz == byte[].class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n    }\n  }\n}\n else if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 812,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 6114,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == Boolean.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBoolean(jsonArray.getBoolean(i));\n    }\n  }\n}\n else if (realmList.clazz == Float.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addFloat((float)jsonArray.getDouble(i));\n    }\n  }\n}\n else if (realmList.clazz == Double.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addDouble(jsonArray.getDouble(i));\n    }\n  }\n}\n else if (realmList.clazz == String.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addString(jsonArray.getString(i));\n    }\n  }\n}\n else if (realmList.clazz == byte[].class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n    }\n  }\n}\n else if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 852,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6496,
        "startLineNumber" : 58,
        "startColumnNumber" : 114,
        "endLineNumber" : 217,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!jsonObject.has(fieldName)) {\n    return;\n  }\n  OsList osList=realmList.getOsList();\n  if (jsonObject.isNull(fieldName)) {\n    osList.removeAll();\n    return;\n  }\n  JSONArray jsonArray=jsonObject.getJSONArray(fieldName);\n  osList.removeAll();\n  int arraySize=jsonArray.length();\n  if (realmList.clazz == Boolean.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addBoolean(jsonArray.getBoolean(i));\n      }\n    }\n  }\n else   if (realmList.clazz == Float.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addFloat((float)jsonArray.getDouble(i));\n      }\n    }\n  }\n else   if (realmList.clazz == Double.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addDouble(jsonArray.getDouble(i));\n      }\n    }\n  }\n else   if (realmList.clazz == String.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addString(jsonArray.getString(i));\n      }\n    }\n  }\n else   if (realmList.clazz == byte[].class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n      }\n    }\n  }\n else   if (realmList.clazz == Date.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object timestamp=jsonArray.get(i);\n      if (timestamp instanceof String) {\n        osList.addDate(JsonUtils.stringToDate((String)timestamp));\n      }\n else {\n        osList.addDate(new Date(jsonArray.getLong(i)));\n      }\n    }\n  }\n else   if (realmList.clazz == ObjectId.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object id=jsonArray.get(i);\n      if (id instanceof String) {\n        osList.addObjectId(new ObjectId((String)id));\n      }\n else {\n        osList.addObjectId((ObjectId)id);\n      }\n    }\n  }\n else   if (realmList.clazz == Decimal128.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object decimal=jsonArray.get(i);\n      if (decimal instanceof org.bson.types.Decimal128) {\n        osList.addDecimal128((org.bson.types.Decimal128)decimal);\n      }\n else       if (decimal instanceof String) {\n        osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n      }\n else       if (decimal instanceof Integer) {\n        osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n      }\n else       if (decimal instanceof Long) {\n        osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n      }\n else       if (decimal instanceof Double) {\n        osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n      }\n else {\n        osList.addDecimal128((Decimal128)decimal);\n      }\n    }\n  }\n else   if (realmList.clazz == UUID.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object uuid=jsonArray.get(i);\n      if (uuid instanceof java.util.UUID) {\n        osList.addUUID((java.util.UUID)uuid);\n      }\n else {\n        osList.addUUID(java.util.UUID.fromString((String)uuid));\n      }\n    }\n  }\n else   if (realmList.clazz == Mixed.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object value=jsonArray.get(i);\n      Mixed mixed;\n      if (value instanceof String) {\n        mixed=Mixed.valueOf((String)value);\n      }\n else       if (value instanceof Integer) {\n        mixed=Mixed.valueOf((Integer)value);\n      }\n else       if (value instanceof Long) {\n        mixed=Mixed.valueOf((Long)value);\n      }\n else       if (value instanceof Double) {\n        mixed=Mixed.valueOf((Double)value);\n      }\n else       if (value instanceof Boolean) {\n        mixed=Mixed.valueOf((Boolean)value);\n      }\n else       if (value instanceof Mixed) {\n        mixed=(io.realm.Mixed)value;\n        mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n      }\n else {\n        throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n      }\n      osList.addMixed(mixed.getNativePtr());\n    }\n  }\n else   if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addLong(jsonArray.getLong(i));\n      }\n    }\n  }\n else {\n    throwWrongElementType(realmList.clazz);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 900,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7124,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 217,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Called by proxy to set the managed  {@link RealmList} according to the given {@link JSONObject}.\n * @param realmList  the managed {@link RealmList}.\n * @param jsonObject the {@link JSONObject} which may contain the data of the list to be set.\n * @param fieldName  the field name of the {@link RealmList}.\n * @param < E >        type of the {@link RealmList}.\n * @throws JSONException if it fails to parse JSON.\n */\nstatic <E>void setRealmListWithJsonObject(Realm realm,RealmList<E> realmList,JSONObject jsonObject,String fieldName,boolean update) throws JSONException {\n  if (!jsonObject.has(fieldName)) {\n    return;\n  }\n  OsList osList=realmList.getOsList();\n  if (jsonObject.isNull(fieldName)) {\n    osList.removeAll();\n    return;\n  }\n  JSONArray jsonArray=jsonObject.getJSONArray(fieldName);\n  osList.removeAll();\n  int arraySize=jsonArray.length();\n  if (realmList.clazz == Boolean.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addBoolean(jsonArray.getBoolean(i));\n      }\n    }\n  }\n else   if (realmList.clazz == Float.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addFloat((float)jsonArray.getDouble(i));\n      }\n    }\n  }\n else   if (realmList.clazz == Double.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addDouble(jsonArray.getDouble(i));\n      }\n    }\n  }\n else   if (realmList.clazz == String.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addString(jsonArray.getString(i));\n      }\n    }\n  }\n else   if (realmList.clazz == byte[].class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n      }\n    }\n  }\n else   if (realmList.clazz == Date.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object timestamp=jsonArray.get(i);\n      if (timestamp instanceof String) {\n        osList.addDate(JsonUtils.stringToDate((String)timestamp));\n      }\n else {\n        osList.addDate(new Date(jsonArray.getLong(i)));\n      }\n    }\n  }\n else   if (realmList.clazz == ObjectId.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object id=jsonArray.get(i);\n      if (id instanceof String) {\n        osList.addObjectId(new ObjectId((String)id));\n      }\n else {\n        osList.addObjectId((ObjectId)id);\n      }\n    }\n  }\n else   if (realmList.clazz == Decimal128.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object decimal=jsonArray.get(i);\n      if (decimal instanceof org.bson.types.Decimal128) {\n        osList.addDecimal128((org.bson.types.Decimal128)decimal);\n      }\n else       if (decimal instanceof String) {\n        osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n      }\n else       if (decimal instanceof Integer) {\n        osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n      }\n else       if (decimal instanceof Long) {\n        osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n      }\n else       if (decimal instanceof Double) {\n        osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n      }\n else {\n        osList.addDecimal128((Decimal128)decimal);\n      }\n    }\n  }\n else   if (realmList.clazz == UUID.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object uuid=jsonArray.get(i);\n      if (uuid instanceof java.util.UUID) {\n        osList.addUUID((java.util.UUID)uuid);\n      }\n else {\n        osList.addUUID(java.util.UUID.fromString((String)uuid));\n      }\n    }\n  }\n else   if (realmList.clazz == Mixed.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object value=jsonArray.get(i);\n      Mixed mixed;\n      if (value instanceof String) {\n        mixed=Mixed.valueOf((String)value);\n      }\n else       if (value instanceof Integer) {\n        mixed=Mixed.valueOf((Integer)value);\n      }\n else       if (value instanceof Long) {\n        mixed=Mixed.valueOf((Long)value);\n      }\n else       if (value instanceof Double) {\n        mixed=Mixed.valueOf((Double)value);\n      }\n else       if (value instanceof Boolean) {\n        mixed=Mixed.valueOf((Boolean)value);\n      }\n else       if (value instanceof Mixed) {\n        mixed=(io.realm.Mixed)value;\n        mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n      }\n else {\n        throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n      }\n      osList.addMixed(mixed.getNativePtr());\n    }\n  }\n else   if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addLong(jsonArray.getLong(i));\n      }\n    }\n  }\n else {\n    throwWrongElementType(realmList.clazz);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 931,
      "astHeight" : 29
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 159,
        "startColumnNumber" : 20,
        "endLineNumber" : 159,
        "endColumnNumber" : 118
      },
      "nodeContext" : "osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    },
    "tokenLength" : 4,
    "type" : "org.bson"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 150,
    "startColumnNumber" : 39,
    "endLineNumber" : 150,
    "endColumnNumber" : 64
  }, {
    "charLength" : 25,
    "startLineNumber" : 151,
    "startColumnNumber" : 42,
    "endLineNumber" : 151,
    "endColumnNumber" : 67
  }, {
    "charLength" : 25,
    "startLineNumber" : 155,
    "startColumnNumber" : 45,
    "endLineNumber" : 155,
    "endColumnNumber" : 70
  }, {
    "charLength" : 25,
    "startLineNumber" : 157,
    "startColumnNumber" : 45,
    "endLineNumber" : 157,
    "endColumnNumber" : 70
  }, {
    "charLength" : 25,
    "startLineNumber" : 159,
    "startColumnNumber" : 45,
    "endLineNumber" : 159,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 9
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 6
  } ]
}