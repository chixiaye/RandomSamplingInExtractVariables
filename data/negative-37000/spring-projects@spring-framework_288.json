{
  "id" : 288,
  "expression" : "request",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-web/src/test/java/org/springframework/web/context/request/RequestScopedProxyTests.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "request",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 60,
      "startColumnNumber" : 69,
      "endLineNumber" : 60,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 60,
        "startColumnNumber" : 40,
        "endLineNumber" : 60,
        "endColumnNumber" : 77
      },
      "nodeContext" : "new ServletRequestAttributes(request)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 60,
        "startColumnNumber" : 20,
        "endLineNumber" : 60,
        "endColumnNumber" : 77
      },
      "nodeContext" : "requestAttributes=new ServletRequestAttributes(request)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 78
      },
      "nodeContext" : "RequestAttributes requestAttributes=new ServletRequestAttributes(request);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 886,
        "startLineNumber" : 54,
        "startColumnNumber" : 49,
        "endLineNumber" : 76,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String name=\"requestScopedObject\";\n  TestBean bean=(TestBean)this.beanFactory.getBean(name);\n  assertTrue(AopUtils.isCglibProxy(bean));\n  MockHttpServletRequest request=new MockHttpServletRequest();\n  RequestAttributes requestAttributes=new ServletRequestAttributes(request);\n  RequestContextHolder.setRequestAttributes(requestAttributes);\n  try {\n    assertNull(request.getAttribute(\"scopedTarget.\" + name));\n    assertEquals(\"scoped\",bean.getName());\n    assertNotNull(request.getAttribute(\"scopedTarget.\" + name));\n    TestBean target=(TestBean)request.getAttribute(\"scopedTarget.\" + name);\n    assertEquals(TestBean.class,target.getClass());\n    assertEquals(\"scoped\",target.getName());\n    assertSame(bean,this.beanFactory.getBean(name));\n    assertEquals(bean.toString(),target.toString());\n  }\n  finally {\n    RequestContextHolder.setRequestAttributes(null);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 132,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 941,
        "startLineNumber" : 53,
        "startColumnNumber" : 1,
        "endLineNumber" : 76,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testGetFromScope() throws Exception {\n  String name=\"requestScopedObject\";\n  TestBean bean=(TestBean)this.beanFactory.getBean(name);\n  assertTrue(AopUtils.isCglibProxy(bean));\n  MockHttpServletRequest request=new MockHttpServletRequest();\n  RequestAttributes requestAttributes=new ServletRequestAttributes(request);\n  RequestContextHolder.setRequestAttributes(requestAttributes);\n  try {\n    assertNull(request.getAttribute(\"scopedTarget.\" + name));\n    assertEquals(\"scoped\",bean.getName());\n    assertNotNull(request.getAttribute(\"scopedTarget.\" + name));\n    TestBean target=(TestBean)request.getAttribute(\"scopedTarget.\" + name);\n    assertEquals(TestBean.class,target.getClass());\n    assertEquals(\"scoped\",target.getName());\n    assertSame(bean,this.beanFactory.getBean(name));\n    assertEquals(bean.toString(),target.toString());\n  }\n  finally {\n    RequestContextHolder.setRequestAttributes(null);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 78
      },
      "nodeContext" : "RequestAttributes requestAttributes=new ServletRequestAttributes(request);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.springframework.mock.web.test.MockHttpServletRequest"
  }, {
    "nodeContext" : "request",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 64,
      "startColumnNumber" : 14,
      "endLineNumber" : 64,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 64,
        "startColumnNumber" : 14,
        "endLineNumber" : 64,
        "endColumnNumber" : 58
      },
      "nodeContext" : "request.getAttribute(\"scopedTarget.\" + name)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 64,
        "startColumnNumber" : 3,
        "endLineNumber" : 64,
        "endColumnNumber" : 59
      },
      "nodeContext" : "assertNull(request.getAttribute(\"scopedTarget.\" + name))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 64,
        "startColumnNumber" : 3,
        "endLineNumber" : 64,
        "endColumnNumber" : 60
      },
      "nodeContext" : "assertNull(request.getAttribute(\"scopedTarget.\" + name));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 454,
        "startLineNumber" : 63,
        "startColumnNumber" : 6,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertNull(request.getAttribute(\"scopedTarget.\" + name));\n  assertEquals(\"scoped\",bean.getName());\n  assertNotNull(request.getAttribute(\"scopedTarget.\" + name));\n  TestBean target=(TestBean)request.getAttribute(\"scopedTarget.\" + name);\n  assertEquals(TestBean.class,target.getClass());\n  assertEquals(\"scoped\",target.getName());\n  assertSame(bean,this.beanFactory.getBean(name));\n  assertEquals(bean.toString(),target.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 526,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 75,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  assertNull(request.getAttribute(\"scopedTarget.\" + name));\n  assertEquals(\"scoped\",bean.getName());\n  assertNotNull(request.getAttribute(\"scopedTarget.\" + name));\n  TestBean target=(TestBean)request.getAttribute(\"scopedTarget.\" + name);\n  assertEquals(TestBean.class,target.getClass());\n  assertEquals(\"scoped\",target.getName());\n  assertSame(bean,this.beanFactory.getBean(name));\n  assertEquals(bean.toString(),target.toString());\n}\n  finally {\n  RequestContextHolder.setRequestAttributes(null);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 82,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 886,
        "startLineNumber" : 54,
        "startColumnNumber" : 49,
        "endLineNumber" : 76,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String name=\"requestScopedObject\";\n  TestBean bean=(TestBean)this.beanFactory.getBean(name);\n  assertTrue(AopUtils.isCglibProxy(bean));\n  MockHttpServletRequest request=new MockHttpServletRequest();\n  RequestAttributes requestAttributes=new ServletRequestAttributes(request);\n  RequestContextHolder.setRequestAttributes(requestAttributes);\n  try {\n    assertNull(request.getAttribute(\"scopedTarget.\" + name));\n    assertEquals(\"scoped\",bean.getName());\n    assertNotNull(request.getAttribute(\"scopedTarget.\" + name));\n    TestBean target=(TestBean)request.getAttribute(\"scopedTarget.\" + name);\n    assertEquals(TestBean.class,target.getClass());\n    assertEquals(\"scoped\",target.getName());\n    assertSame(bean,this.beanFactory.getBean(name));\n    assertEquals(bean.toString(),target.toString());\n  }\n  finally {\n    RequestContextHolder.setRequestAttributes(null);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 132,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 941,
        "startLineNumber" : 53,
        "startColumnNumber" : 1,
        "endLineNumber" : 76,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testGetFromScope() throws Exception {\n  String name=\"requestScopedObject\";\n  TestBean bean=(TestBean)this.beanFactory.getBean(name);\n  assertTrue(AopUtils.isCglibProxy(bean));\n  MockHttpServletRequest request=new MockHttpServletRequest();\n  RequestAttributes requestAttributes=new ServletRequestAttributes(request);\n  RequestContextHolder.setRequestAttributes(requestAttributes);\n  try {\n    assertNull(request.getAttribute(\"scopedTarget.\" + name));\n    assertEquals(\"scoped\",bean.getName());\n    assertNotNull(request.getAttribute(\"scopedTarget.\" + name));\n    TestBean target=(TestBean)request.getAttribute(\"scopedTarget.\" + name);\n    assertEquals(TestBean.class,target.getClass());\n    assertEquals(\"scoped\",target.getName());\n    assertSame(bean,this.beanFactory.getBean(name));\n    assertEquals(bean.toString(),target.toString());\n  }\n  finally {\n    RequestContextHolder.setRequestAttributes(null);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 64,
        "startColumnNumber" : 3,
        "endLineNumber" : 64,
        "endColumnNumber" : 60
      },
      "nodeContext" : "assertNull(request.getAttribute(\"scopedTarget.\" + name));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.springframework.mock.web.test.MockHttpServletRequest"
  }, {
    "nodeContext" : "request",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 66,
      "startColumnNumber" : 17,
      "endLineNumber" : 66,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 66,
        "startColumnNumber" : 17,
        "endLineNumber" : 66,
        "endColumnNumber" : 61
      },
      "nodeContext" : "request.getAttribute(\"scopedTarget.\" + name)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 66,
        "startColumnNumber" : 3,
        "endLineNumber" : 66,
        "endColumnNumber" : 62
      },
      "nodeContext" : "assertNotNull(request.getAttribute(\"scopedTarget.\" + name))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 66,
        "startColumnNumber" : 3,
        "endLineNumber" : 66,
        "endColumnNumber" : 63
      },
      "nodeContext" : "assertNotNull(request.getAttribute(\"scopedTarget.\" + name));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 454,
        "startLineNumber" : 63,
        "startColumnNumber" : 6,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertNull(request.getAttribute(\"scopedTarget.\" + name));\n  assertEquals(\"scoped\",bean.getName());\n  assertNotNull(request.getAttribute(\"scopedTarget.\" + name));\n  TestBean target=(TestBean)request.getAttribute(\"scopedTarget.\" + name);\n  assertEquals(TestBean.class,target.getClass());\n  assertEquals(\"scoped\",target.getName());\n  assertSame(bean,this.beanFactory.getBean(name));\n  assertEquals(bean.toString(),target.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 526,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 75,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  assertNull(request.getAttribute(\"scopedTarget.\" + name));\n  assertEquals(\"scoped\",bean.getName());\n  assertNotNull(request.getAttribute(\"scopedTarget.\" + name));\n  TestBean target=(TestBean)request.getAttribute(\"scopedTarget.\" + name);\n  assertEquals(TestBean.class,target.getClass());\n  assertEquals(\"scoped\",target.getName());\n  assertSame(bean,this.beanFactory.getBean(name));\n  assertEquals(bean.toString(),target.toString());\n}\n  finally {\n  RequestContextHolder.setRequestAttributes(null);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 82,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 886,
        "startLineNumber" : 54,
        "startColumnNumber" : 49,
        "endLineNumber" : 76,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String name=\"requestScopedObject\";\n  TestBean bean=(TestBean)this.beanFactory.getBean(name);\n  assertTrue(AopUtils.isCglibProxy(bean));\n  MockHttpServletRequest request=new MockHttpServletRequest();\n  RequestAttributes requestAttributes=new ServletRequestAttributes(request);\n  RequestContextHolder.setRequestAttributes(requestAttributes);\n  try {\n    assertNull(request.getAttribute(\"scopedTarget.\" + name));\n    assertEquals(\"scoped\",bean.getName());\n    assertNotNull(request.getAttribute(\"scopedTarget.\" + name));\n    TestBean target=(TestBean)request.getAttribute(\"scopedTarget.\" + name);\n    assertEquals(TestBean.class,target.getClass());\n    assertEquals(\"scoped\",target.getName());\n    assertSame(bean,this.beanFactory.getBean(name));\n    assertEquals(bean.toString(),target.toString());\n  }\n  finally {\n    RequestContextHolder.setRequestAttributes(null);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 132,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 941,
        "startLineNumber" : 53,
        "startColumnNumber" : 1,
        "endLineNumber" : 76,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testGetFromScope() throws Exception {\n  String name=\"requestScopedObject\";\n  TestBean bean=(TestBean)this.beanFactory.getBean(name);\n  assertTrue(AopUtils.isCglibProxy(bean));\n  MockHttpServletRequest request=new MockHttpServletRequest();\n  RequestAttributes requestAttributes=new ServletRequestAttributes(request);\n  RequestContextHolder.setRequestAttributes(requestAttributes);\n  try {\n    assertNull(request.getAttribute(\"scopedTarget.\" + name));\n    assertEquals(\"scoped\",bean.getName());\n    assertNotNull(request.getAttribute(\"scopedTarget.\" + name));\n    TestBean target=(TestBean)request.getAttribute(\"scopedTarget.\" + name);\n    assertEquals(TestBean.class,target.getClass());\n    assertEquals(\"scoped\",target.getName());\n    assertSame(bean,this.beanFactory.getBean(name));\n    assertEquals(bean.toString(),target.toString());\n  }\n  finally {\n    RequestContextHolder.setRequestAttributes(null);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 66,
        "startColumnNumber" : 3,
        "endLineNumber" : 66,
        "endColumnNumber" : 63
      },
      "nodeContext" : "assertNotNull(request.getAttribute(\"scopedTarget.\" + name));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.springframework.mock.web.test.MockHttpServletRequest"
  }, {
    "nodeContext" : "request",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 67,
      "startColumnNumber" : 32,
      "endLineNumber" : 67,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 67,
        "startColumnNumber" : 32,
        "endLineNumber" : 67,
        "endColumnNumber" : 76
      },
      "nodeContext" : "request.getAttribute(\"scopedTarget.\" + name)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 67,
        "startColumnNumber" : 21,
        "endLineNumber" : 67,
        "endColumnNumber" : 76
      },
      "nodeContext" : "(TestBean)request.getAttribute(\"scopedTarget.\" + name)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 67,
        "startColumnNumber" : 12,
        "endLineNumber" : 67,
        "endColumnNumber" : 76
      },
      "nodeContext" : "target=(TestBean)request.getAttribute(\"scopedTarget.\" + name)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 67,
        "startColumnNumber" : 3,
        "endLineNumber" : 67,
        "endColumnNumber" : 77
      },
      "nodeContext" : "TestBean target=(TestBean)request.getAttribute(\"scopedTarget.\" + name);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 454,
        "startLineNumber" : 63,
        "startColumnNumber" : 6,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertNull(request.getAttribute(\"scopedTarget.\" + name));\n  assertEquals(\"scoped\",bean.getName());\n  assertNotNull(request.getAttribute(\"scopedTarget.\" + name));\n  TestBean target=(TestBean)request.getAttribute(\"scopedTarget.\" + name);\n  assertEquals(TestBean.class,target.getClass());\n  assertEquals(\"scoped\",target.getName());\n  assertSame(bean,this.beanFactory.getBean(name));\n  assertEquals(bean.toString(),target.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 526,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 75,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  assertNull(request.getAttribute(\"scopedTarget.\" + name));\n  assertEquals(\"scoped\",bean.getName());\n  assertNotNull(request.getAttribute(\"scopedTarget.\" + name));\n  TestBean target=(TestBean)request.getAttribute(\"scopedTarget.\" + name);\n  assertEquals(TestBean.class,target.getClass());\n  assertEquals(\"scoped\",target.getName());\n  assertSame(bean,this.beanFactory.getBean(name));\n  assertEquals(bean.toString(),target.toString());\n}\n  finally {\n  RequestContextHolder.setRequestAttributes(null);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 82,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 886,
        "startLineNumber" : 54,
        "startColumnNumber" : 49,
        "endLineNumber" : 76,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String name=\"requestScopedObject\";\n  TestBean bean=(TestBean)this.beanFactory.getBean(name);\n  assertTrue(AopUtils.isCglibProxy(bean));\n  MockHttpServletRequest request=new MockHttpServletRequest();\n  RequestAttributes requestAttributes=new ServletRequestAttributes(request);\n  RequestContextHolder.setRequestAttributes(requestAttributes);\n  try {\n    assertNull(request.getAttribute(\"scopedTarget.\" + name));\n    assertEquals(\"scoped\",bean.getName());\n    assertNotNull(request.getAttribute(\"scopedTarget.\" + name));\n    TestBean target=(TestBean)request.getAttribute(\"scopedTarget.\" + name);\n    assertEquals(TestBean.class,target.getClass());\n    assertEquals(\"scoped\",target.getName());\n    assertSame(bean,this.beanFactory.getBean(name));\n    assertEquals(bean.toString(),target.toString());\n  }\n  finally {\n    RequestContextHolder.setRequestAttributes(null);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 132,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 941,
        "startLineNumber" : 53,
        "startColumnNumber" : 1,
        "endLineNumber" : 76,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testGetFromScope() throws Exception {\n  String name=\"requestScopedObject\";\n  TestBean bean=(TestBean)this.beanFactory.getBean(name);\n  assertTrue(AopUtils.isCglibProxy(bean));\n  MockHttpServletRequest request=new MockHttpServletRequest();\n  RequestAttributes requestAttributes=new ServletRequestAttributes(request);\n  RequestContextHolder.setRequestAttributes(requestAttributes);\n  try {\n    assertNull(request.getAttribute(\"scopedTarget.\" + name));\n    assertEquals(\"scoped\",bean.getName());\n    assertNotNull(request.getAttribute(\"scopedTarget.\" + name));\n    TestBean target=(TestBean)request.getAttribute(\"scopedTarget.\" + name);\n    assertEquals(TestBean.class,target.getClass());\n    assertEquals(\"scoped\",target.getName());\n    assertSame(bean,this.beanFactory.getBean(name));\n    assertEquals(bean.toString(),target.toString());\n  }\n  finally {\n    RequestContextHolder.setRequestAttributes(null);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 67,
        "startColumnNumber" : 3,
        "endLineNumber" : 67,
        "endColumnNumber" : 77
      },
      "nodeContext" : "TestBean target=(TestBean)request.getAttribute(\"scopedTarget.\" + name);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "org.springframework.mock.web.test.MockHttpServletRequest"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 60,
    "startColumnNumber" : 69,
    "endLineNumber" : 60,
    "endColumnNumber" : 76
  }, {
    "charLength" : 7,
    "startLineNumber" : 64,
    "startColumnNumber" : 14,
    "endLineNumber" : 64,
    "endColumnNumber" : 21
  }, {
    "charLength" : 7,
    "startLineNumber" : 66,
    "startColumnNumber" : 17,
    "endLineNumber" : 66,
    "endColumnNumber" : 24
  }, {
    "charLength" : 7,
    "startLineNumber" : 67,
    "startColumnNumber" : 32,
    "endLineNumber" : 67,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  } ]
}