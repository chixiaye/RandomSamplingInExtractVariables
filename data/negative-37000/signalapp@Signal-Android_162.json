{
  "id" : 162,
  "expression" : "1234L",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/app/src/test/java/org/thoughtcrime/securesms/jobmanager/migrations/SendReadReceiptsJobMigrationTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1234L",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 33,
      "startColumnNumber" : 67,
      "endLineNumber" : 33,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 73
      },
      "nodeContext" : "when(mockDatabase.getThreadForMessageId(anyLong())).thenReturn(1234L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 74
      },
      "nodeContext" : "when(mockDatabase.getThreadForMessageId(anyLong())).thenReturn(1234L);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1162,
        "startLineNumber" : 24,
        "startColumnNumber" : 108,
        "endLineNumber" : 43,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  SendReadReceiptJob job=new SendReadReceiptJob(1,RecipientId.from(2),new ArrayList<>(),new ArrayList<>());\n  JobMigration.JobData jobData=new JobMigration.JobData(job.getFactoryKey(),\"asdf\",new Data.Builder().putString(\"recipient\",RecipientId.from(2).serialize()).putLongArray(\"message_ids\",new long[]{1,2,3,4,5}).putLong(\"timestamp\",292837649).build());\n  when(mockDatabase.getThreadForMessageId(anyLong())).thenReturn(1234L);\n  JobMigration.JobData result=testSubject.migrate(jobData);\n  assertEquals(1234L,result.getData().getLong(\"thread\"));\n  assertEquals(RecipientId.from(2).serialize(),result.getData().getString(\"recipient\"));\n  assertTrue(result.getData().hasLongArray(\"message_ids\"));\n  assertTrue(result.getData().hasLong(\"timestamp\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1276,
        "startLineNumber" : 23,
        "startColumnNumber" : 2,
        "endLineNumber" : 43,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void givenSendReadReceiptJobDataWithoutThreadIdAndThreadIdFound_whenIMigrate_thenIInsertThreadId(){\n  SendReadReceiptJob job=new SendReadReceiptJob(1,RecipientId.from(2),new ArrayList<>(),new ArrayList<>());\n  JobMigration.JobData jobData=new JobMigration.JobData(job.getFactoryKey(),\"asdf\",new Data.Builder().putString(\"recipient\",RecipientId.from(2).serialize()).putLongArray(\"message_ids\",new long[]{1,2,3,4,5}).putLong(\"timestamp\",292837649).build());\n  when(mockDatabase.getThreadForMessageId(anyLong())).thenReturn(1234L);\n  JobMigration.JobData result=testSubject.migrate(jobData);\n  assertEquals(1234L,result.getData().getLong(\"thread\"));\n  assertEquals(RecipientId.from(2).serialize(),result.getData().getString(\"recipient\"));\n  assertTrue(result.getData().hasLongArray(\"message_ids\"));\n  assertTrue(result.getData().hasLong(\"timestamp\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 142,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 74
      },
      "nodeContext" : "when(mockDatabase.getThreadForMessageId(anyLong())).thenReturn(1234L);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "long"
  }, {
    "nodeContext" : "1234L",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 39,
      "startColumnNumber" : 17,
      "endLineNumber" : 39,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 59
      },
      "nodeContext" : "assertEquals(1234L,result.getData().getLong(\"thread\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 60
      },
      "nodeContext" : "assertEquals(1234L,result.getData().getLong(\"thread\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1162,
        "startLineNumber" : 24,
        "startColumnNumber" : 108,
        "endLineNumber" : 43,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  SendReadReceiptJob job=new SendReadReceiptJob(1,RecipientId.from(2),new ArrayList<>(),new ArrayList<>());\n  JobMigration.JobData jobData=new JobMigration.JobData(job.getFactoryKey(),\"asdf\",new Data.Builder().putString(\"recipient\",RecipientId.from(2).serialize()).putLongArray(\"message_ids\",new long[]{1,2,3,4,5}).putLong(\"timestamp\",292837649).build());\n  when(mockDatabase.getThreadForMessageId(anyLong())).thenReturn(1234L);\n  JobMigration.JobData result=testSubject.migrate(jobData);\n  assertEquals(1234L,result.getData().getLong(\"thread\"));\n  assertEquals(RecipientId.from(2).serialize(),result.getData().getString(\"recipient\"));\n  assertTrue(result.getData().hasLongArray(\"message_ids\"));\n  assertTrue(result.getData().hasLong(\"timestamp\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1276,
        "startLineNumber" : 23,
        "startColumnNumber" : 2,
        "endLineNumber" : 43,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void givenSendReadReceiptJobDataWithoutThreadIdAndThreadIdFound_whenIMigrate_thenIInsertThreadId(){\n  SendReadReceiptJob job=new SendReadReceiptJob(1,RecipientId.from(2),new ArrayList<>(),new ArrayList<>());\n  JobMigration.JobData jobData=new JobMigration.JobData(job.getFactoryKey(),\"asdf\",new Data.Builder().putString(\"recipient\",RecipientId.from(2).serialize()).putLongArray(\"message_ids\",new long[]{1,2,3,4,5}).putLong(\"timestamp\",292837649).build());\n  when(mockDatabase.getThreadForMessageId(anyLong())).thenReturn(1234L);\n  JobMigration.JobData result=testSubject.migrate(jobData);\n  assertEquals(1234L,result.getData().getLong(\"thread\"));\n  assertEquals(RecipientId.from(2).serialize(),result.getData().getString(\"recipient\"));\n  assertTrue(result.getData().hasLongArray(\"message_ids\"));\n  assertTrue(result.getData().hasLong(\"timestamp\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 142,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 60
      },
      "nodeContext" : "assertEquals(1234L,result.getData().getLong(\"thread\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 33,
    "startColumnNumber" : 67,
    "endLineNumber" : 33,
    "endColumnNumber" : 72
  }, {
    "charLength" : 5,
    "startLineNumber" : 39,
    "startColumnNumber" : 17,
    "endLineNumber" : 39,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}