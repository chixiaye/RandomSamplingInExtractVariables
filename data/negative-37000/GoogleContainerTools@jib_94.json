{
  "id" : 94,
  "expression" : "mockToImageConfiguration.getImageRepository()",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-core/src/test/java/com/google/cloud/tools/jib/plugins/common/BuildStepsRunnerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mockToImageConfiguration.getImageRepository()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 45,
      "startLineNumber" : 244,
      "startColumnNumber" : 17,
      "endLineNumber" : 244,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 244,
        "startColumnNumber" : 4,
        "endLineNumber" : 244,
        "endColumnNumber" : 63
      },
      "nodeContext" : "Mockito.when(mockToImageConfiguration.getImageRepository())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 244,
        "startColumnNumber" : 4,
        "endLineNumber" : 244,
        "endColumnNumber" : 90
      },
      "nodeContext" : "Mockito.when(mockToImageConfiguration.getImageRepository()).thenReturn(\"toRepository\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 244,
        "startColumnNumber" : 4,
        "endLineNumber" : 244,
        "endColumnNumber" : 91
      },
      "nodeContext" : "Mockito.when(mockToImageConfiguration.getImageRepository()).thenReturn(\"toRepository\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1368,
        "startLineNumber" : 231,
        "startColumnNumber" : 88,
        "endLineNumber" : 256,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Mockito.when(mockRegistryUnauthorizedException.getHttpResponseException()).thenReturn(mockHttpResponseException);\n  Mockito.when(mockRegistryUnauthorizedException.getRegistry()).thenReturn(\"toRegistry\");\n  Mockito.when(mockRegistryUnauthorizedException.getRepository()).thenReturn(\"toRepository\");\n  Mockito.when(mockHttpResponseException.getStatusCode()).thenReturn(-1);\n  Mockito.when(mockExecutionException.getCause()).thenReturn(mockRegistryUnauthorizedException);\n  Mockito.doThrow(mockExecutionException).when(mockBuildSteps).run();\n  Mockito.when(mockFromImageConfiguration.getImageRegistry()).thenReturn(\"toRegistry\");\n  Mockito.when(mockFromImageConfiguration.getImageRepository()).thenReturn(\"fromRepository\");\n  Mockito.when(mockToImageConfiguration.getImageRegistry()).thenReturn(\"toRegistry\");\n  Mockito.when(mockToImageConfiguration.getImageRepository()).thenReturn(\"toRepository\");\n  try {\n    testBuildImageStepsRunner.build(TEST_HELPFUL_SUGGESTIONS);\n    Assert.fail(\"buildImage should have thrown an exception\");\n  }\n catch (  BuildStepsExecutionException ex) {\n    Assert.assertEquals(TEST_HELPFUL_SUGGESTIONS.forNoCredentialHelpersDefinedForTargetImage(\"toRegistry\"),ex.getMessage());\n    Assert.assertEquals(mockRegistryUnauthorizedException,ex.getCause());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1643,
        "startLineNumber" : 228,
        "startColumnNumber" : 2,
        "endLineNumber" : 256,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testBuildImage_executionException_registryUnauthorizedException_sameRegistry() throws CacheDirectoryNotOwnedException, InterruptedException, ExecutionException, CacheMetadataCorruptedException, CacheDirectoryCreationException, IOException {\n  Mockito.when(mockRegistryUnauthorizedException.getHttpResponseException()).thenReturn(mockHttpResponseException);\n  Mockito.when(mockRegistryUnauthorizedException.getRegistry()).thenReturn(\"toRegistry\");\n  Mockito.when(mockRegistryUnauthorizedException.getRepository()).thenReturn(\"toRepository\");\n  Mockito.when(mockHttpResponseException.getStatusCode()).thenReturn(-1);\n  Mockito.when(mockExecutionException.getCause()).thenReturn(mockRegistryUnauthorizedException);\n  Mockito.doThrow(mockExecutionException).when(mockBuildSteps).run();\n  Mockito.when(mockFromImageConfiguration.getImageRegistry()).thenReturn(\"toRegistry\");\n  Mockito.when(mockFromImageConfiguration.getImageRepository()).thenReturn(\"fromRepository\");\n  Mockito.when(mockToImageConfiguration.getImageRegistry()).thenReturn(\"toRegistry\");\n  Mockito.when(mockToImageConfiguration.getImageRepository()).thenReturn(\"toRepository\");\n  try {\n    testBuildImageStepsRunner.build(TEST_HELPFUL_SUGGESTIONS);\n    Assert.fail(\"buildImage should have thrown an exception\");\n  }\n catch (  BuildStepsExecutionException ex) {\n    Assert.assertEquals(TEST_HELPFUL_SUGGESTIONS.forNoCredentialHelpersDefinedForTargetImage(\"toRegistry\"),ex.getMessage());\n    Assert.assertEquals(mockRegistryUnauthorizedException,ex.getCause());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 157,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 244,
        "startColumnNumber" : 4,
        "endLineNumber" : 244,
        "endColumnNumber" : 91
      },
      "nodeContext" : "Mockito.when(mockToImageConfiguration.getImageRepository()).thenReturn(\"toRepository\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 45,
    "startLineNumber" : 244,
    "startColumnNumber" : 17,
    "endLineNumber" : 244,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}