{
  "id" : 149,
  "expression" : "\"All values are NaN\"",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/main/java/com/facebook/presto/util/MoreMath.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"All values are NaN\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 111,
      "startColumnNumber" : 43,
      "endLineNumber" : 111,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 111,
        "startColumnNumber" : 14,
        "endLineNumber" : 111,
        "endColumnNumber" : 64
      },
      "nodeContext" : "new IllegalArgumentException(\"All values are NaN\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 65
      },
      "nodeContext" : "throw new IllegalArgumentException(\"All values are NaN\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 105,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (  double value : values) {\n    if (!isNaN(value)) {\n      return value;\n    }\n  }\n  throw new IllegalArgumentException(\"All values are NaN\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 104,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static double firstNonNaN(double... values){\n  for (  double value : values) {\n    if (!isNaN(value)) {\n      return value;\n    }\n  }\n  throw new IllegalArgumentException(\"All values are NaN\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 28,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 65
      },
      "nodeContext" : "throw new IllegalArgumentException(\"All values are NaN\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 111,
    "startColumnNumber" : 43,
    "endLineNumber" : 111,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ]
}