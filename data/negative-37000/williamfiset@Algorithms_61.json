{
  "id" : 61,
  "expression" : "loop < LOOPS",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/datastructures/set/HSetTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "loop < LOOPS",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 67,
      "startColumnNumber" : 23,
      "endLineNumber" : 67,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 483,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int loop=0; loop < LOOPS; loop++) {\n  s.clear();\n  hs.clear();\n  List<Integer> nums=genRandList(TEST_SZ);\n  for (int i=0; i < TEST_SZ; i++) {\n    int num=nums.get(i);\n    hs.add(num);\n    s.add(num);\n    for (    Integer n : s)     hs.contains(n);\n    for (    Integer n : hs)     s.contains(n);\n    assertEquals(s.size(),hs.size());\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 92,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 535,
        "startLineNumber" : 65,
        "startColumnNumber" : 34,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  HashSet<Integer> s=new HashSet<>();\n  for (int loop=0; loop < LOOPS; loop++) {\n    s.clear();\n    hs.clear();\n    List<Integer> nums=genRandList(TEST_SZ);\n    for (int i=0; i < TEST_SZ; i++) {\n      int num=nums.get(i);\n      hs.add(num);\n      s.add(num);\n      for (      Integer n : s)       hs.contains(n);\n      for (      Integer n : hs)       s.contains(n);\n      assertEquals(s.size(),hs.size());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 575,
        "startLineNumber" : 64,
        "startColumnNumber" : 2,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void randomizedSetTest(){\n  HashSet<Integer> s=new HashSet<>();\n  for (int loop=0; loop < LOOPS; loop++) {\n    s.clear();\n    hs.clear();\n    List<Integer> nums=genRandList(TEST_SZ);\n    for (int i=0; i < TEST_SZ; i++) {\n      int num=nums.get(i);\n      hs.add(num);\n      s.add(num);\n      for (      Integer n : s)       hs.contains(n);\n      for (      Integer n : hs)       s.contains(n);\n      assertEquals(s.size(),hs.size());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 111,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 483,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int loop=0; loop < LOOPS; loop++) {\n  s.clear();\n  hs.clear();\n  List<Integer> nums=genRandList(TEST_SZ);\n  for (int i=0; i < TEST_SZ; i++) {\n    int num=nums.get(i);\n    hs.add(num);\n    s.add(num);\n    for (    Integer n : s)     hs.contains(n);\n    for (    Integer n : hs)     s.contains(n);\n    assertEquals(s.size(),hs.size());\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 92,
      "astHeight" : 8
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 67,
    "startColumnNumber" : 23,
    "endLineNumber" : 67,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}