{
  "id" : 267,
  "expression" : "number < flags.length",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/algorithms-miscellaneous-4/src/main/java/com/baeldung/algorithms/smallestinteger/SmallestMissingPositiveInteger.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "number < flags.length",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 24,
      "startColumnNumber" : 16,
      "endLineNumber" : 24,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 24,
        "startColumnNumber" : 12,
        "endLineNumber" : 26,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (number < flags.length) {\n  flags[number]=true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 23,
        "startColumnNumber" : 33,
        "endLineNumber" : 27,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (number < flags.length) {\n    flags[number]=true;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 23,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int number : input) {\n  if (number < flags.length) {\n    flags[number]=true;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 357,
        "startLineNumber" : 21,
        "startColumnNumber" : 69,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  boolean[] flags=new boolean[input.length];\n  for (  int number : input) {\n    if (number < flags.length) {\n      flags[number]=true;\n    }\n  }\n  for (int i=0; i < flags.length; i++) {\n    if (!flags[i]) {\n      return i;\n    }\n  }\n  return flags.length;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 422,
        "startLineNumber" : 21,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static int searchInUnsortedArrayBooleanArray(int[] input){\n  boolean[] flags=new boolean[input.length];\n  for (  int number : input) {\n    if (number < flags.length) {\n      flags[number]=true;\n    }\n  }\n  for (int i=0; i < flags.length; i++) {\n    if (!flags[i]) {\n      return i;\n    }\n  }\n  return flags.length;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 24,
        "startColumnNumber" : 12,
        "endLineNumber" : 26,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (number < flags.length) {\n  flags[number]=true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 24,
    "startColumnNumber" : 16,
    "endLineNumber" : 24,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}