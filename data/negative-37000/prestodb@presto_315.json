{
  "id" : 315,
  "expression" : "lessThanFunction.invoke(rightElement,leftElement)",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/main/java/com/facebook/presto/operator/scalar/ArrayLessThanOrEqualOperator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "lessThanFunction.invoke(rightElement,leftElement)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 50,
      "startLineNumber" : 58,
      "startColumnNumber" : 30,
      "endLineNumber" : 58,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 58,
        "startColumnNumber" : 20,
        "endLineNumber" : 58,
        "endColumnNumber" : 80
      },
      "nodeContext" : "(boolean)lessThanFunction.invoke(rightElement,leftElement)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 58,
        "startColumnNumber" : 16,
        "endLineNumber" : 60,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if ((boolean)lessThanFunction.invoke(rightElement,leftElement)) {\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 286,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 61,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if ((boolean)lessThanFunction.invoke(leftElement,rightElement)) {\n    return true;\n  }\n  if ((boolean)lessThanFunction.invoke(rightElement,leftElement)) {\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 378,
        "startLineNumber" : 54,
        "startColumnNumber" : 12,
        "endLineNumber" : 64,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  if ((boolean)lessThanFunction.invoke(leftElement,rightElement)) {\n    return true;\n  }\n  if ((boolean)lessThanFunction.invoke(rightElement,leftElement)) {\n    return false;\n  }\n}\n catch (Throwable t) {\n  throw internalError(t);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 34,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 738,
        "startLineNumber" : 49,
        "startColumnNumber" : 28,
        "endLineNumber" : 66,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  checkElementNotNull(leftArray.isNull(index),ARRAY_NULL_ELEMENT_MSG);\n  checkElementNotNull(rightArray.isNull(index),ARRAY_NULL_ELEMENT_MSG);\n  Object leftElement=readNativeValue(type,leftArray,index);\n  Object rightElement=readNativeValue(type,rightArray,index);\n  try {\n    if ((boolean)lessThanFunction.invoke(leftElement,rightElement)) {\n      return true;\n    }\n    if ((boolean)lessThanFunction.invoke(rightElement,leftElement)) {\n      return false;\n    }\n  }\n catch (  Throwable t) {\n    throw internalError(t);\n  }\n  index++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 758,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (index < len) {\n  checkElementNotNull(leftArray.isNull(index),ARRAY_NULL_ELEMENT_MSG);\n  checkElementNotNull(rightArray.isNull(index),ARRAY_NULL_ELEMENT_MSG);\n  Object leftElement=readNativeValue(type,leftArray,index);\n  Object rightElement=readNativeValue(type,rightArray,index);\n  try {\n    if ((boolean)lessThanFunction.invoke(leftElement,rightElement)) {\n      return true;\n    }\n    if ((boolean)lessThanFunction.invoke(rightElement,leftElement)) {\n      return false;\n    }\n  }\n catch (  Throwable t) {\n    throw internalError(t);\n  }\n  index++;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 78,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 965,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int len=Math.min(leftArray.getPositionCount(),rightArray.getPositionCount());\n  int index=0;\n  while (index < len) {\n    checkElementNotNull(leftArray.isNull(index),ARRAY_NULL_ELEMENT_MSG);\n    checkElementNotNull(rightArray.isNull(index),ARRAY_NULL_ELEMENT_MSG);\n    Object leftElement=readNativeValue(type,leftArray,index);\n    Object rightElement=readNativeValue(type,rightArray,index);\n    try {\n      if ((boolean)lessThanFunction.invoke(leftElement,rightElement)) {\n        return true;\n      }\n      if ((boolean)lessThanFunction.invoke(rightElement,leftElement)) {\n        return false;\n      }\n    }\n catch (    Throwable t) {\n      throw internalError(t);\n    }\n    index++;\n  }\n  return leftArray.getPositionCount() <= rightArray.getPositionCount();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1325,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@TypeParameter(\"E\") @SqlType(StandardTypes.BOOLEAN) public static boolean lessThanOrEqual(@OperatorDependency(operator=LESS_THAN,argumentTypes={\"E\",\"E\"}) MethodHandle lessThanFunction,@TypeParameter(\"E\") Type type,@SqlType(\"array(E)\") Block leftArray,@SqlType(\"array(E)\") Block rightArray){\n  int len=Math.min(leftArray.getPositionCount(),rightArray.getPositionCount());\n  int index=0;\n  while (index < len) {\n    checkElementNotNull(leftArray.isNull(index),ARRAY_NULL_ELEMENT_MSG);\n    checkElementNotNull(rightArray.isNull(index),ARRAY_NULL_ELEMENT_MSG);\n    Object leftElement=readNativeValue(type,leftArray,index);\n    Object rightElement=readNativeValue(type,rightArray,index);\n    try {\n      if ((boolean)lessThanFunction.invoke(leftElement,rightElement)) {\n        return true;\n      }\n      if ((boolean)lessThanFunction.invoke(rightElement,leftElement)) {\n        return false;\n      }\n    }\n catch (    Throwable t) {\n      throw internalError(t);\n    }\n    index++;\n  }\n  return leftArray.getPositionCount() <= rightArray.getPositionCount();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 153,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 58,
        "startColumnNumber" : 20,
        "endLineNumber" : 58,
        "endColumnNumber" : 80
      },
      "nodeContext" : "(boolean)lessThanFunction.invoke(rightElement,leftElement)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 4,
    "type" : "java.lang.Object"
  } ],
  "positionList" : [ {
    "charLength" : 50,
    "startLineNumber" : 58,
    "startColumnNumber" : 30,
    "endLineNumber" : 58,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ ]
}