{
  "id" : 277,
  "expression" : "mPool.getBucketedSize(164)",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/memory-types/ashmem/src/test/java/com/facebook/imagepipeline/memory/AshmemMemoryChunkPoolTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mPool.getBucketedSize(164)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 64,
      "startColumnNumber" : 29,
      "endLineNumber" : 64,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Assert.assertEquals(164,mPool.getBucketedSize(164))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Assert.assertEquals(164,mPool.getBucketedSize(164));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 640,
        "startLineNumber" : 56,
        "startColumnNumber" : 36,
        "endLineNumber" : 74,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Assert.assertEquals(32,mPool.getBucketedSize(1));\n  Assert.assertEquals(32,mPool.getBucketedSize(32));\n  Assert.assertEquals(64,mPool.getBucketedSize(33));\n  Assert.assertEquals(64,mPool.getBucketedSize(63));\n  Assert.assertEquals(64,mPool.getBucketedSize(64));\n  Assert.assertEquals(128,mPool.getBucketedSize(69));\n  Assert.assertEquals(164,mPool.getBucketedSize(164));\n  int[] invalidSizes=new int[]{-1,-2,0};\n  for (  int size : invalidSizes) {\n    try {\n      mPool.getBucketedSize(size);\n      Assert.fail();\n    }\n catch (    BasePool.InvalidSizeException e) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 682,
        "startLineNumber" : 55,
        "startColumnNumber" : 2,
        "endLineNumber" : 74,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testGetBucketedSize(){\n  Assert.assertEquals(32,mPool.getBucketedSize(1));\n  Assert.assertEquals(32,mPool.getBucketedSize(32));\n  Assert.assertEquals(64,mPool.getBucketedSize(33));\n  Assert.assertEquals(64,mPool.getBucketedSize(63));\n  Assert.assertEquals(64,mPool.getBucketedSize(64));\n  Assert.assertEquals(128,mPool.getBucketedSize(69));\n  Assert.assertEquals(164,mPool.getBucketedSize(164));\n  int[] invalidSizes=new int[]{-1,-2,0};\n  for (  int size : invalidSizes) {\n    try {\n      mPool.getBucketedSize(size);\n      Assert.fail();\n    }\n catch (    BasePool.InvalidSizeException e) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 111,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Assert.assertEquals(164,mPool.getBucketedSize(164));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 64,
    "startColumnNumber" : 29,
    "endLineNumber" : 64,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}