{
  "id" : 274,
  "expression" : "!(credentials instanceof UsernameAndPassword)",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/client/src/org/openqa/selenium/devtools/idealized/Network.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!(credentials instanceof UsernameAndPassword)",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 45,
      "startLineNumber" : 112,
      "startColumnNumber" : 16,
      "endLineNumber" : 112,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 6,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 112,
        "startColumnNumber" : 12,
        "endLineNumber" : 114,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!(credentials instanceof UsernameAndPassword)) {\n  throw new DevToolsException(\"DevTools can only support username and password authentication\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 420,
        "startLineNumber" : 110,
        "startColumnNumber" : 43,
        "endLineNumber" : 119,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  Credentials credentials=authCredentials.get();\n  if (!(credentials instanceof UsernameAndPassword)) {\n    throw new DevToolsException(\"DevTools can only support username and password authentication\");\n  }\n  UsernameAndPassword uap=(UsernameAndPassword)credentials;\n  devTools.send(continueWithAuth(authRequired,uap));\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 453,
        "startLineNumber" : 110,
        "startColumnNumber" : 10,
        "endLineNumber" : 119,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (authCredentials.isPresent()) {\n  Credentials credentials=authCredentials.get();\n  if (!(credentials instanceof UsernameAndPassword)) {\n    throw new DevToolsException(\"DevTools can only support username and password authentication\");\n  }\n  UsernameAndPassword uap=(UsernameAndPassword)credentials;\n  devTools.send(continueWithAuth(authRequired,uap));\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 588,
        "startLineNumber" : 106,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  URI uri=new URI(origin);\n  Optional<Credentials> authCredentials=getAuthCredentials(uri);\n  if (authCredentials.isPresent()) {\n    Credentials credentials=authCredentials.get();\n    if (!(credentials instanceof UsernameAndPassword)) {\n      throw new DevToolsException(\"DevTools can only support username and password authentication\");\n    }\n    UsernameAndPassword uap=(UsernameAndPassword)credentials;\n    devTools.send(continueWithAuth(authRequired,uap));\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 659,
        "startLineNumber" : 106,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  URI uri=new URI(origin);\n  Optional<Credentials> authCredentials=getAuthCredentials(uri);\n  if (authCredentials.isPresent()) {\n    Credentials credentials=authCredentials.get();\n    if (!(credentials instanceof UsernameAndPassword)) {\n      throw new DevToolsException(\"DevTools can only support username and password authentication\");\n    }\n    UsernameAndPassword uap=(UsernameAndPassword)credentials;\n    devTools.send(continueWithAuth(authRequired,uap));\n    return;\n  }\n}\n catch (URISyntaxException e) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 72,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 777,
        "startLineNumber" : 104,
        "startColumnNumber" : 22,
        "endLineNumber" : 125,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  String origin=getUriFrom(authRequired);\n  try {\n    URI uri=new URI(origin);\n    Optional<Credentials> authCredentials=getAuthCredentials(uri);\n    if (authCredentials.isPresent()) {\n      Credentials credentials=authCredentials.get();\n      if (!(credentials instanceof UsernameAndPassword)) {\n        throw new DevToolsException(\"DevTools can only support username and password authentication\");\n      }\n      UsernameAndPassword uap=(UsernameAndPassword)credentials;\n      devTools.send(continueWithAuth(authRequired,uap));\n      return;\n    }\n  }\n catch (  URISyntaxException e) {\n  }\n  devTools.send(cancelAuth(authRequired));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 88,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 793,
        "startLineNumber" : 104,
        "startColumnNumber" : 6,
        "endLineNumber" : 125,
        "endColumnNumber" : 7
      },
      "nodeContext" : "authRequired -> {\n  String origin=getUriFrom(authRequired);\n  try {\n    URI uri=new URI(origin);\n    Optional<Credentials> authCredentials=getAuthCredentials(uri);\n    if (authCredentials.isPresent()) {\n      Credentials credentials=authCredentials.get();\n      if (!(credentials instanceof UsernameAndPassword)) {\n        throw new DevToolsException(\"DevTools can only support username and password authentication\");\n      }\n      UsernameAndPassword uap=(UsernameAndPassword)credentials;\n      devTools.send(continueWithAuth(authRequired,uap));\n      return;\n    }\n  }\n catch (  URISyntaxException e) {\n  }\n  devTools.send(cancelAuth(authRequired));\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 91,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 112,
        "startColumnNumber" : 12,
        "endLineNumber" : 114,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!(credentials instanceof UsernameAndPassword)) {\n  throw new DevToolsException(\"DevTools can only support username and password authentication\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 45,
    "startLineNumber" : 112,
    "startColumnNumber" : 16,
    "endLineNumber" : 112,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}