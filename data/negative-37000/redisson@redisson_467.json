{
  "id" : 467,
  "expression" : "null",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson/src/main/java/org/redisson/connection/ReplicatedConnectionManager.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 74,
      "startColumnNumber" : 81,
      "endLineNumber" : 74,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 74,
        "startColumnNumber" : 56,
        "endLineNumber" : 74,
        "endColumnNumber" : 102
      },
      "nodeContext" : "connectToNode(cfg,addr,null,addr.getHost())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 74,
        "startColumnNumber" : 37,
        "endLineNumber" : 74,
        "endColumnNumber" : 102
      },
      "nodeContext" : "connectionFuture=connectToNode(cfg,addr,null,addr.getHost())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 74,
        "startColumnNumber" : 12,
        "endLineNumber" : 74,
        "endColumnNumber" : 103
      },
      "nodeContext" : "RFuture<RedisConnection> connectionFuture=connectToNode(cfg,addr,null,addr.getHost());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 992,
        "startLineNumber" : 72,
        "startColumnNumber" : 54,
        "endLineNumber" : 94,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RedisURI addr=new RedisURI(address);\n  RFuture<RedisConnection> connectionFuture=connectToNode(cfg,addr,null,addr.getHost());\n  connectionFuture.awaitUninterruptibly();\n  RedisConnection connection=connectionFuture.getNow();\n  if (connection == null) {\n    continue;\n  }\n  Role role=Role.valueOf(connection.sync(RedisCommands.INFO_REPLICATION).get(ROLE_KEY));\n  if (Role.master.equals(role)) {\n    if (currentMaster.get() != null) {\n      stopThreads();\n      throw new RedisException(\"Multiple masters detected\");\n    }\n    currentMaster.set(addr);\n    log.info(\"{} is the master\",addr);\n    this.config.setMasterAddress(addr.toString());\n  }\n else {\n    log.info(\"{} is a slave\",addr);\n    this.config.addSlaveAddress(addr.toString());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1038,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String address : cfg.getNodeAddresses()) {\n  RedisURI addr=new RedisURI(address);\n  RFuture<RedisConnection> connectionFuture=connectToNode(cfg,addr,null,addr.getHost());\n  connectionFuture.awaitUninterruptibly();\n  RedisConnection connection=connectionFuture.getNow();\n  if (connection == null) {\n    continue;\n  }\n  Role role=Role.valueOf(connection.sync(RedisCommands.INFO_REPLICATION).get(ROLE_KEY));\n  if (Role.master.equals(role)) {\n    if (currentMaster.get() != null) {\n      stopThreads();\n      throw new RedisException(\"Multiple masters detected\");\n    }\n    currentMaster.set(addr);\n    log.info(\"{} is the master\",addr);\n    this.config.setMasterAddress(addr.toString());\n  }\n else {\n    log.info(\"{} is a slave\",addr);\n    this.config.addSlaveAddress(addr.toString());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 128,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1639,
        "startLineNumber" : 66,
        "startColumnNumber" : 92,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(config,id);\n  this.config=create(cfg);\n  initTimer(this.config);\n  for (  String address : cfg.getNodeAddresses()) {\n    RedisURI addr=new RedisURI(address);\n    RFuture<RedisConnection> connectionFuture=connectToNode(cfg,addr,null,addr.getHost());\n    connectionFuture.awaitUninterruptibly();\n    RedisConnection connection=connectionFuture.getNow();\n    if (connection == null) {\n      continue;\n    }\n    Role role=Role.valueOf(connection.sync(RedisCommands.INFO_REPLICATION).get(ROLE_KEY));\n    if (Role.master.equals(role)) {\n      if (currentMaster.get() != null) {\n        stopThreads();\n        throw new RedisException(\"Multiple masters detected\");\n      }\n      currentMaster.set(addr);\n      log.info(\"{} is the master\",addr);\n      this.config.setMasterAddress(addr.toString());\n    }\n else {\n      log.info(\"{} is a slave\",addr);\n      this.config.addSlaveAddress(addr.toString());\n    }\n  }\n  if (currentMaster.get() == null) {\n    stopThreads();\n    throw new RedisConnectionException(\"Can't connect to servers!\");\n  }\n  if (this.config.getReadMode() != ReadMode.MASTER && this.config.getSlaveAddresses().isEmpty()) {\n    log.warn(\"ReadMode = \" + this.config.getReadMode() + \", but slave nodes are not found! Please specify all nodes in replicated mode.\");\n  }\n  initSingleEntry();\n  scheduleMasterChangeCheck(cfg);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 199,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1727,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public ReplicatedConnectionManager(ReplicatedServersConfig cfg,Config config,UUID id){\n  super(config,id);\n  this.config=create(cfg);\n  initTimer(this.config);\n  for (  String address : cfg.getNodeAddresses()) {\n    RedisURI addr=new RedisURI(address);\n    RFuture<RedisConnection> connectionFuture=connectToNode(cfg,addr,null,addr.getHost());\n    connectionFuture.awaitUninterruptibly();\n    RedisConnection connection=connectionFuture.getNow();\n    if (connection == null) {\n      continue;\n    }\n    Role role=Role.valueOf(connection.sync(RedisCommands.INFO_REPLICATION).get(ROLE_KEY));\n    if (Role.master.equals(role)) {\n      if (currentMaster.get() != null) {\n        stopThreads();\n        throw new RedisException(\"Multiple masters detected\");\n      }\n      currentMaster.set(addr);\n      log.info(\"{} is the master\",addr);\n      this.config.setMasterAddress(addr.toString());\n    }\n else {\n      log.info(\"{} is a slave\",addr);\n      this.config.addSlaveAddress(addr.toString());\n    }\n  }\n  if (currentMaster.get() == null) {\n    stopThreads();\n    throw new RedisConnectionException(\"Can't connect to servers!\");\n  }\n  if (this.config.getReadMode() != ReadMode.MASTER && this.config.getSlaveAddresses().isEmpty()) {\n    log.warn(\"ReadMode = \" + this.config.getReadMode() + \", but slave nodes are not found! Please specify all nodes in replicated mode.\");\n  }\n  initSingleEntry();\n  scheduleMasterChangeCheck(cfg);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 214,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 74,
        "startColumnNumber" : 12,
        "endLineNumber" : 74,
        "endColumnNumber" : 103
      },
      "nodeContext" : "RFuture<RedisConnection> connectionFuture=connectToNode(cfg,addr,null,addr.getHost());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 77,
      "startColumnNumber" : 30,
      "endLineNumber" : 77,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 77,
        "startColumnNumber" : 16,
        "endLineNumber" : 77,
        "endColumnNumber" : 34
      },
      "nodeContext" : "connection == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 77,
        "startColumnNumber" : 12,
        "endLineNumber" : 79,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (connection == null) {\n  continue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 992,
        "startLineNumber" : 72,
        "startColumnNumber" : 54,
        "endLineNumber" : 94,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RedisURI addr=new RedisURI(address);\n  RFuture<RedisConnection> connectionFuture=connectToNode(cfg,addr,null,addr.getHost());\n  connectionFuture.awaitUninterruptibly();\n  RedisConnection connection=connectionFuture.getNow();\n  if (connection == null) {\n    continue;\n  }\n  Role role=Role.valueOf(connection.sync(RedisCommands.INFO_REPLICATION).get(ROLE_KEY));\n  if (Role.master.equals(role)) {\n    if (currentMaster.get() != null) {\n      stopThreads();\n      throw new RedisException(\"Multiple masters detected\");\n    }\n    currentMaster.set(addr);\n    log.info(\"{} is the master\",addr);\n    this.config.setMasterAddress(addr.toString());\n  }\n else {\n    log.info(\"{} is a slave\",addr);\n    this.config.addSlaveAddress(addr.toString());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1038,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String address : cfg.getNodeAddresses()) {\n  RedisURI addr=new RedisURI(address);\n  RFuture<RedisConnection> connectionFuture=connectToNode(cfg,addr,null,addr.getHost());\n  connectionFuture.awaitUninterruptibly();\n  RedisConnection connection=connectionFuture.getNow();\n  if (connection == null) {\n    continue;\n  }\n  Role role=Role.valueOf(connection.sync(RedisCommands.INFO_REPLICATION).get(ROLE_KEY));\n  if (Role.master.equals(role)) {\n    if (currentMaster.get() != null) {\n      stopThreads();\n      throw new RedisException(\"Multiple masters detected\");\n    }\n    currentMaster.set(addr);\n    log.info(\"{} is the master\",addr);\n    this.config.setMasterAddress(addr.toString());\n  }\n else {\n    log.info(\"{} is a slave\",addr);\n    this.config.addSlaveAddress(addr.toString());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 128,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1639,
        "startLineNumber" : 66,
        "startColumnNumber" : 92,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(config,id);\n  this.config=create(cfg);\n  initTimer(this.config);\n  for (  String address : cfg.getNodeAddresses()) {\n    RedisURI addr=new RedisURI(address);\n    RFuture<RedisConnection> connectionFuture=connectToNode(cfg,addr,null,addr.getHost());\n    connectionFuture.awaitUninterruptibly();\n    RedisConnection connection=connectionFuture.getNow();\n    if (connection == null) {\n      continue;\n    }\n    Role role=Role.valueOf(connection.sync(RedisCommands.INFO_REPLICATION).get(ROLE_KEY));\n    if (Role.master.equals(role)) {\n      if (currentMaster.get() != null) {\n        stopThreads();\n        throw new RedisException(\"Multiple masters detected\");\n      }\n      currentMaster.set(addr);\n      log.info(\"{} is the master\",addr);\n      this.config.setMasterAddress(addr.toString());\n    }\n else {\n      log.info(\"{} is a slave\",addr);\n      this.config.addSlaveAddress(addr.toString());\n    }\n  }\n  if (currentMaster.get() == null) {\n    stopThreads();\n    throw new RedisConnectionException(\"Can't connect to servers!\");\n  }\n  if (this.config.getReadMode() != ReadMode.MASTER && this.config.getSlaveAddresses().isEmpty()) {\n    log.warn(\"ReadMode = \" + this.config.getReadMode() + \", but slave nodes are not found! Please specify all nodes in replicated mode.\");\n  }\n  initSingleEntry();\n  scheduleMasterChangeCheck(cfg);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 199,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1727,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public ReplicatedConnectionManager(ReplicatedServersConfig cfg,Config config,UUID id){\n  super(config,id);\n  this.config=create(cfg);\n  initTimer(this.config);\n  for (  String address : cfg.getNodeAddresses()) {\n    RedisURI addr=new RedisURI(address);\n    RFuture<RedisConnection> connectionFuture=connectToNode(cfg,addr,null,addr.getHost());\n    connectionFuture.awaitUninterruptibly();\n    RedisConnection connection=connectionFuture.getNow();\n    if (connection == null) {\n      continue;\n    }\n    Role role=Role.valueOf(connection.sync(RedisCommands.INFO_REPLICATION).get(ROLE_KEY));\n    if (Role.master.equals(role)) {\n      if (currentMaster.get() != null) {\n        stopThreads();\n        throw new RedisException(\"Multiple masters detected\");\n      }\n      currentMaster.set(addr);\n      log.info(\"{} is the master\",addr);\n      this.config.setMasterAddress(addr.toString());\n    }\n else {\n      log.info(\"{} is a slave\",addr);\n      this.config.addSlaveAddress(addr.toString());\n    }\n  }\n  if (currentMaster.get() == null) {\n    stopThreads();\n    throw new RedisConnectionException(\"Can't connect to servers!\");\n  }\n  if (this.config.getReadMode() != ReadMode.MASTER && this.config.getSlaveAddresses().isEmpty()) {\n    log.warn(\"ReadMode = \" + this.config.getReadMode() + \", but slave nodes are not found! Please specify all nodes in replicated mode.\");\n  }\n  initSingleEntry();\n  scheduleMasterChangeCheck(cfg);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 214,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 77,
        "startColumnNumber" : 16,
        "endLineNumber" : 77,
        "endColumnNumber" : 34
      },
      "nodeContext" : "connection == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 83,
      "startColumnNumber" : 43,
      "endLineNumber" : 83,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 83,
        "startColumnNumber" : 20,
        "endLineNumber" : 83,
        "endColumnNumber" : 47
      },
      "nodeContext" : "currentMaster.get() != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 83,
        "startColumnNumber" : 16,
        "endLineNumber" : 86,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (currentMaster.get() != null) {\n  stopThreads();\n  throw new RedisException(\"Multiple masters detected\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 350,
        "startLineNumber" : 82,
        "startColumnNumber" : 42,
        "endLineNumber" : 90,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (currentMaster.get() != null) {\n    stopThreads();\n    throw new RedisException(\"Multiple masters detected\");\n  }\n  currentMaster.set(addr);\n  log.info(\"{} is the master\",addr);\n  this.config.setMasterAddress(addr.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 512,
        "startLineNumber" : 82,
        "startColumnNumber" : 12,
        "endLineNumber" : 93,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (Role.master.equals(role)) {\n  if (currentMaster.get() != null) {\n    stopThreads();\n    throw new RedisException(\"Multiple masters detected\");\n  }\n  currentMaster.set(addr);\n  log.info(\"{} is the master\",addr);\n  this.config.setMasterAddress(addr.toString());\n}\n else {\n  log.info(\"{} is a slave\",addr);\n  this.config.addSlaveAddress(addr.toString());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 59,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 992,
        "startLineNumber" : 72,
        "startColumnNumber" : 54,
        "endLineNumber" : 94,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RedisURI addr=new RedisURI(address);\n  RFuture<RedisConnection> connectionFuture=connectToNode(cfg,addr,null,addr.getHost());\n  connectionFuture.awaitUninterruptibly();\n  RedisConnection connection=connectionFuture.getNow();\n  if (connection == null) {\n    continue;\n  }\n  Role role=Role.valueOf(connection.sync(RedisCommands.INFO_REPLICATION).get(ROLE_KEY));\n  if (Role.master.equals(role)) {\n    if (currentMaster.get() != null) {\n      stopThreads();\n      throw new RedisException(\"Multiple masters detected\");\n    }\n    currentMaster.set(addr);\n    log.info(\"{} is the master\",addr);\n    this.config.setMasterAddress(addr.toString());\n  }\n else {\n    log.info(\"{} is a slave\",addr);\n    this.config.addSlaveAddress(addr.toString());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1038,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String address : cfg.getNodeAddresses()) {\n  RedisURI addr=new RedisURI(address);\n  RFuture<RedisConnection> connectionFuture=connectToNode(cfg,addr,null,addr.getHost());\n  connectionFuture.awaitUninterruptibly();\n  RedisConnection connection=connectionFuture.getNow();\n  if (connection == null) {\n    continue;\n  }\n  Role role=Role.valueOf(connection.sync(RedisCommands.INFO_REPLICATION).get(ROLE_KEY));\n  if (Role.master.equals(role)) {\n    if (currentMaster.get() != null) {\n      stopThreads();\n      throw new RedisException(\"Multiple masters detected\");\n    }\n    currentMaster.set(addr);\n    log.info(\"{} is the master\",addr);\n    this.config.setMasterAddress(addr.toString());\n  }\n else {\n    log.info(\"{} is a slave\",addr);\n    this.config.addSlaveAddress(addr.toString());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 128,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1639,
        "startLineNumber" : 66,
        "startColumnNumber" : 92,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(config,id);\n  this.config=create(cfg);\n  initTimer(this.config);\n  for (  String address : cfg.getNodeAddresses()) {\n    RedisURI addr=new RedisURI(address);\n    RFuture<RedisConnection> connectionFuture=connectToNode(cfg,addr,null,addr.getHost());\n    connectionFuture.awaitUninterruptibly();\n    RedisConnection connection=connectionFuture.getNow();\n    if (connection == null) {\n      continue;\n    }\n    Role role=Role.valueOf(connection.sync(RedisCommands.INFO_REPLICATION).get(ROLE_KEY));\n    if (Role.master.equals(role)) {\n      if (currentMaster.get() != null) {\n        stopThreads();\n        throw new RedisException(\"Multiple masters detected\");\n      }\n      currentMaster.set(addr);\n      log.info(\"{} is the master\",addr);\n      this.config.setMasterAddress(addr.toString());\n    }\n else {\n      log.info(\"{} is a slave\",addr);\n      this.config.addSlaveAddress(addr.toString());\n    }\n  }\n  if (currentMaster.get() == null) {\n    stopThreads();\n    throw new RedisConnectionException(\"Can't connect to servers!\");\n  }\n  if (this.config.getReadMode() != ReadMode.MASTER && this.config.getSlaveAddresses().isEmpty()) {\n    log.warn(\"ReadMode = \" + this.config.getReadMode() + \", but slave nodes are not found! Please specify all nodes in replicated mode.\");\n  }\n  initSingleEntry();\n  scheduleMasterChangeCheck(cfg);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 199,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1727,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public ReplicatedConnectionManager(ReplicatedServersConfig cfg,Config config,UUID id){\n  super(config,id);\n  this.config=create(cfg);\n  initTimer(this.config);\n  for (  String address : cfg.getNodeAddresses()) {\n    RedisURI addr=new RedisURI(address);\n    RFuture<RedisConnection> connectionFuture=connectToNode(cfg,addr,null,addr.getHost());\n    connectionFuture.awaitUninterruptibly();\n    RedisConnection connection=connectionFuture.getNow();\n    if (connection == null) {\n      continue;\n    }\n    Role role=Role.valueOf(connection.sync(RedisCommands.INFO_REPLICATION).get(ROLE_KEY));\n    if (Role.master.equals(role)) {\n      if (currentMaster.get() != null) {\n        stopThreads();\n        throw new RedisException(\"Multiple masters detected\");\n      }\n      currentMaster.set(addr);\n      log.info(\"{} is the master\",addr);\n      this.config.setMasterAddress(addr.toString());\n    }\n else {\n      log.info(\"{} is a slave\",addr);\n      this.config.addSlaveAddress(addr.toString());\n    }\n  }\n  if (currentMaster.get() == null) {\n    stopThreads();\n    throw new RedisConnectionException(\"Can't connect to servers!\");\n  }\n  if (this.config.getReadMode() != ReadMode.MASTER && this.config.getSlaveAddresses().isEmpty()) {\n    log.warn(\"ReadMode = \" + this.config.getReadMode() + \", but slave nodes are not found! Please specify all nodes in replicated mode.\");\n  }\n  initSingleEntry();\n  scheduleMasterChangeCheck(cfg);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 214,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 83,
        "startColumnNumber" : 20,
        "endLineNumber" : 83,
        "endColumnNumber" : 47
      },
      "nodeContext" : "currentMaster.get() != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 96,
      "startColumnNumber" : 35,
      "endLineNumber" : 96,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 96,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 39
      },
      "nodeContext" : "currentMaster.get() == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (currentMaster.get() == null) {\n  stopThreads();\n  throw new RedisConnectionException(\"Can't connect to servers!\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1639,
        "startLineNumber" : 66,
        "startColumnNumber" : 92,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(config,id);\n  this.config=create(cfg);\n  initTimer(this.config);\n  for (  String address : cfg.getNodeAddresses()) {\n    RedisURI addr=new RedisURI(address);\n    RFuture<RedisConnection> connectionFuture=connectToNode(cfg,addr,null,addr.getHost());\n    connectionFuture.awaitUninterruptibly();\n    RedisConnection connection=connectionFuture.getNow();\n    if (connection == null) {\n      continue;\n    }\n    Role role=Role.valueOf(connection.sync(RedisCommands.INFO_REPLICATION).get(ROLE_KEY));\n    if (Role.master.equals(role)) {\n      if (currentMaster.get() != null) {\n        stopThreads();\n        throw new RedisException(\"Multiple masters detected\");\n      }\n      currentMaster.set(addr);\n      log.info(\"{} is the master\",addr);\n      this.config.setMasterAddress(addr.toString());\n    }\n else {\n      log.info(\"{} is a slave\",addr);\n      this.config.addSlaveAddress(addr.toString());\n    }\n  }\n  if (currentMaster.get() == null) {\n    stopThreads();\n    throw new RedisConnectionException(\"Can't connect to servers!\");\n  }\n  if (this.config.getReadMode() != ReadMode.MASTER && this.config.getSlaveAddresses().isEmpty()) {\n    log.warn(\"ReadMode = \" + this.config.getReadMode() + \", but slave nodes are not found! Please specify all nodes in replicated mode.\");\n  }\n  initSingleEntry();\n  scheduleMasterChangeCheck(cfg);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 199,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1727,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public ReplicatedConnectionManager(ReplicatedServersConfig cfg,Config config,UUID id){\n  super(config,id);\n  this.config=create(cfg);\n  initTimer(this.config);\n  for (  String address : cfg.getNodeAddresses()) {\n    RedisURI addr=new RedisURI(address);\n    RFuture<RedisConnection> connectionFuture=connectToNode(cfg,addr,null,addr.getHost());\n    connectionFuture.awaitUninterruptibly();\n    RedisConnection connection=connectionFuture.getNow();\n    if (connection == null) {\n      continue;\n    }\n    Role role=Role.valueOf(connection.sync(RedisCommands.INFO_REPLICATION).get(ROLE_KEY));\n    if (Role.master.equals(role)) {\n      if (currentMaster.get() != null) {\n        stopThreads();\n        throw new RedisException(\"Multiple masters detected\");\n      }\n      currentMaster.set(addr);\n      log.info(\"{} is the master\",addr);\n      this.config.setMasterAddress(addr.toString());\n    }\n else {\n      log.info(\"{} is a slave\",addr);\n      this.config.addSlaveAddress(addr.toString());\n    }\n  }\n  if (currentMaster.get() == null) {\n    stopThreads();\n    throw new RedisConnectionException(\"Can't connect to servers!\");\n  }\n  if (this.config.getReadMode() != ReadMode.MASTER && this.config.getSlaveAddresses().isEmpty()) {\n    log.warn(\"ReadMode = \" + this.config.getReadMode() + \", but slave nodes are not found! Please specify all nodes in replicated mode.\");\n  }\n  initSingleEntry();\n  scheduleMasterChangeCheck(cfg);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 214,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 96,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 39
      },
      "nodeContext" : "currentMaster.get() == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "null"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 74,
    "startColumnNumber" : 81,
    "endLineNumber" : 74,
    "endColumnNumber" : 85
  }, {
    "charLength" : 4,
    "startLineNumber" : 77,
    "startColumnNumber" : 30,
    "endLineNumber" : 77,
    "endColumnNumber" : 34
  }, {
    "charLength" : 4,
    "startLineNumber" : 83,
    "startColumnNumber" : 43,
    "endLineNumber" : 83,
    "endColumnNumber" : 47
  }, {
    "charLength" : 4,
    "startLineNumber" : 96,
    "startColumnNumber" : 35,
    "endLineNumber" : 96,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}