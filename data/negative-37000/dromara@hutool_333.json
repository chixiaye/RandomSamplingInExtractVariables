{
  "id" : 333,
  "expression" : "JSONNull",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-json/src/main/java/cn/hutool/json/InternalJSONUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "JSONNull",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 45,
      "startColumnNumber" : 16,
      "endLineNumber" : 45,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 45,
        "startColumnNumber" : 16,
        "endLineNumber" : 45,
        "endColumnNumber" : 29
      },
      "nodeContext" : "JSONNull.NULL",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 45,
        "startColumnNumber" : 16,
        "endLineNumber" : 45,
        "endColumnNumber" : 40
      },
      "nodeContext" : "JSONNull.NULL.toString()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 45,
        "startColumnNumber" : 3,
        "endLineNumber" : 45,
        "endColumnNumber" : 41
      },
      "nodeContext" : "writer.write(JSONNull.NULL.toString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 45,
        "startColumnNumber" : 3,
        "endLineNumber" : 45,
        "endColumnNumber" : 42
      },
      "nodeContext" : "writer.write(JSONNull.NULL.toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 44,
        "startColumnNumber" : 50,
        "endLineNumber" : 46,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  writer.write(JSONNull.NULL.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1191,
        "startLineNumber" : 44,
        "startColumnNumber" : 2,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (value == null || value instanceof JSONNull) {\n  writer.write(JSONNull.NULL.toString());\n}\n else if (value instanceof JSON) {\n  ((JSON)value).write(writer,indentFactor,indent);\n}\n else if (value instanceof Map) {\n  new JSONObject(value).write(writer,indentFactor,indent);\n}\n else if (value instanceof Iterable || value instanceof Iterator || value.getClass().isArray()) {\n  new JSONArray(value).write(writer,indentFactor,indent);\n}\n else if (value instanceof Number) {\n  writer.write(NumberUtil.toStr((Number)value));\n}\n else if (value instanceof Date || value instanceof Calendar || value instanceof TemporalAccessor) {\n  final String format=(null == config) ? null : config.getDateFormat();\n  writer.write(formatDate(value,format));\n}\n else if (value instanceof Boolean) {\n  writer.write(value.toString());\n}\n else if (value instanceof JSONString) {\n  String valueStr;\n  try {\n    valueStr=((JSONString)value).toJSONString();\n  }\n catch (  Exception e) {\n    throw new JSONException(e);\n  }\n  writer.write(valueStr != null ? valueStr : JSONUtil.quote(value.toString()));\n}\n else {\n  JSONUtil.quote(value.toString(),writer);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 204,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1218,
        "startLineNumber" : 43,
        "startColumnNumber" : 148,
        "endLineNumber" : 71,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (value == null || value instanceof JSONNull) {\n    writer.write(JSONNull.NULL.toString());\n  }\n else   if (value instanceof JSON) {\n    ((JSON)value).write(writer,indentFactor,indent);\n  }\n else   if (value instanceof Map) {\n    new JSONObject(value).write(writer,indentFactor,indent);\n  }\n else   if (value instanceof Iterable || value instanceof Iterator || value.getClass().isArray()) {\n    new JSONArray(value).write(writer,indentFactor,indent);\n  }\n else   if (value instanceof Number) {\n    writer.write(NumberUtil.toStr((Number)value));\n  }\n else   if (value instanceof Date || value instanceof Calendar || value instanceof TemporalAccessor) {\n    final String format=(null == config) ? null : config.getDateFormat();\n    writer.write(formatDate(value,format));\n  }\n else   if (value instanceof Boolean) {\n    writer.write(value.toString());\n  }\n else   if (value instanceof JSONString) {\n    String valueStr;\n    try {\n      valueStr=((JSONString)value).toJSONString();\n    }\n catch (    Exception e) {\n      throw new JSONException(e);\n    }\n    writer.write(valueStr != null ? valueStr : JSONUtil.quote(value.toString()));\n  }\n else {\n    JSONUtil.quote(value.toString(),writer);\n  }\n  return writer;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 207,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1646,
        "startLineNumber" : 31,
        "startColumnNumber" : 1,
        "endLineNumber" : 71,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 写入值到Writer\n * @param writer       Writer\n * @param value        值\n * @param indentFactor 缩进因子，定义每一级别增加的缩进量\n * @param indent       缩进空格数\n * @param config       配置项\n * @return Writer\n * @throws JSONException JSON异常\n * @throws IOException   IO异常\n */\nprotected static Writer writeValue(Writer writer,Object value,int indentFactor,int indent,JSONConfig config) throws JSONException, IOException {\n  if (value == null || value instanceof JSONNull) {\n    writer.write(JSONNull.NULL.toString());\n  }\n else   if (value instanceof JSON) {\n    ((JSON)value).write(writer,indentFactor,indent);\n  }\n else   if (value instanceof Map) {\n    new JSONObject(value).write(writer,indentFactor,indent);\n  }\n else   if (value instanceof Iterable || value instanceof Iterator || value.getClass().isArray()) {\n    new JSONArray(value).write(writer,indentFactor,indent);\n  }\n else   if (value instanceof Number) {\n    writer.write(NumberUtil.toStr((Number)value));\n  }\n else   if (value instanceof Date || value instanceof Calendar || value instanceof TemporalAccessor) {\n    final String format=(null == config) ? null : config.getDateFormat();\n    writer.write(formatDate(value,format));\n  }\n else   if (value instanceof Boolean) {\n    writer.write(value.toString());\n  }\n else   if (value instanceof JSONString) {\n    String valueStr;\n    try {\n      valueStr=((JSONString)value).toJSONString();\n    }\n catch (    Exception e) {\n      throw new JSONException(e);\n    }\n    writer.write(valueStr != null ? valueStr : JSONUtil.quote(value.toString()));\n  }\n else {\n    JSONUtil.quote(value.toString(),writer);\n  }\n  return writer;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 236,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 45,
        "startColumnNumber" : 3,
        "endLineNumber" : 45,
        "endColumnNumber" : 42
      },
      "nodeContext" : "writer.write(JSONNull.NULL.toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "cn.hutool.json.JSONNull"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 45,
    "startColumnNumber" : 16,
    "endLineNumber" : 45,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ ]
}