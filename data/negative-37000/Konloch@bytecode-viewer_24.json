{
  "id" : 24,
  "expression" : "is",
  "projectName" : "Konloch@bytecode-viewer",
  "commitID" : "9ab8ec7f8c061fb1d9b1db3e901034d162a211ff",
  "filePath" : "/src/main/java/the/bytecode/club/bytecodeviewer/decompilers/impl/KrakatauDisassembler.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "is",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 80,
      "startColumnNumber" : 58,
      "endLineNumber" : 80,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 80,
        "startColumnNumber" : 36,
        "endLineNumber" : 80,
        "endColumnNumber" : 61
      },
      "nodeContext" : "new InputStreamReader(is)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 80,
        "startColumnNumber" : 30,
        "endLineNumber" : 80,
        "endColumnNumber" : 61
      },
      "nodeContext" : "isr=new InputStreamReader(is)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 80,
        "startColumnNumber" : 12,
        "endLineNumber" : 80,
        "endColumnNumber" : 62
      },
      "nodeContext" : "InputStreamReader isr=new InputStreamReader(is);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1689,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ProcessBuilder pb=new ProcessBuilder(Configuration.python,\"-O\",krakatauWorkingDirectory + fs + \"disassemble.py\",\"-path\",krakatauTempJar.getAbsolutePath(),\"-out\",krakatauTempDir.getAbsolutePath(),cn.name + \".class\");\n  Process process=pb.start();\n  BytecodeViewer.createdProcesses.add(process);\n  InputStream is=process.getInputStream();\n  InputStreamReader isr=new InputStreamReader(is);\n  BufferedReader br=new BufferedReader(isr);\n  StringBuilder log=new StringBuilder(\"Process:\" + nl + nl);\n  String line;\n  while ((line=br.readLine()) != null) {\n    log.append(nl).append(line);\n  }\n  br.close();\n  log.append(nl).append(nl).append(\"Error:\").append(nl).append(nl);\n  is=process.getErrorStream();\n  isr=new InputStreamReader(is);\n  br=new BufferedReader(isr);\n  while ((line=br.readLine()) != null) {\n    log.append(nl).append(line);\n  }\n  br.close();\n  int exitValue=process.waitFor();\n  log.append(nl).append(nl).append(\"Exit Value is \").append(exitValue);\n  s=log.toString();\n  s=DiskReader.loadAsString(krakatauTempDir.getAbsolutePath() + fs + cn.name+ \".j\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 211,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2004,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  ProcessBuilder pb=new ProcessBuilder(Configuration.python,\"-O\",krakatauWorkingDirectory + fs + \"disassemble.py\",\"-path\",krakatauTempJar.getAbsolutePath(),\"-out\",krakatauTempDir.getAbsolutePath(),cn.name + \".class\");\n  Process process=pb.start();\n  BytecodeViewer.createdProcesses.add(process);\n  InputStream is=process.getInputStream();\n  InputStreamReader isr=new InputStreamReader(is);\n  BufferedReader br=new BufferedReader(isr);\n  StringBuilder log=new StringBuilder(\"Process:\" + nl + nl);\n  String line;\n  while ((line=br.readLine()) != null) {\n    log.append(nl).append(line);\n  }\n  br.close();\n  log.append(nl).append(nl).append(\"Error:\").append(nl).append(nl);\n  is=process.getErrorStream();\n  isr=new InputStreamReader(is);\n  br=new BufferedReader(isr);\n  while ((line=br.readLine()) != null) {\n    log.append(nl).append(line);\n  }\n  br.close();\n  int exitValue=process.waitFor();\n  log.append(nl).append(nl).append(\"Exit Value is \").append(exitValue);\n  s=log.toString();\n  s=DiskReader.loadAsString(krakatauTempDir.getAbsolutePath() + fs + cn.name+ \".j\");\n}\n catch (Exception e) {\n  StringWriter sw=new StringWriter();\n  e.printStackTrace(new PrintWriter(sw));\n  e.printStackTrace();\n  s+=nl + \"Bytecode Viewer Version: \" + VERSION+ nl+ nl+ sw;\n}\n finally {\n  BytecodeViewer.sm.resumeBlocking();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 255,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2601,
        "startLineNumber" : 48,
        "startColumnNumber" : 95,
        "endLineNumber" : 114,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (Configuration.python.isEmpty()) {\n    BytecodeViewer.showMessage(\"You need to set your Python (or PyPy for speed) 2.7 executable path.\");\n    BytecodeViewer.viewer.selectPythonC();\n  }\n  if (Configuration.python.isEmpty()) {\n    BytecodeViewer.showMessage(\"You need to set Python!\");\n    return \"Set your paths\";\n  }\n  String s=\"Bytecode Viewer Version: \" + VERSION + nl+ nl+ \"Please send this to konloch@gmail.com. \"+ nl+ nl;\n  BytecodeViewer.sm.pauseBlocking();\n  try {\n    ProcessBuilder pb=new ProcessBuilder(Configuration.python,\"-O\",krakatauWorkingDirectory + fs + \"disassemble.py\",\"-path\",krakatauTempJar.getAbsolutePath(),\"-out\",krakatauTempDir.getAbsolutePath(),cn.name + \".class\");\n    Process process=pb.start();\n    BytecodeViewer.createdProcesses.add(process);\n    InputStream is=process.getInputStream();\n    InputStreamReader isr=new InputStreamReader(is);\n    BufferedReader br=new BufferedReader(isr);\n    StringBuilder log=new StringBuilder(\"Process:\" + nl + nl);\n    String line;\n    while ((line=br.readLine()) != null) {\n      log.append(nl).append(line);\n    }\n    br.close();\n    log.append(nl).append(nl).append(\"Error:\").append(nl).append(nl);\n    is=process.getErrorStream();\n    isr=new InputStreamReader(is);\n    br=new BufferedReader(isr);\n    while ((line=br.readLine()) != null) {\n      log.append(nl).append(line);\n    }\n    br.close();\n    int exitValue=process.waitFor();\n    log.append(nl).append(nl).append(\"Exit Value is \").append(exitValue);\n    s=log.toString();\n    s=DiskReader.loadAsString(krakatauTempDir.getAbsolutePath() + fs + cn.name+ \".j\");\n  }\n catch (  Exception e) {\n    StringWriter sw=new StringWriter();\n    e.printStackTrace(new PrintWriter(sw));\n    e.printStackTrace();\n    s+=nl + \"Bytecode Viewer Version: \" + VERSION+ nl+ nl+ sw;\n  }\n finally {\n    BytecodeViewer.sm.resumeBlocking();\n  }\n  return s;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 309,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2692,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 114,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public String decompileClassNode(File krakatauTempJar,File krakatauTempDir,ClassNode cn){\n  if (Configuration.python.isEmpty()) {\n    BytecodeViewer.showMessage(\"You need to set your Python (or PyPy for speed) 2.7 executable path.\");\n    BytecodeViewer.viewer.selectPythonC();\n  }\n  if (Configuration.python.isEmpty()) {\n    BytecodeViewer.showMessage(\"You need to set Python!\");\n    return \"Set your paths\";\n  }\n  String s=\"Bytecode Viewer Version: \" + VERSION + nl+ nl+ \"Please send this to konloch@gmail.com. \"+ nl+ nl;\n  BytecodeViewer.sm.pauseBlocking();\n  try {\n    ProcessBuilder pb=new ProcessBuilder(Configuration.python,\"-O\",krakatauWorkingDirectory + fs + \"disassemble.py\",\"-path\",krakatauTempJar.getAbsolutePath(),\"-out\",krakatauTempDir.getAbsolutePath(),cn.name + \".class\");\n    Process process=pb.start();\n    BytecodeViewer.createdProcesses.add(process);\n    InputStream is=process.getInputStream();\n    InputStreamReader isr=new InputStreamReader(is);\n    BufferedReader br=new BufferedReader(isr);\n    StringBuilder log=new StringBuilder(\"Process:\" + nl + nl);\n    String line;\n    while ((line=br.readLine()) != null) {\n      log.append(nl).append(line);\n    }\n    br.close();\n    log.append(nl).append(nl).append(\"Error:\").append(nl).append(nl);\n    is=process.getErrorStream();\n    isr=new InputStreamReader(is);\n    br=new BufferedReader(isr);\n    while ((line=br.readLine()) != null) {\n      log.append(nl).append(line);\n    }\n    br.close();\n    int exitValue=process.waitFor();\n    log.append(nl).append(nl).append(\"Exit Value is \").append(exitValue);\n    s=log.toString();\n    s=DiskReader.loadAsString(krakatauTempDir.getAbsolutePath() + fs + cn.name+ \".j\");\n  }\n catch (  Exception e) {\n    StringWriter sw=new StringWriter();\n    e.printStackTrace(new PrintWriter(sw));\n    e.printStackTrace();\n    s+=nl + \"Bytecode Viewer Version: \" + VERSION+ nl+ nl+ sw;\n  }\n finally {\n    BytecodeViewer.sm.resumeBlocking();\n  }\n  return s;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 326,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 80,
        "startColumnNumber" : 12,
        "endLineNumber" : 80,
        "endColumnNumber" : 62
      },
      "nodeContext" : "InputStreamReader isr=new InputStreamReader(is);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.io.InputStream"
  }, {
    "nodeContext" : "is",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 92,
      "startColumnNumber" : 40,
      "endLineNumber" : 92,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 92,
        "startColumnNumber" : 18,
        "endLineNumber" : 92,
        "endColumnNumber" : 43
      },
      "nodeContext" : "new InputStreamReader(is)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 43
      },
      "nodeContext" : "isr=new InputStreamReader(is)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 44
      },
      "nodeContext" : "isr=new InputStreamReader(is);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1689,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ProcessBuilder pb=new ProcessBuilder(Configuration.python,\"-O\",krakatauWorkingDirectory + fs + \"disassemble.py\",\"-path\",krakatauTempJar.getAbsolutePath(),\"-out\",krakatauTempDir.getAbsolutePath(),cn.name + \".class\");\n  Process process=pb.start();\n  BytecodeViewer.createdProcesses.add(process);\n  InputStream is=process.getInputStream();\n  InputStreamReader isr=new InputStreamReader(is);\n  BufferedReader br=new BufferedReader(isr);\n  StringBuilder log=new StringBuilder(\"Process:\" + nl + nl);\n  String line;\n  while ((line=br.readLine()) != null) {\n    log.append(nl).append(line);\n  }\n  br.close();\n  log.append(nl).append(nl).append(\"Error:\").append(nl).append(nl);\n  is=process.getErrorStream();\n  isr=new InputStreamReader(is);\n  br=new BufferedReader(isr);\n  while ((line=br.readLine()) != null) {\n    log.append(nl).append(line);\n  }\n  br.close();\n  int exitValue=process.waitFor();\n  log.append(nl).append(nl).append(\"Exit Value is \").append(exitValue);\n  s=log.toString();\n  s=DiskReader.loadAsString(krakatauTempDir.getAbsolutePath() + fs + cn.name+ \".j\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 211,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2004,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  ProcessBuilder pb=new ProcessBuilder(Configuration.python,\"-O\",krakatauWorkingDirectory + fs + \"disassemble.py\",\"-path\",krakatauTempJar.getAbsolutePath(),\"-out\",krakatauTempDir.getAbsolutePath(),cn.name + \".class\");\n  Process process=pb.start();\n  BytecodeViewer.createdProcesses.add(process);\n  InputStream is=process.getInputStream();\n  InputStreamReader isr=new InputStreamReader(is);\n  BufferedReader br=new BufferedReader(isr);\n  StringBuilder log=new StringBuilder(\"Process:\" + nl + nl);\n  String line;\n  while ((line=br.readLine()) != null) {\n    log.append(nl).append(line);\n  }\n  br.close();\n  log.append(nl).append(nl).append(\"Error:\").append(nl).append(nl);\n  is=process.getErrorStream();\n  isr=new InputStreamReader(is);\n  br=new BufferedReader(isr);\n  while ((line=br.readLine()) != null) {\n    log.append(nl).append(line);\n  }\n  br.close();\n  int exitValue=process.waitFor();\n  log.append(nl).append(nl).append(\"Exit Value is \").append(exitValue);\n  s=log.toString();\n  s=DiskReader.loadAsString(krakatauTempDir.getAbsolutePath() + fs + cn.name+ \".j\");\n}\n catch (Exception e) {\n  StringWriter sw=new StringWriter();\n  e.printStackTrace(new PrintWriter(sw));\n  e.printStackTrace();\n  s+=nl + \"Bytecode Viewer Version: \" + VERSION+ nl+ nl+ sw;\n}\n finally {\n  BytecodeViewer.sm.resumeBlocking();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 255,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2601,
        "startLineNumber" : 48,
        "startColumnNumber" : 95,
        "endLineNumber" : 114,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (Configuration.python.isEmpty()) {\n    BytecodeViewer.showMessage(\"You need to set your Python (or PyPy for speed) 2.7 executable path.\");\n    BytecodeViewer.viewer.selectPythonC();\n  }\n  if (Configuration.python.isEmpty()) {\n    BytecodeViewer.showMessage(\"You need to set Python!\");\n    return \"Set your paths\";\n  }\n  String s=\"Bytecode Viewer Version: \" + VERSION + nl+ nl+ \"Please send this to konloch@gmail.com. \"+ nl+ nl;\n  BytecodeViewer.sm.pauseBlocking();\n  try {\n    ProcessBuilder pb=new ProcessBuilder(Configuration.python,\"-O\",krakatauWorkingDirectory + fs + \"disassemble.py\",\"-path\",krakatauTempJar.getAbsolutePath(),\"-out\",krakatauTempDir.getAbsolutePath(),cn.name + \".class\");\n    Process process=pb.start();\n    BytecodeViewer.createdProcesses.add(process);\n    InputStream is=process.getInputStream();\n    InputStreamReader isr=new InputStreamReader(is);\n    BufferedReader br=new BufferedReader(isr);\n    StringBuilder log=new StringBuilder(\"Process:\" + nl + nl);\n    String line;\n    while ((line=br.readLine()) != null) {\n      log.append(nl).append(line);\n    }\n    br.close();\n    log.append(nl).append(nl).append(\"Error:\").append(nl).append(nl);\n    is=process.getErrorStream();\n    isr=new InputStreamReader(is);\n    br=new BufferedReader(isr);\n    while ((line=br.readLine()) != null) {\n      log.append(nl).append(line);\n    }\n    br.close();\n    int exitValue=process.waitFor();\n    log.append(nl).append(nl).append(\"Exit Value is \").append(exitValue);\n    s=log.toString();\n    s=DiskReader.loadAsString(krakatauTempDir.getAbsolutePath() + fs + cn.name+ \".j\");\n  }\n catch (  Exception e) {\n    StringWriter sw=new StringWriter();\n    e.printStackTrace(new PrintWriter(sw));\n    e.printStackTrace();\n    s+=nl + \"Bytecode Viewer Version: \" + VERSION+ nl+ nl+ sw;\n  }\n finally {\n    BytecodeViewer.sm.resumeBlocking();\n  }\n  return s;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 309,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2692,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 114,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public String decompileClassNode(File krakatauTempJar,File krakatauTempDir,ClassNode cn){\n  if (Configuration.python.isEmpty()) {\n    BytecodeViewer.showMessage(\"You need to set your Python (or PyPy for speed) 2.7 executable path.\");\n    BytecodeViewer.viewer.selectPythonC();\n  }\n  if (Configuration.python.isEmpty()) {\n    BytecodeViewer.showMessage(\"You need to set Python!\");\n    return \"Set your paths\";\n  }\n  String s=\"Bytecode Viewer Version: \" + VERSION + nl+ nl+ \"Please send this to konloch@gmail.com. \"+ nl+ nl;\n  BytecodeViewer.sm.pauseBlocking();\n  try {\n    ProcessBuilder pb=new ProcessBuilder(Configuration.python,\"-O\",krakatauWorkingDirectory + fs + \"disassemble.py\",\"-path\",krakatauTempJar.getAbsolutePath(),\"-out\",krakatauTempDir.getAbsolutePath(),cn.name + \".class\");\n    Process process=pb.start();\n    BytecodeViewer.createdProcesses.add(process);\n    InputStream is=process.getInputStream();\n    InputStreamReader isr=new InputStreamReader(is);\n    BufferedReader br=new BufferedReader(isr);\n    StringBuilder log=new StringBuilder(\"Process:\" + nl + nl);\n    String line;\n    while ((line=br.readLine()) != null) {\n      log.append(nl).append(line);\n    }\n    br.close();\n    log.append(nl).append(nl).append(\"Error:\").append(nl).append(nl);\n    is=process.getErrorStream();\n    isr=new InputStreamReader(is);\n    br=new BufferedReader(isr);\n    while ((line=br.readLine()) != null) {\n      log.append(nl).append(line);\n    }\n    br.close();\n    int exitValue=process.waitFor();\n    log.append(nl).append(nl).append(\"Exit Value is \").append(exitValue);\n    s=log.toString();\n    s=DiskReader.loadAsString(krakatauTempDir.getAbsolutePath() + fs + cn.name+ \".j\");\n  }\n catch (  Exception e) {\n    StringWriter sw=new StringWriter();\n    e.printStackTrace(new PrintWriter(sw));\n    e.printStackTrace();\n    s+=nl + \"Bytecode Viewer Version: \" + VERSION+ nl+ nl+ sw;\n  }\n finally {\n    BytecodeViewer.sm.resumeBlocking();\n  }\n  return s;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 326,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 44
      },
      "nodeContext" : "isr=new InputStreamReader(is);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.io.InputStream"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 80,
    "startColumnNumber" : 58,
    "endLineNumber" : 80,
    "endColumnNumber" : 60
  }, {
    "charLength" : 2,
    "startLineNumber" : 92,
    "startColumnNumber" : 40,
    "endLineNumber" : 92,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}