{
  "id" : 11,
  "expression" : "ex.getCause()",
  "projectName" : "LMAX-Exchange@disruptor",
  "commitID" : "6d8500d39ac15cc2fdbc3dbf2e3a97fbe425b8fa",
  "filePath" : "/src/test/java/com/lmax/disruptor/FatalExceptionHandlerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ex.getCause()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 63,
      "startColumnNumber" : 48,
      "endLineNumber" : 63,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 63,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Assert.assertEquals(causeException,ex.getCause())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 63,
        "endColumnNumber" : 63
      },
      "nodeContext" : "Assert.assertEquals(causeException,ex.getCause());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Assert.assertEquals(causeException,ex.getCause());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (RuntimeException ex) {\n  Assert.assertEquals(causeException,ex.getCause());\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 221,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  exceptionHandler.handleEventException(causeException,0L,event);\n}\n catch (RuntimeException ex) {\n  Assert.assertEquals(causeException,ex.getCause());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 680,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Exception causeException=new Exception();\n  final TestEvent event=new TestEvent();\n  final Logger logger=context.mock(Logger.class);\n  context.checking(new Expectations(){\n{\n      oneOf(logger).log(Level.SEVERE,\"Exception processing: 0 \" + event,causeException);\n    }\n  }\n);\n  ExceptionHandler exceptionHandler=new FatalExceptionHandler(logger);\n  try {\n    exceptionHandler.handleEventException(causeException,0L,event);\n  }\n catch (  RuntimeException ex) {\n    Assert.assertEquals(causeException,ex.getCause());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 735,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldHandleFatalException(){\n  final Exception causeException=new Exception();\n  final TestEvent event=new TestEvent();\n  final Logger logger=context.mock(Logger.class);\n  context.checking(new Expectations(){\n{\n      oneOf(logger).log(Level.SEVERE,\"Exception processing: 0 \" + event,causeException);\n    }\n  }\n);\n  ExceptionHandler exceptionHandler=new FatalExceptionHandler(logger);\n  try {\n    exceptionHandler.handleEventException(causeException,0L,event);\n  }\n catch (  RuntimeException ex) {\n    Assert.assertEquals(causeException,ex.getCause());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 63,
        "endColumnNumber" : 63
      },
      "nodeContext" : "Assert.assertEquals(causeException,ex.getCause());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.Throwable"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 63,
    "startColumnNumber" : 48,
    "endLineNumber" : 63,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}