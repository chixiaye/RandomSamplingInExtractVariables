{
  "id" : 127,
  "expression" : "Flowable.range(1,Flowable.bufferSize() * 2).delaySubscription(100,TimeUnit.MILLISECONDS).delay(100,TimeUnit.MILLISECONDS)",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableDelayTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Flowable.range(1,Flowable.bufferSize() * 2).delaySubscription(100,TimeUnit.MILLISECONDS).delay(100,TimeUnit.MILLISECONDS)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 160,
      "startLineNumber" : 670,
      "startColumnNumber" : 8,
      "endLineNumber" : 672,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 21,
    "astHeight" : 6,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 214,
        "startLineNumber" : 670,
        "startColumnNumber" : 8,
        "endLineNumber" : 673,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Flowable.range(1,Flowable.bufferSize() * 2).delaySubscription(100,TimeUnit.MILLISECONDS).delay(100,TimeUnit.MILLISECONDS).observeOn(Schedulers.computation())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 723,
        "startLineNumber" : 670,
        "startColumnNumber" : 8,
        "endLineNumber" : 689,
        "endColumnNumber" : 18
      },
      "nodeContext" : "Flowable.range(1,Flowable.bufferSize() * 2).delaySubscription(100,TimeUnit.MILLISECONDS).delay(100,TimeUnit.MILLISECONDS).observeOn(Schedulers.computation()).map(new Function<Integer,Integer>(){\n  int c=0;\n  @Override public Integer apply(  Integer t){\n    if (c++ <= 0) {\n      try {\n        Thread.sleep(500);\n      }\n catch (      InterruptedException e) {\n      }\n    }\n    return t;\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 75,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 737,
        "startLineNumber" : 670,
        "startColumnNumber" : 8,
        "endLineNumber" : 689,
        "endColumnNumber" : 32
      },
      "nodeContext" : "Flowable.range(1,Flowable.bufferSize() * 2).delaySubscription(100,TimeUnit.MILLISECONDS).delay(100,TimeUnit.MILLISECONDS).observeOn(Schedulers.computation()).map(new Function<Integer,Integer>(){\n  int c=0;\n  @Override public Integer apply(  Integer t){\n    if (c++ <= 0) {\n      try {\n        Thread.sleep(500);\n      }\n catch (      InterruptedException e) {\n      }\n    }\n    return t;\n  }\n}\n).subscribe(ts)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 78,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 738,
        "startLineNumber" : 670,
        "startColumnNumber" : 8,
        "endLineNumber" : 689,
        "endColumnNumber" : 33
      },
      "nodeContext" : "Flowable.range(1,Flowable.bufferSize() * 2).delaySubscription(100,TimeUnit.MILLISECONDS).delay(100,TimeUnit.MILLISECONDS).observeOn(Schedulers.computation()).map(new Function<Integer,Integer>(){\n  int c=0;\n  @Override public Integer apply(  Integer t){\n    if (c++ <= 0) {\n      try {\n        Thread.sleep(500);\n      }\n catch (      InterruptedException e) {\n      }\n    }\n    return t;\n  }\n}\n).subscribe(ts);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 79,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 958,
        "startLineNumber" : 668,
        "startColumnNumber" : 61,
        "endLineNumber" : 694,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestSubscriber<Integer> ts=new TestSubscriber<Integer>();\n  Flowable.range(1,Flowable.bufferSize() * 2).delaySubscription(100,TimeUnit.MILLISECONDS).delay(100,TimeUnit.MILLISECONDS).observeOn(Schedulers.computation()).map(new Function<Integer,Integer>(){\n    int c=0;\n    @Override public Integer apply(    Integer t){\n      if (c++ <= 0) {\n        try {\n          Thread.sleep(500);\n        }\n catch (        InterruptedException e) {\n        }\n      }\n      return t;\n    }\n  }\n).subscribe(ts);\n  ts.awaitTerminalEvent();\n  ts.assertNoErrors();\n  assertEquals(Flowable.bufferSize() * 2,ts.valueCount());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1026,
        "startLineNumber" : 667,
        "startColumnNumber" : 4,
        "endLineNumber" : 694,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testBackpressureWithSubscriptionTimedDelay(){\n  TestSubscriber<Integer> ts=new TestSubscriber<Integer>();\n  Flowable.range(1,Flowable.bufferSize() * 2).delaySubscription(100,TimeUnit.MILLISECONDS).delay(100,TimeUnit.MILLISECONDS).observeOn(Schedulers.computation()).map(new Function<Integer,Integer>(){\n    int c=0;\n    @Override public Integer apply(    Integer t){\n      if (c++ <= 0) {\n        try {\n          Thread.sleep(500);\n        }\n catch (        InterruptedException e) {\n        }\n      }\n      return t;\n    }\n  }\n).subscribe(ts);\n  ts.awaitTerminalEvent();\n  ts.assertNoErrors();\n  assertEquals(Flowable.bufferSize() * 2,ts.valueCount());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 119,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 214,
        "startLineNumber" : 670,
        "startColumnNumber" : 8,
        "endLineNumber" : 673,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Flowable.range(1,Flowable.bufferSize() * 2).delaySubscription(100,TimeUnit.MILLISECONDS).delay(100,TimeUnit.MILLISECONDS).observeOn(Schedulers.computation())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 26,
      "astHeight" : 7
    },
    "tokenLength" : 15,
    "type" : "io.reactivex.Flowable<java.lang.Integer>"
  } ],
  "positionList" : [ {
    "charLength" : 160,
    "startLineNumber" : 670,
    "startColumnNumber" : 8,
    "endLineNumber" : 672,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ ]
}