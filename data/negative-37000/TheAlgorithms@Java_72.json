{
  "id" : 72,
  "expression" : "len2",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/Dynamic Programming/Edit_Distance.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "len2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 30,
      "startColumnNumber" : 36,
      "endLineNumber" : 30,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayCreation,dimensions]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 30,
        "startColumnNumber" : 36,
        "endLineNumber" : 30,
        "endColumnNumber" : 44
      },
      "nodeContext" : "len2 + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 30,
        "startColumnNumber" : 18,
        "endLineNumber" : 30,
        "endColumnNumber" : 45
      },
      "nodeContext" : "new int[len1 + 1][len2 + 1]",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 30,
        "startColumnNumber" : 13,
        "endLineNumber" : 30,
        "endColumnNumber" : 45
      },
      "nodeContext" : "dp=new int[len1 + 1][len2 + 1]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 30,
        "startColumnNumber" : 5,
        "endLineNumber" : 30,
        "endColumnNumber" : 46
      },
      "nodeContext" : "int[][] dp=new int[len1 + 1][len2 + 1];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1437,
        "startLineNumber" : 26,
        "startColumnNumber" : 6,
        "endLineNumber" : 72,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  int len1=word1.length();\n  int len2=word2.length();\n  int[][] dp=new int[len1 + 1][len2 + 1];\n  for (int i=0; i <= len1; i++) {\n    dp[i][0]=i;\n  }\n  for (int j=0; j <= len2; j++) {\n    dp[0][j]=j;\n  }\n  for (int i=0; i < len1; i++) {\n    char c1=word1.charAt(i);\n    for (int j=0; j < len2; j++) {\n      char c2=word2.charAt(j);\n      if (c1 == c2) {\n        dp[i + 1][j + 1]=dp[i][j];\n      }\n else {\n        int replace=dp[i][j] + 1;\n        int insert=dp[i][j + 1] + 1;\n        int delete=dp[i + 1][j] + 1;\n        int min=replace > insert ? insert : replace;\n        min=delete > min ? min : delete;\n        dp[i + 1][j + 1]=min;\n      }\n    }\n  }\n  return dp[len1][len2];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 209,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1502,
        "startLineNumber" : 25,
        "startColumnNumber" : 6,
        "endLineNumber" : 72,
        "endColumnNumber" : 7
      },
      "nodeContext" : "public static int minDistance(String word1,String word2){\n  int len1=word1.length();\n  int len2=word2.length();\n  int[][] dp=new int[len1 + 1][len2 + 1];\n  for (int i=0; i <= len1; i++) {\n    dp[i][0]=i;\n  }\n  for (int j=0; j <= len2; j++) {\n    dp[0][j]=j;\n  }\n  for (int i=0; i < len1; i++) {\n    char c1=word1.charAt(i);\n    for (int j=0; j < len2; j++) {\n      char c2=word2.charAt(j);\n      if (c1 == c2) {\n        dp[i + 1][j + 1]=dp[i][j];\n      }\n else {\n        int replace=dp[i][j] + 1;\n        int insert=dp[i][j + 1] + 1;\n        int delete=dp[i + 1][j] + 1;\n        int min=replace > insert ? insert : replace;\n        min=delete > min ? min : delete;\n        dp[i + 1][j + 1]=min;\n      }\n    }\n  }\n  return dp[len1][len2];\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 222,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 30,
        "startColumnNumber" : 5,
        "endLineNumber" : 30,
        "endColumnNumber" : 46
      },
      "nodeContext" : "int[][] dp=new int[len1 + 1][len2 + 1];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "len2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 39,
      "startColumnNumber" : 26,
      "endLineNumber" : 39,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 39,
        "startColumnNumber" : 21,
        "endLineNumber" : 39,
        "endColumnNumber" : 30
      },
      "nodeContext" : "j <= len2",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 39,
        "startColumnNumber" : 5,
        "endLineNumber" : 42,
        "endColumnNumber" : 6
      },
      "nodeContext" : "for (int j=0; j <= len2; j++) {\n  dp[0][j]=j;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1437,
        "startLineNumber" : 26,
        "startColumnNumber" : 6,
        "endLineNumber" : 72,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  int len1=word1.length();\n  int len2=word2.length();\n  int[][] dp=new int[len1 + 1][len2 + 1];\n  for (int i=0; i <= len1; i++) {\n    dp[i][0]=i;\n  }\n  for (int j=0; j <= len2; j++) {\n    dp[0][j]=j;\n  }\n  for (int i=0; i < len1; i++) {\n    char c1=word1.charAt(i);\n    for (int j=0; j < len2; j++) {\n      char c2=word2.charAt(j);\n      if (c1 == c2) {\n        dp[i + 1][j + 1]=dp[i][j];\n      }\n else {\n        int replace=dp[i][j] + 1;\n        int insert=dp[i][j + 1] + 1;\n        int delete=dp[i + 1][j] + 1;\n        int min=replace > insert ? insert : replace;\n        min=delete > min ? min : delete;\n        dp[i + 1][j + 1]=min;\n      }\n    }\n  }\n  return dp[len1][len2];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 209,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1502,
        "startLineNumber" : 25,
        "startColumnNumber" : 6,
        "endLineNumber" : 72,
        "endColumnNumber" : 7
      },
      "nodeContext" : "public static int minDistance(String word1,String word2){\n  int len1=word1.length();\n  int len2=word2.length();\n  int[][] dp=new int[len1 + 1][len2 + 1];\n  for (int i=0; i <= len1; i++) {\n    dp[i][0]=i;\n  }\n  for (int j=0; j <= len2; j++) {\n    dp[0][j]=j;\n  }\n  for (int i=0; i < len1; i++) {\n    char c1=word1.charAt(i);\n    for (int j=0; j < len2; j++) {\n      char c2=word2.charAt(j);\n      if (c1 == c2) {\n        dp[i + 1][j + 1]=dp[i][j];\n      }\n else {\n        int replace=dp[i][j] + 1;\n        int insert=dp[i][j + 1] + 1;\n        int delete=dp[i + 1][j] + 1;\n        int min=replace > insert ? insert : replace;\n        min=delete > min ? min : delete;\n        dp[i + 1][j + 1]=min;\n      }\n    }\n  }\n  return dp[len1][len2];\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 222,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 39,
        "startColumnNumber" : 21,
        "endLineNumber" : 39,
        "endColumnNumber" : 30
      },
      "nodeContext" : "j <= len2",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "len2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 47,
      "startColumnNumber" : 26,
      "endLineNumber" : 47,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 47,
        "startColumnNumber" : 22,
        "endLineNumber" : 47,
        "endColumnNumber" : 30
      },
      "nodeContext" : "j < len2",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 642,
        "startLineNumber" : 47,
        "startColumnNumber" : 6,
        "endLineNumber" : 68,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int j=0; j < len2; j++) {\n  char c2=word2.charAt(j);\n  if (c1 == c2) {\n    dp[i + 1][j + 1]=dp[i][j];\n  }\n else {\n    int replace=dp[i][j] + 1;\n    int insert=dp[i][j + 1] + 1;\n    int delete=dp[i + 1][j] + 1;\n    int min=replace > insert ? insert : replace;\n    min=delete > min ? min : delete;\n    dp[i + 1][j + 1]=min;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 110,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 690,
        "startLineNumber" : 45,
        "startColumnNumber" : 5,
        "endLineNumber" : 69,
        "endColumnNumber" : 6
      },
      "nodeContext" : "{\n  char c1=word1.charAt(i);\n  for (int j=0; j < len2; j++) {\n    char c2=word2.charAt(j);\n    if (c1 == c2) {\n      dp[i + 1][j + 1]=dp[i][j];\n    }\n else {\n      int replace=dp[i][j] + 1;\n      int insert=dp[i][j + 1] + 1;\n      int delete=dp[i + 1][j] + 1;\n      int min=replace > insert ? insert : replace;\n      min=delete > min ? min : delete;\n      dp[i + 1][j + 1]=min;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 727,
        "startLineNumber" : 44,
        "startColumnNumber" : 5,
        "endLineNumber" : 69,
        "endColumnNumber" : 6
      },
      "nodeContext" : "for (int i=0; i < len1; i++) {\n  char c1=word1.charAt(i);\n  for (int j=0; j < len2; j++) {\n    char c2=word2.charAt(j);\n    if (c1 == c2) {\n      dp[i + 1][j + 1]=dp[i][j];\n    }\n else {\n      int replace=dp[i][j] + 1;\n      int insert=dp[i][j + 1] + 1;\n      int delete=dp[i + 1][j] + 1;\n      int min=replace > insert ? insert : replace;\n      min=delete > min ? min : delete;\n      dp[i + 1][j + 1]=min;\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 130,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1437,
        "startLineNumber" : 26,
        "startColumnNumber" : 6,
        "endLineNumber" : 72,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  int len1=word1.length();\n  int len2=word2.length();\n  int[][] dp=new int[len1 + 1][len2 + 1];\n  for (int i=0; i <= len1; i++) {\n    dp[i][0]=i;\n  }\n  for (int j=0; j <= len2; j++) {\n    dp[0][j]=j;\n  }\n  for (int i=0; i < len1; i++) {\n    char c1=word1.charAt(i);\n    for (int j=0; j < len2; j++) {\n      char c2=word2.charAt(j);\n      if (c1 == c2) {\n        dp[i + 1][j + 1]=dp[i][j];\n      }\n else {\n        int replace=dp[i][j] + 1;\n        int insert=dp[i][j + 1] + 1;\n        int delete=dp[i + 1][j] + 1;\n        int min=replace > insert ? insert : replace;\n        min=delete > min ? min : delete;\n        dp[i + 1][j + 1]=min;\n      }\n    }\n  }\n  return dp[len1][len2];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 209,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1502,
        "startLineNumber" : 25,
        "startColumnNumber" : 6,
        "endLineNumber" : 72,
        "endColumnNumber" : 7
      },
      "nodeContext" : "public static int minDistance(String word1,String word2){\n  int len1=word1.length();\n  int len2=word2.length();\n  int[][] dp=new int[len1 + 1][len2 + 1];\n  for (int i=0; i <= len1; i++) {\n    dp[i][0]=i;\n  }\n  for (int j=0; j <= len2; j++) {\n    dp[0][j]=j;\n  }\n  for (int i=0; i < len1; i++) {\n    char c1=word1.charAt(i);\n    for (int j=0; j < len2; j++) {\n      char c2=word2.charAt(j);\n      if (c1 == c2) {\n        dp[i + 1][j + 1]=dp[i][j];\n      }\n else {\n        int replace=dp[i][j] + 1;\n        int insert=dp[i][j + 1] + 1;\n        int delete=dp[i + 1][j] + 1;\n        int min=replace > insert ? insert : replace;\n        min=delete > min ? min : delete;\n        dp[i + 1][j + 1]=min;\n      }\n    }\n  }\n  return dp[len1][len2];\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 222,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 47,
        "startColumnNumber" : 22,
        "endLineNumber" : 47,
        "endColumnNumber" : 30
      },
      "nodeContext" : "j < len2",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "len2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 71,
      "startColumnNumber" : 21,
      "endLineNumber" : 71,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 26
      },
      "nodeContext" : "dp[len1][len2]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 71,
        "startColumnNumber" : 5,
        "endLineNumber" : 71,
        "endColumnNumber" : 27
      },
      "nodeContext" : "return dp[len1][len2];\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1437,
        "startLineNumber" : 26,
        "startColumnNumber" : 6,
        "endLineNumber" : 72,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  int len1=word1.length();\n  int len2=word2.length();\n  int[][] dp=new int[len1 + 1][len2 + 1];\n  for (int i=0; i <= len1; i++) {\n    dp[i][0]=i;\n  }\n  for (int j=0; j <= len2; j++) {\n    dp[0][j]=j;\n  }\n  for (int i=0; i < len1; i++) {\n    char c1=word1.charAt(i);\n    for (int j=0; j < len2; j++) {\n      char c2=word2.charAt(j);\n      if (c1 == c2) {\n        dp[i + 1][j + 1]=dp[i][j];\n      }\n else {\n        int replace=dp[i][j] + 1;\n        int insert=dp[i][j + 1] + 1;\n        int delete=dp[i + 1][j] + 1;\n        int min=replace > insert ? insert : replace;\n        min=delete > min ? min : delete;\n        dp[i + 1][j + 1]=min;\n      }\n    }\n  }\n  return dp[len1][len2];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 209,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1502,
        "startLineNumber" : 25,
        "startColumnNumber" : 6,
        "endLineNumber" : 72,
        "endColumnNumber" : 7
      },
      "nodeContext" : "public static int minDistance(String word1,String word2){\n  int len1=word1.length();\n  int len2=word2.length();\n  int[][] dp=new int[len1 + 1][len2 + 1];\n  for (int i=0; i <= len1; i++) {\n    dp[i][0]=i;\n  }\n  for (int j=0; j <= len2; j++) {\n    dp[0][j]=j;\n  }\n  for (int i=0; i < len1; i++) {\n    char c1=word1.charAt(i);\n    for (int j=0; j < len2; j++) {\n      char c2=word2.charAt(j);\n      if (c1 == c2) {\n        dp[i + 1][j + 1]=dp[i][j];\n      }\n else {\n        int replace=dp[i][j] + 1;\n        int insert=dp[i][j + 1] + 1;\n        int delete=dp[i + 1][j] + 1;\n        int min=replace > insert ? insert : replace;\n        min=delete > min ? min : delete;\n        dp[i + 1][j + 1]=min;\n      }\n    }\n  }\n  return dp[len1][len2];\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 222,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 71,
        "startColumnNumber" : 5,
        "endLineNumber" : 71,
        "endColumnNumber" : 27
      },
      "nodeContext" : "return dp[len1][len2];\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 30,
    "startColumnNumber" : 36,
    "endLineNumber" : 30,
    "endColumnNumber" : 40
  }, {
    "charLength" : 4,
    "startLineNumber" : 39,
    "startColumnNumber" : 26,
    "endLineNumber" : 39,
    "endColumnNumber" : 30
  }, {
    "charLength" : 4,
    "startLineNumber" : 47,
    "startColumnNumber" : 26,
    "endLineNumber" : 47,
    "endColumnNumber" : 30
  }, {
    "charLength" : 4,
    "startLineNumber" : 71,
    "startColumnNumber" : 21,
    "endLineNumber" : 71,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}