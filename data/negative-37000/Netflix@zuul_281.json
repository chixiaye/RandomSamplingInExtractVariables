{
  "id" : 281,
  "expression" : "filter != null",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-core/src/test/java/com/netflix/zuul/FilterLoaderTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "filter != null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 111,
      "startColumnNumber" : 19,
      "endLineNumber" : 111,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertTrue(filter != null)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertTrue(filter != null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 579,
        "startLineNumber" : 98,
        "startColumnNumber" : 56,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertTrue(loader.putFilter(file));\n  verify(registry).put(any(String.class),any(ZuulFilter.class));\n  final List<ZuulFilter> filters=new ArrayList<ZuulFilter>();\n  filters.add(filter);\n  when(registry.getAllFilters()).thenReturn(filters);\n  List<ZuulFilter> list=loader.getFiltersByType(FilterType.INBOUND);\n  assertTrue(list != null);\n  assertTrue(list.size() == 1);\n  ZuulFilter filter=list.get(0);\n  assertTrue(filter != null);\n  assertTrue(filter.filterType().equals(FilterType.INBOUND));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 641,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testGetFiltersByType() throws Exception {\n  assertTrue(loader.putFilter(file));\n  verify(registry).put(any(String.class),any(ZuulFilter.class));\n  final List<ZuulFilter> filters=new ArrayList<ZuulFilter>();\n  filters.add(filter);\n  when(registry.getAllFilters()).thenReturn(filters);\n  List<ZuulFilter> list=loader.getFiltersByType(FilterType.INBOUND);\n  assertTrue(list != null);\n  assertTrue(list.size() == 1);\n  ZuulFilter filter=list.get(0);\n  assertTrue(filter != null);\n  assertTrue(filter.filterType().equals(FilterType.INBOUND));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 115,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertTrue(filter != null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 111,
    "startColumnNumber" : 19,
    "endLineNumber" : 111,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}