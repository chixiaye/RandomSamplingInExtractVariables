{
  "id" : 257,
  "expression" : "c != KeyEvent.CHAR_UNDEFINED",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/app/src/processing/app/syntax/DefaultInputHandler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "c != KeyEvent.CHAR_UNDEFINED",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 246,
      "startColumnNumber" : 20,
      "endLineNumber" : 246,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2108,
        "startLineNumber" : 246,
        "startColumnNumber" : 16,
        "endLineNumber" : 291,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (c != KeyEvent.CHAR_UNDEFINED) {\n  if (c >= 0x20 && c != 0x7f) {\n    KeyStroke keyStroke=KeyStroke.getKeyStroke(Character.toUpperCase(c));\n    Object o=currentBindings.get(keyStroke);\n    if (o instanceof Hashtable) {\n      currentBindings=(Hashtable)o;\n      return;\n    }\n else     if (o instanceof ActionListener) {\n      currentBindings=bindings;\n      executeAction((ActionListener)o,evt.getSource(),String.valueOf(c));\n      return;\n    }\n    currentBindings=bindings;\n    if (grabAction != null) {\n      handleGrabAction(evt);\n      return;\n    }\n    if (repeat && Character.isDigit(c)) {\n      repeatCount*=10;\n      repeatCount+=(c - '0');\n      return;\n    }\n    executeAction(INSERT_CHAR,evt.getSource(),String.valueOf(evt.getKeyChar()));\n    repeatCount=0;\n    repeat=false;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 131,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2496,
        "startLineNumber" : 237,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int modifiers=evt.getModifiers();\n  char c=evt.getKeyChar();\n  if ((modifiers & KeyEvent.META_MASK) != 0)   return;\n  if (c != KeyEvent.CHAR_UNDEFINED) {\n    if (c >= 0x20 && c != 0x7f) {\n      KeyStroke keyStroke=KeyStroke.getKeyStroke(Character.toUpperCase(c));\n      Object o=currentBindings.get(keyStroke);\n      if (o instanceof Hashtable) {\n        currentBindings=(Hashtable)o;\n        return;\n      }\n else       if (o instanceof ActionListener) {\n        currentBindings=bindings;\n        executeAction((ActionListener)o,evt.getSource(),String.valueOf(c));\n        return;\n      }\n      currentBindings=bindings;\n      if (grabAction != null) {\n        handleGrabAction(evt);\n        return;\n      }\n      if (repeat && Character.isDigit(c)) {\n        repeatCount*=10;\n        repeatCount+=(c - '0');\n        return;\n      }\n      executeAction(INSERT_CHAR,evt.getSource(),String.valueOf(evt.getKeyChar()));\n      repeatCount=0;\n      repeat=false;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2641,
        "startLineNumber" : 233,
        "startColumnNumber" : 8,
        "endLineNumber" : 292,
        "endColumnNumber" : 9
      },
      "nodeContext" : "/** \n * Handle a key typed event. This inserts the key into the text area.\n */\npublic void keyTyped(KeyEvent evt){\n  int modifiers=evt.getModifiers();\n  char c=evt.getKeyChar();\n  if ((modifiers & KeyEvent.META_MASK) != 0)   return;\n  if (c != KeyEvent.CHAR_UNDEFINED) {\n    if (c >= 0x20 && c != 0x7f) {\n      KeyStroke keyStroke=KeyStroke.getKeyStroke(Character.toUpperCase(c));\n      Object o=currentBindings.get(keyStroke);\n      if (o instanceof Hashtable) {\n        currentBindings=(Hashtable)o;\n        return;\n      }\n else       if (o instanceof ActionListener) {\n        currentBindings=bindings;\n        executeAction((ActionListener)o,evt.getSource(),String.valueOf(c));\n        return;\n      }\n      currentBindings=bindings;\n      if (grabAction != null) {\n        handleGrabAction(evt);\n        return;\n      }\n      if (repeat && Character.isDigit(c)) {\n        repeatCount*=10;\n        repeatCount+=(c - '0');\n        return;\n      }\n      executeAction(INSERT_CHAR,evt.getSource(),String.valueOf(evt.getKeyChar()));\n      repeatCount=0;\n      repeat=false;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 165,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2108,
        "startLineNumber" : 246,
        "startColumnNumber" : 16,
        "endLineNumber" : 291,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (c != KeyEvent.CHAR_UNDEFINED) {\n  if (c >= 0x20 && c != 0x7f) {\n    KeyStroke keyStroke=KeyStroke.getKeyStroke(Character.toUpperCase(c));\n    Object o=currentBindings.get(keyStroke);\n    if (o instanceof Hashtable) {\n      currentBindings=(Hashtable)o;\n      return;\n    }\n else     if (o instanceof ActionListener) {\n      currentBindings=bindings;\n      executeAction((ActionListener)o,evt.getSource(),String.valueOf(c));\n      return;\n    }\n    currentBindings=bindings;\n    if (grabAction != null) {\n      handleGrabAction(evt);\n      return;\n    }\n    if (repeat && Character.isDigit(c)) {\n      repeatCount*=10;\n      repeatCount+=(c - '0');\n      return;\n    }\n    executeAction(INSERT_CHAR,evt.getSource(),String.valueOf(evt.getKeyChar()));\n    repeatCount=0;\n    repeat=false;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 131,
      "astHeight" : 12
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 28,
    "startLineNumber" : 246,
    "startColumnNumber" : 20,
    "endLineNumber" : 246,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}