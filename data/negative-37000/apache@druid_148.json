{
  "id" : 148,
  "expression" : "testNode1.getDruidNode()",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/extensions-core/kubernetes-extensions/src/test/java/org/apache/druid/k8s/discovery/K8sDruidLeaderSelectorTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "testNode1.getDruidNode()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 49,
      "startColumnNumber" : 8,
      "endLineNumber" : 49,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 1020,
        "startLineNumber" : 48,
        "startColumnNumber" : 44,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "new K8sDruidLeaderSelector(testNode1.getDruidNode(),lockResourceName,discoveryConfig.getCoordinatorLeaderElectionConfigMapNamespace(),discoveryConfig,new K8sLeaderElectorFactory(){\n  @Override public K8sLeaderElector create(  String candidateId,  String namespace,  String lockResourceName){\n    return new K8sLeaderElector(){\n      @Override public String getCurrentLeader(){\n        return testNode1.getDruidNode().getHostAndPortToUse();\n      }\n      @Override public void run(      Runnable startLeadingHook,      Runnable stopLeadingHook){\n        startLeadingHook.run();\n        try {\n          Thread.sleep(Long.MAX_VALUE);\n        }\n catch (        InterruptedException ex) {\n          stopLeadingHook.run();\n        }\n      }\n    }\n;\n  }\n}\n)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 92,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 1037,
        "startLineNumber" : 48,
        "startColumnNumber" : 27,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "leaderSelector=new K8sDruidLeaderSelector(testNode1.getDruidNode(),lockResourceName,discoveryConfig.getCoordinatorLeaderElectionConfigMapNamespace(),discoveryConfig,new K8sLeaderElectorFactory(){\n  @Override public K8sLeaderElector create(  String candidateId,  String namespace,  String lockResourceName){\n    return new K8sLeaderElector(){\n      @Override public String getCurrentLeader(){\n        return testNode1.getDruidNode().getHostAndPortToUse();\n      }\n      @Override public void run(      Runnable startLeadingHook,      Runnable stopLeadingHook){\n        startLeadingHook.run();\n        try {\n          Thread.sleep(Long.MAX_VALUE);\n        }\n catch (        InterruptedException ex) {\n          stopLeadingHook.run();\n        }\n      }\n    }\n;\n  }\n}\n)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 94,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1061,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 6
      },
      "nodeContext" : "K8sDruidLeaderSelector leaderSelector=new K8sDruidLeaderSelector(testNode1.getDruidNode(),lockResourceName,discoveryConfig.getCoordinatorLeaderElectionConfigMapNamespace(),discoveryConfig,new K8sLeaderElectorFactory(){\n  @Override public K8sLeaderElector create(  String candidateId,  String namespace,  String lockResourceName){\n    return new K8sLeaderElector(){\n      @Override public String getCurrentLeader(){\n        return testNode1.getDruidNode().getHostAndPortToUse();\n      }\n      @Override public void run(      Runnable startLeadingHook,      Runnable stopLeadingHook){\n        startLeadingHook.run();\n        try {\n          Thread.sleep(Long.MAX_VALUE);\n        }\n catch (        InterruptedException ex) {\n          stopLeadingHook.run();\n        }\n      }\n    }\n;\n  }\n}\n);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 97,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1778,
        "startLineNumber" : 47,
        "startColumnNumber" : 2,
        "endLineNumber" : 107,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  K8sDruidLeaderSelector leaderSelector=new K8sDruidLeaderSelector(testNode1.getDruidNode(),lockResourceName,discoveryConfig.getCoordinatorLeaderElectionConfigMapNamespace(),discoveryConfig,new K8sLeaderElectorFactory(){\n    @Override public K8sLeaderElector create(    String candidateId,    String namespace,    String lockResourceName){\n      return new K8sLeaderElector(){\n        @Override public String getCurrentLeader(){\n          return testNode1.getDruidNode().getHostAndPortToUse();\n        }\n        @Override public void run(        Runnable startLeadingHook,        Runnable stopLeadingHook){\n          startLeadingHook.run();\n          try {\n            Thread.sleep(Long.MAX_VALUE);\n          }\n catch (          InterruptedException ex) {\n            stopLeadingHook.run();\n          }\n        }\n      }\n;\n    }\n  }\n);\n  Assert.assertEquals(testNode1.getDruidNode().getHostAndPortToUse(),leaderSelector.getCurrentLeader());\n  CountDownLatch becomeLeaderLatch=new CountDownLatch(1);\n  CountDownLatch stopBeingLeaderLatch=new CountDownLatch(1);\n  leaderSelector.registerListener(new DruidLeaderSelector.Listener(){\n    @Override public void becomeLeader(){\n      becomeLeaderLatch.countDown();\n    }\n    @Override public void stopBeingLeader(){\n      stopBeingLeaderLatch.countDown();\n    }\n  }\n);\n  becomeLeaderLatch.await();\n  leaderSelector.unregisterListener();\n  stopBeingLeaderLatch.await();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 172,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1865,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 107,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test(timeout=5_000) public void testLeaderElection_HappyPath() throws Exception {\n  K8sDruidLeaderSelector leaderSelector=new K8sDruidLeaderSelector(testNode1.getDruidNode(),lockResourceName,discoveryConfig.getCoordinatorLeaderElectionConfigMapNamespace(),discoveryConfig,new K8sLeaderElectorFactory(){\n    @Override public K8sLeaderElector create(    String candidateId,    String namespace,    String lockResourceName){\n      return new K8sLeaderElector(){\n        @Override public String getCurrentLeader(){\n          return testNode1.getDruidNode().getHostAndPortToUse();\n        }\n        @Override public void run(        Runnable startLeadingHook,        Runnable stopLeadingHook){\n          startLeadingHook.run();\n          try {\n            Thread.sleep(Long.MAX_VALUE);\n          }\n catch (          InterruptedException ex) {\n            stopLeadingHook.run();\n          }\n        }\n      }\n;\n    }\n  }\n);\n  Assert.assertEquals(testNode1.getDruidNode().getHostAndPortToUse(),leaderSelector.getCurrentLeader());\n  CountDownLatch becomeLeaderLatch=new CountDownLatch(1);\n  CountDownLatch stopBeingLeaderLatch=new CountDownLatch(1);\n  leaderSelector.registerListener(new DruidLeaderSelector.Listener(){\n    @Override public void becomeLeader(){\n      becomeLeaderLatch.countDown();\n    }\n    @Override public void stopBeingLeader(){\n      stopBeingLeaderLatch.countDown();\n    }\n  }\n);\n  becomeLeaderLatch.await();\n  leaderSelector.unregisterListener();\n  stopBeingLeaderLatch.await();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 1020,
        "startLineNumber" : 48,
        "startColumnNumber" : 44,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "new K8sDruidLeaderSelector(testNode1.getDruidNode(),lockResourceName,discoveryConfig.getCoordinatorLeaderElectionConfigMapNamespace(),discoveryConfig,new K8sLeaderElectorFactory(){\n  @Override public K8sLeaderElector create(  String candidateId,  String namespace,  String lockResourceName){\n    return new K8sLeaderElector(){\n      @Override public String getCurrentLeader(){\n        return testNode1.getDruidNode().getHostAndPortToUse();\n      }\n      @Override public void run(      Runnable startLeadingHook,      Runnable stopLeadingHook){\n        startLeadingHook.run();\n        try {\n          Thread.sleep(Long.MAX_VALUE);\n        }\n catch (        InterruptedException ex) {\n          stopLeadingHook.run();\n        }\n      }\n    }\n;\n  }\n}\n)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 92,
      "astHeight" : 16
    },
    "tokenLength" : 2,
    "type" : "org.apache.druid.server.DruidNode"
  }, {
    "nodeContext" : "testNode1.getDruidNode()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 82,
      "startColumnNumber" : 24,
      "endLineNumber" : 82,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 82,
        "startColumnNumber" : 24,
        "endLineNumber" : 82,
        "endColumnNumber" : 70
      },
      "nodeContext" : "testNode1.getDruidNode().getHostAndPortToUse()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 106
      },
      "nodeContext" : "Assert.assertEquals(testNode1.getDruidNode().getHostAndPortToUse(),leaderSelector.getCurrentLeader())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 107
      },
      "nodeContext" : "Assert.assertEquals(testNode1.getDruidNode().getHostAndPortToUse(),leaderSelector.getCurrentLeader());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1778,
        "startLineNumber" : 47,
        "startColumnNumber" : 2,
        "endLineNumber" : 107,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  K8sDruidLeaderSelector leaderSelector=new K8sDruidLeaderSelector(testNode1.getDruidNode(),lockResourceName,discoveryConfig.getCoordinatorLeaderElectionConfigMapNamespace(),discoveryConfig,new K8sLeaderElectorFactory(){\n    @Override public K8sLeaderElector create(    String candidateId,    String namespace,    String lockResourceName){\n      return new K8sLeaderElector(){\n        @Override public String getCurrentLeader(){\n          return testNode1.getDruidNode().getHostAndPortToUse();\n        }\n        @Override public void run(        Runnable startLeadingHook,        Runnable stopLeadingHook){\n          startLeadingHook.run();\n          try {\n            Thread.sleep(Long.MAX_VALUE);\n          }\n catch (          InterruptedException ex) {\n            stopLeadingHook.run();\n          }\n        }\n      }\n;\n    }\n  }\n);\n  Assert.assertEquals(testNode1.getDruidNode().getHostAndPortToUse(),leaderSelector.getCurrentLeader());\n  CountDownLatch becomeLeaderLatch=new CountDownLatch(1);\n  CountDownLatch stopBeingLeaderLatch=new CountDownLatch(1);\n  leaderSelector.registerListener(new DruidLeaderSelector.Listener(){\n    @Override public void becomeLeader(){\n      becomeLeaderLatch.countDown();\n    }\n    @Override public void stopBeingLeader(){\n      stopBeingLeaderLatch.countDown();\n    }\n  }\n);\n  becomeLeaderLatch.await();\n  leaderSelector.unregisterListener();\n  stopBeingLeaderLatch.await();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 172,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1865,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 107,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test(timeout=5_000) public void testLeaderElection_HappyPath() throws Exception {\n  K8sDruidLeaderSelector leaderSelector=new K8sDruidLeaderSelector(testNode1.getDruidNode(),lockResourceName,discoveryConfig.getCoordinatorLeaderElectionConfigMapNamespace(),discoveryConfig,new K8sLeaderElectorFactory(){\n    @Override public K8sLeaderElector create(    String candidateId,    String namespace,    String lockResourceName){\n      return new K8sLeaderElector(){\n        @Override public String getCurrentLeader(){\n          return testNode1.getDruidNode().getHostAndPortToUse();\n        }\n        @Override public void run(        Runnable startLeadingHook,        Runnable stopLeadingHook){\n          startLeadingHook.run();\n          try {\n            Thread.sleep(Long.MAX_VALUE);\n          }\n catch (          InterruptedException ex) {\n            stopLeadingHook.run();\n          }\n        }\n      }\n;\n    }\n  }\n);\n  Assert.assertEquals(testNode1.getDruidNode().getHostAndPortToUse(),leaderSelector.getCurrentLeader());\n  CountDownLatch becomeLeaderLatch=new CountDownLatch(1);\n  CountDownLatch stopBeingLeaderLatch=new CountDownLatch(1);\n  leaderSelector.registerListener(new DruidLeaderSelector.Listener(){\n    @Override public void becomeLeader(){\n      becomeLeaderLatch.countDown();\n    }\n    @Override public void stopBeingLeader(){\n      stopBeingLeaderLatch.countDown();\n    }\n  }\n);\n  becomeLeaderLatch.await();\n  leaderSelector.unregisterListener();\n  stopBeingLeaderLatch.await();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 107
      },
      "nodeContext" : "Assert.assertEquals(testNode1.getDruidNode().getHostAndPortToUse(),leaderSelector.getCurrentLeader());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "org.apache.druid.server.DruidNode"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 49,
    "startColumnNumber" : 8,
    "endLineNumber" : 49,
    "endColumnNumber" : 32
  }, {
    "charLength" : 24,
    "startLineNumber" : 82,
    "startColumnNumber" : 24,
    "endLineNumber" : 82,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}