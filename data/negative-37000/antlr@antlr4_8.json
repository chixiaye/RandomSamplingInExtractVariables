{
  "id" : 8,
  "expression" : "startState instanceof DecisionState",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/tool-testsuite/test/org/antlr/v4/test/tool/ParserInterpreterForTesting.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "startState instanceof DecisionState",
    "nodeType" : "InstanceofExpression",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 91,
      "startColumnNumber" : 11,
      "endLineNumber" : 91,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 91,
        "startColumnNumber" : 7,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (startState instanceof DecisionState) {\n  return atnSimulator.adaptivePredict(input,((DecisionState)startState).decision,null);\n}\n else if (startState.getNumberOfTransitions() > 0) {\n  return 1;\n}\n else {\n  return -1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 318,
        "startLineNumber" : 88,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (startState.getNumberOfTransitions() == 1) {\n  return 1;\n}\n else if (startState instanceof DecisionState) {\n  return atnSimulator.adaptivePredict(input,((DecisionState)startState).decision,null);\n}\n else if (startState.getNumberOfTransitions() > 0) {\n  return 1;\n}\n else {\n  return -1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 327,
        "startLineNumber" : 87,
        "startColumnNumber" : 1,
        "endLineNumber" : 100,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (startState.getNumberOfTransitions() == 1) {\n    return 1;\n  }\n else   if (startState instanceof DecisionState) {\n    return atnSimulator.adaptivePredict(input,((DecisionState)startState).decision,null);\n  }\n else   if (startState.getNumberOfTransitions() > 0) {\n    return 1;\n  }\n else {\n    return -1;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 396,
        "startLineNumber" : 85,
        "startColumnNumber" : 1,
        "endLineNumber" : 100,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public int matchATN(TokenStream input,ATNState startState){\n  if (startState.getNumberOfTransitions() == 1) {\n    return 1;\n  }\n else   if (startState instanceof DecisionState) {\n    return atnSimulator.adaptivePredict(input,((DecisionState)startState).decision,null);\n  }\n else   if (startState.getNumberOfTransitions() > 0) {\n    return 1;\n  }\n else {\n    return -1;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 54,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 91,
        "startColumnNumber" : 7,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (startState instanceof DecisionState) {\n  return atnSimulator.adaptivePredict(input,((DecisionState)startState).decision,null);\n}\n else if (startState.getNumberOfTransitions() > 0) {\n  return 1;\n}\n else {\n  return -1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 9
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 91,
    "startColumnNumber" : 11,
    "endLineNumber" : 91,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}