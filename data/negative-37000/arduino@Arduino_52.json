{
  "id" : 52,
  "expression" : "\"\\n\"",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/app/test/processing/app/AutoformatTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"\\n\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 51,
      "startColumnNumber" : 12,
      "endLineNumber" : 51,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 351,
        "startLineNumber" : 46,
        "startColumnNumber" : 19,
        "endLineNumber" : 54,
        "endColumnNumber" : 15
      },
      "nodeContext" : "\"void setup() {\\n\" + \"// put your setup code here, to run once:\\n\" + \"int foo[] = { 1, 2, 3, 4, 5};\\n\"+ \"int foo[2][5] = {{1, 2, 3, 4, 5}, {6, 7, 8, 9, 10}};\\n\"+ \"}\\n\"+ \"\\n\"+ \"void loop() {\\n\"+ \"// put your main code here, to run repeatedly:\\n\"+ \"}\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 367,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 16
      },
      "nodeContext" : "editor.setText(\"void setup() {\\n\" + \"// put your setup code here, to run once:\\n\" + \"int foo[] = { 1, 2, 3, 4, 5};\\n\"+ \"int foo[2][5] = {{1, 2, 3, 4, 5}, {6, 7, 8, 9, 10}};\\n\"+ \"}\\n\"+ \"\\n\"+ \"void loop() {\\n\"+ \"// put your main code here, to run repeatedly:\\n\"+ \"}\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 368,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 17
      },
      "nodeContext" : "editor.setText(\"void setup() {\\n\" + \"// put your setup code here, to run once:\\n\" + \"int foo[] = { 1, 2, 3, 4, 5};\\n\"+ \"int foo[2][5] = {{1, 2, 3, 4, 5}, {6, 7, 8, 9, 10}};\\n\"+ \"}\\n\"+ \"\\n\"+ \"void loop() {\\n\"+ \"// put your main code here, to run repeatedly:\\n\"+ \"}\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1045,
        "startLineNumber" : 41,
        "startColumnNumber" : 66,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  JMenuItemFixture menuToolsAutoFormat=window.menuItem(\"menuToolsAutoFormat\");\n  menuToolsAutoFormat.requireEnabled();\n  JEditTextAreaFixture editor=window.jEditTextArea(\"editor\");\n  editor.setText(\"void setup() {\\n\" + \"// put your setup code here, to run once:\\n\" + \"int foo[] = { 1, 2, 3, 4, 5};\\n\"+ \"int foo[2][5] = {{1, 2, 3, 4, 5}, {6, 7, 8, 9, 10}};\\n\"+ \"}\\n\"+ \"\\n\"+ \"void loop() {\\n\"+ \"// put your main code here, to run repeatedly:\\n\"+ \"}\");\n  menuToolsAutoFormat.click();\n  String formattedText=editor.getText();\n  assertEquals(\"void setup() {\\n\" + \"  // put your setup code here, to run once:\\n\" + \"  int foo[] = { 1, 2, 3, 4, 5};\\n\"+ \"  int foo[2][5] = {{1, 2, 3, 4, 5}, {6, 7, 8, 9, 10}};\\n\"+ \"}\\n\"+ \"\\n\"+ \"void loop() {\\n\"+ \"  // put your main code here, to run repeatedly:\\n\"+ \"}\",formattedText);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1117,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void shouldProduceNicelyFormattedCode() throws Exception {\n  JMenuItemFixture menuToolsAutoFormat=window.menuItem(\"menuToolsAutoFormat\");\n  menuToolsAutoFormat.requireEnabled();\n  JEditTextAreaFixture editor=window.jEditTextArea(\"editor\");\n  editor.setText(\"void setup() {\\n\" + \"// put your setup code here, to run once:\\n\" + \"int foo[] = { 1, 2, 3, 4, 5};\\n\"+ \"int foo[2][5] = {{1, 2, 3, 4, 5}, {6, 7, 8, 9, 10}};\\n\"+ \"}\\n\"+ \"\\n\"+ \"void loop() {\\n\"+ \"// put your main code here, to run repeatedly:\\n\"+ \"}\");\n  menuToolsAutoFormat.click();\n  String formattedText=editor.getText();\n  assertEquals(\"void setup() {\\n\" + \"  // put your setup code here, to run once:\\n\" + \"  int foo[] = { 1, 2, 3, 4, 5};\\n\"+ \"  int foo[2][5] = {{1, 2, 3, 4, 5}, {6, 7, 8, 9, 10}};\\n\"+ \"}\\n\"+ \"\\n\"+ \"void loop() {\\n\"+ \"  // put your main code here, to run repeatedly:\\n\"+ \"}\",formattedText);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 71,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 351,
        "startLineNumber" : 46,
        "startColumnNumber" : 19,
        "endLineNumber" : 54,
        "endColumnNumber" : 15
      },
      "nodeContext" : "\"void setup() {\\n\" + \"// put your setup code here, to run once:\\n\" + \"int foo[] = { 1, 2, 3, 4, 5};\\n\"+ \"int foo[2][5] = {{1, 2, 3, 4, 5}, {6, 7, 8, 9, 10}};\\n\"+ \"}\\n\"+ \"\\n\"+ \"void loop() {\\n\"+ \"// put your main code here, to run repeatedly:\\n\"+ \"}\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"\\n\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 64,
      "startColumnNumber" : 12,
      "endLineNumber" : 64,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 359,
        "startLineNumber" : 59,
        "startColumnNumber" : 17,
        "endLineNumber" : 67,
        "endColumnNumber" : 15
      },
      "nodeContext" : "\"void setup() {\\n\" + \"  // put your setup code here, to run once:\\n\" + \"  int foo[] = { 1, 2, 3, 4, 5};\\n\"+ \"  int foo[2][5] = {{1, 2, 3, 4, 5}, {6, 7, 8, 9, 10}};\\n\"+ \"}\\n\"+ \"\\n\"+ \"void loop() {\\n\"+ \"  // put your main code here, to run repeatedly:\\n\"+ \"}\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 388,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 31
      },
      "nodeContext" : "assertEquals(\"void setup() {\\n\" + \"  // put your setup code here, to run once:\\n\" + \"  int foo[] = { 1, 2, 3, 4, 5};\\n\"+ \"  int foo[2][5] = {{1, 2, 3, 4, 5}, {6, 7, 8, 9, 10}};\\n\"+ \"}\\n\"+ \"\\n\"+ \"void loop() {\\n\"+ \"  // put your main code here, to run repeatedly:\\n\"+ \"}\",formattedText)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 389,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 32
      },
      "nodeContext" : "assertEquals(\"void setup() {\\n\" + \"  // put your setup code here, to run once:\\n\" + \"  int foo[] = { 1, 2, 3, 4, 5};\\n\"+ \"  int foo[2][5] = {{1, 2, 3, 4, 5}, {6, 7, 8, 9, 10}};\\n\"+ \"}\\n\"+ \"\\n\"+ \"void loop() {\\n\"+ \"  // put your main code here, to run repeatedly:\\n\"+ \"}\",formattedText);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1045,
        "startLineNumber" : 41,
        "startColumnNumber" : 66,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  JMenuItemFixture menuToolsAutoFormat=window.menuItem(\"menuToolsAutoFormat\");\n  menuToolsAutoFormat.requireEnabled();\n  JEditTextAreaFixture editor=window.jEditTextArea(\"editor\");\n  editor.setText(\"void setup() {\\n\" + \"// put your setup code here, to run once:\\n\" + \"int foo[] = { 1, 2, 3, 4, 5};\\n\"+ \"int foo[2][5] = {{1, 2, 3, 4, 5}, {6, 7, 8, 9, 10}};\\n\"+ \"}\\n\"+ \"\\n\"+ \"void loop() {\\n\"+ \"// put your main code here, to run repeatedly:\\n\"+ \"}\");\n  menuToolsAutoFormat.click();\n  String formattedText=editor.getText();\n  assertEquals(\"void setup() {\\n\" + \"  // put your setup code here, to run once:\\n\" + \"  int foo[] = { 1, 2, 3, 4, 5};\\n\"+ \"  int foo[2][5] = {{1, 2, 3, 4, 5}, {6, 7, 8, 9, 10}};\\n\"+ \"}\\n\"+ \"\\n\"+ \"void loop() {\\n\"+ \"  // put your main code here, to run repeatedly:\\n\"+ \"}\",formattedText);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1117,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void shouldProduceNicelyFormattedCode() throws Exception {\n  JMenuItemFixture menuToolsAutoFormat=window.menuItem(\"menuToolsAutoFormat\");\n  menuToolsAutoFormat.requireEnabled();\n  JEditTextAreaFixture editor=window.jEditTextArea(\"editor\");\n  editor.setText(\"void setup() {\\n\" + \"// put your setup code here, to run once:\\n\" + \"int foo[] = { 1, 2, 3, 4, 5};\\n\"+ \"int foo[2][5] = {{1, 2, 3, 4, 5}, {6, 7, 8, 9, 10}};\\n\"+ \"}\\n\"+ \"\\n\"+ \"void loop() {\\n\"+ \"// put your main code here, to run repeatedly:\\n\"+ \"}\");\n  menuToolsAutoFormat.click();\n  String formattedText=editor.getText();\n  assertEquals(\"void setup() {\\n\" + \"  // put your setup code here, to run once:\\n\" + \"  int foo[] = { 1, 2, 3, 4, 5};\\n\"+ \"  int foo[2][5] = {{1, 2, 3, 4, 5}, {6, 7, 8, 9, 10}};\\n\"+ \"}\\n\"+ \"\\n\"+ \"void loop() {\\n\"+ \"  // put your main code here, to run repeatedly:\\n\"+ \"}\",formattedText);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 71,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 359,
        "startLineNumber" : 59,
        "startColumnNumber" : 17,
        "endLineNumber" : 67,
        "endColumnNumber" : 15
      },
      "nodeContext" : "\"void setup() {\\n\" + \"  // put your setup code here, to run once:\\n\" + \"  int foo[] = { 1, 2, 3, 4, 5};\\n\"+ \"  int foo[2][5] = {{1, 2, 3, 4, 5}, {6, 7, 8, 9, 10}};\\n\"+ \"}\\n\"+ \"\\n\"+ \"void loop() {\\n\"+ \"  // put your main code here, to run repeatedly:\\n\"+ \"}\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 51,
    "startColumnNumber" : 12,
    "endLineNumber" : 51,
    "endColumnNumber" : 16
  }, {
    "charLength" : 4,
    "startLineNumber" : 64,
    "startColumnNumber" : 12,
    "endLineNumber" : 64,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}