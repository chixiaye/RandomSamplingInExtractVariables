{
  "id" : 349,
  "expression" : "7",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/flowable/FlowableBackpressureTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "7",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 158,
      "startColumnNumber" : 42,
      "endLineNumber" : 158,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 158,
        "startColumnNumber" : 18,
        "endLineNumber" : 158,
        "endColumnNumber" : 43
      },
      "nodeContext" : "Flowable.bufferSize() * 7",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 158,
        "startColumnNumber" : 12,
        "endLineNumber" : 158,
        "endColumnNumber" : 43
      },
      "nodeContext" : "max=Flowable.bufferSize() * 7",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 158,
        "startColumnNumber" : 8,
        "endLineNumber" : 158,
        "endColumnNumber" : 44
      },
      "nodeContext" : "int max=Flowable.bufferSize() * 7;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1264,
        "startLineNumber" : 141,
        "startColumnNumber" : 33,
        "endLineNumber" : 161,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int NUM=(int)(Flowable.bufferSize() * 4.1);\n  AtomicInteger c1=new AtomicInteger();\n  AtomicInteger c2=new AtomicInteger();\n  TestSubscriber<Integer> ts=new TestSubscriber<Integer>();\n  Flowable<Integer> merged=Flowable.merge(incrementingIntegers(c1).subscribeOn(Schedulers.computation()),incrementingIntegers(c2).subscribeOn(Schedulers.computation()));\n  merged.take(NUM).subscribe(ts);\n  ts.awaitTerminalEvent();\n  ts.assertNoErrors();\n  System.out.println(\"testMergeAsync => Received: \" + ts.valueCount() + \"  Emitted: \"+ c1.get()+ \" / \"+ c2.get());\n  assertEquals(NUM,ts.valueCount());\n  int max=Flowable.bufferSize() * 7;\n  assertTrue(\"\" + c1.get() + \" >= \"+ max,c1.get() < max);\n  assertTrue(\"\" + c2.get() + \" >= \"+ max,c2.get() < max);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1304,
        "startLineNumber" : 140,
        "startColumnNumber" : 4,
        "endLineNumber" : 161,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMergeAsync(){\n  int NUM=(int)(Flowable.bufferSize() * 4.1);\n  AtomicInteger c1=new AtomicInteger();\n  AtomicInteger c2=new AtomicInteger();\n  TestSubscriber<Integer> ts=new TestSubscriber<Integer>();\n  Flowable<Integer> merged=Flowable.merge(incrementingIntegers(c1).subscribeOn(Schedulers.computation()),incrementingIntegers(c2).subscribeOn(Schedulers.computation()));\n  merged.take(NUM).subscribe(ts);\n  ts.awaitTerminalEvent();\n  ts.assertNoErrors();\n  System.out.println(\"testMergeAsync => Received: \" + ts.valueCount() + \"  Emitted: \"+ c1.get()+ \" / \"+ c2.get());\n  assertEquals(NUM,ts.valueCount());\n  int max=Flowable.bufferSize() * 7;\n  assertTrue(\"\" + c1.get() + \" >= \"+ max,c1.get() < max);\n  assertTrue(\"\" + c2.get() + \" >= \"+ max,c2.get() < max);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 157,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 158,
        "startColumnNumber" : 8,
        "endLineNumber" : 158,
        "endColumnNumber" : 44
      },
      "nodeContext" : "int max=Flowable.bufferSize() * 7;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 158,
    "startColumnNumber" : 42,
    "endLineNumber" : 158,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}