{
  "id" : 283,
  "expression" : "URI.create(host)",
  "projectName" : "codecentric@spring-boot-admin",
  "commitID" : "cc544df47d4bcdf7138ca3e264797778fb39920a",
  "filePath" : "/spring-boot-admin-server/src/test/java/de/codecentric/boot/admin/server/notify/LetsChatNotifierTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "URI.create(host)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 65,
      "startColumnNumber" : 24,
      "endLineNumber" : 65,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 41
      },
      "nodeContext" : "notifier.setUrl(URI.create(host))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 42
      },
      "nodeContext" : "notifier.setUrl(URI.create(host));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 446,
        "startLineNumber" : 58,
        "startColumnNumber" : 24,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  repository=mock(ApplicationRepository.class);\n  when(repository.find(application.getId())).thenReturn(Mono.just(application));\n  restTemplate=mock(RestTemplate.class);\n  notifier=new LetsChatNotifier(repository);\n  notifier.setUsername(user);\n  notifier.setUrl(URI.create(host));\n  notifier.setRoom(room);\n  notifier.setToken(token);\n  notifier.setRestTemplate(restTemplate);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 478,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Before public void setUp(){\n  repository=mock(ApplicationRepository.class);\n  when(repository.find(application.getId())).thenReturn(Mono.just(application));\n  restTemplate=mock(RestTemplate.class);\n  notifier=new LetsChatNotifier(repository);\n  notifier.setUsername(user);\n  notifier.setUrl(URI.create(host));\n  notifier.setRoom(room);\n  notifier.setToken(token);\n  notifier.setRestTemplate(restTemplate);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 73,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 42
      },
      "nodeContext" : "notifier.setUrl(URI.create(host));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.net.URI"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 65,
    "startColumnNumber" : 24,
    "endLineNumber" : 65,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}