{
  "id" : 129,
  "expression" : "0",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-core/src/test/java/com/google/cloud/tools/jib/image/json/V22ManifestTemplateTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 81,
      "startColumnNumber" : 37,
      "endLineNumber" : 81,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 39
      },
      "nodeContext" : "manifestJson.getLayers().get(0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 51
      },
      "nodeContext" : "manifestJson.getLayers().get(0).getDigest()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Assert.assertEquals(DescriptorDigest.fromHash(\"4945ba5011739b0b98c4a41afe224e417f47c7c99b2ce76830999c9a0861b236\"),manifestJson.getLayers().get(0).getDigest())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 190,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Assert.assertEquals(DescriptorDigest.fromHash(\"4945ba5011739b0b98c4a41afe224e417f47c7c99b2ce76830999c9a0861b236\"),manifestJson.getLayers().get(0).getDigest());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 866,
        "startLineNumber" : 63,
        "startColumnNumber" : 85,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Path jsonFile=Paths.get(Resources.getResource(\"json/v22manifest.json\").toURI());\n  V22ManifestTemplate manifestJson=JsonTemplateMapper.readJsonFromFile(jsonFile,V22ManifestTemplate.class);\n  Assert.assertEquals(DescriptorDigest.fromDigest(\"sha256:8c662931926fa990b41da3c9f42663a537ccd498130030f9149173a0493832ad\"),manifestJson.getContainerConfiguration().getDigest());\n  Assert.assertEquals(1000,manifestJson.getContainerConfiguration().getSize());\n  Assert.assertEquals(DescriptorDigest.fromHash(\"4945ba5011739b0b98c4a41afe224e417f47c7c99b2ce76830999c9a0861b236\"),manifestJson.getLayers().get(0).getDigest());\n  Assert.assertEquals(1000_000,manifestJson.getLayers().get(0).getSize());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 957,
        "startLineNumber" : 62,
        "startColumnNumber" : 2,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testFromJson() throws IOException, URISyntaxException, DigestException {\n  Path jsonFile=Paths.get(Resources.getResource(\"json/v22manifest.json\").toURI());\n  V22ManifestTemplate manifestJson=JsonTemplateMapper.readJsonFromFile(jsonFile,V22ManifestTemplate.class);\n  Assert.assertEquals(DescriptorDigest.fromDigest(\"sha256:8c662931926fa990b41da3c9f42663a537ccd498130030f9149173a0493832ad\"),manifestJson.getContainerConfiguration().getDigest());\n  Assert.assertEquals(1000,manifestJson.getContainerConfiguration().getSize());\n  Assert.assertEquals(DescriptorDigest.fromHash(\"4945ba5011739b0b98c4a41afe224e417f47c7c99b2ce76830999c9a0861b236\"),manifestJson.getLayers().get(0).getDigest());\n  Assert.assertEquals(1000_000,manifestJson.getLayers().get(0).getSize());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 91,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 51
      },
      "nodeContext" : "manifestJson.getLayers().get(0).getDigest()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 83,
      "startColumnNumber" : 63,
      "endLineNumber" : 83,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 83,
        "startColumnNumber" : 34,
        "endLineNumber" : 83,
        "endColumnNumber" : 65
      },
      "nodeContext" : "manifestJson.getLayers().get(0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 83,
        "startColumnNumber" : 34,
        "endLineNumber" : 83,
        "endColumnNumber" : 75
      },
      "nodeContext" : "manifestJson.getLayers().get(0).getSize()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Assert.assertEquals(1000_000,manifestJson.getLayers().get(0).getSize())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 77
      },
      "nodeContext" : "Assert.assertEquals(1000_000,manifestJson.getLayers().get(0).getSize());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 866,
        "startLineNumber" : 63,
        "startColumnNumber" : 85,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Path jsonFile=Paths.get(Resources.getResource(\"json/v22manifest.json\").toURI());\n  V22ManifestTemplate manifestJson=JsonTemplateMapper.readJsonFromFile(jsonFile,V22ManifestTemplate.class);\n  Assert.assertEquals(DescriptorDigest.fromDigest(\"sha256:8c662931926fa990b41da3c9f42663a537ccd498130030f9149173a0493832ad\"),manifestJson.getContainerConfiguration().getDigest());\n  Assert.assertEquals(1000,manifestJson.getContainerConfiguration().getSize());\n  Assert.assertEquals(DescriptorDigest.fromHash(\"4945ba5011739b0b98c4a41afe224e417f47c7c99b2ce76830999c9a0861b236\"),manifestJson.getLayers().get(0).getDigest());\n  Assert.assertEquals(1000_000,manifestJson.getLayers().get(0).getSize());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 957,
        "startLineNumber" : 62,
        "startColumnNumber" : 2,
        "endLineNumber" : 84,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testFromJson() throws IOException, URISyntaxException, DigestException {\n  Path jsonFile=Paths.get(Resources.getResource(\"json/v22manifest.json\").toURI());\n  V22ManifestTemplate manifestJson=JsonTemplateMapper.readJsonFromFile(jsonFile,V22ManifestTemplate.class);\n  Assert.assertEquals(DescriptorDigest.fromDigest(\"sha256:8c662931926fa990b41da3c9f42663a537ccd498130030f9149173a0493832ad\"),manifestJson.getContainerConfiguration().getDigest());\n  Assert.assertEquals(1000,manifestJson.getContainerConfiguration().getSize());\n  Assert.assertEquals(DescriptorDigest.fromHash(\"4945ba5011739b0b98c4a41afe224e417f47c7c99b2ce76830999c9a0861b236\"),manifestJson.getLayers().get(0).getDigest());\n  Assert.assertEquals(1000_000,manifestJson.getLayers().get(0).getSize());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 91,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 77
      },
      "nodeContext" : "Assert.assertEquals(1000_000,manifestJson.getLayers().get(0).getSize());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 81,
    "startColumnNumber" : 37,
    "endLineNumber" : 81,
    "endColumnNumber" : 38
  }, {
    "charLength" : 1,
    "startLineNumber" : 83,
    "startColumnNumber" : 63,
    "endLineNumber" : 83,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}