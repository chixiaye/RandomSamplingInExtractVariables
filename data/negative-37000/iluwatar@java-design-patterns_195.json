{
  "id" : 195,
  "expression" : "\"Weapon must be of weaponType: \" + expectedWeaponType",
  "projectName" : "iluwatar@java-design-patterns",
  "commitID" : "428efc7d53449a51d25dfda4141742629ecbb0b2",
  "filePath" : "/factory-method/src/test/java/com/iluwatar/factory/method/FactoryMethodTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Weapon must be of weaponType: \" + expectedWeaponType",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 53,
      "startLineNumber" : 100,
      "startColumnNumber" : 26,
      "endLineNumber" : 100,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 99,
        "startColumnNumber" : 4,
        "endLineNumber" : 100,
        "endColumnNumber" : 80
      },
      "nodeContext" : "assertEquals(expectedWeaponType,weapon.getWeaponType(),\"Weapon must be of weaponType: \" + expectedWeaponType)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 99,
        "startColumnNumber" : 4,
        "endLineNumber" : 100,
        "endColumnNumber" : 81
      },
      "nodeContext" : "assertEquals(expectedWeaponType,weapon.getWeaponType(),\"Weapon must be of weaponType: \" + expectedWeaponType);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 224,
        "startLineNumber" : 97,
        "startColumnNumber" : 90,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertTrue(clazz.isInstance(weapon),\"Weapon must be an object of: \" + clazz.getName());\n  assertEquals(expectedWeaponType,weapon.getWeaponType(),\"Weapon must be of weaponType: \" + expectedWeaponType);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 665,
        "startLineNumber" : 89,
        "startColumnNumber" : 2,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * This method asserts that the weapon object that is passed is an instance of the clazz and the weapon is of type expectedWeaponType.\n * @param weapon             weapon object which is to be verified\n * @param expectedWeaponType expected WeaponType of the weapon\n * @param clazz              expected class of the weapon\n */\nprivate void verifyWeapon(Weapon weapon,WeaponType expectedWeaponType,Class<?> clazz){\n  assertTrue(clazz.isInstance(weapon),\"Weapon must be an object of: \" + clazz.getName());\n  assertEquals(expectedWeaponType,weapon.getWeaponType(),\"Weapon must be of weaponType: \" + expectedWeaponType);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 42,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 99,
        "startColumnNumber" : 4,
        "endLineNumber" : 100,
        "endColumnNumber" : 80
      },
      "nodeContext" : "assertEquals(expectedWeaponType,weapon.getWeaponType(),\"Weapon must be of weaponType: \" + expectedWeaponType)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 7,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 53,
    "startLineNumber" : 100,
    "startColumnNumber" : 26,
    "endLineNumber" : 100,
    "endColumnNumber" : 79
  } ],
  "layoutRelationDataList" : [ ]
}