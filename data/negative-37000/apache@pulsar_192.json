{
  "id" : 192,
  "expression" : "httpLookupService.getSchema(TopicName.get(topicName),ByteBuffer.allocate(8).putLong(0).array()).get().isPresent()",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-broker/src/test/java/org/apache/pulsar/broker/service/PersistentTopicE2ETest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "httpLookupService.getSchema(TopicName.get(topicName),ByteBuffer.allocate(8).putLong(0).array()).get().isPresent()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 114,
      "startLineNumber" : 723,
      "startColumnNumber" : 19,
      "endLineNumber" : 723,
      "endColumnNumber" : 133
    },
    "astNodeNumber" : 20,
    "astHeight" : 7,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 723,
        "startColumnNumber" : 8,
        "endLineNumber" : 723,
        "endColumnNumber" : 134
      },
      "nodeContext" : "assertTrue(httpLookupService.getSchema(TopicName.get(topicName),ByteBuffer.allocate(8).putLong(0).array()).get().isPresent())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 723,
        "startColumnNumber" : 8,
        "endLineNumber" : 723,
        "endColumnNumber" : 135
      },
      "nodeContext" : "assertTrue(httpLookupService.getSchema(TopicName.get(topicName),ByteBuffer.allocate(8).putLong(0).array()).get().isPresent());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 23,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1902,
        "startLineNumber" : 697,
        "startColumnNumber" : 52,
        "endLineNumber" : 732,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  @Cleanup PulsarClientImpl httpProtocolClient=(PulsarClientImpl)PulsarClient.builder().serviceUrl(brokerUrl.toString()).build();\n  PulsarClientImpl binaryProtocolClient=(PulsarClientImpl)pulsarClient;\n  LookupService binaryLookupService=binaryProtocolClient.getLookup();\n  LookupService httpLookupService=httpProtocolClient.getLookup();\n  String topicName=\"persistent://prop/ns-abc/topic-1\";\n  @Cleanup Producer<byte[]> producer=pulsarClient.newProducer().topic(topicName).create();\n  Optional<Topic> topic=getTopic(topicName);\n  assertTrue(topic.isPresent());\n  byte[] data=JSONSchema.of(SchemaDefinition.builder().withPojo(Foo.class).build()).getSchemaInfo().getSchema();\n  SchemaData schemaData=SchemaData.builder().data(data).type(SchemaType.BYTES).user(\"foo\").build();\n  topic.get().addSchema(schemaData).join();\n  assertTrue(topicHasSchema(topicName));\n  Assert.assertEquals(admin.schemas().getAllSchemas(topicName).size(),1);\n  assertTrue(httpLookupService.getSchema(TopicName.get(topicName),ByteBuffer.allocate(8).putLong(0).array()).get().isPresent());\n  assertTrue(binaryLookupService.getSchema(TopicName.get(topicName),ByteBuffer.allocate(8).putLong(0).array()).get().isPresent());\n  topic.get().deleteSchema().join();\n  Assert.assertEquals(admin.schemas().getAllSchemas(topicName).size(),0);\n  assertFalse(httpLookupService.getSchema(TopicName.get(topicName),ByteBuffer.allocate(8).putLong(0).array()).get().isPresent());\n  assertFalse(binaryLookupService.getSchema(TopicName.get(topicName),ByteBuffer.allocate(8).putLong(0).array()).get().isPresent());\n  assertFalse(topicHasSchema(topicName));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 279,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1960,
        "startLineNumber" : 696,
        "startColumnNumber" : 4,
        "endLineNumber" : 732,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testDeleteSchema() throws Exception {\n  @Cleanup PulsarClientImpl httpProtocolClient=(PulsarClientImpl)PulsarClient.builder().serviceUrl(brokerUrl.toString()).build();\n  PulsarClientImpl binaryProtocolClient=(PulsarClientImpl)pulsarClient;\n  LookupService binaryLookupService=binaryProtocolClient.getLookup();\n  LookupService httpLookupService=httpProtocolClient.getLookup();\n  String topicName=\"persistent://prop/ns-abc/topic-1\";\n  @Cleanup Producer<byte[]> producer=pulsarClient.newProducer().topic(topicName).create();\n  Optional<Topic> topic=getTopic(topicName);\n  assertTrue(topic.isPresent());\n  byte[] data=JSONSchema.of(SchemaDefinition.builder().withPojo(Foo.class).build()).getSchemaInfo().getSchema();\n  SchemaData schemaData=SchemaData.builder().data(data).type(SchemaType.BYTES).user(\"foo\").build();\n  topic.get().addSchema(schemaData).join();\n  assertTrue(topicHasSchema(topicName));\n  Assert.assertEquals(admin.schemas().getAllSchemas(topicName).size(),1);\n  assertTrue(httpLookupService.getSchema(TopicName.get(topicName),ByteBuffer.allocate(8).putLong(0).array()).get().isPresent());\n  assertTrue(binaryLookupService.getSchema(TopicName.get(topicName),ByteBuffer.allocate(8).putLong(0).array()).get().isPresent());\n  topic.get().deleteSchema().join();\n  Assert.assertEquals(admin.schemas().getAllSchemas(topicName).size(),0);\n  assertFalse(httpLookupService.getSchema(TopicName.get(topicName),ByteBuffer.allocate(8).putLong(0).array()).get().isPresent());\n  assertFalse(binaryLookupService.getSchema(TopicName.get(topicName),ByteBuffer.allocate(8).putLong(0).array()).get().isPresent());\n  assertFalse(topicHasSchema(topicName));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 287,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 723,
        "startColumnNumber" : 8,
        "endLineNumber" : 723,
        "endColumnNumber" : 135
      },
      "nodeContext" : "assertTrue(httpLookupService.getSchema(TopicName.get(topicName),ByteBuffer.allocate(8).putLong(0).array()).get().isPresent());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 23,
      "astHeight" : 9
    },
    "tokenLength" : 13,
    "type" : "boolean"
  }, {
    "nodeContext" : "httpLookupService.getSchema(TopicName.get(topicName),ByteBuffer.allocate(8).putLong(0).array()).get().isPresent()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 114,
      "startLineNumber" : 728,
      "startColumnNumber" : 20,
      "endLineNumber" : 728,
      "endColumnNumber" : 134
    },
    "astNodeNumber" : 20,
    "astHeight" : 7,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 728,
        "startColumnNumber" : 8,
        "endLineNumber" : 728,
        "endColumnNumber" : 135
      },
      "nodeContext" : "assertFalse(httpLookupService.getSchema(TopicName.get(topicName),ByteBuffer.allocate(8).putLong(0).array()).get().isPresent())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 728,
        "startColumnNumber" : 8,
        "endLineNumber" : 728,
        "endColumnNumber" : 136
      },
      "nodeContext" : "assertFalse(httpLookupService.getSchema(TopicName.get(topicName),ByteBuffer.allocate(8).putLong(0).array()).get().isPresent());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 23,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1902,
        "startLineNumber" : 697,
        "startColumnNumber" : 52,
        "endLineNumber" : 732,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  @Cleanup PulsarClientImpl httpProtocolClient=(PulsarClientImpl)PulsarClient.builder().serviceUrl(brokerUrl.toString()).build();\n  PulsarClientImpl binaryProtocolClient=(PulsarClientImpl)pulsarClient;\n  LookupService binaryLookupService=binaryProtocolClient.getLookup();\n  LookupService httpLookupService=httpProtocolClient.getLookup();\n  String topicName=\"persistent://prop/ns-abc/topic-1\";\n  @Cleanup Producer<byte[]> producer=pulsarClient.newProducer().topic(topicName).create();\n  Optional<Topic> topic=getTopic(topicName);\n  assertTrue(topic.isPresent());\n  byte[] data=JSONSchema.of(SchemaDefinition.builder().withPojo(Foo.class).build()).getSchemaInfo().getSchema();\n  SchemaData schemaData=SchemaData.builder().data(data).type(SchemaType.BYTES).user(\"foo\").build();\n  topic.get().addSchema(schemaData).join();\n  assertTrue(topicHasSchema(topicName));\n  Assert.assertEquals(admin.schemas().getAllSchemas(topicName).size(),1);\n  assertTrue(httpLookupService.getSchema(TopicName.get(topicName),ByteBuffer.allocate(8).putLong(0).array()).get().isPresent());\n  assertTrue(binaryLookupService.getSchema(TopicName.get(topicName),ByteBuffer.allocate(8).putLong(0).array()).get().isPresent());\n  topic.get().deleteSchema().join();\n  Assert.assertEquals(admin.schemas().getAllSchemas(topicName).size(),0);\n  assertFalse(httpLookupService.getSchema(TopicName.get(topicName),ByteBuffer.allocate(8).putLong(0).array()).get().isPresent());\n  assertFalse(binaryLookupService.getSchema(TopicName.get(topicName),ByteBuffer.allocate(8).putLong(0).array()).get().isPresent());\n  assertFalse(topicHasSchema(topicName));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 279,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1960,
        "startLineNumber" : 696,
        "startColumnNumber" : 4,
        "endLineNumber" : 732,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testDeleteSchema() throws Exception {\n  @Cleanup PulsarClientImpl httpProtocolClient=(PulsarClientImpl)PulsarClient.builder().serviceUrl(brokerUrl.toString()).build();\n  PulsarClientImpl binaryProtocolClient=(PulsarClientImpl)pulsarClient;\n  LookupService binaryLookupService=binaryProtocolClient.getLookup();\n  LookupService httpLookupService=httpProtocolClient.getLookup();\n  String topicName=\"persistent://prop/ns-abc/topic-1\";\n  @Cleanup Producer<byte[]> producer=pulsarClient.newProducer().topic(topicName).create();\n  Optional<Topic> topic=getTopic(topicName);\n  assertTrue(topic.isPresent());\n  byte[] data=JSONSchema.of(SchemaDefinition.builder().withPojo(Foo.class).build()).getSchemaInfo().getSchema();\n  SchemaData schemaData=SchemaData.builder().data(data).type(SchemaType.BYTES).user(\"foo\").build();\n  topic.get().addSchema(schemaData).join();\n  assertTrue(topicHasSchema(topicName));\n  Assert.assertEquals(admin.schemas().getAllSchemas(topicName).size(),1);\n  assertTrue(httpLookupService.getSchema(TopicName.get(topicName),ByteBuffer.allocate(8).putLong(0).array()).get().isPresent());\n  assertTrue(binaryLookupService.getSchema(TopicName.get(topicName),ByteBuffer.allocate(8).putLong(0).array()).get().isPresent());\n  topic.get().deleteSchema().join();\n  Assert.assertEquals(admin.schemas().getAllSchemas(topicName).size(),0);\n  assertFalse(httpLookupService.getSchema(TopicName.get(topicName),ByteBuffer.allocate(8).putLong(0).array()).get().isPresent());\n  assertFalse(binaryLookupService.getSchema(TopicName.get(topicName),ByteBuffer.allocate(8).putLong(0).array()).get().isPresent());\n  assertFalse(topicHasSchema(topicName));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 287,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 728,
        "startColumnNumber" : 8,
        "endLineNumber" : 728,
        "endColumnNumber" : 136
      },
      "nodeContext" : "assertFalse(httpLookupService.getSchema(TopicName.get(topicName),ByteBuffer.allocate(8).putLong(0).array()).get().isPresent());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 23,
      "astHeight" : 9
    },
    "tokenLength" : 13,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 114,
    "startLineNumber" : 723,
    "startColumnNumber" : 19,
    "endLineNumber" : 723,
    "endColumnNumber" : 133
  }, {
    "charLength" : 114,
    "startLineNumber" : 728,
    "startColumnNumber" : 20,
    "endLineNumber" : 728,
    "endColumnNumber" : 134
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}