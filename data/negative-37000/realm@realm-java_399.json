{
  "id" : 399,
  "expression" : "JsonUtils.stringToDate(\"20070813Z\")",
  "projectName" : "realm@realm-java",
  "commitID" : "9da3b229a46407f73e2003fb40857cadf062086b",
  "filePath" : "/realm/realm-library/src/androidTest/java/io/realm/internal/android/JsonUtilsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "JsonUtils.stringToDate(\"20070813Z\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 132,
      "startColumnNumber" : 12,
      "endLineNumber" : 132,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 132,
        "startColumnNumber" : 8,
        "endLineNumber" : 132,
        "endColumnNumber" : 47
      },
      "nodeContext" : "d=JsonUtils.stringToDate(\"20070813Z\")",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 132,
        "startColumnNumber" : 8,
        "endLineNumber" : 132,
        "endColumnNumber" : 48
      },
      "nodeContext" : "d=JsonUtils.stringToDate(\"20070813Z\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1644,
        "startLineNumber" : 100,
        "startColumnNumber" : 58,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Calendar cal=new GregorianCalendar(2007,8 - 1,13,19,51,23);\n  cal.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n  cal.set(Calendar.MILLISECOND,789);\n  Date date=cal.getTime();\n  cal.set(Calendar.MILLISECOND,0);\n  Date dateZeroMillis=cal.getTime();\n  cal.set(Calendar.SECOND,0);\n  Date d=JsonUtils.stringToDate(\"2007-08-13T195123.789Z\");\n  assertEquals(date,d);\n  d=JsonUtils.stringToDate(\"2007-08-13T195123Z\");\n  assertEquals(dateZeroMillis,d);\n  d=JsonUtils.stringToDate(\"2007-08-13T215123.789+02:00\");\n  assertEquals(date,d);\n  cal=new GregorianCalendar(2007,8 - 1,13,0,0,0);\n  cal.set(Calendar.MILLISECOND,0);\n  cal.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n  Date dateWithoutTime=cal.getTime();\n  d=JsonUtils.stringToDate(\"2007-08-13Z\");\n  assertEquals(dateWithoutTime,d);\n  d=JsonUtils.stringToDate(\"20070813Z\");\n  assertEquals(dateWithoutTime,d);\n  d=JsonUtils.stringToDate(\"2007-08-13+00:00\");\n  assertEquals(dateWithoutTime,d);\n  d=JsonUtils.stringToDate(\"20070813+00:00\");\n  assertEquals(dateWithoutTime,d);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 189,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1708,
        "startLineNumber" : 99,
        "startColumnNumber" : 4,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void parseISO8601Dates() throws ParseException {\n  Calendar cal=new GregorianCalendar(2007,8 - 1,13,19,51,23);\n  cal.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n  cal.set(Calendar.MILLISECOND,789);\n  Date date=cal.getTime();\n  cal.set(Calendar.MILLISECOND,0);\n  Date dateZeroMillis=cal.getTime();\n  cal.set(Calendar.SECOND,0);\n  Date d=JsonUtils.stringToDate(\"2007-08-13T195123.789Z\");\n  assertEquals(date,d);\n  d=JsonUtils.stringToDate(\"2007-08-13T195123Z\");\n  assertEquals(dateZeroMillis,d);\n  d=JsonUtils.stringToDate(\"2007-08-13T215123.789+02:00\");\n  assertEquals(date,d);\n  cal=new GregorianCalendar(2007,8 - 1,13,0,0,0);\n  cal.set(Calendar.MILLISECOND,0);\n  cal.setTimeZone(TimeZone.getTimeZone(\"GMT\"));\n  Date dateWithoutTime=cal.getTime();\n  d=JsonUtils.stringToDate(\"2007-08-13Z\");\n  assertEquals(dateWithoutTime,d);\n  d=JsonUtils.stringToDate(\"20070813Z\");\n  assertEquals(dateWithoutTime,d);\n  d=JsonUtils.stringToDate(\"2007-08-13+00:00\");\n  assertEquals(dateWithoutTime,d);\n  d=JsonUtils.stringToDate(\"20070813+00:00\");\n  assertEquals(dateWithoutTime,d);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 197,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 132,
        "startColumnNumber" : 8,
        "endLineNumber" : 132,
        "endColumnNumber" : 48
      },
      "nodeContext" : "d=JsonUtils.stringToDate(\"20070813Z\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.util.Date"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 132,
    "startColumnNumber" : 12,
    "endLineNumber" : 132,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ ]
}