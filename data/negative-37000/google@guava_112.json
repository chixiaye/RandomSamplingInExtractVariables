{
  "id" : 112,
  "expression" : "ArbitraryInstances.get(float.class)",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava-testlib/test/com/google/common/testing/ArbitraryInstancesTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ArbitraryInstances.get(float.class)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 153,
      "startColumnNumber" : 35,
      "endLineNumber" : 153,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 153,
        "startColumnNumber" : 4,
        "endLineNumber" : 153,
        "endColumnNumber" : 71
      },
      "nodeContext" : "assertEquals(Float.valueOf(0),ArbitraryInstances.get(float.class))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 153,
        "startColumnNumber" : 4,
        "endLineNumber" : 153,
        "endColumnNumber" : 72
      },
      "nodeContext" : "assertEquals(Float.valueOf(0),ArbitraryInstances.get(float.class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2114,
        "startLineNumber" : 138,
        "startColumnNumber" : 35,
        "endLineNumber" : 168,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertNull(ArbitraryInstances.get(void.class));\n  assertNull(ArbitraryInstances.get(Void.class));\n  assertEquals(Boolean.FALSE,ArbitraryInstances.get(boolean.class));\n  assertEquals(Boolean.FALSE,ArbitraryInstances.get(Boolean.class));\n  assertEquals(Character.valueOf('\\0'),ArbitraryInstances.get(char.class));\n  assertEquals(Character.valueOf('\\0'),ArbitraryInstances.get(Character.class));\n  assertEquals(Byte.valueOf((byte)0),ArbitraryInstances.get(byte.class));\n  assertEquals(Byte.valueOf((byte)0),ArbitraryInstances.get(Byte.class));\n  assertEquals(Short.valueOf((short)0),ArbitraryInstances.get(short.class));\n  assertEquals(Short.valueOf((short)0),ArbitraryInstances.get(Short.class));\n  assertEquals(Integer.valueOf(0),ArbitraryInstances.get(int.class));\n  assertEquals(Integer.valueOf(0),ArbitraryInstances.get(Integer.class));\n  assertEquals(Long.valueOf(0),ArbitraryInstances.get(long.class));\n  assertEquals(Long.valueOf(0),ArbitraryInstances.get(Long.class));\n  assertEquals(Float.valueOf(0),ArbitraryInstances.get(float.class));\n  assertEquals(Float.valueOf(0),ArbitraryInstances.get(Float.class));\n  assertEquals(Double.valueOf(0),ArbitraryInstances.get(double.class));\n  assertEquals(Double.valueOf(0),ArbitraryInstances.get(Double.class));\n  assertEquals(UnsignedInteger.ZERO,ArbitraryInstances.get(UnsignedInteger.class));\n  assertEquals(UnsignedLong.ZERO,ArbitraryInstances.get(UnsignedLong.class));\n  assertEquals(0,ArbitraryInstances.get(BigDecimal.class).intValue());\n  assertEquals(0,ArbitraryInstances.get(BigInteger.class).intValue());\n  assertEquals(\"\",ArbitraryInstances.get(String.class));\n  assertEquals(\"\",ArbitraryInstances.get(CharSequence.class));\n  assertEquals(TimeUnit.SECONDS,ArbitraryInstances.get(TimeUnit.class));\n  assertNotNull(ArbitraryInstances.get(Object.class));\n  assertEquals(0,ArbitraryInstances.get(Number.class));\n  assertEquals(Charsets.UTF_8,ArbitraryInstances.get(Charset.class));\n  assertNotNull(ArbitraryInstances.get(UUID.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 344,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2147,
        "startLineNumber" : 138,
        "startColumnNumber" : 2,
        "endLineNumber" : 168,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testGet_primitives(){\n  assertNull(ArbitraryInstances.get(void.class));\n  assertNull(ArbitraryInstances.get(Void.class));\n  assertEquals(Boolean.FALSE,ArbitraryInstances.get(boolean.class));\n  assertEquals(Boolean.FALSE,ArbitraryInstances.get(Boolean.class));\n  assertEquals(Character.valueOf('\\0'),ArbitraryInstances.get(char.class));\n  assertEquals(Character.valueOf('\\0'),ArbitraryInstances.get(Character.class));\n  assertEquals(Byte.valueOf((byte)0),ArbitraryInstances.get(byte.class));\n  assertEquals(Byte.valueOf((byte)0),ArbitraryInstances.get(Byte.class));\n  assertEquals(Short.valueOf((short)0),ArbitraryInstances.get(short.class));\n  assertEquals(Short.valueOf((short)0),ArbitraryInstances.get(Short.class));\n  assertEquals(Integer.valueOf(0),ArbitraryInstances.get(int.class));\n  assertEquals(Integer.valueOf(0),ArbitraryInstances.get(Integer.class));\n  assertEquals(Long.valueOf(0),ArbitraryInstances.get(long.class));\n  assertEquals(Long.valueOf(0),ArbitraryInstances.get(Long.class));\n  assertEquals(Float.valueOf(0),ArbitraryInstances.get(float.class));\n  assertEquals(Float.valueOf(0),ArbitraryInstances.get(Float.class));\n  assertEquals(Double.valueOf(0),ArbitraryInstances.get(double.class));\n  assertEquals(Double.valueOf(0),ArbitraryInstances.get(Double.class));\n  assertEquals(UnsignedInteger.ZERO,ArbitraryInstances.get(UnsignedInteger.class));\n  assertEquals(UnsignedLong.ZERO,ArbitraryInstances.get(UnsignedLong.class));\n  assertEquals(0,ArbitraryInstances.get(BigDecimal.class).intValue());\n  assertEquals(0,ArbitraryInstances.get(BigInteger.class).intValue());\n  assertEquals(\"\",ArbitraryInstances.get(String.class));\n  assertEquals(\"\",ArbitraryInstances.get(CharSequence.class));\n  assertEquals(TimeUnit.SECONDS,ArbitraryInstances.get(TimeUnit.class));\n  assertNotNull(ArbitraryInstances.get(Object.class));\n  assertEquals(0,ArbitraryInstances.get(Number.class));\n  assertEquals(Charsets.UTF_8,ArbitraryInstances.get(Charset.class));\n  assertNotNull(ArbitraryInstances.get(UUID.class));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 348,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 153,
        "startColumnNumber" : 4,
        "endLineNumber" : 153,
        "endColumnNumber" : 72
      },
      "nodeContext" : "assertEquals(Float.valueOf(0),ArbitraryInstances.get(float.class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.Float"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 153,
    "startColumnNumber" : 35,
    "endLineNumber" : 153,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}