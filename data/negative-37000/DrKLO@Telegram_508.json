{
  "id" : 508,
  "expression" : "channelConfig",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/com/google/android/exoplayer2/extractor/ts/AdtsReader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "channelConfig",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 493,
      "startColumnNumber" : 58,
      "endLineNumber" : 493,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 492,
        "startColumnNumber" : 10,
        "endLineNumber" : 493,
        "endColumnNumber" : 72
      },
      "nodeContext" : "CodecSpecificDataUtil.buildAacAudioSpecificConfig(audioObjectType,firstFrameSampleRateIndex,channelConfig)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 155,
        "startLineNumber" : 491,
        "startColumnNumber" : 13,
        "endLineNumber" : 493,
        "endColumnNumber" : 72
      },
      "nodeContext" : "audioSpecificConfig=CodecSpecificDataUtil.buildAacAudioSpecificConfig(audioObjectType,firstFrameSampleRateIndex,channelConfig)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 491,
        "startColumnNumber" : 6,
        "endLineNumber" : 493,
        "endColumnNumber" : 73
      },
      "nodeContext" : "byte[] audioSpecificConfig=CodecSpecificDataUtil.buildAacAudioSpecificConfig(audioObjectType,firstFrameSampleRateIndex,channelConfig);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1916,
        "startLineNumber" : 472,
        "startColumnNumber" : 26,
        "endLineNumber" : 505,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int audioObjectType=adtsScratch.readBits(2) + 1;\n  if (audioObjectType != 2) {\n    Log.w(TAG,\"Detected audio object type: \" + audioObjectType + \", but assuming AAC LC.\");\n    audioObjectType=2;\n  }\n  adtsScratch.skipBits(5);\n  int channelConfig=adtsScratch.readBits(3);\n  byte[] audioSpecificConfig=CodecSpecificDataUtil.buildAacAudioSpecificConfig(audioObjectType,firstFrameSampleRateIndex,channelConfig);\n  Pair<Integer,Integer> audioParams=CodecSpecificDataUtil.parseAacAudioSpecificConfig(audioSpecificConfig);\n  Format format=Format.createAudioSampleFormat(formatId,MimeTypes.AUDIO_AAC,null,Format.NO_VALUE,Format.NO_VALUE,audioParams.second,audioParams.first,Collections.singletonList(audioSpecificConfig),null,0,language);\n  sampleDurationUs=(C.MICROS_PER_SECOND * 1024) / format.sampleRate;\n  output.format(format);\n  hasOutputFormat=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1983,
        "startLineNumber" : 472,
        "startColumnNumber" : 4,
        "endLineNumber" : 507,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!hasOutputFormat) {\n  int audioObjectType=adtsScratch.readBits(2) + 1;\n  if (audioObjectType != 2) {\n    Log.w(TAG,\"Detected audio object type: \" + audioObjectType + \", but assuming AAC LC.\");\n    audioObjectType=2;\n  }\n  adtsScratch.skipBits(5);\n  int channelConfig=adtsScratch.readBits(3);\n  byte[] audioSpecificConfig=CodecSpecificDataUtil.buildAacAudioSpecificConfig(audioObjectType,firstFrameSampleRateIndex,channelConfig);\n  Pair<Integer,Integer> audioParams=CodecSpecificDataUtil.parseAacAudioSpecificConfig(audioSpecificConfig);\n  Format format=Format.createAudioSampleFormat(formatId,MimeTypes.AUDIO_AAC,null,Format.NO_VALUE,Format.NO_VALUE,audioParams.second,audioParams.first,Collections.singletonList(audioSpecificConfig),null,0,language);\n  sampleDurationUs=(C.MICROS_PER_SECOND * 1024) / format.sampleRate;\n  output.format(format);\n  hasOutputFormat=true;\n}\n else {\n  adtsScratch.skipBits(10);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 131,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2264,
        "startLineNumber" : 469,
        "startColumnNumber" : 56,
        "endLineNumber" : 516,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  adtsScratch.setPosition(0);\n  if (!hasOutputFormat) {\n    int audioObjectType=adtsScratch.readBits(2) + 1;\n    if (audioObjectType != 2) {\n      Log.w(TAG,\"Detected audio object type: \" + audioObjectType + \", but assuming AAC LC.\");\n      audioObjectType=2;\n    }\n    adtsScratch.skipBits(5);\n    int channelConfig=adtsScratch.readBits(3);\n    byte[] audioSpecificConfig=CodecSpecificDataUtil.buildAacAudioSpecificConfig(audioObjectType,firstFrameSampleRateIndex,channelConfig);\n    Pair<Integer,Integer> audioParams=CodecSpecificDataUtil.parseAacAudioSpecificConfig(audioSpecificConfig);\n    Format format=Format.createAudioSampleFormat(formatId,MimeTypes.AUDIO_AAC,null,Format.NO_VALUE,Format.NO_VALUE,audioParams.second,audioParams.first,Collections.singletonList(audioSpecificConfig),null,0,language);\n    sampleDurationUs=(C.MICROS_PER_SECOND * 1024) / format.sampleRate;\n    output.format(format);\n    hasOutputFormat=true;\n  }\n else {\n    adtsScratch.skipBits(10);\n  }\n  adtsScratch.skipBits(4);\n  int sampleSize=adtsScratch.readBits(13) - 2 - HEADER_SIZE;\n  if (hasCrc) {\n    sampleSize-=CRC_SIZE;\n  }\n  setReadingSampleState(output,sampleDurationUs,0,sampleSize);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2361,
        "startLineNumber" : 466,
        "startColumnNumber" : 2,
        "endLineNumber" : 516,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Parses the sample header.\n */\nprivate void parseAdtsHeader() throws ParserException {\n  adtsScratch.setPosition(0);\n  if (!hasOutputFormat) {\n    int audioObjectType=adtsScratch.readBits(2) + 1;\n    if (audioObjectType != 2) {\n      Log.w(TAG,\"Detected audio object type: \" + audioObjectType + \", but assuming AAC LC.\");\n      audioObjectType=2;\n    }\n    adtsScratch.skipBits(5);\n    int channelConfig=adtsScratch.readBits(3);\n    byte[] audioSpecificConfig=CodecSpecificDataUtil.buildAacAudioSpecificConfig(audioObjectType,firstFrameSampleRateIndex,channelConfig);\n    Pair<Integer,Integer> audioParams=CodecSpecificDataUtil.parseAacAudioSpecificConfig(audioSpecificConfig);\n    Format format=Format.createAudioSampleFormat(formatId,MimeTypes.AUDIO_AAC,null,Format.NO_VALUE,Format.NO_VALUE,audioParams.second,audioParams.first,Collections.singletonList(audioSpecificConfig),null,0,language);\n    sampleDurationUs=(C.MICROS_PER_SECOND * 1024) / format.sampleRate;\n    output.format(format);\n    hasOutputFormat=true;\n  }\n else {\n    adtsScratch.skipBits(10);\n  }\n  adtsScratch.skipBits(4);\n  int sampleSize=adtsScratch.readBits(13) - 2 - HEADER_SIZE;\n  if (hasCrc) {\n    sampleSize-=CRC_SIZE;\n  }\n  setReadingSampleState(output,sampleDurationUs,0,sampleSize);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 174,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 492,
        "startColumnNumber" : 10,
        "endLineNumber" : 493,
        "endColumnNumber" : 72
      },
      "nodeContext" : "CodecSpecificDataUtil.buildAacAudioSpecificConfig(audioObjectType,firstFrameSampleRateIndex,channelConfig)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 493,
    "startColumnNumber" : 58,
    "endLineNumber" : 493,
    "endColumnNumber" : 71
  } ],
  "layoutRelationDataList" : [ ]
}