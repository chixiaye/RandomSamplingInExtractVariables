{
  "id" : 285,
  "expression" : "fieldAccessPostAggregator",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/processing/src/test/java/org/apache/druid/query/aggregation/post/FieldAccessPostAggregatorTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "fieldAccessPostAggregator",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 52,
      "startColumnNumber" : 38,
      "endLineNumber" : 52,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 52,
        "startColumnNumber" : 38,
        "endLineNumber" : 52,
        "endColumnNumber" : 85
      },
      "nodeContext" : "fieldAccessPostAggregator.compute(metricValues)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Assert.assertEquals(new Long(0L),fieldAccessPostAggregator.compute(metricValues))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Assert.assertEquals(new Long(0L),fieldAccessPostAggregator.compute(metricValues));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 658,
        "startLineNumber" : 44,
        "startColumnNumber" : 2,
        "endLineNumber" : 59,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final String aggName=\"rows\";\n  FieldAccessPostAggregator fieldAccessPostAggregator;\n  fieldAccessPostAggregator=new FieldAccessPostAggregator(\"To be, or not to be, that is the question:\",\"rows\");\n  CountAggregator agg=new CountAggregator();\n  Map<String,Object> metricValues=new HashMap<String,Object>();\n  metricValues.put(aggName,agg.get());\n  Assert.assertEquals(new Long(0L),fieldAccessPostAggregator.compute(metricValues));\n  agg.aggregate();\n  agg.aggregate();\n  agg.aggregate();\n  metricValues.put(aggName,agg.get());\n  Assert.assertEquals(new Long(3L),fieldAccessPostAggregator.compute(metricValues));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 694,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 59,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testCompute(){\n  final String aggName=\"rows\";\n  FieldAccessPostAggregator fieldAccessPostAggregator;\n  fieldAccessPostAggregator=new FieldAccessPostAggregator(\"To be, or not to be, that is the question:\",\"rows\");\n  CountAggregator agg=new CountAggregator();\n  Map<String,Object> metricValues=new HashMap<String,Object>();\n  metricValues.put(aggName,agg.get());\n  Assert.assertEquals(new Long(0L),fieldAccessPostAggregator.compute(metricValues));\n  agg.aggregate();\n  agg.aggregate();\n  agg.aggregate();\n  metricValues.put(aggName,agg.get());\n  Assert.assertEquals(new Long(3L),fieldAccessPostAggregator.compute(metricValues));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Assert.assertEquals(new Long(0L),fieldAccessPostAggregator.compute(metricValues));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.query.aggregation.post.FieldAccessPostAggregator"
  }, {
    "nodeContext" : "fieldAccessPostAggregator",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 58,
      "startColumnNumber" : 38,
      "endLineNumber" : 58,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 58,
        "startColumnNumber" : 38,
        "endLineNumber" : 58,
        "endColumnNumber" : 85
      },
      "nodeContext" : "fieldAccessPostAggregator.compute(metricValues)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Assert.assertEquals(new Long(3L),fieldAccessPostAggregator.compute(metricValues))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Assert.assertEquals(new Long(3L),fieldAccessPostAggregator.compute(metricValues));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 658,
        "startLineNumber" : 44,
        "startColumnNumber" : 2,
        "endLineNumber" : 59,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final String aggName=\"rows\";\n  FieldAccessPostAggregator fieldAccessPostAggregator;\n  fieldAccessPostAggregator=new FieldAccessPostAggregator(\"To be, or not to be, that is the question:\",\"rows\");\n  CountAggregator agg=new CountAggregator();\n  Map<String,Object> metricValues=new HashMap<String,Object>();\n  metricValues.put(aggName,agg.get());\n  Assert.assertEquals(new Long(0L),fieldAccessPostAggregator.compute(metricValues));\n  agg.aggregate();\n  agg.aggregate();\n  agg.aggregate();\n  metricValues.put(aggName,agg.get());\n  Assert.assertEquals(new Long(3L),fieldAccessPostAggregator.compute(metricValues));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 694,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 59,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testCompute(){\n  final String aggName=\"rows\";\n  FieldAccessPostAggregator fieldAccessPostAggregator;\n  fieldAccessPostAggregator=new FieldAccessPostAggregator(\"To be, or not to be, that is the question:\",\"rows\");\n  CountAggregator agg=new CountAggregator();\n  Map<String,Object> metricValues=new HashMap<String,Object>();\n  metricValues.put(aggName,agg.get());\n  Assert.assertEquals(new Long(0L),fieldAccessPostAggregator.compute(metricValues));\n  agg.aggregate();\n  agg.aggregate();\n  agg.aggregate();\n  metricValues.put(aggName,agg.get());\n  Assert.assertEquals(new Long(3L),fieldAccessPostAggregator.compute(metricValues));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Assert.assertEquals(new Long(3L),fieldAccessPostAggregator.compute(metricValues));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.query.aggregation.post.FieldAccessPostAggregator"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 52,
    "startColumnNumber" : 38,
    "endLineNumber" : 52,
    "endColumnNumber" : 63
  }, {
    "charLength" : 25,
    "startLineNumber" : 58,
    "startColumnNumber" : 38,
    "endLineNumber" : 58,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}