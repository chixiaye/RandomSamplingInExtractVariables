{
  "id" : 104,
  "expression" : "\"IOException thrown while closing Closeable.\"",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/fbcore/src/main/java/com/facebook/common/internal/Closeables.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"IOException thrown while closing Closeable.\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 45,
      "startLineNumber" : 78,
      "startColumnNumber" : 34,
      "endLineNumber" : 78,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 83
      },
      "nodeContext" : "logger.log(Level.WARNING,\"IOException thrown while closing Closeable.\",e)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 84
      },
      "nodeContext" : "logger.log(Level.WARNING,\"IOException thrown while closing Closeable.\",e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 77,
        "startColumnNumber" : 30,
        "endLineNumber" : 79,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  logger.log(Level.WARNING,\"IOException thrown while closing Closeable.\",e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 77,
        "startColumnNumber" : 6,
        "endLineNumber" : 81,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (swallowIOException) {\n  logger.log(Level.WARNING,\"IOException thrown while closing Closeable.\",e);\n}\n else {\n  throw e;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 76,
        "startColumnNumber" : 28,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (swallowIOException) {\n    logger.log(Level.WARNING,\"IOException thrown while closing Closeable.\",e);\n  }\n else {\n    throw e;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 186,
        "startLineNumber" : 76,
        "startColumnNumber" : 6,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "catch (IOException e) {\n  if (swallowIOException) {\n    logger.log(Level.WARNING,\"IOException thrown while closing Closeable.\",e);\n  }\n else {\n    throw e;\n  }\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 223,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  closeable.close();\n}\n catch (IOException e) {\n  if (swallowIOException) {\n    logger.log(Level.WARNING,\"IOException thrown while closing Closeable.\",e);\n  }\n else {\n    throw e;\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 27,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 282,
        "startLineNumber" : 70,
        "startColumnNumber" : 25,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (closeable == null) {\n    return;\n  }\n  try {\n    closeable.close();\n  }\n catch (  IOException e) {\n    if (swallowIOException) {\n      logger.log(Level.WARNING,\"IOException thrown while closing Closeable.\",e);\n    }\n else {\n      throw e;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1583,
        "startLineNumber" : 38,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Closes a  {@link Closeable}, with control over whether an  {@code IOException} may be thrown.This is primarily useful in a finally block, where a thrown exception needs to be logged but not propagated (otherwise the original exception will be lost). <p>If  {@code swallowIOException} is true then we never throw {@code IOException} but merely logit. <p>Example: <pre> {@code public void useStreamNicely() throws IOException  SomeStream stream = new SomeStream(\"foo\"); boolean threw = true; try  // ... code which does something with the stream ... threw = false;}finally  // If an exception occurs, rethrow it only if threw==false: Closeables.close(stream, threw); } } }</pre>\n * @param closeable the {@code Closeable} object to be closed, or null, in which case this methoddoes nothing\n * @param swallowIOException if true, don't propagate IO exceptions thrown by the {@code close}methods\n * @throws IOException if {@code swallowIOException} is false and {@code close} throws an {@code IOException}.\n */\npublic static void close(@Nullable Closeable closeable,boolean swallowIOException) throws IOException {\n  if (closeable == null) {\n    return;\n  }\n  try {\n    closeable.close();\n  }\n catch (  IOException e) {\n    if (swallowIOException) {\n      logger.log(Level.WARNING,\"IOException thrown while closing Closeable.\",e);\n    }\n else {\n      throw e;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 51,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 84
      },
      "nodeContext" : "logger.log(Level.WARNING,\"IOException thrown while closing Closeable.\",e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 45,
    "startLineNumber" : 78,
    "startColumnNumber" : 34,
    "endLineNumber" : 78,
    "endColumnNumber" : 79
  } ],
  "layoutRelationDataList" : [ ]
}