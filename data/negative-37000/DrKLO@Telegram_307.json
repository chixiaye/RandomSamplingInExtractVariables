{
  "id" : 307,
  "expression" : "-lastMessage.messageOwner.peer_id.channel_id",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/telegram/ui/Adapters/DialogsSearchAdapter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "-lastMessage.messageOwner.peer_id.channel_id",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 44,
      "startLineNumber" : 275,
      "startColumnNumber" : 21,
      "endLineNumber" : 275,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 8,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 275,
        "startColumnNumber" : 16,
        "endLineNumber" : 275,
        "endColumnNumber" : 65
      },
      "nodeContext" : "id=-lastMessage.messageOwner.peer_id.channel_id",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 275,
        "startColumnNumber" : 16,
        "endLineNumber" : 275,
        "endColumnNumber" : 66
      },
      "nodeContext" : "id=-lastMessage.messageOwner.peer_id.channel_id;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 274,
        "startColumnNumber" : 66,
        "endLineNumber" : 276,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  id=-lastMessage.messageOwner.peer_id.channel_id;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 356,
        "startLineNumber" : 274,
        "startColumnNumber" : 12,
        "endLineNumber" : 280,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (lastMessage.messageOwner.peer_id.channel_id != 0) {\n  id=-lastMessage.messageOwner.peer_id.channel_id;\n}\n else if (lastMessage.messageOwner.peer_id.chat_id != 0) {\n  id=-lastMessage.messageOwner.peer_id.chat_id;\n}\n else {\n  id=lastMessage.messageOwner.peer_id.user_id;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 689,
        "startLineNumber" : 269,
        "startColumnNumber" : 87,
        "endLineNumber" : 282,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  MessageObject lastMessage=searchResultMessages.get(searchResultMessages.size() - 1);\n  req.offset_id=lastMessage.getId();\n  req.offset_rate=nextSearchRate;\n  int id;\n  if (lastMessage.messageOwner.peer_id.channel_id != 0) {\n    id=-lastMessage.messageOwner.peer_id.channel_id;\n  }\n else   if (lastMessage.messageOwner.peer_id.chat_id != 0) {\n    id=-lastMessage.messageOwner.peer_id.chat_id;\n  }\n else {\n    id=lastMessage.messageOwner.peer_id.user_id;\n  }\n  req.offset_peer=MessagesController.getInstance(currentAccount).getInputPeer(id);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 910,
        "startLineNumber" : 269,
        "startColumnNumber" : 8,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (query.equals(lastMessagesSearchString) && !searchResultMessages.isEmpty()) {\n  MessageObject lastMessage=searchResultMessages.get(searchResultMessages.size() - 1);\n  req.offset_id=lastMessage.getId();\n  req.offset_rate=nextSearchRate;\n  int id;\n  if (lastMessage.messageOwner.peer_id.channel_id != 0) {\n    id=-lastMessage.messageOwner.peer_id.channel_id;\n  }\n else   if (lastMessage.messageOwner.peer_id.chat_id != 0) {\n    id=-lastMessage.messageOwner.peer_id.chat_id;\n  }\n else {\n    id=lastMessage.messageOwner.peer_id.user_id;\n  }\n  req.offset_peer=MessagesController.getInstance(currentAccount).getInputPeer(id);\n}\n else {\n  req.offset_rate=0;\n  req.offset_id=0;\n  req.offset_peer=new TLRPC.TL_inputPeerEmpty();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 132,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5642,
        "startLineNumber" : 246,
        "startColumnNumber" : 74,
        "endLineNumber" : 351,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (needMessagesSearch == 0 || TextUtils.isEmpty(lastMessagesSearchString) && TextUtils.isEmpty(query)) {\n    return;\n  }\n  if (reqId != 0) {\n    ConnectionsManager.getInstance(currentAccount).cancelRequest(reqId,true);\n    reqId=0;\n  }\n  if (TextUtils.isEmpty(query)) {\n    searchResultMessages.clear();\n    lastReqId=0;\n    lastMessagesSearchString=null;\n    searchWas=false;\n    notifyDataSetChanged();\n    return;\n  }\n  final TLRPC.TL_messages_searchGlobal req=new TLRPC.TL_messages_searchGlobal();\n  req.limit=20;\n  req.q=query;\n  req.filter=new TLRPC.TL_inputMessagesFilterEmpty();\n  req.flags|=1;\n  req.folder_id=folderId;\n  if (query.equals(lastMessagesSearchString) && !searchResultMessages.isEmpty()) {\n    MessageObject lastMessage=searchResultMessages.get(searchResultMessages.size() - 1);\n    req.offset_id=lastMessage.getId();\n    req.offset_rate=nextSearchRate;\n    int id;\n    if (lastMessage.messageOwner.peer_id.channel_id != 0) {\n      id=-lastMessage.messageOwner.peer_id.channel_id;\n    }\n else     if (lastMessage.messageOwner.peer_id.chat_id != 0) {\n      id=-lastMessage.messageOwner.peer_id.chat_id;\n    }\n else {\n      id=lastMessage.messageOwner.peer_id.user_id;\n    }\n    req.offset_peer=MessagesController.getInstance(currentAccount).getInputPeer(id);\n  }\n else {\n    req.offset_rate=0;\n    req.offset_id=0;\n    req.offset_peer=new TLRPC.TL_inputPeerEmpty();\n  }\n  lastMessagesSearchString=query;\n  final int currentReqId=++lastReqId;\n  reqId=ConnectionsManager.getInstance(currentAccount).sendRequest(req,(response,error) -> {\n    final ArrayList<MessageObject> messageObjects=new ArrayList<>();\n    if (error == null) {\n      TLRPC.messages_Messages res=(TLRPC.messages_Messages)response;\n      for (int a=0; a < res.messages.size(); a++) {\n        TLRPC.Message message=res.messages.get(a);\n        MessageObject messageObject=new MessageObject(currentAccount,message,false,true);\n        messageObjects.add(messageObject);\n        messageObject.setQuery(query);\n      }\n    }\n    AndroidUtilities.runOnUIThread(() -> {\n      if (currentReqId == lastReqId && (searchId <= 0 || searchId == lastSearchId)) {\n        waitingResponseCount--;\n        if (error == null) {\n          currentMessagesQuery=query;\n          TLRPC.messages_Messages res=(TLRPC.messages_Messages)response;\n          MessagesStorage.getInstance(currentAccount).putUsersAndChats(res.users,res.chats,true,true);\n          MessagesController.getInstance(currentAccount).putUsers(res.users,false);\n          MessagesController.getInstance(currentAccount).putChats(res.chats,false);\n          if (req.offset_id == 0) {\n            searchResultMessages.clear();\n          }\n          nextSearchRate=res.next_rate;\n          for (int a=0; a < res.messages.size(); a++) {\n            TLRPC.Message message=res.messages.get(a);\n            long did=MessageObject.getDialogId(message);\n            Integer maxId=MessagesController.getInstance(currentAccount).deletedHistory.get(did);\n            if (maxId != null && message.id <= maxId) {\n              continue;\n            }\n            searchResultMessages.add(messageObjects.get(a));\n            long dialog_id=MessageObject.getDialogId(message);\n            ConcurrentHashMap<Long,Integer> read_max=message.out ? MessagesController.getInstance(currentAccount).dialogs_read_outbox_max : MessagesController.getInstance(currentAccount).dialogs_read_inbox_max;\n            Integer value=read_max.get(dialog_id);\n            if (value == null) {\n              value=MessagesStorage.getInstance(currentAccount).getDialogReadMax(message.out,dialog_id);\n              read_max.put(dialog_id,value);\n            }\n            message.unread=value < message.id;\n          }\n          searchWas=true;\n          messagesSearchEndReached=res.messages.size() != 20;\n          if (searchId > 0) {\n            lastMessagesSearchId=searchId;\n            if (lastLocalSearchId != searchId) {\n              searchResult.clear();\n            }\n            if (lastGlobalSearchId != searchId) {\n              searchAdapterHelper.clear();\n            }\n          }\n          notifyDataSetChanged();\n          if (delegate != null) {\n            delegate.searchStateChanged(waitingResponseCount > 0,true);\n            delegate.runResultsEnterAnimation();\n          }\n        }\n      }\n      reqId=0;\n    }\n);\n  }\n,ConnectionsManager.RequestFlagFailOnServerErrors);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 664,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5712,
        "startLineNumber" : 246,
        "startColumnNumber" : 4,
        "endLineNumber" : 351,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void searchMessagesInternal(final String query,int searchId){\n  if (needMessagesSearch == 0 || TextUtils.isEmpty(lastMessagesSearchString) && TextUtils.isEmpty(query)) {\n    return;\n  }\n  if (reqId != 0) {\n    ConnectionsManager.getInstance(currentAccount).cancelRequest(reqId,true);\n    reqId=0;\n  }\n  if (TextUtils.isEmpty(query)) {\n    searchResultMessages.clear();\n    lastReqId=0;\n    lastMessagesSearchString=null;\n    searchWas=false;\n    notifyDataSetChanged();\n    return;\n  }\n  final TLRPC.TL_messages_searchGlobal req=new TLRPC.TL_messages_searchGlobal();\n  req.limit=20;\n  req.q=query;\n  req.filter=new TLRPC.TL_inputMessagesFilterEmpty();\n  req.flags|=1;\n  req.folder_id=folderId;\n  if (query.equals(lastMessagesSearchString) && !searchResultMessages.isEmpty()) {\n    MessageObject lastMessage=searchResultMessages.get(searchResultMessages.size() - 1);\n    req.offset_id=lastMessage.getId();\n    req.offset_rate=nextSearchRate;\n    int id;\n    if (lastMessage.messageOwner.peer_id.channel_id != 0) {\n      id=-lastMessage.messageOwner.peer_id.channel_id;\n    }\n else     if (lastMessage.messageOwner.peer_id.chat_id != 0) {\n      id=-lastMessage.messageOwner.peer_id.chat_id;\n    }\n else {\n      id=lastMessage.messageOwner.peer_id.user_id;\n    }\n    req.offset_peer=MessagesController.getInstance(currentAccount).getInputPeer(id);\n  }\n else {\n    req.offset_rate=0;\n    req.offset_id=0;\n    req.offset_peer=new TLRPC.TL_inputPeerEmpty();\n  }\n  lastMessagesSearchString=query;\n  final int currentReqId=++lastReqId;\n  reqId=ConnectionsManager.getInstance(currentAccount).sendRequest(req,(response,error) -> {\n    final ArrayList<MessageObject> messageObjects=new ArrayList<>();\n    if (error == null) {\n      TLRPC.messages_Messages res=(TLRPC.messages_Messages)response;\n      for (int a=0; a < res.messages.size(); a++) {\n        TLRPC.Message message=res.messages.get(a);\n        MessageObject messageObject=new MessageObject(currentAccount,message,false,true);\n        messageObjects.add(messageObject);\n        messageObject.setQuery(query);\n      }\n    }\n    AndroidUtilities.runOnUIThread(() -> {\n      if (currentReqId == lastReqId && (searchId <= 0 || searchId == lastSearchId)) {\n        waitingResponseCount--;\n        if (error == null) {\n          currentMessagesQuery=query;\n          TLRPC.messages_Messages res=(TLRPC.messages_Messages)response;\n          MessagesStorage.getInstance(currentAccount).putUsersAndChats(res.users,res.chats,true,true);\n          MessagesController.getInstance(currentAccount).putUsers(res.users,false);\n          MessagesController.getInstance(currentAccount).putChats(res.chats,false);\n          if (req.offset_id == 0) {\n            searchResultMessages.clear();\n          }\n          nextSearchRate=res.next_rate;\n          for (int a=0; a < res.messages.size(); a++) {\n            TLRPC.Message message=res.messages.get(a);\n            long did=MessageObject.getDialogId(message);\n            Integer maxId=MessagesController.getInstance(currentAccount).deletedHistory.get(did);\n            if (maxId != null && message.id <= maxId) {\n              continue;\n            }\n            searchResultMessages.add(messageObjects.get(a));\n            long dialog_id=MessageObject.getDialogId(message);\n            ConcurrentHashMap<Long,Integer> read_max=message.out ? MessagesController.getInstance(currentAccount).dialogs_read_outbox_max : MessagesController.getInstance(currentAccount).dialogs_read_inbox_max;\n            Integer value=read_max.get(dialog_id);\n            if (value == null) {\n              value=MessagesStorage.getInstance(currentAccount).getDialogReadMax(message.out,dialog_id);\n              read_max.put(dialog_id,value);\n            }\n            message.unread=value < message.id;\n          }\n          searchWas=true;\n          messagesSearchEndReached=res.messages.size() != 20;\n          if (searchId > 0) {\n            lastMessagesSearchId=searchId;\n            if (lastLocalSearchId != searchId) {\n              searchResult.clear();\n            }\n            if (lastGlobalSearchId != searchId) {\n              searchAdapterHelper.clear();\n            }\n          }\n          notifyDataSetChanged();\n          if (delegate != null) {\n            delegate.searchStateChanged(waitingResponseCount > 0,true);\n            delegate.runResultsEnterAnimation();\n          }\n        }\n      }\n      reqId=0;\n    }\n);\n  }\n,ConnectionsManager.RequestFlagFailOnServerErrors);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 676,
      "astHeight" : 24
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 275,
        "startColumnNumber" : 16,
        "endLineNumber" : 275,
        "endColumnNumber" : 66
      },
      "nodeContext" : "id=-lastMessage.messageOwner.peer_id.channel_id;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 7
    },
    "tokenLength" : 6,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 44,
    "startLineNumber" : 275,
    "startColumnNumber" : 21,
    "endLineNumber" : 275,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}