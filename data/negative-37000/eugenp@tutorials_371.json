{
  "id" : 371,
  "expression" : "forecastProcessor.getMaximumTemperature(\"New York\")",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/testing-modules/easymock/src/test/java/com/baeldung/testing/easymock/ForecastProcessorUnitTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "forecastProcessor.getMaximumTemperature(\"New York\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 51,
      "startLineNumber" : 45,
      "startColumnNumber" : 36,
      "endLineNumber" : 45,
      "endColumnNumber" : 87
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 45,
        "startColumnNumber" : 19,
        "endLineNumber" : 45,
        "endColumnNumber" : 87
      },
      "nodeContext" : "maxTemperature=forecastProcessor.getMaximumTemperature(\"New York\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 88
      },
      "nodeContext" : "BigDecimal maxTemperature=forecastProcessor.getMaximumTemperature(\"New York\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 706,
        "startLineNumber" : 35,
        "startColumnNumber" : 131,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  mockWeatherService.populateTemperature(EasyMock.anyObject(Location.class));\n  EasyMock.expectLastCall().andAnswer(() -> {\n    Location passedLocation=(Location)EasyMock.getCurrentArguments()[0];\n    passedLocation.setMaximumTemparature(new BigDecimal(MAX_TEMP));\n    passedLocation.setMinimumTemperature(new BigDecimal(MAX_TEMP - 10));\n    return null;\n  }\n);\n  EasyMock.replay(mockWeatherService);\n  BigDecimal maxTemperature=forecastProcessor.getMaximumTemperature(\"New York\");\n  EasyMock.verify(mockWeatherService);\n  assertThat(maxTemperature,equalTo(new BigDecimal(MAX_TEMP)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 878,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") @Test public void givenLocationName_whenWeatherServicePopulatesTemperatures_thenMaxTempReturned() throws ServiceUnavailableException {\n  mockWeatherService.populateTemperature(EasyMock.anyObject(Location.class));\n  EasyMock.expectLastCall().andAnswer(() -> {\n    Location passedLocation=(Location)EasyMock.getCurrentArguments()[0];\n    passedLocation.setMaximumTemparature(new BigDecimal(MAX_TEMP));\n    passedLocation.setMinimumTemperature(new BigDecimal(MAX_TEMP - 10));\n    return null;\n  }\n);\n  EasyMock.replay(mockWeatherService);\n  BigDecimal maxTemperature=forecastProcessor.getMaximumTemperature(\"New York\");\n  EasyMock.verify(mockWeatherService);\n  assertThat(maxTemperature,equalTo(new BigDecimal(MAX_TEMP)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 88
      },
      "nodeContext" : "BigDecimal maxTemperature=forecastProcessor.getMaximumTemperature(\"New York\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.math.BigDecimal"
  } ],
  "positionList" : [ {
    "charLength" : 51,
    "startLineNumber" : 45,
    "startColumnNumber" : 36,
    "endLineNumber" : 45,
    "endColumnNumber" : 87
  } ],
  "layoutRelationDataList" : [ ]
}