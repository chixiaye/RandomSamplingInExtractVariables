{
  "id" : 47,
  "expression" : "TypedValue",
  "projectName" : "iBotPeaches@Apktool",
  "commitID" : "719a25afd69d2211259a65d4fce197340cbae819",
  "filePath" : "/src/android/util/TypedValue.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TypedValue",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 178,
      "startColumnNumber" : 25,
      "endLineNumber" : 178,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 178,
        "startColumnNumber" : 25,
        "endLineNumber" : 178,
        "endColumnNumber" : 57
      },
      "nodeContext" : "TypedValue.COMPLEX_MANTISSA_MASK",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 178,
        "startColumnNumber" : 25,
        "endLineNumber" : 179,
        "endColumnNumber" : 54
      },
      "nodeContext" : "TypedValue.COMPLEX_MANTISSA_MASK << TypedValue.COMPLEX_MANTISSA_SHIFT",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 178,
        "startColumnNumber" : 24,
        "endLineNumber" : 179,
        "endColumnNumber" : 55
      },
      "nodeContext" : "(TypedValue.COMPLEX_MANTISSA_MASK << TypedValue.COMPLEX_MANTISSA_SHIFT)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 178,
        "startColumnNumber" : 16,
        "endLineNumber" : 179,
        "endColumnNumber" : 55
      },
      "nodeContext" : "complex & (TypedValue.COMPLEX_MANTISSA_MASK << TypedValue.COMPLEX_MANTISSA_SHIFT)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 178,
        "startColumnNumber" : 15,
        "endLineNumber" : 179,
        "endColumnNumber" : 56
      },
      "nodeContext" : "(complex & (TypedValue.COMPLEX_MANTISSA_MASK << TypedValue.COMPLEX_MANTISSA_SHIFT))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 228,
        "startLineNumber" : 178,
        "startColumnNumber" : 15,
        "endLineNumber" : 181,
        "endColumnNumber" : 60
      },
      "nodeContext" : "(complex & (TypedValue.COMPLEX_MANTISSA_MASK << TypedValue.COMPLEX_MANTISSA_SHIFT)) * RADIX_MULTS[(complex >> TypedValue.COMPLEX_RADIX_SHIFT) & TypedValue.COMPLEX_RADIX_MASK]",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 178,
        "startColumnNumber" : 8,
        "endLineNumber" : 181,
        "endColumnNumber" : 61
      },
      "nodeContext" : "return (complex & (TypedValue.COMPLEX_MANTISSA_MASK << TypedValue.COMPLEX_MANTISSA_SHIFT)) * RADIX_MULTS[(complex >> TypedValue.COMPLEX_RADIX_SHIFT) & TypedValue.COMPLEX_RADIX_MASK];\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 252,
        "startLineNumber" : 177,
        "startColumnNumber" : 4,
        "endLineNumber" : 182,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return (complex & (TypedValue.COMPLEX_MANTISSA_MASK << TypedValue.COMPLEX_MANTISSA_SHIFT)) * RADIX_MULTS[(complex >> TypedValue.COMPLEX_RADIX_SHIFT) & TypedValue.COMPLEX_RADIX_MASK];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 732,
        "startLineNumber" : 166,
        "startColumnNumber" : 4,
        "endLineNumber" : 182,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Retrieve the base value from a complex data integer.  This uses the  {@link #COMPLEX_MANTISSA_MASK} and {@link #COMPLEX_RADIX_MASK} fields of the data to compute a floating point representation of the number they  describe.  The units are ignored. \n * @param complex A complex data value.\n * @return A floating point value corresponding to the complex data.\n */\npublic static float complexToFloat(int complex){\n  return (complex & (TypedValue.COMPLEX_MANTISSA_MASK << TypedValue.COMPLEX_MANTISSA_SHIFT)) * RADIX_MULTS[(complex >> TypedValue.COMPLEX_RADIX_SHIFT) & TypedValue.COMPLEX_RADIX_MASK];\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 35,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 178,
        "startColumnNumber" : 25,
        "endLineNumber" : 178,
        "endColumnNumber" : 57
      },
      "nodeContext" : "TypedValue.COMPLEX_MANTISSA_MASK",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "android.util.TypedValue"
  }, {
    "nodeContext" : "TypedValue",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 179,
      "startColumnNumber" : 21,
      "endLineNumber" : 179,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 179,
        "startColumnNumber" : 21,
        "endLineNumber" : 179,
        "endColumnNumber" : 54
      },
      "nodeContext" : "TypedValue.COMPLEX_MANTISSA_SHIFT",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 178,
        "startColumnNumber" : 25,
        "endLineNumber" : 179,
        "endColumnNumber" : 54
      },
      "nodeContext" : "TypedValue.COMPLEX_MANTISSA_MASK << TypedValue.COMPLEX_MANTISSA_SHIFT",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 178,
        "startColumnNumber" : 24,
        "endLineNumber" : 179,
        "endColumnNumber" : 55
      },
      "nodeContext" : "(TypedValue.COMPLEX_MANTISSA_MASK << TypedValue.COMPLEX_MANTISSA_SHIFT)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 178,
        "startColumnNumber" : 16,
        "endLineNumber" : 179,
        "endColumnNumber" : 55
      },
      "nodeContext" : "complex & (TypedValue.COMPLEX_MANTISSA_MASK << TypedValue.COMPLEX_MANTISSA_SHIFT)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 178,
        "startColumnNumber" : 15,
        "endLineNumber" : 179,
        "endColumnNumber" : 56
      },
      "nodeContext" : "(complex & (TypedValue.COMPLEX_MANTISSA_MASK << TypedValue.COMPLEX_MANTISSA_SHIFT))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 228,
        "startLineNumber" : 178,
        "startColumnNumber" : 15,
        "endLineNumber" : 181,
        "endColumnNumber" : 60
      },
      "nodeContext" : "(complex & (TypedValue.COMPLEX_MANTISSA_MASK << TypedValue.COMPLEX_MANTISSA_SHIFT)) * RADIX_MULTS[(complex >> TypedValue.COMPLEX_RADIX_SHIFT) & TypedValue.COMPLEX_RADIX_MASK]",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 178,
        "startColumnNumber" : 8,
        "endLineNumber" : 181,
        "endColumnNumber" : 61
      },
      "nodeContext" : "return (complex & (TypedValue.COMPLEX_MANTISSA_MASK << TypedValue.COMPLEX_MANTISSA_SHIFT)) * RADIX_MULTS[(complex >> TypedValue.COMPLEX_RADIX_SHIFT) & TypedValue.COMPLEX_RADIX_MASK];\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 252,
        "startLineNumber" : 177,
        "startColumnNumber" : 4,
        "endLineNumber" : 182,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return (complex & (TypedValue.COMPLEX_MANTISSA_MASK << TypedValue.COMPLEX_MANTISSA_SHIFT)) * RADIX_MULTS[(complex >> TypedValue.COMPLEX_RADIX_SHIFT) & TypedValue.COMPLEX_RADIX_MASK];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 732,
        "startLineNumber" : 166,
        "startColumnNumber" : 4,
        "endLineNumber" : 182,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Retrieve the base value from a complex data integer.  This uses the  {@link #COMPLEX_MANTISSA_MASK} and {@link #COMPLEX_RADIX_MASK} fields of the data to compute a floating point representation of the number they  describe.  The units are ignored. \n * @param complex A complex data value.\n * @return A floating point value corresponding to the complex data.\n */\npublic static float complexToFloat(int complex){\n  return (complex & (TypedValue.COMPLEX_MANTISSA_MASK << TypedValue.COMPLEX_MANTISSA_SHIFT)) * RADIX_MULTS[(complex >> TypedValue.COMPLEX_RADIX_SHIFT) & TypedValue.COMPLEX_RADIX_MASK];\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 35,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 179,
        "startColumnNumber" : 21,
        "endLineNumber" : 179,
        "endColumnNumber" : 54
      },
      "nodeContext" : "TypedValue.COMPLEX_MANTISSA_SHIFT",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "android.util.TypedValue"
  }, {
    "nodeContext" : "TypedValue",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 180,
      "startColumnNumber" : 36,
      "endLineNumber" : 180,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 180,
        "startColumnNumber" : 36,
        "endLineNumber" : 180,
        "endColumnNumber" : 66
      },
      "nodeContext" : "TypedValue.COMPLEX_RADIX_SHIFT",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 180,
        "startColumnNumber" : 27,
        "endLineNumber" : 180,
        "endColumnNumber" : 66
      },
      "nodeContext" : "complex >> TypedValue.COMPLEX_RADIX_SHIFT",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 180,
        "startColumnNumber" : 26,
        "endLineNumber" : 180,
        "endColumnNumber" : 67
      },
      "nodeContext" : "(complex >> TypedValue.COMPLEX_RADIX_SHIFT)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,index]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 180,
        "startColumnNumber" : 26,
        "endLineNumber" : 181,
        "endColumnNumber" : 59
      },
      "nodeContext" : "(complex >> TypedValue.COMPLEX_RADIX_SHIFT) & TypedValue.COMPLEX_RADIX_MASK",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 180,
        "startColumnNumber" : 14,
        "endLineNumber" : 181,
        "endColumnNumber" : 60
      },
      "nodeContext" : "RADIX_MULTS[(complex >> TypedValue.COMPLEX_RADIX_SHIFT) & TypedValue.COMPLEX_RADIX_MASK]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 228,
        "startLineNumber" : 178,
        "startColumnNumber" : 15,
        "endLineNumber" : 181,
        "endColumnNumber" : 60
      },
      "nodeContext" : "(complex & (TypedValue.COMPLEX_MANTISSA_MASK << TypedValue.COMPLEX_MANTISSA_SHIFT)) * RADIX_MULTS[(complex >> TypedValue.COMPLEX_RADIX_SHIFT) & TypedValue.COMPLEX_RADIX_MASK]",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 178,
        "startColumnNumber" : 8,
        "endLineNumber" : 181,
        "endColumnNumber" : 61
      },
      "nodeContext" : "return (complex & (TypedValue.COMPLEX_MANTISSA_MASK << TypedValue.COMPLEX_MANTISSA_SHIFT)) * RADIX_MULTS[(complex >> TypedValue.COMPLEX_RADIX_SHIFT) & TypedValue.COMPLEX_RADIX_MASK];\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 252,
        "startLineNumber" : 177,
        "startColumnNumber" : 4,
        "endLineNumber" : 182,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return (complex & (TypedValue.COMPLEX_MANTISSA_MASK << TypedValue.COMPLEX_MANTISSA_SHIFT)) * RADIX_MULTS[(complex >> TypedValue.COMPLEX_RADIX_SHIFT) & TypedValue.COMPLEX_RADIX_MASK];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 732,
        "startLineNumber" : 166,
        "startColumnNumber" : 4,
        "endLineNumber" : 182,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Retrieve the base value from a complex data integer.  This uses the  {@link #COMPLEX_MANTISSA_MASK} and {@link #COMPLEX_RADIX_MASK} fields of the data to compute a floating point representation of the number they  describe.  The units are ignored. \n * @param complex A complex data value.\n * @return A floating point value corresponding to the complex data.\n */\npublic static float complexToFloat(int complex){\n  return (complex & (TypedValue.COMPLEX_MANTISSA_MASK << TypedValue.COMPLEX_MANTISSA_SHIFT)) * RADIX_MULTS[(complex >> TypedValue.COMPLEX_RADIX_SHIFT) & TypedValue.COMPLEX_RADIX_MASK];\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 35,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 180,
        "startColumnNumber" : 26,
        "endLineNumber" : 180,
        "endColumnNumber" : 67
      },
      "nodeContext" : "(complex >> TypedValue.COMPLEX_RADIX_SHIFT)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "android.util.TypedValue"
  }, {
    "nodeContext" : "TypedValue",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 181,
      "startColumnNumber" : 30,
      "endLineNumber" : 181,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 181,
        "startColumnNumber" : 30,
        "endLineNumber" : 181,
        "endColumnNumber" : 59
      },
      "nodeContext" : "TypedValue.COMPLEX_RADIX_MASK",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,index]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 180,
        "startColumnNumber" : 26,
        "endLineNumber" : 181,
        "endColumnNumber" : 59
      },
      "nodeContext" : "(complex >> TypedValue.COMPLEX_RADIX_SHIFT) & TypedValue.COMPLEX_RADIX_MASK",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 180,
        "startColumnNumber" : 14,
        "endLineNumber" : 181,
        "endColumnNumber" : 60
      },
      "nodeContext" : "RADIX_MULTS[(complex >> TypedValue.COMPLEX_RADIX_SHIFT) & TypedValue.COMPLEX_RADIX_MASK]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 228,
        "startLineNumber" : 178,
        "startColumnNumber" : 15,
        "endLineNumber" : 181,
        "endColumnNumber" : 60
      },
      "nodeContext" : "(complex & (TypedValue.COMPLEX_MANTISSA_MASK << TypedValue.COMPLEX_MANTISSA_SHIFT)) * RADIX_MULTS[(complex >> TypedValue.COMPLEX_RADIX_SHIFT) & TypedValue.COMPLEX_RADIX_MASK]",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 178,
        "startColumnNumber" : 8,
        "endLineNumber" : 181,
        "endColumnNumber" : 61
      },
      "nodeContext" : "return (complex & (TypedValue.COMPLEX_MANTISSA_MASK << TypedValue.COMPLEX_MANTISSA_SHIFT)) * RADIX_MULTS[(complex >> TypedValue.COMPLEX_RADIX_SHIFT) & TypedValue.COMPLEX_RADIX_MASK];\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 252,
        "startLineNumber" : 177,
        "startColumnNumber" : 4,
        "endLineNumber" : 182,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return (complex & (TypedValue.COMPLEX_MANTISSA_MASK << TypedValue.COMPLEX_MANTISSA_SHIFT)) * RADIX_MULTS[(complex >> TypedValue.COMPLEX_RADIX_SHIFT) & TypedValue.COMPLEX_RADIX_MASK];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 732,
        "startLineNumber" : 166,
        "startColumnNumber" : 4,
        "endLineNumber" : 182,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Retrieve the base value from a complex data integer.  This uses the  {@link #COMPLEX_MANTISSA_MASK} and {@link #COMPLEX_RADIX_MASK} fields of the data to compute a floating point representation of the number they  describe.  The units are ignored. \n * @param complex A complex data value.\n * @return A floating point value corresponding to the complex data.\n */\npublic static float complexToFloat(int complex){\n  return (complex & (TypedValue.COMPLEX_MANTISSA_MASK << TypedValue.COMPLEX_MANTISSA_SHIFT)) * RADIX_MULTS[(complex >> TypedValue.COMPLEX_RADIX_SHIFT) & TypedValue.COMPLEX_RADIX_MASK];\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 35,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 181,
        "startColumnNumber" : 30,
        "endLineNumber" : 181,
        "endColumnNumber" : 59
      },
      "nodeContext" : "TypedValue.COMPLEX_RADIX_MASK",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "android.util.TypedValue"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 178,
    "startColumnNumber" : 25,
    "endLineNumber" : 178,
    "endColumnNumber" : 35
  }, {
    "charLength" : 10,
    "startLineNumber" : 179,
    "startColumnNumber" : 21,
    "endLineNumber" : 179,
    "endColumnNumber" : 31
  }, {
    "charLength" : 10,
    "startLineNumber" : 180,
    "startColumnNumber" : 36,
    "endLineNumber" : 180,
    "endColumnNumber" : 46
  }, {
    "charLength" : 10,
    "startLineNumber" : 181,
    "startColumnNumber" : 30,
    "endLineNumber" : 181,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 1
  } ]
}