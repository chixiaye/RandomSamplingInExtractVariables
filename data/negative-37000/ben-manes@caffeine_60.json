{
  "id" : 60,
  "expression" : "100",
  "projectName" : "ben-manes@caffeine",
  "commitID" : "30ca3d80d9dc7aa20adceacfc5fff1659bbadb8e",
  "filePath" : "/src/test/java/com/github/benmanes/caffeine/cache/CacheTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "100",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 270,
      "startColumnNumber" : 25,
      "endLineNumber" : 270,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 270,
        "startColumnNumber" : 25,
        "endLineNumber" : 270,
        "endColumnNumber" : 39
      },
      "nodeContext" : "100 + startKey",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 269,
        "startColumnNumber" : 36,
        "endLineNumber" : 270,
        "endColumnNumber" : 40
      },
      "nodeContext" : "IntStream.range(startKey,100 + startKey)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 269,
        "startColumnNumber" : 36,
        "endLineNumber" : 270,
        "endColumnNumber" : 48
      },
      "nodeContext" : "IntStream.range(startKey,100 + startKey).boxed()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 269,
        "startColumnNumber" : 36,
        "endLineNumber" : 271,
        "endColumnNumber" : 68
      },
      "nodeContext" : "IntStream.range(startKey,100 + startKey).boxed().collect(Collectors.toMap(Function.identity(),key -> -key))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 269,
        "startColumnNumber" : 26,
        "endLineNumber" : 271,
        "endColumnNumber" : 68
      },
      "nodeContext" : "entries=IntStream.range(startKey,100 + startKey).boxed().collect(Collectors.toMap(Function.identity(),key -> -key))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 269,
        "startColumnNumber" : 4,
        "endLineNumber" : 271,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Map<Integer,Integer> entries=IntStream.range(startKey,100 + startKey).boxed().collect(Collectors.toMap(Function.identity(),key -> -key));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 317,
        "startLineNumber" : 267,
        "startColumnNumber" : 81,
        "endLineNumber" : 274,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int startKey=context.original().size() + 1;\n  Map<Integer,Integer> entries=IntStream.range(startKey,100 + startKey).boxed().collect(Collectors.toMap(Function.identity(),key -> -key));\n  cache.putAll(entries);\n  assertThat(cache.size(),is(100 + context.initialSize()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 504,
        "startLineNumber" : 265,
        "startColumnNumber" : 2,
        "endLineNumber" : 274,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test(dataProvider=\"caches\") @CacheSpec(removalListener={Listener.DEFAULT,Listener.REJECTING}) public void putAll_insert(Cache<Integer,Integer> cache,CacheContext context){\n  int startKey=context.original().size() + 1;\n  Map<Integer,Integer> entries=IntStream.range(startKey,100 + startKey).boxed().collect(Collectors.toMap(Function.identity(),key -> -key));\n  cache.putAll(entries);\n  assertThat(cache.size(),is(100 + context.initialSize()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 95,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 270,
        "startColumnNumber" : 25,
        "endLineNumber" : 270,
        "endColumnNumber" : 39
      },
      "nodeContext" : "100 + startKey",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "100",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 273,
      "startColumnNumber" : 32,
      "endLineNumber" : 273,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 273,
        "startColumnNumber" : 32,
        "endLineNumber" : 273,
        "endColumnNumber" : 59
      },
      "nodeContext" : "100 + context.initialSize()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 273,
        "startColumnNumber" : 29,
        "endLineNumber" : 273,
        "endColumnNumber" : 60
      },
      "nodeContext" : "is(100 + context.initialSize())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 273,
        "startColumnNumber" : 4,
        "endLineNumber" : 273,
        "endColumnNumber" : 61
      },
      "nodeContext" : "assertThat(cache.size(),is(100 + context.initialSize()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 273,
        "startColumnNumber" : 4,
        "endLineNumber" : 273,
        "endColumnNumber" : 62
      },
      "nodeContext" : "assertThat(cache.size(),is(100 + context.initialSize()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 317,
        "startLineNumber" : 267,
        "startColumnNumber" : 81,
        "endLineNumber" : 274,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int startKey=context.original().size() + 1;\n  Map<Integer,Integer> entries=IntStream.range(startKey,100 + startKey).boxed().collect(Collectors.toMap(Function.identity(),key -> -key));\n  cache.putAll(entries);\n  assertThat(cache.size(),is(100 + context.initialSize()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 504,
        "startLineNumber" : 265,
        "startColumnNumber" : 2,
        "endLineNumber" : 274,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test(dataProvider=\"caches\") @CacheSpec(removalListener={Listener.DEFAULT,Listener.REJECTING}) public void putAll_insert(Cache<Integer,Integer> cache,CacheContext context){\n  int startKey=context.original().size() + 1;\n  Map<Integer,Integer> entries=IntStream.range(startKey,100 + startKey).boxed().collect(Collectors.toMap(Function.identity(),key -> -key));\n  cache.putAll(entries);\n  assertThat(cache.size(),is(100 + context.initialSize()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 95,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 273,
        "startColumnNumber" : 4,
        "endLineNumber" : 273,
        "endColumnNumber" : 62
      },
      "nodeContext" : "assertThat(cache.size(),is(100 + context.initialSize()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 270,
    "startColumnNumber" : 25,
    "endLineNumber" : 270,
    "endColumnNumber" : 28
  }, {
    "charLength" : 3,
    "startLineNumber" : 273,
    "startColumnNumber" : 32,
    "endLineNumber" : 273,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}