{
  "id" : 487,
  "expression" : "unresolvedAddress",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/resolver/src/main/java/io/netty/resolver/InetSocketAddressResolver.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "unresolvedAddress",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 55,
      "startColumnNumber" : 29,
      "endLineNumber" : 55,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 55,
        "startColumnNumber" : 29,
        "endLineNumber" : 55,
        "endColumnNumber" : 60
      },
      "nodeContext" : "unresolvedAddress.getHostName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 61
      },
      "nodeContext" : "nameResolver.resolve(unresolvedAddress.getHostName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 390,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 18
      },
      "nodeContext" : "nameResolver.resolve(unresolvedAddress.getHostName()).addListener(future -> {\n  if (future.isSuccess()) {\n    promise.setSuccess(new InetSocketAddress(future.getNow(),unresolvedAddress.getPort()));\n  }\n else {\n    promise.setFailure(future.cause());\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 38,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 391,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 19
      },
      "nodeContext" : "nameResolver.resolve(unresolvedAddress.getHostName()).addListener(future -> {\n  if (future.isSuccess()) {\n    promise.setSuccess(new InetSocketAddress(future.getNow(),unresolvedAddress.getPort()));\n  }\n else {\n    promise.setFailure(future.cause());\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 39,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 569,
        "startLineNumber" : 52,
        "startColumnNumber" : 29,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  nameResolver.resolve(unresolvedAddress.getHostName()).addListener(future -> {\n    if (future.isSuccess()) {\n      promise.setSuccess(new InetSocketAddress(future.getNow(),unresolvedAddress.getPort()));\n    }\n else {\n      promise.setFailure(future.cause());\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 724,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void doResolve(final InetSocketAddress unresolvedAddress,final Promise<InetSocketAddress> promise) throws Exception {\n  nameResolver.resolve(unresolvedAddress.getHostName()).addListener(future -> {\n    if (future.isSuccess()) {\n      promise.setSuccess(new InetSocketAddress(future.getNow(),unresolvedAddress.getPort()));\n    }\n else {\n      promise.setFailure(future.cause());\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 61,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 61
      },
      "nodeContext" : "nameResolver.resolve(unresolvedAddress.getHostName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.net.InetSocketAddress"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 55,
    "startColumnNumber" : 29,
    "endLineNumber" : 55,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}