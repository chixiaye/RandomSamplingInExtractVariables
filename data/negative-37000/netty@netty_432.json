{
  "id" : 432,
  "expression" : "tryNoCleaner",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/buffer/src/main/java/io/netty/buffer/UnpooledByteBufAllocator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "tryNoCleaner",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 76,
      "startColumnNumber" : 20,
      "endLineNumber" : 76,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 76,
        "startColumnNumber" : 20,
        "endLineNumber" : 77,
        "endColumnNumber" : 74
      },
      "nodeContext" : "tryNoCleaner && PlatformDependent.hasUnsafe() && PlatformDependent.hasDirectBufferNoCleanerConstructor()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 74
      },
      "nodeContext" : "noCleaner=tryNoCleaner && PlatformDependent.hasUnsafe() && PlatformDependent.hasDirectBufferNoCleanerConstructor()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 75
      },
      "nodeContext" : "noCleaner=tryNoCleaner && PlatformDependent.hasUnsafe() && PlatformDependent.hasDirectBufferNoCleanerConstructor();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 239,
        "startLineNumber" : 73,
        "startColumnNumber" : 109,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(preferDirect);\n  this.disableLeakDetector=disableLeakDetector;\n  noCleaner=tryNoCleaner && PlatformDependent.hasUnsafe() && PlatformDependent.hasDirectBufferNoCleanerConstructor();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1044,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Create a new instance\n * @param preferDirect {@code true} if {@link #buffer(int)} should try to allocate a direct buffer rather thana heap buffer\n * @param disableLeakDetector {@code true} if the leak-detection should be disabled completely for thisallocator. This can be useful if the user just want to depend on the GC to handle direct buffers when not explicit released.\n * @param tryNoCleaner {@code true} if we should try to use {@link PlatformDependent#allocateDirectNoCleaner(int)}to allocate direct memory.\n */\npublic UnpooledByteBufAllocator(boolean preferDirect,boolean disableLeakDetector,boolean tryNoCleaner){\n  super(preferDirect);\n  this.disableLeakDetector=disableLeakDetector;\n  noCleaner=tryNoCleaner && PlatformDependent.hasUnsafe() && PlatformDependent.hasDirectBufferNoCleanerConstructor();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 33,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 76,
        "startColumnNumber" : 20,
        "endLineNumber" : 77,
        "endColumnNumber" : 74
      },
      "nodeContext" : "tryNoCleaner && PlatformDependent.hasUnsafe() && PlatformDependent.hasDirectBufferNoCleanerConstructor()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 76,
    "startColumnNumber" : 20,
    "endLineNumber" : 76,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}