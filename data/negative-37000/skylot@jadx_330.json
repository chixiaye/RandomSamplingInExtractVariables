{
  "id" : 330,
  "expression" : "arg",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/main/java/jadx/core/dex/visitors/PrepareForCodeGen.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "arg",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 112,
      "startColumnNumber" : 9,
      "endLineNumber" : 112,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 112,
        "startColumnNumber" : 9,
        "endLineNumber" : 112,
        "endColumnNumber" : 25
      },
      "nodeContext" : "arg.isInsnWrap()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 155,
        "startLineNumber" : 112,
        "startColumnNumber" : 5,
        "endLineNumber" : 116,
        "endColumnNumber" : 6
      },
      "nodeContext" : "if (arg.isInsnWrap()) {\n  InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n  wrapInsn.add(AFlag.DONT_WRAP);\n  checkInsn(wrapInsn);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 28,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 110,
        "startColumnNumber" : 32,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  InsnArg arg=arith.getArg(i);\n  if (arg.isInsnWrap()) {\n    InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n    wrapInsn.add(AFlag.DONT_WRAP);\n    checkInsn(wrapInsn);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 232,
        "startLineNumber" : 110,
        "startColumnNumber" : 4,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < 2; i++) {\n  InsnArg arg=arith.getArg(i);\n  if (arg.isInsnWrap()) {\n    InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n    wrapInsn.add(AFlag.DONT_WRAP);\n    checkInsn(wrapInsn);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 49,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 109,
        "startColumnNumber" : 47,
        "endLineNumber" : 118,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  for (int i=0; i < 2; i++) {\n    InsnArg arg=arith.getArg(i);\n    if (arg.isInsnWrap()) {\n      InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n      wrapInsn.add(AFlag.DONT_WRAP);\n      checkInsn(wrapInsn);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 287,
        "startLineNumber" : 109,
        "startColumnNumber" : 3,
        "endLineNumber" : 118,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (op == ArithOp.ADD || op == ArithOp.SUB) {\n  for (int i=0; i < 2; i++) {\n    InsnArg arg=arith.getArg(i);\n    if (arg.isInsnWrap()) {\n      InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n      wrapInsn.add(AFlag.DONT_WRAP);\n      checkInsn(wrapInsn);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 106,
        "startColumnNumber" : 40,
        "endLineNumber" : 119,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ArithNode arith=(ArithNode)insn;\n  ArithOp op=arith.getOp();\n  if (op == ArithOp.ADD || op == ArithOp.SUB) {\n    for (int i=0; i < 2; i++) {\n      InsnArg arg=arith.getArg(i);\n      if (arg.isInsnWrap()) {\n        InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n        wrapInsn.add(AFlag.DONT_WRAP);\n        checkInsn(wrapInsn);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 585,
        "startLineNumber" : 106,
        "startColumnNumber" : 2,
        "endLineNumber" : 126,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (insn.getType() == InsnType.ARITH) {\n  ArithNode arith=(ArithNode)insn;\n  ArithOp op=arith.getOp();\n  if (op == ArithOp.ADD || op == ArithOp.SUB) {\n    for (int i=0; i < 2; i++) {\n      InsnArg arg=arith.getArg(i);\n      if (arg.isInsnWrap()) {\n        InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n        wrapInsn.add(AFlag.DONT_WRAP);\n        checkInsn(wrapInsn);\n      }\n    }\n  }\n}\n else {\n  for (  InsnArg arg : insn.getArguments()) {\n    if (arg.isInsnWrap()) {\n      InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n      checkInsn(wrapInsn);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 119,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 592,
        "startLineNumber" : 105,
        "startColumnNumber" : 46,
        "endLineNumber" : 127,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (insn.getType() == InsnType.ARITH) {\n    ArithNode arith=(ArithNode)insn;\n    ArithOp op=arith.getOp();\n    if (op == ArithOp.ADD || op == ArithOp.SUB) {\n      for (int i=0; i < 2; i++) {\n        InsnArg arg=arith.getArg(i);\n        if (arg.isInsnWrap()) {\n          InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n          wrapInsn.add(AFlag.DONT_WRAP);\n          checkInsn(wrapInsn);\n        }\n      }\n    }\n  }\n else {\n    for (    InsnArg arg : insn.getArguments()) {\n      if (arg.isInsnWrap()) {\n        InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n        checkInsn(wrapInsn);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 742,
        "startLineNumber" : 101,
        "startColumnNumber" : 1,
        "endLineNumber" : 127,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Remove parenthesis for wrapped insn  in arith '+' or '-' ('(a + b) +c' => 'a + b + c')\n */\nprivate static void checkInsn(InsnNode insn){\n  if (insn.getType() == InsnType.ARITH) {\n    ArithNode arith=(ArithNode)insn;\n    ArithOp op=arith.getOp();\n    if (op == ArithOp.ADD || op == ArithOp.SUB) {\n      for (int i=0; i < 2; i++) {\n        InsnArg arg=arith.getArg(i);\n        if (arg.isInsnWrap()) {\n          InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n          wrapInsn.add(AFlag.DONT_WRAP);\n          checkInsn(wrapInsn);\n        }\n      }\n    }\n  }\n else {\n    for (    InsnArg arg : insn.getArguments()) {\n      if (arg.isInsnWrap()) {\n        InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n        checkInsn(wrapInsn);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 130,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 112,
        "startColumnNumber" : 9,
        "endLineNumber" : 112,
        "endColumnNumber" : 25
      },
      "nodeContext" : "arg.isInsnWrap()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "jadx.core.dex.instructions.args.InsnArg"
  }, {
    "nodeContext" : "arg",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 113,
      "startColumnNumber" : 41,
      "endLineNumber" : 113,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 113,
        "startColumnNumber" : 27,
        "endLineNumber" : 113,
        "endColumnNumber" : 44
      },
      "nodeContext" : "(InsnWrapArg)arg",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 113,
        "startColumnNumber" : 26,
        "endLineNumber" : 113,
        "endColumnNumber" : 45
      },
      "nodeContext" : "((InsnWrapArg)arg)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 113,
        "startColumnNumber" : 26,
        "endLineNumber" : 113,
        "endColumnNumber" : 59
      },
      "nodeContext" : "((InsnWrapArg)arg).getWrapInsn()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 113,
        "startColumnNumber" : 15,
        "endLineNumber" : 113,
        "endColumnNumber" : 59
      },
      "nodeContext" : "wrapInsn=((InsnWrapArg)arg).getWrapInsn()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 113,
        "startColumnNumber" : 6,
        "endLineNumber" : 113,
        "endColumnNumber" : 60
      },
      "nodeContext" : "InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 112,
        "startColumnNumber" : 27,
        "endLineNumber" : 116,
        "endColumnNumber" : 6
      },
      "nodeContext" : "{\n  InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n  wrapInsn.add(AFlag.DONT_WRAP);\n  checkInsn(wrapInsn);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 155,
        "startLineNumber" : 112,
        "startColumnNumber" : 5,
        "endLineNumber" : 116,
        "endColumnNumber" : 6
      },
      "nodeContext" : "if (arg.isInsnWrap()) {\n  InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n  wrapInsn.add(AFlag.DONT_WRAP);\n  checkInsn(wrapInsn);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 28,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 110,
        "startColumnNumber" : 32,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  InsnArg arg=arith.getArg(i);\n  if (arg.isInsnWrap()) {\n    InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n    wrapInsn.add(AFlag.DONT_WRAP);\n    checkInsn(wrapInsn);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 232,
        "startLineNumber" : 110,
        "startColumnNumber" : 4,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < 2; i++) {\n  InsnArg arg=arith.getArg(i);\n  if (arg.isInsnWrap()) {\n    InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n    wrapInsn.add(AFlag.DONT_WRAP);\n    checkInsn(wrapInsn);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 49,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 109,
        "startColumnNumber" : 47,
        "endLineNumber" : 118,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  for (int i=0; i < 2; i++) {\n    InsnArg arg=arith.getArg(i);\n    if (arg.isInsnWrap()) {\n      InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n      wrapInsn.add(AFlag.DONT_WRAP);\n      checkInsn(wrapInsn);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 287,
        "startLineNumber" : 109,
        "startColumnNumber" : 3,
        "endLineNumber" : 118,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (op == ArithOp.ADD || op == ArithOp.SUB) {\n  for (int i=0; i < 2; i++) {\n    InsnArg arg=arith.getArg(i);\n    if (arg.isInsnWrap()) {\n      InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n      wrapInsn.add(AFlag.DONT_WRAP);\n      checkInsn(wrapInsn);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 106,
        "startColumnNumber" : 40,
        "endLineNumber" : 119,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ArithNode arith=(ArithNode)insn;\n  ArithOp op=arith.getOp();\n  if (op == ArithOp.ADD || op == ArithOp.SUB) {\n    for (int i=0; i < 2; i++) {\n      InsnArg arg=arith.getArg(i);\n      if (arg.isInsnWrap()) {\n        InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n        wrapInsn.add(AFlag.DONT_WRAP);\n        checkInsn(wrapInsn);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 585,
        "startLineNumber" : 106,
        "startColumnNumber" : 2,
        "endLineNumber" : 126,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (insn.getType() == InsnType.ARITH) {\n  ArithNode arith=(ArithNode)insn;\n  ArithOp op=arith.getOp();\n  if (op == ArithOp.ADD || op == ArithOp.SUB) {\n    for (int i=0; i < 2; i++) {\n      InsnArg arg=arith.getArg(i);\n      if (arg.isInsnWrap()) {\n        InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n        wrapInsn.add(AFlag.DONT_WRAP);\n        checkInsn(wrapInsn);\n      }\n    }\n  }\n}\n else {\n  for (  InsnArg arg : insn.getArguments()) {\n    if (arg.isInsnWrap()) {\n      InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n      checkInsn(wrapInsn);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 119,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 592,
        "startLineNumber" : 105,
        "startColumnNumber" : 46,
        "endLineNumber" : 127,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (insn.getType() == InsnType.ARITH) {\n    ArithNode arith=(ArithNode)insn;\n    ArithOp op=arith.getOp();\n    if (op == ArithOp.ADD || op == ArithOp.SUB) {\n      for (int i=0; i < 2; i++) {\n        InsnArg arg=arith.getArg(i);\n        if (arg.isInsnWrap()) {\n          InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n          wrapInsn.add(AFlag.DONT_WRAP);\n          checkInsn(wrapInsn);\n        }\n      }\n    }\n  }\n else {\n    for (    InsnArg arg : insn.getArguments()) {\n      if (arg.isInsnWrap()) {\n        InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n        checkInsn(wrapInsn);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 742,
        "startLineNumber" : 101,
        "startColumnNumber" : 1,
        "endLineNumber" : 127,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Remove parenthesis for wrapped insn  in arith '+' or '-' ('(a + b) +c' => 'a + b + c')\n */\nprivate static void checkInsn(InsnNode insn){\n  if (insn.getType() == InsnType.ARITH) {\n    ArithNode arith=(ArithNode)insn;\n    ArithOp op=arith.getOp();\n    if (op == ArithOp.ADD || op == ArithOp.SUB) {\n      for (int i=0; i < 2; i++) {\n        InsnArg arg=arith.getArg(i);\n        if (arg.isInsnWrap()) {\n          InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n          wrapInsn.add(AFlag.DONT_WRAP);\n          checkInsn(wrapInsn);\n        }\n      }\n    }\n  }\n else {\n    for (    InsnArg arg : insn.getArguments()) {\n      if (arg.isInsnWrap()) {\n        InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n        checkInsn(wrapInsn);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 130,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 113,
        "startColumnNumber" : 6,
        "endLineNumber" : 113,
        "endColumnNumber" : 60
      },
      "nodeContext" : "InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "jadx.core.dex.instructions.args.InsnArg"
  }, {
    "nodeContext" : "arg",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 121,
      "startColumnNumber" : 8,
      "endLineNumber" : 121,
      "endColumnNumber" : 11
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 121,
        "startColumnNumber" : 8,
        "endLineNumber" : 121,
        "endColumnNumber" : 24
      },
      "nodeContext" : "arg.isInsnWrap()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 121,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (arg.isInsnWrap()) {\n  InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n  checkInsn(wrapInsn);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 120,
        "startColumnNumber" : 43,
        "endLineNumber" : 125,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (arg.isInsnWrap()) {\n    InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n    checkInsn(wrapInsn);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 166,
        "startLineNumber" : 120,
        "startColumnNumber" : 3,
        "endLineNumber" : 125,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (InsnArg arg : insn.getArguments()) {\n  if (arg.isInsnWrap()) {\n    InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n    checkInsn(wrapInsn);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 30,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 119,
        "startColumnNumber" : 9,
        "endLineNumber" : 126,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (  InsnArg arg : insn.getArguments()) {\n    if (arg.isInsnWrap()) {\n      InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n      checkInsn(wrapInsn);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 585,
        "startLineNumber" : 106,
        "startColumnNumber" : 2,
        "endLineNumber" : 126,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (insn.getType() == InsnType.ARITH) {\n  ArithNode arith=(ArithNode)insn;\n  ArithOp op=arith.getOp();\n  if (op == ArithOp.ADD || op == ArithOp.SUB) {\n    for (int i=0; i < 2; i++) {\n      InsnArg arg=arith.getArg(i);\n      if (arg.isInsnWrap()) {\n        InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n        wrapInsn.add(AFlag.DONT_WRAP);\n        checkInsn(wrapInsn);\n      }\n    }\n  }\n}\n else {\n  for (  InsnArg arg : insn.getArguments()) {\n    if (arg.isInsnWrap()) {\n      InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n      checkInsn(wrapInsn);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 119,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 592,
        "startLineNumber" : 105,
        "startColumnNumber" : 46,
        "endLineNumber" : 127,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (insn.getType() == InsnType.ARITH) {\n    ArithNode arith=(ArithNode)insn;\n    ArithOp op=arith.getOp();\n    if (op == ArithOp.ADD || op == ArithOp.SUB) {\n      for (int i=0; i < 2; i++) {\n        InsnArg arg=arith.getArg(i);\n        if (arg.isInsnWrap()) {\n          InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n          wrapInsn.add(AFlag.DONT_WRAP);\n          checkInsn(wrapInsn);\n        }\n      }\n    }\n  }\n else {\n    for (    InsnArg arg : insn.getArguments()) {\n      if (arg.isInsnWrap()) {\n        InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n        checkInsn(wrapInsn);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 742,
        "startLineNumber" : 101,
        "startColumnNumber" : 1,
        "endLineNumber" : 127,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Remove parenthesis for wrapped insn  in arith '+' or '-' ('(a + b) +c' => 'a + b + c')\n */\nprivate static void checkInsn(InsnNode insn){\n  if (insn.getType() == InsnType.ARITH) {\n    ArithNode arith=(ArithNode)insn;\n    ArithOp op=arith.getOp();\n    if (op == ArithOp.ADD || op == ArithOp.SUB) {\n      for (int i=0; i < 2; i++) {\n        InsnArg arg=arith.getArg(i);\n        if (arg.isInsnWrap()) {\n          InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n          wrapInsn.add(AFlag.DONT_WRAP);\n          checkInsn(wrapInsn);\n        }\n      }\n    }\n  }\n else {\n    for (    InsnArg arg : insn.getArguments()) {\n      if (arg.isInsnWrap()) {\n        InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n        checkInsn(wrapInsn);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 130,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 121,
        "startColumnNumber" : 8,
        "endLineNumber" : 121,
        "endColumnNumber" : 24
      },
      "nodeContext" : "arg.isInsnWrap()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "jadx.core.dex.instructions.args.InsnArg"
  }, {
    "nodeContext" : "arg",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 122,
      "startColumnNumber" : 40,
      "endLineNumber" : 122,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 122,
        "startColumnNumber" : 26,
        "endLineNumber" : 122,
        "endColumnNumber" : 43
      },
      "nodeContext" : "(InsnWrapArg)arg",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 122,
        "startColumnNumber" : 25,
        "endLineNumber" : 122,
        "endColumnNumber" : 44
      },
      "nodeContext" : "((InsnWrapArg)arg)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 122,
        "startColumnNumber" : 25,
        "endLineNumber" : 122,
        "endColumnNumber" : 58
      },
      "nodeContext" : "((InsnWrapArg)arg).getWrapInsn()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 122,
        "startColumnNumber" : 14,
        "endLineNumber" : 122,
        "endColumnNumber" : 58
      },
      "nodeContext" : "wrapInsn=((InsnWrapArg)arg).getWrapInsn()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 122,
        "startColumnNumber" : 5,
        "endLineNumber" : 122,
        "endColumnNumber" : 59
      },
      "nodeContext" : "InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 121,
        "startColumnNumber" : 26,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n  checkInsn(wrapInsn);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 121,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (arg.isInsnWrap()) {\n  InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n  checkInsn(wrapInsn);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 120,
        "startColumnNumber" : 43,
        "endLineNumber" : 125,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (arg.isInsnWrap()) {\n    InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n    checkInsn(wrapInsn);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 166,
        "startLineNumber" : 120,
        "startColumnNumber" : 3,
        "endLineNumber" : 125,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (InsnArg arg : insn.getArguments()) {\n  if (arg.isInsnWrap()) {\n    InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n    checkInsn(wrapInsn);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 30,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 119,
        "startColumnNumber" : 9,
        "endLineNumber" : 126,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (  InsnArg arg : insn.getArguments()) {\n    if (arg.isInsnWrap()) {\n      InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n      checkInsn(wrapInsn);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 585,
        "startLineNumber" : 106,
        "startColumnNumber" : 2,
        "endLineNumber" : 126,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (insn.getType() == InsnType.ARITH) {\n  ArithNode arith=(ArithNode)insn;\n  ArithOp op=arith.getOp();\n  if (op == ArithOp.ADD || op == ArithOp.SUB) {\n    for (int i=0; i < 2; i++) {\n      InsnArg arg=arith.getArg(i);\n      if (arg.isInsnWrap()) {\n        InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n        wrapInsn.add(AFlag.DONT_WRAP);\n        checkInsn(wrapInsn);\n      }\n    }\n  }\n}\n else {\n  for (  InsnArg arg : insn.getArguments()) {\n    if (arg.isInsnWrap()) {\n      InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n      checkInsn(wrapInsn);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 119,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 592,
        "startLineNumber" : 105,
        "startColumnNumber" : 46,
        "endLineNumber" : 127,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (insn.getType() == InsnType.ARITH) {\n    ArithNode arith=(ArithNode)insn;\n    ArithOp op=arith.getOp();\n    if (op == ArithOp.ADD || op == ArithOp.SUB) {\n      for (int i=0; i < 2; i++) {\n        InsnArg arg=arith.getArg(i);\n        if (arg.isInsnWrap()) {\n          InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n          wrapInsn.add(AFlag.DONT_WRAP);\n          checkInsn(wrapInsn);\n        }\n      }\n    }\n  }\n else {\n    for (    InsnArg arg : insn.getArguments()) {\n      if (arg.isInsnWrap()) {\n        InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n        checkInsn(wrapInsn);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 742,
        "startLineNumber" : 101,
        "startColumnNumber" : 1,
        "endLineNumber" : 127,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Remove parenthesis for wrapped insn  in arith '+' or '-' ('(a + b) +c' => 'a + b + c')\n */\nprivate static void checkInsn(InsnNode insn){\n  if (insn.getType() == InsnType.ARITH) {\n    ArithNode arith=(ArithNode)insn;\n    ArithOp op=arith.getOp();\n    if (op == ArithOp.ADD || op == ArithOp.SUB) {\n      for (int i=0; i < 2; i++) {\n        InsnArg arg=arith.getArg(i);\n        if (arg.isInsnWrap()) {\n          InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n          wrapInsn.add(AFlag.DONT_WRAP);\n          checkInsn(wrapInsn);\n        }\n      }\n    }\n  }\n else {\n    for (    InsnArg arg : insn.getArguments()) {\n      if (arg.isInsnWrap()) {\n        InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n        checkInsn(wrapInsn);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 130,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 122,
        "startColumnNumber" : 5,
        "endLineNumber" : 122,
        "endColumnNumber" : 59
      },
      "nodeContext" : "InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "jadx.core.dex.instructions.args.InsnArg"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 112,
    "startColumnNumber" : 9,
    "endLineNumber" : 112,
    "endColumnNumber" : 12
  }, {
    "charLength" : 3,
    "startLineNumber" : 113,
    "startColumnNumber" : 41,
    "endLineNumber" : 113,
    "endColumnNumber" : 44
  }, {
    "charLength" : 3,
    "startLineNumber" : 121,
    "startColumnNumber" : 8,
    "endLineNumber" : 121,
    "endColumnNumber" : 11
  }, {
    "charLength" : 3,
    "startLineNumber" : 122,
    "startColumnNumber" : 40,
    "endLineNumber" : 122,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 12
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 12
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 10
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 10
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 6
  } ]
}