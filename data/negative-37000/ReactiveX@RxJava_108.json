{
  "id" : 108,
  "expression" : "mr",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/main/java/io/reactivex/internal/subscriptions/FullArbiter.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mr",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 146,
      "startColumnNumber" : 24,
      "endLineNumber" : 146,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 146,
        "startColumnNumber" : 24,
        "endLineNumber" : 146,
        "endColumnNumber" : 32
      },
      "nodeContext" : "mr != 0L",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 230,
        "startLineNumber" : 146,
        "startColumnNumber" : 20,
        "endLineNumber" : 151,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (mr != 0L) {\n  requested=BackpressureHelper.addCap(requested,mr);\n  if (s != null) {\n    s.request(mr);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 334,
        "startLineNumber" : 144,
        "startColumnNumber" : 34,
        "endLineNumber" : 152,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  long mr=missedRequested.getAndSet(0L);\n  if (mr != 0L) {\n    requested=BackpressureHelper.addCap(requested,mr);\n    if (s != null) {\n      s.request(mr);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1855,
        "startLineNumber" : 144,
        "startColumnNumber" : 16,
        "endLineNumber" : 193,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (o == REQUEST) {\n  long mr=missedRequested.getAndSet(0L);\n  if (mr != 0L) {\n    requested=BackpressureHelper.addCap(requested,mr);\n    if (s != null) {\n      s.request(mr);\n    }\n  }\n}\n else if (o != s) {\n  continue;\n}\n else if (NotificationLite.isSubscription(v)) {\n  Subscription next=NotificationLite.getSubscription(v);\n  if (s != null) {\n    s.cancel();\n  }\n  s=next;\n  long r=requested;\n  if (r != 0L) {\n    next.request(r);\n  }\n}\n else if (NotificationLite.isError(v)) {\n  q.clear();\n  dispose();\n  Throwable ex=NotificationLite.getError(v);\n  if (!cancelled) {\n    cancelled=true;\n    a.onError(ex);\n  }\n else {\n    RxJavaPlugins.onError(ex);\n  }\n}\n else if (NotificationLite.isComplete(v)) {\n  q.clear();\n  dispose();\n  if (!cancelled) {\n    cancelled=true;\n    a.onComplete();\n  }\n}\n else {\n  long r=requested;\n  if (r != 0) {\n    a.onNext(NotificationLite.<T>getValue(v));\n    requested=r - 1;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 178,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2127,
        "startLineNumber" : 134,
        "startColumnNumber" : 21,
        "endLineNumber" : 194,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Object o=q.peek();\n  if (o == null) {\n    break;\n  }\n  q.poll();\n  Object v=q.poll();\n  if (o == REQUEST) {\n    long mr=missedRequested.getAndSet(0L);\n    if (mr != 0L) {\n      requested=BackpressureHelper.addCap(requested,mr);\n      if (s != null) {\n        s.request(mr);\n      }\n    }\n  }\n else   if (o != s) {\n    continue;\n  }\n else   if (NotificationLite.isSubscription(v)) {\n    Subscription next=NotificationLite.getSubscription(v);\n    if (s != null) {\n      s.cancel();\n    }\n    s=next;\n    long r=requested;\n    if (r != 0L) {\n      next.request(r);\n    }\n  }\n else   if (NotificationLite.isError(v)) {\n    q.clear();\n    dispose();\n    Throwable ex=NotificationLite.getError(v);\n    if (!cancelled) {\n      cancelled=true;\n      a.onError(ex);\n    }\n else {\n      RxJavaPlugins.onError(ex);\n    }\n  }\n else   if (NotificationLite.isComplete(v)) {\n    q.clear();\n    dispose();\n    if (!cancelled) {\n      cancelled=true;\n      a.onComplete();\n    }\n  }\n else {\n    long r=requested;\n    if (r != 0) {\n      a.onNext(NotificationLite.<T>getValue(v));\n      requested=r - 1;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 205,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2136,
        "startLineNumber" : 134,
        "startColumnNumber" : 12,
        "endLineNumber" : 194,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (; ; ) {\n  Object o=q.peek();\n  if (o == null) {\n    break;\n  }\n  q.poll();\n  Object v=q.poll();\n  if (o == REQUEST) {\n    long mr=missedRequested.getAndSet(0L);\n    if (mr != 0L) {\n      requested=BackpressureHelper.addCap(requested,mr);\n      if (s != null) {\n        s.request(mr);\n      }\n    }\n  }\n else   if (o != s) {\n    continue;\n  }\n else   if (NotificationLite.isSubscription(v)) {\n    Subscription next=NotificationLite.getSubscription(v);\n    if (s != null) {\n      s.cancel();\n    }\n    s=next;\n    long r=requested;\n    if (r != 0L) {\n      next.request(r);\n    }\n  }\n else   if (NotificationLite.isError(v)) {\n    q.clear();\n    dispose();\n    Throwable ex=NotificationLite.getError(v);\n    if (!cancelled) {\n      cancelled=true;\n      a.onError(ex);\n    }\n else {\n      RxJavaPlugins.onError(ex);\n    }\n  }\n else   if (NotificationLite.isComplete(v)) {\n    q.clear();\n    dispose();\n    if (!cancelled) {\n      cancelled=true;\n      a.onComplete();\n    }\n  }\n else {\n    long r=requested;\n    if (r != 0) {\n      a.onNext(NotificationLite.<T>getValue(v));\n      requested=r - 1;\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 206,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2307,
        "startLineNumber" : 132,
        "startColumnNumber" : 17,
        "endLineNumber" : 200,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (; ; ) {\n    Object o=q.peek();\n    if (o == null) {\n      break;\n    }\n    q.poll();\n    Object v=q.poll();\n    if (o == REQUEST) {\n      long mr=missedRequested.getAndSet(0L);\n      if (mr != 0L) {\n        requested=BackpressureHelper.addCap(requested,mr);\n        if (s != null) {\n          s.request(mr);\n        }\n      }\n    }\n else     if (o != s) {\n      continue;\n    }\n else     if (NotificationLite.isSubscription(v)) {\n      Subscription next=NotificationLite.getSubscription(v);\n      if (s != null) {\n        s.cancel();\n      }\n      s=next;\n      long r=requested;\n      if (r != 0L) {\n        next.request(r);\n      }\n    }\n else     if (NotificationLite.isError(v)) {\n      q.clear();\n      dispose();\n      Throwable ex=NotificationLite.getError(v);\n      if (!cancelled) {\n        cancelled=true;\n        a.onError(ex);\n      }\n else {\n        RxJavaPlugins.onError(ex);\n      }\n    }\n else     if (NotificationLite.isComplete(v)) {\n      q.clear();\n      dispose();\n      if (!cancelled) {\n        cancelled=true;\n        a.onComplete();\n      }\n    }\n else {\n      long r=requested;\n      if (r != 0) {\n        a.onNext(NotificationLite.<T>getValue(v));\n        requested=r - 1;\n      }\n    }\n  }\n  missed=wip.addAndGet(-missed);\n  if (missed == 0) {\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 221,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2316,
        "startLineNumber" : 132,
        "startColumnNumber" : 8,
        "endLineNumber" : 200,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (; ; ) {\n  for (; ; ) {\n    Object o=q.peek();\n    if (o == null) {\n      break;\n    }\n    q.poll();\n    Object v=q.poll();\n    if (o == REQUEST) {\n      long mr=missedRequested.getAndSet(0L);\n      if (mr != 0L) {\n        requested=BackpressureHelper.addCap(requested,mr);\n        if (s != null) {\n          s.request(mr);\n        }\n      }\n    }\n else     if (o != s) {\n      continue;\n    }\n else     if (NotificationLite.isSubscription(v)) {\n      Subscription next=NotificationLite.getSubscription(v);\n      if (s != null) {\n        s.cancel();\n      }\n      s=next;\n      long r=requested;\n      if (r != 0L) {\n        next.request(r);\n      }\n    }\n else     if (NotificationLite.isError(v)) {\n      q.clear();\n      dispose();\n      Throwable ex=NotificationLite.getError(v);\n      if (!cancelled) {\n        cancelled=true;\n        a.onError(ex);\n      }\n else {\n        RxJavaPlugins.onError(ex);\n      }\n    }\n else     if (NotificationLite.isComplete(v)) {\n      q.clear();\n      dispose();\n      if (!cancelled) {\n        cancelled=true;\n        a.onComplete();\n      }\n    }\n else {\n      long r=requested;\n      if (r != 0) {\n        a.onNext(NotificationLite.<T>getValue(v));\n        requested=r - 1;\n      }\n    }\n  }\n  missed=wip.addAndGet(-missed);\n  if (missed == 0) {\n    break;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 222,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2568,
        "startLineNumber" : 122,
        "startColumnNumber" : 17,
        "endLineNumber" : 201,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (wip.getAndIncrement() != 0) {\n    return;\n  }\n  int missed=1;\n  final SpscLinkedArrayQueue<Object> q=queue;\n  final Subscriber<? super T> a=actual;\n  for (; ; ) {\n    for (; ; ) {\n      Object o=q.peek();\n      if (o == null) {\n        break;\n      }\n      q.poll();\n      Object v=q.poll();\n      if (o == REQUEST) {\n        long mr=missedRequested.getAndSet(0L);\n        if (mr != 0L) {\n          requested=BackpressureHelper.addCap(requested,mr);\n          if (s != null) {\n            s.request(mr);\n          }\n        }\n      }\n else       if (o != s) {\n        continue;\n      }\n else       if (NotificationLite.isSubscription(v)) {\n        Subscription next=NotificationLite.getSubscription(v);\n        if (s != null) {\n          s.cancel();\n        }\n        s=next;\n        long r=requested;\n        if (r != 0L) {\n          next.request(r);\n        }\n      }\n else       if (NotificationLite.isError(v)) {\n        q.clear();\n        dispose();\n        Throwable ex=NotificationLite.getError(v);\n        if (!cancelled) {\n          cancelled=true;\n          a.onError(ex);\n        }\n else {\n          RxJavaPlugins.onError(ex);\n        }\n      }\n else       if (NotificationLite.isComplete(v)) {\n        q.clear();\n        dispose();\n        if (!cancelled) {\n          cancelled=true;\n          a.onComplete();\n        }\n      }\n else {\n        long r=requested;\n        if (r != 0) {\n          a.onNext(NotificationLite.<T>getValue(v));\n          requested=r - 1;\n        }\n      }\n    }\n    missed=wip.addAndGet(-missed);\n    if (missed == 0) {\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 257,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2581,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 201,
        "endColumnNumber" : 5
      },
      "nodeContext" : "void drain(){\n  if (wip.getAndIncrement() != 0) {\n    return;\n  }\n  int missed=1;\n  final SpscLinkedArrayQueue<Object> q=queue;\n  final Subscriber<? super T> a=actual;\n  for (; ; ) {\n    for (; ; ) {\n      Object o=q.peek();\n      if (o == null) {\n        break;\n      }\n      q.poll();\n      Object v=q.poll();\n      if (o == REQUEST) {\n        long mr=missedRequested.getAndSet(0L);\n        if (mr != 0L) {\n          requested=BackpressureHelper.addCap(requested,mr);\n          if (s != null) {\n            s.request(mr);\n          }\n        }\n      }\n else       if (o != s) {\n        continue;\n      }\n else       if (NotificationLite.isSubscription(v)) {\n        Subscription next=NotificationLite.getSubscription(v);\n        if (s != null) {\n          s.cancel();\n        }\n        s=next;\n        long r=requested;\n        if (r != 0L) {\n          next.request(r);\n        }\n      }\n else       if (NotificationLite.isError(v)) {\n        q.clear();\n        dispose();\n        Throwable ex=NotificationLite.getError(v);\n        if (!cancelled) {\n          cancelled=true;\n          a.onError(ex);\n        }\n else {\n          RxJavaPlugins.onError(ex);\n        }\n      }\n else       if (NotificationLite.isComplete(v)) {\n        q.clear();\n        dispose();\n        if (!cancelled) {\n          cancelled=true;\n          a.onComplete();\n        }\n      }\n else {\n        long r=requested;\n        if (r != 0) {\n          a.onNext(NotificationLite.<T>getValue(v));\n          requested=r - 1;\n        }\n      }\n    }\n    missed=wip.addAndGet(-missed);\n    if (missed == 0) {\n      break;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 260,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 146,
        "startColumnNumber" : 24,
        "endLineNumber" : 146,
        "endColumnNumber" : 32
      },
      "nodeContext" : "mr != 0L",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "long"
  }, {
    "nodeContext" : "mr",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 147,
      "startColumnNumber" : 73,
      "endLineNumber" : 147,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 147,
        "startColumnNumber" : 36,
        "endLineNumber" : 147,
        "endColumnNumber" : 76
      },
      "nodeContext" : "BackpressureHelper.addCap(requested,mr)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 147,
        "startColumnNumber" : 24,
        "endLineNumber" : 147,
        "endColumnNumber" : 76
      },
      "nodeContext" : "requested=BackpressureHelper.addCap(requested,mr)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 147,
        "startColumnNumber" : 24,
        "endLineNumber" : 147,
        "endColumnNumber" : 77
      },
      "nodeContext" : "requested=BackpressureHelper.addCap(requested,mr);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 216,
        "startLineNumber" : 146,
        "startColumnNumber" : 34,
        "endLineNumber" : 151,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  requested=BackpressureHelper.addCap(requested,mr);\n  if (s != null) {\n    s.request(mr);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 230,
        "startLineNumber" : 146,
        "startColumnNumber" : 20,
        "endLineNumber" : 151,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (mr != 0L) {\n  requested=BackpressureHelper.addCap(requested,mr);\n  if (s != null) {\n    s.request(mr);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 334,
        "startLineNumber" : 144,
        "startColumnNumber" : 34,
        "endLineNumber" : 152,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  long mr=missedRequested.getAndSet(0L);\n  if (mr != 0L) {\n    requested=BackpressureHelper.addCap(requested,mr);\n    if (s != null) {\n      s.request(mr);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1855,
        "startLineNumber" : 144,
        "startColumnNumber" : 16,
        "endLineNumber" : 193,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (o == REQUEST) {\n  long mr=missedRequested.getAndSet(0L);\n  if (mr != 0L) {\n    requested=BackpressureHelper.addCap(requested,mr);\n    if (s != null) {\n      s.request(mr);\n    }\n  }\n}\n else if (o != s) {\n  continue;\n}\n else if (NotificationLite.isSubscription(v)) {\n  Subscription next=NotificationLite.getSubscription(v);\n  if (s != null) {\n    s.cancel();\n  }\n  s=next;\n  long r=requested;\n  if (r != 0L) {\n    next.request(r);\n  }\n}\n else if (NotificationLite.isError(v)) {\n  q.clear();\n  dispose();\n  Throwable ex=NotificationLite.getError(v);\n  if (!cancelled) {\n    cancelled=true;\n    a.onError(ex);\n  }\n else {\n    RxJavaPlugins.onError(ex);\n  }\n}\n else if (NotificationLite.isComplete(v)) {\n  q.clear();\n  dispose();\n  if (!cancelled) {\n    cancelled=true;\n    a.onComplete();\n  }\n}\n else {\n  long r=requested;\n  if (r != 0) {\n    a.onNext(NotificationLite.<T>getValue(v));\n    requested=r - 1;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 178,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2127,
        "startLineNumber" : 134,
        "startColumnNumber" : 21,
        "endLineNumber" : 194,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Object o=q.peek();\n  if (o == null) {\n    break;\n  }\n  q.poll();\n  Object v=q.poll();\n  if (o == REQUEST) {\n    long mr=missedRequested.getAndSet(0L);\n    if (mr != 0L) {\n      requested=BackpressureHelper.addCap(requested,mr);\n      if (s != null) {\n        s.request(mr);\n      }\n    }\n  }\n else   if (o != s) {\n    continue;\n  }\n else   if (NotificationLite.isSubscription(v)) {\n    Subscription next=NotificationLite.getSubscription(v);\n    if (s != null) {\n      s.cancel();\n    }\n    s=next;\n    long r=requested;\n    if (r != 0L) {\n      next.request(r);\n    }\n  }\n else   if (NotificationLite.isError(v)) {\n    q.clear();\n    dispose();\n    Throwable ex=NotificationLite.getError(v);\n    if (!cancelled) {\n      cancelled=true;\n      a.onError(ex);\n    }\n else {\n      RxJavaPlugins.onError(ex);\n    }\n  }\n else   if (NotificationLite.isComplete(v)) {\n    q.clear();\n    dispose();\n    if (!cancelled) {\n      cancelled=true;\n      a.onComplete();\n    }\n  }\n else {\n    long r=requested;\n    if (r != 0) {\n      a.onNext(NotificationLite.<T>getValue(v));\n      requested=r - 1;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 205,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2136,
        "startLineNumber" : 134,
        "startColumnNumber" : 12,
        "endLineNumber" : 194,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (; ; ) {\n  Object o=q.peek();\n  if (o == null) {\n    break;\n  }\n  q.poll();\n  Object v=q.poll();\n  if (o == REQUEST) {\n    long mr=missedRequested.getAndSet(0L);\n    if (mr != 0L) {\n      requested=BackpressureHelper.addCap(requested,mr);\n      if (s != null) {\n        s.request(mr);\n      }\n    }\n  }\n else   if (o != s) {\n    continue;\n  }\n else   if (NotificationLite.isSubscription(v)) {\n    Subscription next=NotificationLite.getSubscription(v);\n    if (s != null) {\n      s.cancel();\n    }\n    s=next;\n    long r=requested;\n    if (r != 0L) {\n      next.request(r);\n    }\n  }\n else   if (NotificationLite.isError(v)) {\n    q.clear();\n    dispose();\n    Throwable ex=NotificationLite.getError(v);\n    if (!cancelled) {\n      cancelled=true;\n      a.onError(ex);\n    }\n else {\n      RxJavaPlugins.onError(ex);\n    }\n  }\n else   if (NotificationLite.isComplete(v)) {\n    q.clear();\n    dispose();\n    if (!cancelled) {\n      cancelled=true;\n      a.onComplete();\n    }\n  }\n else {\n    long r=requested;\n    if (r != 0) {\n      a.onNext(NotificationLite.<T>getValue(v));\n      requested=r - 1;\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 206,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2307,
        "startLineNumber" : 132,
        "startColumnNumber" : 17,
        "endLineNumber" : 200,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (; ; ) {\n    Object o=q.peek();\n    if (o == null) {\n      break;\n    }\n    q.poll();\n    Object v=q.poll();\n    if (o == REQUEST) {\n      long mr=missedRequested.getAndSet(0L);\n      if (mr != 0L) {\n        requested=BackpressureHelper.addCap(requested,mr);\n        if (s != null) {\n          s.request(mr);\n        }\n      }\n    }\n else     if (o != s) {\n      continue;\n    }\n else     if (NotificationLite.isSubscription(v)) {\n      Subscription next=NotificationLite.getSubscription(v);\n      if (s != null) {\n        s.cancel();\n      }\n      s=next;\n      long r=requested;\n      if (r != 0L) {\n        next.request(r);\n      }\n    }\n else     if (NotificationLite.isError(v)) {\n      q.clear();\n      dispose();\n      Throwable ex=NotificationLite.getError(v);\n      if (!cancelled) {\n        cancelled=true;\n        a.onError(ex);\n      }\n else {\n        RxJavaPlugins.onError(ex);\n      }\n    }\n else     if (NotificationLite.isComplete(v)) {\n      q.clear();\n      dispose();\n      if (!cancelled) {\n        cancelled=true;\n        a.onComplete();\n      }\n    }\n else {\n      long r=requested;\n      if (r != 0) {\n        a.onNext(NotificationLite.<T>getValue(v));\n        requested=r - 1;\n      }\n    }\n  }\n  missed=wip.addAndGet(-missed);\n  if (missed == 0) {\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 221,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2316,
        "startLineNumber" : 132,
        "startColumnNumber" : 8,
        "endLineNumber" : 200,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (; ; ) {\n  for (; ; ) {\n    Object o=q.peek();\n    if (o == null) {\n      break;\n    }\n    q.poll();\n    Object v=q.poll();\n    if (o == REQUEST) {\n      long mr=missedRequested.getAndSet(0L);\n      if (mr != 0L) {\n        requested=BackpressureHelper.addCap(requested,mr);\n        if (s != null) {\n          s.request(mr);\n        }\n      }\n    }\n else     if (o != s) {\n      continue;\n    }\n else     if (NotificationLite.isSubscription(v)) {\n      Subscription next=NotificationLite.getSubscription(v);\n      if (s != null) {\n        s.cancel();\n      }\n      s=next;\n      long r=requested;\n      if (r != 0L) {\n        next.request(r);\n      }\n    }\n else     if (NotificationLite.isError(v)) {\n      q.clear();\n      dispose();\n      Throwable ex=NotificationLite.getError(v);\n      if (!cancelled) {\n        cancelled=true;\n        a.onError(ex);\n      }\n else {\n        RxJavaPlugins.onError(ex);\n      }\n    }\n else     if (NotificationLite.isComplete(v)) {\n      q.clear();\n      dispose();\n      if (!cancelled) {\n        cancelled=true;\n        a.onComplete();\n      }\n    }\n else {\n      long r=requested;\n      if (r != 0) {\n        a.onNext(NotificationLite.<T>getValue(v));\n        requested=r - 1;\n      }\n    }\n  }\n  missed=wip.addAndGet(-missed);\n  if (missed == 0) {\n    break;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 222,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2568,
        "startLineNumber" : 122,
        "startColumnNumber" : 17,
        "endLineNumber" : 201,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (wip.getAndIncrement() != 0) {\n    return;\n  }\n  int missed=1;\n  final SpscLinkedArrayQueue<Object> q=queue;\n  final Subscriber<? super T> a=actual;\n  for (; ; ) {\n    for (; ; ) {\n      Object o=q.peek();\n      if (o == null) {\n        break;\n      }\n      q.poll();\n      Object v=q.poll();\n      if (o == REQUEST) {\n        long mr=missedRequested.getAndSet(0L);\n        if (mr != 0L) {\n          requested=BackpressureHelper.addCap(requested,mr);\n          if (s != null) {\n            s.request(mr);\n          }\n        }\n      }\n else       if (o != s) {\n        continue;\n      }\n else       if (NotificationLite.isSubscription(v)) {\n        Subscription next=NotificationLite.getSubscription(v);\n        if (s != null) {\n          s.cancel();\n        }\n        s=next;\n        long r=requested;\n        if (r != 0L) {\n          next.request(r);\n        }\n      }\n else       if (NotificationLite.isError(v)) {\n        q.clear();\n        dispose();\n        Throwable ex=NotificationLite.getError(v);\n        if (!cancelled) {\n          cancelled=true;\n          a.onError(ex);\n        }\n else {\n          RxJavaPlugins.onError(ex);\n        }\n      }\n else       if (NotificationLite.isComplete(v)) {\n        q.clear();\n        dispose();\n        if (!cancelled) {\n          cancelled=true;\n          a.onComplete();\n        }\n      }\n else {\n        long r=requested;\n        if (r != 0) {\n          a.onNext(NotificationLite.<T>getValue(v));\n          requested=r - 1;\n        }\n      }\n    }\n    missed=wip.addAndGet(-missed);\n    if (missed == 0) {\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 257,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2581,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 201,
        "endColumnNumber" : 5
      },
      "nodeContext" : "void drain(){\n  if (wip.getAndIncrement() != 0) {\n    return;\n  }\n  int missed=1;\n  final SpscLinkedArrayQueue<Object> q=queue;\n  final Subscriber<? super T> a=actual;\n  for (; ; ) {\n    for (; ; ) {\n      Object o=q.peek();\n      if (o == null) {\n        break;\n      }\n      q.poll();\n      Object v=q.poll();\n      if (o == REQUEST) {\n        long mr=missedRequested.getAndSet(0L);\n        if (mr != 0L) {\n          requested=BackpressureHelper.addCap(requested,mr);\n          if (s != null) {\n            s.request(mr);\n          }\n        }\n      }\n else       if (o != s) {\n        continue;\n      }\n else       if (NotificationLite.isSubscription(v)) {\n        Subscription next=NotificationLite.getSubscription(v);\n        if (s != null) {\n          s.cancel();\n        }\n        s=next;\n        long r=requested;\n        if (r != 0L) {\n          next.request(r);\n        }\n      }\n else       if (NotificationLite.isError(v)) {\n        q.clear();\n        dispose();\n        Throwable ex=NotificationLite.getError(v);\n        if (!cancelled) {\n          cancelled=true;\n          a.onError(ex);\n        }\n else {\n          RxJavaPlugins.onError(ex);\n        }\n      }\n else       if (NotificationLite.isComplete(v)) {\n        q.clear();\n        dispose();\n        if (!cancelled) {\n          cancelled=true;\n          a.onComplete();\n        }\n      }\n else {\n        long r=requested;\n        if (r != 0) {\n          a.onNext(NotificationLite.<T>getValue(v));\n          requested=r - 1;\n        }\n      }\n    }\n    missed=wip.addAndGet(-missed);\n    if (missed == 0) {\n      break;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 260,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 147,
        "startColumnNumber" : 24,
        "endLineNumber" : 147,
        "endColumnNumber" : 77
      },
      "nodeContext" : "requested=BackpressureHelper.addCap(requested,mr);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "long"
  }, {
    "nodeContext" : "mr",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 149,
      "startColumnNumber" : 38,
      "endLineNumber" : 149,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 149,
        "startColumnNumber" : 28,
        "endLineNumber" : 149,
        "endColumnNumber" : 41
      },
      "nodeContext" : "s.request(mr)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 149,
        "startColumnNumber" : 28,
        "endLineNumber" : 149,
        "endColumnNumber" : 42
      },
      "nodeContext" : "s.request(mr);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 148,
        "startColumnNumber" : 39,
        "endLineNumber" : 150,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  s.request(mr);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 148,
        "startColumnNumber" : 24,
        "endLineNumber" : 150,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (s != null) {\n  s.request(mr);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 216,
        "startLineNumber" : 146,
        "startColumnNumber" : 34,
        "endLineNumber" : 151,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  requested=BackpressureHelper.addCap(requested,mr);\n  if (s != null) {\n    s.request(mr);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 230,
        "startLineNumber" : 146,
        "startColumnNumber" : 20,
        "endLineNumber" : 151,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (mr != 0L) {\n  requested=BackpressureHelper.addCap(requested,mr);\n  if (s != null) {\n    s.request(mr);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 334,
        "startLineNumber" : 144,
        "startColumnNumber" : 34,
        "endLineNumber" : 152,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  long mr=missedRequested.getAndSet(0L);\n  if (mr != 0L) {\n    requested=BackpressureHelper.addCap(requested,mr);\n    if (s != null) {\n      s.request(mr);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1855,
        "startLineNumber" : 144,
        "startColumnNumber" : 16,
        "endLineNumber" : 193,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (o == REQUEST) {\n  long mr=missedRequested.getAndSet(0L);\n  if (mr != 0L) {\n    requested=BackpressureHelper.addCap(requested,mr);\n    if (s != null) {\n      s.request(mr);\n    }\n  }\n}\n else if (o != s) {\n  continue;\n}\n else if (NotificationLite.isSubscription(v)) {\n  Subscription next=NotificationLite.getSubscription(v);\n  if (s != null) {\n    s.cancel();\n  }\n  s=next;\n  long r=requested;\n  if (r != 0L) {\n    next.request(r);\n  }\n}\n else if (NotificationLite.isError(v)) {\n  q.clear();\n  dispose();\n  Throwable ex=NotificationLite.getError(v);\n  if (!cancelled) {\n    cancelled=true;\n    a.onError(ex);\n  }\n else {\n    RxJavaPlugins.onError(ex);\n  }\n}\n else if (NotificationLite.isComplete(v)) {\n  q.clear();\n  dispose();\n  if (!cancelled) {\n    cancelled=true;\n    a.onComplete();\n  }\n}\n else {\n  long r=requested;\n  if (r != 0) {\n    a.onNext(NotificationLite.<T>getValue(v));\n    requested=r - 1;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 178,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2127,
        "startLineNumber" : 134,
        "startColumnNumber" : 21,
        "endLineNumber" : 194,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Object o=q.peek();\n  if (o == null) {\n    break;\n  }\n  q.poll();\n  Object v=q.poll();\n  if (o == REQUEST) {\n    long mr=missedRequested.getAndSet(0L);\n    if (mr != 0L) {\n      requested=BackpressureHelper.addCap(requested,mr);\n      if (s != null) {\n        s.request(mr);\n      }\n    }\n  }\n else   if (o != s) {\n    continue;\n  }\n else   if (NotificationLite.isSubscription(v)) {\n    Subscription next=NotificationLite.getSubscription(v);\n    if (s != null) {\n      s.cancel();\n    }\n    s=next;\n    long r=requested;\n    if (r != 0L) {\n      next.request(r);\n    }\n  }\n else   if (NotificationLite.isError(v)) {\n    q.clear();\n    dispose();\n    Throwable ex=NotificationLite.getError(v);\n    if (!cancelled) {\n      cancelled=true;\n      a.onError(ex);\n    }\n else {\n      RxJavaPlugins.onError(ex);\n    }\n  }\n else   if (NotificationLite.isComplete(v)) {\n    q.clear();\n    dispose();\n    if (!cancelled) {\n      cancelled=true;\n      a.onComplete();\n    }\n  }\n else {\n    long r=requested;\n    if (r != 0) {\n      a.onNext(NotificationLite.<T>getValue(v));\n      requested=r - 1;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 205,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2136,
        "startLineNumber" : 134,
        "startColumnNumber" : 12,
        "endLineNumber" : 194,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (; ; ) {\n  Object o=q.peek();\n  if (o == null) {\n    break;\n  }\n  q.poll();\n  Object v=q.poll();\n  if (o == REQUEST) {\n    long mr=missedRequested.getAndSet(0L);\n    if (mr != 0L) {\n      requested=BackpressureHelper.addCap(requested,mr);\n      if (s != null) {\n        s.request(mr);\n      }\n    }\n  }\n else   if (o != s) {\n    continue;\n  }\n else   if (NotificationLite.isSubscription(v)) {\n    Subscription next=NotificationLite.getSubscription(v);\n    if (s != null) {\n      s.cancel();\n    }\n    s=next;\n    long r=requested;\n    if (r != 0L) {\n      next.request(r);\n    }\n  }\n else   if (NotificationLite.isError(v)) {\n    q.clear();\n    dispose();\n    Throwable ex=NotificationLite.getError(v);\n    if (!cancelled) {\n      cancelled=true;\n      a.onError(ex);\n    }\n else {\n      RxJavaPlugins.onError(ex);\n    }\n  }\n else   if (NotificationLite.isComplete(v)) {\n    q.clear();\n    dispose();\n    if (!cancelled) {\n      cancelled=true;\n      a.onComplete();\n    }\n  }\n else {\n    long r=requested;\n    if (r != 0) {\n      a.onNext(NotificationLite.<T>getValue(v));\n      requested=r - 1;\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 206,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2307,
        "startLineNumber" : 132,
        "startColumnNumber" : 17,
        "endLineNumber" : 200,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (; ; ) {\n    Object o=q.peek();\n    if (o == null) {\n      break;\n    }\n    q.poll();\n    Object v=q.poll();\n    if (o == REQUEST) {\n      long mr=missedRequested.getAndSet(0L);\n      if (mr != 0L) {\n        requested=BackpressureHelper.addCap(requested,mr);\n        if (s != null) {\n          s.request(mr);\n        }\n      }\n    }\n else     if (o != s) {\n      continue;\n    }\n else     if (NotificationLite.isSubscription(v)) {\n      Subscription next=NotificationLite.getSubscription(v);\n      if (s != null) {\n        s.cancel();\n      }\n      s=next;\n      long r=requested;\n      if (r != 0L) {\n        next.request(r);\n      }\n    }\n else     if (NotificationLite.isError(v)) {\n      q.clear();\n      dispose();\n      Throwable ex=NotificationLite.getError(v);\n      if (!cancelled) {\n        cancelled=true;\n        a.onError(ex);\n      }\n else {\n        RxJavaPlugins.onError(ex);\n      }\n    }\n else     if (NotificationLite.isComplete(v)) {\n      q.clear();\n      dispose();\n      if (!cancelled) {\n        cancelled=true;\n        a.onComplete();\n      }\n    }\n else {\n      long r=requested;\n      if (r != 0) {\n        a.onNext(NotificationLite.<T>getValue(v));\n        requested=r - 1;\n      }\n    }\n  }\n  missed=wip.addAndGet(-missed);\n  if (missed == 0) {\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 221,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2316,
        "startLineNumber" : 132,
        "startColumnNumber" : 8,
        "endLineNumber" : 200,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (; ; ) {\n  for (; ; ) {\n    Object o=q.peek();\n    if (o == null) {\n      break;\n    }\n    q.poll();\n    Object v=q.poll();\n    if (o == REQUEST) {\n      long mr=missedRequested.getAndSet(0L);\n      if (mr != 0L) {\n        requested=BackpressureHelper.addCap(requested,mr);\n        if (s != null) {\n          s.request(mr);\n        }\n      }\n    }\n else     if (o != s) {\n      continue;\n    }\n else     if (NotificationLite.isSubscription(v)) {\n      Subscription next=NotificationLite.getSubscription(v);\n      if (s != null) {\n        s.cancel();\n      }\n      s=next;\n      long r=requested;\n      if (r != 0L) {\n        next.request(r);\n      }\n    }\n else     if (NotificationLite.isError(v)) {\n      q.clear();\n      dispose();\n      Throwable ex=NotificationLite.getError(v);\n      if (!cancelled) {\n        cancelled=true;\n        a.onError(ex);\n      }\n else {\n        RxJavaPlugins.onError(ex);\n      }\n    }\n else     if (NotificationLite.isComplete(v)) {\n      q.clear();\n      dispose();\n      if (!cancelled) {\n        cancelled=true;\n        a.onComplete();\n      }\n    }\n else {\n      long r=requested;\n      if (r != 0) {\n        a.onNext(NotificationLite.<T>getValue(v));\n        requested=r - 1;\n      }\n    }\n  }\n  missed=wip.addAndGet(-missed);\n  if (missed == 0) {\n    break;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 222,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2568,
        "startLineNumber" : 122,
        "startColumnNumber" : 17,
        "endLineNumber" : 201,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (wip.getAndIncrement() != 0) {\n    return;\n  }\n  int missed=1;\n  final SpscLinkedArrayQueue<Object> q=queue;\n  final Subscriber<? super T> a=actual;\n  for (; ; ) {\n    for (; ; ) {\n      Object o=q.peek();\n      if (o == null) {\n        break;\n      }\n      q.poll();\n      Object v=q.poll();\n      if (o == REQUEST) {\n        long mr=missedRequested.getAndSet(0L);\n        if (mr != 0L) {\n          requested=BackpressureHelper.addCap(requested,mr);\n          if (s != null) {\n            s.request(mr);\n          }\n        }\n      }\n else       if (o != s) {\n        continue;\n      }\n else       if (NotificationLite.isSubscription(v)) {\n        Subscription next=NotificationLite.getSubscription(v);\n        if (s != null) {\n          s.cancel();\n        }\n        s=next;\n        long r=requested;\n        if (r != 0L) {\n          next.request(r);\n        }\n      }\n else       if (NotificationLite.isError(v)) {\n        q.clear();\n        dispose();\n        Throwable ex=NotificationLite.getError(v);\n        if (!cancelled) {\n          cancelled=true;\n          a.onError(ex);\n        }\n else {\n          RxJavaPlugins.onError(ex);\n        }\n      }\n else       if (NotificationLite.isComplete(v)) {\n        q.clear();\n        dispose();\n        if (!cancelled) {\n          cancelled=true;\n          a.onComplete();\n        }\n      }\n else {\n        long r=requested;\n        if (r != 0) {\n          a.onNext(NotificationLite.<T>getValue(v));\n          requested=r - 1;\n        }\n      }\n    }\n    missed=wip.addAndGet(-missed);\n    if (missed == 0) {\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 257,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2581,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 201,
        "endColumnNumber" : 5
      },
      "nodeContext" : "void drain(){\n  if (wip.getAndIncrement() != 0) {\n    return;\n  }\n  int missed=1;\n  final SpscLinkedArrayQueue<Object> q=queue;\n  final Subscriber<? super T> a=actual;\n  for (; ; ) {\n    for (; ; ) {\n      Object o=q.peek();\n      if (o == null) {\n        break;\n      }\n      q.poll();\n      Object v=q.poll();\n      if (o == REQUEST) {\n        long mr=missedRequested.getAndSet(0L);\n        if (mr != 0L) {\n          requested=BackpressureHelper.addCap(requested,mr);\n          if (s != null) {\n            s.request(mr);\n          }\n        }\n      }\n else       if (o != s) {\n        continue;\n      }\n else       if (NotificationLite.isSubscription(v)) {\n        Subscription next=NotificationLite.getSubscription(v);\n        if (s != null) {\n          s.cancel();\n        }\n        s=next;\n        long r=requested;\n        if (r != 0L) {\n          next.request(r);\n        }\n      }\n else       if (NotificationLite.isError(v)) {\n        q.clear();\n        dispose();\n        Throwable ex=NotificationLite.getError(v);\n        if (!cancelled) {\n          cancelled=true;\n          a.onError(ex);\n        }\n else {\n          RxJavaPlugins.onError(ex);\n        }\n      }\n else       if (NotificationLite.isComplete(v)) {\n        q.clear();\n        dispose();\n        if (!cancelled) {\n          cancelled=true;\n          a.onComplete();\n        }\n      }\n else {\n        long r=requested;\n        if (r != 0) {\n          a.onNext(NotificationLite.<T>getValue(v));\n          requested=r - 1;\n        }\n      }\n    }\n    missed=wip.addAndGet(-missed);\n    if (missed == 0) {\n      break;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 260,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 149,
        "startColumnNumber" : 28,
        "endLineNumber" : 149,
        "endColumnNumber" : 42
      },
      "nodeContext" : "s.request(mr);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 146,
    "startColumnNumber" : 24,
    "endLineNumber" : 146,
    "endColumnNumber" : 26
  }, {
    "charLength" : 2,
    "startLineNumber" : 147,
    "startColumnNumber" : 73,
    "endLineNumber" : 147,
    "endColumnNumber" : 75
  }, {
    "charLength" : 2,
    "startLineNumber" : 149,
    "startColumnNumber" : 38,
    "endLineNumber" : 149,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}