{
  "id" : 445,
  "expression" : "\"beforeSpanEvent:{}, nextSpanBoList:{}\"",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/web/src/main/java/com/navercorp/pinpoint/web/calltree/span/SpanAligner2.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"beforeSpanEvent:{}, nextSpanBoList:{}\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 39,
      "startLineNumber" : 213,
      "startColumnNumber" : 25,
      "endLineNumber" : 213,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 213,
        "startColumnNumber" : 12,
        "endLineNumber" : 213,
        "endColumnNumber" : 100
      },
      "nodeContext" : "logger.debug(\"beforeSpanEvent:{}, nextSpanBoList:{}\",beforeSpanEventBo,nextSpanBoList)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 213,
        "startColumnNumber" : 12,
        "endLineNumber" : 213,
        "endColumnNumber" : 101
      },
      "nodeContext" : "logger.debug(\"beforeSpanEvent:{}, nextSpanBoList:{}\",beforeSpanEventBo,nextSpanBoList);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 212,
        "startColumnNumber" : 37,
        "endLineNumber" : 214,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  logger.debug(\"beforeSpanEvent:{}, nextSpanBoList:{}\",beforeSpanEventBo,nextSpanBoList);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 212,
        "startColumnNumber" : 8,
        "endLineNumber" : 214,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (logger.isDebugEnabled()) {\n  logger.debug(\"beforeSpanEvent:{}, nextSpanBoList:{}\",beforeSpanEventBo,nextSpanBoList);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1227,
        "startLineNumber" : 211,
        "startColumnNumber" : 104,
        "endLineNumber" : 238,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (logger.isDebugEnabled()) {\n    logger.debug(\"beforeSpanEvent:{}, nextSpanBoList:{}\",beforeSpanEventBo,nextSpanBoList);\n  }\n  if (nextSpanBoList.size() == 1) {\n    return nextSpanBoList.get(0);\n  }\n else   if (nextSpanBoList.size() > 1) {\n    long spanEventBoStartTime=span.getStartTime() + beforeSpanEventBo.getStartElapsed();\n    SpanIdMatcher spanIdMatcher=new SpanIdMatcher(nextSpanBoList);\n    SpanBo matched=spanIdMatcher.approximateMatch(spanEventBoStartTime);\n    if (matched == null) {\n      return null;\n    }\n    List<SpanBo> other=spanIdMatcher.other();\n    if (other != null) {\n      spanIdMap.put(matched.getSpanId(),other);\n    }\n    return matched;\n  }\n else {\n    throw new IllegalStateException(\"error\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1327,
        "startLineNumber" : 211,
        "startColumnNumber" : 4,
        "endLineNumber" : 238,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private SpanBo getNextSpan(SpanBo span,SpanEventBo beforeSpanEventBo,List<SpanBo> nextSpanBoList){\n  if (logger.isDebugEnabled()) {\n    logger.debug(\"beforeSpanEvent:{}, nextSpanBoList:{}\",beforeSpanEventBo,nextSpanBoList);\n  }\n  if (nextSpanBoList.size() == 1) {\n    return nextSpanBoList.get(0);\n  }\n else   if (nextSpanBoList.size() > 1) {\n    long spanEventBoStartTime=span.getStartTime() + beforeSpanEventBo.getStartElapsed();\n    SpanIdMatcher spanIdMatcher=new SpanIdMatcher(nextSpanBoList);\n    SpanBo matched=spanIdMatcher.approximateMatch(spanEventBoStartTime);\n    if (matched == null) {\n      return null;\n    }\n    List<SpanBo> other=spanIdMatcher.other();\n    if (other != null) {\n      spanIdMap.put(matched.getSpanId(),other);\n    }\n    return matched;\n  }\n else {\n    throw new IllegalStateException(\"error\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 213,
        "startColumnNumber" : 12,
        "endLineNumber" : 213,
        "endColumnNumber" : 101
      },
      "nodeContext" : "logger.debug(\"beforeSpanEvent:{}, nextSpanBoList:{}\",beforeSpanEventBo,nextSpanBoList);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 39,
    "startLineNumber" : 213,
    "startColumnNumber" : 25,
    "endLineNumber" : 213,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ ]
}