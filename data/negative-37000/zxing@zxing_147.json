{
  "id" : 147,
  "expression" : "onColor",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/javase/src/com/google/zxing/client/j2se/MatrixToImageWriter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "onColor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 59,
      "startColumnNumber" : 46,
      "endLineNumber" : 59,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 59,
        "startColumnNumber" : 27,
        "endLineNumber" : 59,
        "endColumnNumber" : 64
      },
      "nodeContext" : "matrix.get(x,y) ? onColor : offColor",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 65
      },
      "nodeContext" : "image.setRGB(x,y,matrix.get(x,y) ? onColor : offColor)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 66
      },
      "nodeContext" : "image.setRGB(x,y,matrix.get(x,y) ? onColor : offColor);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 58,
        "startColumnNumber" : 39,
        "endLineNumber" : 60,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  image.setRGB(x,y,matrix.get(x,y) ? onColor : offColor);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 58,
        "startColumnNumber" : 6,
        "endLineNumber" : 60,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int y=0; y < height; y++) {\n  image.setRGB(x,y,matrix.get(x,y) ? onColor : offColor);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 57,
        "startColumnNumber" : 36,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int y=0; y < height; y++) {\n    image.setRGB(x,y,matrix.get(x,y) ? onColor : offColor);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int x=0; x < width; x++) {\n  for (int y=0; y < height; y++) {\n    image.setRGB(x,y,matrix.get(x,y) ? onColor : offColor);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 38,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 445,
        "startLineNumber" : 51,
        "startColumnNumber" : 92,
        "endLineNumber" : 63,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int width=matrix.getWidth();\n  int height=matrix.getHeight();\n  BufferedImage image=new BufferedImage(width,height,BufferedImage.TYPE_INT_RGB);\n  int onColor=config.getPixelOnColor();\n  int offColor=config.getPixelOffColor();\n  for (int x=0; x < width; x++) {\n    for (int y=0; y < height; y++) {\n      image.setRGB(x,y,matrix.get(x,y) ? onColor : offColor);\n    }\n  }\n  return image;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 82,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 635,
        "startLineNumber" : 48,
        "startColumnNumber" : 2,
        "endLineNumber" : 63,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * As  {@link #toBufferedImage(BitMatrix)}, but allows customization of the output.\n */\npublic static BufferedImage toBufferedImage(BitMatrix matrix,MatrixToImageConfig config){\n  int width=matrix.getWidth();\n  int height=matrix.getHeight();\n  BufferedImage image=new BufferedImage(width,height,BufferedImage.TYPE_INT_RGB);\n  int onColor=config.getPixelOnColor();\n  int offColor=config.getPixelOffColor();\n  for (int x=0; x < width; x++) {\n    for (int y=0; y < height; y++) {\n      image.setRGB(x,y,matrix.get(x,y) ? onColor : offColor);\n    }\n  }\n  return image;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 66
      },
      "nodeContext" : "image.setRGB(x,y,matrix.get(x,y) ? onColor : offColor);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 59,
    "startColumnNumber" : 46,
    "endLineNumber" : 59,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ ]
}