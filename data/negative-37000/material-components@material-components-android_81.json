{
  "id" : 81,
  "expression" : "rippleColor",
  "projectName" : "material-components@material-components-android",
  "commitID" : "79bf9d0e8e62eea9c2f2620d4e1a0a2ca0e12017",
  "filePath" : "/lib/java/com/google/android/material/ripple/RippleUtils.java",
  "occurrences" : 10,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "rippleColor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 109,
      "startColumnNumber" : 35,
      "endLineNumber" : 109,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 109,
        "startColumnNumber" : 18,
        "endLineNumber" : 109,
        "endColumnNumber" : 75
      },
      "nodeContext" : "getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 109,
        "startColumnNumber" : 6,
        "endLineNumber" : 109,
        "endColumnNumber" : 75
      },
      "nodeContext" : "colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 109,
        "startColumnNumber" : 6,
        "endLineNumber" : 109,
        "endColumnNumber" : 76
      },
      "nodeContext" : "colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 793,
        "startLineNumber" : 95,
        "startColumnNumber" : 30,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int size=2;\n  final int[][] states=new int[size][];\n  final int[] colors=new int[size];\n  int i=0;\n  states[i]=SELECTED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n  i++;\n  states[i]=StateSet.NOTHING;\n  colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n  i++;\n  return new ColorStateList(states,colors);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2269,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 168,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (USE_FRAMEWORK_RIPPLE) {\n  int size=2;\n  final int[][] states=new int[size][];\n  final int[] colors=new int[size];\n  int i=0;\n  states[i]=SELECTED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n  i++;\n  states[i]=StateSet.NOTHING;\n  colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n  i++;\n  return new ColorStateList(states,colors);\n}\n else {\n  int size=10;\n  final int[][] states=new int[size][];\n  final int[] colors=new int[size];\n  int i=0;\n  states[i]=SELECTED_PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n  i++;\n  states[i]=SELECTED_STATE_SET;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  states[i]=PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n  i++;\n  states[i]=StateSet.NOTHING;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  return new ColorStateList(states,colors);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 306,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2279,
        "startLineNumber" : 94,
        "startColumnNumber" : 98,
        "endLineNumber" : 169,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (USE_FRAMEWORK_RIPPLE) {\n    int size=2;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    return new ColorStateList(states,colors);\n  }\n else {\n    int size=10;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n    i++;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    states[i]=PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    return new ColorStateList(states,colors);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 307,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3387,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 169,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Converts the given color state list to one that can be passed to a RippleDrawable. <p>The passed in stateful ripple color can contain colors for these states: <ul> <li>android:state_pressed=\"true\" <li>android:state_focused=\"true\" and android:state_hovered=\"true\" <li>android:state_focused=\"true\" <li>android:state_hovered=\"true\" <li>Default unselected state - transparent color. TODO: remove </ul> <p>For selectable components, the ripple color may contain additional colors for these states: <ul> <li>android:state_pressed=\"true\" and android:state_selected=\"true\" <li>android:state_focused=\"true\" and android:state_hovered=\"true\" and android:state_selected=\"true\" <li>android:state_focused=\"true\" and android:state_selected=\"true\" <li>android:state_hovered=\"true\" and android:state_selected=\"true\" <li>Default selected state - transparent color. </ul>\n */\n@NonNull public static ColorStateList convertToRippleDrawableColor(@Nullable ColorStateList rippleColor){\n  if (USE_FRAMEWORK_RIPPLE) {\n    int size=2;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    return new ColorStateList(states,colors);\n  }\n else {\n    int size=10;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n    i++;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    states[i]=PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    return new ColorStateList(states,colors);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 322,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 109,
        "startColumnNumber" : 6,
        "endLineNumber" : 109,
        "endColumnNumber" : 76
      },
      "nodeContext" : "colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.android.material.ripple.ColorStateList"
  }, {
    "nodeContext" : "rippleColor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 114,
      "startColumnNumber" : 35,
      "endLineNumber" : 114,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 114,
        "startColumnNumber" : 18,
        "endLineNumber" : 114,
        "endColumnNumber" : 66
      },
      "nodeContext" : "getColorForState(rippleColor,PRESSED_STATE_SET)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 114,
        "startColumnNumber" : 6,
        "endLineNumber" : 114,
        "endColumnNumber" : 66
      },
      "nodeContext" : "colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 114,
        "startColumnNumber" : 6,
        "endLineNumber" : 114,
        "endColumnNumber" : 67
      },
      "nodeContext" : "colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 793,
        "startLineNumber" : 95,
        "startColumnNumber" : 30,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int size=2;\n  final int[][] states=new int[size][];\n  final int[] colors=new int[size];\n  int i=0;\n  states[i]=SELECTED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n  i++;\n  states[i]=StateSet.NOTHING;\n  colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n  i++;\n  return new ColorStateList(states,colors);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2269,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 168,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (USE_FRAMEWORK_RIPPLE) {\n  int size=2;\n  final int[][] states=new int[size][];\n  final int[] colors=new int[size];\n  int i=0;\n  states[i]=SELECTED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n  i++;\n  states[i]=StateSet.NOTHING;\n  colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n  i++;\n  return new ColorStateList(states,colors);\n}\n else {\n  int size=10;\n  final int[][] states=new int[size][];\n  final int[] colors=new int[size];\n  int i=0;\n  states[i]=SELECTED_PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n  i++;\n  states[i]=SELECTED_STATE_SET;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  states[i]=PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n  i++;\n  states[i]=StateSet.NOTHING;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  return new ColorStateList(states,colors);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 306,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2279,
        "startLineNumber" : 94,
        "startColumnNumber" : 98,
        "endLineNumber" : 169,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (USE_FRAMEWORK_RIPPLE) {\n    int size=2;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    return new ColorStateList(states,colors);\n  }\n else {\n    int size=10;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n    i++;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    states[i]=PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    return new ColorStateList(states,colors);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 307,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3387,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 169,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Converts the given color state list to one that can be passed to a RippleDrawable. <p>The passed in stateful ripple color can contain colors for these states: <ul> <li>android:state_pressed=\"true\" <li>android:state_focused=\"true\" and android:state_hovered=\"true\" <li>android:state_focused=\"true\" <li>android:state_hovered=\"true\" <li>Default unselected state - transparent color. TODO: remove </ul> <p>For selectable components, the ripple color may contain additional colors for these states: <ul> <li>android:state_pressed=\"true\" and android:state_selected=\"true\" <li>android:state_focused=\"true\" and android:state_hovered=\"true\" and android:state_selected=\"true\" <li>android:state_focused=\"true\" and android:state_selected=\"true\" <li>android:state_hovered=\"true\" and android:state_selected=\"true\" <li>Default selected state - transparent color. </ul>\n */\n@NonNull public static ColorStateList convertToRippleDrawableColor(@Nullable ColorStateList rippleColor){\n  if (USE_FRAMEWORK_RIPPLE) {\n    int size=2;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    return new ColorStateList(states,colors);\n  }\n else {\n    int size=10;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n    i++;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    states[i]=PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    return new ColorStateList(states,colors);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 322,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 114,
        "startColumnNumber" : 6,
        "endLineNumber" : 114,
        "endColumnNumber" : 67
      },
      "nodeContext" : "colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.android.material.ripple.ColorStateList"
  }, {
    "nodeContext" : "rippleColor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 126,
      "startColumnNumber" : 35,
      "endLineNumber" : 126,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 126,
        "startColumnNumber" : 18,
        "endLineNumber" : 126,
        "endColumnNumber" : 75
      },
      "nodeContext" : "getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 126,
        "startColumnNumber" : 6,
        "endLineNumber" : 126,
        "endColumnNumber" : 75
      },
      "nodeContext" : "colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 126,
        "startColumnNumber" : 6,
        "endLineNumber" : 126,
        "endColumnNumber" : 76
      },
      "nodeContext" : "colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1444,
        "startLineNumber" : 118,
        "startColumnNumber" : 11,
        "endLineNumber" : 168,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int size=10;\n  final int[][] states=new int[size][];\n  final int[] colors=new int[size];\n  int i=0;\n  states[i]=SELECTED_PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n  i++;\n  states[i]=SELECTED_STATE_SET;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  states[i]=PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n  i++;\n  states[i]=StateSet.NOTHING;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  return new ColorStateList(states,colors);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 223,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2269,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 168,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (USE_FRAMEWORK_RIPPLE) {\n  int size=2;\n  final int[][] states=new int[size][];\n  final int[] colors=new int[size];\n  int i=0;\n  states[i]=SELECTED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n  i++;\n  states[i]=StateSet.NOTHING;\n  colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n  i++;\n  return new ColorStateList(states,colors);\n}\n else {\n  int size=10;\n  final int[][] states=new int[size][];\n  final int[] colors=new int[size];\n  int i=0;\n  states[i]=SELECTED_PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n  i++;\n  states[i]=SELECTED_STATE_SET;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  states[i]=PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n  i++;\n  states[i]=StateSet.NOTHING;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  return new ColorStateList(states,colors);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 306,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2279,
        "startLineNumber" : 94,
        "startColumnNumber" : 98,
        "endLineNumber" : 169,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (USE_FRAMEWORK_RIPPLE) {\n    int size=2;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    return new ColorStateList(states,colors);\n  }\n else {\n    int size=10;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n    i++;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    states[i]=PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    return new ColorStateList(states,colors);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 307,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3387,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 169,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Converts the given color state list to one that can be passed to a RippleDrawable. <p>The passed in stateful ripple color can contain colors for these states: <ul> <li>android:state_pressed=\"true\" <li>android:state_focused=\"true\" and android:state_hovered=\"true\" <li>android:state_focused=\"true\" <li>android:state_hovered=\"true\" <li>Default unselected state - transparent color. TODO: remove </ul> <p>For selectable components, the ripple color may contain additional colors for these states: <ul> <li>android:state_pressed=\"true\" and android:state_selected=\"true\" <li>android:state_focused=\"true\" and android:state_hovered=\"true\" and android:state_selected=\"true\" <li>android:state_focused=\"true\" and android:state_selected=\"true\" <li>android:state_hovered=\"true\" and android:state_selected=\"true\" <li>Default selected state - transparent color. </ul>\n */\n@NonNull public static ColorStateList convertToRippleDrawableColor(@Nullable ColorStateList rippleColor){\n  if (USE_FRAMEWORK_RIPPLE) {\n    int size=2;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    return new ColorStateList(states,colors);\n  }\n else {\n    int size=10;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n    i++;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    states[i]=PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    return new ColorStateList(states,colors);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 322,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 126,
        "startColumnNumber" : 6,
        "endLineNumber" : 126,
        "endColumnNumber" : 76
      },
      "nodeContext" : "colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.android.material.ripple.ColorStateList"
  }, {
    "nodeContext" : "rippleColor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 130,
      "startColumnNumber" : 35,
      "endLineNumber" : 130,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 130,
        "startColumnNumber" : 18,
        "endLineNumber" : 130,
        "endColumnNumber" : 83
      },
      "nodeContext" : "getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 130,
        "startColumnNumber" : 6,
        "endLineNumber" : 130,
        "endColumnNumber" : 83
      },
      "nodeContext" : "colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 130,
        "startColumnNumber" : 6,
        "endLineNumber" : 130,
        "endColumnNumber" : 84
      },
      "nodeContext" : "colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1444,
        "startLineNumber" : 118,
        "startColumnNumber" : 11,
        "endLineNumber" : 168,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int size=10;\n  final int[][] states=new int[size][];\n  final int[] colors=new int[size];\n  int i=0;\n  states[i]=SELECTED_PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n  i++;\n  states[i]=SELECTED_STATE_SET;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  states[i]=PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n  i++;\n  states[i]=StateSet.NOTHING;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  return new ColorStateList(states,colors);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 223,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2269,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 168,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (USE_FRAMEWORK_RIPPLE) {\n  int size=2;\n  final int[][] states=new int[size][];\n  final int[] colors=new int[size];\n  int i=0;\n  states[i]=SELECTED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n  i++;\n  states[i]=StateSet.NOTHING;\n  colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n  i++;\n  return new ColorStateList(states,colors);\n}\n else {\n  int size=10;\n  final int[][] states=new int[size][];\n  final int[] colors=new int[size];\n  int i=0;\n  states[i]=SELECTED_PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n  i++;\n  states[i]=SELECTED_STATE_SET;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  states[i]=PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n  i++;\n  states[i]=StateSet.NOTHING;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  return new ColorStateList(states,colors);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 306,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2279,
        "startLineNumber" : 94,
        "startColumnNumber" : 98,
        "endLineNumber" : 169,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (USE_FRAMEWORK_RIPPLE) {\n    int size=2;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    return new ColorStateList(states,colors);\n  }\n else {\n    int size=10;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n    i++;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    states[i]=PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    return new ColorStateList(states,colors);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 307,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3387,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 169,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Converts the given color state list to one that can be passed to a RippleDrawable. <p>The passed in stateful ripple color can contain colors for these states: <ul> <li>android:state_pressed=\"true\" <li>android:state_focused=\"true\" and android:state_hovered=\"true\" <li>android:state_focused=\"true\" <li>android:state_hovered=\"true\" <li>Default unselected state - transparent color. TODO: remove </ul> <p>For selectable components, the ripple color may contain additional colors for these states: <ul> <li>android:state_pressed=\"true\" and android:state_selected=\"true\" <li>android:state_focused=\"true\" and android:state_hovered=\"true\" and android:state_selected=\"true\" <li>android:state_focused=\"true\" and android:state_selected=\"true\" <li>android:state_hovered=\"true\" and android:state_selected=\"true\" <li>Default selected state - transparent color. </ul>\n */\n@NonNull public static ColorStateList convertToRippleDrawableColor(@Nullable ColorStateList rippleColor){\n  if (USE_FRAMEWORK_RIPPLE) {\n    int size=2;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    return new ColorStateList(states,colors);\n  }\n else {\n    int size=10;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n    i++;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    states[i]=PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    return new ColorStateList(states,colors);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 322,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 130,
        "startColumnNumber" : 6,
        "endLineNumber" : 130,
        "endColumnNumber" : 84
      },
      "nodeContext" : "colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.android.material.ripple.ColorStateList"
  }, {
    "nodeContext" : "rippleColor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 134,
      "startColumnNumber" : 35,
      "endLineNumber" : 134,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 134,
        "startColumnNumber" : 18,
        "endLineNumber" : 134,
        "endColumnNumber" : 75
      },
      "nodeContext" : "getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 134,
        "startColumnNumber" : 6,
        "endLineNumber" : 134,
        "endColumnNumber" : 75
      },
      "nodeContext" : "colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 134,
        "startColumnNumber" : 6,
        "endLineNumber" : 134,
        "endColumnNumber" : 76
      },
      "nodeContext" : "colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1444,
        "startLineNumber" : 118,
        "startColumnNumber" : 11,
        "endLineNumber" : 168,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int size=10;\n  final int[][] states=new int[size][];\n  final int[] colors=new int[size];\n  int i=0;\n  states[i]=SELECTED_PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n  i++;\n  states[i]=SELECTED_STATE_SET;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  states[i]=PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n  i++;\n  states[i]=StateSet.NOTHING;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  return new ColorStateList(states,colors);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 223,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2269,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 168,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (USE_FRAMEWORK_RIPPLE) {\n  int size=2;\n  final int[][] states=new int[size][];\n  final int[] colors=new int[size];\n  int i=0;\n  states[i]=SELECTED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n  i++;\n  states[i]=StateSet.NOTHING;\n  colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n  i++;\n  return new ColorStateList(states,colors);\n}\n else {\n  int size=10;\n  final int[][] states=new int[size][];\n  final int[] colors=new int[size];\n  int i=0;\n  states[i]=SELECTED_PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n  i++;\n  states[i]=SELECTED_STATE_SET;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  states[i]=PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n  i++;\n  states[i]=StateSet.NOTHING;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  return new ColorStateList(states,colors);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 306,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2279,
        "startLineNumber" : 94,
        "startColumnNumber" : 98,
        "endLineNumber" : 169,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (USE_FRAMEWORK_RIPPLE) {\n    int size=2;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    return new ColorStateList(states,colors);\n  }\n else {\n    int size=10;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n    i++;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    states[i]=PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    return new ColorStateList(states,colors);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 307,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3387,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 169,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Converts the given color state list to one that can be passed to a RippleDrawable. <p>The passed in stateful ripple color can contain colors for these states: <ul> <li>android:state_pressed=\"true\" <li>android:state_focused=\"true\" and android:state_hovered=\"true\" <li>android:state_focused=\"true\" <li>android:state_hovered=\"true\" <li>Default unselected state - transparent color. TODO: remove </ul> <p>For selectable components, the ripple color may contain additional colors for these states: <ul> <li>android:state_pressed=\"true\" and android:state_selected=\"true\" <li>android:state_focused=\"true\" and android:state_hovered=\"true\" and android:state_selected=\"true\" <li>android:state_focused=\"true\" and android:state_selected=\"true\" <li>android:state_hovered=\"true\" and android:state_selected=\"true\" <li>Default selected state - transparent color. </ul>\n */\n@NonNull public static ColorStateList convertToRippleDrawableColor(@Nullable ColorStateList rippleColor){\n  if (USE_FRAMEWORK_RIPPLE) {\n    int size=2;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    return new ColorStateList(states,colors);\n  }\n else {\n    int size=10;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n    i++;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    states[i]=PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    return new ColorStateList(states,colors);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 322,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 134,
        "startColumnNumber" : 6,
        "endLineNumber" : 134,
        "endColumnNumber" : 76
      },
      "nodeContext" : "colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.android.material.ripple.ColorStateList"
  }, {
    "nodeContext" : "rippleColor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 138,
      "startColumnNumber" : 35,
      "endLineNumber" : 138,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 138,
        "startColumnNumber" : 18,
        "endLineNumber" : 138,
        "endColumnNumber" : 75
      },
      "nodeContext" : "getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 138,
        "startColumnNumber" : 6,
        "endLineNumber" : 138,
        "endColumnNumber" : 75
      },
      "nodeContext" : "colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 138,
        "startColumnNumber" : 6,
        "endLineNumber" : 138,
        "endColumnNumber" : 76
      },
      "nodeContext" : "colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1444,
        "startLineNumber" : 118,
        "startColumnNumber" : 11,
        "endLineNumber" : 168,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int size=10;\n  final int[][] states=new int[size][];\n  final int[] colors=new int[size];\n  int i=0;\n  states[i]=SELECTED_PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n  i++;\n  states[i]=SELECTED_STATE_SET;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  states[i]=PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n  i++;\n  states[i]=StateSet.NOTHING;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  return new ColorStateList(states,colors);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 223,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2269,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 168,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (USE_FRAMEWORK_RIPPLE) {\n  int size=2;\n  final int[][] states=new int[size][];\n  final int[] colors=new int[size];\n  int i=0;\n  states[i]=SELECTED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n  i++;\n  states[i]=StateSet.NOTHING;\n  colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n  i++;\n  return new ColorStateList(states,colors);\n}\n else {\n  int size=10;\n  final int[][] states=new int[size][];\n  final int[] colors=new int[size];\n  int i=0;\n  states[i]=SELECTED_PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n  i++;\n  states[i]=SELECTED_STATE_SET;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  states[i]=PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n  i++;\n  states[i]=StateSet.NOTHING;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  return new ColorStateList(states,colors);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 306,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2279,
        "startLineNumber" : 94,
        "startColumnNumber" : 98,
        "endLineNumber" : 169,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (USE_FRAMEWORK_RIPPLE) {\n    int size=2;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    return new ColorStateList(states,colors);\n  }\n else {\n    int size=10;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n    i++;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    states[i]=PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    return new ColorStateList(states,colors);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 307,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3387,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 169,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Converts the given color state list to one that can be passed to a RippleDrawable. <p>The passed in stateful ripple color can contain colors for these states: <ul> <li>android:state_pressed=\"true\" <li>android:state_focused=\"true\" and android:state_hovered=\"true\" <li>android:state_focused=\"true\" <li>android:state_hovered=\"true\" <li>Default unselected state - transparent color. TODO: remove </ul> <p>For selectable components, the ripple color may contain additional colors for these states: <ul> <li>android:state_pressed=\"true\" and android:state_selected=\"true\" <li>android:state_focused=\"true\" and android:state_hovered=\"true\" and android:state_selected=\"true\" <li>android:state_focused=\"true\" and android:state_selected=\"true\" <li>android:state_hovered=\"true\" and android:state_selected=\"true\" <li>Default selected state - transparent color. </ul>\n */\n@NonNull public static ColorStateList convertToRippleDrawableColor(@Nullable ColorStateList rippleColor){\n  if (USE_FRAMEWORK_RIPPLE) {\n    int size=2;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    return new ColorStateList(states,colors);\n  }\n else {\n    int size=10;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n    i++;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    states[i]=PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    return new ColorStateList(states,colors);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 322,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 138,
        "startColumnNumber" : 6,
        "endLineNumber" : 138,
        "endColumnNumber" : 76
      },
      "nodeContext" : "colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.android.material.ripple.ColorStateList"
  }, {
    "nodeContext" : "rippleColor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 147,
      "startColumnNumber" : 35,
      "endLineNumber" : 147,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 147,
        "startColumnNumber" : 18,
        "endLineNumber" : 147,
        "endColumnNumber" : 66
      },
      "nodeContext" : "getColorForState(rippleColor,PRESSED_STATE_SET)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 147,
        "startColumnNumber" : 6,
        "endLineNumber" : 147,
        "endColumnNumber" : 66
      },
      "nodeContext" : "colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 147,
        "startColumnNumber" : 6,
        "endLineNumber" : 147,
        "endColumnNumber" : 67
      },
      "nodeContext" : "colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1444,
        "startLineNumber" : 118,
        "startColumnNumber" : 11,
        "endLineNumber" : 168,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int size=10;\n  final int[][] states=new int[size][];\n  final int[] colors=new int[size];\n  int i=0;\n  states[i]=SELECTED_PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n  i++;\n  states[i]=SELECTED_STATE_SET;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  states[i]=PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n  i++;\n  states[i]=StateSet.NOTHING;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  return new ColorStateList(states,colors);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 223,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2269,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 168,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (USE_FRAMEWORK_RIPPLE) {\n  int size=2;\n  final int[][] states=new int[size][];\n  final int[] colors=new int[size];\n  int i=0;\n  states[i]=SELECTED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n  i++;\n  states[i]=StateSet.NOTHING;\n  colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n  i++;\n  return new ColorStateList(states,colors);\n}\n else {\n  int size=10;\n  final int[][] states=new int[size][];\n  final int[] colors=new int[size];\n  int i=0;\n  states[i]=SELECTED_PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n  i++;\n  states[i]=SELECTED_STATE_SET;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  states[i]=PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n  i++;\n  states[i]=StateSet.NOTHING;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  return new ColorStateList(states,colors);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 306,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2279,
        "startLineNumber" : 94,
        "startColumnNumber" : 98,
        "endLineNumber" : 169,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (USE_FRAMEWORK_RIPPLE) {\n    int size=2;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    return new ColorStateList(states,colors);\n  }\n else {\n    int size=10;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n    i++;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    states[i]=PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    return new ColorStateList(states,colors);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 307,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3387,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 169,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Converts the given color state list to one that can be passed to a RippleDrawable. <p>The passed in stateful ripple color can contain colors for these states: <ul> <li>android:state_pressed=\"true\" <li>android:state_focused=\"true\" and android:state_hovered=\"true\" <li>android:state_focused=\"true\" <li>android:state_hovered=\"true\" <li>Default unselected state - transparent color. TODO: remove </ul> <p>For selectable components, the ripple color may contain additional colors for these states: <ul> <li>android:state_pressed=\"true\" and android:state_selected=\"true\" <li>android:state_focused=\"true\" and android:state_hovered=\"true\" and android:state_selected=\"true\" <li>android:state_focused=\"true\" and android:state_selected=\"true\" <li>android:state_hovered=\"true\" and android:state_selected=\"true\" <li>Default selected state - transparent color. </ul>\n */\n@NonNull public static ColorStateList convertToRippleDrawableColor(@Nullable ColorStateList rippleColor){\n  if (USE_FRAMEWORK_RIPPLE) {\n    int size=2;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    return new ColorStateList(states,colors);\n  }\n else {\n    int size=10;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n    i++;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    states[i]=PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    return new ColorStateList(states,colors);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 322,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 147,
        "startColumnNumber" : 6,
        "endLineNumber" : 147,
        "endColumnNumber" : 67
      },
      "nodeContext" : "colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.android.material.ripple.ColorStateList"
  }, {
    "nodeContext" : "rippleColor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 151,
      "startColumnNumber" : 35,
      "endLineNumber" : 151,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 151,
        "startColumnNumber" : 18,
        "endLineNumber" : 151,
        "endColumnNumber" : 74
      },
      "nodeContext" : "getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 151,
        "startColumnNumber" : 6,
        "endLineNumber" : 151,
        "endColumnNumber" : 74
      },
      "nodeContext" : "colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 151,
        "startColumnNumber" : 6,
        "endLineNumber" : 151,
        "endColumnNumber" : 75
      },
      "nodeContext" : "colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1444,
        "startLineNumber" : 118,
        "startColumnNumber" : 11,
        "endLineNumber" : 168,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int size=10;\n  final int[][] states=new int[size][];\n  final int[] colors=new int[size];\n  int i=0;\n  states[i]=SELECTED_PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n  i++;\n  states[i]=SELECTED_STATE_SET;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  states[i]=PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n  i++;\n  states[i]=StateSet.NOTHING;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  return new ColorStateList(states,colors);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 223,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2269,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 168,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (USE_FRAMEWORK_RIPPLE) {\n  int size=2;\n  final int[][] states=new int[size][];\n  final int[] colors=new int[size];\n  int i=0;\n  states[i]=SELECTED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n  i++;\n  states[i]=StateSet.NOTHING;\n  colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n  i++;\n  return new ColorStateList(states,colors);\n}\n else {\n  int size=10;\n  final int[][] states=new int[size][];\n  final int[] colors=new int[size];\n  int i=0;\n  states[i]=SELECTED_PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n  i++;\n  states[i]=SELECTED_STATE_SET;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  states[i]=PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n  i++;\n  states[i]=StateSet.NOTHING;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  return new ColorStateList(states,colors);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 306,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2279,
        "startLineNumber" : 94,
        "startColumnNumber" : 98,
        "endLineNumber" : 169,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (USE_FRAMEWORK_RIPPLE) {\n    int size=2;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    return new ColorStateList(states,colors);\n  }\n else {\n    int size=10;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n    i++;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    states[i]=PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    return new ColorStateList(states,colors);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 307,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3387,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 169,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Converts the given color state list to one that can be passed to a RippleDrawable. <p>The passed in stateful ripple color can contain colors for these states: <ul> <li>android:state_pressed=\"true\" <li>android:state_focused=\"true\" and android:state_hovered=\"true\" <li>android:state_focused=\"true\" <li>android:state_hovered=\"true\" <li>Default unselected state - transparent color. TODO: remove </ul> <p>For selectable components, the ripple color may contain additional colors for these states: <ul> <li>android:state_pressed=\"true\" and android:state_selected=\"true\" <li>android:state_focused=\"true\" and android:state_hovered=\"true\" and android:state_selected=\"true\" <li>android:state_focused=\"true\" and android:state_selected=\"true\" <li>android:state_hovered=\"true\" and android:state_selected=\"true\" <li>Default selected state - transparent color. </ul>\n */\n@NonNull public static ColorStateList convertToRippleDrawableColor(@Nullable ColorStateList rippleColor){\n  if (USE_FRAMEWORK_RIPPLE) {\n    int size=2;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    return new ColorStateList(states,colors);\n  }\n else {\n    int size=10;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n    i++;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    states[i]=PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    return new ColorStateList(states,colors);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 322,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 151,
        "startColumnNumber" : 6,
        "endLineNumber" : 151,
        "endColumnNumber" : 75
      },
      "nodeContext" : "colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.android.material.ripple.ColorStateList"
  }, {
    "nodeContext" : "rippleColor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 155,
      "startColumnNumber" : 35,
      "endLineNumber" : 155,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 155,
        "startColumnNumber" : 18,
        "endLineNumber" : 155,
        "endColumnNumber" : 66
      },
      "nodeContext" : "getColorForState(rippleColor,FOCUSED_STATE_SET)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 155,
        "startColumnNumber" : 6,
        "endLineNumber" : 155,
        "endColumnNumber" : 66
      },
      "nodeContext" : "colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 155,
        "startColumnNumber" : 6,
        "endLineNumber" : 155,
        "endColumnNumber" : 67
      },
      "nodeContext" : "colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1444,
        "startLineNumber" : 118,
        "startColumnNumber" : 11,
        "endLineNumber" : 168,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int size=10;\n  final int[][] states=new int[size][];\n  final int[] colors=new int[size];\n  int i=0;\n  states[i]=SELECTED_PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n  i++;\n  states[i]=SELECTED_STATE_SET;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  states[i]=PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n  i++;\n  states[i]=StateSet.NOTHING;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  return new ColorStateList(states,colors);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 223,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2269,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 168,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (USE_FRAMEWORK_RIPPLE) {\n  int size=2;\n  final int[][] states=new int[size][];\n  final int[] colors=new int[size];\n  int i=0;\n  states[i]=SELECTED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n  i++;\n  states[i]=StateSet.NOTHING;\n  colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n  i++;\n  return new ColorStateList(states,colors);\n}\n else {\n  int size=10;\n  final int[][] states=new int[size][];\n  final int[] colors=new int[size];\n  int i=0;\n  states[i]=SELECTED_PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n  i++;\n  states[i]=SELECTED_STATE_SET;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  states[i]=PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n  i++;\n  states[i]=StateSet.NOTHING;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  return new ColorStateList(states,colors);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 306,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2279,
        "startLineNumber" : 94,
        "startColumnNumber" : 98,
        "endLineNumber" : 169,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (USE_FRAMEWORK_RIPPLE) {\n    int size=2;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    return new ColorStateList(states,colors);\n  }\n else {\n    int size=10;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n    i++;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    states[i]=PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    return new ColorStateList(states,colors);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 307,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3387,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 169,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Converts the given color state list to one that can be passed to a RippleDrawable. <p>The passed in stateful ripple color can contain colors for these states: <ul> <li>android:state_pressed=\"true\" <li>android:state_focused=\"true\" and android:state_hovered=\"true\" <li>android:state_focused=\"true\" <li>android:state_hovered=\"true\" <li>Default unselected state - transparent color. TODO: remove </ul> <p>For selectable components, the ripple color may contain additional colors for these states: <ul> <li>android:state_pressed=\"true\" and android:state_selected=\"true\" <li>android:state_focused=\"true\" and android:state_hovered=\"true\" and android:state_selected=\"true\" <li>android:state_focused=\"true\" and android:state_selected=\"true\" <li>android:state_hovered=\"true\" and android:state_selected=\"true\" <li>Default selected state - transparent color. </ul>\n */\n@NonNull public static ColorStateList convertToRippleDrawableColor(@Nullable ColorStateList rippleColor){\n  if (USE_FRAMEWORK_RIPPLE) {\n    int size=2;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    return new ColorStateList(states,colors);\n  }\n else {\n    int size=10;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n    i++;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    states[i]=PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    return new ColorStateList(states,colors);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 322,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 155,
        "startColumnNumber" : 6,
        "endLineNumber" : 155,
        "endColumnNumber" : 67
      },
      "nodeContext" : "colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.android.material.ripple.ColorStateList"
  }, {
    "nodeContext" : "rippleColor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 159,
      "startColumnNumber" : 35,
      "endLineNumber" : 159,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 159,
        "startColumnNumber" : 18,
        "endLineNumber" : 159,
        "endColumnNumber" : 66
      },
      "nodeContext" : "getColorForState(rippleColor,HOVERED_STATE_SET)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 159,
        "startColumnNumber" : 6,
        "endLineNumber" : 159,
        "endColumnNumber" : 66
      },
      "nodeContext" : "colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 159,
        "startColumnNumber" : 6,
        "endLineNumber" : 159,
        "endColumnNumber" : 67
      },
      "nodeContext" : "colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1444,
        "startLineNumber" : 118,
        "startColumnNumber" : 11,
        "endLineNumber" : 168,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int size=10;\n  final int[][] states=new int[size][];\n  final int[] colors=new int[size];\n  int i=0;\n  states[i]=SELECTED_PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n  i++;\n  states[i]=SELECTED_STATE_SET;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  states[i]=PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n  i++;\n  states[i]=StateSet.NOTHING;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  return new ColorStateList(states,colors);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 223,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2269,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 168,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (USE_FRAMEWORK_RIPPLE) {\n  int size=2;\n  final int[][] states=new int[size][];\n  final int[] colors=new int[size];\n  int i=0;\n  states[i]=SELECTED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n  i++;\n  states[i]=StateSet.NOTHING;\n  colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n  i++;\n  return new ColorStateList(states,colors);\n}\n else {\n  int size=10;\n  final int[][] states=new int[size][];\n  final int[] colors=new int[size];\n  int i=0;\n  states[i]=SELECTED_PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=SELECTED_HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n  i++;\n  states[i]=SELECTED_STATE_SET;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  states[i]=PRESSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n  i++;\n  states[i]=FOCUSED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n  i++;\n  states[i]=HOVERED_STATE_SET;\n  colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n  i++;\n  states[i]=StateSet.NOTHING;\n  colors[i]=Color.TRANSPARENT;\n  i++;\n  return new ColorStateList(states,colors);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 306,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2279,
        "startLineNumber" : 94,
        "startColumnNumber" : 98,
        "endLineNumber" : 169,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (USE_FRAMEWORK_RIPPLE) {\n    int size=2;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    return new ColorStateList(states,colors);\n  }\n else {\n    int size=10;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n    i++;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    states[i]=PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    return new ColorStateList(states,colors);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 307,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3387,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 169,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Converts the given color state list to one that can be passed to a RippleDrawable. <p>The passed in stateful ripple color can contain colors for these states: <ul> <li>android:state_pressed=\"true\" <li>android:state_focused=\"true\" and android:state_hovered=\"true\" <li>android:state_focused=\"true\" <li>android:state_hovered=\"true\" <li>Default unselected state - transparent color. TODO: remove </ul> <p>For selectable components, the ripple color may contain additional colors for these states: <ul> <li>android:state_pressed=\"true\" and android:state_selected=\"true\" <li>android:state_focused=\"true\" and android:state_hovered=\"true\" and android:state_selected=\"true\" <li>android:state_focused=\"true\" and android:state_selected=\"true\" <li>android:state_hovered=\"true\" and android:state_selected=\"true\" <li>Default selected state - transparent color. </ul>\n */\n@NonNull public static ColorStateList convertToRippleDrawableColor(@Nullable ColorStateList rippleColor){\n  if (USE_FRAMEWORK_RIPPLE) {\n    int size=2;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    return new ColorStateList(states,colors);\n  }\n else {\n    int size=10;\n    final int[][] states=new int[size][];\n    final int[] colors=new int[size];\n    int i=0;\n    states[i]=SELECTED_PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_PRESSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=SELECTED_HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,SELECTED_HOVERED_STATE_SET);\n    i++;\n    states[i]=SELECTED_STATE_SET;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    states[i]=PRESSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,PRESSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_FOCUSED_STATE_SET);\n    i++;\n    states[i]=FOCUSED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,FOCUSED_STATE_SET);\n    i++;\n    states[i]=HOVERED_STATE_SET;\n    colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n    i++;\n    states[i]=StateSet.NOTHING;\n    colors[i]=Color.TRANSPARENT;\n    i++;\n    return new ColorStateList(states,colors);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 322,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 159,
        "startColumnNumber" : 6,
        "endLineNumber" : 159,
        "endColumnNumber" : 67
      },
      "nodeContext" : "colors[i]=getColorForState(rippleColor,HOVERED_STATE_SET);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.android.material.ripple.ColorStateList"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 109,
    "startColumnNumber" : 35,
    "endLineNumber" : 109,
    "endColumnNumber" : 46
  }, {
    "charLength" : 11,
    "startLineNumber" : 114,
    "startColumnNumber" : 35,
    "endLineNumber" : 114,
    "endColumnNumber" : 46
  }, {
    "charLength" : 11,
    "startLineNumber" : 126,
    "startColumnNumber" : 35,
    "endLineNumber" : 126,
    "endColumnNumber" : 46
  }, {
    "charLength" : 11,
    "startLineNumber" : 130,
    "startColumnNumber" : 35,
    "endLineNumber" : 130,
    "endColumnNumber" : 46
  }, {
    "charLength" : 11,
    "startLineNumber" : 134,
    "startColumnNumber" : 35,
    "endLineNumber" : 134,
    "endColumnNumber" : 46
  }, {
    "charLength" : 11,
    "startLineNumber" : 138,
    "startColumnNumber" : 35,
    "endLineNumber" : 138,
    "endColumnNumber" : 46
  }, {
    "charLength" : 11,
    "startLineNumber" : 147,
    "startColumnNumber" : 35,
    "endLineNumber" : 147,
    "endColumnNumber" : 46
  }, {
    "charLength" : 11,
    "startLineNumber" : 151,
    "startColumnNumber" : 35,
    "endLineNumber" : 151,
    "endColumnNumber" : 46
  }, {
    "charLength" : 11,
    "startLineNumber" : 155,
    "startColumnNumber" : 35,
    "endLineNumber" : 155,
    "endColumnNumber" : 46
  }, {
    "charLength" : 11,
    "startLineNumber" : 159,
    "startColumnNumber" : 35,
    "endLineNumber" : 159,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 3
  } ]
}