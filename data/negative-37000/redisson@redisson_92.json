{
  "id" : 92,
  "expression" : "\"34\"",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson/src/test/java/org/redisson/rx/RedissonMapCacheRxTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"34\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 247,
      "startColumnNumber" : 66,
      "endLineNumber" : 247,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 247,
        "startColumnNumber" : 50,
        "endLineNumber" : 247,
        "endColumnNumber" : 71
      },
      "nodeContext" : "new SimpleValue(\"34\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 247,
        "startColumnNumber" : 32,
        "endLineNumber" : 247,
        "endColumnNumber" : 72
      },
      "nodeContext" : "map.containsValue(new SimpleValue(\"34\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 247,
        "startColumnNumber" : 27,
        "endLineNumber" : 247,
        "endColumnNumber" : 73
      },
      "nodeContext" : "sync(map.containsValue(new SimpleValue(\"34\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 247,
        "startColumnNumber" : 8,
        "endLineNumber" : 247,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Assert.assertFalse(sync(map.containsValue(new SimpleValue(\"34\"))))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 247,
        "startColumnNumber" : 8,
        "endLineNumber" : 247,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Assert.assertFalse(sync(map.containsValue(new SimpleValue(\"34\"))));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 540,
        "startLineNumber" : 245,
        "startColumnNumber" : 64,
        "endLineNumber" : 256,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  RMapCacheRx<SimpleKey,SimpleValue> map=redisson.getMapCache(\"simple31\",new MsgPackJacksonCodec());\n  Assert.assertFalse(sync(map.containsValue(new SimpleValue(\"34\"))));\n  sync(map.put(new SimpleKey(\"33\"),new SimpleValue(\"44\"),1,TimeUnit.SECONDS));\n  Assert.assertTrue(sync(map.containsValue(new SimpleValue(\"44\"))));\n  Assert.assertFalse(sync(map.containsValue(new SimpleValue(\"34\"))));\n  Thread.sleep(1000);\n  Assert.assertFalse(sync(map.containsValue(new SimpleValue(\"44\"))));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 610,
        "startLineNumber" : 244,
        "startColumnNumber" : 4,
        "endLineNumber" : 256,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testContainsValue() throws InterruptedException {\n  RMapCacheRx<SimpleKey,SimpleValue> map=redisson.getMapCache(\"simple31\",new MsgPackJacksonCodec());\n  Assert.assertFalse(sync(map.containsValue(new SimpleValue(\"34\"))));\n  sync(map.put(new SimpleKey(\"33\"),new SimpleValue(\"44\"),1,TimeUnit.SECONDS));\n  Assert.assertTrue(sync(map.containsValue(new SimpleValue(\"44\"))));\n  Assert.assertFalse(sync(map.containsValue(new SimpleValue(\"34\"))));\n  Thread.sleep(1000);\n  Assert.assertFalse(sync(map.containsValue(new SimpleValue(\"44\"))));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 247,
        "startColumnNumber" : 8,
        "endLineNumber" : 247,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Assert.assertFalse(sync(map.containsValue(new SimpleValue(\"34\"))));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"34\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 251,
      "startColumnNumber" : 66,
      "endLineNumber" : 251,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 251,
        "startColumnNumber" : 50,
        "endLineNumber" : 251,
        "endColumnNumber" : 71
      },
      "nodeContext" : "new SimpleValue(\"34\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 251,
        "startColumnNumber" : 32,
        "endLineNumber" : 251,
        "endColumnNumber" : 72
      },
      "nodeContext" : "map.containsValue(new SimpleValue(\"34\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 251,
        "startColumnNumber" : 27,
        "endLineNumber" : 251,
        "endColumnNumber" : 73
      },
      "nodeContext" : "sync(map.containsValue(new SimpleValue(\"34\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 251,
        "startColumnNumber" : 8,
        "endLineNumber" : 251,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Assert.assertFalse(sync(map.containsValue(new SimpleValue(\"34\"))))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 251,
        "startColumnNumber" : 8,
        "endLineNumber" : 251,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Assert.assertFalse(sync(map.containsValue(new SimpleValue(\"34\"))));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 540,
        "startLineNumber" : 245,
        "startColumnNumber" : 64,
        "endLineNumber" : 256,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  RMapCacheRx<SimpleKey,SimpleValue> map=redisson.getMapCache(\"simple31\",new MsgPackJacksonCodec());\n  Assert.assertFalse(sync(map.containsValue(new SimpleValue(\"34\"))));\n  sync(map.put(new SimpleKey(\"33\"),new SimpleValue(\"44\"),1,TimeUnit.SECONDS));\n  Assert.assertTrue(sync(map.containsValue(new SimpleValue(\"44\"))));\n  Assert.assertFalse(sync(map.containsValue(new SimpleValue(\"34\"))));\n  Thread.sleep(1000);\n  Assert.assertFalse(sync(map.containsValue(new SimpleValue(\"44\"))));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 610,
        "startLineNumber" : 244,
        "startColumnNumber" : 4,
        "endLineNumber" : 256,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testContainsValue() throws InterruptedException {\n  RMapCacheRx<SimpleKey,SimpleValue> map=redisson.getMapCache(\"simple31\",new MsgPackJacksonCodec());\n  Assert.assertFalse(sync(map.containsValue(new SimpleValue(\"34\"))));\n  sync(map.put(new SimpleKey(\"33\"),new SimpleValue(\"44\"),1,TimeUnit.SECONDS));\n  Assert.assertTrue(sync(map.containsValue(new SimpleValue(\"44\"))));\n  Assert.assertFalse(sync(map.containsValue(new SimpleValue(\"34\"))));\n  Thread.sleep(1000);\n  Assert.assertFalse(sync(map.containsValue(new SimpleValue(\"44\"))));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 251,
        "startColumnNumber" : 8,
        "endLineNumber" : 251,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Assert.assertFalse(sync(map.containsValue(new SimpleValue(\"34\"))));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 247,
    "startColumnNumber" : 66,
    "endLineNumber" : 247,
    "endColumnNumber" : 70
  }, {
    "charLength" : 4,
    "startLineNumber" : 251,
    "startColumnNumber" : 66,
    "endLineNumber" : 251,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}