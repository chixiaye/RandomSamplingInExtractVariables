{
  "id" : 318,
  "expression" : "new Windowed<>(key,window)",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/test/java/org/apache/kafka/streams/kstream/internals/WindowedStreamPartitionerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Windowed<>(key,window)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 74,
      "startColumnNumber" : 54,
      "endLineNumber" : 74,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 74,
        "startColumnNumber" : 40,
        "endLineNumber" : 74,
        "endColumnNumber" : 81
      },
      "nodeContext" : "windowedKey=new Windowed<>(key,window)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 74,
        "startColumnNumber" : 16,
        "endLineNumber" : 74,
        "endColumnNumber" : 82
      },
      "nodeContext" : "final Windowed<Integer> windowedKey=new Windowed<>(key,window);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 335,
        "startLineNumber" : 71,
        "startColumnNumber" : 41,
        "endLineNumber" : 78,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  final TimeWindow window=new TimeWindow(10 * w,20 * w);\n  final Windowed<Integer> windowedKey=new Windowed<>(key,window);\n  final Integer actual=streamPartitioner.partition(topicName,windowedKey,value,infos.size());\n  assertEquals(expected,actual);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 364,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 78,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int w=1; w < 10; w++) {\n  final TimeWindow window=new TimeWindow(10 * w,20 * w);\n  final Windowed<Integer> windowedKey=new Windowed<>(key,window);\n  final Integer actual=streamPartitioner.partition(topicName,windowedKey,value,infos.size());\n  assertEquals(expected,actual);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 62,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 768,
        "startLineNumber" : 62,
        "startColumnNumber" : 37,
        "endLineNumber" : 79,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final Integer key=rand.nextInt();\n  final byte[] keyBytes=intSerializer.serialize(topicName,key);\n  final String value=key.toString();\n  final byte[] valueBytes=stringSerializer.serialize(topicName,value);\n  final Integer expected=defaultPartitioner.partition(\"topic\",key,keyBytes,value,valueBytes,cluster);\n  for (int w=1; w < 10; w++) {\n    final TimeWindow window=new TimeWindow(10 * w,20 * w);\n    final Windowed<Integer> windowedKey=new Windowed<>(key,window);\n    final Integer actual=streamPartitioner.partition(topicName,windowedKey,value,infos.size());\n    assertEquals(expected,actual);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 797,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int k=0; k < 10; k++) {\n  final Integer key=rand.nextInt();\n  final byte[] keyBytes=intSerializer.serialize(topicName,key);\n  final String value=key.toString();\n  final byte[] valueBytes=stringSerializer.serialize(topicName,value);\n  final Integer expected=defaultPartitioner.partition(\"topic\",key,keyBytes,value,valueBytes,cluster);\n  for (int w=1; w < 10; w++) {\n    final TimeWindow window=new TimeWindow(10 * w,20 * w);\n    final Windowed<Integer> windowedKey=new Windowed<>(key,window);\n    final Integer actual=streamPartitioner.partition(topicName,windowedKey,value,infos.size());\n    assertEquals(expected,actual);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 131,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1219,
        "startLineNumber" : 56,
        "startColumnNumber" : 37,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Random rand=new Random();\n  final DefaultPartitioner defaultPartitioner=new DefaultPartitioner();\n  final WindowedSerializer<Integer> timeWindowedSerializer=new TimeWindowedSerializer<>(intSerializer);\n  final WindowedStreamPartitioner<Integer,String> streamPartitioner=new WindowedStreamPartitioner<>(timeWindowedSerializer);\n  for (int k=0; k < 10; k++) {\n    final Integer key=rand.nextInt();\n    final byte[] keyBytes=intSerializer.serialize(topicName,key);\n    final String value=key.toString();\n    final byte[] valueBytes=stringSerializer.serialize(topicName,value);\n    final Integer expected=defaultPartitioner.partition(\"topic\",key,keyBytes,value,valueBytes,cluster);\n    for (int w=1; w < 10; w++) {\n      final TimeWindow window=new TimeWindow(10 * w,20 * w);\n      final Windowed<Integer> windowedKey=new Windowed<>(key,window);\n      final Integer actual=streamPartitioner.partition(topicName,windowedKey,value,infos.size());\n      assertEquals(expected,actual);\n    }\n  }\n  defaultPartitioner.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 184,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1262,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCopartitioning(){\n  final Random rand=new Random();\n  final DefaultPartitioner defaultPartitioner=new DefaultPartitioner();\n  final WindowedSerializer<Integer> timeWindowedSerializer=new TimeWindowedSerializer<>(intSerializer);\n  final WindowedStreamPartitioner<Integer,String> streamPartitioner=new WindowedStreamPartitioner<>(timeWindowedSerializer);\n  for (int k=0; k < 10; k++) {\n    final Integer key=rand.nextInt();\n    final byte[] keyBytes=intSerializer.serialize(topicName,key);\n    final String value=key.toString();\n    final byte[] valueBytes=stringSerializer.serialize(topicName,value);\n    final Integer expected=defaultPartitioner.partition(\"topic\",key,keyBytes,value,valueBytes,cluster);\n    for (int w=1; w < 10; w++) {\n      final TimeWindow window=new TimeWindow(10 * w,20 * w);\n      final Windowed<Integer> windowedKey=new Windowed<>(key,window);\n      final Integer actual=streamPartitioner.partition(topicName,windowedKey,value,infos.size());\n      assertEquals(expected,actual);\n    }\n  }\n  defaultPartitioner.close();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 190,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 74,
        "startColumnNumber" : 16,
        "endLineNumber" : 74,
        "endColumnNumber" : 82
      },
      "nodeContext" : "final Windowed<Integer> windowedKey=new Windowed<>(key,window);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "org.apache.kafka.streams.kstream.Windowed<java.lang.Integer>"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 74,
    "startColumnNumber" : 54,
    "endLineNumber" : 74,
    "endColumnNumber" : 81
  } ],
  "layoutRelationDataList" : [ ]
}