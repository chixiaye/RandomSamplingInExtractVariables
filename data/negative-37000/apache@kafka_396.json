{
  "id" : 396,
  "expression" : "computeTasksToRemainingStandbys(numStandbyReplicas,statefulTaskIds)",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/DefaultStandbyTaskAssignor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "computeTasksToRemainingStandbys(numStandbyReplicas,statefulTaskIds)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 162,
      "startLineNumber" : 45,
      "startColumnNumber" : 62,
      "endLineNumber" : 46,
      "endColumnNumber" : 110
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 45,
        "startColumnNumber" : 35,
        "endLineNumber" : 46,
        "endColumnNumber" : 110
      },
      "nodeContext" : "tasksToRemainingStandbys=computeTasksToRemainingStandbys(numStandbyReplicas,statefulTaskIds)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 111
      },
      "nodeContext" : "final Map<TaskId,Integer> tasksToRemainingStandbys=computeTasksToRemainingStandbys(numStandbyReplicas,statefulTaskIds);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1623,
        "startLineNumber" : 43,
        "startColumnNumber" : 81,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int numStandbyReplicas=configs.numStandbyReplicas;\n  final Map<TaskId,Integer> tasksToRemainingStandbys=computeTasksToRemainingStandbys(numStandbyReplicas,statefulTaskIds);\n  final ConstrainedPrioritySet standbyTaskClientsByTaskLoad=createLeastLoadedPrioritySetConstrainedByAssignedTask(clients);\n  standbyTaskClientsByTaskLoad.offerAll(clients.keySet());\n  for (  final TaskId task : statefulTaskIds) {\n    final int numRemainingStandbys=pollClientAndMaybeAssignAndUpdateRemainingStandbyTasks(clients,tasksToRemainingStandbys,standbyTaskClientsByTaskLoad,task);\n    if (numRemainingStandbys > 0) {\n      log.warn(\"Unable to assign {} of {} standby tasks for task [{}]. \" + \"There is not enough available capacity. You should \" + \"increase the number of application instances \"+ \"to maintain the requested number of standby replicas.\",numRemainingStandbys,numStandbyReplicas,task);\n    }\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 78,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1895,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public boolean assign(final Map<UUID,ClientState> clients,final Set<TaskId> allTaskIds,final Set<TaskId> statefulTaskIds,final AssignorConfiguration.AssignmentConfigs configs){\n  final int numStandbyReplicas=configs.numStandbyReplicas;\n  final Map<TaskId,Integer> tasksToRemainingStandbys=computeTasksToRemainingStandbys(numStandbyReplicas,statefulTaskIds);\n  final ConstrainedPrioritySet standbyTaskClientsByTaskLoad=createLeastLoadedPrioritySetConstrainedByAssignedTask(clients);\n  standbyTaskClientsByTaskLoad.offerAll(clients.keySet());\n  for (  final TaskId task : statefulTaskIds) {\n    final int numRemainingStandbys=pollClientAndMaybeAssignAndUpdateRemainingStandbyTasks(clients,tasksToRemainingStandbys,standbyTaskClientsByTaskLoad,task);\n    if (numRemainingStandbys > 0) {\n      log.warn(\"Unable to assign {} of {} standby tasks for task [{}]. \" + \"There is not enough available capacity. You should \" + \"increase the number of application instances \"+ \"to maintain the requested number of standby replicas.\",numRemainingStandbys,numStandbyReplicas,task);\n    }\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 117,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 111
      },
      "nodeContext" : "final Map<TaskId,Integer> tasksToRemainingStandbys=computeTasksToRemainingStandbys(numStandbyReplicas,statefulTaskIds);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.util.Map<org.apache.kafka.streams.processor.TaskId,java.lang.Integer>"
  } ],
  "positionList" : [ {
    "charLength" : 162,
    "startLineNumber" : 45,
    "startColumnNumber" : 62,
    "endLineNumber" : 46,
    "endColumnNumber" : 110
  } ],
  "layoutRelationDataList" : [ ]
}