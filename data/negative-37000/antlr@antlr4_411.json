{
  "id" : 411,
  "expression" : "new StringBuilder()",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/tool/src/org/antlr/v4/gui/Trees.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new StringBuilder()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 111,
      "startColumnNumber" : 22,
      "endLineNumber" : 111,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 111,
        "startColumnNumber" : 16,
        "endLineNumber" : 111,
        "endColumnNumber" : 41
      },
      "nodeContext" : "buf=new StringBuilder()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 111,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 42
      },
      "nodeContext" : "StringBuilder buf=new StringBuilder();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 515,
        "startLineNumber" : 107,
        "startColumnNumber" : 78,
        "endLineNumber" : 122,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (t == null)   return \"null\";\n  String s=Utils.escapeWhitespace(nodeTextProvider.getText(t),false);\n  if (t.getChildCount() == 0)   return s;\n  StringBuilder buf=new StringBuilder();\n  buf.append(\"(\");\n  s=Utils.escapeWhitespace(nodeTextProvider.getText(t),false);\n  buf.append(s);\n  buf.append(' ');\n  for (int i=0; i < t.getChildCount(); i++) {\n    if (i > 0)     buf.append(' ');\n    buf.append(toStringTree(t.getChild(i),nodeTextProvider));\n  }\n  buf.append(\")\");\n  return buf.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 752,
        "startLineNumber" : 102,
        "startColumnNumber" : 1,
        "endLineNumber" : 122,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Print out a whole tree in LISP form. Arg nodeTextProvider is used on the node payloads to get the text for the nodes.\n * @since 4.5.1\n */\npublic static String toStringTree(Tree t,TreeTextProvider nodeTextProvider){\n  if (t == null)   return \"null\";\n  String s=Utils.escapeWhitespace(nodeTextProvider.getText(t),false);\n  if (t.getChildCount() == 0)   return s;\n  StringBuilder buf=new StringBuilder();\n  buf.append(\"(\");\n  s=Utils.escapeWhitespace(nodeTextProvider.getText(t),false);\n  buf.append(s);\n  buf.append(' ');\n  for (int i=0; i < t.getChildCount(); i++) {\n    if (i > 0)     buf.append(' ');\n    buf.append(toStringTree(t.getChild(i),nodeTextProvider));\n  }\n  buf.append(\")\");\n  return buf.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 111,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 42
      },
      "nodeContext" : "StringBuilder buf=new StringBuilder();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.StringBuilder"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 111,
    "startColumnNumber" : 22,
    "endLineNumber" : 111,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}