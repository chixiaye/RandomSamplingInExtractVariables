{
  "id" : 143,
  "expression" : "\"Querying \" + f + \" for visibility of \"+ d+ \" in type \"+ contextClass",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/main/java/hudson/model/DescriptorVisibilityFilter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Querying \" + f + \" for visibility of \"+ d+ \" in type \"+ contextClass",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 72,
      "startLineNumber" : 122,
      "startColumnNumber" : 33,
      "endLineNumber" : 122,
      "endColumnNumber" : 105
    },
    "astNodeNumber" : 7,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 122,
        "startColumnNumber" : 20,
        "endLineNumber" : 122,
        "endColumnNumber" : 106
      },
      "nodeContext" : "LOGGER.finer(\"Querying \" + f + \" for visibility of \"+ d+ \" in type \"+ contextClass)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 122,
        "startColumnNumber" : 20,
        "endLineNumber" : 122,
        "endColumnNumber" : 107
      },
      "nodeContext" : "LOGGER.finer(\"Querying \" + f + \" for visibility of \"+ d+ \" in type \"+ contextClass);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 121,
        "startColumnNumber" : 52,
        "endLineNumber" : 123,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  LOGGER.finer(\"Querying \" + f + \" for visibility of \"+ d+ \" in type \"+ contextClass);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 121,
        "startColumnNumber" : 16,
        "endLineNumber" : 123,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (LOGGER.isLoggable(Level.FINER)) {\n  LOGGER.finer(\"Querying \" + f + \" for visibility of \"+ d+ \" in type \"+ contextClass);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1088,
        "startLineNumber" : 120,
        "startColumnNumber" : 57,
        "endLineNumber" : 139,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (LOGGER.isLoggable(Level.FINER)) {\n    LOGGER.finer(\"Querying \" + f + \" for visibility of \"+ d+ \" in type \"+ contextClass);\n  }\n  try {\n    if (contextClass != null && !f.filterType(contextClass,d)) {\n      if (LOGGER.isLoggable(Level.CONFIG)) {\n        LOGGER.config(\"Filter \" + f + \" hides \"+ d+ \" in contexts of type \"+ contextClass);\n      }\n      continue OUTER;\n    }\n  }\n catch (  Error e) {\n    LOGGER.log(Level.WARNING,\"Encountered error while processing filter \" + f + \" for contexts of type \"+ contextClass,e);\n    throw e;\n  }\ncatch (  Throwable e) {\n    LOGGER.log(logLevelFor(f),\"Uncaught exception from filter \" + f + \" for context of type \"+ contextClass,e);\n    continue OUTER;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1133,
        "startLineNumber" : 120,
        "startColumnNumber" : 12,
        "endLineNumber" : 139,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (DescriptorVisibilityFilter f : filters) {\n  if (LOGGER.isLoggable(Level.FINER)) {\n    LOGGER.finer(\"Querying \" + f + \" for visibility of \"+ d+ \" in type \"+ contextClass);\n  }\n  try {\n    if (contextClass != null && !f.filterType(contextClass,d)) {\n      if (LOGGER.isLoggable(Level.CONFIG)) {\n        LOGGER.config(\"Filter \" + f + \" hides \"+ d+ \" in contexts of type \"+ contextClass);\n      }\n      continue OUTER;\n    }\n  }\n catch (  Error e) {\n    LOGGER.log(Level.WARNING,\"Encountered error while processing filter \" + f + \" for contexts of type \"+ contextClass,e);\n    throw e;\n  }\ncatch (  Throwable e) {\n    LOGGER.log(logLevelFor(f),\"Uncaught exception from filter \" + f + \" for context of type \"+ contextClass,e);\n    continue OUTER;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 103,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1352,
        "startLineNumber" : 116,
        "startColumnNumber" : 27,
        "endLineNumber" : 141,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (LOGGER.isLoggable(Level.FINE)) {\n    LOGGER.fine(\"Determining visibility of \" + d + \" in contexts of type \"+ contextClass);\n  }\n  for (  DescriptorVisibilityFilter f : filters) {\n    if (LOGGER.isLoggable(Level.FINER)) {\n      LOGGER.finer(\"Querying \" + f + \" for visibility of \"+ d+ \" in type \"+ contextClass);\n    }\n    try {\n      if (contextClass != null && !f.filterType(contextClass,d)) {\n        if (LOGGER.isLoggable(Level.CONFIG)) {\n          LOGGER.config(\"Filter \" + f + \" hides \"+ d+ \" in contexts of type \"+ contextClass);\n        }\n        continue OUTER;\n      }\n    }\n catch (    Error e) {\n      LOGGER.log(Level.WARNING,\"Encountered error while processing filter \" + f + \" for contexts of type \"+ contextClass,e);\n      throw e;\n    }\ncatch (    Throwable e) {\n      LOGGER.log(logLevelFor(f),\"Uncaught exception from filter \" + f + \" for context of type \"+ contextClass,e);\n      continue OUTER;\n    }\n  }\n  r.add(d);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LabeledStatement,body]",
      "nodePosition" : {
        "charLength" : 1371,
        "startLineNumber" : 116,
        "startColumnNumber" : 8,
        "endLineNumber" : 141,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (T d : source) {\n  if (LOGGER.isLoggable(Level.FINE)) {\n    LOGGER.fine(\"Determining visibility of \" + d + \" in contexts of type \"+ contextClass);\n  }\n  for (  DescriptorVisibilityFilter f : filters) {\n    if (LOGGER.isLoggable(Level.FINER)) {\n      LOGGER.finer(\"Querying \" + f + \" for visibility of \"+ d+ \" in type \"+ contextClass);\n    }\n    try {\n      if (contextClass != null && !f.filterType(contextClass,d)) {\n        if (LOGGER.isLoggable(Level.CONFIG)) {\n          LOGGER.config(\"Filter \" + f + \" hides \"+ d+ \" in contexts of type \"+ contextClass);\n        }\n        continue OUTER;\n      }\n    }\n catch (    Error e) {\n      LOGGER.log(Level.WARNING,\"Encountered error while processing filter \" + f + \" for contexts of type \"+ contextClass,e);\n      throw e;\n    }\ncatch (    Throwable e) {\n      LOGGER.log(logLevelFor(f),\"Uncaught exception from filter \" + f + \" for context of type \"+ contextClass,e);\n      continue OUTER;\n    }\n  }\n  r.add(d);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 132,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1387,
        "startLineNumber" : 115,
        "startColumnNumber" : 8,
        "endLineNumber" : 141,
        "endColumnNumber" : 9
      },
      "nodeContext" : "OUTER: for (T d : source) {\n  if (LOGGER.isLoggable(Level.FINE)) {\n    LOGGER.fine(\"Determining visibility of \" + d + \" in contexts of type \"+ contextClass);\n  }\n  for (  DescriptorVisibilityFilter f : filters) {\n    if (LOGGER.isLoggable(Level.FINER)) {\n      LOGGER.finer(\"Querying \" + f + \" for visibility of \"+ d+ \" in type \"+ contextClass);\n    }\n    try {\n      if (contextClass != null && !f.filterType(contextClass,d)) {\n        if (LOGGER.isLoggable(Level.CONFIG)) {\n          LOGGER.config(\"Filter \" + f + \" hides \"+ d+ \" in contexts of type \"+ contextClass);\n        }\n        continue OUTER;\n      }\n    }\n catch (    Error e) {\n      LOGGER.log(Level.WARNING,\"Encountered error while processing filter \" + f + \" for contexts of type \"+ contextClass,e);\n      throw e;\n    }\ncatch (    Throwable e) {\n      LOGGER.log(logLevelFor(f),\"Uncaught exception from filter \" + f + \" for context of type \"+ contextClass,e);\n      continue OUTER;\n    }\n  }\n  r.add(d);\n}\n",
      "nodeType" : "LabeledStatement",
      "astNodeNumber" : 134,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1534,
        "startLineNumber" : 111,
        "startColumnNumber" : 102,
        "endLineNumber" : 143,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ExtensionList<DescriptorVisibilityFilter> filters=all();\n  List<T> r=new ArrayList<>();\n  OUTER:   for (  T d : source) {\n    if (LOGGER.isLoggable(Level.FINE)) {\n      LOGGER.fine(\"Determining visibility of \" + d + \" in contexts of type \"+ contextClass);\n    }\n    for (    DescriptorVisibilityFilter f : filters) {\n      if (LOGGER.isLoggable(Level.FINER)) {\n        LOGGER.finer(\"Querying \" + f + \" for visibility of \"+ d+ \" in type \"+ contextClass);\n      }\n      try {\n        if (contextClass != null && !f.filterType(contextClass,d)) {\n          if (LOGGER.isLoggable(Level.CONFIG)) {\n            LOGGER.config(\"Filter \" + f + \" hides \"+ d+ \" in contexts of type \"+ contextClass);\n          }\n          continue OUTER;\n        }\n      }\n catch (      Error e) {\n        LOGGER.log(Level.WARNING,\"Encountered error while processing filter \" + f + \" for contexts of type \"+ contextClass,e);\n        throw e;\n      }\ncatch (      Throwable e) {\n        LOGGER.log(logLevelFor(f),\"Uncaught exception from filter \" + f + \" for context of type \"+ contextClass,e);\n        continue OUTER;\n      }\n    }\n    r.add(d);\n  }\n  return r;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 159,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1632,
        "startLineNumber" : 111,
        "startColumnNumber" : 4,
        "endLineNumber" : 143,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static <T extends Descriptor>List<T> applyType(Class<?> contextClass,Iterable<T> source){\n  ExtensionList<DescriptorVisibilityFilter> filters=all();\n  List<T> r=new ArrayList<>();\n  OUTER:   for (  T d : source) {\n    if (LOGGER.isLoggable(Level.FINE)) {\n      LOGGER.fine(\"Determining visibility of \" + d + \" in contexts of type \"+ contextClass);\n    }\n    for (    DescriptorVisibilityFilter f : filters) {\n      if (LOGGER.isLoggable(Level.FINER)) {\n        LOGGER.finer(\"Querying \" + f + \" for visibility of \"+ d+ \" in type \"+ contextClass);\n      }\n      try {\n        if (contextClass != null && !f.filterType(contextClass,d)) {\n          if (LOGGER.isLoggable(Level.CONFIG)) {\n            LOGGER.config(\"Filter \" + f + \" hides \"+ d+ \" in contexts of type \"+ contextClass);\n          }\n          continue OUTER;\n        }\n      }\n catch (      Error e) {\n        LOGGER.log(Level.WARNING,\"Encountered error while processing filter \" + f + \" for contexts of type \"+ contextClass,e);\n        throw e;\n      }\ncatch (      Throwable e) {\n        LOGGER.log(logLevelFor(f),\"Uncaught exception from filter \" + f + \" for context of type \"+ contextClass,e);\n        continue OUTER;\n      }\n    }\n    r.add(d);\n  }\n  return r;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 185,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 122,
        "startColumnNumber" : 20,
        "endLineNumber" : 122,
        "endColumnNumber" : 107
      },
      "nodeContext" : "LOGGER.finer(\"Querying \" + f + \" for visibility of \"+ d+ \" in type \"+ contextClass);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 12,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 72,
    "startLineNumber" : 122,
    "startColumnNumber" : 33,
    "endLineNumber" : 122,
    "endColumnNumber" : 105
  } ],
  "layoutRelationDataList" : [ ]
}