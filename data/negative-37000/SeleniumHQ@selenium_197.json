{
  "id" : 197,
  "expression" : "writer.toString()",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/server/test/org/openqa/selenium/grid/web/TeeReaderTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "writer.toString()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 49,
      "startColumnNumber" : 29,
      "endLineNumber" : 49,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 49,
        "startColumnNumber" : 6,
        "endLineNumber" : 49,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertEquals(expected,writer.toString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 49,
        "startColumnNumber" : 6,
        "endLineNumber" : 49,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertEquals(expected,writer.toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 42,
        "startColumnNumber" : 54,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  reader.beginObject();\n  assertEquals(\"key\",reader.nextName());\n  reader.skipValue();\n  reader.endObject();\n  assertEquals(expected,writer.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 234,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (JsonInput reader=new Json().newInput(tee)){\n  reader.beginObject();\n  assertEquals(\"key\",reader.nextName());\n  reader.skipValue();\n  reader.endObject();\n  assertEquals(expected,writer.toString());\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 435,
        "startLineNumber" : 34,
        "startColumnNumber" : 39,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String expected=\"{\\\"key\\\": \\\"value\\\"}\";\n  Reader source=new StringReader(expected);\n  StringWriter writer=new StringWriter();\n  Reader tee=new TeeReader(source,writer);\n  try (JsonInput reader=new Json().newInput(tee)){\n    reader.beginObject();\n    assertEquals(\"key\",reader.nextName());\n    reader.skipValue();\n    reader.endObject();\n    assertEquals(expected,writer.toString());\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 480,
        "startLineNumber" : 33,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void shouldDuplicateStreams(){\n  String expected=\"{\\\"key\\\": \\\"value\\\"}\";\n  Reader source=new StringReader(expected);\n  StringWriter writer=new StringWriter();\n  Reader tee=new TeeReader(source,writer);\n  try (JsonInput reader=new Json().newInput(tee)){\n    reader.beginObject();\n    assertEquals(\"key\",reader.nextName());\n    reader.skipValue();\n    reader.endObject();\n    assertEquals(expected,writer.toString());\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 49,
        "startColumnNumber" : 6,
        "endLineNumber" : 49,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertEquals(expected,writer.toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 49,
    "startColumnNumber" : 29,
    "endLineNumber" : 49,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}