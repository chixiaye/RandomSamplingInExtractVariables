{
  "id" : 89,
  "expression" : "codewords[0] & 0x0F",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/maxicode/decoder/Decoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "codewords[0] & 0x0F",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 58,
      "startColumnNumber" : 15,
      "endLineNumber" : 58,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 34
      },
      "nodeContext" : "mode=codewords[0] & 0x0F",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 35
      },
      "nodeContext" : "int mode=codewords[0] & 0x0F;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 855,
        "startLineNumber" : 53,
        "startColumnNumber" : 101,
        "endLineNumber" : 81,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BitMatrixParser parser=new BitMatrixParser(bits);\n  byte[] codewords=parser.readCodewords();\n  correctErrors(codewords,0,10,10,ALL);\n  int mode=codewords[0] & 0x0F;\n  byte[] datawords;\nswitch (mode) {\ncase 2:case 3:case 4:    correctErrors(codewords,20,84,40,EVEN);\n  correctErrors(codewords,20,84,40,ODD);\ndatawords=new byte[94];\nbreak;\ncase 5:correctErrors(codewords,20,68,56,EVEN);\ncorrectErrors(codewords,20,68,56,ODD);\ndatawords=new byte[78];\nbreak;\ndefault:throw FormatException.getFormatInstance();\n}\nSystem.arraycopy(codewords,0,datawords,0,10);\nSystem.arraycopy(codewords,20,datawords,10,datawords.length - 10);\nreturn DecodedBitStreamParser.decode(datawords,mode);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1000,
        "startLineNumber" : 52,
        "startColumnNumber" : 2,
        "endLineNumber" : 81,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public DecoderResult decode(BitMatrix bits,Map<DecodeHintType,?> hints) throws FormatException, ChecksumException {\n  BitMatrixParser parser=new BitMatrixParser(bits);\n  byte[] codewords=parser.readCodewords();\n  correctErrors(codewords,0,10,10,ALL);\n  int mode=codewords[0] & 0x0F;\n  byte[] datawords;\nswitch (mode) {\ncase 2:case 3:case 4:    correctErrors(codewords,20,84,40,EVEN);\n  correctErrors(codewords,20,84,40,ODD);\ndatawords=new byte[94];\nbreak;\ncase 5:correctErrors(codewords,20,68,56,EVEN);\ncorrectErrors(codewords,20,68,56,ODD);\ndatawords=new byte[78];\nbreak;\ndefault:throw FormatException.getFormatInstance();\n}\nSystem.arraycopy(codewords,0,datawords,0,10);\nSystem.arraycopy(codewords,20,datawords,10,datawords.length - 10);\nreturn DecodedBitStreamParser.decode(datawords,mode);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 156,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 35
      },
      "nodeContext" : "int mode=codewords[0] & 0x0F;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 58,
    "startColumnNumber" : 15,
    "endLineNumber" : 58,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}