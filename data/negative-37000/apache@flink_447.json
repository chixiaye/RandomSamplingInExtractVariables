{
  "id" : 447,
  "expression" : "stream",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-core/src/test/java/org/apache/flink/util/IterableUtilsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "stream",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 41,
      "startColumnNumber" : 19,
      "endLineNumber" : 41,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 41,
        "startColumnNumber" : 19,
        "endLineNumber" : 41,
        "endColumnNumber" : 71
      },
      "nodeContext" : "stream.allMatch(value -> deque.poll().equals(value))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 72
      },
      "nodeContext" : "assertTrue(stream.allMatch(value -> deque.poll().equals(value)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 73
      },
      "nodeContext" : "assertTrue(stream.allMatch(value -> deque.poll().equals(value)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 246,
        "startLineNumber" : 36,
        "startColumnNumber" : 31,
        "endLineNumber" : 42,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Queue<Integer> deque=new ArrayDeque<>();\n  testIterable.forEach(deque::add);\n  Stream<Integer> stream=IterableUtils.toStream(testIterable);\n  assertTrue(stream.allMatch(value -> deque.poll().equals(value)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 283,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 42,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testToStream(){\n  Queue<Integer> deque=new ArrayDeque<>();\n  testIterable.forEach(deque::add);\n  Stream<Integer> stream=IterableUtils.toStream(testIterable);\n  assertTrue(stream.allMatch(value -> deque.poll().equals(value)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 53,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 73
      },
      "nodeContext" : "assertTrue(stream.allMatch(value -> deque.poll().equals(value)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.util.stream.Stream<java.lang.Integer>"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 41,
    "startColumnNumber" : 19,
    "endLineNumber" : 41,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ ]
}