{
  "id" : 243,
  "expression" : "m",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/main/java/jadx/core/dex/instructions/args/LiteralArg.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "m",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 21,
      "startColumnNumber" : 8,
      "endLineNumber" : 21,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 21,
        "endColumnNumber" : 17
      },
      "nodeContext" : "m != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 21,
        "startColumnNumber" : 4,
        "endLineNumber" : 23,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (m != null) {\n  type=m;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 19,
        "startColumnNumber" : 46,
        "endLineNumber" : 24,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  ArgType m=ArgType.merge(null,type,ArgType.NARROW_NUMBERS);\n  if (m != null) {\n    type=m;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 228,
        "startLineNumber" : 17,
        "startColumnNumber" : 10,
        "endLineNumber" : 24,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (!type.isTypeKnown() && !type.contains(PrimitiveType.LONG) && !type.contains(PrimitiveType.DOUBLE)) {\n  ArgType m=ArgType.merge(null,type,ArgType.NARROW_NUMBERS);\n  if (m != null) {\n    type=m;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 353,
        "startLineNumber" : 15,
        "startColumnNumber" : 3,
        "endLineNumber" : 24,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (type.isObject()) {\n  throw new JadxRuntimeException(\"Wrong literal type: \" + type + \" for value: \"+ value);\n}\n else if (!type.isTypeKnown() && !type.contains(PrimitiveType.LONG) && !type.contains(PrimitiveType.DOUBLE)) {\n  ArgType m=ArgType.merge(null,type,ArgType.NARROW_NUMBERS);\n  if (m != null) {\n    type=m;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 362,
        "startLineNumber" : 14,
        "startColumnNumber" : 18,
        "endLineNumber" : 25,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (type.isObject()) {\n    throw new JadxRuntimeException(\"Wrong literal type: \" + type + \" for value: \"+ value);\n  }\n else   if (!type.isTypeKnown() && !type.contains(PrimitiveType.LONG) && !type.contains(PrimitiveType.DOUBLE)) {\n    ArgType m=ArgType.merge(null,type,ArgType.NARROW_NUMBERS);\n    if (m != null) {\n      type=m;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 378,
        "startLineNumber" : 14,
        "startColumnNumber" : 2,
        "endLineNumber" : 25,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (value != 0) {\n  if (type.isObject()) {\n    throw new JadxRuntimeException(\"Wrong literal type: \" + type + \" for value: \"+ value);\n  }\n else   if (!type.isTypeKnown() && !type.contains(PrimitiveType.LONG) && !type.contains(PrimitiveType.DOUBLE)) {\n    ArgType m=ArgType.merge(null,type,ArgType.NARROW_NUMBERS);\n    if (m != null) {\n      type=m;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 429,
        "startLineNumber" : 13,
        "startColumnNumber" : 45,
        "endLineNumber" : 28,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (value != 0) {\n    if (type.isObject()) {\n      throw new JadxRuntimeException(\"Wrong literal type: \" + type + \" for value: \"+ value);\n    }\n else     if (!type.isTypeKnown() && !type.contains(PrimitiveType.LONG) && !type.contains(PrimitiveType.DOUBLE)) {\n      ArgType m=ArgType.merge(null,type,ArgType.NARROW_NUMBERS);\n      if (m != null) {\n        type=m;\n      }\n    }\n  }\n  this.literal=value;\n  this.type=type;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 473,
        "startLineNumber" : 13,
        "startColumnNumber" : 1,
        "endLineNumber" : 28,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public LiteralArg(long value,ArgType type){\n  if (value != 0) {\n    if (type.isObject()) {\n      throw new JadxRuntimeException(\"Wrong literal type: \" + type + \" for value: \"+ value);\n    }\n else     if (!type.isTypeKnown() && !type.contains(PrimitiveType.LONG) && !type.contains(PrimitiveType.DOUBLE)) {\n      ArgType m=ArgType.merge(null,type,ArgType.NARROW_NUMBERS);\n      if (m != null) {\n        type=m;\n      }\n    }\n  }\n  this.literal=value;\n  this.type=type;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 85,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 21,
        "endColumnNumber" : 17
      },
      "nodeContext" : "m != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "jadx.core.dex.instructions.args.ArgType"
  }, {
    "nodeContext" : "m",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 22,
      "startColumnNumber" : 12,
      "endLineNumber" : 22,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 22,
        "startColumnNumber" : 5,
        "endLineNumber" : 22,
        "endColumnNumber" : 13
      },
      "nodeContext" : "type=m",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 22,
        "startColumnNumber" : 5,
        "endLineNumber" : 22,
        "endColumnNumber" : 14
      },
      "nodeContext" : "type=m;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 21,
        "startColumnNumber" : 19,
        "endLineNumber" : 23,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  type=m;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 21,
        "startColumnNumber" : 4,
        "endLineNumber" : 23,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (m != null) {\n  type=m;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 19,
        "startColumnNumber" : 46,
        "endLineNumber" : 24,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  ArgType m=ArgType.merge(null,type,ArgType.NARROW_NUMBERS);\n  if (m != null) {\n    type=m;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 228,
        "startLineNumber" : 17,
        "startColumnNumber" : 10,
        "endLineNumber" : 24,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (!type.isTypeKnown() && !type.contains(PrimitiveType.LONG) && !type.contains(PrimitiveType.DOUBLE)) {\n  ArgType m=ArgType.merge(null,type,ArgType.NARROW_NUMBERS);\n  if (m != null) {\n    type=m;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 353,
        "startLineNumber" : 15,
        "startColumnNumber" : 3,
        "endLineNumber" : 24,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (type.isObject()) {\n  throw new JadxRuntimeException(\"Wrong literal type: \" + type + \" for value: \"+ value);\n}\n else if (!type.isTypeKnown() && !type.contains(PrimitiveType.LONG) && !type.contains(PrimitiveType.DOUBLE)) {\n  ArgType m=ArgType.merge(null,type,ArgType.NARROW_NUMBERS);\n  if (m != null) {\n    type=m;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 362,
        "startLineNumber" : 14,
        "startColumnNumber" : 18,
        "endLineNumber" : 25,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (type.isObject()) {\n    throw new JadxRuntimeException(\"Wrong literal type: \" + type + \" for value: \"+ value);\n  }\n else   if (!type.isTypeKnown() && !type.contains(PrimitiveType.LONG) && !type.contains(PrimitiveType.DOUBLE)) {\n    ArgType m=ArgType.merge(null,type,ArgType.NARROW_NUMBERS);\n    if (m != null) {\n      type=m;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 378,
        "startLineNumber" : 14,
        "startColumnNumber" : 2,
        "endLineNumber" : 25,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (value != 0) {\n  if (type.isObject()) {\n    throw new JadxRuntimeException(\"Wrong literal type: \" + type + \" for value: \"+ value);\n  }\n else   if (!type.isTypeKnown() && !type.contains(PrimitiveType.LONG) && !type.contains(PrimitiveType.DOUBLE)) {\n    ArgType m=ArgType.merge(null,type,ArgType.NARROW_NUMBERS);\n    if (m != null) {\n      type=m;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 62,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 429,
        "startLineNumber" : 13,
        "startColumnNumber" : 45,
        "endLineNumber" : 28,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (value != 0) {\n    if (type.isObject()) {\n      throw new JadxRuntimeException(\"Wrong literal type: \" + type + \" for value: \"+ value);\n    }\n else     if (!type.isTypeKnown() && !type.contains(PrimitiveType.LONG) && !type.contains(PrimitiveType.DOUBLE)) {\n      ArgType m=ArgType.merge(null,type,ArgType.NARROW_NUMBERS);\n      if (m != null) {\n        type=m;\n      }\n    }\n  }\n  this.literal=value;\n  this.type=type;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 473,
        "startLineNumber" : 13,
        "startColumnNumber" : 1,
        "endLineNumber" : 28,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public LiteralArg(long value,ArgType type){\n  if (value != 0) {\n    if (type.isObject()) {\n      throw new JadxRuntimeException(\"Wrong literal type: \" + type + \" for value: \"+ value);\n    }\n else     if (!type.isTypeKnown() && !type.contains(PrimitiveType.LONG) && !type.contains(PrimitiveType.DOUBLE)) {\n      ArgType m=ArgType.merge(null,type,ArgType.NARROW_NUMBERS);\n      if (m != null) {\n        type=m;\n      }\n    }\n  }\n  this.literal=value;\n  this.type=type;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 85,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 22,
        "startColumnNumber" : 5,
        "endLineNumber" : 22,
        "endColumnNumber" : 14
      },
      "nodeContext" : "type=m;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "jadx.core.dex.instructions.args.ArgType"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 21,
    "startColumnNumber" : 8,
    "endLineNumber" : 21,
    "endColumnNumber" : 9
  }, {
    "charLength" : 1,
    "startLineNumber" : 22,
    "startColumnNumber" : 12,
    "endLineNumber" : 22,
    "endColumnNumber" : 13
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}