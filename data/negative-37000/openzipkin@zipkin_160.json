{
  "id" : 160,
  "expression" : "TYPE_BOOL",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin/src/main/java/zipkin/internal/ThriftCodec.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TYPE_BOOL",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 521,
      "startColumnNumber" : 11,
      "endLineNumber" : 521,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 521,
        "startColumnNumber" : 6,
        "endLineNumber" : 521,
        "endColumnNumber" : 21
      },
      "nodeContext" : "case TYPE_BOOL:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1261,
        "startLineNumber" : 520,
        "startColumnNumber" : 4,
        "endLineNumber" : 562,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (type) {\ncase TYPE_BOOL:case TYPE_BYTE:  skip(bytes,1);\nbreak;\ncase TYPE_I16:skip(bytes,2);\nbreak;\ncase TYPE_I32:skip(bytes,4);\nbreak;\ncase TYPE_DOUBLE:case TYPE_I64:skip(bytes,8);\nbreak;\ncase TYPE_STRING:int size=guardLength(bytes,STRING_LENGTH_LIMIT);\nskip(bytes,size);\nbreak;\ncase TYPE_STRUCT:while (true) {\nField field=Field.read(bytes);\nif (field.type == TYPE_STOP) return;\nskip(bytes,field.type,maxDepth - 1);\n}\ncase TYPE_MAP:byte keyType=bytes.get();\nbyte valueType=bytes.get();\nfor (int i=0, length=guardLength(bytes,CONTAINER_LENGTH_LIMIT); i < length; i++) {\nskip(bytes,keyType,maxDepth - 1);\nskip(bytes,valueType,maxDepth - 1);\n}\nbreak;\ncase TYPE_SET:case TYPE_LIST:byte elemType=bytes.get();\nfor (int i=0, length=guardLength(bytes,CONTAINER_LENGTH_LIMIT); i < length; i++) {\nskip(bytes,elemType,maxDepth - 1);\n}\nbreak;\ndefault:break;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 176,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1358,
        "startLineNumber" : 518,
        "startColumnNumber" : 62,
        "endLineNumber" : 563,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (maxDepth <= 0)   throw new IllegalStateException(\"Maximum skip depth exceeded\");\nswitch (type) {\ncase TYPE_BOOL:case TYPE_BYTE:    skip(bytes,1);\n  break;\ncase TYPE_I16:skip(bytes,2);\nbreak;\ncase TYPE_I32:skip(bytes,4);\nbreak;\ncase TYPE_DOUBLE:case TYPE_I64:skip(bytes,8);\nbreak;\ncase TYPE_STRING:int size=guardLength(bytes,STRING_LENGTH_LIMIT);\nskip(bytes,size);\nbreak;\ncase TYPE_STRUCT:while (true) {\nField field=Field.read(bytes);\nif (field.type == TYPE_STOP) return;\nskip(bytes,field.type,maxDepth - 1);\n}\ncase TYPE_MAP:byte keyType=bytes.get();\nbyte valueType=bytes.get();\nfor (int i=0, length=guardLength(bytes,CONTAINER_LENGTH_LIMIT); i < length; i++) {\nskip(bytes,keyType,maxDepth - 1);\nskip(bytes,valueType,maxDepth - 1);\n}\nbreak;\ncase TYPE_SET:case TYPE_LIST:byte elemType=bytes.get();\nfor (int i=0, length=guardLength(bytes,CONTAINER_LENGTH_LIMIT); i < length; i++) {\nskip(bytes,elemType,maxDepth - 1);\n}\nbreak;\ndefault:break;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 186,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1418,
        "startLineNumber" : 518,
        "startColumnNumber" : 2,
        "endLineNumber" : 563,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static void skip(ByteBuffer bytes,byte type,int maxDepth){\n  if (maxDepth <= 0)   throw new IllegalStateException(\"Maximum skip depth exceeded\");\nswitch (type) {\ncase TYPE_BOOL:case TYPE_BYTE:    skip(bytes,1);\n  break;\ncase TYPE_I16:skip(bytes,2);\nbreak;\ncase TYPE_I32:skip(bytes,4);\nbreak;\ncase TYPE_DOUBLE:case TYPE_I64:skip(bytes,8);\nbreak;\ncase TYPE_STRING:int size=guardLength(bytes,STRING_LENGTH_LIMIT);\nskip(bytes,size);\nbreak;\ncase TYPE_STRUCT:while (true) {\nField field=Field.read(bytes);\nif (field.type == TYPE_STOP) return;\nskip(bytes,field.type,maxDepth - 1);\n}\ncase TYPE_MAP:byte keyType=bytes.get();\nbyte valueType=bytes.get();\nfor (int i=0, length=guardLength(bytes,CONTAINER_LENGTH_LIMIT); i < length; i++) {\nskip(bytes,keyType,maxDepth - 1);\nskip(bytes,valueType,maxDepth - 1);\n}\nbreak;\ncase TYPE_SET:case TYPE_LIST:byte elemType=bytes.get();\nfor (int i=0, length=guardLength(bytes,CONTAINER_LENGTH_LIMIT); i < length; i++) {\nskip(bytes,elemType,maxDepth - 1);\n}\nbreak;\ndefault:break;\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 200,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 521,
        "startColumnNumber" : 6,
        "endLineNumber" : 521,
        "endColumnNumber" : 21
      },
      "nodeContext" : "case TYPE_BOOL:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 2,
    "type" : "byte"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 521,
    "startColumnNumber" : 11,
    "endLineNumber" : 521,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ ]
}