{
  "id" : 188,
  "expression" : "actual.getFileName()",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-core/src/test/java/org/apache/flink/util/FileUtilsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "actual.getFileName()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 357,
      "startColumnNumber" : 45,
      "endLineNumber" : 357,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 357,
        "startColumnNumber" : 8,
        "endLineNumber" : 357,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertEquals(expected.getFileName(),actual.getFileName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 357,
        "startColumnNumber" : 8,
        "endLineNumber" : 357,
        "endColumnNumber" : 67
      },
      "nodeContext" : "assertEquals(expected.getFileName(),actual.getFileName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1302,
        "startLineNumber" : 355,
        "startColumnNumber" : 31,
        "endLineNumber" : 383,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertEquals(Files.isDirectory(expected),Files.isDirectory(actual));\n  assertEquals(expected.getFileName(),actual.getFileName());\n  if (Files.isDirectory(expected)) {\n    List<java.nio.file.Path> expectedContents;\n    try (Stream<java.nio.file.Path> files=Files.list(expected)){\n      expectedContents=files.sorted(Comparator.comparing(java.nio.file.Path::toString)).collect(Collectors.toList());\n    }\n     List<java.nio.file.Path> actualContents;\n    try (Stream<java.nio.file.Path> files=Files.list(actual)){\n      actualContents=files.sorted(Comparator.comparing(java.nio.file.Path::toString)).collect(Collectors.toList());\n    }\n     assertEquals(expectedContents.size(),actualContents.size());\n    for (int x=0; x < expectedContents.size(); x++) {\n      assertDirEquals(expectedContents.get(x),actualContents.get(x));\n    }\n  }\n else {\n    byte[] expectedBytes=Files.readAllBytes(expected);\n    byte[] actualBytes=Files.readAllBytes(actual);\n    assertArrayEquals(expectedBytes,actualBytes);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 201,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1425,
        "startLineNumber" : 354,
        "startColumnNumber" : 4,
        "endLineNumber" : 383,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static void assertDirEquals(java.nio.file.Path expected,java.nio.file.Path actual) throws IOException {\n  assertEquals(Files.isDirectory(expected),Files.isDirectory(actual));\n  assertEquals(expected.getFileName(),actual.getFileName());\n  if (Files.isDirectory(expected)) {\n    List<java.nio.file.Path> expectedContents;\n    try (Stream<java.nio.file.Path> files=Files.list(expected)){\n      expectedContents=files.sorted(Comparator.comparing(java.nio.file.Path::toString)).collect(Collectors.toList());\n    }\n     List<java.nio.file.Path> actualContents;\n    try (Stream<java.nio.file.Path> files=Files.list(actual)){\n      actualContents=files.sorted(Comparator.comparing(java.nio.file.Path::toString)).collect(Collectors.toList());\n    }\n     assertEquals(expectedContents.size(),actualContents.size());\n    for (int x=0; x < expectedContents.size(); x++) {\n      assertDirEquals(expectedContents.get(x),actualContents.get(x));\n    }\n  }\n else {\n    byte[] expectedBytes=Files.readAllBytes(expected);\n    byte[] actualBytes=Files.readAllBytes(actual);\n    assertArrayEquals(expectedBytes,actualBytes);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 228,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 357,
        "startColumnNumber" : 8,
        "endLineNumber" : 357,
        "endColumnNumber" : 67
      },
      "nodeContext" : "assertEquals(expected.getFileName(),actual.getFileName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.nio.file.Path"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 357,
    "startColumnNumber" : 45,
    "endLineNumber" : 357,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}