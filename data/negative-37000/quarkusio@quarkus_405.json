{
  "id" : 405,
  "expression" : "e.getClass()",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/extensions/smallrye-fault-tolerance/deployment/src/test/java/io/quarkus/smallrye/faulttolerance/test/retry/backoff/RetryOnClassBackoffOnMethodTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "e.getClass()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 20,
      "startColumnNumber" : 56,
      "endLineNumber" : 20,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 20,
        "startColumnNumber" : 16,
        "endLineNumber" : 20,
        "endColumnNumber" : 69
      },
      "nodeContext" : "assertEquals(DefinitionException.class,e.getClass())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 20,
        "startColumnNumber" : 16,
        "endLineNumber" : 20,
        "endColumnNumber" : 70
      },
      "nodeContext" : "assertEquals(DefinitionException.class,e.getClass());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 235,
        "startLineNumber" : 19,
        "startColumnNumber" : 34,
        "endLineNumber" : 23,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  assertEquals(DefinitionException.class,e.getClass());\n  assertTrue(e.getMessage().contains(\"Backoff annotation\"));\n  assertTrue(e.getMessage().contains(\"@Retry is missing\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 240,
        "startLineNumber" : 19,
        "startColumnNumber" : 29,
        "endLineNumber" : 23,
        "endColumnNumber" : 13
      },
      "nodeContext" : "e -> {\n  assertEquals(DefinitionException.class,e.getClass());\n  assertTrue(e.getMessage().contains(\"Backoff annotation\"));\n  assertTrue(e.getMessage().contains(\"@Retry is missing\"));\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 31,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 20,
        "startColumnNumber" : 16,
        "endLineNumber" : 20,
        "endColumnNumber" : 70
      },
      "nodeContext" : "assertEquals(DefinitionException.class,e.getClass());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.Class<>"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 20,
    "startColumnNumber" : 56,
    "endLineNumber" : 20,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}