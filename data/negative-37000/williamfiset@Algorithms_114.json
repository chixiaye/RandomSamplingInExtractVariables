{
  "id" : 114,
  "expression" : "tspRecursiveTourCost",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/graphtheory/TravelingSalesmanProblemTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "tspRecursiveTourCost",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 85,
      "startColumnNumber" : 15,
      "endLineNumber" : 85,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 36
      },
      "nodeContext" : "assertThat(tspRecursiveTourCost)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertThat(tspRecursiveTourCost).isWithin(EPS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 63
      },
      "nodeContext" : "assertThat(tspRecursiveTourCost).isWithin(EPS).of(expected)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 64
      },
      "nodeContext" : "assertThat(tspRecursiveTourCost).isWithin(EPS).of(expected);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 692,
        "startLineNumber" : 69,
        "startColumnNumber" : 31,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int n=5;\n  double[][] dist=new double[n][n];\n  for (  double[] row : dist)   java.util.Arrays.fill(row,100);\n  dist[1][3]=dist[3][1]=1;\n  dist[3][0]=dist[0][3]=2;\n  dist[0][2]=dist[2][0]=3;\n  dist[2][4]=dist[4][2]=4;\n  dist[4][1]=dist[1][4]=5;\n  double expected=1 + 2 + 3+ 4+ 5;\n  double tspRecursiveTourCost=new TspDynamicProgrammingRecursive(dist).getTourCost();\n  double tspIterativeTourCost=new TspDynamicProgrammingIterative(dist).getTourCost();\n  assertThat(tspRecursiveTourCost).isWithin(EPS).of(expected);\n  assertThat(tspIterativeTourCost).isWithin(EPS).of(expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 157,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 729,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testTsp_small1(){\n  int n=5;\n  double[][] dist=new double[n][n];\n  for (  double[] row : dist)   java.util.Arrays.fill(row,100);\n  dist[1][3]=dist[3][1]=1;\n  dist[3][0]=dist[0][3]=2;\n  dist[0][2]=dist[2][0]=3;\n  dist[2][4]=dist[4][2]=4;\n  dist[4][1]=dist[1][4]=5;\n  double expected=1 + 2 + 3+ 4+ 5;\n  double tspRecursiveTourCost=new TspDynamicProgrammingRecursive(dist).getTourCost();\n  double tspIterativeTourCost=new TspDynamicProgrammingIterative(dist).getTourCost();\n  assertThat(tspRecursiveTourCost).isWithin(EPS).of(expected);\n  assertThat(tspIterativeTourCost).isWithin(EPS).of(expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 163,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 64
      },
      "nodeContext" : "assertThat(tspRecursiveTourCost).isWithin(EPS).of(expected);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "double"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 85,
    "startColumnNumber" : 15,
    "endLineNumber" : 85,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}