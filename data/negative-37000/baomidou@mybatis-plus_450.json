{
  "id" : 450,
  "expression" : "entityMap",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-core/src/main/java/com/baomidou/mybatisplus/plugins/OptimisticLockerInterceptor.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "entityMap",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 120,
      "startColumnNumber" : 28,
      "endLineNumber" : 120,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 120,
        "startColumnNumber" : 28,
        "endLineNumber" : 120,
        "endColumnNumber" : 67
      },
      "nodeContext" : "entityMap.put(fd.getName(),fd.get(et))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 120,
        "startColumnNumber" : 28,
        "endLineNumber" : 120,
        "endColumnNumber" : 68
      },
      "nodeContext" : "entityMap.put(fd.getName(),fd.get(et));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 227,
        "startLineNumber" : 119,
        "startColumnNumber" : 47,
        "endLineNumber" : 124,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  entityMap.put(fd.getName(),fd.get(et));\n  if (ef.isVersion()) {\n    versionField=fd;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 250,
        "startLineNumber" : 119,
        "startColumnNumber" : 24,
        "endLineNumber" : 124,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (fd.isAccessible()) {\n  entityMap.put(fd.getName(),fd.get(et));\n  if (ef.isVersion()) {\n    versionField=fd;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 348,
        "startLineNumber" : 117,
        "startColumnNumber" : 50,
        "endLineNumber" : 125,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  Field fd=ef.getField();\n  if (fd.isAccessible()) {\n    entityMap.put(fd.getName(),fd.get(et));\n    if (ef.isVersion()) {\n      versionField=fd;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 378,
        "startLineNumber" : 117,
        "startColumnNumber" : 20,
        "endLineNumber" : 125,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (EntityField ef : fields) {\n  Field fd=ef.getField();\n  if (fd.isAccessible()) {\n    entityMap.put(fd.getName(),fd.get(et));\n    if (ef.isVersion()) {\n      versionField=fd;\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 40,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1765,
        "startLineNumber" : 113,
        "startColumnNumber" : 97,
        "endLineNumber" : 144,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n  Map<String,Object> entityMap=new HashMap<>();\n  List<EntityField> fields=getEntityFields(entityClass);\n  for (  EntityField ef : fields) {\n    Field fd=ef.getField();\n    if (fd.isAccessible()) {\n      entityMap.put(fd.getName(),fd.get(et));\n      if (ef.isVersion()) {\n        versionField=fd;\n      }\n    }\n  }\n  String versionPropertyName=versionField.getName();\n  List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n  String versionColumnName=entityField.getColumnName();\n  if (versionColumnName == null) {\n    for (    TableFieldInfo tf : fieldList) {\n      if (versionPropertyName.equals(tf.getProperty())) {\n        versionColumnName=tf.getColumn();\n      }\n    }\n  }\n  if (versionColumnName != null) {\n    entityField.setColumnName(versionColumnName);\n    entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n    entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n    entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n    entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n    map.put(NAME_ENTITY,entityMap);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 172,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1846,
        "startLineNumber" : 113,
        "startColumnNumber" : 16,
        "endLineNumber" : 144,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n  TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n  Map<String,Object> entityMap=new HashMap<>();\n  List<EntityField> fields=getEntityFields(entityClass);\n  for (  EntityField ef : fields) {\n    Field fd=ef.getField();\n    if (fd.isAccessible()) {\n      entityMap.put(fd.getName(),fd.get(et));\n      if (ef.isVersion()) {\n        versionField=fd;\n      }\n    }\n  }\n  String versionPropertyName=versionField.getName();\n  List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n  String versionColumnName=entityField.getColumnName();\n  if (versionColumnName == null) {\n    for (    TableFieldInfo tf : fieldList) {\n      if (versionPropertyName.equals(tf.getProperty())) {\n        versionColumnName=tf.getColumn();\n      }\n    }\n  }\n  if (versionColumnName != null) {\n    entityField.setColumnName(versionColumnName);\n    entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n    entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n    entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n    entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n    map.put(NAME_ENTITY,entityMap);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 186,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2507,
        "startLineNumber" : 103,
        "startColumnNumber" : 35,
        "endLineNumber" : 145,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String methodId=ms.getId();\n  String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n  if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n    return invocation.proceed();\n  }\n  Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n  EntityField entityField=this.getVersionField(entityClass);\n  Field versionField=entityField == null ? null : entityField.getField();\n  Object originalVersionVal;\n  if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n    TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n    Map<String,Object> entityMap=new HashMap<>();\n    List<EntityField> fields=getEntityFields(entityClass);\n    for (    EntityField ef : fields) {\n      Field fd=ef.getField();\n      if (fd.isAccessible()) {\n        entityMap.put(fd.getName(),fd.get(et));\n        if (ef.isVersion()) {\n          versionField=fd;\n        }\n      }\n    }\n    String versionPropertyName=versionField.getName();\n    List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n    String versionColumnName=entityField.getColumnName();\n    if (versionColumnName == null) {\n      for (      TableFieldInfo tf : fieldList) {\n        if (versionPropertyName.equals(tf.getProperty())) {\n          versionColumnName=tf.getColumn();\n        }\n      }\n    }\n    if (versionColumnName != null) {\n      entityField.setColumnName(versionColumnName);\n      entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n      entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n      entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n      entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n      map.put(NAME_ENTITY,entityMap);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 261,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2523,
        "startLineNumber" : 103,
        "startColumnNumber" : 19,
        "endLineNumber" : 145,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (et != null) {\n  String methodId=ms.getId();\n  String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n  if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n    return invocation.proceed();\n  }\n  Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n  EntityField entityField=this.getVersionField(entityClass);\n  Field versionField=entityField == null ? null : entityField.getField();\n  Object originalVersionVal;\n  if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n    TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n    Map<String,Object> entityMap=new HashMap<>();\n    List<EntityField> fields=getEntityFields(entityClass);\n    for (    EntityField ef : fields) {\n      Field fd=ef.getField();\n      if (fd.isAccessible()) {\n        entityMap.put(fd.getName(),fd.get(et));\n        if (ef.isVersion()) {\n          versionField=fd;\n        }\n      }\n    }\n    String versionPropertyName=versionField.getName();\n    List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n    String versionColumnName=entityField.getColumnName();\n    if (versionColumnName == null) {\n      for (      TableFieldInfo tf : fieldList) {\n        if (versionPropertyName.equals(tf.getProperty())) {\n          versionColumnName=tf.getColumn();\n        }\n      }\n    }\n    if (versionColumnName != null) {\n      entityField.setColumnName(versionColumnName);\n      entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n      entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n      entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n      entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n      map.put(NAME_ENTITY,entityMap);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 265,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3218,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 145,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (ew != null) {\n  Object entity=ew.getEntity();\n  if (entity != null) {\n    Class<?> entityClass=ClassUtils.getUserClass(entity.getClass());\n    EntityField ef=getVersionField(entityClass);\n    Field versionField=ef == null ? null : ef.getField();\n    if (versionField != null) {\n      Object originalVersionVal=versionField.get(entity);\n      if (originalVersionVal != null) {\n        versionField.set(et,getUpdatedVersionVal(originalVersionVal));\n      }\n    }\n  }\n}\n else if (et != null) {\n  String methodId=ms.getId();\n  String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n  if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n    return invocation.proceed();\n  }\n  Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n  EntityField entityField=this.getVersionField(entityClass);\n  Field versionField=entityField == null ? null : entityField.getField();\n  Object originalVersionVal;\n  if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n    TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n    Map<String,Object> entityMap=new HashMap<>();\n    List<EntityField> fields=getEntityFields(entityClass);\n    for (    EntityField ef : fields) {\n      Field fd=ef.getField();\n      if (fd.isAccessible()) {\n        entityMap.put(fd.getName(),fd.get(et));\n        if (ef.isVersion()) {\n          versionField=fd;\n        }\n      }\n    }\n    String versionPropertyName=versionField.getName();\n    List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n    String versionColumnName=entityField.getColumnName();\n    if (versionColumnName == null) {\n      for (      TableFieldInfo tf : fieldList) {\n        if (versionPropertyName.equals(tf.getProperty())) {\n          versionColumnName=tf.getColumn();\n        }\n      }\n    }\n    if (versionColumnName != null) {\n      entityField.setColumnName(versionColumnName);\n      entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n      entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n      entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n      entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n      map.put(NAME_ENTITY,entityMap);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 344,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3996,
        "startLineNumber" : 74,
        "startColumnNumber" : 38,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HashMap map=(HashMap)param;\n  Wrapper ew=null;\n  if (map.containsKey(NAME_ENTITY_WRAPPER)) {\n    ew=(Wrapper)map.get(NAME_ENTITY_WRAPPER);\n  }\n  Object et=null;\n  if (map.containsKey(NAME_ENTITY)) {\n    et=map.get(NAME_ENTITY);\n  }\n  if (ew != null) {\n    Object entity=ew.getEntity();\n    if (entity != null) {\n      Class<?> entityClass=ClassUtils.getUserClass(entity.getClass());\n      EntityField ef=getVersionField(entityClass);\n      Field versionField=ef == null ? null : ef.getField();\n      if (versionField != null) {\n        Object originalVersionVal=versionField.get(entity);\n        if (originalVersionVal != null) {\n          versionField.set(et,getUpdatedVersionVal(originalVersionVal));\n        }\n      }\n    }\n  }\n else   if (et != null) {\n    String methodId=ms.getId();\n    String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n    if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n      return invocation.proceed();\n    }\n    Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n    EntityField entityField=this.getVersionField(entityClass);\n    Field versionField=entityField == null ? null : entityField.getField();\n    Object originalVersionVal;\n    if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n      TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n      Map<String,Object> entityMap=new HashMap<>();\n      List<EntityField> fields=getEntityFields(entityClass);\n      for (      EntityField ef : fields) {\n        Field fd=ef.getField();\n        if (fd.isAccessible()) {\n          entityMap.put(fd.getName(),fd.get(et));\n          if (ef.isVersion()) {\n            versionField=fd;\n          }\n        }\n      }\n      String versionPropertyName=versionField.getName();\n      List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n      String versionColumnName=entityField.getColumnName();\n      if (versionColumnName == null) {\n        for (        TableFieldInfo tf : fieldList) {\n          if (versionPropertyName.equals(tf.getProperty())) {\n            versionColumnName=tf.getColumn();\n          }\n        }\n      }\n      if (versionColumnName != null) {\n        entityField.setColumnName(versionColumnName);\n        entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n        entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n        entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n        entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n        map.put(NAME_ENTITY,entityMap);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 395,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4026,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (param instanceof HashMap) {\n  HashMap map=(HashMap)param;\n  Wrapper ew=null;\n  if (map.containsKey(NAME_ENTITY_WRAPPER)) {\n    ew=(Wrapper)map.get(NAME_ENTITY_WRAPPER);\n  }\n  Object et=null;\n  if (map.containsKey(NAME_ENTITY)) {\n    et=map.get(NAME_ENTITY);\n  }\n  if (ew != null) {\n    Object entity=ew.getEntity();\n    if (entity != null) {\n      Class<?> entityClass=ClassUtils.getUserClass(entity.getClass());\n      EntityField ef=getVersionField(entityClass);\n      Field versionField=ef == null ? null : ef.getField();\n      if (versionField != null) {\n        Object originalVersionVal=versionField.get(entity);\n        if (originalVersionVal != null) {\n          versionField.set(et,getUpdatedVersionVal(originalVersionVal));\n        }\n      }\n    }\n  }\n else   if (et != null) {\n    String methodId=ms.getId();\n    String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n    if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n      return invocation.proceed();\n    }\n    Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n    EntityField entityField=this.getVersionField(entityClass);\n    Field versionField=entityField == null ? null : entityField.getField();\n    Object originalVersionVal;\n    if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n      TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n      Map<String,Object> entityMap=new HashMap<>();\n      List<EntityField> fields=getEntityFields(entityClass);\n      for (      EntityField ef : fields) {\n        Field fd=ef.getField();\n        if (fd.isAccessible()) {\n          entityMap.put(fd.getName(),fd.get(et));\n          if (ef.isVersion()) {\n            versionField=fd;\n          }\n        }\n      }\n      String versionPropertyName=versionField.getName();\n      List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n      String versionColumnName=entityField.getColumnName();\n      if (versionColumnName == null) {\n        for (        TableFieldInfo tf : fieldList) {\n          if (versionPropertyName.equals(tf.getProperty())) {\n            versionColumnName=tf.getColumn();\n          }\n        }\n      }\n      if (versionColumnName != null) {\n        entityField.setColumnName(versionColumnName);\n        entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n        entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n        entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n        entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n        map.put(NAME_ENTITY,entityMap);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 400,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4327,
        "startLineNumber" : 67,
        "startColumnNumber" : 68,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Object[] args=invocation.getArgs();\n  MappedStatement ms=(MappedStatement)args[0];\n  if (SqlCommandType.UPDATE != ms.getSqlCommandType()) {\n    return invocation.proceed();\n  }\n  Object param=args[1];\n  if (param instanceof HashMap) {\n    HashMap map=(HashMap)param;\n    Wrapper ew=null;\n    if (map.containsKey(NAME_ENTITY_WRAPPER)) {\n      ew=(Wrapper)map.get(NAME_ENTITY_WRAPPER);\n    }\n    Object et=null;\n    if (map.containsKey(NAME_ENTITY)) {\n      et=map.get(NAME_ENTITY);\n    }\n    if (ew != null) {\n      Object entity=ew.getEntity();\n      if (entity != null) {\n        Class<?> entityClass=ClassUtils.getUserClass(entity.getClass());\n        EntityField ef=getVersionField(entityClass);\n        Field versionField=ef == null ? null : ef.getField();\n        if (versionField != null) {\n          Object originalVersionVal=versionField.get(entity);\n          if (originalVersionVal != null) {\n            versionField.set(et,getUpdatedVersionVal(originalVersionVal));\n          }\n        }\n      }\n    }\n else     if (et != null) {\n      String methodId=ms.getId();\n      String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n      if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n        return invocation.proceed();\n      }\n      Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n      EntityField entityField=this.getVersionField(entityClass);\n      Field versionField=entityField == null ? null : entityField.getField();\n      Object originalVersionVal;\n      if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n        TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n        Map<String,Object> entityMap=new HashMap<>();\n        List<EntityField> fields=getEntityFields(entityClass);\n        for (        EntityField ef : fields) {\n          Field fd=ef.getField();\n          if (fd.isAccessible()) {\n            entityMap.put(fd.getName(),fd.get(et));\n            if (ef.isVersion()) {\n              versionField=fd;\n            }\n          }\n        }\n        String versionPropertyName=versionField.getName();\n        List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n        String versionColumnName=entityField.getColumnName();\n        if (versionColumnName == null) {\n          for (          TableFieldInfo tf : fieldList) {\n            if (versionPropertyName.equals(tf.getProperty())) {\n              versionColumnName=tf.getColumn();\n            }\n          }\n        }\n        if (versionColumnName != null) {\n          entityField.setColumnName(versionColumnName);\n          entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n          entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n          entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n          entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n          map.put(NAME_ENTITY,entityMap);\n        }\n      }\n    }\n  }\n  return invocation.proceed();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 447,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4440,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override @SuppressWarnings(\"unchecked\") public Object intercept(Invocation invocation) throws Throwable {\n  Object[] args=invocation.getArgs();\n  MappedStatement ms=(MappedStatement)args[0];\n  if (SqlCommandType.UPDATE != ms.getSqlCommandType()) {\n    return invocation.proceed();\n  }\n  Object param=args[1];\n  if (param instanceof HashMap) {\n    HashMap map=(HashMap)param;\n    Wrapper ew=null;\n    if (map.containsKey(NAME_ENTITY_WRAPPER)) {\n      ew=(Wrapper)map.get(NAME_ENTITY_WRAPPER);\n    }\n    Object et=null;\n    if (map.containsKey(NAME_ENTITY)) {\n      et=map.get(NAME_ENTITY);\n    }\n    if (ew != null) {\n      Object entity=ew.getEntity();\n      if (entity != null) {\n        Class<?> entityClass=ClassUtils.getUserClass(entity.getClass());\n        EntityField ef=getVersionField(entityClass);\n        Field versionField=ef == null ? null : ef.getField();\n        if (versionField != null) {\n          Object originalVersionVal=versionField.get(entity);\n          if (originalVersionVal != null) {\n            versionField.set(et,getUpdatedVersionVal(originalVersionVal));\n          }\n        }\n      }\n    }\n else     if (et != null) {\n      String methodId=ms.getId();\n      String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n      if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n        return invocation.proceed();\n      }\n      Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n      EntityField entityField=this.getVersionField(entityClass);\n      Field versionField=entityField == null ? null : entityField.getField();\n      Object originalVersionVal;\n      if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n        TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n        Map<String,Object> entityMap=new HashMap<>();\n        List<EntityField> fields=getEntityFields(entityClass);\n        for (        EntityField ef : fields) {\n          Field fd=ef.getField();\n          if (fd.isAccessible()) {\n            entityMap.put(fd.getName(),fd.get(et));\n            if (ef.isVersion()) {\n              versionField=fd;\n            }\n          }\n        }\n        String versionPropertyName=versionField.getName();\n        List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n        String versionColumnName=entityField.getColumnName();\n        if (versionColumnName == null) {\n          for (          TableFieldInfo tf : fieldList) {\n            if (versionPropertyName.equals(tf.getProperty())) {\n              versionColumnName=tf.getColumn();\n            }\n          }\n        }\n        if (versionColumnName != null) {\n          entityField.setColumnName(versionColumnName);\n          entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n          entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n          entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n          entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n          map.put(NAME_ENTITY,entityMap);\n        }\n      }\n    }\n  }\n  return invocation.proceed();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 463,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 120,
        "startColumnNumber" : 28,
        "endLineNumber" : 120,
        "endColumnNumber" : 68
      },
      "nodeContext" : "entityMap.put(fd.getName(),fd.get(et));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  }, {
    "nodeContext" : "entityMap",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 138,
      "startColumnNumber" : 24,
      "endLineNumber" : 138,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 138,
        "startColumnNumber" : 24,
        "endLineNumber" : 138,
        "endColumnNumber" : 103
      },
      "nodeContext" : "entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 138,
        "startColumnNumber" : 24,
        "endLineNumber" : 138,
        "endColumnNumber" : 104
      },
      "nodeContext" : "entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 495,
        "startLineNumber" : 136,
        "startColumnNumber" : 51,
        "endLineNumber" : 143,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  entityField.setColumnName(versionColumnName);\n  entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n  entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n  entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n  entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n  map.put(NAME_ENTITY,entityMap);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 526,
        "startLineNumber" : 136,
        "startColumnNumber" : 20,
        "endLineNumber" : 143,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (versionColumnName != null) {\n  entityField.setColumnName(versionColumnName);\n  entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n  entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n  entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n  entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n  map.put(NAME_ENTITY,entityMap);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1765,
        "startLineNumber" : 113,
        "startColumnNumber" : 97,
        "endLineNumber" : 144,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n  Map<String,Object> entityMap=new HashMap<>();\n  List<EntityField> fields=getEntityFields(entityClass);\n  for (  EntityField ef : fields) {\n    Field fd=ef.getField();\n    if (fd.isAccessible()) {\n      entityMap.put(fd.getName(),fd.get(et));\n      if (ef.isVersion()) {\n        versionField=fd;\n      }\n    }\n  }\n  String versionPropertyName=versionField.getName();\n  List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n  String versionColumnName=entityField.getColumnName();\n  if (versionColumnName == null) {\n    for (    TableFieldInfo tf : fieldList) {\n      if (versionPropertyName.equals(tf.getProperty())) {\n        versionColumnName=tf.getColumn();\n      }\n    }\n  }\n  if (versionColumnName != null) {\n    entityField.setColumnName(versionColumnName);\n    entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n    entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n    entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n    entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n    map.put(NAME_ENTITY,entityMap);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 172,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1846,
        "startLineNumber" : 113,
        "startColumnNumber" : 16,
        "endLineNumber" : 144,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n  TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n  Map<String,Object> entityMap=new HashMap<>();\n  List<EntityField> fields=getEntityFields(entityClass);\n  for (  EntityField ef : fields) {\n    Field fd=ef.getField();\n    if (fd.isAccessible()) {\n      entityMap.put(fd.getName(),fd.get(et));\n      if (ef.isVersion()) {\n        versionField=fd;\n      }\n    }\n  }\n  String versionPropertyName=versionField.getName();\n  List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n  String versionColumnName=entityField.getColumnName();\n  if (versionColumnName == null) {\n    for (    TableFieldInfo tf : fieldList) {\n      if (versionPropertyName.equals(tf.getProperty())) {\n        versionColumnName=tf.getColumn();\n      }\n    }\n  }\n  if (versionColumnName != null) {\n    entityField.setColumnName(versionColumnName);\n    entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n    entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n    entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n    entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n    map.put(NAME_ENTITY,entityMap);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 186,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2507,
        "startLineNumber" : 103,
        "startColumnNumber" : 35,
        "endLineNumber" : 145,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String methodId=ms.getId();\n  String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n  if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n    return invocation.proceed();\n  }\n  Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n  EntityField entityField=this.getVersionField(entityClass);\n  Field versionField=entityField == null ? null : entityField.getField();\n  Object originalVersionVal;\n  if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n    TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n    Map<String,Object> entityMap=new HashMap<>();\n    List<EntityField> fields=getEntityFields(entityClass);\n    for (    EntityField ef : fields) {\n      Field fd=ef.getField();\n      if (fd.isAccessible()) {\n        entityMap.put(fd.getName(),fd.get(et));\n        if (ef.isVersion()) {\n          versionField=fd;\n        }\n      }\n    }\n    String versionPropertyName=versionField.getName();\n    List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n    String versionColumnName=entityField.getColumnName();\n    if (versionColumnName == null) {\n      for (      TableFieldInfo tf : fieldList) {\n        if (versionPropertyName.equals(tf.getProperty())) {\n          versionColumnName=tf.getColumn();\n        }\n      }\n    }\n    if (versionColumnName != null) {\n      entityField.setColumnName(versionColumnName);\n      entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n      entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n      entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n      entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n      map.put(NAME_ENTITY,entityMap);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 261,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2523,
        "startLineNumber" : 103,
        "startColumnNumber" : 19,
        "endLineNumber" : 145,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (et != null) {\n  String methodId=ms.getId();\n  String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n  if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n    return invocation.proceed();\n  }\n  Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n  EntityField entityField=this.getVersionField(entityClass);\n  Field versionField=entityField == null ? null : entityField.getField();\n  Object originalVersionVal;\n  if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n    TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n    Map<String,Object> entityMap=new HashMap<>();\n    List<EntityField> fields=getEntityFields(entityClass);\n    for (    EntityField ef : fields) {\n      Field fd=ef.getField();\n      if (fd.isAccessible()) {\n        entityMap.put(fd.getName(),fd.get(et));\n        if (ef.isVersion()) {\n          versionField=fd;\n        }\n      }\n    }\n    String versionPropertyName=versionField.getName();\n    List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n    String versionColumnName=entityField.getColumnName();\n    if (versionColumnName == null) {\n      for (      TableFieldInfo tf : fieldList) {\n        if (versionPropertyName.equals(tf.getProperty())) {\n          versionColumnName=tf.getColumn();\n        }\n      }\n    }\n    if (versionColumnName != null) {\n      entityField.setColumnName(versionColumnName);\n      entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n      entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n      entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n      entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n      map.put(NAME_ENTITY,entityMap);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 265,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3218,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 145,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (ew != null) {\n  Object entity=ew.getEntity();\n  if (entity != null) {\n    Class<?> entityClass=ClassUtils.getUserClass(entity.getClass());\n    EntityField ef=getVersionField(entityClass);\n    Field versionField=ef == null ? null : ef.getField();\n    if (versionField != null) {\n      Object originalVersionVal=versionField.get(entity);\n      if (originalVersionVal != null) {\n        versionField.set(et,getUpdatedVersionVal(originalVersionVal));\n      }\n    }\n  }\n}\n else if (et != null) {\n  String methodId=ms.getId();\n  String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n  if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n    return invocation.proceed();\n  }\n  Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n  EntityField entityField=this.getVersionField(entityClass);\n  Field versionField=entityField == null ? null : entityField.getField();\n  Object originalVersionVal;\n  if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n    TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n    Map<String,Object> entityMap=new HashMap<>();\n    List<EntityField> fields=getEntityFields(entityClass);\n    for (    EntityField ef : fields) {\n      Field fd=ef.getField();\n      if (fd.isAccessible()) {\n        entityMap.put(fd.getName(),fd.get(et));\n        if (ef.isVersion()) {\n          versionField=fd;\n        }\n      }\n    }\n    String versionPropertyName=versionField.getName();\n    List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n    String versionColumnName=entityField.getColumnName();\n    if (versionColumnName == null) {\n      for (      TableFieldInfo tf : fieldList) {\n        if (versionPropertyName.equals(tf.getProperty())) {\n          versionColumnName=tf.getColumn();\n        }\n      }\n    }\n    if (versionColumnName != null) {\n      entityField.setColumnName(versionColumnName);\n      entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n      entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n      entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n      entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n      map.put(NAME_ENTITY,entityMap);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 344,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3996,
        "startLineNumber" : 74,
        "startColumnNumber" : 38,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HashMap map=(HashMap)param;\n  Wrapper ew=null;\n  if (map.containsKey(NAME_ENTITY_WRAPPER)) {\n    ew=(Wrapper)map.get(NAME_ENTITY_WRAPPER);\n  }\n  Object et=null;\n  if (map.containsKey(NAME_ENTITY)) {\n    et=map.get(NAME_ENTITY);\n  }\n  if (ew != null) {\n    Object entity=ew.getEntity();\n    if (entity != null) {\n      Class<?> entityClass=ClassUtils.getUserClass(entity.getClass());\n      EntityField ef=getVersionField(entityClass);\n      Field versionField=ef == null ? null : ef.getField();\n      if (versionField != null) {\n        Object originalVersionVal=versionField.get(entity);\n        if (originalVersionVal != null) {\n          versionField.set(et,getUpdatedVersionVal(originalVersionVal));\n        }\n      }\n    }\n  }\n else   if (et != null) {\n    String methodId=ms.getId();\n    String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n    if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n      return invocation.proceed();\n    }\n    Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n    EntityField entityField=this.getVersionField(entityClass);\n    Field versionField=entityField == null ? null : entityField.getField();\n    Object originalVersionVal;\n    if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n      TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n      Map<String,Object> entityMap=new HashMap<>();\n      List<EntityField> fields=getEntityFields(entityClass);\n      for (      EntityField ef : fields) {\n        Field fd=ef.getField();\n        if (fd.isAccessible()) {\n          entityMap.put(fd.getName(),fd.get(et));\n          if (ef.isVersion()) {\n            versionField=fd;\n          }\n        }\n      }\n      String versionPropertyName=versionField.getName();\n      List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n      String versionColumnName=entityField.getColumnName();\n      if (versionColumnName == null) {\n        for (        TableFieldInfo tf : fieldList) {\n          if (versionPropertyName.equals(tf.getProperty())) {\n            versionColumnName=tf.getColumn();\n          }\n        }\n      }\n      if (versionColumnName != null) {\n        entityField.setColumnName(versionColumnName);\n        entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n        entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n        entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n        entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n        map.put(NAME_ENTITY,entityMap);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 395,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4026,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (param instanceof HashMap) {\n  HashMap map=(HashMap)param;\n  Wrapper ew=null;\n  if (map.containsKey(NAME_ENTITY_WRAPPER)) {\n    ew=(Wrapper)map.get(NAME_ENTITY_WRAPPER);\n  }\n  Object et=null;\n  if (map.containsKey(NAME_ENTITY)) {\n    et=map.get(NAME_ENTITY);\n  }\n  if (ew != null) {\n    Object entity=ew.getEntity();\n    if (entity != null) {\n      Class<?> entityClass=ClassUtils.getUserClass(entity.getClass());\n      EntityField ef=getVersionField(entityClass);\n      Field versionField=ef == null ? null : ef.getField();\n      if (versionField != null) {\n        Object originalVersionVal=versionField.get(entity);\n        if (originalVersionVal != null) {\n          versionField.set(et,getUpdatedVersionVal(originalVersionVal));\n        }\n      }\n    }\n  }\n else   if (et != null) {\n    String methodId=ms.getId();\n    String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n    if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n      return invocation.proceed();\n    }\n    Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n    EntityField entityField=this.getVersionField(entityClass);\n    Field versionField=entityField == null ? null : entityField.getField();\n    Object originalVersionVal;\n    if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n      TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n      Map<String,Object> entityMap=new HashMap<>();\n      List<EntityField> fields=getEntityFields(entityClass);\n      for (      EntityField ef : fields) {\n        Field fd=ef.getField();\n        if (fd.isAccessible()) {\n          entityMap.put(fd.getName(),fd.get(et));\n          if (ef.isVersion()) {\n            versionField=fd;\n          }\n        }\n      }\n      String versionPropertyName=versionField.getName();\n      List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n      String versionColumnName=entityField.getColumnName();\n      if (versionColumnName == null) {\n        for (        TableFieldInfo tf : fieldList) {\n          if (versionPropertyName.equals(tf.getProperty())) {\n            versionColumnName=tf.getColumn();\n          }\n        }\n      }\n      if (versionColumnName != null) {\n        entityField.setColumnName(versionColumnName);\n        entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n        entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n        entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n        entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n        map.put(NAME_ENTITY,entityMap);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 400,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4327,
        "startLineNumber" : 67,
        "startColumnNumber" : 68,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Object[] args=invocation.getArgs();\n  MappedStatement ms=(MappedStatement)args[0];\n  if (SqlCommandType.UPDATE != ms.getSqlCommandType()) {\n    return invocation.proceed();\n  }\n  Object param=args[1];\n  if (param instanceof HashMap) {\n    HashMap map=(HashMap)param;\n    Wrapper ew=null;\n    if (map.containsKey(NAME_ENTITY_WRAPPER)) {\n      ew=(Wrapper)map.get(NAME_ENTITY_WRAPPER);\n    }\n    Object et=null;\n    if (map.containsKey(NAME_ENTITY)) {\n      et=map.get(NAME_ENTITY);\n    }\n    if (ew != null) {\n      Object entity=ew.getEntity();\n      if (entity != null) {\n        Class<?> entityClass=ClassUtils.getUserClass(entity.getClass());\n        EntityField ef=getVersionField(entityClass);\n        Field versionField=ef == null ? null : ef.getField();\n        if (versionField != null) {\n          Object originalVersionVal=versionField.get(entity);\n          if (originalVersionVal != null) {\n            versionField.set(et,getUpdatedVersionVal(originalVersionVal));\n          }\n        }\n      }\n    }\n else     if (et != null) {\n      String methodId=ms.getId();\n      String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n      if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n        return invocation.proceed();\n      }\n      Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n      EntityField entityField=this.getVersionField(entityClass);\n      Field versionField=entityField == null ? null : entityField.getField();\n      Object originalVersionVal;\n      if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n        TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n        Map<String,Object> entityMap=new HashMap<>();\n        List<EntityField> fields=getEntityFields(entityClass);\n        for (        EntityField ef : fields) {\n          Field fd=ef.getField();\n          if (fd.isAccessible()) {\n            entityMap.put(fd.getName(),fd.get(et));\n            if (ef.isVersion()) {\n              versionField=fd;\n            }\n          }\n        }\n        String versionPropertyName=versionField.getName();\n        List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n        String versionColumnName=entityField.getColumnName();\n        if (versionColumnName == null) {\n          for (          TableFieldInfo tf : fieldList) {\n            if (versionPropertyName.equals(tf.getProperty())) {\n              versionColumnName=tf.getColumn();\n            }\n          }\n        }\n        if (versionColumnName != null) {\n          entityField.setColumnName(versionColumnName);\n          entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n          entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n          entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n          entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n          map.put(NAME_ENTITY,entityMap);\n        }\n      }\n    }\n  }\n  return invocation.proceed();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 447,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4440,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override @SuppressWarnings(\"unchecked\") public Object intercept(Invocation invocation) throws Throwable {\n  Object[] args=invocation.getArgs();\n  MappedStatement ms=(MappedStatement)args[0];\n  if (SqlCommandType.UPDATE != ms.getSqlCommandType()) {\n    return invocation.proceed();\n  }\n  Object param=args[1];\n  if (param instanceof HashMap) {\n    HashMap map=(HashMap)param;\n    Wrapper ew=null;\n    if (map.containsKey(NAME_ENTITY_WRAPPER)) {\n      ew=(Wrapper)map.get(NAME_ENTITY_WRAPPER);\n    }\n    Object et=null;\n    if (map.containsKey(NAME_ENTITY)) {\n      et=map.get(NAME_ENTITY);\n    }\n    if (ew != null) {\n      Object entity=ew.getEntity();\n      if (entity != null) {\n        Class<?> entityClass=ClassUtils.getUserClass(entity.getClass());\n        EntityField ef=getVersionField(entityClass);\n        Field versionField=ef == null ? null : ef.getField();\n        if (versionField != null) {\n          Object originalVersionVal=versionField.get(entity);\n          if (originalVersionVal != null) {\n            versionField.set(et,getUpdatedVersionVal(originalVersionVal));\n          }\n        }\n      }\n    }\n else     if (et != null) {\n      String methodId=ms.getId();\n      String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n      if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n        return invocation.proceed();\n      }\n      Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n      EntityField entityField=this.getVersionField(entityClass);\n      Field versionField=entityField == null ? null : entityField.getField();\n      Object originalVersionVal;\n      if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n        TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n        Map<String,Object> entityMap=new HashMap<>();\n        List<EntityField> fields=getEntityFields(entityClass);\n        for (        EntityField ef : fields) {\n          Field fd=ef.getField();\n          if (fd.isAccessible()) {\n            entityMap.put(fd.getName(),fd.get(et));\n            if (ef.isVersion()) {\n              versionField=fd;\n            }\n          }\n        }\n        String versionPropertyName=versionField.getName();\n        List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n        String versionColumnName=entityField.getColumnName();\n        if (versionColumnName == null) {\n          for (          TableFieldInfo tf : fieldList) {\n            if (versionPropertyName.equals(tf.getProperty())) {\n              versionColumnName=tf.getColumn();\n            }\n          }\n        }\n        if (versionColumnName != null) {\n          entityField.setColumnName(versionColumnName);\n          entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n          entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n          entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n          entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n          map.put(NAME_ENTITY,entityMap);\n        }\n      }\n    }\n  }\n  return invocation.proceed();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 463,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 138,
        "startColumnNumber" : 24,
        "endLineNumber" : 138,
        "endColumnNumber" : 104
      },
      "nodeContext" : "entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  }, {
    "nodeContext" : "entityMap",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 139,
      "startColumnNumber" : 24,
      "endLineNumber" : 139,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 139,
        "startColumnNumber" : 24,
        "endLineNumber" : 139,
        "endColumnNumber" : 86
      },
      "nodeContext" : "entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 139,
        "startColumnNumber" : 24,
        "endLineNumber" : 139,
        "endColumnNumber" : 87
      },
      "nodeContext" : "entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 495,
        "startLineNumber" : 136,
        "startColumnNumber" : 51,
        "endLineNumber" : 143,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  entityField.setColumnName(versionColumnName);\n  entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n  entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n  entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n  entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n  map.put(NAME_ENTITY,entityMap);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 526,
        "startLineNumber" : 136,
        "startColumnNumber" : 20,
        "endLineNumber" : 143,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (versionColumnName != null) {\n  entityField.setColumnName(versionColumnName);\n  entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n  entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n  entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n  entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n  map.put(NAME_ENTITY,entityMap);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1765,
        "startLineNumber" : 113,
        "startColumnNumber" : 97,
        "endLineNumber" : 144,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n  Map<String,Object> entityMap=new HashMap<>();\n  List<EntityField> fields=getEntityFields(entityClass);\n  for (  EntityField ef : fields) {\n    Field fd=ef.getField();\n    if (fd.isAccessible()) {\n      entityMap.put(fd.getName(),fd.get(et));\n      if (ef.isVersion()) {\n        versionField=fd;\n      }\n    }\n  }\n  String versionPropertyName=versionField.getName();\n  List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n  String versionColumnName=entityField.getColumnName();\n  if (versionColumnName == null) {\n    for (    TableFieldInfo tf : fieldList) {\n      if (versionPropertyName.equals(tf.getProperty())) {\n        versionColumnName=tf.getColumn();\n      }\n    }\n  }\n  if (versionColumnName != null) {\n    entityField.setColumnName(versionColumnName);\n    entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n    entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n    entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n    entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n    map.put(NAME_ENTITY,entityMap);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 172,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1846,
        "startLineNumber" : 113,
        "startColumnNumber" : 16,
        "endLineNumber" : 144,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n  TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n  Map<String,Object> entityMap=new HashMap<>();\n  List<EntityField> fields=getEntityFields(entityClass);\n  for (  EntityField ef : fields) {\n    Field fd=ef.getField();\n    if (fd.isAccessible()) {\n      entityMap.put(fd.getName(),fd.get(et));\n      if (ef.isVersion()) {\n        versionField=fd;\n      }\n    }\n  }\n  String versionPropertyName=versionField.getName();\n  List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n  String versionColumnName=entityField.getColumnName();\n  if (versionColumnName == null) {\n    for (    TableFieldInfo tf : fieldList) {\n      if (versionPropertyName.equals(tf.getProperty())) {\n        versionColumnName=tf.getColumn();\n      }\n    }\n  }\n  if (versionColumnName != null) {\n    entityField.setColumnName(versionColumnName);\n    entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n    entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n    entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n    entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n    map.put(NAME_ENTITY,entityMap);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 186,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2507,
        "startLineNumber" : 103,
        "startColumnNumber" : 35,
        "endLineNumber" : 145,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String methodId=ms.getId();\n  String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n  if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n    return invocation.proceed();\n  }\n  Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n  EntityField entityField=this.getVersionField(entityClass);\n  Field versionField=entityField == null ? null : entityField.getField();\n  Object originalVersionVal;\n  if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n    TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n    Map<String,Object> entityMap=new HashMap<>();\n    List<EntityField> fields=getEntityFields(entityClass);\n    for (    EntityField ef : fields) {\n      Field fd=ef.getField();\n      if (fd.isAccessible()) {\n        entityMap.put(fd.getName(),fd.get(et));\n        if (ef.isVersion()) {\n          versionField=fd;\n        }\n      }\n    }\n    String versionPropertyName=versionField.getName();\n    List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n    String versionColumnName=entityField.getColumnName();\n    if (versionColumnName == null) {\n      for (      TableFieldInfo tf : fieldList) {\n        if (versionPropertyName.equals(tf.getProperty())) {\n          versionColumnName=tf.getColumn();\n        }\n      }\n    }\n    if (versionColumnName != null) {\n      entityField.setColumnName(versionColumnName);\n      entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n      entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n      entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n      entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n      map.put(NAME_ENTITY,entityMap);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 261,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2523,
        "startLineNumber" : 103,
        "startColumnNumber" : 19,
        "endLineNumber" : 145,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (et != null) {\n  String methodId=ms.getId();\n  String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n  if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n    return invocation.proceed();\n  }\n  Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n  EntityField entityField=this.getVersionField(entityClass);\n  Field versionField=entityField == null ? null : entityField.getField();\n  Object originalVersionVal;\n  if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n    TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n    Map<String,Object> entityMap=new HashMap<>();\n    List<EntityField> fields=getEntityFields(entityClass);\n    for (    EntityField ef : fields) {\n      Field fd=ef.getField();\n      if (fd.isAccessible()) {\n        entityMap.put(fd.getName(),fd.get(et));\n        if (ef.isVersion()) {\n          versionField=fd;\n        }\n      }\n    }\n    String versionPropertyName=versionField.getName();\n    List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n    String versionColumnName=entityField.getColumnName();\n    if (versionColumnName == null) {\n      for (      TableFieldInfo tf : fieldList) {\n        if (versionPropertyName.equals(tf.getProperty())) {\n          versionColumnName=tf.getColumn();\n        }\n      }\n    }\n    if (versionColumnName != null) {\n      entityField.setColumnName(versionColumnName);\n      entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n      entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n      entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n      entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n      map.put(NAME_ENTITY,entityMap);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 265,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3218,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 145,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (ew != null) {\n  Object entity=ew.getEntity();\n  if (entity != null) {\n    Class<?> entityClass=ClassUtils.getUserClass(entity.getClass());\n    EntityField ef=getVersionField(entityClass);\n    Field versionField=ef == null ? null : ef.getField();\n    if (versionField != null) {\n      Object originalVersionVal=versionField.get(entity);\n      if (originalVersionVal != null) {\n        versionField.set(et,getUpdatedVersionVal(originalVersionVal));\n      }\n    }\n  }\n}\n else if (et != null) {\n  String methodId=ms.getId();\n  String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n  if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n    return invocation.proceed();\n  }\n  Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n  EntityField entityField=this.getVersionField(entityClass);\n  Field versionField=entityField == null ? null : entityField.getField();\n  Object originalVersionVal;\n  if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n    TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n    Map<String,Object> entityMap=new HashMap<>();\n    List<EntityField> fields=getEntityFields(entityClass);\n    for (    EntityField ef : fields) {\n      Field fd=ef.getField();\n      if (fd.isAccessible()) {\n        entityMap.put(fd.getName(),fd.get(et));\n        if (ef.isVersion()) {\n          versionField=fd;\n        }\n      }\n    }\n    String versionPropertyName=versionField.getName();\n    List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n    String versionColumnName=entityField.getColumnName();\n    if (versionColumnName == null) {\n      for (      TableFieldInfo tf : fieldList) {\n        if (versionPropertyName.equals(tf.getProperty())) {\n          versionColumnName=tf.getColumn();\n        }\n      }\n    }\n    if (versionColumnName != null) {\n      entityField.setColumnName(versionColumnName);\n      entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n      entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n      entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n      entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n      map.put(NAME_ENTITY,entityMap);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 344,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3996,
        "startLineNumber" : 74,
        "startColumnNumber" : 38,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HashMap map=(HashMap)param;\n  Wrapper ew=null;\n  if (map.containsKey(NAME_ENTITY_WRAPPER)) {\n    ew=(Wrapper)map.get(NAME_ENTITY_WRAPPER);\n  }\n  Object et=null;\n  if (map.containsKey(NAME_ENTITY)) {\n    et=map.get(NAME_ENTITY);\n  }\n  if (ew != null) {\n    Object entity=ew.getEntity();\n    if (entity != null) {\n      Class<?> entityClass=ClassUtils.getUserClass(entity.getClass());\n      EntityField ef=getVersionField(entityClass);\n      Field versionField=ef == null ? null : ef.getField();\n      if (versionField != null) {\n        Object originalVersionVal=versionField.get(entity);\n        if (originalVersionVal != null) {\n          versionField.set(et,getUpdatedVersionVal(originalVersionVal));\n        }\n      }\n    }\n  }\n else   if (et != null) {\n    String methodId=ms.getId();\n    String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n    if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n      return invocation.proceed();\n    }\n    Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n    EntityField entityField=this.getVersionField(entityClass);\n    Field versionField=entityField == null ? null : entityField.getField();\n    Object originalVersionVal;\n    if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n      TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n      Map<String,Object> entityMap=new HashMap<>();\n      List<EntityField> fields=getEntityFields(entityClass);\n      for (      EntityField ef : fields) {\n        Field fd=ef.getField();\n        if (fd.isAccessible()) {\n          entityMap.put(fd.getName(),fd.get(et));\n          if (ef.isVersion()) {\n            versionField=fd;\n          }\n        }\n      }\n      String versionPropertyName=versionField.getName();\n      List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n      String versionColumnName=entityField.getColumnName();\n      if (versionColumnName == null) {\n        for (        TableFieldInfo tf : fieldList) {\n          if (versionPropertyName.equals(tf.getProperty())) {\n            versionColumnName=tf.getColumn();\n          }\n        }\n      }\n      if (versionColumnName != null) {\n        entityField.setColumnName(versionColumnName);\n        entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n        entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n        entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n        entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n        map.put(NAME_ENTITY,entityMap);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 395,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4026,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (param instanceof HashMap) {\n  HashMap map=(HashMap)param;\n  Wrapper ew=null;\n  if (map.containsKey(NAME_ENTITY_WRAPPER)) {\n    ew=(Wrapper)map.get(NAME_ENTITY_WRAPPER);\n  }\n  Object et=null;\n  if (map.containsKey(NAME_ENTITY)) {\n    et=map.get(NAME_ENTITY);\n  }\n  if (ew != null) {\n    Object entity=ew.getEntity();\n    if (entity != null) {\n      Class<?> entityClass=ClassUtils.getUserClass(entity.getClass());\n      EntityField ef=getVersionField(entityClass);\n      Field versionField=ef == null ? null : ef.getField();\n      if (versionField != null) {\n        Object originalVersionVal=versionField.get(entity);\n        if (originalVersionVal != null) {\n          versionField.set(et,getUpdatedVersionVal(originalVersionVal));\n        }\n      }\n    }\n  }\n else   if (et != null) {\n    String methodId=ms.getId();\n    String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n    if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n      return invocation.proceed();\n    }\n    Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n    EntityField entityField=this.getVersionField(entityClass);\n    Field versionField=entityField == null ? null : entityField.getField();\n    Object originalVersionVal;\n    if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n      TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n      Map<String,Object> entityMap=new HashMap<>();\n      List<EntityField> fields=getEntityFields(entityClass);\n      for (      EntityField ef : fields) {\n        Field fd=ef.getField();\n        if (fd.isAccessible()) {\n          entityMap.put(fd.getName(),fd.get(et));\n          if (ef.isVersion()) {\n            versionField=fd;\n          }\n        }\n      }\n      String versionPropertyName=versionField.getName();\n      List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n      String versionColumnName=entityField.getColumnName();\n      if (versionColumnName == null) {\n        for (        TableFieldInfo tf : fieldList) {\n          if (versionPropertyName.equals(tf.getProperty())) {\n            versionColumnName=tf.getColumn();\n          }\n        }\n      }\n      if (versionColumnName != null) {\n        entityField.setColumnName(versionColumnName);\n        entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n        entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n        entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n        entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n        map.put(NAME_ENTITY,entityMap);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 400,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4327,
        "startLineNumber" : 67,
        "startColumnNumber" : 68,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Object[] args=invocation.getArgs();\n  MappedStatement ms=(MappedStatement)args[0];\n  if (SqlCommandType.UPDATE != ms.getSqlCommandType()) {\n    return invocation.proceed();\n  }\n  Object param=args[1];\n  if (param instanceof HashMap) {\n    HashMap map=(HashMap)param;\n    Wrapper ew=null;\n    if (map.containsKey(NAME_ENTITY_WRAPPER)) {\n      ew=(Wrapper)map.get(NAME_ENTITY_WRAPPER);\n    }\n    Object et=null;\n    if (map.containsKey(NAME_ENTITY)) {\n      et=map.get(NAME_ENTITY);\n    }\n    if (ew != null) {\n      Object entity=ew.getEntity();\n      if (entity != null) {\n        Class<?> entityClass=ClassUtils.getUserClass(entity.getClass());\n        EntityField ef=getVersionField(entityClass);\n        Field versionField=ef == null ? null : ef.getField();\n        if (versionField != null) {\n          Object originalVersionVal=versionField.get(entity);\n          if (originalVersionVal != null) {\n            versionField.set(et,getUpdatedVersionVal(originalVersionVal));\n          }\n        }\n      }\n    }\n else     if (et != null) {\n      String methodId=ms.getId();\n      String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n      if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n        return invocation.proceed();\n      }\n      Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n      EntityField entityField=this.getVersionField(entityClass);\n      Field versionField=entityField == null ? null : entityField.getField();\n      Object originalVersionVal;\n      if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n        TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n        Map<String,Object> entityMap=new HashMap<>();\n        List<EntityField> fields=getEntityFields(entityClass);\n        for (        EntityField ef : fields) {\n          Field fd=ef.getField();\n          if (fd.isAccessible()) {\n            entityMap.put(fd.getName(),fd.get(et));\n            if (ef.isVersion()) {\n              versionField=fd;\n            }\n          }\n        }\n        String versionPropertyName=versionField.getName();\n        List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n        String versionColumnName=entityField.getColumnName();\n        if (versionColumnName == null) {\n          for (          TableFieldInfo tf : fieldList) {\n            if (versionPropertyName.equals(tf.getProperty())) {\n              versionColumnName=tf.getColumn();\n            }\n          }\n        }\n        if (versionColumnName != null) {\n          entityField.setColumnName(versionColumnName);\n          entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n          entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n          entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n          entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n          map.put(NAME_ENTITY,entityMap);\n        }\n      }\n    }\n  }\n  return invocation.proceed();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 447,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4440,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override @SuppressWarnings(\"unchecked\") public Object intercept(Invocation invocation) throws Throwable {\n  Object[] args=invocation.getArgs();\n  MappedStatement ms=(MappedStatement)args[0];\n  if (SqlCommandType.UPDATE != ms.getSqlCommandType()) {\n    return invocation.proceed();\n  }\n  Object param=args[1];\n  if (param instanceof HashMap) {\n    HashMap map=(HashMap)param;\n    Wrapper ew=null;\n    if (map.containsKey(NAME_ENTITY_WRAPPER)) {\n      ew=(Wrapper)map.get(NAME_ENTITY_WRAPPER);\n    }\n    Object et=null;\n    if (map.containsKey(NAME_ENTITY)) {\n      et=map.get(NAME_ENTITY);\n    }\n    if (ew != null) {\n      Object entity=ew.getEntity();\n      if (entity != null) {\n        Class<?> entityClass=ClassUtils.getUserClass(entity.getClass());\n        EntityField ef=getVersionField(entityClass);\n        Field versionField=ef == null ? null : ef.getField();\n        if (versionField != null) {\n          Object originalVersionVal=versionField.get(entity);\n          if (originalVersionVal != null) {\n            versionField.set(et,getUpdatedVersionVal(originalVersionVal));\n          }\n        }\n      }\n    }\n else     if (et != null) {\n      String methodId=ms.getId();\n      String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n      if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n        return invocation.proceed();\n      }\n      Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n      EntityField entityField=this.getVersionField(entityClass);\n      Field versionField=entityField == null ? null : entityField.getField();\n      Object originalVersionVal;\n      if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n        TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n        Map<String,Object> entityMap=new HashMap<>();\n        List<EntityField> fields=getEntityFields(entityClass);\n        for (        EntityField ef : fields) {\n          Field fd=ef.getField();\n          if (fd.isAccessible()) {\n            entityMap.put(fd.getName(),fd.get(et));\n            if (ef.isVersion()) {\n              versionField=fd;\n            }\n          }\n        }\n        String versionPropertyName=versionField.getName();\n        List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n        String versionColumnName=entityField.getColumnName();\n        if (versionColumnName == null) {\n          for (          TableFieldInfo tf : fieldList) {\n            if (versionPropertyName.equals(tf.getProperty())) {\n              versionColumnName=tf.getColumn();\n            }\n          }\n        }\n        if (versionColumnName != null) {\n          entityField.setColumnName(versionColumnName);\n          entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n          entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n          entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n          entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n          map.put(NAME_ENTITY,entityMap);\n        }\n      }\n    }\n  }\n  return invocation.proceed();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 463,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 139,
        "startColumnNumber" : 24,
        "endLineNumber" : 139,
        "endColumnNumber" : 87
      },
      "nodeContext" : "entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  }, {
    "nodeContext" : "entityMap",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 140,
      "startColumnNumber" : 24,
      "endLineNumber" : 140,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 140,
        "startColumnNumber" : 24,
        "endLineNumber" : 140,
        "endColumnNumber" : 83
      },
      "nodeContext" : "entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 140,
        "startColumnNumber" : 24,
        "endLineNumber" : 140,
        "endColumnNumber" : 84
      },
      "nodeContext" : "entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 495,
        "startLineNumber" : 136,
        "startColumnNumber" : 51,
        "endLineNumber" : 143,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  entityField.setColumnName(versionColumnName);\n  entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n  entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n  entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n  entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n  map.put(NAME_ENTITY,entityMap);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 526,
        "startLineNumber" : 136,
        "startColumnNumber" : 20,
        "endLineNumber" : 143,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (versionColumnName != null) {\n  entityField.setColumnName(versionColumnName);\n  entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n  entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n  entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n  entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n  map.put(NAME_ENTITY,entityMap);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1765,
        "startLineNumber" : 113,
        "startColumnNumber" : 97,
        "endLineNumber" : 144,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n  Map<String,Object> entityMap=new HashMap<>();\n  List<EntityField> fields=getEntityFields(entityClass);\n  for (  EntityField ef : fields) {\n    Field fd=ef.getField();\n    if (fd.isAccessible()) {\n      entityMap.put(fd.getName(),fd.get(et));\n      if (ef.isVersion()) {\n        versionField=fd;\n      }\n    }\n  }\n  String versionPropertyName=versionField.getName();\n  List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n  String versionColumnName=entityField.getColumnName();\n  if (versionColumnName == null) {\n    for (    TableFieldInfo tf : fieldList) {\n      if (versionPropertyName.equals(tf.getProperty())) {\n        versionColumnName=tf.getColumn();\n      }\n    }\n  }\n  if (versionColumnName != null) {\n    entityField.setColumnName(versionColumnName);\n    entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n    entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n    entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n    entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n    map.put(NAME_ENTITY,entityMap);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 172,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1846,
        "startLineNumber" : 113,
        "startColumnNumber" : 16,
        "endLineNumber" : 144,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n  TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n  Map<String,Object> entityMap=new HashMap<>();\n  List<EntityField> fields=getEntityFields(entityClass);\n  for (  EntityField ef : fields) {\n    Field fd=ef.getField();\n    if (fd.isAccessible()) {\n      entityMap.put(fd.getName(),fd.get(et));\n      if (ef.isVersion()) {\n        versionField=fd;\n      }\n    }\n  }\n  String versionPropertyName=versionField.getName();\n  List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n  String versionColumnName=entityField.getColumnName();\n  if (versionColumnName == null) {\n    for (    TableFieldInfo tf : fieldList) {\n      if (versionPropertyName.equals(tf.getProperty())) {\n        versionColumnName=tf.getColumn();\n      }\n    }\n  }\n  if (versionColumnName != null) {\n    entityField.setColumnName(versionColumnName);\n    entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n    entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n    entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n    entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n    map.put(NAME_ENTITY,entityMap);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 186,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2507,
        "startLineNumber" : 103,
        "startColumnNumber" : 35,
        "endLineNumber" : 145,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String methodId=ms.getId();\n  String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n  if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n    return invocation.proceed();\n  }\n  Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n  EntityField entityField=this.getVersionField(entityClass);\n  Field versionField=entityField == null ? null : entityField.getField();\n  Object originalVersionVal;\n  if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n    TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n    Map<String,Object> entityMap=new HashMap<>();\n    List<EntityField> fields=getEntityFields(entityClass);\n    for (    EntityField ef : fields) {\n      Field fd=ef.getField();\n      if (fd.isAccessible()) {\n        entityMap.put(fd.getName(),fd.get(et));\n        if (ef.isVersion()) {\n          versionField=fd;\n        }\n      }\n    }\n    String versionPropertyName=versionField.getName();\n    List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n    String versionColumnName=entityField.getColumnName();\n    if (versionColumnName == null) {\n      for (      TableFieldInfo tf : fieldList) {\n        if (versionPropertyName.equals(tf.getProperty())) {\n          versionColumnName=tf.getColumn();\n        }\n      }\n    }\n    if (versionColumnName != null) {\n      entityField.setColumnName(versionColumnName);\n      entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n      entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n      entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n      entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n      map.put(NAME_ENTITY,entityMap);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 261,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2523,
        "startLineNumber" : 103,
        "startColumnNumber" : 19,
        "endLineNumber" : 145,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (et != null) {\n  String methodId=ms.getId();\n  String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n  if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n    return invocation.proceed();\n  }\n  Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n  EntityField entityField=this.getVersionField(entityClass);\n  Field versionField=entityField == null ? null : entityField.getField();\n  Object originalVersionVal;\n  if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n    TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n    Map<String,Object> entityMap=new HashMap<>();\n    List<EntityField> fields=getEntityFields(entityClass);\n    for (    EntityField ef : fields) {\n      Field fd=ef.getField();\n      if (fd.isAccessible()) {\n        entityMap.put(fd.getName(),fd.get(et));\n        if (ef.isVersion()) {\n          versionField=fd;\n        }\n      }\n    }\n    String versionPropertyName=versionField.getName();\n    List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n    String versionColumnName=entityField.getColumnName();\n    if (versionColumnName == null) {\n      for (      TableFieldInfo tf : fieldList) {\n        if (versionPropertyName.equals(tf.getProperty())) {\n          versionColumnName=tf.getColumn();\n        }\n      }\n    }\n    if (versionColumnName != null) {\n      entityField.setColumnName(versionColumnName);\n      entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n      entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n      entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n      entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n      map.put(NAME_ENTITY,entityMap);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 265,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3218,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 145,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (ew != null) {\n  Object entity=ew.getEntity();\n  if (entity != null) {\n    Class<?> entityClass=ClassUtils.getUserClass(entity.getClass());\n    EntityField ef=getVersionField(entityClass);\n    Field versionField=ef == null ? null : ef.getField();\n    if (versionField != null) {\n      Object originalVersionVal=versionField.get(entity);\n      if (originalVersionVal != null) {\n        versionField.set(et,getUpdatedVersionVal(originalVersionVal));\n      }\n    }\n  }\n}\n else if (et != null) {\n  String methodId=ms.getId();\n  String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n  if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n    return invocation.proceed();\n  }\n  Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n  EntityField entityField=this.getVersionField(entityClass);\n  Field versionField=entityField == null ? null : entityField.getField();\n  Object originalVersionVal;\n  if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n    TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n    Map<String,Object> entityMap=new HashMap<>();\n    List<EntityField> fields=getEntityFields(entityClass);\n    for (    EntityField ef : fields) {\n      Field fd=ef.getField();\n      if (fd.isAccessible()) {\n        entityMap.put(fd.getName(),fd.get(et));\n        if (ef.isVersion()) {\n          versionField=fd;\n        }\n      }\n    }\n    String versionPropertyName=versionField.getName();\n    List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n    String versionColumnName=entityField.getColumnName();\n    if (versionColumnName == null) {\n      for (      TableFieldInfo tf : fieldList) {\n        if (versionPropertyName.equals(tf.getProperty())) {\n          versionColumnName=tf.getColumn();\n        }\n      }\n    }\n    if (versionColumnName != null) {\n      entityField.setColumnName(versionColumnName);\n      entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n      entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n      entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n      entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n      map.put(NAME_ENTITY,entityMap);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 344,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3996,
        "startLineNumber" : 74,
        "startColumnNumber" : 38,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HashMap map=(HashMap)param;\n  Wrapper ew=null;\n  if (map.containsKey(NAME_ENTITY_WRAPPER)) {\n    ew=(Wrapper)map.get(NAME_ENTITY_WRAPPER);\n  }\n  Object et=null;\n  if (map.containsKey(NAME_ENTITY)) {\n    et=map.get(NAME_ENTITY);\n  }\n  if (ew != null) {\n    Object entity=ew.getEntity();\n    if (entity != null) {\n      Class<?> entityClass=ClassUtils.getUserClass(entity.getClass());\n      EntityField ef=getVersionField(entityClass);\n      Field versionField=ef == null ? null : ef.getField();\n      if (versionField != null) {\n        Object originalVersionVal=versionField.get(entity);\n        if (originalVersionVal != null) {\n          versionField.set(et,getUpdatedVersionVal(originalVersionVal));\n        }\n      }\n    }\n  }\n else   if (et != null) {\n    String methodId=ms.getId();\n    String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n    if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n      return invocation.proceed();\n    }\n    Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n    EntityField entityField=this.getVersionField(entityClass);\n    Field versionField=entityField == null ? null : entityField.getField();\n    Object originalVersionVal;\n    if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n      TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n      Map<String,Object> entityMap=new HashMap<>();\n      List<EntityField> fields=getEntityFields(entityClass);\n      for (      EntityField ef : fields) {\n        Field fd=ef.getField();\n        if (fd.isAccessible()) {\n          entityMap.put(fd.getName(),fd.get(et));\n          if (ef.isVersion()) {\n            versionField=fd;\n          }\n        }\n      }\n      String versionPropertyName=versionField.getName();\n      List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n      String versionColumnName=entityField.getColumnName();\n      if (versionColumnName == null) {\n        for (        TableFieldInfo tf : fieldList) {\n          if (versionPropertyName.equals(tf.getProperty())) {\n            versionColumnName=tf.getColumn();\n          }\n        }\n      }\n      if (versionColumnName != null) {\n        entityField.setColumnName(versionColumnName);\n        entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n        entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n        entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n        entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n        map.put(NAME_ENTITY,entityMap);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 395,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4026,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (param instanceof HashMap) {\n  HashMap map=(HashMap)param;\n  Wrapper ew=null;\n  if (map.containsKey(NAME_ENTITY_WRAPPER)) {\n    ew=(Wrapper)map.get(NAME_ENTITY_WRAPPER);\n  }\n  Object et=null;\n  if (map.containsKey(NAME_ENTITY)) {\n    et=map.get(NAME_ENTITY);\n  }\n  if (ew != null) {\n    Object entity=ew.getEntity();\n    if (entity != null) {\n      Class<?> entityClass=ClassUtils.getUserClass(entity.getClass());\n      EntityField ef=getVersionField(entityClass);\n      Field versionField=ef == null ? null : ef.getField();\n      if (versionField != null) {\n        Object originalVersionVal=versionField.get(entity);\n        if (originalVersionVal != null) {\n          versionField.set(et,getUpdatedVersionVal(originalVersionVal));\n        }\n      }\n    }\n  }\n else   if (et != null) {\n    String methodId=ms.getId();\n    String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n    if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n      return invocation.proceed();\n    }\n    Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n    EntityField entityField=this.getVersionField(entityClass);\n    Field versionField=entityField == null ? null : entityField.getField();\n    Object originalVersionVal;\n    if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n      TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n      Map<String,Object> entityMap=new HashMap<>();\n      List<EntityField> fields=getEntityFields(entityClass);\n      for (      EntityField ef : fields) {\n        Field fd=ef.getField();\n        if (fd.isAccessible()) {\n          entityMap.put(fd.getName(),fd.get(et));\n          if (ef.isVersion()) {\n            versionField=fd;\n          }\n        }\n      }\n      String versionPropertyName=versionField.getName();\n      List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n      String versionColumnName=entityField.getColumnName();\n      if (versionColumnName == null) {\n        for (        TableFieldInfo tf : fieldList) {\n          if (versionPropertyName.equals(tf.getProperty())) {\n            versionColumnName=tf.getColumn();\n          }\n        }\n      }\n      if (versionColumnName != null) {\n        entityField.setColumnName(versionColumnName);\n        entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n        entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n        entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n        entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n        map.put(NAME_ENTITY,entityMap);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 400,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4327,
        "startLineNumber" : 67,
        "startColumnNumber" : 68,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Object[] args=invocation.getArgs();\n  MappedStatement ms=(MappedStatement)args[0];\n  if (SqlCommandType.UPDATE != ms.getSqlCommandType()) {\n    return invocation.proceed();\n  }\n  Object param=args[1];\n  if (param instanceof HashMap) {\n    HashMap map=(HashMap)param;\n    Wrapper ew=null;\n    if (map.containsKey(NAME_ENTITY_WRAPPER)) {\n      ew=(Wrapper)map.get(NAME_ENTITY_WRAPPER);\n    }\n    Object et=null;\n    if (map.containsKey(NAME_ENTITY)) {\n      et=map.get(NAME_ENTITY);\n    }\n    if (ew != null) {\n      Object entity=ew.getEntity();\n      if (entity != null) {\n        Class<?> entityClass=ClassUtils.getUserClass(entity.getClass());\n        EntityField ef=getVersionField(entityClass);\n        Field versionField=ef == null ? null : ef.getField();\n        if (versionField != null) {\n          Object originalVersionVal=versionField.get(entity);\n          if (originalVersionVal != null) {\n            versionField.set(et,getUpdatedVersionVal(originalVersionVal));\n          }\n        }\n      }\n    }\n else     if (et != null) {\n      String methodId=ms.getId();\n      String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n      if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n        return invocation.proceed();\n      }\n      Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n      EntityField entityField=this.getVersionField(entityClass);\n      Field versionField=entityField == null ? null : entityField.getField();\n      Object originalVersionVal;\n      if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n        TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n        Map<String,Object> entityMap=new HashMap<>();\n        List<EntityField> fields=getEntityFields(entityClass);\n        for (        EntityField ef : fields) {\n          Field fd=ef.getField();\n          if (fd.isAccessible()) {\n            entityMap.put(fd.getName(),fd.get(et));\n            if (ef.isVersion()) {\n              versionField=fd;\n            }\n          }\n        }\n        String versionPropertyName=versionField.getName();\n        List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n        String versionColumnName=entityField.getColumnName();\n        if (versionColumnName == null) {\n          for (          TableFieldInfo tf : fieldList) {\n            if (versionPropertyName.equals(tf.getProperty())) {\n              versionColumnName=tf.getColumn();\n            }\n          }\n        }\n        if (versionColumnName != null) {\n          entityField.setColumnName(versionColumnName);\n          entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n          entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n          entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n          entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n          map.put(NAME_ENTITY,entityMap);\n        }\n      }\n    }\n  }\n  return invocation.proceed();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 447,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4440,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override @SuppressWarnings(\"unchecked\") public Object intercept(Invocation invocation) throws Throwable {\n  Object[] args=invocation.getArgs();\n  MappedStatement ms=(MappedStatement)args[0];\n  if (SqlCommandType.UPDATE != ms.getSqlCommandType()) {\n    return invocation.proceed();\n  }\n  Object param=args[1];\n  if (param instanceof HashMap) {\n    HashMap map=(HashMap)param;\n    Wrapper ew=null;\n    if (map.containsKey(NAME_ENTITY_WRAPPER)) {\n      ew=(Wrapper)map.get(NAME_ENTITY_WRAPPER);\n    }\n    Object et=null;\n    if (map.containsKey(NAME_ENTITY)) {\n      et=map.get(NAME_ENTITY);\n    }\n    if (ew != null) {\n      Object entity=ew.getEntity();\n      if (entity != null) {\n        Class<?> entityClass=ClassUtils.getUserClass(entity.getClass());\n        EntityField ef=getVersionField(entityClass);\n        Field versionField=ef == null ? null : ef.getField();\n        if (versionField != null) {\n          Object originalVersionVal=versionField.get(entity);\n          if (originalVersionVal != null) {\n            versionField.set(et,getUpdatedVersionVal(originalVersionVal));\n          }\n        }\n      }\n    }\n else     if (et != null) {\n      String methodId=ms.getId();\n      String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n      if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n        return invocation.proceed();\n      }\n      Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n      EntityField entityField=this.getVersionField(entityClass);\n      Field versionField=entityField == null ? null : entityField.getField();\n      Object originalVersionVal;\n      if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n        TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n        Map<String,Object> entityMap=new HashMap<>();\n        List<EntityField> fields=getEntityFields(entityClass);\n        for (        EntityField ef : fields) {\n          Field fd=ef.getField();\n          if (fd.isAccessible()) {\n            entityMap.put(fd.getName(),fd.get(et));\n            if (ef.isVersion()) {\n              versionField=fd;\n            }\n          }\n        }\n        String versionPropertyName=versionField.getName();\n        List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n        String versionColumnName=entityField.getColumnName();\n        if (versionColumnName == null) {\n          for (          TableFieldInfo tf : fieldList) {\n            if (versionPropertyName.equals(tf.getProperty())) {\n              versionColumnName=tf.getColumn();\n            }\n          }\n        }\n        if (versionColumnName != null) {\n          entityField.setColumnName(versionColumnName);\n          entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n          entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n          entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n          entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n          map.put(NAME_ENTITY,entityMap);\n        }\n      }\n    }\n  }\n  return invocation.proceed();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 463,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 140,
        "startColumnNumber" : 24,
        "endLineNumber" : 140,
        "endColumnNumber" : 84
      },
      "nodeContext" : "entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  }, {
    "nodeContext" : "entityMap",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 141,
      "startColumnNumber" : 24,
      "endLineNumber" : 141,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 141,
        "startColumnNumber" : 24,
        "endLineNumber" : 141,
        "endColumnNumber" : 65
      },
      "nodeContext" : "entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 141,
        "startColumnNumber" : 24,
        "endLineNumber" : 141,
        "endColumnNumber" : 66
      },
      "nodeContext" : "entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 495,
        "startLineNumber" : 136,
        "startColumnNumber" : 51,
        "endLineNumber" : 143,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  entityField.setColumnName(versionColumnName);\n  entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n  entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n  entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n  entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n  map.put(NAME_ENTITY,entityMap);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 526,
        "startLineNumber" : 136,
        "startColumnNumber" : 20,
        "endLineNumber" : 143,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (versionColumnName != null) {\n  entityField.setColumnName(versionColumnName);\n  entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n  entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n  entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n  entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n  map.put(NAME_ENTITY,entityMap);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1765,
        "startLineNumber" : 113,
        "startColumnNumber" : 97,
        "endLineNumber" : 144,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n  Map<String,Object> entityMap=new HashMap<>();\n  List<EntityField> fields=getEntityFields(entityClass);\n  for (  EntityField ef : fields) {\n    Field fd=ef.getField();\n    if (fd.isAccessible()) {\n      entityMap.put(fd.getName(),fd.get(et));\n      if (ef.isVersion()) {\n        versionField=fd;\n      }\n    }\n  }\n  String versionPropertyName=versionField.getName();\n  List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n  String versionColumnName=entityField.getColumnName();\n  if (versionColumnName == null) {\n    for (    TableFieldInfo tf : fieldList) {\n      if (versionPropertyName.equals(tf.getProperty())) {\n        versionColumnName=tf.getColumn();\n      }\n    }\n  }\n  if (versionColumnName != null) {\n    entityField.setColumnName(versionColumnName);\n    entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n    entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n    entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n    entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n    map.put(NAME_ENTITY,entityMap);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 172,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1846,
        "startLineNumber" : 113,
        "startColumnNumber" : 16,
        "endLineNumber" : 144,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n  TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n  Map<String,Object> entityMap=new HashMap<>();\n  List<EntityField> fields=getEntityFields(entityClass);\n  for (  EntityField ef : fields) {\n    Field fd=ef.getField();\n    if (fd.isAccessible()) {\n      entityMap.put(fd.getName(),fd.get(et));\n      if (ef.isVersion()) {\n        versionField=fd;\n      }\n    }\n  }\n  String versionPropertyName=versionField.getName();\n  List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n  String versionColumnName=entityField.getColumnName();\n  if (versionColumnName == null) {\n    for (    TableFieldInfo tf : fieldList) {\n      if (versionPropertyName.equals(tf.getProperty())) {\n        versionColumnName=tf.getColumn();\n      }\n    }\n  }\n  if (versionColumnName != null) {\n    entityField.setColumnName(versionColumnName);\n    entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n    entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n    entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n    entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n    map.put(NAME_ENTITY,entityMap);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 186,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2507,
        "startLineNumber" : 103,
        "startColumnNumber" : 35,
        "endLineNumber" : 145,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String methodId=ms.getId();\n  String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n  if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n    return invocation.proceed();\n  }\n  Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n  EntityField entityField=this.getVersionField(entityClass);\n  Field versionField=entityField == null ? null : entityField.getField();\n  Object originalVersionVal;\n  if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n    TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n    Map<String,Object> entityMap=new HashMap<>();\n    List<EntityField> fields=getEntityFields(entityClass);\n    for (    EntityField ef : fields) {\n      Field fd=ef.getField();\n      if (fd.isAccessible()) {\n        entityMap.put(fd.getName(),fd.get(et));\n        if (ef.isVersion()) {\n          versionField=fd;\n        }\n      }\n    }\n    String versionPropertyName=versionField.getName();\n    List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n    String versionColumnName=entityField.getColumnName();\n    if (versionColumnName == null) {\n      for (      TableFieldInfo tf : fieldList) {\n        if (versionPropertyName.equals(tf.getProperty())) {\n          versionColumnName=tf.getColumn();\n        }\n      }\n    }\n    if (versionColumnName != null) {\n      entityField.setColumnName(versionColumnName);\n      entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n      entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n      entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n      entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n      map.put(NAME_ENTITY,entityMap);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 261,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2523,
        "startLineNumber" : 103,
        "startColumnNumber" : 19,
        "endLineNumber" : 145,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (et != null) {\n  String methodId=ms.getId();\n  String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n  if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n    return invocation.proceed();\n  }\n  Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n  EntityField entityField=this.getVersionField(entityClass);\n  Field versionField=entityField == null ? null : entityField.getField();\n  Object originalVersionVal;\n  if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n    TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n    Map<String,Object> entityMap=new HashMap<>();\n    List<EntityField> fields=getEntityFields(entityClass);\n    for (    EntityField ef : fields) {\n      Field fd=ef.getField();\n      if (fd.isAccessible()) {\n        entityMap.put(fd.getName(),fd.get(et));\n        if (ef.isVersion()) {\n          versionField=fd;\n        }\n      }\n    }\n    String versionPropertyName=versionField.getName();\n    List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n    String versionColumnName=entityField.getColumnName();\n    if (versionColumnName == null) {\n      for (      TableFieldInfo tf : fieldList) {\n        if (versionPropertyName.equals(tf.getProperty())) {\n          versionColumnName=tf.getColumn();\n        }\n      }\n    }\n    if (versionColumnName != null) {\n      entityField.setColumnName(versionColumnName);\n      entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n      entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n      entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n      entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n      map.put(NAME_ENTITY,entityMap);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 265,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3218,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 145,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (ew != null) {\n  Object entity=ew.getEntity();\n  if (entity != null) {\n    Class<?> entityClass=ClassUtils.getUserClass(entity.getClass());\n    EntityField ef=getVersionField(entityClass);\n    Field versionField=ef == null ? null : ef.getField();\n    if (versionField != null) {\n      Object originalVersionVal=versionField.get(entity);\n      if (originalVersionVal != null) {\n        versionField.set(et,getUpdatedVersionVal(originalVersionVal));\n      }\n    }\n  }\n}\n else if (et != null) {\n  String methodId=ms.getId();\n  String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n  if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n    return invocation.proceed();\n  }\n  Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n  EntityField entityField=this.getVersionField(entityClass);\n  Field versionField=entityField == null ? null : entityField.getField();\n  Object originalVersionVal;\n  if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n    TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n    Map<String,Object> entityMap=new HashMap<>();\n    List<EntityField> fields=getEntityFields(entityClass);\n    for (    EntityField ef : fields) {\n      Field fd=ef.getField();\n      if (fd.isAccessible()) {\n        entityMap.put(fd.getName(),fd.get(et));\n        if (ef.isVersion()) {\n          versionField=fd;\n        }\n      }\n    }\n    String versionPropertyName=versionField.getName();\n    List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n    String versionColumnName=entityField.getColumnName();\n    if (versionColumnName == null) {\n      for (      TableFieldInfo tf : fieldList) {\n        if (versionPropertyName.equals(tf.getProperty())) {\n          versionColumnName=tf.getColumn();\n        }\n      }\n    }\n    if (versionColumnName != null) {\n      entityField.setColumnName(versionColumnName);\n      entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n      entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n      entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n      entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n      map.put(NAME_ENTITY,entityMap);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 344,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3996,
        "startLineNumber" : 74,
        "startColumnNumber" : 38,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HashMap map=(HashMap)param;\n  Wrapper ew=null;\n  if (map.containsKey(NAME_ENTITY_WRAPPER)) {\n    ew=(Wrapper)map.get(NAME_ENTITY_WRAPPER);\n  }\n  Object et=null;\n  if (map.containsKey(NAME_ENTITY)) {\n    et=map.get(NAME_ENTITY);\n  }\n  if (ew != null) {\n    Object entity=ew.getEntity();\n    if (entity != null) {\n      Class<?> entityClass=ClassUtils.getUserClass(entity.getClass());\n      EntityField ef=getVersionField(entityClass);\n      Field versionField=ef == null ? null : ef.getField();\n      if (versionField != null) {\n        Object originalVersionVal=versionField.get(entity);\n        if (originalVersionVal != null) {\n          versionField.set(et,getUpdatedVersionVal(originalVersionVal));\n        }\n      }\n    }\n  }\n else   if (et != null) {\n    String methodId=ms.getId();\n    String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n    if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n      return invocation.proceed();\n    }\n    Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n    EntityField entityField=this.getVersionField(entityClass);\n    Field versionField=entityField == null ? null : entityField.getField();\n    Object originalVersionVal;\n    if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n      TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n      Map<String,Object> entityMap=new HashMap<>();\n      List<EntityField> fields=getEntityFields(entityClass);\n      for (      EntityField ef : fields) {\n        Field fd=ef.getField();\n        if (fd.isAccessible()) {\n          entityMap.put(fd.getName(),fd.get(et));\n          if (ef.isVersion()) {\n            versionField=fd;\n          }\n        }\n      }\n      String versionPropertyName=versionField.getName();\n      List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n      String versionColumnName=entityField.getColumnName();\n      if (versionColumnName == null) {\n        for (        TableFieldInfo tf : fieldList) {\n          if (versionPropertyName.equals(tf.getProperty())) {\n            versionColumnName=tf.getColumn();\n          }\n        }\n      }\n      if (versionColumnName != null) {\n        entityField.setColumnName(versionColumnName);\n        entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n        entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n        entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n        entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n        map.put(NAME_ENTITY,entityMap);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 395,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4026,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (param instanceof HashMap) {\n  HashMap map=(HashMap)param;\n  Wrapper ew=null;\n  if (map.containsKey(NAME_ENTITY_WRAPPER)) {\n    ew=(Wrapper)map.get(NAME_ENTITY_WRAPPER);\n  }\n  Object et=null;\n  if (map.containsKey(NAME_ENTITY)) {\n    et=map.get(NAME_ENTITY);\n  }\n  if (ew != null) {\n    Object entity=ew.getEntity();\n    if (entity != null) {\n      Class<?> entityClass=ClassUtils.getUserClass(entity.getClass());\n      EntityField ef=getVersionField(entityClass);\n      Field versionField=ef == null ? null : ef.getField();\n      if (versionField != null) {\n        Object originalVersionVal=versionField.get(entity);\n        if (originalVersionVal != null) {\n          versionField.set(et,getUpdatedVersionVal(originalVersionVal));\n        }\n      }\n    }\n  }\n else   if (et != null) {\n    String methodId=ms.getId();\n    String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n    if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n      return invocation.proceed();\n    }\n    Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n    EntityField entityField=this.getVersionField(entityClass);\n    Field versionField=entityField == null ? null : entityField.getField();\n    Object originalVersionVal;\n    if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n      TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n      Map<String,Object> entityMap=new HashMap<>();\n      List<EntityField> fields=getEntityFields(entityClass);\n      for (      EntityField ef : fields) {\n        Field fd=ef.getField();\n        if (fd.isAccessible()) {\n          entityMap.put(fd.getName(),fd.get(et));\n          if (ef.isVersion()) {\n            versionField=fd;\n          }\n        }\n      }\n      String versionPropertyName=versionField.getName();\n      List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n      String versionColumnName=entityField.getColumnName();\n      if (versionColumnName == null) {\n        for (        TableFieldInfo tf : fieldList) {\n          if (versionPropertyName.equals(tf.getProperty())) {\n            versionColumnName=tf.getColumn();\n          }\n        }\n      }\n      if (versionColumnName != null) {\n        entityField.setColumnName(versionColumnName);\n        entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n        entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n        entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n        entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n        map.put(NAME_ENTITY,entityMap);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 400,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4327,
        "startLineNumber" : 67,
        "startColumnNumber" : 68,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Object[] args=invocation.getArgs();\n  MappedStatement ms=(MappedStatement)args[0];\n  if (SqlCommandType.UPDATE != ms.getSqlCommandType()) {\n    return invocation.proceed();\n  }\n  Object param=args[1];\n  if (param instanceof HashMap) {\n    HashMap map=(HashMap)param;\n    Wrapper ew=null;\n    if (map.containsKey(NAME_ENTITY_WRAPPER)) {\n      ew=(Wrapper)map.get(NAME_ENTITY_WRAPPER);\n    }\n    Object et=null;\n    if (map.containsKey(NAME_ENTITY)) {\n      et=map.get(NAME_ENTITY);\n    }\n    if (ew != null) {\n      Object entity=ew.getEntity();\n      if (entity != null) {\n        Class<?> entityClass=ClassUtils.getUserClass(entity.getClass());\n        EntityField ef=getVersionField(entityClass);\n        Field versionField=ef == null ? null : ef.getField();\n        if (versionField != null) {\n          Object originalVersionVal=versionField.get(entity);\n          if (originalVersionVal != null) {\n            versionField.set(et,getUpdatedVersionVal(originalVersionVal));\n          }\n        }\n      }\n    }\n else     if (et != null) {\n      String methodId=ms.getId();\n      String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n      if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n        return invocation.proceed();\n      }\n      Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n      EntityField entityField=this.getVersionField(entityClass);\n      Field versionField=entityField == null ? null : entityField.getField();\n      Object originalVersionVal;\n      if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n        TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n        Map<String,Object> entityMap=new HashMap<>();\n        List<EntityField> fields=getEntityFields(entityClass);\n        for (        EntityField ef : fields) {\n          Field fd=ef.getField();\n          if (fd.isAccessible()) {\n            entityMap.put(fd.getName(),fd.get(et));\n            if (ef.isVersion()) {\n              versionField=fd;\n            }\n          }\n        }\n        String versionPropertyName=versionField.getName();\n        List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n        String versionColumnName=entityField.getColumnName();\n        if (versionColumnName == null) {\n          for (          TableFieldInfo tf : fieldList) {\n            if (versionPropertyName.equals(tf.getProperty())) {\n              versionColumnName=tf.getColumn();\n            }\n          }\n        }\n        if (versionColumnName != null) {\n          entityField.setColumnName(versionColumnName);\n          entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n          entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n          entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n          entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n          map.put(NAME_ENTITY,entityMap);\n        }\n      }\n    }\n  }\n  return invocation.proceed();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 447,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4440,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override @SuppressWarnings(\"unchecked\") public Object intercept(Invocation invocation) throws Throwable {\n  Object[] args=invocation.getArgs();\n  MappedStatement ms=(MappedStatement)args[0];\n  if (SqlCommandType.UPDATE != ms.getSqlCommandType()) {\n    return invocation.proceed();\n  }\n  Object param=args[1];\n  if (param instanceof HashMap) {\n    HashMap map=(HashMap)param;\n    Wrapper ew=null;\n    if (map.containsKey(NAME_ENTITY_WRAPPER)) {\n      ew=(Wrapper)map.get(NAME_ENTITY_WRAPPER);\n    }\n    Object et=null;\n    if (map.containsKey(NAME_ENTITY)) {\n      et=map.get(NAME_ENTITY);\n    }\n    if (ew != null) {\n      Object entity=ew.getEntity();\n      if (entity != null) {\n        Class<?> entityClass=ClassUtils.getUserClass(entity.getClass());\n        EntityField ef=getVersionField(entityClass);\n        Field versionField=ef == null ? null : ef.getField();\n        if (versionField != null) {\n          Object originalVersionVal=versionField.get(entity);\n          if (originalVersionVal != null) {\n            versionField.set(et,getUpdatedVersionVal(originalVersionVal));\n          }\n        }\n      }\n    }\n else     if (et != null) {\n      String methodId=ms.getId();\n      String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n      if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n        return invocation.proceed();\n      }\n      Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n      EntityField entityField=this.getVersionField(entityClass);\n      Field versionField=entityField == null ? null : entityField.getField();\n      Object originalVersionVal;\n      if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n        TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n        Map<String,Object> entityMap=new HashMap<>();\n        List<EntityField> fields=getEntityFields(entityClass);\n        for (        EntityField ef : fields) {\n          Field fd=ef.getField();\n          if (fd.isAccessible()) {\n            entityMap.put(fd.getName(),fd.get(et));\n            if (ef.isVersion()) {\n              versionField=fd;\n            }\n          }\n        }\n        String versionPropertyName=versionField.getName();\n        List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n        String versionColumnName=entityField.getColumnName();\n        if (versionColumnName == null) {\n          for (          TableFieldInfo tf : fieldList) {\n            if (versionPropertyName.equals(tf.getProperty())) {\n              versionColumnName=tf.getColumn();\n            }\n          }\n        }\n        if (versionColumnName != null) {\n          entityField.setColumnName(versionColumnName);\n          entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n          entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n          entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n          entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n          map.put(NAME_ENTITY,entityMap);\n        }\n      }\n    }\n  }\n  return invocation.proceed();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 463,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 141,
        "startColumnNumber" : 24,
        "endLineNumber" : 141,
        "endColumnNumber" : 66
      },
      "nodeContext" : "entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  }, {
    "nodeContext" : "entityMap",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 142,
      "startColumnNumber" : 45,
      "endLineNumber" : 142,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 142,
        "startColumnNumber" : 24,
        "endLineNumber" : 142,
        "endColumnNumber" : 55
      },
      "nodeContext" : "map.put(NAME_ENTITY,entityMap)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 142,
        "startColumnNumber" : 24,
        "endLineNumber" : 142,
        "endColumnNumber" : 56
      },
      "nodeContext" : "map.put(NAME_ENTITY,entityMap);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 495,
        "startLineNumber" : 136,
        "startColumnNumber" : 51,
        "endLineNumber" : 143,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  entityField.setColumnName(versionColumnName);\n  entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n  entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n  entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n  entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n  map.put(NAME_ENTITY,entityMap);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 526,
        "startLineNumber" : 136,
        "startColumnNumber" : 20,
        "endLineNumber" : 143,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (versionColumnName != null) {\n  entityField.setColumnName(versionColumnName);\n  entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n  entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n  entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n  entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n  map.put(NAME_ENTITY,entityMap);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1765,
        "startLineNumber" : 113,
        "startColumnNumber" : 97,
        "endLineNumber" : 144,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n  Map<String,Object> entityMap=new HashMap<>();\n  List<EntityField> fields=getEntityFields(entityClass);\n  for (  EntityField ef : fields) {\n    Field fd=ef.getField();\n    if (fd.isAccessible()) {\n      entityMap.put(fd.getName(),fd.get(et));\n      if (ef.isVersion()) {\n        versionField=fd;\n      }\n    }\n  }\n  String versionPropertyName=versionField.getName();\n  List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n  String versionColumnName=entityField.getColumnName();\n  if (versionColumnName == null) {\n    for (    TableFieldInfo tf : fieldList) {\n      if (versionPropertyName.equals(tf.getProperty())) {\n        versionColumnName=tf.getColumn();\n      }\n    }\n  }\n  if (versionColumnName != null) {\n    entityField.setColumnName(versionColumnName);\n    entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n    entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n    entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n    entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n    map.put(NAME_ENTITY,entityMap);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 172,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1846,
        "startLineNumber" : 113,
        "startColumnNumber" : 16,
        "endLineNumber" : 144,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n  TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n  Map<String,Object> entityMap=new HashMap<>();\n  List<EntityField> fields=getEntityFields(entityClass);\n  for (  EntityField ef : fields) {\n    Field fd=ef.getField();\n    if (fd.isAccessible()) {\n      entityMap.put(fd.getName(),fd.get(et));\n      if (ef.isVersion()) {\n        versionField=fd;\n      }\n    }\n  }\n  String versionPropertyName=versionField.getName();\n  List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n  String versionColumnName=entityField.getColumnName();\n  if (versionColumnName == null) {\n    for (    TableFieldInfo tf : fieldList) {\n      if (versionPropertyName.equals(tf.getProperty())) {\n        versionColumnName=tf.getColumn();\n      }\n    }\n  }\n  if (versionColumnName != null) {\n    entityField.setColumnName(versionColumnName);\n    entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n    entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n    entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n    entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n    map.put(NAME_ENTITY,entityMap);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 186,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2507,
        "startLineNumber" : 103,
        "startColumnNumber" : 35,
        "endLineNumber" : 145,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String methodId=ms.getId();\n  String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n  if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n    return invocation.proceed();\n  }\n  Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n  EntityField entityField=this.getVersionField(entityClass);\n  Field versionField=entityField == null ? null : entityField.getField();\n  Object originalVersionVal;\n  if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n    TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n    Map<String,Object> entityMap=new HashMap<>();\n    List<EntityField> fields=getEntityFields(entityClass);\n    for (    EntityField ef : fields) {\n      Field fd=ef.getField();\n      if (fd.isAccessible()) {\n        entityMap.put(fd.getName(),fd.get(et));\n        if (ef.isVersion()) {\n          versionField=fd;\n        }\n      }\n    }\n    String versionPropertyName=versionField.getName();\n    List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n    String versionColumnName=entityField.getColumnName();\n    if (versionColumnName == null) {\n      for (      TableFieldInfo tf : fieldList) {\n        if (versionPropertyName.equals(tf.getProperty())) {\n          versionColumnName=tf.getColumn();\n        }\n      }\n    }\n    if (versionColumnName != null) {\n      entityField.setColumnName(versionColumnName);\n      entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n      entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n      entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n      entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n      map.put(NAME_ENTITY,entityMap);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 261,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2523,
        "startLineNumber" : 103,
        "startColumnNumber" : 19,
        "endLineNumber" : 145,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (et != null) {\n  String methodId=ms.getId();\n  String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n  if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n    return invocation.proceed();\n  }\n  Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n  EntityField entityField=this.getVersionField(entityClass);\n  Field versionField=entityField == null ? null : entityField.getField();\n  Object originalVersionVal;\n  if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n    TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n    Map<String,Object> entityMap=new HashMap<>();\n    List<EntityField> fields=getEntityFields(entityClass);\n    for (    EntityField ef : fields) {\n      Field fd=ef.getField();\n      if (fd.isAccessible()) {\n        entityMap.put(fd.getName(),fd.get(et));\n        if (ef.isVersion()) {\n          versionField=fd;\n        }\n      }\n    }\n    String versionPropertyName=versionField.getName();\n    List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n    String versionColumnName=entityField.getColumnName();\n    if (versionColumnName == null) {\n      for (      TableFieldInfo tf : fieldList) {\n        if (versionPropertyName.equals(tf.getProperty())) {\n          versionColumnName=tf.getColumn();\n        }\n      }\n    }\n    if (versionColumnName != null) {\n      entityField.setColumnName(versionColumnName);\n      entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n      entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n      entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n      entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n      map.put(NAME_ENTITY,entityMap);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 265,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3218,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 145,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (ew != null) {\n  Object entity=ew.getEntity();\n  if (entity != null) {\n    Class<?> entityClass=ClassUtils.getUserClass(entity.getClass());\n    EntityField ef=getVersionField(entityClass);\n    Field versionField=ef == null ? null : ef.getField();\n    if (versionField != null) {\n      Object originalVersionVal=versionField.get(entity);\n      if (originalVersionVal != null) {\n        versionField.set(et,getUpdatedVersionVal(originalVersionVal));\n      }\n    }\n  }\n}\n else if (et != null) {\n  String methodId=ms.getId();\n  String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n  if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n    return invocation.proceed();\n  }\n  Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n  EntityField entityField=this.getVersionField(entityClass);\n  Field versionField=entityField == null ? null : entityField.getField();\n  Object originalVersionVal;\n  if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n    TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n    Map<String,Object> entityMap=new HashMap<>();\n    List<EntityField> fields=getEntityFields(entityClass);\n    for (    EntityField ef : fields) {\n      Field fd=ef.getField();\n      if (fd.isAccessible()) {\n        entityMap.put(fd.getName(),fd.get(et));\n        if (ef.isVersion()) {\n          versionField=fd;\n        }\n      }\n    }\n    String versionPropertyName=versionField.getName();\n    List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n    String versionColumnName=entityField.getColumnName();\n    if (versionColumnName == null) {\n      for (      TableFieldInfo tf : fieldList) {\n        if (versionPropertyName.equals(tf.getProperty())) {\n          versionColumnName=tf.getColumn();\n        }\n      }\n    }\n    if (versionColumnName != null) {\n      entityField.setColumnName(versionColumnName);\n      entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n      entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n      entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n      entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n      map.put(NAME_ENTITY,entityMap);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 344,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3996,
        "startLineNumber" : 74,
        "startColumnNumber" : 38,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HashMap map=(HashMap)param;\n  Wrapper ew=null;\n  if (map.containsKey(NAME_ENTITY_WRAPPER)) {\n    ew=(Wrapper)map.get(NAME_ENTITY_WRAPPER);\n  }\n  Object et=null;\n  if (map.containsKey(NAME_ENTITY)) {\n    et=map.get(NAME_ENTITY);\n  }\n  if (ew != null) {\n    Object entity=ew.getEntity();\n    if (entity != null) {\n      Class<?> entityClass=ClassUtils.getUserClass(entity.getClass());\n      EntityField ef=getVersionField(entityClass);\n      Field versionField=ef == null ? null : ef.getField();\n      if (versionField != null) {\n        Object originalVersionVal=versionField.get(entity);\n        if (originalVersionVal != null) {\n          versionField.set(et,getUpdatedVersionVal(originalVersionVal));\n        }\n      }\n    }\n  }\n else   if (et != null) {\n    String methodId=ms.getId();\n    String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n    if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n      return invocation.proceed();\n    }\n    Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n    EntityField entityField=this.getVersionField(entityClass);\n    Field versionField=entityField == null ? null : entityField.getField();\n    Object originalVersionVal;\n    if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n      TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n      Map<String,Object> entityMap=new HashMap<>();\n      List<EntityField> fields=getEntityFields(entityClass);\n      for (      EntityField ef : fields) {\n        Field fd=ef.getField();\n        if (fd.isAccessible()) {\n          entityMap.put(fd.getName(),fd.get(et));\n          if (ef.isVersion()) {\n            versionField=fd;\n          }\n        }\n      }\n      String versionPropertyName=versionField.getName();\n      List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n      String versionColumnName=entityField.getColumnName();\n      if (versionColumnName == null) {\n        for (        TableFieldInfo tf : fieldList) {\n          if (versionPropertyName.equals(tf.getProperty())) {\n            versionColumnName=tf.getColumn();\n          }\n        }\n      }\n      if (versionColumnName != null) {\n        entityField.setColumnName(versionColumnName);\n        entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n        entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n        entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n        entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n        map.put(NAME_ENTITY,entityMap);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 395,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4026,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (param instanceof HashMap) {\n  HashMap map=(HashMap)param;\n  Wrapper ew=null;\n  if (map.containsKey(NAME_ENTITY_WRAPPER)) {\n    ew=(Wrapper)map.get(NAME_ENTITY_WRAPPER);\n  }\n  Object et=null;\n  if (map.containsKey(NAME_ENTITY)) {\n    et=map.get(NAME_ENTITY);\n  }\n  if (ew != null) {\n    Object entity=ew.getEntity();\n    if (entity != null) {\n      Class<?> entityClass=ClassUtils.getUserClass(entity.getClass());\n      EntityField ef=getVersionField(entityClass);\n      Field versionField=ef == null ? null : ef.getField();\n      if (versionField != null) {\n        Object originalVersionVal=versionField.get(entity);\n        if (originalVersionVal != null) {\n          versionField.set(et,getUpdatedVersionVal(originalVersionVal));\n        }\n      }\n    }\n  }\n else   if (et != null) {\n    String methodId=ms.getId();\n    String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n    if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n      return invocation.proceed();\n    }\n    Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n    EntityField entityField=this.getVersionField(entityClass);\n    Field versionField=entityField == null ? null : entityField.getField();\n    Object originalVersionVal;\n    if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n      TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n      Map<String,Object> entityMap=new HashMap<>();\n      List<EntityField> fields=getEntityFields(entityClass);\n      for (      EntityField ef : fields) {\n        Field fd=ef.getField();\n        if (fd.isAccessible()) {\n          entityMap.put(fd.getName(),fd.get(et));\n          if (ef.isVersion()) {\n            versionField=fd;\n          }\n        }\n      }\n      String versionPropertyName=versionField.getName();\n      List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n      String versionColumnName=entityField.getColumnName();\n      if (versionColumnName == null) {\n        for (        TableFieldInfo tf : fieldList) {\n          if (versionPropertyName.equals(tf.getProperty())) {\n            versionColumnName=tf.getColumn();\n          }\n        }\n      }\n      if (versionColumnName != null) {\n        entityField.setColumnName(versionColumnName);\n        entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n        entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n        entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n        entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n        map.put(NAME_ENTITY,entityMap);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 400,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4327,
        "startLineNumber" : 67,
        "startColumnNumber" : 68,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Object[] args=invocation.getArgs();\n  MappedStatement ms=(MappedStatement)args[0];\n  if (SqlCommandType.UPDATE != ms.getSqlCommandType()) {\n    return invocation.proceed();\n  }\n  Object param=args[1];\n  if (param instanceof HashMap) {\n    HashMap map=(HashMap)param;\n    Wrapper ew=null;\n    if (map.containsKey(NAME_ENTITY_WRAPPER)) {\n      ew=(Wrapper)map.get(NAME_ENTITY_WRAPPER);\n    }\n    Object et=null;\n    if (map.containsKey(NAME_ENTITY)) {\n      et=map.get(NAME_ENTITY);\n    }\n    if (ew != null) {\n      Object entity=ew.getEntity();\n      if (entity != null) {\n        Class<?> entityClass=ClassUtils.getUserClass(entity.getClass());\n        EntityField ef=getVersionField(entityClass);\n        Field versionField=ef == null ? null : ef.getField();\n        if (versionField != null) {\n          Object originalVersionVal=versionField.get(entity);\n          if (originalVersionVal != null) {\n            versionField.set(et,getUpdatedVersionVal(originalVersionVal));\n          }\n        }\n      }\n    }\n else     if (et != null) {\n      String methodId=ms.getId();\n      String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n      if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n        return invocation.proceed();\n      }\n      Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n      EntityField entityField=this.getVersionField(entityClass);\n      Field versionField=entityField == null ? null : entityField.getField();\n      Object originalVersionVal;\n      if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n        TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n        Map<String,Object> entityMap=new HashMap<>();\n        List<EntityField> fields=getEntityFields(entityClass);\n        for (        EntityField ef : fields) {\n          Field fd=ef.getField();\n          if (fd.isAccessible()) {\n            entityMap.put(fd.getName(),fd.get(et));\n            if (ef.isVersion()) {\n              versionField=fd;\n            }\n          }\n        }\n        String versionPropertyName=versionField.getName();\n        List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n        String versionColumnName=entityField.getColumnName();\n        if (versionColumnName == null) {\n          for (          TableFieldInfo tf : fieldList) {\n            if (versionPropertyName.equals(tf.getProperty())) {\n              versionColumnName=tf.getColumn();\n            }\n          }\n        }\n        if (versionColumnName != null) {\n          entityField.setColumnName(versionColumnName);\n          entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n          entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n          entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n          entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n          map.put(NAME_ENTITY,entityMap);\n        }\n      }\n    }\n  }\n  return invocation.proceed();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 447,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4440,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override @SuppressWarnings(\"unchecked\") public Object intercept(Invocation invocation) throws Throwable {\n  Object[] args=invocation.getArgs();\n  MappedStatement ms=(MappedStatement)args[0];\n  if (SqlCommandType.UPDATE != ms.getSqlCommandType()) {\n    return invocation.proceed();\n  }\n  Object param=args[1];\n  if (param instanceof HashMap) {\n    HashMap map=(HashMap)param;\n    Wrapper ew=null;\n    if (map.containsKey(NAME_ENTITY_WRAPPER)) {\n      ew=(Wrapper)map.get(NAME_ENTITY_WRAPPER);\n    }\n    Object et=null;\n    if (map.containsKey(NAME_ENTITY)) {\n      et=map.get(NAME_ENTITY);\n    }\n    if (ew != null) {\n      Object entity=ew.getEntity();\n      if (entity != null) {\n        Class<?> entityClass=ClassUtils.getUserClass(entity.getClass());\n        EntityField ef=getVersionField(entityClass);\n        Field versionField=ef == null ? null : ef.getField();\n        if (versionField != null) {\n          Object originalVersionVal=versionField.get(entity);\n          if (originalVersionVal != null) {\n            versionField.set(et,getUpdatedVersionVal(originalVersionVal));\n          }\n        }\n      }\n    }\n else     if (et != null) {\n      String methodId=ms.getId();\n      String updateMethodName=methodId.substring(ms.getId().lastIndexOf(\".\") + 1);\n      if (PARAM_UPDATE_METHOD_NAME.equals(updateMethodName)) {\n        return invocation.proceed();\n      }\n      Class<?> entityClass=ClassUtils.getUserClass(et.getClass());\n      EntityField entityField=this.getVersionField(entityClass);\n      Field versionField=entityField == null ? null : entityField.getField();\n      Object originalVersionVal;\n      if (versionField != null && (originalVersionVal=versionField.get(et)) != null) {\n        TableInfo tableInfo=TableInfoHelper.getTableInfo(entityClass);\n        Map<String,Object> entityMap=new HashMap<>();\n        List<EntityField> fields=getEntityFields(entityClass);\n        for (        EntityField ef : fields) {\n          Field fd=ef.getField();\n          if (fd.isAccessible()) {\n            entityMap.put(fd.getName(),fd.get(et));\n            if (ef.isVersion()) {\n              versionField=fd;\n            }\n          }\n        }\n        String versionPropertyName=versionField.getName();\n        List<TableFieldInfo> fieldList=tableInfo.getFieldList();\n        String versionColumnName=entityField.getColumnName();\n        if (versionColumnName == null) {\n          for (          TableFieldInfo tf : fieldList) {\n            if (versionPropertyName.equals(tf.getProperty())) {\n              versionColumnName=tf.getColumn();\n            }\n          }\n        }\n        if (versionColumnName != null) {\n          entityField.setColumnName(versionColumnName);\n          entityMap.put(versionField.getName(),getUpdatedVersionVal(originalVersionVal));\n          entityMap.put(MP_OPTLOCK_VERSION_ORIGINAL,originalVersionVal);\n          entityMap.put(MP_OPTLOCK_VERSION_COLUMN,versionColumnName);\n          entityMap.put(MP_OPTLOCK_ET_ORIGINAL,et);\n          map.put(NAME_ENTITY,entityMap);\n        }\n      }\n    }\n  }\n  return invocation.proceed();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 463,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 142,
        "startColumnNumber" : 24,
        "endLineNumber" : 142,
        "endColumnNumber" : 56
      },
      "nodeContext" : "map.put(NAME_ENTITY,entityMap);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 120,
    "startColumnNumber" : 28,
    "endLineNumber" : 120,
    "endColumnNumber" : 37
  }, {
    "charLength" : 9,
    "startLineNumber" : 138,
    "startColumnNumber" : 24,
    "endLineNumber" : 138,
    "endColumnNumber" : 33
  }, {
    "charLength" : 9,
    "startLineNumber" : 139,
    "startColumnNumber" : 24,
    "endLineNumber" : 139,
    "endColumnNumber" : 33
  }, {
    "charLength" : 9,
    "startLineNumber" : 140,
    "startColumnNumber" : 24,
    "endLineNumber" : 140,
    "endColumnNumber" : 33
  }, {
    "charLength" : 9,
    "startLineNumber" : 141,
    "startColumnNumber" : 24,
    "endLineNumber" : 141,
    "endColumnNumber" : 33
  }, {
    "charLength" : 9,
    "startLineNumber" : 142,
    "startColumnNumber" : 45,
    "endLineNumber" : 142,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 2
  } ]
}