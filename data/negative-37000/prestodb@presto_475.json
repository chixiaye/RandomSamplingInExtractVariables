{
  "id" : 475,
  "expression" : "TRUE.equals(function.apply(arrayBlock.isNull(position) ? null : (Block)elementType.getObject(arrayBlock,position)))",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/main/java/com/facebook/presto/operator/scalar/ArrayFilterFunction.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TRUE.equals(function.apply(arrayBlock.isNull(position) ? null : (Block)elementType.getObject(arrayBlock,position)))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 211,
      "startLineNumber" : 293,
      "startColumnNumber" : 20,
      "endLineNumber" : 295,
      "endColumnNumber" : 100
    },
    "astNodeNumber" : 20,
    "astHeight" : 6,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 259,
        "startLineNumber" : 292,
        "startColumnNumber" : 19,
        "endLineNumber" : 295,
        "endColumnNumber" : 100
      },
      "nodeContext" : "position < positionCount && TRUE.equals(function.apply(arrayBlock.isNull(position) ? null : (Block)elementType.getObject(arrayBlock,position)))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 311,
        "startLineNumber" : 292,
        "startColumnNumber" : 12,
        "endLineNumber" : 297,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (position < positionCount && TRUE.equals(function.apply(arrayBlock.isNull(position) ? null : (Block)elementType.getObject(arrayBlock,position)))) {\n  position++;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1128,
        "startLineNumber" : 291,
        "startColumnNumber" : 38,
        "endLineNumber" : 315,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  while (position < positionCount && TRUE.equals(function.apply(arrayBlock.isNull(position) ? null : (Block)elementType.getObject(arrayBlock,position)))) {\n    position++;\n  }\n  if (position == positionCount) {\n    return arrayBlock;\n  }\n  resultBuilder=elementType.createBlockBuilder(null,positionCount);\n  for (int i=0; i < position; i++) {\n    elementType.appendTo(arrayBlock,i,resultBuilder);\n  }\n  for (position++; position < positionCount; position++) {\n    if (TRUE.equals(function.apply(arrayBlock.isNull(position) ? null : (Block)elementType.getObject(arrayBlock,position)))) {\n      elementType.appendTo(arrayBlock,position,resultBuilder);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2018,
        "startLineNumber" : 291,
        "startColumnNumber" : 8,
        "endLineNumber" : 335,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (arrayBlock.mayHaveNull()) {\n  while (position < positionCount && TRUE.equals(function.apply(arrayBlock.isNull(position) ? null : (Block)elementType.getObject(arrayBlock,position)))) {\n    position++;\n  }\n  if (position == positionCount) {\n    return arrayBlock;\n  }\n  resultBuilder=elementType.createBlockBuilder(null,positionCount);\n  for (int i=0; i < position; i++) {\n    elementType.appendTo(arrayBlock,i,resultBuilder);\n  }\n  for (position++; position < positionCount; position++) {\n    if (TRUE.equals(function.apply(arrayBlock.isNull(position) ? null : (Block)elementType.getObject(arrayBlock,position)))) {\n      elementType.appendTo(arrayBlock,position,resultBuilder);\n    }\n  }\n}\n else {\n  while (position < positionCount && TRUE.equals(function.apply((Block)elementType.getObject(arrayBlock,position)))) {\n    position++;\n  }\n  if (position == positionCount) {\n    return arrayBlock;\n  }\n  resultBuilder=elementType.createBlockBuilder(null,positionCount);\n  for (int i=0; i < position; i++) {\n    elementType.appendTo(arrayBlock,i,resultBuilder);\n  }\n  for (position++; position < positionCount; position++) {\n    if (TRUE.equals(function.apply((Block)elementType.getObject(arrayBlock,position)))) {\n      elementType.appendTo(arrayBlock,position,resultBuilder);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 196,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2195,
        "startLineNumber" : 286,
        "startColumnNumber" : 4,
        "endLineNumber" : 338,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int positionCount=arrayBlock.getPositionCount();\n  int position=0;\n  BlockBuilder resultBuilder;\n  if (arrayBlock.mayHaveNull()) {\n    while (position < positionCount && TRUE.equals(function.apply(arrayBlock.isNull(position) ? null : (Block)elementType.getObject(arrayBlock,position)))) {\n      position++;\n    }\n    if (position == positionCount) {\n      return arrayBlock;\n    }\n    resultBuilder=elementType.createBlockBuilder(null,positionCount);\n    for (int i=0; i < position; i++) {\n      elementType.appendTo(arrayBlock,i,resultBuilder);\n    }\n    for (position++; position < positionCount; position++) {\n      if (TRUE.equals(function.apply(arrayBlock.isNull(position) ? null : (Block)elementType.getObject(arrayBlock,position)))) {\n        elementType.appendTo(arrayBlock,position,resultBuilder);\n      }\n    }\n  }\n else {\n    while (position < positionCount && TRUE.equals(function.apply((Block)elementType.getObject(arrayBlock,position)))) {\n      position++;\n    }\n    if (position == positionCount) {\n      return arrayBlock;\n    }\n    resultBuilder=elementType.createBlockBuilder(null,positionCount);\n    for (int i=0; i < position; i++) {\n      elementType.appendTo(arrayBlock,i,resultBuilder);\n    }\n    for (position++; position < positionCount; position++) {\n      if (TRUE.equals(function.apply((Block)elementType.getObject(arrayBlock,position)))) {\n        elementType.appendTo(arrayBlock,position,resultBuilder);\n      }\n    }\n  }\n  return resultBuilder.build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 218,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2540,
        "startLineNumber" : 279,
        "startColumnNumber" : 4,
        "endLineNumber" : 338,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@TypeParameter(\"T\") @TypeParameterSpecialization(name=\"T\",nativeContainerType=Block.class) @SqlType(\"array(T)\") public static Block filterBlock(@TypeParameter(\"T\") Type elementType,@SqlType(\"array(T)\") Block arrayBlock,@SqlType(\"function(T, boolean)\") BlockToBooleanFunction function){\n  int positionCount=arrayBlock.getPositionCount();\n  int position=0;\n  BlockBuilder resultBuilder;\n  if (arrayBlock.mayHaveNull()) {\n    while (position < positionCount && TRUE.equals(function.apply(arrayBlock.isNull(position) ? null : (Block)elementType.getObject(arrayBlock,position)))) {\n      position++;\n    }\n    if (position == positionCount) {\n      return arrayBlock;\n    }\n    resultBuilder=elementType.createBlockBuilder(null,positionCount);\n    for (int i=0; i < position; i++) {\n      elementType.appendTo(arrayBlock,i,resultBuilder);\n    }\n    for (position++; position < positionCount; position++) {\n      if (TRUE.equals(function.apply(arrayBlock.isNull(position) ? null : (Block)elementType.getObject(arrayBlock,position)))) {\n        elementType.appendTo(arrayBlock,position,resultBuilder);\n      }\n    }\n  }\n else {\n    while (position < positionCount && TRUE.equals(function.apply((Block)elementType.getObject(arrayBlock,position)))) {\n      position++;\n    }\n    if (position == positionCount) {\n      return arrayBlock;\n    }\n    resultBuilder=elementType.createBlockBuilder(null,positionCount);\n    for (int i=0; i < position; i++) {\n      elementType.appendTo(arrayBlock,i,resultBuilder);\n    }\n    for (position++; position < positionCount; position++) {\n      if (TRUE.equals(function.apply((Block)elementType.getObject(arrayBlock,position)))) {\n        elementType.appendTo(arrayBlock,position,resultBuilder);\n      }\n    }\n  }\n  return resultBuilder.build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 261,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 259,
        "startLineNumber" : 292,
        "startColumnNumber" : 19,
        "endLineNumber" : 295,
        "endColumnNumber" : 100
      },
      "nodeContext" : "position < positionCount && TRUE.equals(function.apply(arrayBlock.isNull(position) ? null : (Block)elementType.getObject(arrayBlock,position)))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 24,
      "astHeight" : 7
    },
    "tokenLength" : 13,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 211,
    "startLineNumber" : 293,
    "startColumnNumber" : 20,
    "endLineNumber" : 295,
    "endColumnNumber" : 100
  } ],
  "layoutRelationDataList" : [ ]
}