{
  "id" : 299,
  "expression" : "secret.getAsArray().isPresent()",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/services/src/test/java/org/keycloak/vault/VaultTranscriberTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "secret.getAsArray().isPresent()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 144,
      "startColumnNumber" : 31,
      "endLineNumber" : 144,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 144,
        "startColumnNumber" : 12,
        "endLineNumber" : 144,
        "endColumnNumber" : 63
      },
      "nodeContext" : "Assert.assertFalse(secret.getAsArray().isPresent())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 144,
        "startColumnNumber" : 12,
        "endLineNumber" : 144,
        "endColumnNumber" : 64
      },
      "nodeContext" : "Assert.assertFalse(secret.getAsArray().isPresent());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 142,
        "startColumnNumber" : 69,
        "endLineNumber" : 145,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Assert.assertFalse(secret.get().isPresent());\n  Assert.assertFalse(secret.getAsArray().isPresent());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 195,
        "startLineNumber" : 142,
        "startColumnNumber" : 8,
        "endLineNumber" : 145,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (VaultRawSecret secret=transcriber.getRawSecret(null)){\n  Assert.assertFalse(secret.get().isPresent());\n  Assert.assertFalse(secret.getAsArray().isPresent());\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 29,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 290,
        "startLineNumber" : 140,
        "startColumnNumber" : 54,
        "endLineNumber" : 146,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try (VaultRawSecret secret=transcriber.getRawSecret(null)){\n    Assert.assertFalse(secret.get().isPresent());\n    Assert.assertFalse(secret.getAsArray().isPresent());\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 447,
        "startLineNumber" : 135,
        "startColumnNumber" : 4,
        "endLineNumber" : 146,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Tests that a null vault expression always returns an empty secret.\n */\n@Test public void testGetRawSecretUsingNullExpression(){\n  try (VaultRawSecret secret=transcriber.getRawSecret(null)){\n    Assert.assertFalse(secret.get().isPresent());\n    Assert.assertFalse(secret.getAsArray().isPresent());\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 37,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 144,
        "startColumnNumber" : 12,
        "endLineNumber" : 144,
        "endColumnNumber" : 64
      },
      "nodeContext" : "Assert.assertFalse(secret.getAsArray().isPresent());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 144,
    "startColumnNumber" : 31,
    "endLineNumber" : 144,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}