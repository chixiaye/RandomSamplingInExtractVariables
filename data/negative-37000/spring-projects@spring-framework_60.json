{
  "id" : 60,
  "expression" : "conversionService.convert(values,TypeDescriptor.forObject(values),new TypeDescriptor(getClass().getField(\"genericList\")))",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-core/src/test/java/org/springframework/core/convert/converter/DefaultConversionServiceTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "conversionService.convert(values,TypeDescriptor.forObject(values),new TypeDescriptor(getClass().getField(\"genericList\")))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 127,
      "startLineNumber" : 717,
      "startColumnNumber" : 38,
      "endLineNumber" : 718,
      "endColumnNumber" : 93
    },
    "astNodeNumber" : 16,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 717,
        "startColumnNumber" : 22,
        "endLineNumber" : 718,
        "endColumnNumber" : 93
      },
      "nodeContext" : "(List<Integer>)conversionService.convert(values,TypeDescriptor.forObject(values),new TypeDescriptor(getClass().getField(\"genericList\")))",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 717,
        "startColumnNumber" : 16,
        "endLineNumber" : 718,
        "endColumnNumber" : 93
      },
      "nodeContext" : "bar=(List<Integer>)conversionService.convert(values,TypeDescriptor.forObject(values),new TypeDescriptor(getClass().getField(\"genericList\")))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 717,
        "startColumnNumber" : 2,
        "endLineNumber" : 718,
        "endColumnNumber" : 94
      },
      "nodeContext" : "List<Integer> bar=(List<Integer>)conversionService.convert(values,TypeDescriptor.forObject(values),new TypeDescriptor(getClass().getField(\"genericList\")));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 478,
        "startLineNumber" : 711,
        "startColumnNumber" : 83,
        "endLineNumber" : 723,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Map map=new LinkedHashMap();\n  map.put(\"1\",\"1\");\n  map.put(\"2\",\"2\");\n  map.put(\"3\",\"3\");\n  Collection values=map.values();\n  List<Integer> bar=(List<Integer>)conversionService.convert(values,TypeDescriptor.forObject(values),new TypeDescriptor(getClass().getField(\"genericList\")));\n  assertEquals(3,bar.size());\n  assertEquals(Integer.valueOf(1),bar.get(0));\n  assertEquals(Integer.valueOf(2),bar.get(1));\n  assertEquals(Integer.valueOf(3),bar.get(2));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 613,
        "startLineNumber" : 709,
        "startColumnNumber" : 1,
        "endLineNumber" : 723,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test @SuppressWarnings({\"unchecked\",\"rawtypes\"}) public void convertCollectionToCollectionSpecialCaseSourceImpl() throws Exception {\n  Map map=new LinkedHashMap();\n  map.put(\"1\",\"1\");\n  map.put(\"2\",\"2\");\n  map.put(\"3\",\"3\");\n  Collection values=map.values();\n  List<Integer> bar=(List<Integer>)conversionService.convert(values,TypeDescriptor.forObject(values),new TypeDescriptor(getClass().getField(\"genericList\")));\n  assertEquals(3,bar.size());\n  assertEquals(Integer.valueOf(1),bar.get(0));\n  assertEquals(Integer.valueOf(2),bar.get(1));\n  assertEquals(Integer.valueOf(3),bar.get(2));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 717,
        "startColumnNumber" : 2,
        "endLineNumber" : 718,
        "endColumnNumber" : 94
      },
      "nodeContext" : "List<Integer> bar=(List<Integer>)conversionService.convert(values,TypeDescriptor.forObject(values),new TypeDescriptor(getClass().getField(\"genericList\")));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 30,
      "astHeight" : 8
    },
    "tokenLength" : 10,
    "type" : "java.lang.Object"
  } ],
  "positionList" : [ {
    "charLength" : 127,
    "startLineNumber" : 717,
    "startColumnNumber" : 38,
    "endLineNumber" : 718,
    "endColumnNumber" : 93
  } ],
  "layoutRelationDataList" : [ ]
}