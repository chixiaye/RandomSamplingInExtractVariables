{
  "id" : 147,
  "expression" : "Map.Entry",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/client/test/org/openqa/selenium/ExecutingJavascriptTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Map.Entry",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 153,
      "startColumnNumber" : 9,
      "endLineNumber" : 153,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParameterizedType,type]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 153,
        "startColumnNumber" : 9,
        "endLineNumber" : 153,
        "endColumnNumber" : 18
      },
      "nodeContext" : "Map.Entry",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SingleVariableDeclaration,type]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 153,
        "startColumnNumber" : 9,
        "endLineNumber" : 153,
        "endColumnNumber" : 34
      },
      "nodeContext" : "Map.Entry<String,Object>",
      "nodeType" : "ParameterizedType",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,parameter]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 153,
        "startColumnNumber" : 9,
        "endLineNumber" : 153,
        "endColumnNumber" : 40
      },
      "nodeContext" : "Map.Entry<String,Object> entry",
      "nodeType" : "SingleVariableDeclaration",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 179,
        "startLineNumber" : 153,
        "startColumnNumber" : 4,
        "endLineNumber" : 155,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (Map.Entry<String,Object> entry : expected.entrySet()) {\n  assertThat(map.get(entry.getKey())).as(\"Value by key %s, )\",entry.getKey()).isEqualTo(entry.getValue());\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 36,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 716,
        "startLineNumber" : 139,
        "startColumnNumber" : 80,
        "endLineNumber" : 156,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  driver.get(pages.javascriptPage);\n  Object result=executeScript(\"return {abc: '123', tired: false};\");\n  assertThat(result).isInstanceOf(Map.class);\n  Map<String,Object> map=(Map<String,Object>)result;\n  Map<String,Object> expected=ImmutableMap.of(\"abc\",\"123\",\"tired\",false);\n  assertThat(map.size()).isGreaterThanOrEqualTo(expected.size());\n  for (  Map.Entry<String,Object> entry : expected.entrySet()) {\n    assertThat(map.get(entry.getKey())).as(\"Value by key %s, )\",entry.getKey()).isEqualTo(entry.getValue());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 835,
        "startLineNumber" : 137,
        "startColumnNumber" : 2,
        "endLineNumber" : 156,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") @Test public void testShouldBeAbleToExecuteJavascriptAndReturnABasicObjectLiteral(){\n  driver.get(pages.javascriptPage);\n  Object result=executeScript(\"return {abc: '123', tired: false};\");\n  assertThat(result).isInstanceOf(Map.class);\n  Map<String,Object> map=(Map<String,Object>)result;\n  Map<String,Object> expected=ImmutableMap.of(\"abc\",\"123\",\"tired\",false);\n  assertThat(map.size()).isGreaterThanOrEqualTo(expected.size());\n  for (  Map.Entry<String,Object> entry : expected.entrySet()) {\n    assertThat(map.get(entry.getKey())).as(\"Value by key %s, )\",entry.getKey()).isEqualTo(entry.getValue());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 117,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,parameter]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 153,
        "startColumnNumber" : 9,
        "endLineNumber" : 153,
        "endColumnNumber" : 40
      },
      "nodeContext" : "Map.Entry<String,Object> entry",
      "nodeType" : "SingleVariableDeclaration",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.util.Map.Entry<java.lang.String,java.lang.Object>"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 153,
    "startColumnNumber" : 9,
    "endLineNumber" : 153,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ ]
}