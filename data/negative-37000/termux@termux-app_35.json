{
  "id" : 35,
  "expression" : "(PowerManager)getSystemService(Context.POWER_SERVICE)",
  "projectName" : "termux@termux-app",
  "commitID" : "6334470f81bdf003b8567af9e3531cec4dce560d",
  "filePath" : "/app/src/main/java/com/termux/app/TermuxService.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(PowerManager)getSystemService(Context.POWER_SERVICE)",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 54,
      "startLineNumber" : 99,
      "startColumnNumber" : 34,
      "endLineNumber" : 99,
      "endColumnNumber" : 88
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 99,
        "startColumnNumber" : 29,
        "endLineNumber" : 99,
        "endColumnNumber" : 88
      },
      "nodeContext" : "pm=(PowerManager)getSystemService(Context.POWER_SERVICE)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 99,
        "startColumnNumber" : 16,
        "endLineNumber" : 99,
        "endColumnNumber" : 89
      },
      "nodeContext" : "PowerManager pm=(PowerManager)getSystemService(Context.POWER_SERVICE);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 241,
        "startLineNumber" : 98,
        "startColumnNumber" : 35,
        "endLineNumber" : 102,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  PowerManager pm=(PowerManager)getSystemService(Context.POWER_SERVICE);\n  mWakeLock=pm.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,EmulatorDebug.LOG_TAG);\n  mWakeLock.acquire();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 356,
        "startLineNumber" : 98,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (mWakeLock == null) {\n  PowerManager pm=(PowerManager)getSystemService(Context.POWER_SERVICE);\n  mWakeLock=pm.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,EmulatorDebug.LOG_TAG);\n  mWakeLock.acquire();\n}\n else {\n  mWakeLock.release();\n  mWakeLock=null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 414,
        "startLineNumber" : 97,
        "startColumnNumber" : 52,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (mWakeLock == null) {\n    PowerManager pm=(PowerManager)getSystemService(Context.POWER_SERVICE);\n    mWakeLock=pm.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,EmulatorDebug.LOG_TAG);\n    mWakeLock.acquire();\n  }\n else {\n    mWakeLock.release();\n    mWakeLock=null;\n  }\n  updateNotification();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2536,
        "startLineNumber" : 97,
        "startColumnNumber" : 15,
        "endLineNumber" : 144,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (ACTION_LOCK_WAKE.equals(action)) {\n  if (mWakeLock == null) {\n    PowerManager pm=(PowerManager)getSystemService(Context.POWER_SERVICE);\n    mWakeLock=pm.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,EmulatorDebug.LOG_TAG);\n    mWakeLock.acquire();\n  }\n else {\n    mWakeLock.release();\n    mWakeLock=null;\n  }\n  updateNotification();\n}\n else if (ACTION_LOCK_WIFI.equals(action)) {\n  if (mWifiLock == null) {\n    WifiManager wm=(WifiManager)getSystemService(Context.WIFI_SERVICE);\n    mWifiLock=wm.createWifiLock(WifiManager.WIFI_MODE_FULL_HIGH_PERF,EmulatorDebug.LOG_TAG);\n    mWifiLock.acquire();\n  }\n else {\n    mWifiLock.release();\n    mWifiLock=null;\n  }\n  updateNotification();\n}\n else if (ACTION_EXECUTE.equals(action)) {\n  Uri executableUri=intent.getData();\n  String executablePath=(executableUri == null ? null : executableUri.getPath());\n  String[] arguments=(executableUri == null ? null : intent.getStringArrayExtra(EXTRA_ARGUMENTS));\n  String cwd=intent.getStringExtra(EXTRA_CURRENT_WORKING_DIRECTORY);\n  if (intent.getBooleanExtra(\"com.termux.execute.background\",false)) {\n    new BackgroundJob(cwd,executablePath,arguments);\n  }\n else {\n    TerminalSession newSession=createTermSession(executablePath,arguments,cwd,false);\n    if (executablePath != null) {\n      int lastSlash=executablePath.lastIndexOf('/');\n      String name=(lastSlash == -1) ? executablePath : executablePath.substring(lastSlash + 1);\n      name=name.replace('-',' ');\n      newSession.mSessionName=name;\n    }\n    TermuxPreferences.storeCurrentSession(this,newSession);\n    startActivity(new Intent(this,TermuxActivity.class).addFlags(Intent.FLAG_ACTIVITY_NEW_TASK));\n  }\n}\n else if (action != null) {\n  Log.e(EmulatorDebug.LOG_TAG,\"Unknown TermuxService action: '\" + action + \"'\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 266,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2773,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 144,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (ACTION_STOP_SERVICE.equals(action)) {\n  mWantsToStop=true;\n  for (int i=0; i < mTerminalSessions.size(); i++)   mTerminalSessions.get(i).finishIfRunning();\n  stopSelf();\n}\n else if (ACTION_LOCK_WAKE.equals(action)) {\n  if (mWakeLock == null) {\n    PowerManager pm=(PowerManager)getSystemService(Context.POWER_SERVICE);\n    mWakeLock=pm.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,EmulatorDebug.LOG_TAG);\n    mWakeLock.acquire();\n  }\n else {\n    mWakeLock.release();\n    mWakeLock=null;\n  }\n  updateNotification();\n}\n else if (ACTION_LOCK_WIFI.equals(action)) {\n  if (mWifiLock == null) {\n    WifiManager wm=(WifiManager)getSystemService(Context.WIFI_SERVICE);\n    mWifiLock=wm.createWifiLock(WifiManager.WIFI_MODE_FULL_HIGH_PERF,EmulatorDebug.LOG_TAG);\n    mWifiLock.acquire();\n  }\n else {\n    mWifiLock.release();\n    mWifiLock=null;\n  }\n  updateNotification();\n}\n else if (ACTION_EXECUTE.equals(action)) {\n  Uri executableUri=intent.getData();\n  String executablePath=(executableUri == null ? null : executableUri.getPath());\n  String[] arguments=(executableUri == null ? null : intent.getStringArrayExtra(EXTRA_ARGUMENTS));\n  String cwd=intent.getStringExtra(EXTRA_CURRENT_WORKING_DIRECTORY);\n  if (intent.getBooleanExtra(\"com.termux.execute.background\",false)) {\n    new BackgroundJob(cwd,executablePath,arguments);\n  }\n else {\n    TerminalSession newSession=createTermSession(executablePath,arguments,cwd,false);\n    if (executablePath != null) {\n      int lastSlash=executablePath.lastIndexOf('/');\n      String name=(lastSlash == -1) ? executablePath : executablePath.substring(lastSlash + 1);\n      name=name.replace('-',' ');\n      newSession.mSessionName=name;\n    }\n    TermuxPreferences.storeCurrentSession(this,newSession);\n    startActivity(new Intent(this,TermuxActivity.class).addFlags(Intent.FLAG_ACTIVITY_NEW_TASK));\n  }\n}\n else if (action != null) {\n  Log.e(EmulatorDebug.LOG_TAG,\"Unknown TermuxService action: '\" + action + \"'\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 299,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3030,
        "startLineNumber" : 90,
        "startColumnNumber" : 69,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String action=intent.getAction();\n  if (ACTION_STOP_SERVICE.equals(action)) {\n    mWantsToStop=true;\n    for (int i=0; i < mTerminalSessions.size(); i++)     mTerminalSessions.get(i).finishIfRunning();\n    stopSelf();\n  }\n else   if (ACTION_LOCK_WAKE.equals(action)) {\n    if (mWakeLock == null) {\n      PowerManager pm=(PowerManager)getSystemService(Context.POWER_SERVICE);\n      mWakeLock=pm.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,EmulatorDebug.LOG_TAG);\n      mWakeLock.acquire();\n    }\n else {\n      mWakeLock.release();\n      mWakeLock=null;\n    }\n    updateNotification();\n  }\n else   if (ACTION_LOCK_WIFI.equals(action)) {\n    if (mWifiLock == null) {\n      WifiManager wm=(WifiManager)getSystemService(Context.WIFI_SERVICE);\n      mWifiLock=wm.createWifiLock(WifiManager.WIFI_MODE_FULL_HIGH_PERF,EmulatorDebug.LOG_TAG);\n      mWifiLock.acquire();\n    }\n else {\n      mWifiLock.release();\n      mWifiLock=null;\n    }\n    updateNotification();\n  }\n else   if (ACTION_EXECUTE.equals(action)) {\n    Uri executableUri=intent.getData();\n    String executablePath=(executableUri == null ? null : executableUri.getPath());\n    String[] arguments=(executableUri == null ? null : intent.getStringArrayExtra(EXTRA_ARGUMENTS));\n    String cwd=intent.getStringExtra(EXTRA_CURRENT_WORKING_DIRECTORY);\n    if (intent.getBooleanExtra(\"com.termux.execute.background\",false)) {\n      new BackgroundJob(cwd,executablePath,arguments);\n    }\n else {\n      TerminalSession newSession=createTermSession(executablePath,arguments,cwd,false);\n      if (executablePath != null) {\n        int lastSlash=executablePath.lastIndexOf('/');\n        String name=(lastSlash == -1) ? executablePath : executablePath.substring(lastSlash + 1);\n        name=name.replace('-',' ');\n        newSession.mSessionName=name;\n      }\n      TermuxPreferences.storeCurrentSession(this,newSession);\n      startActivity(new Intent(this,TermuxActivity.class).addFlags(Intent.FLAG_ACTIVITY_NEW_TASK));\n    }\n  }\n else   if (action != null) {\n    Log.e(EmulatorDebug.LOG_TAG,\"Unknown TermuxService action: '\" + action + \"'\");\n  }\n  return Service.START_NOT_STICKY;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 312,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3139,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressLint(\"Wakelock\") @Override public int onStartCommand(Intent intent,int flags,int startId){\n  String action=intent.getAction();\n  if (ACTION_STOP_SERVICE.equals(action)) {\n    mWantsToStop=true;\n    for (int i=0; i < mTerminalSessions.size(); i++)     mTerminalSessions.get(i).finishIfRunning();\n    stopSelf();\n  }\n else   if (ACTION_LOCK_WAKE.equals(action)) {\n    if (mWakeLock == null) {\n      PowerManager pm=(PowerManager)getSystemService(Context.POWER_SERVICE);\n      mWakeLock=pm.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK,EmulatorDebug.LOG_TAG);\n      mWakeLock.acquire();\n    }\n else {\n      mWakeLock.release();\n      mWakeLock=null;\n    }\n    updateNotification();\n  }\n else   if (ACTION_LOCK_WIFI.equals(action)) {\n    if (mWifiLock == null) {\n      WifiManager wm=(WifiManager)getSystemService(Context.WIFI_SERVICE);\n      mWifiLock=wm.createWifiLock(WifiManager.WIFI_MODE_FULL_HIGH_PERF,EmulatorDebug.LOG_TAG);\n      mWifiLock.acquire();\n    }\n else {\n      mWifiLock.release();\n      mWifiLock=null;\n    }\n    updateNotification();\n  }\n else   if (ACTION_EXECUTE.equals(action)) {\n    Uri executableUri=intent.getData();\n    String executablePath=(executableUri == null ? null : executableUri.getPath());\n    String[] arguments=(executableUri == null ? null : intent.getStringArrayExtra(EXTRA_ARGUMENTS));\n    String cwd=intent.getStringExtra(EXTRA_CURRENT_WORKING_DIRECTORY);\n    if (intent.getBooleanExtra(\"com.termux.execute.background\",false)) {\n      new BackgroundJob(cwd,executablePath,arguments);\n    }\n else {\n      TerminalSession newSession=createTermSession(executablePath,arguments,cwd,false);\n      if (executablePath != null) {\n        int lastSlash=executablePath.lastIndexOf('/');\n        String name=(lastSlash == -1) ? executablePath : executablePath.substring(lastSlash + 1);\n        name=name.replace('-',' ');\n        newSession.mSessionName=name;\n      }\n      TermuxPreferences.storeCurrentSession(this,newSession);\n      startActivity(new Intent(this,TermuxActivity.class).addFlags(Intent.FLAG_ACTIVITY_NEW_TASK));\n    }\n  }\n else   if (action != null) {\n    Log.e(EmulatorDebug.LOG_TAG,\"Unknown TermuxService action: '\" + action + \"'\");\n  }\n  return Service.START_NOT_STICKY;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 331,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 99,
        "startColumnNumber" : 16,
        "endLineNumber" : 99,
        "endColumnNumber" : 89
      },
      "nodeContext" : "PowerManager pm=(PowerManager)getSystemService(Context.POWER_SERVICE);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 5,
    "type" : "com.termux.app.PowerManager"
  } ],
  "positionList" : [ {
    "charLength" : 54,
    "startLineNumber" : 99,
    "startColumnNumber" : 34,
    "endLineNumber" : 99,
    "endColumnNumber" : 88
  } ],
  "layoutRelationDataList" : [ ]
}