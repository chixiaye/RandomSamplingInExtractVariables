{
  "id" : 160,
  "expression" : "from",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/utils/graphutils/Utils.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "from",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 29,
      "startColumnNumber" : 8,
      "endLineNumber" : 29,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 29,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 16
      },
      "nodeContext" : "from < 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 29,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 29
      },
      "nodeContext" : "from < 0 || from >= n",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 30,
        "endColumnNumber" : 95
      },
      "nodeContext" : "if (from < 0 || from >= n) throw new IllegalArgumentException(\"'from' node index out of bounds; received: \" + from);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 389,
        "startLineNumber" : 26,
        "startColumnNumber" : 82,
        "endLineNumber" : 34,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (graph == null)   throw new IllegalArgumentException(\"graph cannot be null\");\n  int n=graph.size();\n  if (from < 0 || from >= n)   throw new IllegalArgumentException(\"'from' node index out of bounds; received: \" + from);\n  if (to < 0 || to >= n)   throw new IllegalArgumentException(\"'to' node index out of bounds; received: \" + to);\n  graph.get(from).add(to);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 568,
        "startLineNumber" : 25,
        "startColumnNumber" : 2,
        "endLineNumber" : 34,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Adds an unweighted directed edge from the node at index 'from' to the node at index 'to'. \n */\npublic static void addDirectedEdge(List<List<Integer>> graph,int from,int to){\n  if (graph == null)   throw new IllegalArgumentException(\"graph cannot be null\");\n  int n=graph.size();\n  if (from < 0 || from >= n)   throw new IllegalArgumentException(\"'from' node index out of bounds; received: \" + from);\n  if (to < 0 || to >= n)   throw new IllegalArgumentException(\"'to' node index out of bounds; received: \" + to);\n  graph.get(from).add(to);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 29,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 29
      },
      "nodeContext" : "from < 0 || from >= n",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "from",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 29,
      "startColumnNumber" : 20,
      "endLineNumber" : 29,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 29,
        "startColumnNumber" : 20,
        "endLineNumber" : 29,
        "endColumnNumber" : 29
      },
      "nodeContext" : "from >= n",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 29,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 29
      },
      "nodeContext" : "from < 0 || from >= n",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 30,
        "endColumnNumber" : 95
      },
      "nodeContext" : "if (from < 0 || from >= n) throw new IllegalArgumentException(\"'from' node index out of bounds; received: \" + from);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 389,
        "startLineNumber" : 26,
        "startColumnNumber" : 82,
        "endLineNumber" : 34,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (graph == null)   throw new IllegalArgumentException(\"graph cannot be null\");\n  int n=graph.size();\n  if (from < 0 || from >= n)   throw new IllegalArgumentException(\"'from' node index out of bounds; received: \" + from);\n  if (to < 0 || to >= n)   throw new IllegalArgumentException(\"'to' node index out of bounds; received: \" + to);\n  graph.get(from).add(to);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 568,
        "startLineNumber" : 25,
        "startColumnNumber" : 2,
        "endLineNumber" : 34,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Adds an unweighted directed edge from the node at index 'from' to the node at index 'to'. \n */\npublic static void addDirectedEdge(List<List<Integer>> graph,int from,int to){\n  if (graph == null)   throw new IllegalArgumentException(\"graph cannot be null\");\n  int n=graph.size();\n  if (from < 0 || from >= n)   throw new IllegalArgumentException(\"'from' node index out of bounds; received: \" + from);\n  if (to < 0 || to >= n)   throw new IllegalArgumentException(\"'to' node index out of bounds; received: \" + to);\n  graph.get(from).add(to);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 29,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 29
      },
      "nodeContext" : "from < 0 || from >= n",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "from",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 30,
      "startColumnNumber" : 89,
      "endLineNumber" : 30,
      "endColumnNumber" : 93
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 30,
        "startColumnNumber" : 41,
        "endLineNumber" : 30,
        "endColumnNumber" : 93
      },
      "nodeContext" : "\"'from' node index out of bounds; received: \" + from",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 30,
        "startColumnNumber" : 12,
        "endLineNumber" : 30,
        "endColumnNumber" : 94
      },
      "nodeContext" : "new IllegalArgumentException(\"'from' node index out of bounds; received: \" + from)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 30,
        "startColumnNumber" : 6,
        "endLineNumber" : 30,
        "endColumnNumber" : 95
      },
      "nodeContext" : "throw new IllegalArgumentException(\"'from' node index out of bounds; received: \" + from);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 30,
        "endColumnNumber" : 95
      },
      "nodeContext" : "if (from < 0 || from >= n) throw new IllegalArgumentException(\"'from' node index out of bounds; received: \" + from);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 389,
        "startLineNumber" : 26,
        "startColumnNumber" : 82,
        "endLineNumber" : 34,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (graph == null)   throw new IllegalArgumentException(\"graph cannot be null\");\n  int n=graph.size();\n  if (from < 0 || from >= n)   throw new IllegalArgumentException(\"'from' node index out of bounds; received: \" + from);\n  if (to < 0 || to >= n)   throw new IllegalArgumentException(\"'to' node index out of bounds; received: \" + to);\n  graph.get(from).add(to);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 568,
        "startLineNumber" : 25,
        "startColumnNumber" : 2,
        "endLineNumber" : 34,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Adds an unweighted directed edge from the node at index 'from' to the node at index 'to'. \n */\npublic static void addDirectedEdge(List<List<Integer>> graph,int from,int to){\n  if (graph == null)   throw new IllegalArgumentException(\"graph cannot be null\");\n  int n=graph.size();\n  if (from < 0 || from >= n)   throw new IllegalArgumentException(\"'from' node index out of bounds; received: \" + from);\n  if (to < 0 || to >= n)   throw new IllegalArgumentException(\"'to' node index out of bounds; received: \" + to);\n  graph.get(from).add(to);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 30,
        "startColumnNumber" : 6,
        "endLineNumber" : 30,
        "endColumnNumber" : 95
      },
      "nodeContext" : "throw new IllegalArgumentException(\"'from' node index out of bounds; received: \" + from);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "from",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 33,
      "startColumnNumber" : 14,
      "endLineNumber" : 33,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 19
      },
      "nodeContext" : "graph.get(from)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 27
      },
      "nodeContext" : "graph.get(from).add(to)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 28
      },
      "nodeContext" : "graph.get(from).add(to);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 389,
        "startLineNumber" : 26,
        "startColumnNumber" : 82,
        "endLineNumber" : 34,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (graph == null)   throw new IllegalArgumentException(\"graph cannot be null\");\n  int n=graph.size();\n  if (from < 0 || from >= n)   throw new IllegalArgumentException(\"'from' node index out of bounds; received: \" + from);\n  if (to < 0 || to >= n)   throw new IllegalArgumentException(\"'to' node index out of bounds; received: \" + to);\n  graph.get(from).add(to);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 568,
        "startLineNumber" : 25,
        "startColumnNumber" : 2,
        "endLineNumber" : 34,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Adds an unweighted directed edge from the node at index 'from' to the node at index 'to'. \n */\npublic static void addDirectedEdge(List<List<Integer>> graph,int from,int to){\n  if (graph == null)   throw new IllegalArgumentException(\"graph cannot be null\");\n  int n=graph.size();\n  if (from < 0 || from >= n)   throw new IllegalArgumentException(\"'from' node index out of bounds; received: \" + from);\n  if (to < 0 || to >= n)   throw new IllegalArgumentException(\"'to' node index out of bounds; received: \" + to);\n  graph.get(from).add(to);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 28
      },
      "nodeContext" : "graph.get(from).add(to);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 29,
    "startColumnNumber" : 8,
    "endLineNumber" : 29,
    "endColumnNumber" : 12
  }, {
    "charLength" : 4,
    "startLineNumber" : 29,
    "startColumnNumber" : 20,
    "endLineNumber" : 29,
    "endColumnNumber" : 24
  }, {
    "charLength" : 4,
    "startLineNumber" : 30,
    "startColumnNumber" : 89,
    "endLineNumber" : 30,
    "endColumnNumber" : 93
  }, {
    "charLength" : 4,
    "startLineNumber" : 33,
    "startColumnNumber" : 14,
    "endLineNumber" : 33,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}