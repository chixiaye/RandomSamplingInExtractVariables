{
  "id" : 496,
  "expression" : "simple2.exists()",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/test/src/test/java/hudson/FilePathTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "simple2.exists()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 77,
      "startColumnNumber" : 19,
      "endLineNumber" : 77,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertThat(simple2.exists(),is(false))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertThat(simple2.exists(),is(false));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 607,
        "startLineNumber" : 68,
        "startColumnNumber" : 67,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assumeTrue(Functions.isWindows());\n  FilePath zipFile=r.jenkins.getRootPath().child(\"zip-with-folder.zip\");\n  FilePath targetLocation=r.jenkins.getRootPath().child(\"unzip-target\");\n  FilePath simple1=targetLocation.child(\"simple1.txt\");\n  FilePath simple2=targetLocation.child(\"child\").child(\"simple2.txt\");\n  assertThat(simple1.exists(),is(false));\n  assertThat(simple2.exists(),is(false));\n  zipFile.unzip(targetLocation);\n  assertThat(simple1.exists(),is(true));\n  assertThat(simple2.exists(),is(true));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 747,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test @Issue(\"JENKINS-32778\") @LocalData(\"zip_with_relative\") public void zipRelativePathHandledCorrectly() throws Exception {\n  assumeTrue(Functions.isWindows());\n  FilePath zipFile=r.jenkins.getRootPath().child(\"zip-with-folder.zip\");\n  FilePath targetLocation=r.jenkins.getRootPath().child(\"unzip-target\");\n  FilePath simple1=targetLocation.child(\"simple1.txt\");\n  FilePath simple2=targetLocation.child(\"child\").child(\"simple2.txt\");\n  assertThat(simple1.exists(),is(false));\n  assertThat(simple2.exists(),is(false));\n  zipFile.unzip(targetLocation);\n  assertThat(simple1.exists(),is(true));\n  assertThat(simple2.exists(),is(true));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 109,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertThat(simple2.exists(),is(false));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  }, {
    "nodeContext" : "simple2.exists()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 82,
      "startColumnNumber" : 19,
      "endLineNumber" : 82,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertThat(simple2.exists(),is(true))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertThat(simple2.exists(),is(true));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 607,
        "startLineNumber" : 68,
        "startColumnNumber" : 67,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assumeTrue(Functions.isWindows());\n  FilePath zipFile=r.jenkins.getRootPath().child(\"zip-with-folder.zip\");\n  FilePath targetLocation=r.jenkins.getRootPath().child(\"unzip-target\");\n  FilePath simple1=targetLocation.child(\"simple1.txt\");\n  FilePath simple2=targetLocation.child(\"child\").child(\"simple2.txt\");\n  assertThat(simple1.exists(),is(false));\n  assertThat(simple2.exists(),is(false));\n  zipFile.unzip(targetLocation);\n  assertThat(simple1.exists(),is(true));\n  assertThat(simple2.exists(),is(true));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 747,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test @Issue(\"JENKINS-32778\") @LocalData(\"zip_with_relative\") public void zipRelativePathHandledCorrectly() throws Exception {\n  assumeTrue(Functions.isWindows());\n  FilePath zipFile=r.jenkins.getRootPath().child(\"zip-with-folder.zip\");\n  FilePath targetLocation=r.jenkins.getRootPath().child(\"unzip-target\");\n  FilePath simple1=targetLocation.child(\"simple1.txt\");\n  FilePath simple2=targetLocation.child(\"child\").child(\"simple2.txt\");\n  assertThat(simple1.exists(),is(false));\n  assertThat(simple2.exists(),is(false));\n  zipFile.unzip(targetLocation);\n  assertThat(simple1.exists(),is(true));\n  assertThat(simple2.exists(),is(true));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 109,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertThat(simple2.exists(),is(true));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 77,
    "startColumnNumber" : 19,
    "endLineNumber" : 77,
    "endColumnNumber" : 35
  }, {
    "charLength" : 16,
    "startLineNumber" : 82,
    "startColumnNumber" : 19,
    "endLineNumber" : 82,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}