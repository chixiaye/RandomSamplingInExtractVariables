{
  "id" : 305,
  "expression" : "File",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-runtime/src/main/java/org/apache/flink/runtime/rest/handler/job/JobSubmitHandler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "File",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 89,
      "startColumnNumber" : 50,
      "endLineNumber" : 89,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 89,
        "startColumnNumber" : 50,
        "endLineNumber" : 89,
        "endColumnNumber" : 63
      },
      "nodeContext" : "File::getName",
      "nodeType" : "ExpressionMethodReference",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 89,
        "startColumnNumber" : 33,
        "endLineNumber" : 89,
        "endColumnNumber" : 85
      },
      "nodeContext" : "Collectors.toMap(File::getName,Path::fromLocalFile)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 88,
        "startColumnNumber" : 16,
        "endLineNumber" : 89,
        "endColumnNumber" : 86
      },
      "nodeContext" : "uploadedFiles.stream().collect(Collectors.toMap(File::getName,Path::fromLocalFile))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 87,
        "startColumnNumber" : 32,
        "endLineNumber" : 89,
        "endColumnNumber" : 86
      },
      "nodeContext" : "nameToFile=uploadedFiles.stream().collect(Collectors.toMap(File::getName,Path::fromLocalFile))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 87
      },
      "nodeContext" : "final Map<String,Path> nameToFile=uploadedFiles.stream().collect(Collectors.toMap(File::getName,Path::fromLocalFile));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2032,
        "startLineNumber" : 85,
        "startColumnNumber" : 40,
        "endLineNumber" : 128,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Collection<File> uploadedFiles=request.getUploadedFiles();\n  final Map<String,Path> nameToFile=uploadedFiles.stream().collect(Collectors.toMap(File::getName,Path::fromLocalFile));\n  if (uploadedFiles.size() != nameToFile.size()) {\n    throw new RestHandlerException(String.format(\"The number of uploaded files was %s than the expected count. Expected: %s Actual %s\",uploadedFiles.size() < nameToFile.size() ? \"lower\" : \"higher\",nameToFile.size(),uploadedFiles.size()),HttpResponseStatus.BAD_REQUEST);\n  }\n  final JobSubmitRequestBody requestBody=request.getRequestBody();\n  if (requestBody.jobGraphFileName == null) {\n    throw new RestHandlerException(String.format(\"The %s field must not be omitted or be null.\",JobSubmitRequestBody.FIELD_NAME_JOB_GRAPH),HttpResponseStatus.BAD_REQUEST);\n  }\n  CompletableFuture<JobGraph> jobGraphFuture=loadJobGraph(requestBody,nameToFile);\n  Collection<Path> jarFiles=getJarFilesToUpload(requestBody.jarFileNames,nameToFile);\n  Collection<Tuple2<String,Path>> artifacts=getArtifactFilesToUpload(requestBody.artifactFileNames,nameToFile);\n  CompletableFuture<JobGraph> finalizedJobGraphFuture=uploadJobGraphFiles(gateway,jobGraphFuture,jarFiles,artifacts,configuration);\n  CompletableFuture<Acknowledge> jobSubmissionFuture=finalizedJobGraphFuture.thenCompose(jobGraph -> gateway.submitJob(jobGraph,timeout));\n  return jobSubmissionFuture.thenCombine(jobGraphFuture,(ack,jobGraph) -> new JobSubmitResponseBody(\"/jobs/\" + jobGraph.getJobID()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 201,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2267,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 128,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected CompletableFuture<JobSubmitResponseBody> handleRequest(@Nonnull HandlerRequest<JobSubmitRequestBody> request,@Nonnull DispatcherGateway gateway) throws RestHandlerException {\n  final Collection<File> uploadedFiles=request.getUploadedFiles();\n  final Map<String,Path> nameToFile=uploadedFiles.stream().collect(Collectors.toMap(File::getName,Path::fromLocalFile));\n  if (uploadedFiles.size() != nameToFile.size()) {\n    throw new RestHandlerException(String.format(\"The number of uploaded files was %s than the expected count. Expected: %s Actual %s\",uploadedFiles.size() < nameToFile.size() ? \"lower\" : \"higher\",nameToFile.size(),uploadedFiles.size()),HttpResponseStatus.BAD_REQUEST);\n  }\n  final JobSubmitRequestBody requestBody=request.getRequestBody();\n  if (requestBody.jobGraphFileName == null) {\n    throw new RestHandlerException(String.format(\"The %s field must not be omitted or be null.\",JobSubmitRequestBody.FIELD_NAME_JOB_GRAPH),HttpResponseStatus.BAD_REQUEST);\n  }\n  CompletableFuture<JobGraph> jobGraphFuture=loadJobGraph(requestBody,nameToFile);\n  Collection<Path> jarFiles=getJarFilesToUpload(requestBody.jarFileNames,nameToFile);\n  Collection<Tuple2<String,Path>> artifacts=getArtifactFilesToUpload(requestBody.artifactFileNames,nameToFile);\n  CompletableFuture<JobGraph> finalizedJobGraphFuture=uploadJobGraphFiles(gateway,jobGraphFuture,jarFiles,artifacts,configuration);\n  CompletableFuture<Acknowledge> jobSubmissionFuture=finalizedJobGraphFuture.thenCompose(jobGraph -> gateway.submitJob(jobGraph,timeout));\n  return jobSubmissionFuture.thenCombine(jobGraphFuture,(ack,jobGraph) -> new JobSubmitResponseBody(\"/jobs/\" + jobGraph.getJobID()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 228,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 89,
        "startColumnNumber" : 33,
        "endLineNumber" : 89,
        "endColumnNumber" : 85
      },
      "nodeContext" : "Collectors.toMap(File::getName,Path::fromLocalFile)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.io.File"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 89,
    "startColumnNumber" : 50,
    "endLineNumber" : 89,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}