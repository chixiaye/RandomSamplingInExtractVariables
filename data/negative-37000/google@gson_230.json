{
  "id" : 230,
  "expression" : "jr",
  "projectName" : "google@gson",
  "commitID" : "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
  "filePath" : "/metrics/src/main/java/com/google/gson/metrics/CollectionsDeserializationBenchmark.java",
  "occurrences" : 11,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "jr",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 72,
      "startColumnNumber" : 6,
      "endLineNumber" : 72,
      "endColumnNumber" : 8
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 72,
        "startColumnNumber" : 6,
        "endLineNumber" : 72,
        "endColumnNumber" : 21
      },
      "nodeContext" : "jr.beginArray()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 72,
        "startColumnNumber" : 6,
        "endLineNumber" : 72,
        "endColumnNumber" : 22
      },
      "nodeContext" : "jr.beginArray();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1048,
        "startLineNumber" : 69,
        "startColumnNumber" : 31,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 155,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1075,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < reps; ++i) {\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 166,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 68,
        "startColumnNumber" : 68,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1219,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Benchmark to measure deserializing objects by hand\n */\npublic void timeCollectionsStreaming(int reps) throws IOException {\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 177,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 72,
        "startColumnNumber" : 6,
        "endLineNumber" : 72,
        "endColumnNumber" : 22
      },
      "nodeContext" : "jr.beginArray();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.google.gson.stream.JsonReader"
  }, {
    "nodeContext" : "jr",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 74,
      "startColumnNumber" : 12,
      "endLineNumber" : 74,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 74,
        "startColumnNumber" : 12,
        "endLineNumber" : 74,
        "endColumnNumber" : 24
      },
      "nodeContext" : "jr.hasNext()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 823,
        "startLineNumber" : 74,
        "startColumnNumber" : 6,
        "endLineNumber" : 96,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (jr.hasNext()) {\n  jr.beginObject();\n  long longValue=0;\n  int intValue=0;\n  boolean booleanValue=false;\n  String stringValue=null;\n  while (jr.hasNext()) {\n    String name=jr.nextName();\n    if (name.equals(\"longValue\")) {\n      longValue=jr.nextLong();\n    }\n else     if (name.equals(\"intValue\")) {\n      intValue=jr.nextInt();\n    }\n else     if (name.equals(\"booleanValue\")) {\n      booleanValue=jr.nextBoolean();\n    }\n else     if (name.equals(\"stringValue\")) {\n      stringValue=jr.nextString();\n    }\n else {\n      throw new IOException(\"Unexpected name: \" + name);\n    }\n  }\n  jr.endObject();\n  bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 114,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1048,
        "startLineNumber" : 69,
        "startColumnNumber" : 31,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 155,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1075,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < reps; ++i) {\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 166,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 68,
        "startColumnNumber" : 68,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1219,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Benchmark to measure deserializing objects by hand\n */\npublic void timeCollectionsStreaming(int reps) throws IOException {\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 177,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 74,
        "startColumnNumber" : 12,
        "endLineNumber" : 74,
        "endColumnNumber" : 24
      },
      "nodeContext" : "jr.hasNext()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.google.gson.stream.JsonReader"
  }, {
    "nodeContext" : "jr",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 75,
      "startColumnNumber" : 8,
      "endLineNumber" : 75,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 24
      },
      "nodeContext" : "jr.beginObject()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 25
      },
      "nodeContext" : "jr.beginObject();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 74,
        "startColumnNumber" : 26,
        "endLineNumber" : 96,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  jr.beginObject();\n  long longValue=0;\n  int intValue=0;\n  boolean booleanValue=false;\n  String stringValue=null;\n  while (jr.hasNext()) {\n    String name=jr.nextName();\n    if (name.equals(\"longValue\")) {\n      longValue=jr.nextLong();\n    }\n else     if (name.equals(\"intValue\")) {\n      intValue=jr.nextInt();\n    }\n else     if (name.equals(\"booleanValue\")) {\n      booleanValue=jr.nextBoolean();\n    }\n else     if (name.equals(\"stringValue\")) {\n      stringValue=jr.nextString();\n    }\n else {\n      throw new IOException(\"Unexpected name: \" + name);\n    }\n  }\n  jr.endObject();\n  bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 823,
        "startLineNumber" : 74,
        "startColumnNumber" : 6,
        "endLineNumber" : 96,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (jr.hasNext()) {\n  jr.beginObject();\n  long longValue=0;\n  int intValue=0;\n  boolean booleanValue=false;\n  String stringValue=null;\n  while (jr.hasNext()) {\n    String name=jr.nextName();\n    if (name.equals(\"longValue\")) {\n      longValue=jr.nextLong();\n    }\n else     if (name.equals(\"intValue\")) {\n      intValue=jr.nextInt();\n    }\n else     if (name.equals(\"booleanValue\")) {\n      booleanValue=jr.nextBoolean();\n    }\n else     if (name.equals(\"stringValue\")) {\n      stringValue=jr.nextString();\n    }\n else {\n      throw new IOException(\"Unexpected name: \" + name);\n    }\n  }\n  jr.endObject();\n  bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 114,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1048,
        "startLineNumber" : 69,
        "startColumnNumber" : 31,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 155,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1075,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < reps; ++i) {\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 166,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 68,
        "startColumnNumber" : 68,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1219,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Benchmark to measure deserializing objects by hand\n */\npublic void timeCollectionsStreaming(int reps) throws IOException {\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 177,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 25
      },
      "nodeContext" : "jr.beginObject();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.google.gson.stream.JsonReader"
  }, {
    "nodeContext" : "jr",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 80,
      "startColumnNumber" : 14,
      "endLineNumber" : 80,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 80,
        "startColumnNumber" : 14,
        "endLineNumber" : 80,
        "endColumnNumber" : 26
      },
      "nodeContext" : "jr.hasNext()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 521,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (jr.hasNext()) {\n  String name=jr.nextName();\n  if (name.equals(\"longValue\")) {\n    longValue=jr.nextLong();\n  }\n else   if (name.equals(\"intValue\")) {\n    intValue=jr.nextInt();\n  }\n else   if (name.equals(\"booleanValue\")) {\n    booleanValue=jr.nextBoolean();\n  }\n else   if (name.equals(\"stringValue\")) {\n    stringValue=jr.nextString();\n  }\n else {\n    throw new IOException(\"Unexpected name: \" + name);\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 69,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 74,
        "startColumnNumber" : 26,
        "endLineNumber" : 96,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  jr.beginObject();\n  long longValue=0;\n  int intValue=0;\n  boolean booleanValue=false;\n  String stringValue=null;\n  while (jr.hasNext()) {\n    String name=jr.nextName();\n    if (name.equals(\"longValue\")) {\n      longValue=jr.nextLong();\n    }\n else     if (name.equals(\"intValue\")) {\n      intValue=jr.nextInt();\n    }\n else     if (name.equals(\"booleanValue\")) {\n      booleanValue=jr.nextBoolean();\n    }\n else     if (name.equals(\"stringValue\")) {\n      stringValue=jr.nextString();\n    }\n else {\n      throw new IOException(\"Unexpected name: \" + name);\n    }\n  }\n  jr.endObject();\n  bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 823,
        "startLineNumber" : 74,
        "startColumnNumber" : 6,
        "endLineNumber" : 96,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (jr.hasNext()) {\n  jr.beginObject();\n  long longValue=0;\n  int intValue=0;\n  boolean booleanValue=false;\n  String stringValue=null;\n  while (jr.hasNext()) {\n    String name=jr.nextName();\n    if (name.equals(\"longValue\")) {\n      longValue=jr.nextLong();\n    }\n else     if (name.equals(\"intValue\")) {\n      intValue=jr.nextInt();\n    }\n else     if (name.equals(\"booleanValue\")) {\n      booleanValue=jr.nextBoolean();\n    }\n else     if (name.equals(\"stringValue\")) {\n      stringValue=jr.nextString();\n    }\n else {\n      throw new IOException(\"Unexpected name: \" + name);\n    }\n  }\n  jr.endObject();\n  bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 114,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1048,
        "startLineNumber" : 69,
        "startColumnNumber" : 31,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 155,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1075,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < reps; ++i) {\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 166,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 68,
        "startColumnNumber" : 68,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1219,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Benchmark to measure deserializing objects by hand\n */\npublic void timeCollectionsStreaming(int reps) throws IOException {\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 177,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 80,
        "startColumnNumber" : 14,
        "endLineNumber" : 80,
        "endColumnNumber" : 26
      },
      "nodeContext" : "jr.hasNext()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.google.gson.stream.JsonReader"
  }, {
    "nodeContext" : "jr",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 81,
      "startColumnNumber" : 24,
      "endLineNumber" : 81,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 81,
        "startColumnNumber" : 24,
        "endLineNumber" : 81,
        "endColumnNumber" : 37
      },
      "nodeContext" : "jr.nextName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 81,
        "startColumnNumber" : 17,
        "endLineNumber" : 81,
        "endColumnNumber" : 37
      },
      "nodeContext" : "name=jr.nextName()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 81,
        "startColumnNumber" : 10,
        "endLineNumber" : 81,
        "endColumnNumber" : 38
      },
      "nodeContext" : "String name=jr.nextName();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 501,
        "startLineNumber" : 80,
        "startColumnNumber" : 28,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String name=jr.nextName();\n  if (name.equals(\"longValue\")) {\n    longValue=jr.nextLong();\n  }\n else   if (name.equals(\"intValue\")) {\n    intValue=jr.nextInt();\n  }\n else   if (name.equals(\"booleanValue\")) {\n    booleanValue=jr.nextBoolean();\n  }\n else   if (name.equals(\"stringValue\")) {\n    stringValue=jr.nextString();\n  }\n else {\n    throw new IOException(\"Unexpected name: \" + name);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 521,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (jr.hasNext()) {\n  String name=jr.nextName();\n  if (name.equals(\"longValue\")) {\n    longValue=jr.nextLong();\n  }\n else   if (name.equals(\"intValue\")) {\n    intValue=jr.nextInt();\n  }\n else   if (name.equals(\"booleanValue\")) {\n    booleanValue=jr.nextBoolean();\n  }\n else   if (name.equals(\"stringValue\")) {\n    stringValue=jr.nextString();\n  }\n else {\n    throw new IOException(\"Unexpected name: \" + name);\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 69,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 74,
        "startColumnNumber" : 26,
        "endLineNumber" : 96,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  jr.beginObject();\n  long longValue=0;\n  int intValue=0;\n  boolean booleanValue=false;\n  String stringValue=null;\n  while (jr.hasNext()) {\n    String name=jr.nextName();\n    if (name.equals(\"longValue\")) {\n      longValue=jr.nextLong();\n    }\n else     if (name.equals(\"intValue\")) {\n      intValue=jr.nextInt();\n    }\n else     if (name.equals(\"booleanValue\")) {\n      booleanValue=jr.nextBoolean();\n    }\n else     if (name.equals(\"stringValue\")) {\n      stringValue=jr.nextString();\n    }\n else {\n      throw new IOException(\"Unexpected name: \" + name);\n    }\n  }\n  jr.endObject();\n  bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 823,
        "startLineNumber" : 74,
        "startColumnNumber" : 6,
        "endLineNumber" : 96,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (jr.hasNext()) {\n  jr.beginObject();\n  long longValue=0;\n  int intValue=0;\n  boolean booleanValue=false;\n  String stringValue=null;\n  while (jr.hasNext()) {\n    String name=jr.nextName();\n    if (name.equals(\"longValue\")) {\n      longValue=jr.nextLong();\n    }\n else     if (name.equals(\"intValue\")) {\n      intValue=jr.nextInt();\n    }\n else     if (name.equals(\"booleanValue\")) {\n      booleanValue=jr.nextBoolean();\n    }\n else     if (name.equals(\"stringValue\")) {\n      stringValue=jr.nextString();\n    }\n else {\n      throw new IOException(\"Unexpected name: \" + name);\n    }\n  }\n  jr.endObject();\n  bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 114,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1048,
        "startLineNumber" : 69,
        "startColumnNumber" : 31,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 155,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1075,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < reps; ++i) {\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 166,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 68,
        "startColumnNumber" : 68,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1219,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Benchmark to measure deserializing objects by hand\n */\npublic void timeCollectionsStreaming(int reps) throws IOException {\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 177,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 81,
        "startColumnNumber" : 10,
        "endLineNumber" : 81,
        "endColumnNumber" : 38
      },
      "nodeContext" : "String name=jr.nextName();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.gson.stream.JsonReader"
  }, {
    "nodeContext" : "jr",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 83,
      "startColumnNumber" : 24,
      "endLineNumber" : 83,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 83,
        "startColumnNumber" : 24,
        "endLineNumber" : 83,
        "endColumnNumber" : 37
      },
      "nodeContext" : "jr.nextLong()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 83,
        "startColumnNumber" : 12,
        "endLineNumber" : 83,
        "endColumnNumber" : 37
      },
      "nodeContext" : "longValue=jr.nextLong()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 83,
        "startColumnNumber" : 12,
        "endLineNumber" : 83,
        "endColumnNumber" : 38
      },
      "nodeContext" : "longValue=jr.nextLong();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 82,
        "startColumnNumber" : 40,
        "endLineNumber" : 84,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  longValue=jr.nextLong();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 440,
        "startLineNumber" : 82,
        "startColumnNumber" : 10,
        "endLineNumber" : 92,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (name.equals(\"longValue\")) {\n  longValue=jr.nextLong();\n}\n else if (name.equals(\"intValue\")) {\n  intValue=jr.nextInt();\n}\n else if (name.equals(\"booleanValue\")) {\n  booleanValue=jr.nextBoolean();\n}\n else if (name.equals(\"stringValue\")) {\n  stringValue=jr.nextString();\n}\n else {\n  throw new IOException(\"Unexpected name: \" + name);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 56,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 501,
        "startLineNumber" : 80,
        "startColumnNumber" : 28,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String name=jr.nextName();\n  if (name.equals(\"longValue\")) {\n    longValue=jr.nextLong();\n  }\n else   if (name.equals(\"intValue\")) {\n    intValue=jr.nextInt();\n  }\n else   if (name.equals(\"booleanValue\")) {\n    booleanValue=jr.nextBoolean();\n  }\n else   if (name.equals(\"stringValue\")) {\n    stringValue=jr.nextString();\n  }\n else {\n    throw new IOException(\"Unexpected name: \" + name);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 521,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (jr.hasNext()) {\n  String name=jr.nextName();\n  if (name.equals(\"longValue\")) {\n    longValue=jr.nextLong();\n  }\n else   if (name.equals(\"intValue\")) {\n    intValue=jr.nextInt();\n  }\n else   if (name.equals(\"booleanValue\")) {\n    booleanValue=jr.nextBoolean();\n  }\n else   if (name.equals(\"stringValue\")) {\n    stringValue=jr.nextString();\n  }\n else {\n    throw new IOException(\"Unexpected name: \" + name);\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 69,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 74,
        "startColumnNumber" : 26,
        "endLineNumber" : 96,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  jr.beginObject();\n  long longValue=0;\n  int intValue=0;\n  boolean booleanValue=false;\n  String stringValue=null;\n  while (jr.hasNext()) {\n    String name=jr.nextName();\n    if (name.equals(\"longValue\")) {\n      longValue=jr.nextLong();\n    }\n else     if (name.equals(\"intValue\")) {\n      intValue=jr.nextInt();\n    }\n else     if (name.equals(\"booleanValue\")) {\n      booleanValue=jr.nextBoolean();\n    }\n else     if (name.equals(\"stringValue\")) {\n      stringValue=jr.nextString();\n    }\n else {\n      throw new IOException(\"Unexpected name: \" + name);\n    }\n  }\n  jr.endObject();\n  bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 823,
        "startLineNumber" : 74,
        "startColumnNumber" : 6,
        "endLineNumber" : 96,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (jr.hasNext()) {\n  jr.beginObject();\n  long longValue=0;\n  int intValue=0;\n  boolean booleanValue=false;\n  String stringValue=null;\n  while (jr.hasNext()) {\n    String name=jr.nextName();\n    if (name.equals(\"longValue\")) {\n      longValue=jr.nextLong();\n    }\n else     if (name.equals(\"intValue\")) {\n      intValue=jr.nextInt();\n    }\n else     if (name.equals(\"booleanValue\")) {\n      booleanValue=jr.nextBoolean();\n    }\n else     if (name.equals(\"stringValue\")) {\n      stringValue=jr.nextString();\n    }\n else {\n      throw new IOException(\"Unexpected name: \" + name);\n    }\n  }\n  jr.endObject();\n  bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 114,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1048,
        "startLineNumber" : 69,
        "startColumnNumber" : 31,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 155,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1075,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < reps; ++i) {\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 166,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 68,
        "startColumnNumber" : 68,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1219,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Benchmark to measure deserializing objects by hand\n */\npublic void timeCollectionsStreaming(int reps) throws IOException {\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 177,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 83,
        "startColumnNumber" : 12,
        "endLineNumber" : 83,
        "endColumnNumber" : 38
      },
      "nodeContext" : "longValue=jr.nextLong();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.gson.stream.JsonReader"
  }, {
    "nodeContext" : "jr",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 85,
      "startColumnNumber" : 23,
      "endLineNumber" : 85,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 85,
        "startColumnNumber" : 23,
        "endLineNumber" : 85,
        "endColumnNumber" : 35
      },
      "nodeContext" : "jr.nextInt()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 85,
        "startColumnNumber" : 12,
        "endLineNumber" : 85,
        "endColumnNumber" : 35
      },
      "nodeContext" : "intValue=jr.nextInt()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 85,
        "startColumnNumber" : 12,
        "endLineNumber" : 85,
        "endColumnNumber" : 36
      },
      "nodeContext" : "intValue=jr.nextInt();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 84,
        "startColumnNumber" : 46,
        "endLineNumber" : 86,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  intValue=jr.nextInt();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 352,
        "startLineNumber" : 84,
        "startColumnNumber" : 17,
        "endLineNumber" : 92,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (name.equals(\"intValue\")) {\n  intValue=jr.nextInt();\n}\n else if (name.equals(\"booleanValue\")) {\n  booleanValue=jr.nextBoolean();\n}\n else if (name.equals(\"stringValue\")) {\n  stringValue=jr.nextString();\n}\n else {\n  throw new IOException(\"Unexpected name: \" + name);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 440,
        "startLineNumber" : 82,
        "startColumnNumber" : 10,
        "endLineNumber" : 92,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (name.equals(\"longValue\")) {\n  longValue=jr.nextLong();\n}\n else if (name.equals(\"intValue\")) {\n  intValue=jr.nextInt();\n}\n else if (name.equals(\"booleanValue\")) {\n  booleanValue=jr.nextBoolean();\n}\n else if (name.equals(\"stringValue\")) {\n  stringValue=jr.nextString();\n}\n else {\n  throw new IOException(\"Unexpected name: \" + name);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 56,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 501,
        "startLineNumber" : 80,
        "startColumnNumber" : 28,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String name=jr.nextName();\n  if (name.equals(\"longValue\")) {\n    longValue=jr.nextLong();\n  }\n else   if (name.equals(\"intValue\")) {\n    intValue=jr.nextInt();\n  }\n else   if (name.equals(\"booleanValue\")) {\n    booleanValue=jr.nextBoolean();\n  }\n else   if (name.equals(\"stringValue\")) {\n    stringValue=jr.nextString();\n  }\n else {\n    throw new IOException(\"Unexpected name: \" + name);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 521,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (jr.hasNext()) {\n  String name=jr.nextName();\n  if (name.equals(\"longValue\")) {\n    longValue=jr.nextLong();\n  }\n else   if (name.equals(\"intValue\")) {\n    intValue=jr.nextInt();\n  }\n else   if (name.equals(\"booleanValue\")) {\n    booleanValue=jr.nextBoolean();\n  }\n else   if (name.equals(\"stringValue\")) {\n    stringValue=jr.nextString();\n  }\n else {\n    throw new IOException(\"Unexpected name: \" + name);\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 69,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 74,
        "startColumnNumber" : 26,
        "endLineNumber" : 96,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  jr.beginObject();\n  long longValue=0;\n  int intValue=0;\n  boolean booleanValue=false;\n  String stringValue=null;\n  while (jr.hasNext()) {\n    String name=jr.nextName();\n    if (name.equals(\"longValue\")) {\n      longValue=jr.nextLong();\n    }\n else     if (name.equals(\"intValue\")) {\n      intValue=jr.nextInt();\n    }\n else     if (name.equals(\"booleanValue\")) {\n      booleanValue=jr.nextBoolean();\n    }\n else     if (name.equals(\"stringValue\")) {\n      stringValue=jr.nextString();\n    }\n else {\n      throw new IOException(\"Unexpected name: \" + name);\n    }\n  }\n  jr.endObject();\n  bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 823,
        "startLineNumber" : 74,
        "startColumnNumber" : 6,
        "endLineNumber" : 96,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (jr.hasNext()) {\n  jr.beginObject();\n  long longValue=0;\n  int intValue=0;\n  boolean booleanValue=false;\n  String stringValue=null;\n  while (jr.hasNext()) {\n    String name=jr.nextName();\n    if (name.equals(\"longValue\")) {\n      longValue=jr.nextLong();\n    }\n else     if (name.equals(\"intValue\")) {\n      intValue=jr.nextInt();\n    }\n else     if (name.equals(\"booleanValue\")) {\n      booleanValue=jr.nextBoolean();\n    }\n else     if (name.equals(\"stringValue\")) {\n      stringValue=jr.nextString();\n    }\n else {\n      throw new IOException(\"Unexpected name: \" + name);\n    }\n  }\n  jr.endObject();\n  bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 114,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1048,
        "startLineNumber" : 69,
        "startColumnNumber" : 31,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 155,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1075,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < reps; ++i) {\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 166,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 68,
        "startColumnNumber" : 68,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1219,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Benchmark to measure deserializing objects by hand\n */\npublic void timeCollectionsStreaming(int reps) throws IOException {\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 177,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 85,
        "startColumnNumber" : 12,
        "endLineNumber" : 85,
        "endColumnNumber" : 36
      },
      "nodeContext" : "intValue=jr.nextInt();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.gson.stream.JsonReader"
  }, {
    "nodeContext" : "jr",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 87,
      "startColumnNumber" : 27,
      "endLineNumber" : 87,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 87,
        "startColumnNumber" : 27,
        "endLineNumber" : 87,
        "endColumnNumber" : 43
      },
      "nodeContext" : "jr.nextBoolean()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 87,
        "startColumnNumber" : 12,
        "endLineNumber" : 87,
        "endColumnNumber" : 43
      },
      "nodeContext" : "booleanValue=jr.nextBoolean()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 87,
        "startColumnNumber" : 12,
        "endLineNumber" : 87,
        "endColumnNumber" : 44
      },
      "nodeContext" : "booleanValue=jr.nextBoolean();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 86,
        "startColumnNumber" : 50,
        "endLineNumber" : 88,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  booleanValue=jr.nextBoolean();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 267,
        "startLineNumber" : 86,
        "startColumnNumber" : 17,
        "endLineNumber" : 92,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (name.equals(\"booleanValue\")) {\n  booleanValue=jr.nextBoolean();\n}\n else if (name.equals(\"stringValue\")) {\n  stringValue=jr.nextString();\n}\n else {\n  throw new IOException(\"Unexpected name: \" + name);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 352,
        "startLineNumber" : 84,
        "startColumnNumber" : 17,
        "endLineNumber" : 92,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (name.equals(\"intValue\")) {\n  intValue=jr.nextInt();\n}\n else if (name.equals(\"booleanValue\")) {\n  booleanValue=jr.nextBoolean();\n}\n else if (name.equals(\"stringValue\")) {\n  stringValue=jr.nextString();\n}\n else {\n  throw new IOException(\"Unexpected name: \" + name);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 440,
        "startLineNumber" : 82,
        "startColumnNumber" : 10,
        "endLineNumber" : 92,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (name.equals(\"longValue\")) {\n  longValue=jr.nextLong();\n}\n else if (name.equals(\"intValue\")) {\n  intValue=jr.nextInt();\n}\n else if (name.equals(\"booleanValue\")) {\n  booleanValue=jr.nextBoolean();\n}\n else if (name.equals(\"stringValue\")) {\n  stringValue=jr.nextString();\n}\n else {\n  throw new IOException(\"Unexpected name: \" + name);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 56,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 501,
        "startLineNumber" : 80,
        "startColumnNumber" : 28,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String name=jr.nextName();\n  if (name.equals(\"longValue\")) {\n    longValue=jr.nextLong();\n  }\n else   if (name.equals(\"intValue\")) {\n    intValue=jr.nextInt();\n  }\n else   if (name.equals(\"booleanValue\")) {\n    booleanValue=jr.nextBoolean();\n  }\n else   if (name.equals(\"stringValue\")) {\n    stringValue=jr.nextString();\n  }\n else {\n    throw new IOException(\"Unexpected name: \" + name);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 521,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (jr.hasNext()) {\n  String name=jr.nextName();\n  if (name.equals(\"longValue\")) {\n    longValue=jr.nextLong();\n  }\n else   if (name.equals(\"intValue\")) {\n    intValue=jr.nextInt();\n  }\n else   if (name.equals(\"booleanValue\")) {\n    booleanValue=jr.nextBoolean();\n  }\n else   if (name.equals(\"stringValue\")) {\n    stringValue=jr.nextString();\n  }\n else {\n    throw new IOException(\"Unexpected name: \" + name);\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 69,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 74,
        "startColumnNumber" : 26,
        "endLineNumber" : 96,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  jr.beginObject();\n  long longValue=0;\n  int intValue=0;\n  boolean booleanValue=false;\n  String stringValue=null;\n  while (jr.hasNext()) {\n    String name=jr.nextName();\n    if (name.equals(\"longValue\")) {\n      longValue=jr.nextLong();\n    }\n else     if (name.equals(\"intValue\")) {\n      intValue=jr.nextInt();\n    }\n else     if (name.equals(\"booleanValue\")) {\n      booleanValue=jr.nextBoolean();\n    }\n else     if (name.equals(\"stringValue\")) {\n      stringValue=jr.nextString();\n    }\n else {\n      throw new IOException(\"Unexpected name: \" + name);\n    }\n  }\n  jr.endObject();\n  bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 823,
        "startLineNumber" : 74,
        "startColumnNumber" : 6,
        "endLineNumber" : 96,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (jr.hasNext()) {\n  jr.beginObject();\n  long longValue=0;\n  int intValue=0;\n  boolean booleanValue=false;\n  String stringValue=null;\n  while (jr.hasNext()) {\n    String name=jr.nextName();\n    if (name.equals(\"longValue\")) {\n      longValue=jr.nextLong();\n    }\n else     if (name.equals(\"intValue\")) {\n      intValue=jr.nextInt();\n    }\n else     if (name.equals(\"booleanValue\")) {\n      booleanValue=jr.nextBoolean();\n    }\n else     if (name.equals(\"stringValue\")) {\n      stringValue=jr.nextString();\n    }\n else {\n      throw new IOException(\"Unexpected name: \" + name);\n    }\n  }\n  jr.endObject();\n  bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 114,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1048,
        "startLineNumber" : 69,
        "startColumnNumber" : 31,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 155,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1075,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < reps; ++i) {\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 166,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 68,
        "startColumnNumber" : 68,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1219,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Benchmark to measure deserializing objects by hand\n */\npublic void timeCollectionsStreaming(int reps) throws IOException {\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 177,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 87,
        "startColumnNumber" : 12,
        "endLineNumber" : 87,
        "endColumnNumber" : 44
      },
      "nodeContext" : "booleanValue=jr.nextBoolean();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.gson.stream.JsonReader"
  }, {
    "nodeContext" : "jr",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 89,
      "startColumnNumber" : 26,
      "endLineNumber" : 89,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 89,
        "startColumnNumber" : 26,
        "endLineNumber" : 89,
        "endColumnNumber" : 41
      },
      "nodeContext" : "jr.nextString()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 41
      },
      "nodeContext" : "stringValue=jr.nextString()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 42
      },
      "nodeContext" : "stringValue=jr.nextString();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 88,
        "startColumnNumber" : 49,
        "endLineNumber" : 90,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  stringValue=jr.nextString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 88,
        "startColumnNumber" : 17,
        "endLineNumber" : 92,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (name.equals(\"stringValue\")) {\n  stringValue=jr.nextString();\n}\n else {\n  throw new IOException(\"Unexpected name: \" + name);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 267,
        "startLineNumber" : 86,
        "startColumnNumber" : 17,
        "endLineNumber" : 92,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (name.equals(\"booleanValue\")) {\n  booleanValue=jr.nextBoolean();\n}\n else if (name.equals(\"stringValue\")) {\n  stringValue=jr.nextString();\n}\n else {\n  throw new IOException(\"Unexpected name: \" + name);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 352,
        "startLineNumber" : 84,
        "startColumnNumber" : 17,
        "endLineNumber" : 92,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (name.equals(\"intValue\")) {\n  intValue=jr.nextInt();\n}\n else if (name.equals(\"booleanValue\")) {\n  booleanValue=jr.nextBoolean();\n}\n else if (name.equals(\"stringValue\")) {\n  stringValue=jr.nextString();\n}\n else {\n  throw new IOException(\"Unexpected name: \" + name);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 440,
        "startLineNumber" : 82,
        "startColumnNumber" : 10,
        "endLineNumber" : 92,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (name.equals(\"longValue\")) {\n  longValue=jr.nextLong();\n}\n else if (name.equals(\"intValue\")) {\n  intValue=jr.nextInt();\n}\n else if (name.equals(\"booleanValue\")) {\n  booleanValue=jr.nextBoolean();\n}\n else if (name.equals(\"stringValue\")) {\n  stringValue=jr.nextString();\n}\n else {\n  throw new IOException(\"Unexpected name: \" + name);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 56,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 501,
        "startLineNumber" : 80,
        "startColumnNumber" : 28,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String name=jr.nextName();\n  if (name.equals(\"longValue\")) {\n    longValue=jr.nextLong();\n  }\n else   if (name.equals(\"intValue\")) {\n    intValue=jr.nextInt();\n  }\n else   if (name.equals(\"booleanValue\")) {\n    booleanValue=jr.nextBoolean();\n  }\n else   if (name.equals(\"stringValue\")) {\n    stringValue=jr.nextString();\n  }\n else {\n    throw new IOException(\"Unexpected name: \" + name);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 521,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (jr.hasNext()) {\n  String name=jr.nextName();\n  if (name.equals(\"longValue\")) {\n    longValue=jr.nextLong();\n  }\n else   if (name.equals(\"intValue\")) {\n    intValue=jr.nextInt();\n  }\n else   if (name.equals(\"booleanValue\")) {\n    booleanValue=jr.nextBoolean();\n  }\n else   if (name.equals(\"stringValue\")) {\n    stringValue=jr.nextString();\n  }\n else {\n    throw new IOException(\"Unexpected name: \" + name);\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 69,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 74,
        "startColumnNumber" : 26,
        "endLineNumber" : 96,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  jr.beginObject();\n  long longValue=0;\n  int intValue=0;\n  boolean booleanValue=false;\n  String stringValue=null;\n  while (jr.hasNext()) {\n    String name=jr.nextName();\n    if (name.equals(\"longValue\")) {\n      longValue=jr.nextLong();\n    }\n else     if (name.equals(\"intValue\")) {\n      intValue=jr.nextInt();\n    }\n else     if (name.equals(\"booleanValue\")) {\n      booleanValue=jr.nextBoolean();\n    }\n else     if (name.equals(\"stringValue\")) {\n      stringValue=jr.nextString();\n    }\n else {\n      throw new IOException(\"Unexpected name: \" + name);\n    }\n  }\n  jr.endObject();\n  bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 823,
        "startLineNumber" : 74,
        "startColumnNumber" : 6,
        "endLineNumber" : 96,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (jr.hasNext()) {\n  jr.beginObject();\n  long longValue=0;\n  int intValue=0;\n  boolean booleanValue=false;\n  String stringValue=null;\n  while (jr.hasNext()) {\n    String name=jr.nextName();\n    if (name.equals(\"longValue\")) {\n      longValue=jr.nextLong();\n    }\n else     if (name.equals(\"intValue\")) {\n      intValue=jr.nextInt();\n    }\n else     if (name.equals(\"booleanValue\")) {\n      booleanValue=jr.nextBoolean();\n    }\n else     if (name.equals(\"stringValue\")) {\n      stringValue=jr.nextString();\n    }\n else {\n      throw new IOException(\"Unexpected name: \" + name);\n    }\n  }\n  jr.endObject();\n  bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 114,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1048,
        "startLineNumber" : 69,
        "startColumnNumber" : 31,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 155,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1075,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < reps; ++i) {\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 166,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 68,
        "startColumnNumber" : 68,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1219,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Benchmark to measure deserializing objects by hand\n */\npublic void timeCollectionsStreaming(int reps) throws IOException {\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 177,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 42
      },
      "nodeContext" : "stringValue=jr.nextString();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.gson.stream.JsonReader"
  }, {
    "nodeContext" : "jr",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 94,
      "startColumnNumber" : 8,
      "endLineNumber" : 94,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 22
      },
      "nodeContext" : "jr.endObject()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 23
      },
      "nodeContext" : "jr.endObject();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 803,
        "startLineNumber" : 74,
        "startColumnNumber" : 26,
        "endLineNumber" : 96,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  jr.beginObject();\n  long longValue=0;\n  int intValue=0;\n  boolean booleanValue=false;\n  String stringValue=null;\n  while (jr.hasNext()) {\n    String name=jr.nextName();\n    if (name.equals(\"longValue\")) {\n      longValue=jr.nextLong();\n    }\n else     if (name.equals(\"intValue\")) {\n      intValue=jr.nextInt();\n    }\n else     if (name.equals(\"booleanValue\")) {\n      booleanValue=jr.nextBoolean();\n    }\n else     if (name.equals(\"stringValue\")) {\n      stringValue=jr.nextString();\n    }\n else {\n      throw new IOException(\"Unexpected name: \" + name);\n    }\n  }\n  jr.endObject();\n  bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 823,
        "startLineNumber" : 74,
        "startColumnNumber" : 6,
        "endLineNumber" : 96,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (jr.hasNext()) {\n  jr.beginObject();\n  long longValue=0;\n  int intValue=0;\n  boolean booleanValue=false;\n  String stringValue=null;\n  while (jr.hasNext()) {\n    String name=jr.nextName();\n    if (name.equals(\"longValue\")) {\n      longValue=jr.nextLong();\n    }\n else     if (name.equals(\"intValue\")) {\n      intValue=jr.nextInt();\n    }\n else     if (name.equals(\"booleanValue\")) {\n      booleanValue=jr.nextBoolean();\n    }\n else     if (name.equals(\"stringValue\")) {\n      stringValue=jr.nextString();\n    }\n else {\n      throw new IOException(\"Unexpected name: \" + name);\n    }\n  }\n  jr.endObject();\n  bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 114,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1048,
        "startLineNumber" : 69,
        "startColumnNumber" : 31,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 155,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1075,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < reps; ++i) {\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 166,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 68,
        "startColumnNumber" : 68,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1219,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Benchmark to measure deserializing objects by hand\n */\npublic void timeCollectionsStreaming(int reps) throws IOException {\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 177,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 23
      },
      "nodeContext" : "jr.endObject();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.google.gson.stream.JsonReader"
  }, {
    "nodeContext" : "jr",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 97,
      "startColumnNumber" : 6,
      "endLineNumber" : 97,
      "endColumnNumber" : 8
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 97,
        "startColumnNumber" : 6,
        "endLineNumber" : 97,
        "endColumnNumber" : 19
      },
      "nodeContext" : "jr.endArray()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 97,
        "startColumnNumber" : 6,
        "endLineNumber" : 97,
        "endColumnNumber" : 20
      },
      "nodeContext" : "jr.endArray();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1048,
        "startLineNumber" : 69,
        "startColumnNumber" : 31,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 155,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1075,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < reps; ++i) {\n  StringReader reader=new StringReader(json);\n  JsonReader jr=new JsonReader(reader);\n  jr.beginArray();\n  List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n  while (jr.hasNext()) {\n    jr.beginObject();\n    long longValue=0;\n    int intValue=0;\n    boolean booleanValue=false;\n    String stringValue=null;\n    while (jr.hasNext()) {\n      String name=jr.nextName();\n      if (name.equals(\"longValue\")) {\n        longValue=jr.nextLong();\n      }\n else       if (name.equals(\"intValue\")) {\n        intValue=jr.nextInt();\n      }\n else       if (name.equals(\"booleanValue\")) {\n        booleanValue=jr.nextBoolean();\n      }\n else       if (name.equals(\"stringValue\")) {\n        stringValue=jr.nextString();\n      }\n else {\n        throw new IOException(\"Unexpected name: \" + name);\n      }\n    }\n    jr.endObject();\n    bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n  }\n  jr.endArray();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 166,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 68,
        "startColumnNumber" : 68,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1219,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Benchmark to measure deserializing objects by hand\n */\npublic void timeCollectionsStreaming(int reps) throws IOException {\n  for (int i=0; i < reps; ++i) {\n    StringReader reader=new StringReader(json);\n    JsonReader jr=new JsonReader(reader);\n    jr.beginArray();\n    List<BagOfPrimitives> bags=new ArrayList<BagOfPrimitives>();\n    while (jr.hasNext()) {\n      jr.beginObject();\n      long longValue=0;\n      int intValue=0;\n      boolean booleanValue=false;\n      String stringValue=null;\n      while (jr.hasNext()) {\n        String name=jr.nextName();\n        if (name.equals(\"longValue\")) {\n          longValue=jr.nextLong();\n        }\n else         if (name.equals(\"intValue\")) {\n          intValue=jr.nextInt();\n        }\n else         if (name.equals(\"booleanValue\")) {\n          booleanValue=jr.nextBoolean();\n        }\n else         if (name.equals(\"stringValue\")) {\n          stringValue=jr.nextString();\n        }\n else {\n          throw new IOException(\"Unexpected name: \" + name);\n        }\n      }\n      jr.endObject();\n      bags.add(new BagOfPrimitives(longValue,intValue,booleanValue,stringValue));\n    }\n    jr.endArray();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 177,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 97,
        "startColumnNumber" : 6,
        "endLineNumber" : 97,
        "endColumnNumber" : 20
      },
      "nodeContext" : "jr.endArray();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.google.gson.stream.JsonReader"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 72,
    "startColumnNumber" : 6,
    "endLineNumber" : 72,
    "endColumnNumber" : 8
  }, {
    "charLength" : 2,
    "startLineNumber" : 74,
    "startColumnNumber" : 12,
    "endLineNumber" : 74,
    "endColumnNumber" : 14
  }, {
    "charLength" : 2,
    "startLineNumber" : 75,
    "startColumnNumber" : 8,
    "endLineNumber" : 75,
    "endColumnNumber" : 10
  }, {
    "charLength" : 2,
    "startLineNumber" : 80,
    "startColumnNumber" : 14,
    "endLineNumber" : 80,
    "endColumnNumber" : 16
  }, {
    "charLength" : 2,
    "startLineNumber" : 81,
    "startColumnNumber" : 24,
    "endLineNumber" : 81,
    "endColumnNumber" : 26
  }, {
    "charLength" : 2,
    "startLineNumber" : 83,
    "startColumnNumber" : 24,
    "endLineNumber" : 83,
    "endColumnNumber" : 26
  }, {
    "charLength" : 2,
    "startLineNumber" : 85,
    "startColumnNumber" : 23,
    "endLineNumber" : 85,
    "endColumnNumber" : 25
  }, {
    "charLength" : 2,
    "startLineNumber" : 87,
    "startColumnNumber" : 27,
    "endLineNumber" : 87,
    "endColumnNumber" : 29
  }, {
    "charLength" : 2,
    "startLineNumber" : 89,
    "startColumnNumber" : 26,
    "endLineNumber" : 89,
    "endColumnNumber" : 28
  }, {
    "charLength" : 2,
    "startLineNumber" : 94,
    "startColumnNumber" : 8,
    "endLineNumber" : 94,
    "endColumnNumber" : 10
  }, {
    "charLength" : 2,
    "startLineNumber" : 97,
    "startColumnNumber" : 6,
    "endLineNumber" : 97,
    "endColumnNumber" : 8
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 10,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 10,
    "layout" : 9
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 10
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 9
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 10,
    "layout" : 10
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 11
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 10
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 9
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 9
  }, {
    "firstKey" : 7,
    "secondKey" : 10,
    "layout" : 11
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 12
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 11
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 10
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 9
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 10
  }, {
    "firstKey" : 8,
    "secondKey" : 10,
    "layout" : 12
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 10,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 9,
    "layout" : 2
  } ]
}