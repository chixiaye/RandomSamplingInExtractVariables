{
  "id" : 164,
  "expression" : "i + pos < N",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/datastructures/suffixarray/SuffixArrayMed.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i + pos < N",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 59,
      "startColumnNumber" : 32,
      "endLineNumber" : 59,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 59,
        "startColumnNumber" : 32,
        "endLineNumber" : 59,
        "endColumnNumber" : 74
      },
      "nodeContext" : "i + pos < N ? suffixRanks[0][i + pos] : -1",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 74
      },
      "nodeContext" : "suffixRank.secondHalf=i + pos < N ? suffixRanks[0][i + pos] : -1",
      "nodeType" : "Assignment",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 75
      },
      "nodeContext" : "suffixRank.secondHalf=i + pos < N ? suffixRanks[0][i + pos] : -1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 220,
        "startLineNumber" : 56,
        "startColumnNumber" : 34,
        "endLineNumber" : 61,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  SuffixRankTuple suffixRank=ranks[i];\n  suffixRank.firstHalf=suffixRanks[0][i];\n  suffixRank.secondHalf=i + pos < N ? suffixRanks[0][i + pos] : -1;\n  suffixRank.originalIndex=i;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 248,
        "startLineNumber" : 56,
        "startColumnNumber" : 6,
        "endLineNumber" : 61,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=0; i < N; i++) {\n  SuffixRankTuple suffixRank=ranks[i];\n  suffixRank.firstHalf=suffixRanks[0][i];\n  suffixRank.secondHalf=i + pos < N ? suffixRanks[0][i + pos] : -1;\n  suffixRank.originalIndex=i;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 56,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 985,
        "startLineNumber" : 54,
        "startColumnNumber" : 41,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int i=0; i < N; i++) {\n    SuffixRankTuple suffixRank=ranks[i];\n    suffixRank.firstHalf=suffixRanks[0][i];\n    suffixRank.secondHalf=i + pos < N ? suffixRanks[0][i + pos] : -1;\n    suffixRank.originalIndex=i;\n  }\n  java.util.Arrays.sort(ranks);\n  int newRank=0;\n  suffixRanks[1][ranks[0].originalIndex]=0;\n  for (int i=1; i < N; i++) {\n    SuffixRankTuple lastSuffixRank=ranks[i - 1];\n    SuffixRankTuple currSuffixRank=ranks[i];\n    if (currSuffixRank.firstHalf != lastSuffixRank.firstHalf || currSuffixRank.secondHalf != lastSuffixRank.secondHalf)     newRank++;\n    suffixRanks[1][currSuffixRank.originalIndex]=newRank;\n  }\n  suffixRanks[0]=suffixRanks[1];\n  if (newRank == N - 1)   break;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 157,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1022,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int pos=1; pos < N; pos*=2) {\n  for (int i=0; i < N; i++) {\n    SuffixRankTuple suffixRank=ranks[i];\n    suffixRank.firstHalf=suffixRanks[0][i];\n    suffixRank.secondHalf=i + pos < N ? suffixRanks[0][i + pos] : -1;\n    suffixRank.originalIndex=i;\n  }\n  java.util.Arrays.sort(ranks);\n  int newRank=0;\n  suffixRanks[1][ranks[0].originalIndex]=0;\n  for (int i=1; i < N; i++) {\n    SuffixRankTuple lastSuffixRank=ranks[i - 1];\n    SuffixRankTuple currSuffixRank=ranks[i];\n    if (currSuffixRank.firstHalf != lastSuffixRank.firstHalf || currSuffixRank.secondHalf != lastSuffixRank.secondHalf)     newRank++;\n    suffixRanks[1][currSuffixRank.originalIndex]=newRank;\n  }\n  suffixRanks[0]=suffixRanks[1];\n  if (newRank == N - 1)   break;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 169,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1725,
        "startLineNumber" : 39,
        "startColumnNumber" : 29,
        "endLineNumber" : 98,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  sa=new int[N];\n  int[][] suffixRanks=new int[2][N];\n  SuffixRankTuple[] ranks=new SuffixRankTuple[N];\n  for (int i=0; i < N; i++) {\n    suffixRanks[0][i]=T[i];\n    ranks[i]=new SuffixRankTuple();\n  }\n  for (int pos=1; pos < N; pos*=2) {\n    for (int i=0; i < N; i++) {\n      SuffixRankTuple suffixRank=ranks[i];\n      suffixRank.firstHalf=suffixRanks[0][i];\n      suffixRank.secondHalf=i + pos < N ? suffixRanks[0][i + pos] : -1;\n      suffixRank.originalIndex=i;\n    }\n    java.util.Arrays.sort(ranks);\n    int newRank=0;\n    suffixRanks[1][ranks[0].originalIndex]=0;\n    for (int i=1; i < N; i++) {\n      SuffixRankTuple lastSuffixRank=ranks[i - 1];\n      SuffixRankTuple currSuffixRank=ranks[i];\n      if (currSuffixRank.firstHalf != lastSuffixRank.firstHalf || currSuffixRank.secondHalf != lastSuffixRank.secondHalf)       newRank++;\n      suffixRanks[1][currSuffixRank.originalIndex]=newRank;\n    }\n    suffixRanks[0]=suffixRanks[1];\n    if (newRank == N - 1)     break;\n  }\n  for (int i=0; i < N; i++) {\n    sa[i]=ranks[i].originalIndex;\n    ranks[i]=null;\n  }\n  suffixRanks[0]=suffixRanks[1]=null;\n  suffixRanks=null;\n  ranks=null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 281,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1764,
        "startLineNumber" : 38,
        "startColumnNumber" : 2,
        "endLineNumber" : 98,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override protected void construct(){\n  sa=new int[N];\n  int[][] suffixRanks=new int[2][N];\n  SuffixRankTuple[] ranks=new SuffixRankTuple[N];\n  for (int i=0; i < N; i++) {\n    suffixRanks[0][i]=T[i];\n    ranks[i]=new SuffixRankTuple();\n  }\n  for (int pos=1; pos < N; pos*=2) {\n    for (int i=0; i < N; i++) {\n      SuffixRankTuple suffixRank=ranks[i];\n      suffixRank.firstHalf=suffixRanks[0][i];\n      suffixRank.secondHalf=i + pos < N ? suffixRanks[0][i + pos] : -1;\n      suffixRank.originalIndex=i;\n    }\n    java.util.Arrays.sort(ranks);\n    int newRank=0;\n    suffixRanks[1][ranks[0].originalIndex]=0;\n    for (int i=1; i < N; i++) {\n      SuffixRankTuple lastSuffixRank=ranks[i - 1];\n      SuffixRankTuple currSuffixRank=ranks[i];\n      if (currSuffixRank.firstHalf != lastSuffixRank.firstHalf || currSuffixRank.secondHalf != lastSuffixRank.secondHalf)       newRank++;\n      suffixRanks[1][currSuffixRank.originalIndex]=newRank;\n    }\n    suffixRanks[0]=suffixRanks[1];\n    if (newRank == N - 1)     break;\n  }\n  for (int i=0; i < N; i++) {\n    sa[i]=ranks[i].originalIndex;\n    ranks[i]=null;\n  }\n  suffixRanks[0]=suffixRanks[1]=null;\n  suffixRanks=null;\n  ranks=null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 287,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 75
      },
      "nodeContext" : "suffixRank.secondHalf=i + pos < N ? suffixRanks[0][i + pos] : -1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 59,
    "startColumnNumber" : 32,
    "endLineNumber" : 59,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}