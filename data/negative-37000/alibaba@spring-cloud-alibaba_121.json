{
  "id" : 121,
  "expression" : "Objects.toString(serverAddr,\"\")",
  "projectName" : "alibaba@spring-cloud-alibaba",
  "commitID" : "89ad537f66927a647f6233cfc79d58b18f2f6928",
  "filePath" : "/spring-cloud-alibaba-nacos-discovery/src/main/java/com/alibaba/cloud/nacos/NacosDiscoveryProperties.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Objects.toString(serverAddr,\"\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 191,
      "startColumnNumber" : 15,
      "endLineNumber" : 191,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 191,
        "startColumnNumber" : 2,
        "endLineNumber" : 191,
        "endColumnNumber" : 47
      },
      "nodeContext" : "serverAddr=Objects.toString(serverAddr,\"\")",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 191,
        "startColumnNumber" : 2,
        "endLineNumber" : 191,
        "endColumnNumber" : 48
      },
      "nodeContext" : "serverAddr=Objects.toString(serverAddr,\"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1430,
        "startLineNumber" : 184,
        "startColumnNumber" : 43,
        "endLineNumber" : 231,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  metadata.put(PreservedMetadataKeys.REGISTER_SOURCE,\"SPRING_CLOUD\");\n  if (secure) {\n    metadata.put(\"secure\",\"true\");\n  }\n  serverAddr=Objects.toString(serverAddr,\"\");\n  if (serverAddr.lastIndexOf(\"/\") != -1) {\n    serverAddr=serverAddr.substring(0,serverAddr.length() - 1);\n  }\n  endpoint=Objects.toString(endpoint,\"\");\n  namespace=Objects.toString(namespace,\"\");\n  logName=Objects.toString(logName,\"\");\n  if (StringUtils.isEmpty(ip)) {\n    if (StringUtils.isEmpty(networkInterface)) {\n      ip=inetUtils.findFirstNonLoopbackHostInfo().getIpAddress();\n    }\n else {\n      NetworkInterface netInterface=NetworkInterface.getByName(networkInterface);\n      if (null == netInterface) {\n        throw new IllegalArgumentException(\"no such interface \" + networkInterface);\n      }\n      Enumeration<InetAddress> inetAddress=netInterface.getInetAddresses();\n      while (inetAddress.hasMoreElements()) {\n        InetAddress currentAddress=inetAddress.nextElement();\n        if (currentAddress instanceof Inet4Address && !currentAddress.isLoopbackAddress()) {\n          ip=currentAddress.getHostAddress();\n          break;\n        }\n      }\n      if (StringUtils.isEmpty(ip)) {\n        throw new RuntimeException(\"cannot find available ip from\" + \" network interface \" + networkInterface);\n      }\n    }\n  }\n  this.overrideFromEnv(environment);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 174,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1488,
        "startLineNumber" : 183,
        "startColumnNumber" : 1,
        "endLineNumber" : 231,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@PostConstruct public void init() throws SocketException {\n  metadata.put(PreservedMetadataKeys.REGISTER_SOURCE,\"SPRING_CLOUD\");\n  if (secure) {\n    metadata.put(\"secure\",\"true\");\n  }\n  serverAddr=Objects.toString(serverAddr,\"\");\n  if (serverAddr.lastIndexOf(\"/\") != -1) {\n    serverAddr=serverAddr.substring(0,serverAddr.length() - 1);\n  }\n  endpoint=Objects.toString(endpoint,\"\");\n  namespace=Objects.toString(namespace,\"\");\n  logName=Objects.toString(logName,\"\");\n  if (StringUtils.isEmpty(ip)) {\n    if (StringUtils.isEmpty(networkInterface)) {\n      ip=inetUtils.findFirstNonLoopbackHostInfo().getIpAddress();\n    }\n else {\n      NetworkInterface netInterface=NetworkInterface.getByName(networkInterface);\n      if (null == netInterface) {\n        throw new IllegalArgumentException(\"no such interface \" + networkInterface);\n      }\n      Enumeration<InetAddress> inetAddress=netInterface.getInetAddresses();\n      while (inetAddress.hasMoreElements()) {\n        InetAddress currentAddress=inetAddress.nextElement();\n        if (currentAddress instanceof Inet4Address && !currentAddress.isLoopbackAddress()) {\n          ip=currentAddress.getHostAddress();\n          break;\n        }\n      }\n      if (StringUtils.isEmpty(ip)) {\n        throw new RuntimeException(\"cannot find available ip from\" + \" network interface \" + networkInterface);\n      }\n    }\n  }\n  this.overrideFromEnv(environment);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 182,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 191,
        "startColumnNumber" : 2,
        "endLineNumber" : 191,
        "endColumnNumber" : 48
      },
      "nodeContext" : "serverAddr=Objects.toString(serverAddr,\"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 191,
    "startColumnNumber" : 15,
    "endLineNumber" : 191,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ ]
}