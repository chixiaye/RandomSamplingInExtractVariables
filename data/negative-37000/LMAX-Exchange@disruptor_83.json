{
  "id" : 83,
  "expression" : "getWorkerSequences()",
  "projectName" : "LMAX-Exchange@disruptor",
  "commitID" : "6d8500d39ac15cc2fdbc3dbf2e3a97fbe425b8fa",
  "filePath" : "/src/main/java/com/lmax/disruptor/WorkerPool.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getWorkerSequences()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 94,
      "startColumnNumber" : 38,
      "endLineNumber" : 94,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 59
      },
      "nodeContext" : "ringBuffer.addGatingSequences(getWorkerSequences())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 60
      },
      "nodeContext" : "ringBuffer.addGatingSequences(getWorkerSequences());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 745,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ringBuffer=RingBuffer.createMultiProducer(eventFactory,1024,new BlockingWaitStrategy());\n  final SequenceBarrier barrier=ringBuffer.newBarrier();\n  final int numWorkers=workHandlers.length;\n  workProcessors=new WorkProcessor[numWorkers];\n  for (int i=0; i < numWorkers; i++) {\n    workProcessors[i]=new WorkProcessor<T>(ringBuffer,barrier,workHandlers[i],exceptionHandler,workSequence);\n  }\n  ringBuffer.addGatingSequences(getWorkerSequences());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1410,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Construct a work pool with an internal  {@link RingBuffer} for convenience.This option does not require  {@link RingBuffer#addGatingSequences(Sequence...)} to be called before the work pool is started.\n * @param eventFactory for filling the {@link RingBuffer}\n * @param exceptionHandler to callback when an error occurs which is not handled by the {@link WorkHandler}s.\n * @param workHandlers to distribute the work load across.\n */\npublic WorkerPool(final EventFactory<T> eventFactory,final ExceptionHandler exceptionHandler,final WorkHandler<T>... workHandlers){\n  ringBuffer=RingBuffer.createMultiProducer(eventFactory,1024,new BlockingWaitStrategy());\n  final SequenceBarrier barrier=ringBuffer.newBarrier();\n  final int numWorkers=workHandlers.length;\n  workProcessors=new WorkProcessor[numWorkers];\n  for (int i=0; i < numWorkers; i++) {\n    workProcessors[i]=new WorkProcessor<T>(ringBuffer,barrier,workHandlers[i],exceptionHandler,workSequence);\n  }\n  ringBuffer.addGatingSequences(getWorkerSequences());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 99,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 60
      },
      "nodeContext" : "ringBuffer.addGatingSequences(getWorkerSequences());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.lmax.disruptor.Sequence[]"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 94,
    "startColumnNumber" : 38,
    "endLineNumber" : 94,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ ]
}