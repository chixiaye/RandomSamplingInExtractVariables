{
  "id" : 255,
  "expression" : "4",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/core-java-modules/core-java-collections-list-2/src/test/java/com/baeldung/array/converter/ArrayConvertToListUnitTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "4",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 19,
      "startColumnNumber" : 40,
      "endLineNumber" : 19,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 19,
        "startColumnNumber" : 8,
        "endLineNumber" : 19,
        "endColumnNumber" : 42
      },
      "nodeContext" : "assertEquals(flowerList.size(),4)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 19,
        "startColumnNumber" : 8,
        "endLineNumber" : 19,
        "endColumnNumber" : 43
      },
      "nodeContext" : "assertEquals(flowerList.size(),4);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 424,
        "startLineNumber" : 14,
        "startColumnNumber" : 76,
        "endLineNumber" : 24,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String[] flowers={\"Ageratum\",\"Allium\",\"Poppy\",\"Catmint\"};\n  List<String> flowerList=Arrays.asList(flowers);\n  assertNotNull(flowerList);\n  assertEquals(flowerList.size(),4);\n  assertEquals(flowerList.get(0),\"Ageratum\");\n  assertEquals(flowerList.get(1),\"Allium\");\n  assertEquals(flowerList.get(2),\"Poppy\");\n  assertEquals(flowerList.get(3),\"Catmint\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 506,
        "startLineNumber" : 13,
        "startColumnNumber" : 4,
        "endLineNumber" : 24,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenAnStringArray_whenConvertArrayToList_thenListCreated(){\n  String[] flowers={\"Ageratum\",\"Allium\",\"Poppy\",\"Catmint\"};\n  List<String> flowerList=Arrays.asList(flowers);\n  assertNotNull(flowerList);\n  assertEquals(flowerList.size(),4);\n  assertEquals(flowerList.get(0),\"Ageratum\");\n  assertEquals(flowerList.get(1),\"Allium\");\n  assertEquals(flowerList.get(2),\"Poppy\");\n  assertEquals(flowerList.get(3),\"Catmint\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 19,
        "startColumnNumber" : 8,
        "endLineNumber" : 19,
        "endColumnNumber" : 43
      },
      "nodeContext" : "assertEquals(flowerList.size(),4);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 19,
    "startColumnNumber" : 40,
    "endLineNumber" : 19,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}