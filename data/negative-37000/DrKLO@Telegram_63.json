{
  "id" : 63,
  "expression" : "\"dispatch (pre)\" + op",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/androidx/recyclerview/widget/AdapterHelper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"dispatch (pre)\" + op",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 235,
      "startColumnNumber" : 23,
      "endLineNumber" : 235,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 235,
        "startColumnNumber" : 12,
        "endLineNumber" : 235,
        "endColumnNumber" : 45
      },
      "nodeContext" : "Log.d(TAG,\"dispatch (pre)\" + op)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 235,
        "startColumnNumber" : 12,
        "endLineNumber" : 235,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Log.d(TAG,\"dispatch (pre)\" + op);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 259,
        "startLineNumber" : 234,
        "startColumnNumber" : 19,
        "endLineNumber" : 241,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Log.d(TAG,\"dispatch (pre)\" + op);\n  Log.d(TAG,\"postponed state before:\");\n  for (  UpdateOp updateOp : mPostponedList) {\n    Log.d(TAG,updateOp.toString());\n  }\n  Log.d(TAG,\"----\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 270,
        "startLineNumber" : 234,
        "startColumnNumber" : 8,
        "endLineNumber" : 241,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (DEBUG) {\n  Log.d(TAG,\"dispatch (pre)\" + op);\n  Log.d(TAG,\"postponed state before:\");\n  for (  UpdateOp updateOp : mPostponedList) {\n    Log.d(TAG,updateOp.toString());\n  }\n  Log.d(TAG,\"----\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3464,
        "startLineNumber" : 227,
        "startColumnNumber" : 59,
        "endLineNumber" : 312,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (op.cmd == UpdateOp.ADD || op.cmd == UpdateOp.MOVE) {\n    throw new IllegalArgumentException(\"should not dispatch add or move for pre layout\");\n  }\n  if (DEBUG) {\n    Log.d(TAG,\"dispatch (pre)\" + op);\n    Log.d(TAG,\"postponed state before:\");\n    for (    UpdateOp updateOp : mPostponedList) {\n      Log.d(TAG,updateOp.toString());\n    }\n    Log.d(TAG,\"----\");\n  }\n  int tmpStart=updatePositionWithPostponed(op.positionStart,op.cmd);\n  if (DEBUG) {\n    Log.d(TAG,\"pos:\" + op.positionStart + \",updatedPos:\"+ tmpStart);\n  }\n  int tmpCnt=1;\n  int offsetPositionForPartial=op.positionStart;\n  final int positionMultiplier;\nswitch (op.cmd) {\ncase UpdateOp.UPDATE:    positionMultiplier=1;\n  break;\ncase UpdateOp.REMOVE:positionMultiplier=0;\nbreak;\ndefault:throw new IllegalArgumentException(\"op should be remove or update.\" + op);\n}\nfor (int p=1; p < op.itemCount; p++) {\nfinal int pos=op.positionStart + (positionMultiplier * p);\nint updatedPos=updatePositionWithPostponed(pos,op.cmd);\nif (DEBUG) {\nLog.d(TAG,\"pos:\" + pos + \",updatedPos:\"+ updatedPos);\n}\nboolean continuous=false;\nswitch (op.cmd) {\ncase UpdateOp.UPDATE:continuous=updatedPos == tmpStart + 1;\nbreak;\ncase UpdateOp.REMOVE:continuous=updatedPos == tmpStart;\nbreak;\n}\nif (continuous) {\ntmpCnt++;\n}\n else {\nUpdateOp tmp=obtainUpdateOp(op.cmd,tmpStart,tmpCnt,op.payload);\nif (DEBUG) {\nLog.d(TAG,\"need to dispatch separately \" + tmp);\n}\ndispatchFirstPassAndUpdateViewHolders(tmp,offsetPositionForPartial);\nrecycleUpdateOp(tmp);\nif (op.cmd == UpdateOp.UPDATE) {\noffsetPositionForPartial+=tmpCnt;\n}\ntmpStart=updatedPos;\ntmpCnt=1;\n}\n}\nObject payload=op.payload;\nrecycleUpdateOp(op);\nif (tmpCnt > 0) {\nUpdateOp tmp=obtainUpdateOp(op.cmd,tmpStart,tmpCnt,payload);\nif (DEBUG) {\nLog.d(TAG,\"dispatching:\" + tmp);\n}\ndispatchFirstPassAndUpdateViewHolders(tmp,offsetPositionForPartial);\nrecycleUpdateOp(tmp);\n}\nif (DEBUG) {\nLog.d(TAG,\"post dispatch\");\nLog.d(TAG,\"postponed state after:\");\nfor (UpdateOp updateOp : mPostponedList) {\nLog.d(TAG,updateOp.toString());\n}\nLog.d(TAG,\"----\");\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 367,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3519,
        "startLineNumber" : 227,
        "startColumnNumber" : 4,
        "endLineNumber" : 312,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void dispatchAndUpdateViewHolders(UpdateOp op){\n  if (op.cmd == UpdateOp.ADD || op.cmd == UpdateOp.MOVE) {\n    throw new IllegalArgumentException(\"should not dispatch add or move for pre layout\");\n  }\n  if (DEBUG) {\n    Log.d(TAG,\"dispatch (pre)\" + op);\n    Log.d(TAG,\"postponed state before:\");\n    for (    UpdateOp updateOp : mPostponedList) {\n      Log.d(TAG,updateOp.toString());\n    }\n    Log.d(TAG,\"----\");\n  }\n  int tmpStart=updatePositionWithPostponed(op.positionStart,op.cmd);\n  if (DEBUG) {\n    Log.d(TAG,\"pos:\" + op.positionStart + \",updatedPos:\"+ tmpStart);\n  }\n  int tmpCnt=1;\n  int offsetPositionForPartial=op.positionStart;\n  final int positionMultiplier;\nswitch (op.cmd) {\ncase UpdateOp.UPDATE:    positionMultiplier=1;\n  break;\ncase UpdateOp.REMOVE:positionMultiplier=0;\nbreak;\ndefault:throw new IllegalArgumentException(\"op should be remove or update.\" + op);\n}\nfor (int p=1; p < op.itemCount; p++) {\nfinal int pos=op.positionStart + (positionMultiplier * p);\nint updatedPos=updatePositionWithPostponed(pos,op.cmd);\nif (DEBUG) {\nLog.d(TAG,\"pos:\" + pos + \",updatedPos:\"+ updatedPos);\n}\nboolean continuous=false;\nswitch (op.cmd) {\ncase UpdateOp.UPDATE:continuous=updatedPos == tmpStart + 1;\nbreak;\ncase UpdateOp.REMOVE:continuous=updatedPos == tmpStart;\nbreak;\n}\nif (continuous) {\ntmpCnt++;\n}\n else {\nUpdateOp tmp=obtainUpdateOp(op.cmd,tmpStart,tmpCnt,op.payload);\nif (DEBUG) {\nLog.d(TAG,\"need to dispatch separately \" + tmp);\n}\ndispatchFirstPassAndUpdateViewHolders(tmp,offsetPositionForPartial);\nrecycleUpdateOp(tmp);\nif (op.cmd == UpdateOp.UPDATE) {\noffsetPositionForPartial+=tmpCnt;\n}\ntmpStart=updatedPos;\ntmpCnt=1;\n}\n}\nObject payload=op.payload;\nrecycleUpdateOp(op);\nif (tmpCnt > 0) {\nUpdateOp tmp=obtainUpdateOp(op.cmd,tmpStart,tmpCnt,payload);\nif (DEBUG) {\nLog.d(TAG,\"dispatching:\" + tmp);\n}\ndispatchFirstPassAndUpdateViewHolders(tmp,offsetPositionForPartial);\nrecycleUpdateOp(tmp);\n}\nif (DEBUG) {\nLog.d(TAG,\"post dispatch\");\nLog.d(TAG,\"postponed state after:\");\nfor (UpdateOp updateOp : mPostponedList) {\nLog.d(TAG,updateOp.toString());\n}\nLog.d(TAG,\"----\");\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 375,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 235,
        "startColumnNumber" : 12,
        "endLineNumber" : 235,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Log.d(TAG,\"dispatch (pre)\" + op);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 235,
    "startColumnNumber" : 23,
    "endLineNumber" : 235,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}