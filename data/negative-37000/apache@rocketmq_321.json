{
  "id" : 321,
  "expression" : "toTransfer - transferred",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/remoting/src/main/java/org/apache/rocketmq/remoting/netty/FileRegionEncoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "toTransfer - transferred",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 72,
      "startColumnNumber" : 16,
      "endLineNumber" : 72,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 72,
        "startColumnNumber" : 16,
        "endLineNumber" : 72,
        "endColumnNumber" : 45
      },
      "nodeContext" : "toTransfer - transferred <= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 72,
        "startColumnNumber" : 12,
        "endLineNumber" : 74,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (toTransfer - transferred <= 0) {\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 209,
        "startLineNumber" : 70,
        "startColumnNumber" : 21,
        "endLineNumber" : 76,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  long transferred=msg.transferred();\n  if (toTransfer - transferred <= 0) {\n    break;\n  }\n  msg.transferTo(writableByteChannel,transferred);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 222,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (true) {\n  long transferred=msg.transferred();\n  if (toTransfer - transferred <= 0) {\n    break;\n  }\n  msg.transferTo(writableByteChannel,transferred);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 740,
        "startLineNumber" : 50,
        "startColumnNumber" : 105,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  WritableByteChannel writableByteChannel=new WritableByteChannel(){\n    @Override public int write(    ByteBuffer src) throws IOException {\n      out.writeBytes(src);\n      return out.capacity();\n    }\n    @Override public boolean isOpen(){\n      return true;\n    }\n    @Override public void close() throws IOException {\n    }\n  }\n;\n  long toTransfer=msg.count();\n  while (true) {\n    long transferred=msg.transferred();\n    if (toTransfer - transferred <= 0) {\n      break;\n    }\n    msg.transferTo(writableByteChannel,transferred);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1383,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Encode a message into a  {@link io.netty.buffer.ByteBuf}. This method will be called for each written message that can be handled by this encoder.\n * @param ctx the {@link io.netty.channel.ChannelHandlerContext} which this {@link io.netty.handler.codec.MessageToByteEncoder} belongs to\n * @param msg the message to encode\n * @param out the {@link io.netty.buffer.ByteBuf} into which the encoded message will be written\n * @throws Exception is thrown if an error occurs\n */\n@Override protected void encode(ChannelHandlerContext ctx,FileRegion msg,final ByteBuf out) throws Exception {\n  WritableByteChannel writableByteChannel=new WritableByteChannel(){\n    @Override public int write(    ByteBuffer src) throws IOException {\n      out.writeBytes(src);\n      return out.capacity();\n    }\n    @Override public boolean isOpen(){\n      return true;\n    }\n    @Override public void close() throws IOException {\n    }\n  }\n;\n  long toTransfer=msg.count();\n  while (true) {\n    long transferred=msg.transferred();\n    if (toTransfer - transferred <= 0) {\n      break;\n    }\n    msg.transferTo(writableByteChannel,transferred);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 103,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 72,
        "startColumnNumber" : 16,
        "endLineNumber" : 72,
        "endColumnNumber" : 45
      },
      "nodeContext" : "toTransfer - transferred <= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 72,
    "startColumnNumber" : 16,
    "endLineNumber" : 72,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}