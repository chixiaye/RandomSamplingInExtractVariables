{
  "id" : 480,
  "expression" : "mockPullAndCacheBaseImageLayersStep.getFuture()",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-core/src/test/java/com/google/cloud/tools/jib/builder/steps/BuildImageStepTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mockPullAndCacheBaseImageLayersStep.getFuture()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 47,
      "startLineNumber" : 86,
      "startColumnNumber" : 17,
      "endLineNumber" : 86,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Mockito.when(mockPullAndCacheBaseImageLayersStep.getFuture())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 323,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Mockito.when(mockPullAndCacheBaseImageLayersStep.getFuture()).thenReturn(Futures.immediateFuture(ImmutableList.of(mockPullAndCacheBaseImageLayerStep,mockPullAndCacheBaseImageLayerStep,mockPullAndCacheBaseImageLayerStep)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 324,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Mockito.when(mockPullAndCacheBaseImageLayersStep.getFuture()).thenReturn(Futures.immediateFuture(ImmutableList.of(mockPullAndCacheBaseImageLayerStep,mockPullAndCacheBaseImageLayerStep,mockPullAndCacheBaseImageLayerStep)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2044,
        "startLineNumber" : 60,
        "startColumnNumber" : 45,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  testDescriptorDigest=DescriptorDigest.fromHash(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\");\n  CachedLayerWithMetadata testCachedLayer=new CachedLayerWithMetadata(new CachedLayer(Paths.get(\"\"),new BlobDescriptor(testDescriptorDigest),testDescriptorDigest),null);\n  Mockito.when(mockBuildConfiguration.getBuildLogger()).thenReturn(mockBuildLogger);\n  Mockito.when(mockBuildConfiguration.getContainerConfiguration()).thenReturn(mockContainerConfiguration);\n  Mockito.when(mockContainerConfiguration.getCreationTime()).thenReturn(Instant.EPOCH);\n  Mockito.when(mockContainerConfiguration.getEnvironmentMap()).thenReturn(ImmutableMap.of());\n  Mockito.when(mockContainerConfiguration.getProgramArguments()).thenReturn(ImmutableList.of());\n  Mockito.when(mockContainerConfiguration.getExposedPorts()).thenReturn(ImmutableList.of());\n  Mockito.when(mockContainerConfiguration.getEntrypoint()).thenReturn(ImmutableList.of());\n  Image<Layer> baseImage=Image.builder().addEnvironment(ImmutableMap.of(\"BASE_ENV\",\"BASE_ENV_VALUE\")).addLabel(\"base.label\",\"base.label.value\").build();\n  Mockito.when(mockPullAndCacheBaseImageLayerStep.getFuture()).thenReturn(Futures.immediateFuture(testCachedLayer));\n  Mockito.when(mockPullAndCacheBaseImageLayersStep.getFuture()).thenReturn(Futures.immediateFuture(ImmutableList.of(mockPullAndCacheBaseImageLayerStep,mockPullAndCacheBaseImageLayerStep,mockPullAndCacheBaseImageLayerStep)));\n  Mockito.when(mockPullBaseImageStep.getFuture()).thenReturn(Futures.immediateFuture(new PullBaseImageStep.BaseImageWithAuthorization(baseImage,null)));\n  Mockito.when(mockBuildAndCacheApplicationLayerStep.getFuture()).thenReturn(Futures.immediateFuture(testCachedLayer));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 196,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2097,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Before public void setUp() throws DigestException {\n  testDescriptorDigest=DescriptorDigest.fromHash(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\");\n  CachedLayerWithMetadata testCachedLayer=new CachedLayerWithMetadata(new CachedLayer(Paths.get(\"\"),new BlobDescriptor(testDescriptorDigest),testDescriptorDigest),null);\n  Mockito.when(mockBuildConfiguration.getBuildLogger()).thenReturn(mockBuildLogger);\n  Mockito.when(mockBuildConfiguration.getContainerConfiguration()).thenReturn(mockContainerConfiguration);\n  Mockito.when(mockContainerConfiguration.getCreationTime()).thenReturn(Instant.EPOCH);\n  Mockito.when(mockContainerConfiguration.getEnvironmentMap()).thenReturn(ImmutableMap.of());\n  Mockito.when(mockContainerConfiguration.getProgramArguments()).thenReturn(ImmutableList.of());\n  Mockito.when(mockContainerConfiguration.getExposedPorts()).thenReturn(ImmutableList.of());\n  Mockito.when(mockContainerConfiguration.getEntrypoint()).thenReturn(ImmutableList.of());\n  Image<Layer> baseImage=Image.builder().addEnvironment(ImmutableMap.of(\"BASE_ENV\",\"BASE_ENV_VALUE\")).addLabel(\"base.label\",\"base.label.value\").build();\n  Mockito.when(mockPullAndCacheBaseImageLayerStep.getFuture()).thenReturn(Futures.immediateFuture(testCachedLayer));\n  Mockito.when(mockPullAndCacheBaseImageLayersStep.getFuture()).thenReturn(Futures.immediateFuture(ImmutableList.of(mockPullAndCacheBaseImageLayerStep,mockPullAndCacheBaseImageLayerStep,mockPullAndCacheBaseImageLayerStep)));\n  Mockito.when(mockPullBaseImageStep.getFuture()).thenReturn(Futures.immediateFuture(new PullBaseImageStep.BaseImageWithAuthorization(baseImage,null)));\n  Mockito.when(mockBuildAndCacheApplicationLayerStep.getFuture()).thenReturn(Futures.immediateFuture(testCachedLayer));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 204,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Mockito.when(mockPullAndCacheBaseImageLayersStep.getFuture())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "com.google.cloud.tools.jib.builder.steps.ListenableFuture<com.google.cloud.tools.jib.builder.steps.ImmutableList<com.google.cloud.tools.jib.builder.steps.PullAndCacheBaseImageLayerStep>>"
  } ],
  "positionList" : [ {
    "charLength" : 47,
    "startLineNumber" : 86,
    "startColumnNumber" : 17,
    "endLineNumber" : 86,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ ]
}