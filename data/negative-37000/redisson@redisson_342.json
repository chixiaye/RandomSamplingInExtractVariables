{
  "id" : 342,
  "expression" : "args.length == 1",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson/src/main/java/org/redisson/liveobject/core/FieldAccessorInterceptor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "args.length == 1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 44,
      "startColumnNumber" : 50,
      "endLineNumber" : 44,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 44,
        "startColumnNumber" : 16,
        "endLineNumber" : 44,
        "endColumnNumber" : 66
      },
      "nodeContext" : "\"get\".equals(method.getName()) && args.length == 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 720,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 57,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"get\".equals(method.getName()) && args.length == 1) {\n  try {\n    return me.getClass().getMethod(\"get\" + name).invoke(me);\n  }\n catch (  NoSuchMethodException noSuchMethodException) {\n    throw new NoSuchFieldException((String)args[0]);\n  }\n}\n else if (\"set\".equals(method.getName()) && args.length == 2) {\n  Method m=ClassUtils.searchForMethod(me.getClass(),\"set\" + name,new Class[]{args[1].getClass()});\n  if (m != null) {\n    return m.invoke(me,args[1]);\n  }\n else {\n    throw new NoSuchFieldException((String)args[0]);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 107,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 854,
        "startLineNumber" : 42,
        "startColumnNumber" : 83,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String name=((String)args[0]).substring(0,1).toUpperCase() + ((String)args[0]).substring(1);\n  if (\"get\".equals(method.getName()) && args.length == 1) {\n    try {\n      return me.getClass().getMethod(\"get\" + name).invoke(me);\n    }\n catch (    NoSuchMethodException noSuchMethodException) {\n      throw new NoSuchFieldException((String)args[0]);\n    }\n  }\n else   if (\"set\".equals(method.getName()) && args.length == 2) {\n    Method m=ClassUtils.searchForMethod(me.getClass(),\"set\" + name,new Class[]{args[1].getClass()});\n    if (m != null) {\n      return m.invoke(me,args[1]);\n    }\n else {\n      throw new NoSuchFieldException((String)args[0]);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 929,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (args.length >= 1 && String.class.isAssignableFrom(args[0].getClass())) {\n  String name=((String)args[0]).substring(0,1).toUpperCase() + ((String)args[0]).substring(1);\n  if (\"get\".equals(method.getName()) && args.length == 1) {\n    try {\n      return me.getClass().getMethod(\"get\" + name).invoke(me);\n    }\n catch (    NoSuchMethodException noSuchMethodException) {\n      throw new NoSuchFieldException((String)args[0]);\n    }\n  }\n else   if (\"set\".equals(method.getName()) && args.length == 2) {\n    Method m=ClassUtils.searchForMethod(me.getClass(),\"set\" + name,new Class[]{args[1].getClass()});\n    if (m != null) {\n      return m.invoke(me,args[1]);\n    }\n else {\n      throw new NoSuchFieldException((String)args[0]);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 154,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1030,
        "startLineNumber" : 41,
        "startColumnNumber" : 23,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (args.length >= 1 && String.class.isAssignableFrom(args[0].getClass())) {\n    String name=((String)args[0]).substring(0,1).toUpperCase() + ((String)args[0]).substring(1);\n    if (\"get\".equals(method.getName()) && args.length == 1) {\n      try {\n        return me.getClass().getMethod(\"get\" + name).invoke(me);\n      }\n catch (      NoSuchMethodException noSuchMethodException) {\n        throw new NoSuchFieldException((String)args[0]);\n      }\n    }\n else     if (\"set\".equals(method.getName()) && args.length == 2) {\n      Method m=ClassUtils.searchForMethod(me.getClass(),\"set\" + name,new Class[]{args[1].getClass()});\n      if (m != null) {\n        return m.invoke(me,args[1]);\n      }\n else {\n        throw new NoSuchFieldException((String)args[0]);\n      }\n    }\n  }\n  throw new NoSuchMethodException(method.getName() + \" has wrong signature\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 164,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1267,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@RuntimeType public static Object intercept(@Origin Method method,@AllArguments Object[] args,@This Object me,@FieldValue(\"liveObjectLiveMap\") RMap<?,?> map) throws Exception {\n  if (args.length >= 1 && String.class.isAssignableFrom(args[0].getClass())) {\n    String name=((String)args[0]).substring(0,1).toUpperCase() + ((String)args[0]).substring(1);\n    if (\"get\".equals(method.getName()) && args.length == 1) {\n      try {\n        return me.getClass().getMethod(\"get\" + name).invoke(me);\n      }\n catch (      NoSuchMethodException noSuchMethodException) {\n        throw new NoSuchFieldException((String)args[0]);\n      }\n    }\n else     if (\"set\".equals(method.getName()) && args.length == 2) {\n      Method m=ClassUtils.searchForMethod(me.getClass(),\"set\" + name,new Class[]{args[1].getClass()});\n      if (m != null) {\n        return m.invoke(me,args[1]);\n      }\n else {\n        throw new NoSuchFieldException((String)args[0]);\n      }\n    }\n  }\n  throw new NoSuchMethodException(method.getName() + \" has wrong signature\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 204,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 44,
        "startColumnNumber" : 16,
        "endLineNumber" : 44,
        "endColumnNumber" : 66
      },
      "nodeContext" : "\"get\".equals(method.getName()) && args.length == 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 44,
    "startColumnNumber" : 50,
    "endLineNumber" : 44,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ ]
}