{
  "id" : 46,
  "expression" : "\"Command: %s failed with exit code %d\"",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/core/deployment/src/main/java/io/quarkus/deployment/pkg/steps/UpxCompressionBuildStep.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Command: %s failed with exit code %d\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 38,
      "startLineNumber" : 155,
      "startColumnNumber" : 31,
      "endLineNumber" : 155,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 155,
        "startColumnNumber" : 20,
        "endLineNumber" : 155,
        "endColumnNumber" : 111
      },
      "nodeContext" : "log.errorf(\"Command: %s failed with exit code %d\",String.join(\" \",commandLine),exitCode)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 155,
        "startColumnNumber" : 20,
        "endLineNumber" : 155,
        "endColumnNumber" : 112
      },
      "nodeContext" : "log.errorf(\"Command: %s failed with exit code %d\",String.join(\" \",commandLine),exitCode);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 154,
        "startColumnNumber" : 23,
        "endLineNumber" : 156,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  log.errorf(\"Command: %s failed with exit code %d\",String.join(\" \",commandLine),exitCode);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 355,
        "startLineNumber" : 151,
        "startColumnNumber" : 16,
        "endLineNumber" : 156,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (exitCode == 127) {\n  log.errorf(\"Command: %s failed because the builder image does not provide the `upx` executable\",String.join(\" \",commandLine));\n}\n else {\n  log.errorf(\"Command: %s failed with exit code %d\",String.join(\" \",commandLine),exitCode);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 417,
        "startLineNumber" : 150,
        "startColumnNumber" : 31,
        "endLineNumber" : 158,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (exitCode == 127) {\n    log.errorf(\"Command: %s failed because the builder image does not provide the `upx` executable\",String.join(\" \",commandLine));\n  }\n else {\n    log.errorf(\"Command: %s failed with exit code %d\",String.join(\" \",commandLine),exitCode);\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 436,
        "startLineNumber" : 150,
        "startColumnNumber" : 12,
        "endLineNumber" : 158,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (exitCode != 0) {\n  if (exitCode == 127) {\n    log.errorf(\"Command: %s failed because the builder image does not provide the `upx` executable\",String.join(\" \",commandLine));\n  }\n else {\n    log.errorf(\"Command: %s failed with exit code %d\",String.join(\" \",commandLine),exitCode);\n  }\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 638,
        "startLineNumber" : 146,
        "startColumnNumber" : 12,
        "endLineNumber" : 160,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  process=processBuilder.start();\n  ProcessUtil.streamOutputToSysOut(process);\n  final int exitCode=process.waitFor();\n  if (exitCode != 0) {\n    if (exitCode == 127) {\n      log.errorf(\"Command: %s failed because the builder image does not provide the `upx` executable\",String.join(\" \",commandLine));\n    }\n else {\n      log.errorf(\"Command: %s failed with exit code %d\",String.join(\" \",commandLine),exitCode);\n    }\n    return false;\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 888,
        "startLineNumber" : 146,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  process=processBuilder.start();\n  ProcessUtil.streamOutputToSysOut(process);\n  final int exitCode=process.waitFor();\n  if (exitCode != 0) {\n    if (exitCode == 127) {\n      log.errorf(\"Command: %s failed because the builder image does not provide the `upx` executable\",String.join(\" \",commandLine));\n    }\n else {\n      log.errorf(\"Command: %s failed with exit code %d\",String.join(\" \",commandLine),exitCode);\n    }\n    return false;\n  }\n  return true;\n}\n catch (Exception e) {\n  log.errorf(\"Command: \" + String.join(\" \",commandLine) + \" failed\",e);\n  return false;\n}\n finally {\n  if (process != null) {\n    process.destroy();\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 88,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3164,
        "startLineNumber" : 98,
        "startColumnNumber" : 99,
        "endLineNumber" : 169,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String level=getCompressionLevel(nativeConfig.compression.level.getAsInt());\n  List<String> extraArgs=nativeConfig.compression.additionalArgs.orElse(Collections.emptyList());\n  List<String> commandLine=new ArrayList<>();\n  ContainerRuntimeUtil.ContainerRuntime containerRuntime=nativeConfig.containerRuntime.orElseGet(ContainerRuntimeUtil::detectContainerRuntime);\n  commandLine.add(containerRuntime.getExecutableName());\n  commandLine.add(\"run\");\n  commandLine.add(\"--env\");\n  commandLine.add(\"LANG=C\");\n  commandLine.add(\"--rm\");\n  commandLine.add(\"--entrypoint=upx\");\n  String containerName=\"upx-\" + RandomStringUtils.random(5,true,false);\n  commandLine.add(\"--name\");\n  commandLine.add(containerName);\n  String volumeOutputPath=nativeImage.getPath().toFile().getParentFile().getAbsolutePath();\n  if (SystemUtils.IS_OS_WINDOWS) {\n    volumeOutputPath=FileUtil.translateToVolumePath(volumeOutputPath);\n  }\n else   if (SystemUtils.IS_OS_LINUX) {\n    String uid=getLinuxID(\"-ur\");\n    String gid=getLinuxID(\"-gr\");\n    if (uid != null && gid != null && !uid.isEmpty() && !gid.isEmpty()) {\n      Collections.addAll(commandLine,\"--user\",uid + \":\" + gid);\n      if (containerRuntime == ContainerRuntimeUtil.ContainerRuntime.PODMAN) {\n        commandLine.add(\"--userns=keep-id\");\n      }\n    }\n  }\n  Collections.addAll(commandLine,\"-v\",volumeOutputPath + \":\" + NativeImageBuildStep.CONTAINER_BUILD_VOLUME_PATH+ \":z\");\n  commandLine.add(nativeConfig.getEffectiveBuilderImage());\n  commandLine.add(level);\n  commandLine.addAll(extraArgs);\n  commandLine.add(nativeImage.getPath().toFile().getName());\n  log.infof(\"Compress native executable using: %s\",String.join(\" \",commandLine));\n  final ProcessBuilder processBuilder=new ProcessBuilder(commandLine).redirectOutput(ProcessBuilder.Redirect.PIPE).redirectError(ProcessBuilder.Redirect.PIPE);\n  Process process=null;\n  try {\n    process=processBuilder.start();\n    ProcessUtil.streamOutputToSysOut(process);\n    final int exitCode=process.waitFor();\n    if (exitCode != 0) {\n      if (exitCode == 127) {\n        log.errorf(\"Command: %s failed because the builder image does not provide the `upx` executable\",String.join(\" \",commandLine));\n      }\n else {\n        log.errorf(\"Command: %s failed with exit code %d\",String.join(\" \",commandLine),exitCode);\n      }\n      return false;\n    }\n    return true;\n  }\n catch (  Exception e) {\n    log.errorf(\"Command: \" + String.join(\" \",commandLine) + \" failed\",e);\n    return false;\n  }\n finally {\n    if (process != null) {\n      process.destroy();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 374,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3259,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 169,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private boolean runUpxInContainer(NativeImageBuildItem nativeImage,NativeConfig nativeConfig){\n  String level=getCompressionLevel(nativeConfig.compression.level.getAsInt());\n  List<String> extraArgs=nativeConfig.compression.additionalArgs.orElse(Collections.emptyList());\n  List<String> commandLine=new ArrayList<>();\n  ContainerRuntimeUtil.ContainerRuntime containerRuntime=nativeConfig.containerRuntime.orElseGet(ContainerRuntimeUtil::detectContainerRuntime);\n  commandLine.add(containerRuntime.getExecutableName());\n  commandLine.add(\"run\");\n  commandLine.add(\"--env\");\n  commandLine.add(\"LANG=C\");\n  commandLine.add(\"--rm\");\n  commandLine.add(\"--entrypoint=upx\");\n  String containerName=\"upx-\" + RandomStringUtils.random(5,true,false);\n  commandLine.add(\"--name\");\n  commandLine.add(containerName);\n  String volumeOutputPath=nativeImage.getPath().toFile().getParentFile().getAbsolutePath();\n  if (SystemUtils.IS_OS_WINDOWS) {\n    volumeOutputPath=FileUtil.translateToVolumePath(volumeOutputPath);\n  }\n else   if (SystemUtils.IS_OS_LINUX) {\n    String uid=getLinuxID(\"-ur\");\n    String gid=getLinuxID(\"-gr\");\n    if (uid != null && gid != null && !uid.isEmpty() && !gid.isEmpty()) {\n      Collections.addAll(commandLine,\"--user\",uid + \":\" + gid);\n      if (containerRuntime == ContainerRuntimeUtil.ContainerRuntime.PODMAN) {\n        commandLine.add(\"--userns=keep-id\");\n      }\n    }\n  }\n  Collections.addAll(commandLine,\"-v\",volumeOutputPath + \":\" + NativeImageBuildStep.CONTAINER_BUILD_VOLUME_PATH+ \":z\");\n  commandLine.add(nativeConfig.getEffectiveBuilderImage());\n  commandLine.add(level);\n  commandLine.addAll(extraArgs);\n  commandLine.add(nativeImage.getPath().toFile().getName());\n  log.infof(\"Compress native executable using: %s\",String.join(\" \",commandLine));\n  final ProcessBuilder processBuilder=new ProcessBuilder(commandLine).redirectOutput(ProcessBuilder.Redirect.PIPE).redirectError(ProcessBuilder.Redirect.PIPE);\n  Process process=null;\n  try {\n    process=processBuilder.start();\n    ProcessUtil.streamOutputToSysOut(process);\n    final int exitCode=process.waitFor();\n    if (exitCode != 0) {\n      if (exitCode == 127) {\n        log.errorf(\"Command: %s failed because the builder image does not provide the `upx` executable\",String.join(\" \",commandLine));\n      }\n else {\n        log.errorf(\"Command: %s failed with exit code %d\",String.join(\" \",commandLine),exitCode);\n      }\n      return false;\n    }\n    return true;\n  }\n catch (  Exception e) {\n    log.errorf(\"Command: \" + String.join(\" \",commandLine) + \" failed\",e);\n    return false;\n  }\n finally {\n    if (process != null) {\n      process.destroy();\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 386,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 155,
        "startColumnNumber" : 20,
        "endLineNumber" : 155,
        "endColumnNumber" : 112
      },
      "nodeContext" : "log.errorf(\"Command: %s failed with exit code %d\",String.join(\" \",commandLine),exitCode);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 7,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 38,
    "startLineNumber" : 155,
    "startColumnNumber" : 31,
    "endLineNumber" : 155,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ ]
}