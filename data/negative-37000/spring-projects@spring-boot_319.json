{
  "id" : 319,
  "expression" : "errorAttributes",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/web/reactive/error/DefaultErrorAttributes.java",
  "occurrences" : 10,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "errorAttributes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 77,
      "startColumnNumber" : 2,
      "endLineNumber" : 77,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 46
      },
      "nodeContext" : "errorAttributes.put(\"timestamp\",new Date())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 47
      },
      "nodeContext" : "errorAttributes.put(\"timestamp\",new Date());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 870,
        "startLineNumber" : 75,
        "startColumnNumber" : 30,
        "endLineNumber" : 98,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Map<String,Object> errorAttributes=new LinkedHashMap<>();\n  errorAttributes.put(\"timestamp\",new Date());\n  errorAttributes.put(\"path\",request.path());\n  Throwable error=getError(request);\n  if (this.includeException) {\n    errorAttributes.put(\"exception\",error.getClass().getName());\n  }\n  if (includeStackTrace) {\n    addStackTrace(errorAttributes,error);\n  }\n  addErrorMessage(errorAttributes,error);\n  if (error instanceof ResponseStatusException) {\n    HttpStatus errorStatus=((ResponseStatusException)error).getStatus();\n    errorAttributes.put(\"status\",errorStatus.value());\n    errorAttributes.put(\"error\",errorStatus.getReasonPhrase());\n  }\n else {\n    errorAttributes.put(\"status\",HttpStatus.INTERNAL_SERVER_ERROR.value());\n    errorAttributes.put(\"error\",HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());\n  }\n  return errorAttributes;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 980,
        "startLineNumber" : 73,
        "startColumnNumber" : 1,
        "endLineNumber" : 98,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public Map<String,Object> getErrorAttributes(ServerRequest request,boolean includeStackTrace){\n  Map<String,Object> errorAttributes=new LinkedHashMap<>();\n  errorAttributes.put(\"timestamp\",new Date());\n  errorAttributes.put(\"path\",request.path());\n  Throwable error=getError(request);\n  if (this.includeException) {\n    errorAttributes.put(\"exception\",error.getClass().getName());\n  }\n  if (includeStackTrace) {\n    addStackTrace(errorAttributes,error);\n  }\n  addErrorMessage(errorAttributes,error);\n  if (error instanceof ResponseStatusException) {\n    HttpStatus errorStatus=((ResponseStatusException)error).getStatus();\n    errorAttributes.put(\"status\",errorStatus.value());\n    errorAttributes.put(\"error\",errorStatus.getReasonPhrase());\n  }\n else {\n    errorAttributes.put(\"status\",HttpStatus.INTERNAL_SERVER_ERROR.value());\n    errorAttributes.put(\"error\",HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());\n  }\n  return errorAttributes;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 47
      },
      "nodeContext" : "errorAttributes.put(\"timestamp\",new Date());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  }, {
    "nodeContext" : "errorAttributes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 78,
      "startColumnNumber" : 2,
      "endLineNumber" : 78,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 78,
        "startColumnNumber" : 2,
        "endLineNumber" : 78,
        "endColumnNumber" : 45
      },
      "nodeContext" : "errorAttributes.put(\"path\",request.path())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 78,
        "startColumnNumber" : 2,
        "endLineNumber" : 78,
        "endColumnNumber" : 46
      },
      "nodeContext" : "errorAttributes.put(\"path\",request.path());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 870,
        "startLineNumber" : 75,
        "startColumnNumber" : 30,
        "endLineNumber" : 98,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Map<String,Object> errorAttributes=new LinkedHashMap<>();\n  errorAttributes.put(\"timestamp\",new Date());\n  errorAttributes.put(\"path\",request.path());\n  Throwable error=getError(request);\n  if (this.includeException) {\n    errorAttributes.put(\"exception\",error.getClass().getName());\n  }\n  if (includeStackTrace) {\n    addStackTrace(errorAttributes,error);\n  }\n  addErrorMessage(errorAttributes,error);\n  if (error instanceof ResponseStatusException) {\n    HttpStatus errorStatus=((ResponseStatusException)error).getStatus();\n    errorAttributes.put(\"status\",errorStatus.value());\n    errorAttributes.put(\"error\",errorStatus.getReasonPhrase());\n  }\n else {\n    errorAttributes.put(\"status\",HttpStatus.INTERNAL_SERVER_ERROR.value());\n    errorAttributes.put(\"error\",HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());\n  }\n  return errorAttributes;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 980,
        "startLineNumber" : 73,
        "startColumnNumber" : 1,
        "endLineNumber" : 98,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public Map<String,Object> getErrorAttributes(ServerRequest request,boolean includeStackTrace){\n  Map<String,Object> errorAttributes=new LinkedHashMap<>();\n  errorAttributes.put(\"timestamp\",new Date());\n  errorAttributes.put(\"path\",request.path());\n  Throwable error=getError(request);\n  if (this.includeException) {\n    errorAttributes.put(\"exception\",error.getClass().getName());\n  }\n  if (includeStackTrace) {\n    addStackTrace(errorAttributes,error);\n  }\n  addErrorMessage(errorAttributes,error);\n  if (error instanceof ResponseStatusException) {\n    HttpStatus errorStatus=((ResponseStatusException)error).getStatus();\n    errorAttributes.put(\"status\",errorStatus.value());\n    errorAttributes.put(\"error\",errorStatus.getReasonPhrase());\n  }\n else {\n    errorAttributes.put(\"status\",HttpStatus.INTERNAL_SERVER_ERROR.value());\n    errorAttributes.put(\"error\",HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());\n  }\n  return errorAttributes;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 78,
        "startColumnNumber" : 2,
        "endLineNumber" : 78,
        "endColumnNumber" : 46
      },
      "nodeContext" : "errorAttributes.put(\"path\",request.path());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  }, {
    "nodeContext" : "errorAttributes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 81,
      "startColumnNumber" : 3,
      "endLineNumber" : 81,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 81,
        "startColumnNumber" : 3,
        "endLineNumber" : 81,
        "endColumnNumber" : 63
      },
      "nodeContext" : "errorAttributes.put(\"exception\",error.getClass().getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 81,
        "startColumnNumber" : 3,
        "endLineNumber" : 81,
        "endColumnNumber" : 64
      },
      "nodeContext" : "errorAttributes.put(\"exception\",error.getClass().getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 80,
        "startColumnNumber" : 29,
        "endLineNumber" : 82,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  errorAttributes.put(\"exception\",error.getClass().getName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 80,
        "startColumnNumber" : 2,
        "endLineNumber" : 82,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (this.includeException) {\n  errorAttributes.put(\"exception\",error.getClass().getName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 870,
        "startLineNumber" : 75,
        "startColumnNumber" : 30,
        "endLineNumber" : 98,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Map<String,Object> errorAttributes=new LinkedHashMap<>();\n  errorAttributes.put(\"timestamp\",new Date());\n  errorAttributes.put(\"path\",request.path());\n  Throwable error=getError(request);\n  if (this.includeException) {\n    errorAttributes.put(\"exception\",error.getClass().getName());\n  }\n  if (includeStackTrace) {\n    addStackTrace(errorAttributes,error);\n  }\n  addErrorMessage(errorAttributes,error);\n  if (error instanceof ResponseStatusException) {\n    HttpStatus errorStatus=((ResponseStatusException)error).getStatus();\n    errorAttributes.put(\"status\",errorStatus.value());\n    errorAttributes.put(\"error\",errorStatus.getReasonPhrase());\n  }\n else {\n    errorAttributes.put(\"status\",HttpStatus.INTERNAL_SERVER_ERROR.value());\n    errorAttributes.put(\"error\",HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());\n  }\n  return errorAttributes;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 980,
        "startLineNumber" : 73,
        "startColumnNumber" : 1,
        "endLineNumber" : 98,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public Map<String,Object> getErrorAttributes(ServerRequest request,boolean includeStackTrace){\n  Map<String,Object> errorAttributes=new LinkedHashMap<>();\n  errorAttributes.put(\"timestamp\",new Date());\n  errorAttributes.put(\"path\",request.path());\n  Throwable error=getError(request);\n  if (this.includeException) {\n    errorAttributes.put(\"exception\",error.getClass().getName());\n  }\n  if (includeStackTrace) {\n    addStackTrace(errorAttributes,error);\n  }\n  addErrorMessage(errorAttributes,error);\n  if (error instanceof ResponseStatusException) {\n    HttpStatus errorStatus=((ResponseStatusException)error).getStatus();\n    errorAttributes.put(\"status\",errorStatus.value());\n    errorAttributes.put(\"error\",errorStatus.getReasonPhrase());\n  }\n else {\n    errorAttributes.put(\"status\",HttpStatus.INTERNAL_SERVER_ERROR.value());\n    errorAttributes.put(\"error\",HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());\n  }\n  return errorAttributes;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 81,
        "startColumnNumber" : 3,
        "endLineNumber" : 81,
        "endColumnNumber" : 64
      },
      "nodeContext" : "errorAttributes.put(\"exception\",error.getClass().getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  }, {
    "nodeContext" : "errorAttributes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 84,
      "startColumnNumber" : 17,
      "endLineNumber" : 84,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 84,
        "startColumnNumber" : 3,
        "endLineNumber" : 84,
        "endColumnNumber" : 40
      },
      "nodeContext" : "addStackTrace(errorAttributes,error)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 84,
        "startColumnNumber" : 3,
        "endLineNumber" : 84,
        "endColumnNumber" : 41
      },
      "nodeContext" : "addStackTrace(errorAttributes,error);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 83,
        "startColumnNumber" : 25,
        "endLineNumber" : 85,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  addStackTrace(errorAttributes,error);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 83,
        "startColumnNumber" : 2,
        "endLineNumber" : 85,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (includeStackTrace) {\n  addStackTrace(errorAttributes,error);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 870,
        "startLineNumber" : 75,
        "startColumnNumber" : 30,
        "endLineNumber" : 98,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Map<String,Object> errorAttributes=new LinkedHashMap<>();\n  errorAttributes.put(\"timestamp\",new Date());\n  errorAttributes.put(\"path\",request.path());\n  Throwable error=getError(request);\n  if (this.includeException) {\n    errorAttributes.put(\"exception\",error.getClass().getName());\n  }\n  if (includeStackTrace) {\n    addStackTrace(errorAttributes,error);\n  }\n  addErrorMessage(errorAttributes,error);\n  if (error instanceof ResponseStatusException) {\n    HttpStatus errorStatus=((ResponseStatusException)error).getStatus();\n    errorAttributes.put(\"status\",errorStatus.value());\n    errorAttributes.put(\"error\",errorStatus.getReasonPhrase());\n  }\n else {\n    errorAttributes.put(\"status\",HttpStatus.INTERNAL_SERVER_ERROR.value());\n    errorAttributes.put(\"error\",HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());\n  }\n  return errorAttributes;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 980,
        "startLineNumber" : 73,
        "startColumnNumber" : 1,
        "endLineNumber" : 98,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public Map<String,Object> getErrorAttributes(ServerRequest request,boolean includeStackTrace){\n  Map<String,Object> errorAttributes=new LinkedHashMap<>();\n  errorAttributes.put(\"timestamp\",new Date());\n  errorAttributes.put(\"path\",request.path());\n  Throwable error=getError(request);\n  if (this.includeException) {\n    errorAttributes.put(\"exception\",error.getClass().getName());\n  }\n  if (includeStackTrace) {\n    addStackTrace(errorAttributes,error);\n  }\n  addErrorMessage(errorAttributes,error);\n  if (error instanceof ResponseStatusException) {\n    HttpStatus errorStatus=((ResponseStatusException)error).getStatus();\n    errorAttributes.put(\"status\",errorStatus.value());\n    errorAttributes.put(\"error\",errorStatus.getReasonPhrase());\n  }\n else {\n    errorAttributes.put(\"status\",HttpStatus.INTERNAL_SERVER_ERROR.value());\n    errorAttributes.put(\"error\",HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());\n  }\n  return errorAttributes;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 84,
        "startColumnNumber" : 3,
        "endLineNumber" : 84,
        "endColumnNumber" : 41
      },
      "nodeContext" : "addStackTrace(errorAttributes,error);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  }, {
    "nodeContext" : "errorAttributes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 86,
      "startColumnNumber" : 18,
      "endLineNumber" : 86,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 86,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 41
      },
      "nodeContext" : "addErrorMessage(errorAttributes,error)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 86,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 42
      },
      "nodeContext" : "addErrorMessage(errorAttributes,error);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 870,
        "startLineNumber" : 75,
        "startColumnNumber" : 30,
        "endLineNumber" : 98,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Map<String,Object> errorAttributes=new LinkedHashMap<>();\n  errorAttributes.put(\"timestamp\",new Date());\n  errorAttributes.put(\"path\",request.path());\n  Throwable error=getError(request);\n  if (this.includeException) {\n    errorAttributes.put(\"exception\",error.getClass().getName());\n  }\n  if (includeStackTrace) {\n    addStackTrace(errorAttributes,error);\n  }\n  addErrorMessage(errorAttributes,error);\n  if (error instanceof ResponseStatusException) {\n    HttpStatus errorStatus=((ResponseStatusException)error).getStatus();\n    errorAttributes.put(\"status\",errorStatus.value());\n    errorAttributes.put(\"error\",errorStatus.getReasonPhrase());\n  }\n else {\n    errorAttributes.put(\"status\",HttpStatus.INTERNAL_SERVER_ERROR.value());\n    errorAttributes.put(\"error\",HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());\n  }\n  return errorAttributes;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 980,
        "startLineNumber" : 73,
        "startColumnNumber" : 1,
        "endLineNumber" : 98,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public Map<String,Object> getErrorAttributes(ServerRequest request,boolean includeStackTrace){\n  Map<String,Object> errorAttributes=new LinkedHashMap<>();\n  errorAttributes.put(\"timestamp\",new Date());\n  errorAttributes.put(\"path\",request.path());\n  Throwable error=getError(request);\n  if (this.includeException) {\n    errorAttributes.put(\"exception\",error.getClass().getName());\n  }\n  if (includeStackTrace) {\n    addStackTrace(errorAttributes,error);\n  }\n  addErrorMessage(errorAttributes,error);\n  if (error instanceof ResponseStatusException) {\n    HttpStatus errorStatus=((ResponseStatusException)error).getStatus();\n    errorAttributes.put(\"status\",errorStatus.value());\n    errorAttributes.put(\"error\",errorStatus.getReasonPhrase());\n  }\n else {\n    errorAttributes.put(\"status\",HttpStatus.INTERNAL_SERVER_ERROR.value());\n    errorAttributes.put(\"error\",HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());\n  }\n  return errorAttributes;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 86,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 42
      },
      "nodeContext" : "addErrorMessage(errorAttributes,error);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  }, {
    "nodeContext" : "errorAttributes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 89,
      "startColumnNumber" : 3,
      "endLineNumber" : 89,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 89,
        "startColumnNumber" : 3,
        "endLineNumber" : 89,
        "endColumnNumber" : 53
      },
      "nodeContext" : "errorAttributes.put(\"status\",errorStatus.value())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 89,
        "startColumnNumber" : 3,
        "endLineNumber" : 89,
        "endColumnNumber" : 54
      },
      "nodeContext" : "errorAttributes.put(\"status\",errorStatus.value());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 87,
        "startColumnNumber" : 48,
        "endLineNumber" : 91,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  HttpStatus errorStatus=((ResponseStatusException)error).getStatus();\n  errorAttributes.put(\"status\",errorStatus.value());\n  errorAttributes.put(\"error\",errorStatus.getReasonPhrase());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 424,
        "startLineNumber" : 87,
        "startColumnNumber" : 2,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (error instanceof ResponseStatusException) {\n  HttpStatus errorStatus=((ResponseStatusException)error).getStatus();\n  errorAttributes.put(\"status\",errorStatus.value());\n  errorAttributes.put(\"error\",errorStatus.getReasonPhrase());\n}\n else {\n  errorAttributes.put(\"status\",HttpStatus.INTERNAL_SERVER_ERROR.value());\n  errorAttributes.put(\"error\",HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 870,
        "startLineNumber" : 75,
        "startColumnNumber" : 30,
        "endLineNumber" : 98,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Map<String,Object> errorAttributes=new LinkedHashMap<>();\n  errorAttributes.put(\"timestamp\",new Date());\n  errorAttributes.put(\"path\",request.path());\n  Throwable error=getError(request);\n  if (this.includeException) {\n    errorAttributes.put(\"exception\",error.getClass().getName());\n  }\n  if (includeStackTrace) {\n    addStackTrace(errorAttributes,error);\n  }\n  addErrorMessage(errorAttributes,error);\n  if (error instanceof ResponseStatusException) {\n    HttpStatus errorStatus=((ResponseStatusException)error).getStatus();\n    errorAttributes.put(\"status\",errorStatus.value());\n    errorAttributes.put(\"error\",errorStatus.getReasonPhrase());\n  }\n else {\n    errorAttributes.put(\"status\",HttpStatus.INTERNAL_SERVER_ERROR.value());\n    errorAttributes.put(\"error\",HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());\n  }\n  return errorAttributes;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 980,
        "startLineNumber" : 73,
        "startColumnNumber" : 1,
        "endLineNumber" : 98,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public Map<String,Object> getErrorAttributes(ServerRequest request,boolean includeStackTrace){\n  Map<String,Object> errorAttributes=new LinkedHashMap<>();\n  errorAttributes.put(\"timestamp\",new Date());\n  errorAttributes.put(\"path\",request.path());\n  Throwable error=getError(request);\n  if (this.includeException) {\n    errorAttributes.put(\"exception\",error.getClass().getName());\n  }\n  if (includeStackTrace) {\n    addStackTrace(errorAttributes,error);\n  }\n  addErrorMessage(errorAttributes,error);\n  if (error instanceof ResponseStatusException) {\n    HttpStatus errorStatus=((ResponseStatusException)error).getStatus();\n    errorAttributes.put(\"status\",errorStatus.value());\n    errorAttributes.put(\"error\",errorStatus.getReasonPhrase());\n  }\n else {\n    errorAttributes.put(\"status\",HttpStatus.INTERNAL_SERVER_ERROR.value());\n    errorAttributes.put(\"error\",HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());\n  }\n  return errorAttributes;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 89,
        "startColumnNumber" : 3,
        "endLineNumber" : 89,
        "endColumnNumber" : 54
      },
      "nodeContext" : "errorAttributes.put(\"status\",errorStatus.value());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  }, {
    "nodeContext" : "errorAttributes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 90,
      "startColumnNumber" : 3,
      "endLineNumber" : 90,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 90,
        "startColumnNumber" : 3,
        "endLineNumber" : 90,
        "endColumnNumber" : 62
      },
      "nodeContext" : "errorAttributes.put(\"error\",errorStatus.getReasonPhrase())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 90,
        "startColumnNumber" : 3,
        "endLineNumber" : 90,
        "endColumnNumber" : 63
      },
      "nodeContext" : "errorAttributes.put(\"error\",errorStatus.getReasonPhrase());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 87,
        "startColumnNumber" : 48,
        "endLineNumber" : 91,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  HttpStatus errorStatus=((ResponseStatusException)error).getStatus();\n  errorAttributes.put(\"status\",errorStatus.value());\n  errorAttributes.put(\"error\",errorStatus.getReasonPhrase());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 424,
        "startLineNumber" : 87,
        "startColumnNumber" : 2,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (error instanceof ResponseStatusException) {\n  HttpStatus errorStatus=((ResponseStatusException)error).getStatus();\n  errorAttributes.put(\"status\",errorStatus.value());\n  errorAttributes.put(\"error\",errorStatus.getReasonPhrase());\n}\n else {\n  errorAttributes.put(\"status\",HttpStatus.INTERNAL_SERVER_ERROR.value());\n  errorAttributes.put(\"error\",HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 870,
        "startLineNumber" : 75,
        "startColumnNumber" : 30,
        "endLineNumber" : 98,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Map<String,Object> errorAttributes=new LinkedHashMap<>();\n  errorAttributes.put(\"timestamp\",new Date());\n  errorAttributes.put(\"path\",request.path());\n  Throwable error=getError(request);\n  if (this.includeException) {\n    errorAttributes.put(\"exception\",error.getClass().getName());\n  }\n  if (includeStackTrace) {\n    addStackTrace(errorAttributes,error);\n  }\n  addErrorMessage(errorAttributes,error);\n  if (error instanceof ResponseStatusException) {\n    HttpStatus errorStatus=((ResponseStatusException)error).getStatus();\n    errorAttributes.put(\"status\",errorStatus.value());\n    errorAttributes.put(\"error\",errorStatus.getReasonPhrase());\n  }\n else {\n    errorAttributes.put(\"status\",HttpStatus.INTERNAL_SERVER_ERROR.value());\n    errorAttributes.put(\"error\",HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());\n  }\n  return errorAttributes;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 980,
        "startLineNumber" : 73,
        "startColumnNumber" : 1,
        "endLineNumber" : 98,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public Map<String,Object> getErrorAttributes(ServerRequest request,boolean includeStackTrace){\n  Map<String,Object> errorAttributes=new LinkedHashMap<>();\n  errorAttributes.put(\"timestamp\",new Date());\n  errorAttributes.put(\"path\",request.path());\n  Throwable error=getError(request);\n  if (this.includeException) {\n    errorAttributes.put(\"exception\",error.getClass().getName());\n  }\n  if (includeStackTrace) {\n    addStackTrace(errorAttributes,error);\n  }\n  addErrorMessage(errorAttributes,error);\n  if (error instanceof ResponseStatusException) {\n    HttpStatus errorStatus=((ResponseStatusException)error).getStatus();\n    errorAttributes.put(\"status\",errorStatus.value());\n    errorAttributes.put(\"error\",errorStatus.getReasonPhrase());\n  }\n else {\n    errorAttributes.put(\"status\",HttpStatus.INTERNAL_SERVER_ERROR.value());\n    errorAttributes.put(\"error\",HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());\n  }\n  return errorAttributes;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 90,
        "startColumnNumber" : 3,
        "endLineNumber" : 90,
        "endColumnNumber" : 63
      },
      "nodeContext" : "errorAttributes.put(\"error\",errorStatus.getReasonPhrase());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  }, {
    "nodeContext" : "errorAttributes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 93,
      "startColumnNumber" : 3,
      "endLineNumber" : 93,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 93,
        "startColumnNumber" : 3,
        "endLineNumber" : 93,
        "endColumnNumber" : 74
      },
      "nodeContext" : "errorAttributes.put(\"status\",HttpStatus.INTERNAL_SERVER_ERROR.value())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 93,
        "startColumnNumber" : 3,
        "endLineNumber" : 93,
        "endColumnNumber" : 75
      },
      "nodeContext" : "errorAttributes.put(\"status\",HttpStatus.INTERNAL_SERVER_ERROR.value());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 171,
        "startLineNumber" : 92,
        "startColumnNumber" : 7,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  errorAttributes.put(\"status\",HttpStatus.INTERNAL_SERVER_ERROR.value());\n  errorAttributes.put(\"error\",HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 424,
        "startLineNumber" : 87,
        "startColumnNumber" : 2,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (error instanceof ResponseStatusException) {\n  HttpStatus errorStatus=((ResponseStatusException)error).getStatus();\n  errorAttributes.put(\"status\",errorStatus.value());\n  errorAttributes.put(\"error\",errorStatus.getReasonPhrase());\n}\n else {\n  errorAttributes.put(\"status\",HttpStatus.INTERNAL_SERVER_ERROR.value());\n  errorAttributes.put(\"error\",HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 870,
        "startLineNumber" : 75,
        "startColumnNumber" : 30,
        "endLineNumber" : 98,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Map<String,Object> errorAttributes=new LinkedHashMap<>();\n  errorAttributes.put(\"timestamp\",new Date());\n  errorAttributes.put(\"path\",request.path());\n  Throwable error=getError(request);\n  if (this.includeException) {\n    errorAttributes.put(\"exception\",error.getClass().getName());\n  }\n  if (includeStackTrace) {\n    addStackTrace(errorAttributes,error);\n  }\n  addErrorMessage(errorAttributes,error);\n  if (error instanceof ResponseStatusException) {\n    HttpStatus errorStatus=((ResponseStatusException)error).getStatus();\n    errorAttributes.put(\"status\",errorStatus.value());\n    errorAttributes.put(\"error\",errorStatus.getReasonPhrase());\n  }\n else {\n    errorAttributes.put(\"status\",HttpStatus.INTERNAL_SERVER_ERROR.value());\n    errorAttributes.put(\"error\",HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());\n  }\n  return errorAttributes;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 980,
        "startLineNumber" : 73,
        "startColumnNumber" : 1,
        "endLineNumber" : 98,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public Map<String,Object> getErrorAttributes(ServerRequest request,boolean includeStackTrace){\n  Map<String,Object> errorAttributes=new LinkedHashMap<>();\n  errorAttributes.put(\"timestamp\",new Date());\n  errorAttributes.put(\"path\",request.path());\n  Throwable error=getError(request);\n  if (this.includeException) {\n    errorAttributes.put(\"exception\",error.getClass().getName());\n  }\n  if (includeStackTrace) {\n    addStackTrace(errorAttributes,error);\n  }\n  addErrorMessage(errorAttributes,error);\n  if (error instanceof ResponseStatusException) {\n    HttpStatus errorStatus=((ResponseStatusException)error).getStatus();\n    errorAttributes.put(\"status\",errorStatus.value());\n    errorAttributes.put(\"error\",errorStatus.getReasonPhrase());\n  }\n else {\n    errorAttributes.put(\"status\",HttpStatus.INTERNAL_SERVER_ERROR.value());\n    errorAttributes.put(\"error\",HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());\n  }\n  return errorAttributes;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 93,
        "startColumnNumber" : 3,
        "endLineNumber" : 93,
        "endColumnNumber" : 75
      },
      "nodeContext" : "errorAttributes.put(\"status\",HttpStatus.INTERNAL_SERVER_ERROR.value());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  }, {
    "nodeContext" : "errorAttributes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 94,
      "startColumnNumber" : 3,
      "endLineNumber" : 94,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 94,
        "startColumnNumber" : 3,
        "endLineNumber" : 95,
        "endColumnNumber" : 56
      },
      "nodeContext" : "errorAttributes.put(\"error\",HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 94,
        "startColumnNumber" : 3,
        "endLineNumber" : 95,
        "endColumnNumber" : 57
      },
      "nodeContext" : "errorAttributes.put(\"error\",HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 171,
        "startLineNumber" : 92,
        "startColumnNumber" : 7,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  errorAttributes.put(\"status\",HttpStatus.INTERNAL_SERVER_ERROR.value());\n  errorAttributes.put(\"error\",HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 424,
        "startLineNumber" : 87,
        "startColumnNumber" : 2,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (error instanceof ResponseStatusException) {\n  HttpStatus errorStatus=((ResponseStatusException)error).getStatus();\n  errorAttributes.put(\"status\",errorStatus.value());\n  errorAttributes.put(\"error\",errorStatus.getReasonPhrase());\n}\n else {\n  errorAttributes.put(\"status\",HttpStatus.INTERNAL_SERVER_ERROR.value());\n  errorAttributes.put(\"error\",HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 870,
        "startLineNumber" : 75,
        "startColumnNumber" : 30,
        "endLineNumber" : 98,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Map<String,Object> errorAttributes=new LinkedHashMap<>();\n  errorAttributes.put(\"timestamp\",new Date());\n  errorAttributes.put(\"path\",request.path());\n  Throwable error=getError(request);\n  if (this.includeException) {\n    errorAttributes.put(\"exception\",error.getClass().getName());\n  }\n  if (includeStackTrace) {\n    addStackTrace(errorAttributes,error);\n  }\n  addErrorMessage(errorAttributes,error);\n  if (error instanceof ResponseStatusException) {\n    HttpStatus errorStatus=((ResponseStatusException)error).getStatus();\n    errorAttributes.put(\"status\",errorStatus.value());\n    errorAttributes.put(\"error\",errorStatus.getReasonPhrase());\n  }\n else {\n    errorAttributes.put(\"status\",HttpStatus.INTERNAL_SERVER_ERROR.value());\n    errorAttributes.put(\"error\",HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());\n  }\n  return errorAttributes;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 980,
        "startLineNumber" : 73,
        "startColumnNumber" : 1,
        "endLineNumber" : 98,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public Map<String,Object> getErrorAttributes(ServerRequest request,boolean includeStackTrace){\n  Map<String,Object> errorAttributes=new LinkedHashMap<>();\n  errorAttributes.put(\"timestamp\",new Date());\n  errorAttributes.put(\"path\",request.path());\n  Throwable error=getError(request);\n  if (this.includeException) {\n    errorAttributes.put(\"exception\",error.getClass().getName());\n  }\n  if (includeStackTrace) {\n    addStackTrace(errorAttributes,error);\n  }\n  addErrorMessage(errorAttributes,error);\n  if (error instanceof ResponseStatusException) {\n    HttpStatus errorStatus=((ResponseStatusException)error).getStatus();\n    errorAttributes.put(\"status\",errorStatus.value());\n    errorAttributes.put(\"error\",errorStatus.getReasonPhrase());\n  }\n else {\n    errorAttributes.put(\"status\",HttpStatus.INTERNAL_SERVER_ERROR.value());\n    errorAttributes.put(\"error\",HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());\n  }\n  return errorAttributes;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 94,
        "startColumnNumber" : 3,
        "endLineNumber" : 95,
        "endColumnNumber" : 56
      },
      "nodeContext" : "errorAttributes.put(\"error\",HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  }, {
    "nodeContext" : "errorAttributes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 97,
      "startColumnNumber" : 9,
      "endLineNumber" : 97,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 97,
        "startColumnNumber" : 2,
        "endLineNumber" : 97,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return errorAttributes;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 870,
        "startLineNumber" : 75,
        "startColumnNumber" : 30,
        "endLineNumber" : 98,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Map<String,Object> errorAttributes=new LinkedHashMap<>();\n  errorAttributes.put(\"timestamp\",new Date());\n  errorAttributes.put(\"path\",request.path());\n  Throwable error=getError(request);\n  if (this.includeException) {\n    errorAttributes.put(\"exception\",error.getClass().getName());\n  }\n  if (includeStackTrace) {\n    addStackTrace(errorAttributes,error);\n  }\n  addErrorMessage(errorAttributes,error);\n  if (error instanceof ResponseStatusException) {\n    HttpStatus errorStatus=((ResponseStatusException)error).getStatus();\n    errorAttributes.put(\"status\",errorStatus.value());\n    errorAttributes.put(\"error\",errorStatus.getReasonPhrase());\n  }\n else {\n    errorAttributes.put(\"status\",HttpStatus.INTERNAL_SERVER_ERROR.value());\n    errorAttributes.put(\"error\",HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());\n  }\n  return errorAttributes;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 980,
        "startLineNumber" : 73,
        "startColumnNumber" : 1,
        "endLineNumber" : 98,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public Map<String,Object> getErrorAttributes(ServerRequest request,boolean includeStackTrace){\n  Map<String,Object> errorAttributes=new LinkedHashMap<>();\n  errorAttributes.put(\"timestamp\",new Date());\n  errorAttributes.put(\"path\",request.path());\n  Throwable error=getError(request);\n  if (this.includeException) {\n    errorAttributes.put(\"exception\",error.getClass().getName());\n  }\n  if (includeStackTrace) {\n    addStackTrace(errorAttributes,error);\n  }\n  addErrorMessage(errorAttributes,error);\n  if (error instanceof ResponseStatusException) {\n    HttpStatus errorStatus=((ResponseStatusException)error).getStatus();\n    errorAttributes.put(\"status\",errorStatus.value());\n    errorAttributes.put(\"error\",errorStatus.getReasonPhrase());\n  }\n else {\n    errorAttributes.put(\"status\",HttpStatus.INTERNAL_SERVER_ERROR.value());\n    errorAttributes.put(\"error\",HttpStatus.INTERNAL_SERVER_ERROR.getReasonPhrase());\n  }\n  return errorAttributes;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 97,
        "startColumnNumber" : 2,
        "endLineNumber" : 97,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return errorAttributes;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 77,
    "startColumnNumber" : 2,
    "endLineNumber" : 77,
    "endColumnNumber" : 17
  }, {
    "charLength" : 15,
    "startLineNumber" : 78,
    "startColumnNumber" : 2,
    "endLineNumber" : 78,
    "endColumnNumber" : 17
  }, {
    "charLength" : 15,
    "startLineNumber" : 81,
    "startColumnNumber" : 3,
    "endLineNumber" : 81,
    "endColumnNumber" : 18
  }, {
    "charLength" : 15,
    "startLineNumber" : 84,
    "startColumnNumber" : 17,
    "endLineNumber" : 84,
    "endColumnNumber" : 32
  }, {
    "charLength" : 15,
    "startLineNumber" : 86,
    "startColumnNumber" : 18,
    "endLineNumber" : 86,
    "endColumnNumber" : 33
  }, {
    "charLength" : 15,
    "startLineNumber" : 89,
    "startColumnNumber" : 3,
    "endLineNumber" : 89,
    "endColumnNumber" : 18
  }, {
    "charLength" : 15,
    "startLineNumber" : 90,
    "startColumnNumber" : 3,
    "endLineNumber" : 90,
    "endColumnNumber" : 18
  }, {
    "charLength" : 15,
    "startLineNumber" : 93,
    "startColumnNumber" : 3,
    "endLineNumber" : 93,
    "endColumnNumber" : 18
  }, {
    "charLength" : 15,
    "startLineNumber" : 94,
    "startColumnNumber" : 3,
    "endLineNumber" : 94,
    "endColumnNumber" : 18
  }, {
    "charLength" : 15,
    "startLineNumber" : 97,
    "startColumnNumber" : 9,
    "endLineNumber" : 97,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 1
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 1
  } ]
}