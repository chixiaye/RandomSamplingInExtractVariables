{
  "id" : 328,
  "expression" : "beginStartTime",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/remoting/src/main/java/org/apache/rocketmq/remoting/transport/rocketmq/NettyRemotingClient.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "beginStartTime",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 187,
      "startColumnNumber" : 61,
      "endLineNumber" : 187,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 187,
        "startColumnNumber" : 32,
        "endLineNumber" : 187,
        "endColumnNumber" : 75
      },
      "nodeContext" : "System.currentTimeMillis() - beginStartTime",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 187,
        "startColumnNumber" : 21,
        "endLineNumber" : 187,
        "endColumnNumber" : 75
      },
      "nodeContext" : "costTime=System.currentTimeMillis() - beginStartTime",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 187,
        "startColumnNumber" : 16,
        "endLineNumber" : 187,
        "endColumnNumber" : 76
      },
      "nodeContext" : "long costTime=System.currentTimeMillis() - beginStartTime;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 401,
        "startLineNumber" : 186,
        "startColumnNumber" : 16,
        "endLineNumber" : 193,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  long costTime=System.currentTimeMillis() - beginStartTime;\n  if (timeoutMillis < costTime) {\n    throw new RemotingTimeoutException(\"invokeSync call timeout\");\n  }\n  RemotingCommand response=this.invokeSyncWithInterceptor(remotingChannel,request,timeoutMillis - costTime);\n  return response;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1361,
        "startLineNumber" : 186,
        "startColumnNumber" : 12,
        "endLineNumber" : 207,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  long costTime=System.currentTimeMillis() - beginStartTime;\n  if (timeoutMillis < costTime) {\n    throw new RemotingTimeoutException(\"invokeSync call timeout\");\n  }\n  RemotingCommand response=this.invokeSyncWithInterceptor(remotingChannel,request,timeoutMillis - costTime);\n  return response;\n}\n catch (RemotingException remotingException) {\n  if (remotingException instanceof RemotingSendRequestException) {\n    log.warn(\"invokeSync: send request exception, so close the channel[{}]\",addr);\n    this.closeRemotingChannel(addr,remotingChannel);\n    throw (RemotingSendRequestException)remotingException;\n  }\n  if (remotingException instanceof RemotingTimeoutException) {\n    if (nettyClientConfig.isClientCloseSocketIfTimeout()) {\n      this.closeRemotingChannel(addr,remotingChannel);\n      log.warn(\"invokeSync: close socket because of timeout, {}ms, {}\",timeoutMillis,addr);\n    }\n    log.warn(\"invokeSync: wait response timeout exception, the channel[{}]\",addr);\n    throw (RemotingTimeoutException)remotingException;\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 100,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1385,
        "startLineNumber" : 185,
        "startColumnNumber" : 67,
        "endLineNumber" : 208,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    long costTime=System.currentTimeMillis() - beginStartTime;\n    if (timeoutMillis < costTime) {\n      throw new RemotingTimeoutException(\"invokeSync call timeout\");\n    }\n    RemotingCommand response=this.invokeSyncWithInterceptor(remotingChannel,request,timeoutMillis - costTime);\n    return response;\n  }\n catch (  RemotingException remotingException) {\n    if (remotingException instanceof RemotingSendRequestException) {\n      log.warn(\"invokeSync: send request exception, so close the channel[{}]\",addr);\n      this.closeRemotingChannel(addr,remotingChannel);\n      throw (RemotingSendRequestException)remotingException;\n    }\n    if (remotingException instanceof RemotingTimeoutException) {\n      if (nettyClientConfig.isClientCloseSocketIfTimeout()) {\n        this.closeRemotingChannel(addr,remotingChannel);\n        log.warn(\"invokeSync: close socket because of timeout, {}ms, {}\",timeoutMillis,addr);\n      }\n      log.warn(\"invokeSync: wait response timeout exception, the channel[{}]\",addr);\n      throw (RemotingTimeoutException)remotingException;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1577,
        "startLineNumber" : 185,
        "startColumnNumber" : 8,
        "endLineNumber" : 211,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (remotingChannel != null && remotingChannel.isActive()) {\n  try {\n    long costTime=System.currentTimeMillis() - beginStartTime;\n    if (timeoutMillis < costTime) {\n      throw new RemotingTimeoutException(\"invokeSync call timeout\");\n    }\n    RemotingCommand response=this.invokeSyncWithInterceptor(remotingChannel,request,timeoutMillis - costTime);\n    return response;\n  }\n catch (  RemotingException remotingException) {\n    if (remotingException instanceof RemotingSendRequestException) {\n      log.warn(\"invokeSync: send request exception, so close the channel[{}]\",addr);\n      this.closeRemotingChannel(addr,remotingChannel);\n      throw (RemotingSendRequestException)remotingException;\n    }\n    if (remotingException instanceof RemotingTimeoutException) {\n      if (nettyClientConfig.isClientCloseSocketIfTimeout()) {\n        this.closeRemotingChannel(addr,remotingChannel);\n        log.warn(\"invokeSync: close socket because of timeout, {}ms, {}\",timeoutMillis,addr);\n      }\n      log.warn(\"invokeSync: wait response timeout exception, the channel[{}]\",addr);\n      throw (RemotingTimeoutException)remotingException;\n    }\n  }\n}\n else {\n  this.closeRemotingChannel(addr,remotingChannel);\n  throw new RemotingConnectException(addr);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 121,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1767,
        "startLineNumber" : 182,
        "startColumnNumber" : 118,
        "endLineNumber" : 213,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long beginStartTime=System.currentTimeMillis();\n  final RemotingChannel remotingChannel=this.getAndCreateChannel(addr,timeoutMillis);\n  if (remotingChannel != null && remotingChannel.isActive()) {\n    try {\n      long costTime=System.currentTimeMillis() - beginStartTime;\n      if (timeoutMillis < costTime) {\n        throw new RemotingTimeoutException(\"invokeSync call timeout\");\n      }\n      RemotingCommand response=this.invokeSyncWithInterceptor(remotingChannel,request,timeoutMillis - costTime);\n      return response;\n    }\n catch (    RemotingException remotingException) {\n      if (remotingException instanceof RemotingSendRequestException) {\n        log.warn(\"invokeSync: send request exception, so close the channel[{}]\",addr);\n        this.closeRemotingChannel(addr,remotingChannel);\n        throw (RemotingSendRequestException)remotingException;\n      }\n      if (remotingException instanceof RemotingTimeoutException) {\n        if (nettyClientConfig.isClientCloseSocketIfTimeout()) {\n          this.closeRemotingChannel(addr,remotingChannel);\n          log.warn(\"invokeSync: close socket because of timeout, {}ms, {}\",timeoutMillis,addr);\n        }\n        log.warn(\"invokeSync: wait response timeout exception, the channel[{}]\",addr);\n        throw (RemotingTimeoutException)remotingException;\n      }\n    }\n  }\n else {\n    this.closeRemotingChannel(addr,remotingChannel);\n    throw new RemotingConnectException(addr);\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1997,
        "startLineNumber" : 180,
        "startColumnNumber" : 4,
        "endLineNumber" : 213,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public RemotingCommand invokeSync(String addr,final RemotingCommand request,long timeoutMillis) throws InterruptedException, RemotingConnectException, RemotingSendRequestException, RemotingTimeoutException {\n  long beginStartTime=System.currentTimeMillis();\n  final RemotingChannel remotingChannel=this.getAndCreateChannel(addr,timeoutMillis);\n  if (remotingChannel != null && remotingChannel.isActive()) {\n    try {\n      long costTime=System.currentTimeMillis() - beginStartTime;\n      if (timeoutMillis < costTime) {\n        throw new RemotingTimeoutException(\"invokeSync call timeout\");\n      }\n      RemotingCommand response=this.invokeSyncWithInterceptor(remotingChannel,request,timeoutMillis - costTime);\n      return response;\n    }\n catch (    RemotingException remotingException) {\n      if (remotingException instanceof RemotingSendRequestException) {\n        log.warn(\"invokeSync: send request exception, so close the channel[{}]\",addr);\n        this.closeRemotingChannel(addr,remotingChannel);\n        throw (RemotingSendRequestException)remotingException;\n      }\n      if (remotingException instanceof RemotingTimeoutException) {\n        if (nettyClientConfig.isClientCloseSocketIfTimeout()) {\n          this.closeRemotingChannel(addr,remotingChannel);\n          log.warn(\"invokeSync: close socket because of timeout, {}ms, {}\",timeoutMillis,addr);\n        }\n        log.warn(\"invokeSync: wait response timeout exception, the channel[{}]\",addr);\n        throw (RemotingTimeoutException)remotingException;\n      }\n    }\n  }\n else {\n    this.closeRemotingChannel(addr,remotingChannel);\n    throw new RemotingConnectException(addr);\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 169,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 187,
        "startColumnNumber" : 16,
        "endLineNumber" : 187,
        "endColumnNumber" : 76
      },
      "nodeContext" : "long costTime=System.currentTimeMillis() - beginStartTime;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 187,
    "startColumnNumber" : 61,
    "endLineNumber" : 187,
    "endColumnNumber" : 75
  } ],
  "layoutRelationDataList" : [ ]
}