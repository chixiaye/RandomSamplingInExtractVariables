{
  "id" : 114,
  "expression" : "i < array.size()",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/test/java/com/alibaba/json/bvt/bug/StackTraceElementTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i < array.size()",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 16,
      "startColumnNumber" : 24,
      "endLineNumber" : 16,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 474,
        "startLineNumber" : 16,
        "startColumnNumber" : 8,
        "endLineNumber" : 22,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < array.size(); ++i) {\n  StackTraceElement element=(StackTraceElement)array.get(i);\n  Assert.assertEquals(stackTrace[i].getFileName(),element.getFileName());\n  Assert.assertEquals(stackTrace[i].getLineNumber(),element.getLineNumber());\n  Assert.assertEquals(stackTrace[i].getClassName(),element.getClassName());\n  Assert.assertEquals(stackTrace[i].getMethodName(),element.getMethodName());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 74,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 714,
        "startLineNumber" : 12,
        "startColumnNumber" : 51,
        "endLineNumber" : 23,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StackTraceElement[] stackTrace=Thread.currentThread().getStackTrace();\n  String text=JSON.toJSONString(stackTrace,SerializerFeature.WriteClassName);\n  JSONArray array=(JSONArray)JSON.parse(text);\n  for (int i=0; i < array.size(); ++i) {\n    StackTraceElement element=(StackTraceElement)array.get(i);\n    Assert.assertEquals(stackTrace[i].getFileName(),element.getFileName());\n    Assert.assertEquals(stackTrace[i].getLineNumber(),element.getLineNumber());\n    Assert.assertEquals(stackTrace[i].getClassName(),element.getClassName());\n    Assert.assertEquals(stackTrace[i].getMethodName(),element.getMethodName());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 761,
        "startLineNumber" : 12,
        "startColumnNumber" : 4,
        "endLineNumber" : 23,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_stackTrace() throws Exception {\n  StackTraceElement[] stackTrace=Thread.currentThread().getStackTrace();\n  String text=JSON.toJSONString(stackTrace,SerializerFeature.WriteClassName);\n  JSONArray array=(JSONArray)JSON.parse(text);\n  for (int i=0; i < array.size(); ++i) {\n    StackTraceElement element=(StackTraceElement)array.get(i);\n    Assert.assertEquals(stackTrace[i].getFileName(),element.getFileName());\n    Assert.assertEquals(stackTrace[i].getLineNumber(),element.getLineNumber());\n    Assert.assertEquals(stackTrace[i].getClassName(),element.getClassName());\n    Assert.assertEquals(stackTrace[i].getMethodName(),element.getMethodName());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 117,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 474,
        "startLineNumber" : 16,
        "startColumnNumber" : 8,
        "endLineNumber" : 22,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < array.size(); ++i) {\n  StackTraceElement element=(StackTraceElement)array.get(i);\n  Assert.assertEquals(stackTrace[i].getFileName(),element.getFileName());\n  Assert.assertEquals(stackTrace[i].getLineNumber(),element.getLineNumber());\n  Assert.assertEquals(stackTrace[i].getClassName(),element.getClassName());\n  Assert.assertEquals(stackTrace[i].getMethodName(),element.getMethodName());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 74,
      "astHeight" : 7
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 16,
    "startColumnNumber" : 24,
    "endLineNumber" : 16,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}