{
  "id" : 240,
  "expression" : "\"/hello\"",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-test/src/test/java/org/springframework/boot/test/web/client/RootUriRequestExpectationManagerTests.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"/hello\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 109,
      "startColumnNumber" : 56,
      "endLineNumber" : 109,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 109,
        "startColumnNumber" : 45,
        "endLineNumber" : 109,
        "endColumnNumber" : 64
      },
      "nodeContext" : "this.uri + \"/hello\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 109,
        "startColumnNumber" : 37,
        "endLineNumber" : 109,
        "endColumnNumber" : 65
      },
      "nodeContext" : "new URI(this.uri + \"/hello\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 109,
        "startColumnNumber" : 2,
        "endLineNumber" : 109,
        "endColumnNumber" : 66
      },
      "nodeContext" : "given(request.getURI()).willReturn(new URI(this.uri + \"/hello\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 109,
        "startColumnNumber" : 2,
        "endLineNumber" : 109,
        "endColumnNumber" : 67
      },
      "nodeContext" : "given(request.getURI()).willReturn(new URI(this.uri + \"/hello\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 440,
        "startLineNumber" : 107,
        "startColumnNumber" : 20,
        "endLineNumber" : 115,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ClientHttpRequest request=mock(ClientHttpRequest.class);\n  given(request.getURI()).willReturn(new URI(this.uri + \"/hello\"));\n  this.manager.validateRequest(request);\n  verify(this.delegate).validateRequest(this.requestCaptor.capture());\n  HttpRequestWrapper actual=(HttpRequestWrapper)this.requestCaptor.getValue();\n  assertThat(actual.getRequest()).isSameAs(request);\n  assertThat(actual.getURI()).isEqualTo(new URI(\"/hello\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 537,
        "startLineNumber" : 105,
        "startColumnNumber" : 1,
        "endLineNumber" : 115,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void validateRequestWhenUriStartsWithRootUriShouldReplaceUri() throws Exception {\n  ClientHttpRequest request=mock(ClientHttpRequest.class);\n  given(request.getURI()).willReturn(new URI(this.uri + \"/hello\"));\n  this.manager.validateRequest(request);\n  verify(this.delegate).validateRequest(this.requestCaptor.capture());\n  HttpRequestWrapper actual=(HttpRequestWrapper)this.requestCaptor.getValue();\n  assertThat(actual.getRequest()).isSameAs(request);\n  assertThat(actual.getURI()).isEqualTo(new URI(\"/hello\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 89,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 109,
        "startColumnNumber" : 2,
        "endLineNumber" : 109,
        "endColumnNumber" : 67
      },
      "nodeContext" : "given(request.getURI()).willReturn(new URI(this.uri + \"/hello\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"/hello\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 114,
      "startColumnNumber" : 48,
      "endLineNumber" : 114,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 114,
        "startColumnNumber" : 40,
        "endLineNumber" : 114,
        "endColumnNumber" : 57
      },
      "nodeContext" : "new URI(\"/hello\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 114,
        "startColumnNumber" : 2,
        "endLineNumber" : 114,
        "endColumnNumber" : 58
      },
      "nodeContext" : "assertThat(actual.getURI()).isEqualTo(new URI(\"/hello\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 114,
        "startColumnNumber" : 2,
        "endLineNumber" : 114,
        "endColumnNumber" : 59
      },
      "nodeContext" : "assertThat(actual.getURI()).isEqualTo(new URI(\"/hello\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 440,
        "startLineNumber" : 107,
        "startColumnNumber" : 20,
        "endLineNumber" : 115,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ClientHttpRequest request=mock(ClientHttpRequest.class);\n  given(request.getURI()).willReturn(new URI(this.uri + \"/hello\"));\n  this.manager.validateRequest(request);\n  verify(this.delegate).validateRequest(this.requestCaptor.capture());\n  HttpRequestWrapper actual=(HttpRequestWrapper)this.requestCaptor.getValue();\n  assertThat(actual.getRequest()).isSameAs(request);\n  assertThat(actual.getURI()).isEqualTo(new URI(\"/hello\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 537,
        "startLineNumber" : 105,
        "startColumnNumber" : 1,
        "endLineNumber" : 115,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void validateRequestWhenUriStartsWithRootUriShouldReplaceUri() throws Exception {\n  ClientHttpRequest request=mock(ClientHttpRequest.class);\n  given(request.getURI()).willReturn(new URI(this.uri + \"/hello\"));\n  this.manager.validateRequest(request);\n  verify(this.delegate).validateRequest(this.requestCaptor.capture());\n  HttpRequestWrapper actual=(HttpRequestWrapper)this.requestCaptor.getValue();\n  assertThat(actual.getRequest()).isSameAs(request);\n  assertThat(actual.getURI()).isEqualTo(new URI(\"/hello\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 89,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 114,
        "startColumnNumber" : 2,
        "endLineNumber" : 114,
        "endColumnNumber" : 59
      },
      "nodeContext" : "assertThat(actual.getURI()).isEqualTo(new URI(\"/hello\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 109,
    "startColumnNumber" : 56,
    "endLineNumber" : 109,
    "endColumnNumber" : 64
  }, {
    "charLength" : 8,
    "startLineNumber" : 114,
    "startColumnNumber" : 48,
    "endLineNumber" : 114,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}