{
  "id" : 149,
  "expression" : "(int)(colorArray.optDouble(3) * multiplier)",
  "projectName" : "airbnb@lottie-android",
  "commitID" : "54c2775bf2c8b67c8d24840424c13968255caea7",
  "filePath" : "/lottie/src/main/java/com/airbnb/lottie/ColorFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(int)(colorArray.optDouble(3) * multiplier)",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 44,
      "startLineNumber" : 23,
      "startColumnNumber" : 10,
      "endLineNumber" : 23,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 9,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 235,
        "startLineNumber" : 22,
        "startColumnNumber" : 13,
        "endLineNumber" : 26,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Color.argb((int)(colorArray.optDouble(3) * multiplier),(int)(colorArray.optDouble(0) * multiplier),(int)(colorArray.optDouble(1) * multiplier),(int)(colorArray.optDouble(2) * multiplier))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 39,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 22,
        "startColumnNumber" : 6,
        "endLineNumber" : 26,
        "endColumnNumber" : 56
      },
      "nodeContext" : "return Color.argb((int)(colorArray.optDouble(3) * multiplier),(int)(colorArray.optDouble(0) * multiplier),(int)(colorArray.optDouble(1) * multiplier),(int)(colorArray.optDouble(2) * multiplier));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 40,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 536,
        "startLineNumber" : 12,
        "startColumnNumber" : 34,
        "endLineNumber" : 27,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  boolean shouldUse255=true;\n  for (int i=0; i < colorArray.length(); i++) {\n    double colorChannel=colorArray.optDouble(i);\n    if (colorChannel > 1f) {\n      shouldUse255=false;\n    }\n  }\n  float multiplier=shouldUse255 ? 255f : 1f;\n  return Color.argb((int)(colorArray.optDouble(3) * multiplier),(int)(colorArray.optDouble(0) * multiplier),(int)(colorArray.optDouble(1) * multiplier),(int)(colorArray.optDouble(2) * multiplier));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 566,
        "startLineNumber" : 12,
        "startColumnNumber" : 4,
        "endLineNumber" : 27,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (colorArray.length() == 4) {\n  boolean shouldUse255=true;\n  for (int i=0; i < colorArray.length(); i++) {\n    double colorChannel=colorArray.optDouble(i);\n    if (colorChannel > 1f) {\n      shouldUse255=false;\n    }\n  }\n  float multiplier=shouldUse255 ? 255f : 1f;\n  return Color.argb((int)(colorArray.optDouble(3) * multiplier),(int)(colorArray.optDouble(0) * multiplier),(int)(colorArray.optDouble(1) * multiplier),(int)(colorArray.optDouble(2) * multiplier));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 647,
        "startLineNumber" : 10,
        "startColumnNumber" : 71,
        "endLineNumber" : 29,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  JSONArray colorArray=(JSONArray)object;\n  if (colorArray.length() == 4) {\n    boolean shouldUse255=true;\n    for (int i=0; i < colorArray.length(); i++) {\n      double colorChannel=colorArray.optDouble(i);\n      if (colorChannel > 1f) {\n        shouldUse255=false;\n      }\n    }\n    float multiplier=shouldUse255 ? 255f : 1f;\n    return Color.argb((int)(colorArray.optDouble(3) * multiplier),(int)(colorArray.optDouble(0) * multiplier),(int)(colorArray.optDouble(1) * multiplier),(int)(colorArray.optDouble(2) * multiplier));\n  }\n  return Color.BLACK;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 716,
        "startLineNumber" : 10,
        "startColumnNumber" : 2,
        "endLineNumber" : 29,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Integer valueFromObject(Object object,float scale){\n  JSONArray colorArray=(JSONArray)object;\n  if (colorArray.length() == 4) {\n    boolean shouldUse255=true;\n    for (int i=0; i < colorArray.length(); i++) {\n      double colorChannel=colorArray.optDouble(i);\n      if (colorChannel > 1f) {\n        shouldUse255=false;\n      }\n    }\n    float multiplier=shouldUse255 ? 255f : 1f;\n    return Color.argb((int)(colorArray.optDouble(3) * multiplier),(int)(colorArray.optDouble(0) * multiplier),(int)(colorArray.optDouble(1) * multiplier),(int)(colorArray.optDouble(2) * multiplier));\n  }\n  return Color.BLACK;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 119,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 235,
        "startLineNumber" : 22,
        "startColumnNumber" : 13,
        "endLineNumber" : 26,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Color.argb((int)(colorArray.optDouble(3) * multiplier),(int)(colorArray.optDouble(0) * multiplier),(int)(colorArray.optDouble(1) * multiplier),(int)(colorArray.optDouble(2) * multiplier))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 39,
      "astHeight" : 6
    },
    "tokenLength" : 5,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 44,
    "startLineNumber" : 23,
    "startColumnNumber" : 10,
    "endLineNumber" : 23,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}