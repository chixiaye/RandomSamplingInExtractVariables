{
  "id" : 54,
  "expression" : "\"foo via type adapter\"",
  "projectName" : "google@gson",
  "commitID" : "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
  "filePath" : "/gson/src/test/java/com/google/gson/functional/TypeAdapterPrecedenceTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"foo via type adapter\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 62,
      "startColumnNumber" : 17,
      "endLineNumber" : 62,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 78
      },
      "nodeContext" : "assertEquals(\"foo via type adapter\",gson.fromJson(\"foo\",Foo.class).name)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 79
      },
      "nodeContext" : "assertEquals(\"foo via type adapter\",gson.fromJson(\"foo\",Foo.class).name);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 427,
        "startLineNumber" : 55,
        "startColumnNumber" : 83,
        "endLineNumber" : 63,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Gson gson=new GsonBuilder().registerTypeAdapter(Foo.class,newSerializer(\"serializer\")).registerTypeAdapter(Foo.class,newDeserializer(\"deserializer\")).registerTypeAdapter(Foo.class,newTypeAdapter(\"type adapter\")).create();\n  assertEquals(\"\\\"foo via type adapter\\\"\",gson.toJson(new Foo(\"foo\")));\n  assertEquals(\"foo via type adapter\",gson.fromJson(\"foo\",Foo.class).name);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 508,
        "startLineNumber" : 55,
        "startColumnNumber" : 2,
        "endLineNumber" : 63,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testSerializeNonstreamingTypeAdapterFollowedByStreamingTypeAdapter(){\n  Gson gson=new GsonBuilder().registerTypeAdapter(Foo.class,newSerializer(\"serializer\")).registerTypeAdapter(Foo.class,newDeserializer(\"deserializer\")).registerTypeAdapter(Foo.class,newTypeAdapter(\"type adapter\")).create();\n  assertEquals(\"\\\"foo via type adapter\\\"\",gson.toJson(new Foo(\"foo\")));\n  assertEquals(\"foo via type adapter\",gson.fromJson(\"foo\",Foo.class).name);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 63,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 79
      },
      "nodeContext" : "assertEquals(\"foo via type adapter\",gson.fromJson(\"foo\",Foo.class).name);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 62,
    "startColumnNumber" : 17,
    "endLineNumber" : 62,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}