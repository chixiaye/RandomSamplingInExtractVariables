{
  "id" : 53,
  "expression" : "annotation",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/test-framework/arquillian/src/main/java/io/quarkus/arquillian/ArquillianResourceURLEnricher.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "annotation",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 25,
      "startColumnNumber" : 28,
      "endLineNumber" : 25,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 25,
        "startColumnNumber" : 28,
        "endLineNumber" : 25,
        "endColumnNumber" : 55
      },
      "nodeContext" : "annotation.annotationType()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 25,
        "startColumnNumber" : 28,
        "endLineNumber" : 25,
        "endColumnNumber" : 65
      },
      "nodeContext" : "annotation.annotationType().getName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 25,
        "startColumnNumber" : 28,
        "endLineNumber" : 25,
        "endColumnNumber" : 108
      },
      "nodeContext" : "annotation.annotationType().getName().equals(ArquillianResource.class.getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1250,
        "startLineNumber" : 25,
        "startColumnNumber" : 24,
        "endLineNumber" : 45,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (annotation.annotationType().getName().equals(ArquillianResource.class.getName())) {\n  if (field.getType().equals(URL.class)) {\n    try {\n      field.setAccessible(true);\n      URL url=new URL(System.getProperty(\"test.url\"));\n      field.set(QuarkusDeployableContainer.testInstance,url);\n      break;\n    }\n catch (    Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n else   if (field.getType().equals(URI.class)) {\n    try {\n      field.setAccessible(true);\n      URI url=new URI(System.getProperty(\"test.url\"));\n      field.set(QuarkusDeployableContainer.testInstance,url);\n      break;\n    }\n catch (    Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 112,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1298,
        "startLineNumber" : 24,
        "startColumnNumber" : 73,
        "endLineNumber" : 46,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (annotation.annotationType().getName().equals(ArquillianResource.class.getName())) {\n    if (field.getType().equals(URL.class)) {\n      try {\n        field.setAccessible(true);\n        URL url=new URL(System.getProperty(\"test.url\"));\n        field.set(QuarkusDeployableContainer.testInstance,url);\n        break;\n      }\n catch (      Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n else     if (field.getType().equals(URI.class)) {\n      try {\n        field.setAccessible(true);\n        URI url=new URI(System.getProperty(\"test.url\"));\n        field.set(QuarkusDeployableContainer.testInstance,url);\n        break;\n      }\n catch (      Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1351,
        "startLineNumber" : 24,
        "startColumnNumber" : 20,
        "endLineNumber" : 46,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (Annotation annotation : field.getAnnotations()) {\n  if (annotation.annotationType().getName().equals(ArquillianResource.class.getName())) {\n    if (field.getType().equals(URL.class)) {\n      try {\n        field.setAccessible(true);\n        URL url=new URL(System.getProperty(\"test.url\"));\n        field.set(QuarkusDeployableContainer.testInstance,url);\n        break;\n      }\n catch (      Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n else     if (field.getType().equals(URI.class)) {\n      try {\n        field.setAccessible(true);\n        URI url=new URI(System.getProperty(\"test.url\"));\n        field.set(QuarkusDeployableContainer.testInstance,url);\n        break;\n      }\n catch (      Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 121,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1391,
        "startLineNumber" : 23,
        "startColumnNumber" : 43,
        "endLineNumber" : 47,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  for (  Annotation annotation : field.getAnnotations()) {\n    if (annotation.annotationType().getName().equals(ArquillianResource.class.getName())) {\n      if (field.getType().equals(URL.class)) {\n        try {\n          field.setAccessible(true);\n          URL url=new URL(System.getProperty(\"test.url\"));\n          field.set(QuarkusDeployableContainer.testInstance,url);\n          break;\n        }\n catch (        Exception e) {\n          throw new RuntimeException(e);\n        }\n      }\n else       if (field.getType().equals(URI.class)) {\n        try {\n          field.setAccessible(true);\n          URI url=new URI(System.getProperty(\"test.url\"));\n          field.set(QuarkusDeployableContainer.testInstance,url);\n          break;\n        }\n catch (        Exception e) {\n          throw new RuntimeException(e);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1418,
        "startLineNumber" : 23,
        "startColumnNumber" : 16,
        "endLineNumber" : 47,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (Field field : fields) {\n  for (  Annotation annotation : field.getAnnotations()) {\n    if (annotation.annotationType().getName().equals(ArquillianResource.class.getName())) {\n      if (field.getType().equals(URL.class)) {\n        try {\n          field.setAccessible(true);\n          URL url=new URL(System.getProperty(\"test.url\"));\n          field.set(QuarkusDeployableContainer.testInstance,url);\n          break;\n        }\n catch (        Exception e) {\n          throw new RuntimeException(e);\n        }\n      }\n else       if (field.getType().equals(URI.class)) {\n        try {\n          field.setAccessible(true);\n          URI url=new URI(System.getProperty(\"test.url\"));\n          field.set(QuarkusDeployableContainer.testInstance,url);\n          break;\n        }\n catch (        Exception e) {\n          throw new RuntimeException(e);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 128,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1557,
        "startLineNumber" : 21,
        "startColumnNumber" : 42,
        "endLineNumber" : 49,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Field[] fields=clazz.getDeclaredFields();\n  for (  Field field : fields) {\n    for (    Annotation annotation : field.getAnnotations()) {\n      if (annotation.annotationType().getName().equals(ArquillianResource.class.getName())) {\n        if (field.getType().equals(URL.class)) {\n          try {\n            field.setAccessible(true);\n            URL url=new URL(System.getProperty(\"test.url\"));\n            field.set(QuarkusDeployableContainer.testInstance,url);\n            break;\n          }\n catch (          Exception e) {\n            throw new RuntimeException(e);\n          }\n        }\n else         if (field.getType().equals(URI.class)) {\n          try {\n            field.setAccessible(true);\n            URI url=new URI(System.getProperty(\"test.url\"));\n            field.set(QuarkusDeployableContainer.testInstance,url);\n            break;\n          }\n catch (          Exception e) {\n            throw new RuntimeException(e);\n          }\n        }\n      }\n    }\n  }\n  clazz=clazz.getSuperclass();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 145,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1587,
        "startLineNumber" : 21,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (clazz != Object.class) {\n  Field[] fields=clazz.getDeclaredFields();\n  for (  Field field : fields) {\n    for (    Annotation annotation : field.getAnnotations()) {\n      if (annotation.annotationType().getName().equals(ArquillianResource.class.getName())) {\n        if (field.getType().equals(URL.class)) {\n          try {\n            field.setAccessible(true);\n            URL url=new URL(System.getProperty(\"test.url\"));\n            field.set(QuarkusDeployableContainer.testInstance,url);\n            break;\n          }\n catch (          Exception e) {\n            throw new RuntimeException(e);\n          }\n        }\n else         if (field.getType().equals(URI.class)) {\n          try {\n            field.setAccessible(true);\n            URI url=new URI(System.getProperty(\"test.url\"));\n            field.set(QuarkusDeployableContainer.testInstance,url);\n            break;\n          }\n catch (          Exception e) {\n            throw new RuntimeException(e);\n          }\n        }\n      }\n    }\n  }\n  clazz=clazz.getSuperclass();\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 151,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1689,
        "startLineNumber" : 19,
        "startColumnNumber" : 61,
        "endLineNumber" : 50,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Class clazz=QuarkusDeployableContainer.testInstance.getClass();\n  while (clazz != Object.class) {\n    Field[] fields=clazz.getDeclaredFields();\n    for (    Field field : fields) {\n      for (      Annotation annotation : field.getAnnotations()) {\n        if (annotation.annotationType().getName().equals(ArquillianResource.class.getName())) {\n          if (field.getType().equals(URL.class)) {\n            try {\n              field.setAccessible(true);\n              URL url=new URL(System.getProperty(\"test.url\"));\n              field.set(QuarkusDeployableContainer.testInstance,url);\n              break;\n            }\n catch (            Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n else           if (field.getType().equals(URI.class)) {\n            try {\n              field.setAccessible(true);\n              URI url=new URI(System.getProperty(\"test.url\"));\n              field.set(QuarkusDeployableContainer.testInstance,url);\n              break;\n            }\n catch (            Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      }\n    }\n    clazz=clazz.getSuperclass();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1742,
        "startLineNumber" : 19,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (QuarkusDeployableContainer.testInstance != null) {\n  Class clazz=QuarkusDeployableContainer.testInstance.getClass();\n  while (clazz != Object.class) {\n    Field[] fields=clazz.getDeclaredFields();\n    for (    Field field : fields) {\n      for (      Annotation annotation : field.getAnnotations()) {\n        if (annotation.annotationType().getName().equals(ArquillianResource.class.getName())) {\n          if (field.getType().equals(URL.class)) {\n            try {\n              field.setAccessible(true);\n              URL url=new URL(System.getProperty(\"test.url\"));\n              field.set(QuarkusDeployableContainer.testInstance,url);\n              break;\n            }\n catch (            Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n else           if (field.getType().equals(URI.class)) {\n            try {\n              field.setAccessible(true);\n              URI url=new URI(System.getProperty(\"test.url\"));\n              field.set(QuarkusDeployableContainer.testInstance,url);\n              break;\n            }\n catch (            Exception e) {\n              throw new RuntimeException(e);\n            }\n          }\n        }\n      }\n    }\n    clazz=clazz.getSuperclass();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 168,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1758,
        "startLineNumber" : 18,
        "startColumnNumber" : 40,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (QuarkusDeployableContainer.testInstance != null) {\n    Class clazz=QuarkusDeployableContainer.testInstance.getClass();\n    while (clazz != Object.class) {\n      Field[] fields=clazz.getDeclaredFields();\n      for (      Field field : fields) {\n        for (        Annotation annotation : field.getAnnotations()) {\n          if (annotation.annotationType().getName().equals(ArquillianResource.class.getName())) {\n            if (field.getType().equals(URL.class)) {\n              try {\n                field.setAccessible(true);\n                URL url=new URL(System.getProperty(\"test.url\"));\n                field.set(QuarkusDeployableContainer.testInstance,url);\n                break;\n              }\n catch (              Exception e) {\n                throw new RuntimeException(e);\n              }\n            }\n else             if (field.getType().equals(URI.class)) {\n              try {\n                field.setAccessible(true);\n                URI url=new URI(System.getProperty(\"test.url\"));\n                field.set(QuarkusDeployableContainer.testInstance,url);\n                break;\n              }\n catch (              Exception e) {\n                throw new RuntimeException(e);\n              }\n            }\n          }\n        }\n      }\n      clazz=clazz.getSuperclass();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 169,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1808,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void enrich(Object testCase){\n  if (QuarkusDeployableContainer.testInstance != null) {\n    Class clazz=QuarkusDeployableContainer.testInstance.getClass();\n    while (clazz != Object.class) {\n      Field[] fields=clazz.getDeclaredFields();\n      for (      Field field : fields) {\n        for (        Annotation annotation : field.getAnnotations()) {\n          if (annotation.annotationType().getName().equals(ArquillianResource.class.getName())) {\n            if (field.getType().equals(URL.class)) {\n              try {\n                field.setAccessible(true);\n                URL url=new URL(System.getProperty(\"test.url\"));\n                field.set(QuarkusDeployableContainer.testInstance,url);\n                break;\n              }\n catch (              Exception e) {\n                throw new RuntimeException(e);\n              }\n            }\n else             if (field.getType().equals(URI.class)) {\n              try {\n                field.setAccessible(true);\n                URI url=new URI(System.getProperty(\"test.url\"));\n                field.set(QuarkusDeployableContainer.testInstance,url);\n                break;\n              }\n catch (              Exception e) {\n                throw new RuntimeException(e);\n              }\n            }\n          }\n        }\n      }\n      clazz=clazz.getSuperclass();\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 179,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 25,
        "startColumnNumber" : 28,
        "endLineNumber" : 25,
        "endColumnNumber" : 108
      },
      "nodeContext" : "annotation.annotationType().getName().equals(ArquillianResource.class.getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.annotation.Annotation"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 25,
    "startColumnNumber" : 28,
    "endLineNumber" : 25,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}