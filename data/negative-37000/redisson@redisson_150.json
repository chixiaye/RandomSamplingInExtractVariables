{
  "id" : 150,
  "expression" : "connection.isPipelined()",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson-spring-data/redisson-spring-data-17/src/test/java/org/redisson/spring/data/connection/RedissonPipelineConnectionTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "connection.isPipelined()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 24,
      "startColumnNumber" : 19,
      "endLineNumber" : 24,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 24,
        "startColumnNumber" : 8,
        "endLineNumber" : 24,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertThat(connection.isPipelined())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 24,
        "startColumnNumber" : 8,
        "endLineNumber" : 24,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertThat(connection.isPipelined()).isTrue()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 24,
        "startColumnNumber" : 8,
        "endLineNumber" : 24,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertThat(connection.isPipelined()).isTrue();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 484,
        "startLineNumber" : 21,
        "startColumnNumber" : 29,
        "endLineNumber" : 31,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  RedissonConnection connection=new RedissonConnection(redisson);\n  connection.openPipeline();\n  assertThat(connection.isPipelined()).isTrue();\n  connection.set(\"key\".getBytes(),\"value\".getBytes());\n  assertThat(connection.get(\"key\".getBytes())).isNull();\n  List<Object> result=connection.closePipeline();\n  assertThat(connection.isPipelined()).isFalse();\n  assertThat(result.get(0)).isEqualTo(\"value\".getBytes());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 519,
        "startLineNumber" : 20,
        "startColumnNumber" : 4,
        "endLineNumber" : 31,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSetGet(){\n  RedissonConnection connection=new RedissonConnection(redisson);\n  connection.openPipeline();\n  assertThat(connection.isPipelined()).isTrue();\n  connection.set(\"key\".getBytes(),\"value\".getBytes());\n  assertThat(connection.get(\"key\".getBytes())).isNull();\n  List<Object> result=connection.closePipeline();\n  assertThat(connection.isPipelined()).isFalse();\n  assertThat(result.get(0)).isEqualTo(\"value\".getBytes());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 80,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 24,
        "startColumnNumber" : 8,
        "endLineNumber" : 24,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertThat(connection.isPipelined()).isTrue();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "boolean"
  }, {
    "nodeContext" : "connection.isPipelined()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 29,
      "startColumnNumber" : 19,
      "endLineNumber" : 29,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 29,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertThat(connection.isPipelined())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 29,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertThat(connection.isPipelined()).isFalse()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 29,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertThat(connection.isPipelined()).isFalse();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 484,
        "startLineNumber" : 21,
        "startColumnNumber" : 29,
        "endLineNumber" : 31,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  RedissonConnection connection=new RedissonConnection(redisson);\n  connection.openPipeline();\n  assertThat(connection.isPipelined()).isTrue();\n  connection.set(\"key\".getBytes(),\"value\".getBytes());\n  assertThat(connection.get(\"key\".getBytes())).isNull();\n  List<Object> result=connection.closePipeline();\n  assertThat(connection.isPipelined()).isFalse();\n  assertThat(result.get(0)).isEqualTo(\"value\".getBytes());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 519,
        "startLineNumber" : 20,
        "startColumnNumber" : 4,
        "endLineNumber" : 31,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSetGet(){\n  RedissonConnection connection=new RedissonConnection(redisson);\n  connection.openPipeline();\n  assertThat(connection.isPipelined()).isTrue();\n  connection.set(\"key\".getBytes(),\"value\".getBytes());\n  assertThat(connection.get(\"key\".getBytes())).isNull();\n  List<Object> result=connection.closePipeline();\n  assertThat(connection.isPipelined()).isFalse();\n  assertThat(result.get(0)).isEqualTo(\"value\".getBytes());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 80,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 29,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertThat(connection.isPipelined()).isFalse();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 24,
    "startColumnNumber" : 19,
    "endLineNumber" : 24,
    "endColumnNumber" : 43
  }, {
    "charLength" : 24,
    "startLineNumber" : 29,
    "startColumnNumber" : 19,
    "endLineNumber" : 29,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}