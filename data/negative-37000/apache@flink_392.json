{
  "id" : 392,
  "expression" : "false",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-core/src/main/java/org/apache/flink/util/IterableUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 47,
      "startColumnNumber" : 63,
      "endLineNumber" : 47,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,elseExpression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 47,
        "startColumnNumber" : 18,
        "endLineNumber" : 47,
        "endColumnNumber" : 69
      },
      "nodeContext" : "StreamSupport.stream(iterable.spliterator(),false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 45,
        "startColumnNumber" : 15,
        "endLineNumber" : 47,
        "endColumnNumber" : 69
      },
      "nodeContext" : "iterable instanceof Collection ? ((Collection<E>)iterable).stream() : StreamSupport.stream(iterable.spliterator(),false)",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 70
      },
      "nodeContext" : "return iterable instanceof Collection ? ((Collection<E>)iterable).stream() : StreamSupport.stream(iterable.spliterator(),false);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 23,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 211,
        "startLineNumber" : 42,
        "startColumnNumber" : 63,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  checkNotNull(iterable);\n  return iterable instanceof Collection ? ((Collection<E>)iterable).stream() : StreamSupport.stream(iterable.spliterator(),false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 521,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Convert the given  {@link Iterable} to a {@link Stream}.\n * @param iterable to convert to a stream\n * @param < E > type of the elements of the iterable\n * @return stream converted from the given {@link Iterable}\n */\npublic static <E>Stream<E> toStream(Iterable<E> iterable){\n  checkNotNull(iterable);\n  return iterable instanceof Collection ? ((Collection<E>)iterable).stream() : StreamSupport.stream(iterable.spliterator(),false);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 47,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,elseExpression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 47,
        "startColumnNumber" : 18,
        "endLineNumber" : 47,
        "endColumnNumber" : 69
      },
      "nodeContext" : "StreamSupport.stream(iterable.spliterator(),false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 47,
    "startColumnNumber" : 63,
    "endLineNumber" : 47,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}