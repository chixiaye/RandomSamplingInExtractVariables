{
  "id" : 97,
  "expression" : "!string.toLowerCase().contains(s.toLowerCase())",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/app/src/cc/arduino/contributions/packages/ui/ContributionIndexTableModel.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!string.toLowerCase().contains(s.toLowerCase())",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 47,
      "startLineNumber" : 151,
      "startColumnNumber" : 10,
      "endLineNumber" : 151,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 151,
        "startColumnNumber" : 6,
        "endLineNumber" : 152,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (!string.toLowerCase().contains(s.toLowerCase())) return false;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 150,
        "startColumnNumber" : 25,
        "endLineNumber" : 153,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!string.toLowerCase().contains(s.toLowerCase()))   return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 150,
        "startColumnNumber" : 4,
        "endLineNumber" : 153,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (String s : set) {\n  if (!string.toLowerCase().contains(s.toLowerCase()))   return false;\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 147,
        "startColumnNumber" : 65,
        "endLineNumber" : 155,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (set == null)   return true;\n  for (  String s : set) {\n    if (!string.toLowerCase().contains(s.toLowerCase()))     return false;\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 494,
        "startLineNumber" : 138,
        "startColumnNumber" : 2,
        "endLineNumber" : 155,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Check if <b>string</b> contains all the substrings in <b>set</b>. The compare is case insensitive.\n * @param string\n * @param set\n * @return <b>true<b> if all the strings in <b>set</b> are contained in<b>string</b>.\n */\nprivate boolean stringContainsAll(String string,String set[]){\n  if (set == null)   return true;\n  for (  String s : set) {\n    if (!string.toLowerCase().contains(s.toLowerCase()))     return false;\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 42,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 151,
        "startColumnNumber" : 6,
        "endLineNumber" : 152,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (!string.toLowerCase().contains(s.toLowerCase())) return false;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 47,
    "startLineNumber" : 151,
    "startColumnNumber" : 10,
    "endLineNumber" : 151,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}