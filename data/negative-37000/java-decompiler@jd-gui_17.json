{
  "id" : 17,
  "expression" : "typeFactory.make(api,entry,fragment)",
  "projectName" : "java-decompiler@jd-gui",
  "commitID" : "fbc5b14d66b37b88bf1dc18386b530e874550240",
  "filePath" : "/services/src/main/java/org/jd/gui/service/actions/CopyQualifiedNameContextualActionsFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "typeFactory.make(api,entry,fragment)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 38,
      "startLineNumber" : 50,
      "startColumnNumber" : 28,
      "endLineNumber" : 50,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 6,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 50,
        "startColumnNumber" : 21,
        "endLineNumber" : 50,
        "endColumnNumber" : 66
      },
      "nodeContext" : "type=typeFactory.make(api,entry,fragment)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 50,
        "startColumnNumber" : 16,
        "endLineNumber" : 50,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Type type=typeFactory.make(api,entry,fragment);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2340,
        "startLineNumber" : 49,
        "startColumnNumber" : 37,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Type type=typeFactory.make(api,entry,fragment);\n  if (type != null) {\n    StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n    if (sb.length() > 0) {\n      sb.append('.');\n    }\n    sb.append(type.getDisplayTypeName());\n    if (fragment != null) {\n      int dashIndex=fragment.indexOf('-');\n      if (dashIndex != -1) {\n        int lastDashIndex=fragment.lastIndexOf('-');\n        if (dashIndex == lastDashIndex) {\n          throw new InvalidFormatException(\"fragment: \" + fragment);\n        }\n else {\n          String name=fragment.substring(dashIndex + 1,lastDashIndex);\n          String descriptor=fragment.substring(lastDashIndex + 1);\n          if (descriptor.startsWith(\"(\")) {\n            for (            Type.Method method : type.getMethods()) {\n              if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n                sb.append('.').append(method.getDisplayName());\n                break;\n              }\n            }\n          }\n else {\n            for (            Type.Field field : type.getFields()) {\n              if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n                sb.append('.').append(field.getDisplayName());\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n    Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 207,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2365,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (typeFactory != null) {\n  Type type=typeFactory.make(api,entry,fragment);\n  if (type != null) {\n    StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n    if (sb.length() > 0) {\n      sb.append('.');\n    }\n    sb.append(type.getDisplayTypeName());\n    if (fragment != null) {\n      int dashIndex=fragment.indexOf('-');\n      if (dashIndex != -1) {\n        int lastDashIndex=fragment.lastIndexOf('-');\n        if (dashIndex == lastDashIndex) {\n          throw new InvalidFormatException(\"fragment: \" + fragment);\n        }\n else {\n          String name=fragment.substring(dashIndex + 1,lastDashIndex);\n          String descriptor=fragment.substring(lastDashIndex + 1);\n          if (descriptor.startsWith(\"(\")) {\n            for (            Type.Method method : type.getMethods()) {\n              if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n                sb.append('.').append(method.getDisplayName());\n                break;\n              }\n            }\n          }\n else {\n            for (            Type.Field field : type.getFields()) {\n              if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n                sb.append('.').append(field.getDisplayName());\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n    Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n    return;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 211,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3008,
        "startLineNumber" : 46,
        "startColumnNumber" : 51,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  TypeFactory typeFactory=api.getTypeFactory(entry);\n  if (typeFactory != null) {\n    Type type=typeFactory.make(api,entry,fragment);\n    if (type != null) {\n      StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n      if (sb.length() > 0) {\n        sb.append('.');\n      }\n      sb.append(type.getDisplayTypeName());\n      if (fragment != null) {\n        int dashIndex=fragment.indexOf('-');\n        if (dashIndex != -1) {\n          int lastDashIndex=fragment.lastIndexOf('-');\n          if (dashIndex == lastDashIndex) {\n            throw new InvalidFormatException(\"fragment: \" + fragment);\n          }\n else {\n            String name=fragment.substring(dashIndex + 1,lastDashIndex);\n            String descriptor=fragment.substring(lastDashIndex + 1);\n            if (descriptor.startsWith(\"(\")) {\n              for (              Type.Method method : type.getMethods()) {\n                if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n                  sb.append('.').append(method.getDisplayName());\n                  break;\n                }\n              }\n            }\n else {\n              for (              Type.Field field : type.getFields()) {\n                if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n                  sb.append('.').append(field.getDisplayName());\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n      Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n      return;\n    }\n  }\n  String path=entry.getUri().getPath();\n  String rootPath=entry.getContainer().getRoot().getUri().getPath();\n  String qualifiedName=path.substring(rootPath.length()).replace('/','.');\n  if (qualifiedName.endsWith(\".class\")) {\n    qualifiedName=qualifiedName.substring(0,qualifiedName.length() - 6);\n  }\n  Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(qualifiedName),null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 291,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3051,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "public void actionPerformed(ActionEvent e){\n  TypeFactory typeFactory=api.getTypeFactory(entry);\n  if (typeFactory != null) {\n    Type type=typeFactory.make(api,entry,fragment);\n    if (type != null) {\n      StringBuilder sb=new StringBuilder(type.getDisplayPackageName());\n      if (sb.length() > 0) {\n        sb.append('.');\n      }\n      sb.append(type.getDisplayTypeName());\n      if (fragment != null) {\n        int dashIndex=fragment.indexOf('-');\n        if (dashIndex != -1) {\n          int lastDashIndex=fragment.lastIndexOf('-');\n          if (dashIndex == lastDashIndex) {\n            throw new InvalidFormatException(\"fragment: \" + fragment);\n          }\n else {\n            String name=fragment.substring(dashIndex + 1,lastDashIndex);\n            String descriptor=fragment.substring(lastDashIndex + 1);\n            if (descriptor.startsWith(\"(\")) {\n              for (              Type.Method method : type.getMethods()) {\n                if (method.getName().equals(name) && method.getDescriptor().equals(descriptor)) {\n                  sb.append('.').append(method.getDisplayName());\n                  break;\n                }\n              }\n            }\n else {\n              for (              Type.Field field : type.getFields()) {\n                if (field.getName().equals(name) && field.getDescriptor().equals(descriptor)) {\n                  sb.append('.').append(field.getDisplayName());\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n      Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);\n      return;\n    }\n  }\n  String path=entry.getUri().getPath();\n  String rootPath=entry.getContainer().getRoot().getUri().getPath();\n  String qualifiedName=path.substring(rootPath.length()).replace('/','.');\n  if (qualifiedName.endsWith(\".class\")) {\n    qualifiedName=qualifiedName.substring(0,qualifiedName.length() - 6);\n  }\n  Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(qualifiedName),null);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 299,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 50,
        "startColumnNumber" : 16,
        "endLineNumber" : 50,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Type type=typeFactory.make(api,entry,fragment);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "org.jd.gui.api.model.Type"
  } ],
  "positionList" : [ {
    "charLength" : 38,
    "startLineNumber" : 50,
    "startColumnNumber" : 28,
    "endLineNumber" : 50,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ ]
}