{
  "id" : 51,
  "expression" : "RectUtils.getRectSidesFromCorners(mCurrentImageCorners)",
  "projectName" : "Yalantis@uCrop",
  "commitID" : "ef97e61117643633993cb2d7932f667da031d2bc",
  "filePath" : "/ucrop/src/main/java/com/yalantis/ucrop/view/CropImageView.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "RectUtils.getRectSidesFromCorners(mCurrentImageCorners)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 55,
      "startLineNumber" : 303,
      "startColumnNumber" : 50,
      "endLineNumber" : 303,
      "endColumnNumber" : 105
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 303,
        "startColumnNumber" : 30,
        "endLineNumber" : 303,
        "endColumnNumber" : 105
      },
      "nodeContext" : "currentImageSides=RectUtils.getRectSidesFromCorners(mCurrentImageCorners)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 303,
        "startColumnNumber" : 16,
        "endLineNumber" : 303,
        "endColumnNumber" : 106
      },
      "nodeContext" : "final float[] currentImageSides=RectUtils.getRectSidesFromCorners(mCurrentImageCorners);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 554,
        "startLineNumber" : 297,
        "startColumnNumber" : 19,
        "endLineNumber" : 308,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  RectF tempCropRect=new RectF(mCropRect);\n  mTempMatrix.reset();\n  mTempMatrix.setRotate(getCurrentAngle());\n  mTempMatrix.mapRect(tempCropRect);\n  final float[] currentImageSides=RectUtils.getRectSidesFromCorners(mCurrentImageCorners);\n  deltaScale=Math.max(tempCropRect.width() / currentImageSides[0],tempCropRect.height() / currentImageSides[1]);\n  deltaScale=deltaScale * currentScale - currentScale;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 814,
        "startLineNumber" : 293,
        "startColumnNumber" : 12,
        "endLineNumber" : 308,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (willImageWrapCropBoundsAfterTranslate) {\n  final float[] imageIndents=calculateImageIndents();\n  deltaX=-(imageIndents[0] + imageIndents[2]);\n  deltaY=-(imageIndents[1] + imageIndents[3]);\n}\n else {\n  RectF tempCropRect=new RectF(mCropRect);\n  mTempMatrix.reset();\n  mTempMatrix.setRotate(getCurrentAngle());\n  mTempMatrix.mapRect(tempCropRect);\n  final float[] currentImageSides=RectUtils.getRectSidesFromCorners(mCurrentImageCorners);\n  deltaScale=Math.max(tempCropRect.width() / currentImageSides[0],tempCropRect.height() / currentImageSides[1]);\n  deltaScale=deltaScale * currentScale - currentScale;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 100,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2101,
        "startLineNumber" : 275,
        "startColumnNumber" : 56,
        "endLineNumber" : 320,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  float currentX=mCurrentImageCenter[0];\n  float currentY=mCurrentImageCenter[1];\n  float currentScale=getCurrentScale();\n  float deltaX=mCropRect.centerX() - currentX;\n  float deltaY=mCropRect.centerY() - currentY;\n  float deltaScale=0;\n  mTempMatrix.reset();\n  mTempMatrix.setTranslate(deltaX,deltaY);\n  final float[] tempCurrentImageCorners=Arrays.copyOf(mCurrentImageCorners,mCurrentImageCorners.length);\n  mTempMatrix.mapPoints(tempCurrentImageCorners);\n  boolean willImageWrapCropBoundsAfterTranslate=isImageWrapCropBounds(tempCurrentImageCorners);\n  if (willImageWrapCropBoundsAfterTranslate) {\n    final float[] imageIndents=calculateImageIndents();\n    deltaX=-(imageIndents[0] + imageIndents[2]);\n    deltaY=-(imageIndents[1] + imageIndents[3]);\n  }\n else {\n    RectF tempCropRect=new RectF(mCropRect);\n    mTempMatrix.reset();\n    mTempMatrix.setRotate(getCurrentAngle());\n    mTempMatrix.mapRect(tempCropRect);\n    final float[] currentImageSides=RectUtils.getRectSidesFromCorners(mCurrentImageCorners);\n    deltaScale=Math.max(tempCropRect.width() / currentImageSides[0],tempCropRect.height() / currentImageSides[1]);\n    deltaScale=deltaScale * currentScale - currentScale;\n  }\n  if (animate) {\n    post(mWrapCropBoundsRunnable=new WrapCropBoundsRunnable(CropImageView.this,mImageToWrapCropBoundsAnimDuration,currentX,currentY,deltaX,deltaY,currentScale,deltaScale,willImageWrapCropBoundsAfterTranslate));\n  }\n else {\n    postTranslate(deltaX,deltaY);\n    if (!willImageWrapCropBoundsAfterTranslate) {\n      zoomInImage(currentScale + deltaScale,mCropRect.centerX(),mCropRect.centerY());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 223,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2149,
        "startLineNumber" : 275,
        "startColumnNumber" : 8,
        "endLineNumber" : 320,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mBitmapLaidOut && !isImageWrapCropBounds()) {\n  float currentX=mCurrentImageCenter[0];\n  float currentY=mCurrentImageCenter[1];\n  float currentScale=getCurrentScale();\n  float deltaX=mCropRect.centerX() - currentX;\n  float deltaY=mCropRect.centerY() - currentY;\n  float deltaScale=0;\n  mTempMatrix.reset();\n  mTempMatrix.setTranslate(deltaX,deltaY);\n  final float[] tempCurrentImageCorners=Arrays.copyOf(mCurrentImageCorners,mCurrentImageCorners.length);\n  mTempMatrix.mapPoints(tempCurrentImageCorners);\n  boolean willImageWrapCropBoundsAfterTranslate=isImageWrapCropBounds(tempCurrentImageCorners);\n  if (willImageWrapCropBoundsAfterTranslate) {\n    final float[] imageIndents=calculateImageIndents();\n    deltaX=-(imageIndents[0] + imageIndents[2]);\n    deltaY=-(imageIndents[1] + imageIndents[3]);\n  }\n else {\n    RectF tempCropRect=new RectF(mCropRect);\n    mTempMatrix.reset();\n    mTempMatrix.setRotate(getCurrentAngle());\n    mTempMatrix.mapRect(tempCropRect);\n    final float[] currentImageSides=RectUtils.getRectSidesFromCorners(mCurrentImageCorners);\n    deltaScale=Math.max(tempCropRect.width() / currentImageSides[0],tempCropRect.height() / currentImageSides[1]);\n    deltaScale=deltaScale * currentScale - currentScale;\n  }\n  if (animate) {\n    post(mWrapCropBoundsRunnable=new WrapCropBoundsRunnable(CropImageView.this,mImageToWrapCropBoundsAnimDuration,currentX,currentY,deltaX,deltaY,currentScale,deltaScale,willImageWrapCropBoundsAfterTranslate));\n  }\n else {\n    postTranslate(deltaX,deltaY);\n    if (!willImageWrapCropBoundsAfterTranslate) {\n      zoomInImage(currentScale + deltaScale,mCropRect.centerX(),mCropRect.centerY());\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 229,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2165,
        "startLineNumber" : 274,
        "startColumnNumber" : 58,
        "endLineNumber" : 321,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mBitmapLaidOut && !isImageWrapCropBounds()) {\n    float currentX=mCurrentImageCenter[0];\n    float currentY=mCurrentImageCenter[1];\n    float currentScale=getCurrentScale();\n    float deltaX=mCropRect.centerX() - currentX;\n    float deltaY=mCropRect.centerY() - currentY;\n    float deltaScale=0;\n    mTempMatrix.reset();\n    mTempMatrix.setTranslate(deltaX,deltaY);\n    final float[] tempCurrentImageCorners=Arrays.copyOf(mCurrentImageCorners,mCurrentImageCorners.length);\n    mTempMatrix.mapPoints(tempCurrentImageCorners);\n    boolean willImageWrapCropBoundsAfterTranslate=isImageWrapCropBounds(tempCurrentImageCorners);\n    if (willImageWrapCropBoundsAfterTranslate) {\n      final float[] imageIndents=calculateImageIndents();\n      deltaX=-(imageIndents[0] + imageIndents[2]);\n      deltaY=-(imageIndents[1] + imageIndents[3]);\n    }\n else {\n      RectF tempCropRect=new RectF(mCropRect);\n      mTempMatrix.reset();\n      mTempMatrix.setRotate(getCurrentAngle());\n      mTempMatrix.mapRect(tempCropRect);\n      final float[] currentImageSides=RectUtils.getRectSidesFromCorners(mCurrentImageCorners);\n      deltaScale=Math.max(tempCropRect.width() / currentImageSides[0],tempCropRect.height() / currentImageSides[1]);\n      deltaScale=deltaScale * currentScale - currentScale;\n    }\n    if (animate) {\n      post(mWrapCropBoundsRunnable=new WrapCropBoundsRunnable(CropImageView.this,mImageToWrapCropBoundsAnimDuration,currentX,currentY,deltaX,deltaY,currentScale,deltaScale,willImageWrapCropBoundsAfterTranslate));\n    }\n else {\n      postTranslate(deltaX,deltaY);\n      if (!willImageWrapCropBoundsAfterTranslate) {\n        zoomInImage(currentScale + deltaScale,mCropRect.centerX(),mCropRect.centerY());\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 230,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2701,
        "startLineNumber" : 266,
        "startColumnNumber" : 4,
        "endLineNumber" : 321,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * If image doesn't fill the crop bounds it must be translated and scaled properly to fill those. <p/> Therefore this method calculates delta X, Y and scale values and passes them to the {@link WrapCropBoundsRunnable} which animates image.Scale value must be calculated only if image won't fill the crop bounds after it's translated to the crop bounds rectangle center. Using temporary variables this method checks this case.\n */\npublic void setImageToWrapCropBounds(boolean animate){\n  if (mBitmapLaidOut && !isImageWrapCropBounds()) {\n    float currentX=mCurrentImageCenter[0];\n    float currentY=mCurrentImageCenter[1];\n    float currentScale=getCurrentScale();\n    float deltaX=mCropRect.centerX() - currentX;\n    float deltaY=mCropRect.centerY() - currentY;\n    float deltaScale=0;\n    mTempMatrix.reset();\n    mTempMatrix.setTranslate(deltaX,deltaY);\n    final float[] tempCurrentImageCorners=Arrays.copyOf(mCurrentImageCorners,mCurrentImageCorners.length);\n    mTempMatrix.mapPoints(tempCurrentImageCorners);\n    boolean willImageWrapCropBoundsAfterTranslate=isImageWrapCropBounds(tempCurrentImageCorners);\n    if (willImageWrapCropBoundsAfterTranslate) {\n      final float[] imageIndents=calculateImageIndents();\n      deltaX=-(imageIndents[0] + imageIndents[2]);\n      deltaY=-(imageIndents[1] + imageIndents[3]);\n    }\n else {\n      RectF tempCropRect=new RectF(mCropRect);\n      mTempMatrix.reset();\n      mTempMatrix.setRotate(getCurrentAngle());\n      mTempMatrix.mapRect(tempCropRect);\n      final float[] currentImageSides=RectUtils.getRectSidesFromCorners(mCurrentImageCorners);\n      deltaScale=Math.max(tempCropRect.width() / currentImageSides[0],tempCropRect.height() / currentImageSides[1]);\n      deltaScale=deltaScale * currentScale - currentScale;\n    }\n    if (animate) {\n      post(mWrapCropBoundsRunnable=new WrapCropBoundsRunnable(CropImageView.this,mImageToWrapCropBoundsAnimDuration,currentX,currentY,deltaX,deltaY,currentScale,deltaScale,willImageWrapCropBoundsAfterTranslate));\n    }\n else {\n      postTranslate(deltaX,deltaY);\n      if (!willImageWrapCropBoundsAfterTranslate) {\n        zoomInImage(currentScale + deltaScale,mCropRect.centerX(),mCropRect.centerY());\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 238,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 303,
        "startColumnNumber" : 16,
        "endLineNumber" : 303,
        "endColumnNumber" : 106
      },
      "nodeContext" : "final float[] currentImageSides=RectUtils.getRectSidesFromCorners(mCurrentImageCorners);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "float[]"
  } ],
  "positionList" : [ {
    "charLength" : 55,
    "startLineNumber" : 303,
    "startColumnNumber" : 50,
    "endLineNumber" : 303,
    "endColumnNumber" : 105
  } ],
  "layoutRelationDataList" : [ ]
}