{
  "id" : 61,
  "expression" : "true",
  "projectName" : "PhilJay@MPAndroidChart",
  "commitID" : "43046425fc2ed73d0d3f177759706116e02a9053",
  "filePath" : "/MPChartExample/src/com/xxmassdeveloper/mpchartexample/LineChartActivity2.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "true",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 69,
      "startColumnNumber" : 35,
      "endLineNumber" : 69,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 40
      },
      "nodeContext" : "mChart.setHighlightEnabled(true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 41
      },
      "nodeContext" : "mChart.setHighlightEnabled(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2751,
        "startLineNumber" : 44,
        "startColumnNumber" : 55,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super.onCreate(savedInstanceState);\n  getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);\n  setContentView(R.layout.activity_linechart);\n  tvX=(TextView)findViewById(R.id.tvXMax);\n  tvY=(TextView)findViewById(R.id.tvYMax);\n  mSeekBarX=(SeekBar)findViewById(R.id.seekBar1);\n  mSeekBarY=(SeekBar)findViewById(R.id.seekBar2);\n  mSeekBarX.setProgress(45);\n  mSeekBarY.setProgress(100);\n  mSeekBarY.setOnSeekBarChangeListener(this);\n  mSeekBarX.setOnSeekBarChangeListener(this);\n  mChart=(LineChart)findViewById(R.id.chart1);\n  mChart.setOnChartValueSelectedListener(this);\n  mChart.setDescription(\"\");\n  mChart.setNoDataTextDescription(\"You need to provide data for the chart.\");\n  mChart.setHighlightEnabled(true);\n  mChart.setTouchEnabled(true);\n  mChart.setDragEnabled(true);\n  mChart.setScaleEnabled(true);\n  mChart.setDrawGridBackground(false);\n  mChart.setPinchZoom(true);\n  mChart.setBackgroundColor(Color.LTGRAY);\n  setData(20,30);\n  mChart.animateX(2500);\n  Typeface tf=Typeface.createFromAsset(getAssets(),\"OpenSans-Regular.ttf\");\n  Legend l=mChart.getLegend();\n  l.setForm(LegendForm.LINE);\n  l.setTypeface(tf);\n  l.setTextSize(11f);\n  l.setTextColor(Color.WHITE);\n  l.setPosition(LegendPosition.BELOW_CHART_LEFT);\n  XAxis xAxis=mChart.getXAxis();\n  xAxis.setTypeface(tf);\n  xAxis.setTextSize(12f);\n  xAxis.setTextColor(Color.WHITE);\n  xAxis.setDrawGridLines(false);\n  xAxis.setDrawAxisLine(false);\n  xAxis.setSpaceBetweenLabels(1);\n  YAxis leftAxis=mChart.getAxisLeft();\n  leftAxis.setTypeface(tf);\n  leftAxis.setTextColor(ColorTemplate.getHoloBlue());\n  leftAxis.setAxisMaxValue(200f);\n  leftAxis.setDrawGridLines(true);\n  YAxis rightAxis=mChart.getAxisRight();\n  rightAxis.setTypeface(tf);\n  rightAxis.setTextColor(Color.RED);\n  rightAxis.setAxisMaxValue(900);\n  rightAxis.setStartAtZero(false);\n  rightAxis.setAxisMinValue(-200);\n  rightAxis.setDrawGridLines(false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 336,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2816,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);\n  setContentView(R.layout.activity_linechart);\n  tvX=(TextView)findViewById(R.id.tvXMax);\n  tvY=(TextView)findViewById(R.id.tvYMax);\n  mSeekBarX=(SeekBar)findViewById(R.id.seekBar1);\n  mSeekBarY=(SeekBar)findViewById(R.id.seekBar2);\n  mSeekBarX.setProgress(45);\n  mSeekBarY.setProgress(100);\n  mSeekBarY.setOnSeekBarChangeListener(this);\n  mSeekBarX.setOnSeekBarChangeListener(this);\n  mChart=(LineChart)findViewById(R.id.chart1);\n  mChart.setOnChartValueSelectedListener(this);\n  mChart.setDescription(\"\");\n  mChart.setNoDataTextDescription(\"You need to provide data for the chart.\");\n  mChart.setHighlightEnabled(true);\n  mChart.setTouchEnabled(true);\n  mChart.setDragEnabled(true);\n  mChart.setScaleEnabled(true);\n  mChart.setDrawGridBackground(false);\n  mChart.setPinchZoom(true);\n  mChart.setBackgroundColor(Color.LTGRAY);\n  setData(20,30);\n  mChart.animateX(2500);\n  Typeface tf=Typeface.createFromAsset(getAssets(),\"OpenSans-Regular.ttf\");\n  Legend l=mChart.getLegend();\n  l.setForm(LegendForm.LINE);\n  l.setTypeface(tf);\n  l.setTextSize(11f);\n  l.setTextColor(Color.WHITE);\n  l.setPosition(LegendPosition.BELOW_CHART_LEFT);\n  XAxis xAxis=mChart.getXAxis();\n  xAxis.setTypeface(tf);\n  xAxis.setTextSize(12f);\n  xAxis.setTextColor(Color.WHITE);\n  xAxis.setDrawGridLines(false);\n  xAxis.setDrawAxisLine(false);\n  xAxis.setSpaceBetweenLabels(1);\n  YAxis leftAxis=mChart.getAxisLeft();\n  leftAxis.setTypeface(tf);\n  leftAxis.setTextColor(ColorTemplate.getHoloBlue());\n  leftAxis.setAxisMaxValue(200f);\n  leftAxis.setDrawGridLines(true);\n  YAxis rightAxis=mChart.getAxisRight();\n  rightAxis.setTypeface(tf);\n  rightAxis.setTextColor(Color.RED);\n  rightAxis.setAxisMaxValue(900);\n  rightAxis.setStartAtZero(false);\n  rightAxis.setAxisMinValue(-200);\n  rightAxis.setDrawGridLines(false);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 346,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 41
      },
      "nodeContext" : "mChart.setHighlightEnabled(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  }, {
    "nodeContext" : "true",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 72,
      "startColumnNumber" : 31,
      "endLineNumber" : 72,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 36
      },
      "nodeContext" : "mChart.setTouchEnabled(true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 37
      },
      "nodeContext" : "mChart.setTouchEnabled(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2751,
        "startLineNumber" : 44,
        "startColumnNumber" : 55,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super.onCreate(savedInstanceState);\n  getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);\n  setContentView(R.layout.activity_linechart);\n  tvX=(TextView)findViewById(R.id.tvXMax);\n  tvY=(TextView)findViewById(R.id.tvYMax);\n  mSeekBarX=(SeekBar)findViewById(R.id.seekBar1);\n  mSeekBarY=(SeekBar)findViewById(R.id.seekBar2);\n  mSeekBarX.setProgress(45);\n  mSeekBarY.setProgress(100);\n  mSeekBarY.setOnSeekBarChangeListener(this);\n  mSeekBarX.setOnSeekBarChangeListener(this);\n  mChart=(LineChart)findViewById(R.id.chart1);\n  mChart.setOnChartValueSelectedListener(this);\n  mChart.setDescription(\"\");\n  mChart.setNoDataTextDescription(\"You need to provide data for the chart.\");\n  mChart.setHighlightEnabled(true);\n  mChart.setTouchEnabled(true);\n  mChart.setDragEnabled(true);\n  mChart.setScaleEnabled(true);\n  mChart.setDrawGridBackground(false);\n  mChart.setPinchZoom(true);\n  mChart.setBackgroundColor(Color.LTGRAY);\n  setData(20,30);\n  mChart.animateX(2500);\n  Typeface tf=Typeface.createFromAsset(getAssets(),\"OpenSans-Regular.ttf\");\n  Legend l=mChart.getLegend();\n  l.setForm(LegendForm.LINE);\n  l.setTypeface(tf);\n  l.setTextSize(11f);\n  l.setTextColor(Color.WHITE);\n  l.setPosition(LegendPosition.BELOW_CHART_LEFT);\n  XAxis xAxis=mChart.getXAxis();\n  xAxis.setTypeface(tf);\n  xAxis.setTextSize(12f);\n  xAxis.setTextColor(Color.WHITE);\n  xAxis.setDrawGridLines(false);\n  xAxis.setDrawAxisLine(false);\n  xAxis.setSpaceBetweenLabels(1);\n  YAxis leftAxis=mChart.getAxisLeft();\n  leftAxis.setTypeface(tf);\n  leftAxis.setTextColor(ColorTemplate.getHoloBlue());\n  leftAxis.setAxisMaxValue(200f);\n  leftAxis.setDrawGridLines(true);\n  YAxis rightAxis=mChart.getAxisRight();\n  rightAxis.setTypeface(tf);\n  rightAxis.setTextColor(Color.RED);\n  rightAxis.setAxisMaxValue(900);\n  rightAxis.setStartAtZero(false);\n  rightAxis.setAxisMinValue(-200);\n  rightAxis.setDrawGridLines(false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 336,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2816,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);\n  setContentView(R.layout.activity_linechart);\n  tvX=(TextView)findViewById(R.id.tvXMax);\n  tvY=(TextView)findViewById(R.id.tvYMax);\n  mSeekBarX=(SeekBar)findViewById(R.id.seekBar1);\n  mSeekBarY=(SeekBar)findViewById(R.id.seekBar2);\n  mSeekBarX.setProgress(45);\n  mSeekBarY.setProgress(100);\n  mSeekBarY.setOnSeekBarChangeListener(this);\n  mSeekBarX.setOnSeekBarChangeListener(this);\n  mChart=(LineChart)findViewById(R.id.chart1);\n  mChart.setOnChartValueSelectedListener(this);\n  mChart.setDescription(\"\");\n  mChart.setNoDataTextDescription(\"You need to provide data for the chart.\");\n  mChart.setHighlightEnabled(true);\n  mChart.setTouchEnabled(true);\n  mChart.setDragEnabled(true);\n  mChart.setScaleEnabled(true);\n  mChart.setDrawGridBackground(false);\n  mChart.setPinchZoom(true);\n  mChart.setBackgroundColor(Color.LTGRAY);\n  setData(20,30);\n  mChart.animateX(2500);\n  Typeface tf=Typeface.createFromAsset(getAssets(),\"OpenSans-Regular.ttf\");\n  Legend l=mChart.getLegend();\n  l.setForm(LegendForm.LINE);\n  l.setTypeface(tf);\n  l.setTextSize(11f);\n  l.setTextColor(Color.WHITE);\n  l.setPosition(LegendPosition.BELOW_CHART_LEFT);\n  XAxis xAxis=mChart.getXAxis();\n  xAxis.setTypeface(tf);\n  xAxis.setTextSize(12f);\n  xAxis.setTextColor(Color.WHITE);\n  xAxis.setDrawGridLines(false);\n  xAxis.setDrawAxisLine(false);\n  xAxis.setSpaceBetweenLabels(1);\n  YAxis leftAxis=mChart.getAxisLeft();\n  leftAxis.setTypeface(tf);\n  leftAxis.setTextColor(ColorTemplate.getHoloBlue());\n  leftAxis.setAxisMaxValue(200f);\n  leftAxis.setDrawGridLines(true);\n  YAxis rightAxis=mChart.getAxisRight();\n  rightAxis.setTypeface(tf);\n  rightAxis.setTextColor(Color.RED);\n  rightAxis.setAxisMaxValue(900);\n  rightAxis.setStartAtZero(false);\n  rightAxis.setAxisMinValue(-200);\n  rightAxis.setDrawGridLines(false);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 346,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 37
      },
      "nodeContext" : "mChart.setTouchEnabled(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  }, {
    "nodeContext" : "true",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 75,
      "startColumnNumber" : 30,
      "endLineNumber" : 75,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 35
      },
      "nodeContext" : "mChart.setDragEnabled(true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 36
      },
      "nodeContext" : "mChart.setDragEnabled(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2751,
        "startLineNumber" : 44,
        "startColumnNumber" : 55,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super.onCreate(savedInstanceState);\n  getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);\n  setContentView(R.layout.activity_linechart);\n  tvX=(TextView)findViewById(R.id.tvXMax);\n  tvY=(TextView)findViewById(R.id.tvYMax);\n  mSeekBarX=(SeekBar)findViewById(R.id.seekBar1);\n  mSeekBarY=(SeekBar)findViewById(R.id.seekBar2);\n  mSeekBarX.setProgress(45);\n  mSeekBarY.setProgress(100);\n  mSeekBarY.setOnSeekBarChangeListener(this);\n  mSeekBarX.setOnSeekBarChangeListener(this);\n  mChart=(LineChart)findViewById(R.id.chart1);\n  mChart.setOnChartValueSelectedListener(this);\n  mChart.setDescription(\"\");\n  mChart.setNoDataTextDescription(\"You need to provide data for the chart.\");\n  mChart.setHighlightEnabled(true);\n  mChart.setTouchEnabled(true);\n  mChart.setDragEnabled(true);\n  mChart.setScaleEnabled(true);\n  mChart.setDrawGridBackground(false);\n  mChart.setPinchZoom(true);\n  mChart.setBackgroundColor(Color.LTGRAY);\n  setData(20,30);\n  mChart.animateX(2500);\n  Typeface tf=Typeface.createFromAsset(getAssets(),\"OpenSans-Regular.ttf\");\n  Legend l=mChart.getLegend();\n  l.setForm(LegendForm.LINE);\n  l.setTypeface(tf);\n  l.setTextSize(11f);\n  l.setTextColor(Color.WHITE);\n  l.setPosition(LegendPosition.BELOW_CHART_LEFT);\n  XAxis xAxis=mChart.getXAxis();\n  xAxis.setTypeface(tf);\n  xAxis.setTextSize(12f);\n  xAxis.setTextColor(Color.WHITE);\n  xAxis.setDrawGridLines(false);\n  xAxis.setDrawAxisLine(false);\n  xAxis.setSpaceBetweenLabels(1);\n  YAxis leftAxis=mChart.getAxisLeft();\n  leftAxis.setTypeface(tf);\n  leftAxis.setTextColor(ColorTemplate.getHoloBlue());\n  leftAxis.setAxisMaxValue(200f);\n  leftAxis.setDrawGridLines(true);\n  YAxis rightAxis=mChart.getAxisRight();\n  rightAxis.setTypeface(tf);\n  rightAxis.setTextColor(Color.RED);\n  rightAxis.setAxisMaxValue(900);\n  rightAxis.setStartAtZero(false);\n  rightAxis.setAxisMinValue(-200);\n  rightAxis.setDrawGridLines(false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 336,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2816,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);\n  setContentView(R.layout.activity_linechart);\n  tvX=(TextView)findViewById(R.id.tvXMax);\n  tvY=(TextView)findViewById(R.id.tvYMax);\n  mSeekBarX=(SeekBar)findViewById(R.id.seekBar1);\n  mSeekBarY=(SeekBar)findViewById(R.id.seekBar2);\n  mSeekBarX.setProgress(45);\n  mSeekBarY.setProgress(100);\n  mSeekBarY.setOnSeekBarChangeListener(this);\n  mSeekBarX.setOnSeekBarChangeListener(this);\n  mChart=(LineChart)findViewById(R.id.chart1);\n  mChart.setOnChartValueSelectedListener(this);\n  mChart.setDescription(\"\");\n  mChart.setNoDataTextDescription(\"You need to provide data for the chart.\");\n  mChart.setHighlightEnabled(true);\n  mChart.setTouchEnabled(true);\n  mChart.setDragEnabled(true);\n  mChart.setScaleEnabled(true);\n  mChart.setDrawGridBackground(false);\n  mChart.setPinchZoom(true);\n  mChart.setBackgroundColor(Color.LTGRAY);\n  setData(20,30);\n  mChart.animateX(2500);\n  Typeface tf=Typeface.createFromAsset(getAssets(),\"OpenSans-Regular.ttf\");\n  Legend l=mChart.getLegend();\n  l.setForm(LegendForm.LINE);\n  l.setTypeface(tf);\n  l.setTextSize(11f);\n  l.setTextColor(Color.WHITE);\n  l.setPosition(LegendPosition.BELOW_CHART_LEFT);\n  XAxis xAxis=mChart.getXAxis();\n  xAxis.setTypeface(tf);\n  xAxis.setTextSize(12f);\n  xAxis.setTextColor(Color.WHITE);\n  xAxis.setDrawGridLines(false);\n  xAxis.setDrawAxisLine(false);\n  xAxis.setSpaceBetweenLabels(1);\n  YAxis leftAxis=mChart.getAxisLeft();\n  leftAxis.setTypeface(tf);\n  leftAxis.setTextColor(ColorTemplate.getHoloBlue());\n  leftAxis.setAxisMaxValue(200f);\n  leftAxis.setDrawGridLines(true);\n  YAxis rightAxis=mChart.getAxisRight();\n  rightAxis.setTypeface(tf);\n  rightAxis.setTextColor(Color.RED);\n  rightAxis.setAxisMaxValue(900);\n  rightAxis.setStartAtZero(false);\n  rightAxis.setAxisMinValue(-200);\n  rightAxis.setDrawGridLines(false);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 346,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 36
      },
      "nodeContext" : "mChart.setDragEnabled(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  }, {
    "nodeContext" : "true",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 76,
      "startColumnNumber" : 31,
      "endLineNumber" : 76,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 36
      },
      "nodeContext" : "mChart.setScaleEnabled(true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 37
      },
      "nodeContext" : "mChart.setScaleEnabled(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2751,
        "startLineNumber" : 44,
        "startColumnNumber" : 55,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super.onCreate(savedInstanceState);\n  getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);\n  setContentView(R.layout.activity_linechart);\n  tvX=(TextView)findViewById(R.id.tvXMax);\n  tvY=(TextView)findViewById(R.id.tvYMax);\n  mSeekBarX=(SeekBar)findViewById(R.id.seekBar1);\n  mSeekBarY=(SeekBar)findViewById(R.id.seekBar2);\n  mSeekBarX.setProgress(45);\n  mSeekBarY.setProgress(100);\n  mSeekBarY.setOnSeekBarChangeListener(this);\n  mSeekBarX.setOnSeekBarChangeListener(this);\n  mChart=(LineChart)findViewById(R.id.chart1);\n  mChart.setOnChartValueSelectedListener(this);\n  mChart.setDescription(\"\");\n  mChart.setNoDataTextDescription(\"You need to provide data for the chart.\");\n  mChart.setHighlightEnabled(true);\n  mChart.setTouchEnabled(true);\n  mChart.setDragEnabled(true);\n  mChart.setScaleEnabled(true);\n  mChart.setDrawGridBackground(false);\n  mChart.setPinchZoom(true);\n  mChart.setBackgroundColor(Color.LTGRAY);\n  setData(20,30);\n  mChart.animateX(2500);\n  Typeface tf=Typeface.createFromAsset(getAssets(),\"OpenSans-Regular.ttf\");\n  Legend l=mChart.getLegend();\n  l.setForm(LegendForm.LINE);\n  l.setTypeface(tf);\n  l.setTextSize(11f);\n  l.setTextColor(Color.WHITE);\n  l.setPosition(LegendPosition.BELOW_CHART_LEFT);\n  XAxis xAxis=mChart.getXAxis();\n  xAxis.setTypeface(tf);\n  xAxis.setTextSize(12f);\n  xAxis.setTextColor(Color.WHITE);\n  xAxis.setDrawGridLines(false);\n  xAxis.setDrawAxisLine(false);\n  xAxis.setSpaceBetweenLabels(1);\n  YAxis leftAxis=mChart.getAxisLeft();\n  leftAxis.setTypeface(tf);\n  leftAxis.setTextColor(ColorTemplate.getHoloBlue());\n  leftAxis.setAxisMaxValue(200f);\n  leftAxis.setDrawGridLines(true);\n  YAxis rightAxis=mChart.getAxisRight();\n  rightAxis.setTypeface(tf);\n  rightAxis.setTextColor(Color.RED);\n  rightAxis.setAxisMaxValue(900);\n  rightAxis.setStartAtZero(false);\n  rightAxis.setAxisMinValue(-200);\n  rightAxis.setDrawGridLines(false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 336,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2816,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);\n  setContentView(R.layout.activity_linechart);\n  tvX=(TextView)findViewById(R.id.tvXMax);\n  tvY=(TextView)findViewById(R.id.tvYMax);\n  mSeekBarX=(SeekBar)findViewById(R.id.seekBar1);\n  mSeekBarY=(SeekBar)findViewById(R.id.seekBar2);\n  mSeekBarX.setProgress(45);\n  mSeekBarY.setProgress(100);\n  mSeekBarY.setOnSeekBarChangeListener(this);\n  mSeekBarX.setOnSeekBarChangeListener(this);\n  mChart=(LineChart)findViewById(R.id.chart1);\n  mChart.setOnChartValueSelectedListener(this);\n  mChart.setDescription(\"\");\n  mChart.setNoDataTextDescription(\"You need to provide data for the chart.\");\n  mChart.setHighlightEnabled(true);\n  mChart.setTouchEnabled(true);\n  mChart.setDragEnabled(true);\n  mChart.setScaleEnabled(true);\n  mChart.setDrawGridBackground(false);\n  mChart.setPinchZoom(true);\n  mChart.setBackgroundColor(Color.LTGRAY);\n  setData(20,30);\n  mChart.animateX(2500);\n  Typeface tf=Typeface.createFromAsset(getAssets(),\"OpenSans-Regular.ttf\");\n  Legend l=mChart.getLegend();\n  l.setForm(LegendForm.LINE);\n  l.setTypeface(tf);\n  l.setTextSize(11f);\n  l.setTextColor(Color.WHITE);\n  l.setPosition(LegendPosition.BELOW_CHART_LEFT);\n  XAxis xAxis=mChart.getXAxis();\n  xAxis.setTypeface(tf);\n  xAxis.setTextSize(12f);\n  xAxis.setTextColor(Color.WHITE);\n  xAxis.setDrawGridLines(false);\n  xAxis.setDrawAxisLine(false);\n  xAxis.setSpaceBetweenLabels(1);\n  YAxis leftAxis=mChart.getAxisLeft();\n  leftAxis.setTypeface(tf);\n  leftAxis.setTextColor(ColorTemplate.getHoloBlue());\n  leftAxis.setAxisMaxValue(200f);\n  leftAxis.setDrawGridLines(true);\n  YAxis rightAxis=mChart.getAxisRight();\n  rightAxis.setTypeface(tf);\n  rightAxis.setTextColor(Color.RED);\n  rightAxis.setAxisMaxValue(900);\n  rightAxis.setStartAtZero(false);\n  rightAxis.setAxisMinValue(-200);\n  rightAxis.setDrawGridLines(false);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 346,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 37
      },
      "nodeContext" : "mChart.setScaleEnabled(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  }, {
    "nodeContext" : "true",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 80,
      "startColumnNumber" : 28,
      "endLineNumber" : 80,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 33
      },
      "nodeContext" : "mChart.setPinchZoom(true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 34
      },
      "nodeContext" : "mChart.setPinchZoom(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2751,
        "startLineNumber" : 44,
        "startColumnNumber" : 55,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super.onCreate(savedInstanceState);\n  getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);\n  setContentView(R.layout.activity_linechart);\n  tvX=(TextView)findViewById(R.id.tvXMax);\n  tvY=(TextView)findViewById(R.id.tvYMax);\n  mSeekBarX=(SeekBar)findViewById(R.id.seekBar1);\n  mSeekBarY=(SeekBar)findViewById(R.id.seekBar2);\n  mSeekBarX.setProgress(45);\n  mSeekBarY.setProgress(100);\n  mSeekBarY.setOnSeekBarChangeListener(this);\n  mSeekBarX.setOnSeekBarChangeListener(this);\n  mChart=(LineChart)findViewById(R.id.chart1);\n  mChart.setOnChartValueSelectedListener(this);\n  mChart.setDescription(\"\");\n  mChart.setNoDataTextDescription(\"You need to provide data for the chart.\");\n  mChart.setHighlightEnabled(true);\n  mChart.setTouchEnabled(true);\n  mChart.setDragEnabled(true);\n  mChart.setScaleEnabled(true);\n  mChart.setDrawGridBackground(false);\n  mChart.setPinchZoom(true);\n  mChart.setBackgroundColor(Color.LTGRAY);\n  setData(20,30);\n  mChart.animateX(2500);\n  Typeface tf=Typeface.createFromAsset(getAssets(),\"OpenSans-Regular.ttf\");\n  Legend l=mChart.getLegend();\n  l.setForm(LegendForm.LINE);\n  l.setTypeface(tf);\n  l.setTextSize(11f);\n  l.setTextColor(Color.WHITE);\n  l.setPosition(LegendPosition.BELOW_CHART_LEFT);\n  XAxis xAxis=mChart.getXAxis();\n  xAxis.setTypeface(tf);\n  xAxis.setTextSize(12f);\n  xAxis.setTextColor(Color.WHITE);\n  xAxis.setDrawGridLines(false);\n  xAxis.setDrawAxisLine(false);\n  xAxis.setSpaceBetweenLabels(1);\n  YAxis leftAxis=mChart.getAxisLeft();\n  leftAxis.setTypeface(tf);\n  leftAxis.setTextColor(ColorTemplate.getHoloBlue());\n  leftAxis.setAxisMaxValue(200f);\n  leftAxis.setDrawGridLines(true);\n  YAxis rightAxis=mChart.getAxisRight();\n  rightAxis.setTypeface(tf);\n  rightAxis.setTextColor(Color.RED);\n  rightAxis.setAxisMaxValue(900);\n  rightAxis.setStartAtZero(false);\n  rightAxis.setAxisMinValue(-200);\n  rightAxis.setDrawGridLines(false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 336,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2816,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);\n  setContentView(R.layout.activity_linechart);\n  tvX=(TextView)findViewById(R.id.tvXMax);\n  tvY=(TextView)findViewById(R.id.tvYMax);\n  mSeekBarX=(SeekBar)findViewById(R.id.seekBar1);\n  mSeekBarY=(SeekBar)findViewById(R.id.seekBar2);\n  mSeekBarX.setProgress(45);\n  mSeekBarY.setProgress(100);\n  mSeekBarY.setOnSeekBarChangeListener(this);\n  mSeekBarX.setOnSeekBarChangeListener(this);\n  mChart=(LineChart)findViewById(R.id.chart1);\n  mChart.setOnChartValueSelectedListener(this);\n  mChart.setDescription(\"\");\n  mChart.setNoDataTextDescription(\"You need to provide data for the chart.\");\n  mChart.setHighlightEnabled(true);\n  mChart.setTouchEnabled(true);\n  mChart.setDragEnabled(true);\n  mChart.setScaleEnabled(true);\n  mChart.setDrawGridBackground(false);\n  mChart.setPinchZoom(true);\n  mChart.setBackgroundColor(Color.LTGRAY);\n  setData(20,30);\n  mChart.animateX(2500);\n  Typeface tf=Typeface.createFromAsset(getAssets(),\"OpenSans-Regular.ttf\");\n  Legend l=mChart.getLegend();\n  l.setForm(LegendForm.LINE);\n  l.setTypeface(tf);\n  l.setTextSize(11f);\n  l.setTextColor(Color.WHITE);\n  l.setPosition(LegendPosition.BELOW_CHART_LEFT);\n  XAxis xAxis=mChart.getXAxis();\n  xAxis.setTypeface(tf);\n  xAxis.setTextSize(12f);\n  xAxis.setTextColor(Color.WHITE);\n  xAxis.setDrawGridLines(false);\n  xAxis.setDrawAxisLine(false);\n  xAxis.setSpaceBetweenLabels(1);\n  YAxis leftAxis=mChart.getAxisLeft();\n  leftAxis.setTypeface(tf);\n  leftAxis.setTextColor(ColorTemplate.getHoloBlue());\n  leftAxis.setAxisMaxValue(200f);\n  leftAxis.setDrawGridLines(true);\n  YAxis rightAxis=mChart.getAxisRight();\n  rightAxis.setTypeface(tf);\n  rightAxis.setTextColor(Color.RED);\n  rightAxis.setAxisMaxValue(900);\n  rightAxis.setStartAtZero(false);\n  rightAxis.setAxisMinValue(-200);\n  rightAxis.setDrawGridLines(false);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 346,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 34
      },
      "nodeContext" : "mChart.setPinchZoom(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  }, {
    "nodeContext" : "true",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 115,
      "startColumnNumber" : 34,
      "endLineNumber" : 115,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 115,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 39
      },
      "nodeContext" : "leftAxis.setDrawGridLines(true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 115,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 40
      },
      "nodeContext" : "leftAxis.setDrawGridLines(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2751,
        "startLineNumber" : 44,
        "startColumnNumber" : 55,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super.onCreate(savedInstanceState);\n  getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);\n  setContentView(R.layout.activity_linechart);\n  tvX=(TextView)findViewById(R.id.tvXMax);\n  tvY=(TextView)findViewById(R.id.tvYMax);\n  mSeekBarX=(SeekBar)findViewById(R.id.seekBar1);\n  mSeekBarY=(SeekBar)findViewById(R.id.seekBar2);\n  mSeekBarX.setProgress(45);\n  mSeekBarY.setProgress(100);\n  mSeekBarY.setOnSeekBarChangeListener(this);\n  mSeekBarX.setOnSeekBarChangeListener(this);\n  mChart=(LineChart)findViewById(R.id.chart1);\n  mChart.setOnChartValueSelectedListener(this);\n  mChart.setDescription(\"\");\n  mChart.setNoDataTextDescription(\"You need to provide data for the chart.\");\n  mChart.setHighlightEnabled(true);\n  mChart.setTouchEnabled(true);\n  mChart.setDragEnabled(true);\n  mChart.setScaleEnabled(true);\n  mChart.setDrawGridBackground(false);\n  mChart.setPinchZoom(true);\n  mChart.setBackgroundColor(Color.LTGRAY);\n  setData(20,30);\n  mChart.animateX(2500);\n  Typeface tf=Typeface.createFromAsset(getAssets(),\"OpenSans-Regular.ttf\");\n  Legend l=mChart.getLegend();\n  l.setForm(LegendForm.LINE);\n  l.setTypeface(tf);\n  l.setTextSize(11f);\n  l.setTextColor(Color.WHITE);\n  l.setPosition(LegendPosition.BELOW_CHART_LEFT);\n  XAxis xAxis=mChart.getXAxis();\n  xAxis.setTypeface(tf);\n  xAxis.setTextSize(12f);\n  xAxis.setTextColor(Color.WHITE);\n  xAxis.setDrawGridLines(false);\n  xAxis.setDrawAxisLine(false);\n  xAxis.setSpaceBetweenLabels(1);\n  YAxis leftAxis=mChart.getAxisLeft();\n  leftAxis.setTypeface(tf);\n  leftAxis.setTextColor(ColorTemplate.getHoloBlue());\n  leftAxis.setAxisMaxValue(200f);\n  leftAxis.setDrawGridLines(true);\n  YAxis rightAxis=mChart.getAxisRight();\n  rightAxis.setTypeface(tf);\n  rightAxis.setTextColor(Color.RED);\n  rightAxis.setAxisMaxValue(900);\n  rightAxis.setStartAtZero(false);\n  rightAxis.setAxisMinValue(-200);\n  rightAxis.setDrawGridLines(false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 336,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2816,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void onCreate(Bundle savedInstanceState){\n  super.onCreate(savedInstanceState);\n  getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);\n  setContentView(R.layout.activity_linechart);\n  tvX=(TextView)findViewById(R.id.tvXMax);\n  tvY=(TextView)findViewById(R.id.tvYMax);\n  mSeekBarX=(SeekBar)findViewById(R.id.seekBar1);\n  mSeekBarY=(SeekBar)findViewById(R.id.seekBar2);\n  mSeekBarX.setProgress(45);\n  mSeekBarY.setProgress(100);\n  mSeekBarY.setOnSeekBarChangeListener(this);\n  mSeekBarX.setOnSeekBarChangeListener(this);\n  mChart=(LineChart)findViewById(R.id.chart1);\n  mChart.setOnChartValueSelectedListener(this);\n  mChart.setDescription(\"\");\n  mChart.setNoDataTextDescription(\"You need to provide data for the chart.\");\n  mChart.setHighlightEnabled(true);\n  mChart.setTouchEnabled(true);\n  mChart.setDragEnabled(true);\n  mChart.setScaleEnabled(true);\n  mChart.setDrawGridBackground(false);\n  mChart.setPinchZoom(true);\n  mChart.setBackgroundColor(Color.LTGRAY);\n  setData(20,30);\n  mChart.animateX(2500);\n  Typeface tf=Typeface.createFromAsset(getAssets(),\"OpenSans-Regular.ttf\");\n  Legend l=mChart.getLegend();\n  l.setForm(LegendForm.LINE);\n  l.setTypeface(tf);\n  l.setTextSize(11f);\n  l.setTextColor(Color.WHITE);\n  l.setPosition(LegendPosition.BELOW_CHART_LEFT);\n  XAxis xAxis=mChart.getXAxis();\n  xAxis.setTypeface(tf);\n  xAxis.setTextSize(12f);\n  xAxis.setTextColor(Color.WHITE);\n  xAxis.setDrawGridLines(false);\n  xAxis.setDrawAxisLine(false);\n  xAxis.setSpaceBetweenLabels(1);\n  YAxis leftAxis=mChart.getAxisLeft();\n  leftAxis.setTypeface(tf);\n  leftAxis.setTextColor(ColorTemplate.getHoloBlue());\n  leftAxis.setAxisMaxValue(200f);\n  leftAxis.setDrawGridLines(true);\n  YAxis rightAxis=mChart.getAxisRight();\n  rightAxis.setTypeface(tf);\n  rightAxis.setTextColor(Color.RED);\n  rightAxis.setAxisMaxValue(900);\n  rightAxis.setStartAtZero(false);\n  rightAxis.setAxisMinValue(-200);\n  rightAxis.setDrawGridLines(false);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 346,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 115,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 40
      },
      "nodeContext" : "leftAxis.setDrawGridLines(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 69,
    "startColumnNumber" : 35,
    "endLineNumber" : 69,
    "endColumnNumber" : 39
  }, {
    "charLength" : 4,
    "startLineNumber" : 72,
    "startColumnNumber" : 31,
    "endLineNumber" : 72,
    "endColumnNumber" : 35
  }, {
    "charLength" : 4,
    "startLineNumber" : 75,
    "startColumnNumber" : 30,
    "endLineNumber" : 75,
    "endColumnNumber" : 34
  }, {
    "charLength" : 4,
    "startLineNumber" : 76,
    "startColumnNumber" : 31,
    "endLineNumber" : 76,
    "endColumnNumber" : 35
  }, {
    "charLength" : 4,
    "startLineNumber" : 80,
    "startColumnNumber" : 28,
    "endLineNumber" : 80,
    "endColumnNumber" : 32
  }, {
    "charLength" : 4,
    "startLineNumber" : 115,
    "startColumnNumber" : 34,
    "endLineNumber" : 115,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 2
  } ]
}