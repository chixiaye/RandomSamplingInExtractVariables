{
  "id" : 34,
  "expression" : "simpleBinaryName()",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/independent-projects/tools/utilities/src/main/java/io/quarkus/utilities/JavaBinFinder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "simpleBinaryName()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 35,
      "startColumnNumber" : 23,
      "endLineNumber" : 35,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 35,
        "startColumnNumber" : 16,
        "endLineNumber" : 35,
        "endColumnNumber" : 41
      },
      "nodeContext" : "java=simpleBinaryName()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 35,
        "startColumnNumber" : 16,
        "endLineNumber" : 35,
        "endColumnNumber" : 42
      },
      "nodeContext" : "java=simpleBinaryName();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 34,
        "startColumnNumber" : 30,
        "endLineNumber" : 36,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  java=simpleBinaryName();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 34,
        "startColumnNumber" : 12,
        "endLineNumber" : 36,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (java == null) {\n  java=simpleBinaryName();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 735,
        "startLineNumber" : 18,
        "startColumnNumber" : 37,
        "endLineNumber" : 37,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  java=null;\n  if (OS.determineOS() == OS.WINDOWS && System.getenv().containsKey(\"PATHEXT\")) {\n    String extpath=System.getenv(\"PATHEXT\");\n    String[] exts=extpath.split(\";\");\n    for (    String ext : exts) {\n      File winExe=new File(javaCheck.getAbsolutePath() + ext);\n      if (winExe.canExecute()) {\n        java=winExe.getAbsolutePath();\n        break;\n      }\n    }\n  }\n  if (java == null) {\n    java=simpleBinaryName();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 764,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!javaCheck.canExecute()) {\n  java=null;\n  if (OS.determineOS() == OS.WINDOWS && System.getenv().containsKey(\"PATHEXT\")) {\n    String extpath=System.getenv(\"PATHEXT\");\n    String[] exts=extpath.split(\";\");\n    for (    String ext : exts) {\n      File winExe=new File(javaCheck.getAbsolutePath() + ext);\n      if (winExe.canExecute()) {\n        java=winExe.getAbsolutePath();\n        break;\n      }\n    }\n  }\n  if (java == null) {\n    java=simpleBinaryName();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 88,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1027,
        "startLineNumber" : 14,
        "startColumnNumber" : 35,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String java=System.getProperty(\"java.home\") + File.separator + \"bin\"+ File.separator+ \"java\";\n  File javaCheck=new File(java);\n  if (!javaCheck.canExecute()) {\n    java=null;\n    if (OS.determineOS() == OS.WINDOWS && System.getenv().containsKey(\"PATHEXT\")) {\n      String extpath=System.getenv(\"PATHEXT\");\n      String[] exts=extpath.split(\";\");\n      for (      String ext : exts) {\n        File winExe=new File(javaCheck.getAbsolutePath() + ext);\n        if (winExe.canExecute()) {\n          java=winExe.getAbsolutePath();\n          break;\n        }\n      }\n    }\n    if (java == null) {\n      java=simpleBinaryName();\n    }\n  }\n  return java;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1286,
        "startLineNumber" : 6,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Search for the java command in the order: 1. maven-toolchains plugin configuration 2. java.home location 3. java[.exe] on the system path\n * @return the java command to use\n */\npublic static String findBin(){\n  String java=System.getProperty(\"java.home\") + File.separator + \"bin\"+ File.separator+ \"java\";\n  File javaCheck=new File(java);\n  if (!javaCheck.canExecute()) {\n    java=null;\n    if (OS.determineOS() == OS.WINDOWS && System.getenv().containsKey(\"PATHEXT\")) {\n      String extpath=System.getenv(\"PATHEXT\");\n      String[] exts=extpath.split(\";\");\n      for (      String ext : exts) {\n        File winExe=new File(javaCheck.getAbsolutePath() + ext);\n        if (winExe.canExecute()) {\n          java=winExe.getAbsolutePath();\n          break;\n        }\n      }\n    }\n    if (java == null) {\n      java=simpleBinaryName();\n    }\n  }\n  return java;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 35,
        "startColumnNumber" : 16,
        "endLineNumber" : 35,
        "endColumnNumber" : 42
      },
      "nodeContext" : "java=simpleBinaryName();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 35,
    "startColumnNumber" : 23,
    "endLineNumber" : 35,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}