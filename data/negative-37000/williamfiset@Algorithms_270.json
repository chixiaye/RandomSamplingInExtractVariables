{
  "id" : 270,
  "expression" : "i < n",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/geometry/ConvexPolygonCutWithLineSegment.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i < n",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 62,
      "startColumnNumber" : 31,
      "endLineNumber" : 62,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 354,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0, j=n - 1; i < n; j=i++) {\n  int d1=orientation(p1.x,p1.y,p2.x,p2.y,poly[j].x,poly[j].y);\n  int d2=orientation(p1.x,p1.y,p2.x,p2.y,poly[i].x,poly[i].y);\n  if (d1 >= 0)   res.add(poly[j]);\n  if (d1 * d2 < 0)   res.add(intersect(p1.x,p1.y,p2.x,p2.y,poly[j].x,poly[j].y,poly[i].x,poly[i].y));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 130,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 471,
        "startLineNumber" : 59,
        "startColumnNumber" : 50,
        "endLineNumber" : 70,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int n=poly.length;\n  List<Pt> res=new ArrayList<>();\n  for (int i=0, j=n - 1; i < n; j=i++) {\n    int d1=orientation(p1.x,p1.y,p2.x,p2.y,poly[j].x,poly[j].y);\n    int d2=orientation(p1.x,p1.y,p2.x,p2.y,poly[i].x,poly[i].y);\n    if (d1 >= 0)     res.add(poly[j]);\n    if (d1 * d2 < 0)     res.add(intersect(p1.x,p1.y,p2.x,p2.y,poly[j].x,poly[j].y,poly[i].x,poly[i].y));\n  }\n  return res.toArray(new Pt[res.size()]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 519,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 70,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static Pt[] cut(Pt[] poly,Pt p1,Pt p2){\n  int n=poly.length;\n  List<Pt> res=new ArrayList<>();\n  for (int i=0, j=n - 1; i < n; j=i++) {\n    int d1=orientation(p1.x,p1.y,p2.x,p2.y,poly[j].x,poly[j].y);\n    int d2=orientation(p1.x,p1.y,p2.x,p2.y,poly[i].x,poly[i].y);\n    if (d1 >= 0)     res.add(poly[j]);\n    if (d1 * d2 < 0)     res.add(intersect(p1.x,p1.y,p2.x,p2.y,poly[j].x,poly[j].y,poly[i].x,poly[i].y));\n  }\n  return res.toArray(new Pt[res.size()]);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 184,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 354,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0, j=n - 1; i < n; j=i++) {\n  int d1=orientation(p1.x,p1.y,p2.x,p2.y,poly[j].x,poly[j].y);\n  int d2=orientation(p1.x,p1.y,p2.x,p2.y,poly[i].x,poly[i].y);\n  if (d1 >= 0)   res.add(poly[j]);\n  if (d1 * d2 < 0)   res.add(intersect(p1.x,p1.y,p2.x,p2.y,poly[j].x,poly[j].y,poly[i].x,poly[i].y));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 130,
      "astHeight" : 9
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 62,
    "startColumnNumber" : 31,
    "endLineNumber" : 62,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}