{
  "id" : 162,
  "expression" : "\"*\"",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/arduino-core/src/processing/app/helpers/StringUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"*\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 26,
      "startColumnNumber" : 54,
      "endLineNumber" : 26,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 26,
        "startColumnNumber" : 19,
        "endLineNumber" : 26,
        "endColumnNumber" : 65
      },
      "nodeContext" : "pattern.replace(\"?\",\".?\").replace(\"*\",\".*?\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 26,
        "startColumnNumber" : 11,
        "endLineNumber" : 26,
        "endColumnNumber" : 65
      },
      "nodeContext" : "regex=pattern.replace(\"?\",\".?\").replace(\"*\",\".*?\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 26,
        "endColumnNumber" : 66
      },
      "nodeContext" : "String regex=pattern.replace(\"?\",\".?\").replace(\"*\",\".*?\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 25,
        "startColumnNumber" : 68,
        "endLineNumber" : 28,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String regex=pattern.replace(\"?\",\".?\").replace(\"*\",\".*?\");\n  return input.matches(regex);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 539,
        "startLineNumber" : 16,
        "startColumnNumber" : 2,
        "endLineNumber" : 28,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Tries to match <b>input</b> with <b>pattern</b>. The pattern can use the \"*\" and \"?\" globs to match any-char-sequence and any-char respectively.\n * @param input   The string to be checked\n * @param pattern The pattern to match\n * @return <b>true</b> if the <b>input</b> matches the <b>pattern</b>,<b>false</b> otherwise.\n */\npublic static boolean wildcardMatch(String input,String pattern){\n  String regex=pattern.replace(\"?\",\".?\").replace(\"*\",\".*?\");\n  return input.matches(regex);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 34,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 26,
        "endColumnNumber" : 66
      },
      "nodeContext" : "String regex=pattern.replace(\"?\",\".?\").replace(\"*\",\".*?\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 26,
    "startColumnNumber" : 54,
    "endLineNumber" : 26,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}