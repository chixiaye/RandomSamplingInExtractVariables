{
  "id" : 29,
  "expression" : "\"a\"",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-expression/src/test/java/org/springframework/expression/spel/MethodInvocationTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"a\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 229,
      "startColumnNumber" : 15,
      "endLineNumber" : 229,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 229,
        "startColumnNumber" : 2,
        "endLineNumber" : 229,
        "endColumnNumber" : 27
      },
      "nodeContext" : "assertEquals(\"a\",result)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 229,
        "startColumnNumber" : 2,
        "endLineNumber" : 229,
        "endColumnNumber" : 28
      },
      "nodeContext" : "assertEquals(\"a\",result);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1506,
        "startLineNumber" : 203,
        "startColumnNumber" : 43,
        "endLineNumber" : 240,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  SpelExpressionParser parser=new SpelExpressionParser();\n  StandardEvaluationContext context=new StandardEvaluationContext();\n  context.setRootObject(new TestObject());\n  LocalFilter filter=new LocalFilter();\n  context.registerMethodFilter(TestObject.class,filter);\n  SpelExpression expr=(SpelExpression)parser.parseExpression(\"doit(1)\");\n  String result=expr.getValue(context,String.class);\n  assertEquals(\"1\",result);\n  assertTrue(filter.filterCalled);\n  filter.removeIfNotAnnotated=true;\n  filter.filterCalled=false;\n  expr=(SpelExpression)parser.parseExpression(\"doit(1)\");\n  result=expr.getValue(context,String.class);\n  assertEquals(\"double 1.0\",result);\n  assertTrue(filter.filterCalled);\n  filter.filterCalled=false;\n  context.setRootObject(new String(\"abc\"));\n  expr=(SpelExpression)parser.parseExpression(\"charAt(0)\");\n  result=expr.getValue(context,String.class);\n  assertEquals(\"a\",result);\n  assertFalse(filter.filterCalled);\n  filter.filterCalled=false;\n  context.registerMethodFilter(TestObject.class,null);\n  context.setRootObject(new TestObject());\n  expr=(SpelExpression)parser.parseExpression(\"doit(1)\");\n  result=expr.getValue(context,String.class);\n  assertEquals(\"1\",result);\n  assertFalse(filter.filterCalled);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 215,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1555,
        "startLineNumber" : 202,
        "startColumnNumber" : 1,
        "endLineNumber" : 240,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testMethodFiltering_SPR6764(){\n  SpelExpressionParser parser=new SpelExpressionParser();\n  StandardEvaluationContext context=new StandardEvaluationContext();\n  context.setRootObject(new TestObject());\n  LocalFilter filter=new LocalFilter();\n  context.registerMethodFilter(TestObject.class,filter);\n  SpelExpression expr=(SpelExpression)parser.parseExpression(\"doit(1)\");\n  String result=expr.getValue(context,String.class);\n  assertEquals(\"1\",result);\n  assertTrue(filter.filterCalled);\n  filter.removeIfNotAnnotated=true;\n  filter.filterCalled=false;\n  expr=(SpelExpression)parser.parseExpression(\"doit(1)\");\n  result=expr.getValue(context,String.class);\n  assertEquals(\"double 1.0\",result);\n  assertTrue(filter.filterCalled);\n  filter.filterCalled=false;\n  context.setRootObject(new String(\"abc\"));\n  expr=(SpelExpression)parser.parseExpression(\"charAt(0)\");\n  result=expr.getValue(context,String.class);\n  assertEquals(\"a\",result);\n  assertFalse(filter.filterCalled);\n  filter.filterCalled=false;\n  context.registerMethodFilter(TestObject.class,null);\n  context.setRootObject(new TestObject());\n  expr=(SpelExpression)parser.parseExpression(\"doit(1)\");\n  result=expr.getValue(context,String.class);\n  assertEquals(\"1\",result);\n  assertFalse(filter.filterCalled);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 221,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 229,
        "startColumnNumber" : 2,
        "endLineNumber" : 229,
        "endColumnNumber" : 28
      },
      "nodeContext" : "assertEquals(\"a\",result);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 229,
    "startColumnNumber" : 15,
    "endLineNumber" : 229,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ ]
}