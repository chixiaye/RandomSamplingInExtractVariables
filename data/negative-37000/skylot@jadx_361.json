{
  "id" : 361,
  "expression" : "\" : \"",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/main/java/jadx/core/dex/regions/conditions/IfCondition.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\" : \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 225,
      "startColumnNumber" : 40,
      "endLineNumber" : 225,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 225,
        "startColumnNumber" : 11,
        "endLineNumber" : 225,
        "endColumnNumber" : 55
      },
      "nodeContext" : "first() + \" ? \" + second()+ \" : \"+ third()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 225,
        "startColumnNumber" : 4,
        "endLineNumber" : 225,
        "endColumnNumber" : 56
      },
      "nodeContext" : "return first() + \" ? \" + second()+ \" : \"+ third();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 558,
        "startLineNumber" : 221,
        "startColumnNumber" : 2,
        "endLineNumber" : 242,
        "endColumnNumber" : 3
      },
      "nodeContext" : "switch (mode) {\ncase COMPARE:  return compare.toString();\ncase TERNARY:return first() + \" ? \" + second()+ \" : \"+ third();\ncase NOT:return \"!(\" + first() + ')';\ncase AND:case OR:String op=mode == Mode.OR ? \" || \" : \" && \";\nStringBuilder sb=new StringBuilder();\nsb.append('(');\nfor (Iterator<IfCondition> it=args.iterator(); it.hasNext(); ) {\nIfCondition arg=it.next();\nsb.append(arg);\nif (it.hasNext()) {\nsb.append(op);\n}\n}\nsb.append(')');\nreturn sb.toString();\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 106,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 580,
        "startLineNumber" : 220,
        "startColumnNumber" : 26,
        "endLineNumber" : 244,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\nswitch (mode) {\ncase COMPARE:    return compare.toString();\ncase TERNARY:  return first() + \" ? \" + second()+ \" : \"+ third();\ncase NOT:return \"!(\" + first() + ')';\ncase AND:case OR:String op=mode == Mode.OR ? \" || \" : \" && \";\nStringBuilder sb=new StringBuilder();\nsb.append('(');\nfor (Iterator<IfCondition> it=args.iterator(); it.hasNext(); ) {\nIfCondition arg=it.next();\nsb.append(arg);\nif (it.hasNext()) {\nsb.append(op);\n}\n}\nsb.append(')');\nreturn sb.toString();\n}\nreturn \"??\";\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 616,
        "startLineNumber" : 219,
        "startColumnNumber" : 1,
        "endLineNumber" : 244,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public String toString(){\nswitch (mode) {\ncase COMPARE:    return compare.toString();\ncase TERNARY:  return first() + \" ? \" + second()+ \" : \"+ third();\ncase NOT:return \"!(\" + first() + ')';\ncase AND:case OR:String op=mode == Mode.OR ? \" || \" : \" && \";\nStringBuilder sb=new StringBuilder();\nsb.append('(');\nfor (Iterator<IfCondition> it=args.iterator(); it.hasNext(); ) {\nIfCondition arg=it.next();\nsb.append(arg);\nif (it.hasNext()) {\nsb.append(op);\n}\n}\nsb.append(')');\nreturn sb.toString();\n}\nreturn \"??\";\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 116,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 225,
        "startColumnNumber" : 4,
        "endLineNumber" : 225,
        "endColumnNumber" : 56
      },
      "nodeContext" : "return first() + \" ? \" + second()+ \" : \"+ third();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 225,
    "startColumnNumber" : 40,
    "endLineNumber" : 225,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}