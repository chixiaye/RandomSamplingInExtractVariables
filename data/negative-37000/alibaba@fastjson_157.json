{
  "id" : 157,
  "expression" : "ParserConfig.global",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/test/java/com/alibaba/json/bvt/OOMTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ParserConfig.global",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 23,
      "startColumnNumber" : 48,
      "endLineNumber" : 23,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 23,
        "startColumnNumber" : 48,
        "endLineNumber" : 23,
        "endColumnNumber" : 79
      },
      "nodeContext" : "ParserConfig.global.symbolTable",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 23,
        "startColumnNumber" : 38,
        "endLineNumber" : 23,
        "endColumnNumber" : 80
      },
      "nodeContext" : "field.get(ParserConfig.global.symbolTable)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 23,
        "startColumnNumber" : 27,
        "endLineNumber" : 23,
        "endColumnNumber" : 80
      },
      "nodeContext" : "(Object[])field.get(ParserConfig.global.symbolTable)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 23,
        "startColumnNumber" : 17,
        "endLineNumber" : 23,
        "endColumnNumber" : 80
      },
      "nodeContext" : "symbols=(Object[])field.get(ParserConfig.global.symbolTable)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 23,
        "startColumnNumber" : 8,
        "endLineNumber" : 23,
        "endColumnNumber" : 81
      },
      "nodeContext" : "Object[] symbols=(Object[])field.get(ParserConfig.global.symbolTable);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 397,
        "startLineNumber" : 14,
        "startColumnNumber" : 44,
        "endLineNumber" : 25,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int i=0; i < 1000 * 1000; ++i) {\n    String text=\"{\\\"\" + i + \"\\\":0}\";\n    JSON.parse(text);\n  }\n  Field field=SymbolTable.class.getDeclaredField(\"symbols\");\n  field.setAccessible(true);\n  Object[] symbols=(Object[])field.get(ParserConfig.global.symbolTable);\n  Assert.assertEquals(4096,symbols.length);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 437,
        "startLineNumber" : 14,
        "startColumnNumber" : 4,
        "endLineNumber" : 25,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_oom() throws Exception {\n  for (int i=0; i < 1000 * 1000; ++i) {\n    String text=\"{\\\"\" + i + \"\\\":0}\";\n    JSON.parse(text);\n  }\n  Field field=SymbolTable.class.getDeclaredField(\"symbols\");\n  field.setAccessible(true);\n  Object[] symbols=(Object[])field.get(ParserConfig.global.symbolTable);\n  Assert.assertEquals(4096,symbols.length);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 23,
        "startColumnNumber" : 8,
        "endLineNumber" : 23,
        "endColumnNumber" : 81
      },
      "nodeContext" : "Object[] symbols=(Object[])field.get(ParserConfig.global.symbolTable);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "com.alibaba.fastjson.parser.ParserConfig"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 23,
    "startColumnNumber" : 48,
    "endLineNumber" : 23,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}