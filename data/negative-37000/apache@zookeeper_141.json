{
  "id" : 141,
  "expression" : "HOSTPORT.split(\":\")",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/src/java/test/org/apache/zookeeper/test/UpgradeTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "HOSTPORT.split(\":\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 70,
      "startColumnNumber" : 42,
      "endLineNumber" : 70,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 70,
        "startColumnNumber" : 42,
        "endLineNumber" : 70,
        "endColumnNumber" : 64
      },
      "nodeContext" : "HOSTPORT.split(\":\")[1]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 70,
        "startColumnNumber" : 25,
        "endLineNumber" : 70,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Integer.parseInt(HOSTPORT.split(\":\")[1])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 70,
        "startColumnNumber" : 18,
        "endLineNumber" : 70,
        "endColumnNumber" : 65
      },
      "nodeContext" : "PORT=Integer.parseInt(HOSTPORT.split(\":\")[1])",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 66
      },
      "nodeContext" : "final int PORT=Integer.parseInt(HOSTPORT.split(\":\")[1]);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1474,
        "startLineNumber" : 64,
        "startColumnNumber" : 47,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  File upgradeDir=new File(testData,\"upgrade\");\n  UpgradeMain upgrade=new UpgradeMain(upgradeDir,upgradeDir);\n  upgrade.runUpgrade();\n  zks=new ZooKeeperServer(upgradeDir,upgradeDir,3000);\n  SyncRequestProcessor.snapCount=1000;\n  final int PORT=Integer.parseInt(HOSTPORT.split(\":\")[1]);\n  NIOServerCnxn.Factory f=new NIOServerCnxn.Factory(PORT);\n  f.startup(zks);\n  LOG.info(\"starting up the zookeeper server .. waiting\");\n  assertTrue(\"waiting for server being up\",ClientBase.waitForServerUp(HOSTPORT,CONNECTION_TIMEOUT));\n  ZooKeeper zk=new ZooKeeper(HOSTPORT,20000,this);\n  Stat stat=zk.exists(\"/\",false);\n  List<String> children=zk.getChildren(\"/\",false);\n  Collections.sort(children);\n  for (int i=0; i < 10; i++) {\n    assertTrue(\"data tree sanity check\",(\"test-\" + i).equals(children.get(i)));\n  }\n  zk.create(\"/upgrade\",\"upgrade\".getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);\n  if (zk.exists(\"/upgrade\",false) == null) {\n    assertTrue(false);\n  }\n  f.shutdown();\n  assertTrue(\"waiting for server down\",ClientBase.waitForServerDown(HOSTPORT,ClientBase.CONNECTION_TIMEOUT));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 193,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1582,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * test the upgrade\n * @throws Exception\n */\npublic void testUpgrade() throws Exception {\n  File upgradeDir=new File(testData,\"upgrade\");\n  UpgradeMain upgrade=new UpgradeMain(upgradeDir,upgradeDir);\n  upgrade.runUpgrade();\n  zks=new ZooKeeperServer(upgradeDir,upgradeDir,3000);\n  SyncRequestProcessor.snapCount=1000;\n  final int PORT=Integer.parseInt(HOSTPORT.split(\":\")[1]);\n  NIOServerCnxn.Factory f=new NIOServerCnxn.Factory(PORT);\n  f.startup(zks);\n  LOG.info(\"starting up the zookeeper server .. waiting\");\n  assertTrue(\"waiting for server being up\",ClientBase.waitForServerUp(HOSTPORT,CONNECTION_TIMEOUT));\n  ZooKeeper zk=new ZooKeeper(HOSTPORT,20000,this);\n  Stat stat=zk.exists(\"/\",false);\n  List<String> children=zk.getChildren(\"/\",false);\n  Collections.sort(children);\n  for (int i=0; i < 10; i++) {\n    assertTrue(\"data tree sanity check\",(\"test-\" + i).equals(children.get(i)));\n  }\n  zk.create(\"/upgrade\",\"upgrade\".getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);\n  if (zk.exists(\"/upgrade\",false) == null) {\n    assertTrue(false);\n  }\n  f.shutdown();\n  assertTrue(\"waiting for server down\",ClientBase.waitForServerDown(HOSTPORT,ClientBase.CONNECTION_TIMEOUT));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 200,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 66
      },
      "nodeContext" : "final int PORT=Integer.parseInt(HOSTPORT.split(\":\")[1]);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.lang.String[]"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 70,
    "startColumnNumber" : 42,
    "endLineNumber" : 70,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}