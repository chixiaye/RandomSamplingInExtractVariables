{
  "id" : 373,
  "expression" : "ExtAbstractModule.class",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-server/src/main/java/com/netflix/eureka2/server/spi/ExtensionLoader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ExtAbstractModule.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 78,
      "startColumnNumber" : 58,
      "endLineNumber" : 78,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 78,
        "startColumnNumber" : 39,
        "endLineNumber" : 78,
        "endColumnNumber" : 82
      },
      "nodeContext" : "ServiceLoader.load(ExtAbstractModule.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 352,
        "startLineNumber" : 78,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (ExtAbstractModule m : ServiceLoader.load(ExtAbstractModule.class)) {\n  logger.info(\"Loading module {}\",m.getClass().getName());\n  moduleList.add(m);\n  if (m.standardExtension() != StandardExtension.Undefined) {\n    loadedStdExts.add(m.standardExtension());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 43,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 445,
        "startLineNumber" : 76,
        "startColumnNumber" : 25,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  loadedStdExts=EnumSet.noneOf(StandardExtension.class);\n  for (  ExtAbstractModule m : ServiceLoader.load(ExtAbstractModule.class)) {\n    logger.info(\"Loading module {}\",m.getClass().getName());\n    moduleList.add(m);\n    if (m.standardExtension() != StandardExtension.Undefined) {\n      loadedStdExts.add(m.standardExtension());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 548,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!stdExtOnly) {\n  loadedStdExts=EnumSet.noneOf(StandardExtension.class);\n  for (  ExtAbstractModule m : ServiceLoader.load(ExtAbstractModule.class)) {\n    logger.info(\"Loading module {}\",m.getClass().getName());\n    moduleList.add(m);\n    if (m.standardExtension() != StandardExtension.Undefined) {\n      loadedStdExts.add(m.standardExtension());\n    }\n  }\n}\n else {\n  loadedStdExts=EnumSet.noneOf(StandardExtension.class);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 66,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1384,
        "startLineNumber" : 71,
        "startColumnNumber" : 44,
        "endLineNumber" : 104,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<Module> moduleList=new ArrayList<>();\n  final EnumSet<StandardExtension> loadedStdExts;\n  if (!stdExtOnly) {\n    loadedStdExts=EnumSet.noneOf(StandardExtension.class);\n    for (    ExtAbstractModule m : ServiceLoader.load(ExtAbstractModule.class)) {\n      logger.info(\"Loading module {}\",m.getClass().getName());\n      moduleList.add(m);\n      if (m.standardExtension() != StandardExtension.Undefined) {\n        loadedStdExts.add(m.standardExtension());\n      }\n    }\n  }\n else {\n    loadedStdExts=EnumSet.noneOf(StandardExtension.class);\n  }\n  moduleList.add(new AbstractModule(){\n    @Override protected void configure(){\n      EnumSet<StandardExtension> missingExtensions=EnumSet.complementOf(loadedStdExts);\n      for (      StandardExtension ext : missingExtensions) {\n        if (ext.hasDefault()) {\n          logger.info(\"Binding default implementation for service {}\",ext.getServiceInterface());\n          bind(ext.getServiceInterface()).toInstance(ext.createInstance());\n        }\n      }\n    }\n  }\n);\n  return moduleList;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1424,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 104,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private List<Module> enableExtensions(){\n  List<Module> moduleList=new ArrayList<>();\n  final EnumSet<StandardExtension> loadedStdExts;\n  if (!stdExtOnly) {\n    loadedStdExts=EnumSet.noneOf(StandardExtension.class);\n    for (    ExtAbstractModule m : ServiceLoader.load(ExtAbstractModule.class)) {\n      logger.info(\"Loading module {}\",m.getClass().getName());\n      moduleList.add(m);\n      if (m.standardExtension() != StandardExtension.Undefined) {\n        loadedStdExts.add(m.standardExtension());\n      }\n    }\n  }\n else {\n    loadedStdExts=EnumSet.noneOf(StandardExtension.class);\n  }\n  moduleList.add(new AbstractModule(){\n    @Override protected void configure(){\n      EnumSet<StandardExtension> missingExtensions=EnumSet.complementOf(loadedStdExts);\n      for (      StandardExtension ext : missingExtensions) {\n        if (ext.hasDefault()) {\n          logger.info(\"Binding default implementation for service {}\",ext.getServiceInterface());\n          bind(ext.getServiceInterface()).toInstance(ext.createInstance());\n        }\n      }\n    }\n  }\n);\n  return moduleList;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 156,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 78,
        "startColumnNumber" : 39,
        "endLineNumber" : 78,
        "endColumnNumber" : 82
      },
      "nodeContext" : "ServiceLoader.load(ExtAbstractModule.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<com.netflix.eureka2.server.spi.ExtAbstractModule>"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 78,
    "startColumnNumber" : 58,
    "endLineNumber" : 78,
    "endColumnNumber" : 81
  } ],
  "layoutRelationDataList" : [ ]
}