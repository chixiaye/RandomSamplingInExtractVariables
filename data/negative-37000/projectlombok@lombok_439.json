{
  "id" : 439,
  "expression" : "INTERFACE",
  "projectName" : "projectlombok@lombok",
  "commitID" : "25def866b50860715ee7c315c678b8c3d1ba9b56",
  "filePath" : "/src/delombok/lombok/delombok/PrettyCommentsPrinter.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "INTERFACE",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 694,
      "startColumnNumber" : 42,
      "endLineNumber" : 694,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 694,
        "startColumnNumber" : 41,
        "endLineNumber" : 694,
        "endColumnNumber" : 51
      },
      "nodeContext" : "~INTERFACE",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 694,
        "startColumnNumber" : 23,
        "endLineNumber" : 694,
        "endColumnNumber" : 51
      },
      "nodeContext" : "tree.mods.flags & ~INTERFACE",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 694,
        "startColumnNumber" : 12,
        "endLineNumber" : 694,
        "endColumnNumber" : 52
      },
      "nodeContext" : "printFlags(tree.mods.flags & ~INTERFACE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 694,
        "startColumnNumber" : 12,
        "endLineNumber" : 694,
        "endColumnNumber" : 53
      },
      "nodeContext" : "printFlags(tree.mods.flags & ~INTERFACE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1717,
        "startLineNumber" : 689,
        "startColumnNumber" : 12,
        "endLineNumber" : 731,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  consumeComments(tree.pos);\n  println();\n  align();\n  printDocComment(tree);\n  printAnnotations(tree.mods.annotations);\n  printFlags(tree.mods.flags & ~INTERFACE);\n  Name enclClassNamePrev=enclClassName;\n  enclClassName=tree.name;\n  if ((tree.mods.flags & INTERFACE) != 0) {\n    print(\"interface \" + tree.name);\n    printTypeParameters(tree.typarams);\n    if (tree.implementing.nonEmpty()) {\n      print(\" extends \");\n      printExprs(tree.implementing);\n    }\n  }\n else {\n    if ((tree.mods.flags & ENUM) != 0)     print(\"enum \" + tree.name);\n else     print(\"class \" + tree.name);\n    printTypeParameters(tree.typarams);\n    if (tree.getExtendsClause() != null) {\n      print(\" extends \");\n      printExpr(tree.getExtendsClause());\n    }\n    if (tree.implementing.nonEmpty()) {\n      print(\" implements \");\n      printExprs(tree.implementing);\n    }\n  }\n  print(\" \");\n  if ((tree.mods.flags & INTERFACE) != 0) {\n    removeImplicitModifiersForInterfaceMembers(tree.defs);\n  }\n  if ((tree.mods.flags & ENUM) != 0) {\n    printEnumBody(tree.defs);\n  }\n else {\n    printBlock(tree.defs,tree);\n  }\n  enclClassName=enclClassNamePrev;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 211,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1802,
        "startLineNumber" : 689,
        "startColumnNumber" : 8,
        "endLineNumber" : 733,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  consumeComments(tree.pos);\n  println();\n  align();\n  printDocComment(tree);\n  printAnnotations(tree.mods.annotations);\n  printFlags(tree.mods.flags & ~INTERFACE);\n  Name enclClassNamePrev=enclClassName;\n  enclClassName=tree.name;\n  if ((tree.mods.flags & INTERFACE) != 0) {\n    print(\"interface \" + tree.name);\n    printTypeParameters(tree.typarams);\n    if (tree.implementing.nonEmpty()) {\n      print(\" extends \");\n      printExprs(tree.implementing);\n    }\n  }\n else {\n    if ((tree.mods.flags & ENUM) != 0)     print(\"enum \" + tree.name);\n else     print(\"class \" + tree.name);\n    printTypeParameters(tree.typarams);\n    if (tree.getExtendsClause() != null) {\n      print(\" extends \");\n      printExpr(tree.getExtendsClause());\n    }\n    if (tree.implementing.nonEmpty()) {\n      print(\" implements \");\n      printExprs(tree.implementing);\n    }\n  }\n  print(\" \");\n  if ((tree.mods.flags & INTERFACE) != 0) {\n    removeImplicitModifiersForInterfaceMembers(tree.defs);\n  }\n  if ((tree.mods.flags & ENUM) != 0) {\n    printEnumBody(tree.defs);\n  }\n else {\n    printBlock(tree.defs,tree);\n  }\n  enclClassName=enclClassNamePrev;\n}\n catch (IOException e) {\n  throw new UncheckedIOException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 223,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1818,
        "startLineNumber" : 688,
        "startColumnNumber" : 48,
        "endLineNumber" : 734,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    consumeComments(tree.pos);\n    println();\n    align();\n    printDocComment(tree);\n    printAnnotations(tree.mods.annotations);\n    printFlags(tree.mods.flags & ~INTERFACE);\n    Name enclClassNamePrev=enclClassName;\n    enclClassName=tree.name;\n    if ((tree.mods.flags & INTERFACE) != 0) {\n      print(\"interface \" + tree.name);\n      printTypeParameters(tree.typarams);\n      if (tree.implementing.nonEmpty()) {\n        print(\" extends \");\n        printExprs(tree.implementing);\n      }\n    }\n else {\n      if ((tree.mods.flags & ENUM) != 0)       print(\"enum \" + tree.name);\n else       print(\"class \" + tree.name);\n      printTypeParameters(tree.typarams);\n      if (tree.getExtendsClause() != null) {\n        print(\" extends \");\n        printExpr(tree.getExtendsClause());\n      }\n      if (tree.implementing.nonEmpty()) {\n        print(\" implements \");\n        printExprs(tree.implementing);\n      }\n    }\n    print(\" \");\n    if ((tree.mods.flags & INTERFACE) != 0) {\n      removeImplicitModifiersForInterfaceMembers(tree.defs);\n    }\n    if ((tree.mods.flags & ENUM) != 0) {\n      printEnumBody(tree.defs);\n    }\n else {\n      printBlock(tree.defs,tree);\n    }\n    enclClassName=enclClassNamePrev;\n  }\n catch (  IOException e) {\n    throw new UncheckedIOException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 224,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1862,
        "startLineNumber" : 688,
        "startColumnNumber" : 4,
        "endLineNumber" : 734,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void visitClassDef(JCClassDecl tree){\n  try {\n    consumeComments(tree.pos);\n    println();\n    align();\n    printDocComment(tree);\n    printAnnotations(tree.mods.annotations);\n    printFlags(tree.mods.flags & ~INTERFACE);\n    Name enclClassNamePrev=enclClassName;\n    enclClassName=tree.name;\n    if ((tree.mods.flags & INTERFACE) != 0) {\n      print(\"interface \" + tree.name);\n      printTypeParameters(tree.typarams);\n      if (tree.implementing.nonEmpty()) {\n        print(\" extends \");\n        printExprs(tree.implementing);\n      }\n    }\n else {\n      if ((tree.mods.flags & ENUM) != 0)       print(\"enum \" + tree.name);\n else       print(\"class \" + tree.name);\n      printTypeParameters(tree.typarams);\n      if (tree.getExtendsClause() != null) {\n        print(\" extends \");\n        printExpr(tree.getExtendsClause());\n      }\n      if (tree.implementing.nonEmpty()) {\n        print(\" implements \");\n        printExprs(tree.implementing);\n      }\n    }\n    print(\" \");\n    if ((tree.mods.flags & INTERFACE) != 0) {\n      removeImplicitModifiersForInterfaceMembers(tree.defs);\n    }\n    if ((tree.mods.flags & ENUM) != 0) {\n      printEnumBody(tree.defs);\n    }\n else {\n      printBlock(tree.defs,tree);\n    }\n    enclClassName=enclClassNamePrev;\n  }\n catch (  IOException e) {\n    throw new UncheckedIOException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 232,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 694,
        "startColumnNumber" : 12,
        "endLineNumber" : 694,
        "endColumnNumber" : 53
      },
      "nodeContext" : "printFlags(tree.mods.flags & ~INTERFACE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "INTERFACE",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 697,
      "startColumnNumber" : 35,
      "endLineNumber" : 697,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 697,
        "startColumnNumber" : 17,
        "endLineNumber" : 697,
        "endColumnNumber" : 44
      },
      "nodeContext" : "tree.mods.flags & INTERFACE",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 697,
        "startColumnNumber" : 16,
        "endLineNumber" : 697,
        "endColumnNumber" : 45
      },
      "nodeContext" : "(tree.mods.flags & INTERFACE)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 697,
        "startColumnNumber" : 16,
        "endLineNumber" : 697,
        "endColumnNumber" : 50
      },
      "nodeContext" : "(tree.mods.flags & INTERFACE) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 892,
        "startLineNumber" : 697,
        "startColumnNumber" : 12,
        "endLineNumber" : 718,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((tree.mods.flags & INTERFACE) != 0) {\n  print(\"interface \" + tree.name);\n  printTypeParameters(tree.typarams);\n  if (tree.implementing.nonEmpty()) {\n    print(\" extends \");\n    printExprs(tree.implementing);\n  }\n}\n else {\n  if ((tree.mods.flags & ENUM) != 0)   print(\"enum \" + tree.name);\n else   print(\"class \" + tree.name);\n  printTypeParameters(tree.typarams);\n  if (tree.getExtendsClause() != null) {\n    print(\" extends \");\n    printExpr(tree.getExtendsClause());\n  }\n  if (tree.implementing.nonEmpty()) {\n    print(\" implements \");\n    printExprs(tree.implementing);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 111,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1717,
        "startLineNumber" : 689,
        "startColumnNumber" : 12,
        "endLineNumber" : 731,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  consumeComments(tree.pos);\n  println();\n  align();\n  printDocComment(tree);\n  printAnnotations(tree.mods.annotations);\n  printFlags(tree.mods.flags & ~INTERFACE);\n  Name enclClassNamePrev=enclClassName;\n  enclClassName=tree.name;\n  if ((tree.mods.flags & INTERFACE) != 0) {\n    print(\"interface \" + tree.name);\n    printTypeParameters(tree.typarams);\n    if (tree.implementing.nonEmpty()) {\n      print(\" extends \");\n      printExprs(tree.implementing);\n    }\n  }\n else {\n    if ((tree.mods.flags & ENUM) != 0)     print(\"enum \" + tree.name);\n else     print(\"class \" + tree.name);\n    printTypeParameters(tree.typarams);\n    if (tree.getExtendsClause() != null) {\n      print(\" extends \");\n      printExpr(tree.getExtendsClause());\n    }\n    if (tree.implementing.nonEmpty()) {\n      print(\" implements \");\n      printExprs(tree.implementing);\n    }\n  }\n  print(\" \");\n  if ((tree.mods.flags & INTERFACE) != 0) {\n    removeImplicitModifiersForInterfaceMembers(tree.defs);\n  }\n  if ((tree.mods.flags & ENUM) != 0) {\n    printEnumBody(tree.defs);\n  }\n else {\n    printBlock(tree.defs,tree);\n  }\n  enclClassName=enclClassNamePrev;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 211,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1802,
        "startLineNumber" : 689,
        "startColumnNumber" : 8,
        "endLineNumber" : 733,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  consumeComments(tree.pos);\n  println();\n  align();\n  printDocComment(tree);\n  printAnnotations(tree.mods.annotations);\n  printFlags(tree.mods.flags & ~INTERFACE);\n  Name enclClassNamePrev=enclClassName;\n  enclClassName=tree.name;\n  if ((tree.mods.flags & INTERFACE) != 0) {\n    print(\"interface \" + tree.name);\n    printTypeParameters(tree.typarams);\n    if (tree.implementing.nonEmpty()) {\n      print(\" extends \");\n      printExprs(tree.implementing);\n    }\n  }\n else {\n    if ((tree.mods.flags & ENUM) != 0)     print(\"enum \" + tree.name);\n else     print(\"class \" + tree.name);\n    printTypeParameters(tree.typarams);\n    if (tree.getExtendsClause() != null) {\n      print(\" extends \");\n      printExpr(tree.getExtendsClause());\n    }\n    if (tree.implementing.nonEmpty()) {\n      print(\" implements \");\n      printExprs(tree.implementing);\n    }\n  }\n  print(\" \");\n  if ((tree.mods.flags & INTERFACE) != 0) {\n    removeImplicitModifiersForInterfaceMembers(tree.defs);\n  }\n  if ((tree.mods.flags & ENUM) != 0) {\n    printEnumBody(tree.defs);\n  }\n else {\n    printBlock(tree.defs,tree);\n  }\n  enclClassName=enclClassNamePrev;\n}\n catch (IOException e) {\n  throw new UncheckedIOException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 223,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1818,
        "startLineNumber" : 688,
        "startColumnNumber" : 48,
        "endLineNumber" : 734,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    consumeComments(tree.pos);\n    println();\n    align();\n    printDocComment(tree);\n    printAnnotations(tree.mods.annotations);\n    printFlags(tree.mods.flags & ~INTERFACE);\n    Name enclClassNamePrev=enclClassName;\n    enclClassName=tree.name;\n    if ((tree.mods.flags & INTERFACE) != 0) {\n      print(\"interface \" + tree.name);\n      printTypeParameters(tree.typarams);\n      if (tree.implementing.nonEmpty()) {\n        print(\" extends \");\n        printExprs(tree.implementing);\n      }\n    }\n else {\n      if ((tree.mods.flags & ENUM) != 0)       print(\"enum \" + tree.name);\n else       print(\"class \" + tree.name);\n      printTypeParameters(tree.typarams);\n      if (tree.getExtendsClause() != null) {\n        print(\" extends \");\n        printExpr(tree.getExtendsClause());\n      }\n      if (tree.implementing.nonEmpty()) {\n        print(\" implements \");\n        printExprs(tree.implementing);\n      }\n    }\n    print(\" \");\n    if ((tree.mods.flags & INTERFACE) != 0) {\n      removeImplicitModifiersForInterfaceMembers(tree.defs);\n    }\n    if ((tree.mods.flags & ENUM) != 0) {\n      printEnumBody(tree.defs);\n    }\n else {\n      printBlock(tree.defs,tree);\n    }\n    enclClassName=enclClassNamePrev;\n  }\n catch (  IOException e) {\n    throw new UncheckedIOException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 224,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1862,
        "startLineNumber" : 688,
        "startColumnNumber" : 4,
        "endLineNumber" : 734,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void visitClassDef(JCClassDecl tree){\n  try {\n    consumeComments(tree.pos);\n    println();\n    align();\n    printDocComment(tree);\n    printAnnotations(tree.mods.annotations);\n    printFlags(tree.mods.flags & ~INTERFACE);\n    Name enclClassNamePrev=enclClassName;\n    enclClassName=tree.name;\n    if ((tree.mods.flags & INTERFACE) != 0) {\n      print(\"interface \" + tree.name);\n      printTypeParameters(tree.typarams);\n      if (tree.implementing.nonEmpty()) {\n        print(\" extends \");\n        printExprs(tree.implementing);\n      }\n    }\n else {\n      if ((tree.mods.flags & ENUM) != 0)       print(\"enum \" + tree.name);\n else       print(\"class \" + tree.name);\n      printTypeParameters(tree.typarams);\n      if (tree.getExtendsClause() != null) {\n        print(\" extends \");\n        printExpr(tree.getExtendsClause());\n      }\n      if (tree.implementing.nonEmpty()) {\n        print(\" implements \");\n        printExprs(tree.implementing);\n      }\n    }\n    print(\" \");\n    if ((tree.mods.flags & INTERFACE) != 0) {\n      removeImplicitModifiersForInterfaceMembers(tree.defs);\n    }\n    if ((tree.mods.flags & ENUM) != 0) {\n      printEnumBody(tree.defs);\n    }\n else {\n      printBlock(tree.defs,tree);\n    }\n    enclClassName=enclClassNamePrev;\n  }\n catch (  IOException e) {\n    throw new UncheckedIOException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 232,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 697,
        "startColumnNumber" : 16,
        "endLineNumber" : 697,
        "endColumnNumber" : 50
      },
      "nodeContext" : "(tree.mods.flags & INTERFACE) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "INTERFACE",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 721,
      "startColumnNumber" : 35,
      "endLineNumber" : 721,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 721,
        "startColumnNumber" : 17,
        "endLineNumber" : 721,
        "endColumnNumber" : 44
      },
      "nodeContext" : "tree.mods.flags & INTERFACE",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 721,
        "startColumnNumber" : 16,
        "endLineNumber" : 721,
        "endColumnNumber" : 45
      },
      "nodeContext" : "(tree.mods.flags & INTERFACE)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 721,
        "startColumnNumber" : 16,
        "endLineNumber" : 721,
        "endColumnNumber" : 50
      },
      "nodeContext" : "(tree.mods.flags & INTERFACE) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 721,
        "startColumnNumber" : 12,
        "endLineNumber" : 723,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((tree.mods.flags & INTERFACE) != 0) {\n  removeImplicitModifiersForInterfaceMembers(tree.defs);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1717,
        "startLineNumber" : 689,
        "startColumnNumber" : 12,
        "endLineNumber" : 731,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  consumeComments(tree.pos);\n  println();\n  align();\n  printDocComment(tree);\n  printAnnotations(tree.mods.annotations);\n  printFlags(tree.mods.flags & ~INTERFACE);\n  Name enclClassNamePrev=enclClassName;\n  enclClassName=tree.name;\n  if ((tree.mods.flags & INTERFACE) != 0) {\n    print(\"interface \" + tree.name);\n    printTypeParameters(tree.typarams);\n    if (tree.implementing.nonEmpty()) {\n      print(\" extends \");\n      printExprs(tree.implementing);\n    }\n  }\n else {\n    if ((tree.mods.flags & ENUM) != 0)     print(\"enum \" + tree.name);\n else     print(\"class \" + tree.name);\n    printTypeParameters(tree.typarams);\n    if (tree.getExtendsClause() != null) {\n      print(\" extends \");\n      printExpr(tree.getExtendsClause());\n    }\n    if (tree.implementing.nonEmpty()) {\n      print(\" implements \");\n      printExprs(tree.implementing);\n    }\n  }\n  print(\" \");\n  if ((tree.mods.flags & INTERFACE) != 0) {\n    removeImplicitModifiersForInterfaceMembers(tree.defs);\n  }\n  if ((tree.mods.flags & ENUM) != 0) {\n    printEnumBody(tree.defs);\n  }\n else {\n    printBlock(tree.defs,tree);\n  }\n  enclClassName=enclClassNamePrev;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 211,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1802,
        "startLineNumber" : 689,
        "startColumnNumber" : 8,
        "endLineNumber" : 733,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  consumeComments(tree.pos);\n  println();\n  align();\n  printDocComment(tree);\n  printAnnotations(tree.mods.annotations);\n  printFlags(tree.mods.flags & ~INTERFACE);\n  Name enclClassNamePrev=enclClassName;\n  enclClassName=tree.name;\n  if ((tree.mods.flags & INTERFACE) != 0) {\n    print(\"interface \" + tree.name);\n    printTypeParameters(tree.typarams);\n    if (tree.implementing.nonEmpty()) {\n      print(\" extends \");\n      printExprs(tree.implementing);\n    }\n  }\n else {\n    if ((tree.mods.flags & ENUM) != 0)     print(\"enum \" + tree.name);\n else     print(\"class \" + tree.name);\n    printTypeParameters(tree.typarams);\n    if (tree.getExtendsClause() != null) {\n      print(\" extends \");\n      printExpr(tree.getExtendsClause());\n    }\n    if (tree.implementing.nonEmpty()) {\n      print(\" implements \");\n      printExprs(tree.implementing);\n    }\n  }\n  print(\" \");\n  if ((tree.mods.flags & INTERFACE) != 0) {\n    removeImplicitModifiersForInterfaceMembers(tree.defs);\n  }\n  if ((tree.mods.flags & ENUM) != 0) {\n    printEnumBody(tree.defs);\n  }\n else {\n    printBlock(tree.defs,tree);\n  }\n  enclClassName=enclClassNamePrev;\n}\n catch (IOException e) {\n  throw new UncheckedIOException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 223,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1818,
        "startLineNumber" : 688,
        "startColumnNumber" : 48,
        "endLineNumber" : 734,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    consumeComments(tree.pos);\n    println();\n    align();\n    printDocComment(tree);\n    printAnnotations(tree.mods.annotations);\n    printFlags(tree.mods.flags & ~INTERFACE);\n    Name enclClassNamePrev=enclClassName;\n    enclClassName=tree.name;\n    if ((tree.mods.flags & INTERFACE) != 0) {\n      print(\"interface \" + tree.name);\n      printTypeParameters(tree.typarams);\n      if (tree.implementing.nonEmpty()) {\n        print(\" extends \");\n        printExprs(tree.implementing);\n      }\n    }\n else {\n      if ((tree.mods.flags & ENUM) != 0)       print(\"enum \" + tree.name);\n else       print(\"class \" + tree.name);\n      printTypeParameters(tree.typarams);\n      if (tree.getExtendsClause() != null) {\n        print(\" extends \");\n        printExpr(tree.getExtendsClause());\n      }\n      if (tree.implementing.nonEmpty()) {\n        print(\" implements \");\n        printExprs(tree.implementing);\n      }\n    }\n    print(\" \");\n    if ((tree.mods.flags & INTERFACE) != 0) {\n      removeImplicitModifiersForInterfaceMembers(tree.defs);\n    }\n    if ((tree.mods.flags & ENUM) != 0) {\n      printEnumBody(tree.defs);\n    }\n else {\n      printBlock(tree.defs,tree);\n    }\n    enclClassName=enclClassNamePrev;\n  }\n catch (  IOException e) {\n    throw new UncheckedIOException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 224,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1862,
        "startLineNumber" : 688,
        "startColumnNumber" : 4,
        "endLineNumber" : 734,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void visitClassDef(JCClassDecl tree){\n  try {\n    consumeComments(tree.pos);\n    println();\n    align();\n    printDocComment(tree);\n    printAnnotations(tree.mods.annotations);\n    printFlags(tree.mods.flags & ~INTERFACE);\n    Name enclClassNamePrev=enclClassName;\n    enclClassName=tree.name;\n    if ((tree.mods.flags & INTERFACE) != 0) {\n      print(\"interface \" + tree.name);\n      printTypeParameters(tree.typarams);\n      if (tree.implementing.nonEmpty()) {\n        print(\" extends \");\n        printExprs(tree.implementing);\n      }\n    }\n else {\n      if ((tree.mods.flags & ENUM) != 0)       print(\"enum \" + tree.name);\n else       print(\"class \" + tree.name);\n      printTypeParameters(tree.typarams);\n      if (tree.getExtendsClause() != null) {\n        print(\" extends \");\n        printExpr(tree.getExtendsClause());\n      }\n      if (tree.implementing.nonEmpty()) {\n        print(\" implements \");\n        printExprs(tree.implementing);\n      }\n    }\n    print(\" \");\n    if ((tree.mods.flags & INTERFACE) != 0) {\n      removeImplicitModifiersForInterfaceMembers(tree.defs);\n    }\n    if ((tree.mods.flags & ENUM) != 0) {\n      printEnumBody(tree.defs);\n    }\n else {\n      printBlock(tree.defs,tree);\n    }\n    enclClassName=enclClassNamePrev;\n  }\n catch (  IOException e) {\n    throw new UncheckedIOException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 232,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 721,
        "startColumnNumber" : 16,
        "endLineNumber" : 721,
        "endColumnNumber" : 50
      },
      "nodeContext" : "(tree.mods.flags & INTERFACE) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 694,
    "startColumnNumber" : 42,
    "endLineNumber" : 694,
    "endColumnNumber" : 51
  }, {
    "charLength" : 9,
    "startLineNumber" : 697,
    "startColumnNumber" : 35,
    "endLineNumber" : 697,
    "endColumnNumber" : 44
  }, {
    "charLength" : 9,
    "startLineNumber" : 721,
    "startColumnNumber" : 35,
    "endLineNumber" : 721,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}