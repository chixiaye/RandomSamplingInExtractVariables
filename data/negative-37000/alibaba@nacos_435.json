{
  "id" : 435,
  "expression" : "list.get(0).getServiceName()",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/naming/src/test/java/com/alibaba/nacos/naming/core/SubscribeManagerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "list.get(0).getServiceName()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 87,
      "startColumnNumber" : 66,
      "endLineNumber" : 87,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 87,
        "startColumnNumber" : 12,
        "endLineNumber" : 87,
        "endColumnNumber" : 95
      },
      "nodeContext" : "Assert.assertEquals(\"testGroupName@@test_subscriber\",list.get(0).getServiceName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 87,
        "startColumnNumber" : 12,
        "endLineNumber" : 87,
        "endColumnNumber" : 96
      },
      "nodeContext" : "Assert.assertEquals(\"testGroupName@@test_subscriber\",list.get(0).getServiceName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 725,
        "startLineNumber" : 77,
        "startColumnNumber" : 12,
        "endLineNumber" : 88,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  List<Subscriber> clients=new ArrayList<Subscriber>();\n  Subscriber subscriber=new Subscriber(\"127.0.0.1:8080\",\"test\",\"app\",\"127.0.0.1\",namespaceId,\"testGroupName@@test_subscriber\",0);\n  clients.add(subscriber);\n  Mockito.when(this.aggregation.getFuzzySubscribers(Mockito.anyString(),Mockito.anyString())).thenReturn(clients);\n  List<Subscriber> list=subscribeManager.getSubscribers(serviceName,namespaceId,aggregation);\n  Assert.assertNotNull(list);\n  Assert.assertEquals(1,list.size());\n  Assert.assertEquals(\"testGroupName@@test_subscriber\",list.get(0).getServiceName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 776,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  List<Subscriber> clients=new ArrayList<Subscriber>();\n  Subscriber subscriber=new Subscriber(\"127.0.0.1:8080\",\"test\",\"app\",\"127.0.0.1\",namespaceId,\"testGroupName@@test_subscriber\",0);\n  clients.add(subscriber);\n  Mockito.when(this.aggregation.getFuzzySubscribers(Mockito.anyString(),Mockito.anyString())).thenReturn(clients);\n  List<Subscriber> list=subscribeManager.getSubscribers(serviceName,namespaceId,aggregation);\n  Assert.assertNotNull(list);\n  Assert.assertEquals(1,list.size());\n  Assert.assertEquals(\"testGroupName@@test_subscriber\",list.get(0).getServiceName());\n}\n catch (Exception ignored) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 98,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 912,
        "startLineNumber" : 73,
        "startColumnNumber" : 42,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String serviceName=\"test\";\n  String namespaceId=\"public\";\n  boolean aggregation=Boolean.TRUE;\n  try {\n    List<Subscriber> clients=new ArrayList<Subscriber>();\n    Subscriber subscriber=new Subscriber(\"127.0.0.1:8080\",\"test\",\"app\",\"127.0.0.1\",namespaceId,\"testGroupName@@test_subscriber\",0);\n    clients.add(subscriber);\n    Mockito.when(this.aggregation.getFuzzySubscribers(Mockito.anyString(),Mockito.anyString())).thenReturn(clients);\n    List<Subscriber> list=subscribeManager.getSubscribers(serviceName,namespaceId,aggregation);\n    Assert.assertNotNull(list);\n    Assert.assertEquals(1,list.size());\n    Assert.assertEquals(\"testGroupName@@test_subscriber\",list.get(0).getServiceName());\n  }\n catch (  Exception ignored) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 960,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testGetSubscribersFuzzy(){\n  String serviceName=\"test\";\n  String namespaceId=\"public\";\n  boolean aggregation=Boolean.TRUE;\n  try {\n    List<Subscriber> clients=new ArrayList<Subscriber>();\n    Subscriber subscriber=new Subscriber(\"127.0.0.1:8080\",\"test\",\"app\",\"127.0.0.1\",namespaceId,\"testGroupName@@test_subscriber\",0);\n    clients.add(subscriber);\n    Mockito.when(this.aggregation.getFuzzySubscribers(Mockito.anyString(),Mockito.anyString())).thenReturn(clients);\n    List<Subscriber> list=subscribeManager.getSubscribers(serviceName,namespaceId,aggregation);\n    Assert.assertNotNull(list);\n    Assert.assertEquals(1,list.size());\n    Assert.assertEquals(\"testGroupName@@test_subscriber\",list.get(0).getServiceName());\n  }\n catch (  Exception ignored) {\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 87,
        "startColumnNumber" : 12,
        "endLineNumber" : 87,
        "endColumnNumber" : 96
      },
      "nodeContext" : "Assert.assertEquals(\"testGroupName@@test_subscriber\",list.get(0).getServiceName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 28,
    "startLineNumber" : 87,
    "startColumnNumber" : 66,
    "endLineNumber" : 87,
    "endColumnNumber" : 94
  } ],
  "layoutRelationDataList" : [ ]
}