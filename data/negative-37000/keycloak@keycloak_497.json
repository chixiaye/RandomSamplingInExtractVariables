{
  "id" : 497,
  "expression" : "new IllegalStateException(\"StorageProviderFactory (of type \" + factory.getClass().getName() + \") produced a null instance\")",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/services/src/main/java/org/keycloak/storage/AbstractStorageManager.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new IllegalStateException(\"StorageProviderFactory (of type \" + factory.getClass().getName() + \") produced a null instance\")",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 123,
      "startLineNumber" : 231,
      "startColumnNumber" : 18,
      "endLineNumber" : 231,
      "endColumnNumber" : 141
    },
    "astNodeNumber" : 11,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 231,
        "startColumnNumber" : 12,
        "endLineNumber" : 231,
        "endColumnNumber" : 142
      },
      "nodeContext" : "throw new IllegalStateException(\"StorageProviderFactory (of type \" + factory.getClass().getName() + \") produced a null instance\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 230,
        "startColumnNumber" : 30,
        "endLineNumber" : 232,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new IllegalStateException(\"StorageProviderFactory (of type \" + factory.getClass().getName() + \") produced a null instance\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 230,
        "startColumnNumber" : 8,
        "endLineNumber" : 232,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (instance == null) {\n  throw new IllegalStateException(\"StorageProviderFactory (of type \" + factory.getClass().getName() + \") produced a null instance\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1224,
        "startLineNumber" : 211,
        "startColumnNumber" : 134,
        "endLineNumber" : 236,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (model == null || (!model.isEnabled() && !includeDisabled) || capabilityInterface == null) {\n    return null;\n  }\n  @SuppressWarnings(\"unchecked\") ProviderType instance=(ProviderType)session.getAttribute(model.getId());\n  if (instance != null && capabilityInterface.isAssignableFrom(instance.getClass()))   return capabilityInterface.cast(instance);\n  ComponentFactory<? extends ProviderType,ProviderType> factory=getStorageProviderFactory(model.getProviderId());\n  if (factory == null) {\n    LOG.warnv(\"Configured StorageProvider {0} of provider id {1} does not exist\",model.getName(),model.getProviderId());\n    return null;\n  }\n  if (!Types.supports(capabilityInterface,factory,factoryTypeClass)) {\n    return null;\n  }\n  instance=factory.create(session,model);\n  if (instance == null) {\n    throw new IllegalStateException(\"StorageProviderFactory (of type \" + factory.getClass().getName() + \") produced a null instance\");\n  }\n  session.enlistForClose(instance);\n  session.setAttribute(model.getId(),instance);\n  return capabilityInterface.cast(instance);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2002,
        "startLineNumber" : 202,
        "startColumnNumber" : 4,
        "endLineNumber" : 236,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns an instance of provider for the model or null if storage provider based on the model doesn't implement capabilityInterface.\n * @param model StorageProviderModel obtained from database/storage\n * @param capabilityInterface class of desired capabilityInterface.For example,  {@code GroupLookupProvider} or {@code UserQueryProvider}\n * @param includeDisabled If set to true, the method will return also disabled providers.\n * @return an instance of type T or null if storage provider based on the model doesn't exist or doesn't implement the capabilityInterface.\n */\nprotected <T>T getStorageProviderInstance(StorageProviderModelType model,Class<T> capabilityInterface,boolean includeDisabled){\n  if (model == null || (!model.isEnabled() && !includeDisabled) || capabilityInterface == null) {\n    return null;\n  }\n  @SuppressWarnings(\"unchecked\") ProviderType instance=(ProviderType)session.getAttribute(model.getId());\n  if (instance != null && capabilityInterface.isAssignableFrom(instance.getClass()))   return capabilityInterface.cast(instance);\n  ComponentFactory<? extends ProviderType,ProviderType> factory=getStorageProviderFactory(model.getProviderId());\n  if (factory == null) {\n    LOG.warnv(\"Configured StorageProvider {0} of provider id {1} does not exist\",model.getName(),model.getProviderId());\n    return null;\n  }\n  if (!Types.supports(capabilityInterface,factory,factoryTypeClass)) {\n    return null;\n  }\n  instance=factory.create(session,model);\n  if (instance == null) {\n    throw new IllegalStateException(\"StorageProviderFactory (of type \" + factory.getClass().getName() + \") produced a null instance\");\n  }\n  session.enlistForClose(instance);\n  session.setAttribute(model.getId(),instance);\n  return capabilityInterface.cast(instance);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 164,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 231,
        "startColumnNumber" : 12,
        "endLineNumber" : 231,
        "endColumnNumber" : 142
      },
      "nodeContext" : "throw new IllegalStateException(\"StorageProviderFactory (of type \" + factory.getClass().getName() + \") produced a null instance\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 13,
    "type" : "java.lang.IllegalStateException"
  } ],
  "positionList" : [ {
    "charLength" : 123,
    "startLineNumber" : 231,
    "startColumnNumber" : 18,
    "endLineNumber" : 231,
    "endColumnNumber" : 141
  } ],
  "layoutRelationDataList" : [ ]
}