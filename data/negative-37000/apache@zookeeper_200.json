{
  "id" : 200,
  "expression" : "SerializeUtils",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/src/java/main/org/apache/zookeeper/server/upgrade/UpgradeSnapShotV1.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "SerializeUtils",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 118,
      "startColumnNumber" : 29,
      "endLineNumber" : 118,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 118,
        "startColumnNumber" : 29,
        "endLineNumber" : 118,
        "endColumnNumber" : 67
      },
      "nodeContext" : "SerializeUtils.deserializeTxn(ia,hdr)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 118,
        "startColumnNumber" : 23,
        "endLineNumber" : 118,
        "endColumnNumber" : 67
      },
      "nodeContext" : "txn=SerializeUtils.deserializeTxn(ia,hdr)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 118,
        "startColumnNumber" : 16,
        "endLineNumber" : 118,
        "endColumnNumber" : 68
      },
      "nodeContext" : "Record txn=SerializeUtils.deserializeTxn(ia,hdr);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 2616,
        "startLineNumber" : 108,
        "startColumnNumber" : 25,
        "endLineNumber" : 159,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  byte[] bytes=logStream.readBuffer(\"txnEntry\");\n  if (bytes.length == 0) {\n    throw new EOFException();\n  }\n  InputArchive ia=BinaryInputArchive.getArchive(new ByteArrayInputStream(bytes));\n  TxnHeader hdr=new TxnHeader();\n  Record txn=SerializeUtils.deserializeTxn(ia,hdr);\n  if (logStream.readByte(\"EOR\") != 'B') {\n    LOG.warn(\"Last transaction was partial.\");\n    throw new EOFException(\"Last transaction was partial.\");\n  }\n  if (hdr.getZxid() <= highestZxid && highestZxid != 0) {\n    LOG.error(highestZxid + \"(higestZxid) >= \" + hdr.getZxid()+ \"(next log) for type \"+ hdr.getType());\n  }\n else {\n    highestZxid=hdr.getZxid();\n  }\nswitch (hdr.getType()) {\ncase OpCode.createSession:    sessionsWithTimeouts.put(hdr.getClientId(),((CreateSessionTxn)txn).getTimeOut());\n  ZooTrace.logTraceMessage(LOG,ZooTrace.SESSION_TRACE_MASK,\"playLog --- create session in log: 0x\" + Long.toHexString(hdr.getClientId()) + \" with timeout: \"+ ((CreateSessionTxn)txn).getTimeOut());\noldDataTree.processTxn(hdr,txn);\nbreak;\ncase OpCode.closeSession:sessionsWithTimeouts.remove(hdr.getClientId());\nZooTrace.logTraceMessage(LOG,ZooTrace.SESSION_TRACE_MASK,\"playLog --- close session in log: 0x\" + Long.toHexString(hdr.getClientId()));\noldDataTree.processTxn(hdr,txn);\nbreak;\ndefault:oldDataTree.processTxn(hdr,txn);\n}\nRequest r=new Request(null,0,hdr.getCxid(),hdr.getType(),null,null);\nr.txn=txn;\nr.hdr=hdr;\nr.zxid=hdr.getZxid();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2629,
        "startLineNumber" : 108,
        "startColumnNumber" : 12,
        "endLineNumber" : 159,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (true) {\n  byte[] bytes=logStream.readBuffer(\"txnEntry\");\n  if (bytes.length == 0) {\n    throw new EOFException();\n  }\n  InputArchive ia=BinaryInputArchive.getArchive(new ByteArrayInputStream(bytes));\n  TxnHeader hdr=new TxnHeader();\n  Record txn=SerializeUtils.deserializeTxn(ia,hdr);\n  if (logStream.readByte(\"EOR\") != 'B') {\n    LOG.warn(\"Last transaction was partial.\");\n    throw new EOFException(\"Last transaction was partial.\");\n  }\n  if (hdr.getZxid() <= highestZxid && highestZxid != 0) {\n    LOG.error(highestZxid + \"(higestZxid) >= \" + hdr.getZxid()+ \"(next log) for type \"+ hdr.getType());\n  }\n else {\n    highestZxid=hdr.getZxid();\n  }\nswitch (hdr.getType()) {\ncase OpCode.createSession:    sessionsWithTimeouts.put(hdr.getClientId(),((CreateSessionTxn)txn).getTimeOut());\n  ZooTrace.logTraceMessage(LOG,ZooTrace.SESSION_TRACE_MASK,\"playLog --- create session in log: 0x\" + Long.toHexString(hdr.getClientId()) + \" with timeout: \"+ ((CreateSessionTxn)txn).getTimeOut());\noldDataTree.processTxn(hdr,txn);\nbreak;\ncase OpCode.closeSession:sessionsWithTimeouts.remove(hdr.getClientId());\nZooTrace.logTraceMessage(LOG,ZooTrace.SESSION_TRACE_MASK,\"playLog --- close session in log: 0x\" + Long.toHexString(hdr.getClientId()));\noldDataTree.processTxn(hdr,txn);\nbreak;\ndefault:oldDataTree.processTxn(hdr,txn);\n}\nRequest r=new Request(null,0,hdr.getCxid(),hdr.getType(),null,null);\nr.txn=txn;\nr.hdr=hdr;\nr.zxid=hdr.getZxid();\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 236,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2653,
        "startLineNumber" : 107,
        "startColumnNumber" : 12,
        "endLineNumber" : 160,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  while (true) {\n    byte[] bytes=logStream.readBuffer(\"txnEntry\");\n    if (bytes.length == 0) {\n      throw new EOFException();\n    }\n    InputArchive ia=BinaryInputArchive.getArchive(new ByteArrayInputStream(bytes));\n    TxnHeader hdr=new TxnHeader();\n    Record txn=SerializeUtils.deserializeTxn(ia,hdr);\n    if (logStream.readByte(\"EOR\") != 'B') {\n      LOG.warn(\"Last transaction was partial.\");\n      throw new EOFException(\"Last transaction was partial.\");\n    }\n    if (hdr.getZxid() <= highestZxid && highestZxid != 0) {\n      LOG.error(highestZxid + \"(higestZxid) >= \" + hdr.getZxid()+ \"(next log) for type \"+ hdr.getType());\n    }\n else {\n      highestZxid=hdr.getZxid();\n    }\nswitch (hdr.getType()) {\ncase OpCode.createSession:      sessionsWithTimeouts.put(hdr.getClientId(),((CreateSessionTxn)txn).getTimeOut());\n    ZooTrace.logTraceMessage(LOG,ZooTrace.SESSION_TRACE_MASK,\"playLog --- create session in log: 0x\" + Long.toHexString(hdr.getClientId()) + \" with timeout: \"+ ((CreateSessionTxn)txn).getTimeOut());\n  oldDataTree.processTxn(hdr,txn);\nbreak;\ncase OpCode.closeSession:sessionsWithTimeouts.remove(hdr.getClientId());\nZooTrace.logTraceMessage(LOG,ZooTrace.SESSION_TRACE_MASK,\"playLog --- close session in log: 0x\" + Long.toHexString(hdr.getClientId()));\noldDataTree.processTxn(hdr,txn);\nbreak;\ndefault:oldDataTree.processTxn(hdr,txn);\n}\nRequest r=new Request(null,0,hdr.getCxid(),hdr.getType(),null,null);\nr.txn=txn;\nr.hdr=hdr;\nr.zxid=hdr.getZxid();\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 237,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2758,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 162,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  while (true) {\n    byte[] bytes=logStream.readBuffer(\"txnEntry\");\n    if (bytes.length == 0) {\n      throw new EOFException();\n    }\n    InputArchive ia=BinaryInputArchive.getArchive(new ByteArrayInputStream(bytes));\n    TxnHeader hdr=new TxnHeader();\n    Record txn=SerializeUtils.deserializeTxn(ia,hdr);\n    if (logStream.readByte(\"EOR\") != 'B') {\n      LOG.warn(\"Last transaction was partial.\");\n      throw new EOFException(\"Last transaction was partial.\");\n    }\n    if (hdr.getZxid() <= highestZxid && highestZxid != 0) {\n      LOG.error(highestZxid + \"(higestZxid) >= \" + hdr.getZxid()+ \"(next log) for type \"+ hdr.getType());\n    }\n else {\n      highestZxid=hdr.getZxid();\n    }\nswitch (hdr.getType()) {\ncase OpCode.createSession:      sessionsWithTimeouts.put(hdr.getClientId(),((CreateSessionTxn)txn).getTimeOut());\n    ZooTrace.logTraceMessage(LOG,ZooTrace.SESSION_TRACE_MASK,\"playLog --- create session in log: 0x\" + Long.toHexString(hdr.getClientId()) + \" with timeout: \"+ ((CreateSessionTxn)txn).getTimeOut());\n  oldDataTree.processTxn(hdr,txn);\nbreak;\ncase OpCode.closeSession:sessionsWithTimeouts.remove(hdr.getClientId());\nZooTrace.logTraceMessage(LOG,ZooTrace.SESSION_TRACE_MASK,\"playLog --- close session in log: 0x\" + Long.toHexString(hdr.getClientId()));\noldDataTree.processTxn(hdr,txn);\nbreak;\ndefault:oldDataTree.processTxn(hdr,txn);\n}\nRequest r=new Request(null,0,hdr.getCxid(),hdr.getType(),null,null);\nr.txn=txn;\nr.hdr=hdr;\nr.zxid=hdr.getZxid();\n}\n}\n catch (EOFException e) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 244,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2832,
        "startLineNumber" : 105,
        "startColumnNumber" : 67,
        "endLineNumber" : 164,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long highestZxid=0;\n  try {\n    while (true) {\n      byte[] bytes=logStream.readBuffer(\"txnEntry\");\n      if (bytes.length == 0) {\n        throw new EOFException();\n      }\n      InputArchive ia=BinaryInputArchive.getArchive(new ByteArrayInputStream(bytes));\n      TxnHeader hdr=new TxnHeader();\n      Record txn=SerializeUtils.deserializeTxn(ia,hdr);\n      if (logStream.readByte(\"EOR\") != 'B') {\n        LOG.warn(\"Last transaction was partial.\");\n        throw new EOFException(\"Last transaction was partial.\");\n      }\n      if (hdr.getZxid() <= highestZxid && highestZxid != 0) {\n        LOG.error(highestZxid + \"(higestZxid) >= \" + hdr.getZxid()+ \"(next log) for type \"+ hdr.getType());\n      }\n else {\n        highestZxid=hdr.getZxid();\n      }\nswitch (hdr.getType()) {\ncase OpCode.createSession:        sessionsWithTimeouts.put(hdr.getClientId(),((CreateSessionTxn)txn).getTimeOut());\n      ZooTrace.logTraceMessage(LOG,ZooTrace.SESSION_TRACE_MASK,\"playLog --- create session in log: 0x\" + Long.toHexString(hdr.getClientId()) + \" with timeout: \"+ ((CreateSessionTxn)txn).getTimeOut());\n    oldDataTree.processTxn(hdr,txn);\n  break;\ncase OpCode.closeSession:sessionsWithTimeouts.remove(hdr.getClientId());\nZooTrace.logTraceMessage(LOG,ZooTrace.SESSION_TRACE_MASK,\"playLog --- close session in log: 0x\" + Long.toHexString(hdr.getClientId()));\noldDataTree.processTxn(hdr,txn);\nbreak;\ndefault:oldDataTree.processTxn(hdr,txn);\n}\nRequest r=new Request(null,0,hdr.getCxid(),hdr.getType(),null,null);\nr.txn=txn;\nr.hdr=hdr;\nr.zxid=hdr.getZxid();\n}\n}\n catch (EOFException e) {\n}\nreturn highestZxid;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 252,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3035,
        "startLineNumber" : 99,
        "startColumnNumber" : 4,
        "endLineNumber" : 164,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * play the log from this logstream into the datatree\n * @param logStream\n * @return\n * @throws IOException\n */\npublic long playLog(InputArchive logStream) throws IOException {\n  long highestZxid=0;\n  try {\n    while (true) {\n      byte[] bytes=logStream.readBuffer(\"txnEntry\");\n      if (bytes.length == 0) {\n        throw new EOFException();\n      }\n      InputArchive ia=BinaryInputArchive.getArchive(new ByteArrayInputStream(bytes));\n      TxnHeader hdr=new TxnHeader();\n      Record txn=SerializeUtils.deserializeTxn(ia,hdr);\n      if (logStream.readByte(\"EOR\") != 'B') {\n        LOG.warn(\"Last transaction was partial.\");\n        throw new EOFException(\"Last transaction was partial.\");\n      }\n      if (hdr.getZxid() <= highestZxid && highestZxid != 0) {\n        LOG.error(highestZxid + \"(higestZxid) >= \" + hdr.getZxid()+ \"(next log) for type \"+ hdr.getType());\n      }\n else {\n        highestZxid=hdr.getZxid();\n      }\nswitch (hdr.getType()) {\ncase OpCode.createSession:        sessionsWithTimeouts.put(hdr.getClientId(),((CreateSessionTxn)txn).getTimeOut());\n      ZooTrace.logTraceMessage(LOG,ZooTrace.SESSION_TRACE_MASK,\"playLog --- create session in log: 0x\" + Long.toHexString(hdr.getClientId()) + \" with timeout: \"+ ((CreateSessionTxn)txn).getTimeOut());\n    oldDataTree.processTxn(hdr,txn);\n  break;\ncase OpCode.closeSession:sessionsWithTimeouts.remove(hdr.getClientId());\nZooTrace.logTraceMessage(LOG,ZooTrace.SESSION_TRACE_MASK,\"playLog --- close session in log: 0x\" + Long.toHexString(hdr.getClientId()));\noldDataTree.processTxn(hdr,txn);\nbreak;\ndefault:oldDataTree.processTxn(hdr,txn);\n}\nRequest r=new Request(null,0,hdr.getCxid(),hdr.getType(),null,null);\nr.txn=txn;\nr.hdr=hdr;\nr.zxid=hdr.getZxid();\n}\n}\n catch (EOFException e) {\n}\nreturn highestZxid;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 263,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 118,
        "startColumnNumber" : 16,
        "endLineNumber" : 118,
        "endColumnNumber" : 68
      },
      "nodeContext" : "Record txn=SerializeUtils.deserializeTxn(ia,hdr);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.zookeeper.server.util.SerializeUtils"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 118,
    "startColumnNumber" : 29,
    "endLineNumber" : 118,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}