{
  "id" : 20,
  "expression" : "NullHandling.replaceWithDefault()",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/core/src/main/java/org/apache/druid/math/expr/Function.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "NullHandling.replaceWithDefault()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 3253,
      "startColumnNumber" : 45,
      "endLineNumber" : 3253,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 3253,
        "startColumnNumber" : 45,
        "endLineNumber" : 3253,
        "endColumnNumber" : 90
      },
      "nodeContext" : "NullHandling.replaceWithDefault() ? -1 : null",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,thenExpression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 3253,
        "startColumnNumber" : 29,
        "endLineNumber" : 3253,
        "endColumnNumber" : 91
      },
      "nodeContext" : "ExprEval.ofLong(NullHandling.replaceWithDefault() ? -1 : null)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 3253,
        "startColumnNumber" : 17,
        "endLineNumber" : 3253,
        "endColumnNumber" : 116
      },
      "nodeContext" : "index < 0 ? ExprEval.ofLong(NullHandling.replaceWithDefault() ? -1 : null) : ExprEval.ofLong(index)",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 3253,
        "startColumnNumber" : 10,
        "endLineNumber" : 3253,
        "endColumnNumber" : 117
      },
      "nodeContext" : "return index < 0 ? ExprEval.ofLong(NullHandling.replaceWithDefault() ? -1 : null) : ExprEval.ofLong(index);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 531,
        "startLineNumber" : 3242,
        "startColumnNumber" : 6,
        "endLineNumber" : 3256,
        "endColumnNumber" : 7
      },
      "nodeContext" : "switch (scalarExpr.type()) {\ncase STRING:case LONG:case DOUBLE:  int index=-1;\nfor (int i=0; i < array.length; i++) {\n  if (Objects.equals(array[i],scalarExpr.value())) {\n    index=i;\n    break;\n  }\n}\nreturn index < 0 ? ExprEval.ofLong(NullHandling.replaceWithDefault() ? -1 : null) : ExprEval.ofLong(index);\ndefault:throw new IAE(\"Function[%s] 2nd argument must be a a scalar type\",name());\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 73,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 596,
        "startLineNumber" : 3239,
        "startColumnNumber" : 4,
        "endLineNumber" : 3257,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Object[] array=arrayExpr.asArray();\nswitch (scalarExpr.type()) {\ncase STRING:case LONG:case DOUBLE:    int index=-1;\n  for (int i=0; i < array.length; i++) {\n    if (Objects.equals(array[i],scalarExpr.value())) {\n      index=i;\n      break;\n    }\n  }\nreturn index < 0 ? ExprEval.ofLong(NullHandling.replaceWithDefault() ? -1 : null) : ExprEval.ofLong(index);\ndefault:throw new IAE(\"Function[%s] 2nd argument must be a a scalar type\",name());\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 672,
        "startLineNumber" : 3237,
        "startColumnNumber" : 4,
        "endLineNumber" : 3257,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override ExprEval doApply(ExprEval arrayExpr,ExprEval scalarExpr){\n  final Object[] array=arrayExpr.asArray();\nswitch (scalarExpr.type()) {\ncase STRING:case LONG:case DOUBLE:    int index=-1;\n  for (int i=0; i < array.length; i++) {\n    if (Objects.equals(array[i],scalarExpr.value())) {\n      index=i;\n      break;\n    }\n  }\nreturn index < 0 ? ExprEval.ofLong(NullHandling.replaceWithDefault() ? -1 : null) : ExprEval.ofLong(index);\ndefault:throw new IAE(\"Function[%s] 2nd argument must be a a scalar type\",name());\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 99,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 3253,
        "startColumnNumber" : 10,
        "endLineNumber" : 3253,
        "endColumnNumber" : 117
      },
      "nodeContext" : "return index < 0 ? ExprEval.ofLong(NullHandling.replaceWithDefault() ? -1 : null) : ExprEval.ofLong(index);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 3253,
    "startColumnNumber" : 45,
    "endLineNumber" : 3253,
    "endColumnNumber" : 78
  } ],
  "layoutRelationDataList" : [ ]
}