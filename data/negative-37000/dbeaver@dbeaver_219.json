{
  "id" : 219,
  "expression" : "SQLQueryResult",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.model.sql/src/org/jkiss/dbeaver/model/sql/data/SQLQueryDataContainer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "SQLQueryResult",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 133,
      "startColumnNumber" : 20,
      "endLineNumber" : 133,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SimpleType,name]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 133,
        "startColumnNumber" : 20,
        "endLineNumber" : 133,
        "endColumnNumber" : 48
      },
      "nodeContext" : "SQLQueryResult.ExecuteResult",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,type]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 133,
        "startColumnNumber" : 20,
        "endLineNumber" : 133,
        "endColumnNumber" : 48
      },
      "nodeContext" : "SQLQueryResult.ExecuteResult",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 133,
        "startColumnNumber" : 20,
        "endLineNumber" : 133,
        "endColumnNumber" : 98
      },
      "nodeContext" : "SQLQueryResult.ExecuteResult executeResult=curResult.addExecuteResult(true);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1890,
        "startLineNumber" : 132,
        "startColumnNumber" : 39,
        "endLineNumber" : 169,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  SQLQueryResult.ExecuteResult executeResult=curResult.addExecuteResult(true);\n  DBRProgressMonitor monitor=session.getProgressMonitor();\n  monitor.subTask(\"Fetch result set\");\n  DBFetchProgress fetchProgress=new DBFetchProgress(session.getProgressMonitor());\n  dataReceiver.fetchStart(session,resultSet,firstRow,maxRows);\n  try {\n    long fetchStartTime=System.currentTimeMillis();\n    while (!fetchProgress.isMaxRowsFetched(maxRows) && !fetchProgress.isCanceled() && resultSet.nextRow()) {\n      dataReceiver.fetchRow(session,resultSet);\n      fetchProgress.monitorRowFetch();\n    }\n    statistics.addFetchTime(System.currentTimeMillis() - fetchStartTime);\n  }\n  finally {\n    try {\n      resultSet.close();\n    }\n catch (    Throwable e) {\n      log.error(\"Error while closing resultset\",e);\n    }\n    try {\n      dataReceiver.fetchEnd(session,resultSet);\n    }\n catch (    Throwable e) {\n      log.error(\"Error while handling end of result set fetch\",e);\n    }\n    dataReceiver.close();\n  }\n  if (executeResult != null) {\n    executeResult.setRowCount(fetchProgress.getRowCount());\n  }\n  statistics.setRowsFetched(fetchProgress.getRowCount());\n  monitor.subTask(fetchProgress.getRowCount() + \" rows fetched\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 158,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1913,
        "startLineNumber" : 132,
        "startColumnNumber" : 16,
        "endLineNumber" : 169,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (resultSet != null) {\n  SQLQueryResult.ExecuteResult executeResult=curResult.addExecuteResult(true);\n  DBRProgressMonitor monitor=session.getProgressMonitor();\n  monitor.subTask(\"Fetch result set\");\n  DBFetchProgress fetchProgress=new DBFetchProgress(session.getProgressMonitor());\n  dataReceiver.fetchStart(session,resultSet,firstRow,maxRows);\n  try {\n    long fetchStartTime=System.currentTimeMillis();\n    while (!fetchProgress.isMaxRowsFetched(maxRows) && !fetchProgress.isCanceled() && resultSet.nextRow()) {\n      dataReceiver.fetchRow(session,resultSet);\n      fetchProgress.monitorRowFetch();\n    }\n    statistics.addFetchTime(System.currentTimeMillis() - fetchStartTime);\n  }\n  finally {\n    try {\n      resultSet.close();\n    }\n catch (    Throwable e) {\n      log.error(\"Error while closing resultset\",e);\n    }\n    try {\n      dataReceiver.fetchEnd(session,resultSet);\n    }\n catch (    Throwable e) {\n      log.error(\"Error while handling end of result set fetch\",e);\n    }\n    dataReceiver.close();\n  }\n  if (executeResult != null) {\n    executeResult.setRowCount(fetchProgress.getRowCount());\n  }\n  statistics.setRowsFetched(fetchProgress.getRowCount());\n  monitor.subTask(fetchProgress.getRowCount() + \" rows fetched\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 162,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2016,
        "startLineNumber" : 130,
        "startColumnNumber" : 30,
        "endLineNumber" : 170,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  DBCResultSet resultSet=dbcStatement.openResultSet();\n  if (resultSet != null) {\n    SQLQueryResult.ExecuteResult executeResult=curResult.addExecuteResult(true);\n    DBRProgressMonitor monitor=session.getProgressMonitor();\n    monitor.subTask(\"Fetch result set\");\n    DBFetchProgress fetchProgress=new DBFetchProgress(session.getProgressMonitor());\n    dataReceiver.fetchStart(session,resultSet,firstRow,maxRows);\n    try {\n      long fetchStartTime=System.currentTimeMillis();\n      while (!fetchProgress.isMaxRowsFetched(maxRows) && !fetchProgress.isCanceled() && resultSet.nextRow()) {\n        dataReceiver.fetchRow(session,resultSet);\n        fetchProgress.monitorRowFetch();\n      }\n      statistics.addFetchTime(System.currentTimeMillis() - fetchStartTime);\n    }\n  finally {\n      try {\n        resultSet.close();\n      }\n catch (      Throwable e) {\n        log.error(\"Error while closing resultset\",e);\n      }\n      try {\n        dataReceiver.fetchEnd(session,resultSet);\n      }\n catch (      Throwable e) {\n        log.error(\"Error while handling end of result set fetch\",e);\n      }\n      dataReceiver.close();\n    }\n    if (executeResult != null) {\n      executeResult.setRowCount(fetchProgress.getRowCount());\n    }\n    statistics.setRowsFetched(fetchProgress.getRowCount());\n    monitor.subTask(fetchProgress.getRowCount() + \" rows fetched\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2123,
        "startLineNumber" : 130,
        "startColumnNumber" : 12,
        "endLineNumber" : 172,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (hasResultSet) {\n  DBCResultSet resultSet=dbcStatement.openResultSet();\n  if (resultSet != null) {\n    SQLQueryResult.ExecuteResult executeResult=curResult.addExecuteResult(true);\n    DBRProgressMonitor monitor=session.getProgressMonitor();\n    monitor.subTask(\"Fetch result set\");\n    DBFetchProgress fetchProgress=new DBFetchProgress(session.getProgressMonitor());\n    dataReceiver.fetchStart(session,resultSet,firstRow,maxRows);\n    try {\n      long fetchStartTime=System.currentTimeMillis();\n      while (!fetchProgress.isMaxRowsFetched(maxRows) && !fetchProgress.isCanceled() && resultSet.nextRow()) {\n        dataReceiver.fetchRow(session,resultSet);\n        fetchProgress.monitorRowFetch();\n      }\n      statistics.addFetchTime(System.currentTimeMillis() - fetchStartTime);\n    }\n  finally {\n      try {\n        resultSet.close();\n      }\n catch (      Throwable e) {\n        log.error(\"Error while closing resultset\",e);\n      }\n      try {\n        dataReceiver.fetchEnd(session,resultSet);\n      }\n catch (      Throwable e) {\n        log.error(\"Error while handling end of result set fetch\",e);\n      }\n      dataReceiver.close();\n    }\n    if (executeResult != null) {\n      executeResult.setRowCount(fetchProgress.getRowCount());\n    }\n    statistics.setRowsFetched(fetchProgress.getRowCount());\n    monitor.subTask(fetchProgress.getRowCount() + \" rows fetched\");\n  }\n}\n else {\n  log.warn(\"No results returned by query execution\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 179,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2795,
        "startLineNumber" : 116,
        "startColumnNumber" : 8,
        "endLineNumber" : 178,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  DBExecUtils.setStatementFetchSize(dbcStatement,firstRow,maxRows,fetchSize);\n  session.getProgressMonitor().subTask(\"Execute query\");\n  boolean hasResultSet=dbcStatement.executeStatement();\n  statistics.addExecuteTime(System.currentTimeMillis() - startTime);\n  statistics.addStatementsCount();\n  curResult.setHasResultSet(hasResultSet);\n  if (hasResultSet) {\n    DBCResultSet resultSet=dbcStatement.openResultSet();\n    if (resultSet != null) {\n      SQLQueryResult.ExecuteResult executeResult=curResult.addExecuteResult(true);\n      DBRProgressMonitor monitor=session.getProgressMonitor();\n      monitor.subTask(\"Fetch result set\");\n      DBFetchProgress fetchProgress=new DBFetchProgress(session.getProgressMonitor());\n      dataReceiver.fetchStart(session,resultSet,firstRow,maxRows);\n      try {\n        long fetchStartTime=System.currentTimeMillis();\n        while (!fetchProgress.isMaxRowsFetched(maxRows) && !fetchProgress.isCanceled() && resultSet.nextRow()) {\n          dataReceiver.fetchRow(session,resultSet);\n          fetchProgress.monitorRowFetch();\n        }\n        statistics.addFetchTime(System.currentTimeMillis() - fetchStartTime);\n      }\n  finally {\n        try {\n          resultSet.close();\n        }\n catch (        Throwable e) {\n          log.error(\"Error while closing resultset\",e);\n        }\n        try {\n          dataReceiver.fetchEnd(session,resultSet);\n        }\n catch (        Throwable e) {\n          log.error(\"Error while handling end of result set fetch\",e);\n        }\n        dataReceiver.close();\n      }\n      if (executeResult != null) {\n        executeResult.setRowCount(fetchProgress.getRowCount());\n      }\n      statistics.setRowsFetched(fetchProgress.getRowCount());\n      monitor.subTask(fetchProgress.getRowCount() + \" rows fetched\");\n    }\n  }\n else {\n    log.warn(\"No results returned by query execution\");\n  }\n  try {\n    curResult.addWarnings(dbcStatement.getStatementWarnings());\n  }\n catch (  Throwable e) {\n    log.warn(\"Can't read execution warnings\",e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 241,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3009,
        "startLineNumber" : 109,
        "startColumnNumber" : 8,
        "endLineNumber" : 178,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (final DBCStatement dbcStatement=DBUtils.makeStatement(source,session,DBCStatementType.SCRIPT,sqlQuery,firstRow,maxRows)){\n  DBExecUtils.setStatementFetchSize(dbcStatement,firstRow,maxRows,fetchSize);\n  session.getProgressMonitor().subTask(\"Execute query\");\n  boolean hasResultSet=dbcStatement.executeStatement();\n  statistics.addExecuteTime(System.currentTimeMillis() - startTime);\n  statistics.addStatementsCount();\n  curResult.setHasResultSet(hasResultSet);\n  if (hasResultSet) {\n    DBCResultSet resultSet=dbcStatement.openResultSet();\n    if (resultSet != null) {\n      SQLQueryResult.ExecuteResult executeResult=curResult.addExecuteResult(true);\n      DBRProgressMonitor monitor=session.getProgressMonitor();\n      monitor.subTask(\"Fetch result set\");\n      DBFetchProgress fetchProgress=new DBFetchProgress(session.getProgressMonitor());\n      dataReceiver.fetchStart(session,resultSet,firstRow,maxRows);\n      try {\n        long fetchStartTime=System.currentTimeMillis();\n        while (!fetchProgress.isMaxRowsFetched(maxRows) && !fetchProgress.isCanceled() && resultSet.nextRow()) {\n          dataReceiver.fetchRow(session,resultSet);\n          fetchProgress.monitorRowFetch();\n        }\n        statistics.addFetchTime(System.currentTimeMillis() - fetchStartTime);\n      }\n  finally {\n        try {\n          resultSet.close();\n        }\n catch (        Throwable e) {\n          log.error(\"Error while closing resultset\",e);\n        }\n        try {\n          dataReceiver.fetchEnd(session,resultSet);\n        }\n catch (        Throwable e) {\n          log.error(\"Error while handling end of result set fetch\",e);\n        }\n        dataReceiver.close();\n      }\n      if (executeResult != null) {\n        executeResult.setRowCount(fetchProgress.getRowCount());\n      }\n      statistics.setRowsFetched(fetchProgress.getRowCount());\n      monitor.subTask(fetchProgress.getRowCount() + \" rows fetched\");\n    }\n  }\n else {\n    log.warn(\"No results returned by query execution\");\n  }\n  try {\n    curResult.addWarnings(dbcStatement.getStatementWarnings());\n  }\n catch (  Throwable e) {\n    log.warn(\"Can't read execution warnings\",e);\n  }\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 259,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4745,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 181,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DBCStatistics statistics=new DBCStatistics();\n  DBPDataSource dataSource=session.getDataSource();\n  SQLQuery sqlQuery=query;\n  String queryText=sqlQuery.getOriginalText();\n  if (dataFilter != null && dataFilter.hasFilters()) {\n    String filteredQueryText=dataSource.getSQLDialect().addFiltersToQuery(session.getProgressMonitor(),dataSource,queryText,dataFilter);\n    sqlQuery=new SQLQuery(dataSource,filteredQueryText,sqlQuery);\n  }\n else {\n    sqlQuery=new SQLQuery(dataSource,queryText,sqlQuery);\n  }\n  if (scriptContext != null) {\n    SQLSyntaxManager syntaxManager=new SQLSyntaxManager();\n    syntaxManager.init(dataSource);\n    SQLRuleManager ruleManager=new SQLRuleManager(syntaxManager);\n    ruleManager.loadRules(dataSource,false);\n    SQLParserContext parserContext=new SQLParserContext(this,syntaxManager,ruleManager,new Document(query.getOriginalText()));\n    sqlQuery.setParameters(SQLScriptParser.parseParameters(parserContext,0,sqlQuery.getLength()));\n    if (!scriptContext.fillQueryParameters(sqlQuery,CommonUtils.isBitSet(flags,DBSDataContainer.FLAG_REFRESH))) {\n      return statistics;\n    }\n  }\n  final SQLQueryResult curResult=new SQLQueryResult(sqlQuery);\n  if (firstRow > 0) {\n    curResult.setRowOffset(firstRow);\n  }\n  statistics.setQueryText(sqlQuery.getText());\n  long startTime=System.currentTimeMillis();\n  try (final DBCStatement dbcStatement=DBUtils.makeStatement(source,session,DBCStatementType.SCRIPT,sqlQuery,firstRow,maxRows)){\n    DBExecUtils.setStatementFetchSize(dbcStatement,firstRow,maxRows,fetchSize);\n    session.getProgressMonitor().subTask(\"Execute query\");\n    boolean hasResultSet=dbcStatement.executeStatement();\n    statistics.addExecuteTime(System.currentTimeMillis() - startTime);\n    statistics.addStatementsCount();\n    curResult.setHasResultSet(hasResultSet);\n    if (hasResultSet) {\n      DBCResultSet resultSet=dbcStatement.openResultSet();\n      if (resultSet != null) {\n        SQLQueryResult.ExecuteResult executeResult=curResult.addExecuteResult(true);\n        DBRProgressMonitor monitor=session.getProgressMonitor();\n        monitor.subTask(\"Fetch result set\");\n        DBFetchProgress fetchProgress=new DBFetchProgress(session.getProgressMonitor());\n        dataReceiver.fetchStart(session,resultSet,firstRow,maxRows);\n        try {\n          long fetchStartTime=System.currentTimeMillis();\n          while (!fetchProgress.isMaxRowsFetched(maxRows) && !fetchProgress.isCanceled() && resultSet.nextRow()) {\n            dataReceiver.fetchRow(session,resultSet);\n            fetchProgress.monitorRowFetch();\n          }\n          statistics.addFetchTime(System.currentTimeMillis() - fetchStartTime);\n        }\n  finally {\n          try {\n            resultSet.close();\n          }\n catch (          Throwable e) {\n            log.error(\"Error while closing resultset\",e);\n          }\n          try {\n            dataReceiver.fetchEnd(session,resultSet);\n          }\n catch (          Throwable e) {\n            log.error(\"Error while handling end of result set fetch\",e);\n          }\n          dataReceiver.close();\n        }\n        if (executeResult != null) {\n          executeResult.setRowCount(fetchProgress.getRowCount());\n        }\n        statistics.setRowsFetched(fetchProgress.getRowCount());\n        monitor.subTask(fetchProgress.getRowCount() + \" rows fetched\");\n      }\n    }\n else {\n      log.warn(\"No results returned by query execution\");\n    }\n    try {\n      curResult.addWarnings(dbcStatement.getStatementWarnings());\n    }\n catch (    Throwable e) {\n      log.warn(\"Can't read execution warnings\",e);\n    }\n  }\n   return statistics;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 448,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5012,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 181,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@NotNull @Override public DBCStatistics readData(@NotNull DBCExecutionSource source,@NotNull DBCSession session,@NotNull DBDDataReceiver dataReceiver,DBDDataFilter dataFilter,long firstRow,long maxRows,long flags,int fetchSize) throws DBCException {\n  DBCStatistics statistics=new DBCStatistics();\n  DBPDataSource dataSource=session.getDataSource();\n  SQLQuery sqlQuery=query;\n  String queryText=sqlQuery.getOriginalText();\n  if (dataFilter != null && dataFilter.hasFilters()) {\n    String filteredQueryText=dataSource.getSQLDialect().addFiltersToQuery(session.getProgressMonitor(),dataSource,queryText,dataFilter);\n    sqlQuery=new SQLQuery(dataSource,filteredQueryText,sqlQuery);\n  }\n else {\n    sqlQuery=new SQLQuery(dataSource,queryText,sqlQuery);\n  }\n  if (scriptContext != null) {\n    SQLSyntaxManager syntaxManager=new SQLSyntaxManager();\n    syntaxManager.init(dataSource);\n    SQLRuleManager ruleManager=new SQLRuleManager(syntaxManager);\n    ruleManager.loadRules(dataSource,false);\n    SQLParserContext parserContext=new SQLParserContext(this,syntaxManager,ruleManager,new Document(query.getOriginalText()));\n    sqlQuery.setParameters(SQLScriptParser.parseParameters(parserContext,0,sqlQuery.getLength()));\n    if (!scriptContext.fillQueryParameters(sqlQuery,CommonUtils.isBitSet(flags,DBSDataContainer.FLAG_REFRESH))) {\n      return statistics;\n    }\n  }\n  final SQLQueryResult curResult=new SQLQueryResult(sqlQuery);\n  if (firstRow > 0) {\n    curResult.setRowOffset(firstRow);\n  }\n  statistics.setQueryText(sqlQuery.getText());\n  long startTime=System.currentTimeMillis();\n  try (final DBCStatement dbcStatement=DBUtils.makeStatement(source,session,DBCStatementType.SCRIPT,sqlQuery,firstRow,maxRows)){\n    DBExecUtils.setStatementFetchSize(dbcStatement,firstRow,maxRows,fetchSize);\n    session.getProgressMonitor().subTask(\"Execute query\");\n    boolean hasResultSet=dbcStatement.executeStatement();\n    statistics.addExecuteTime(System.currentTimeMillis() - startTime);\n    statistics.addStatementsCount();\n    curResult.setHasResultSet(hasResultSet);\n    if (hasResultSet) {\n      DBCResultSet resultSet=dbcStatement.openResultSet();\n      if (resultSet != null) {\n        SQLQueryResult.ExecuteResult executeResult=curResult.addExecuteResult(true);\n        DBRProgressMonitor monitor=session.getProgressMonitor();\n        monitor.subTask(\"Fetch result set\");\n        DBFetchProgress fetchProgress=new DBFetchProgress(session.getProgressMonitor());\n        dataReceiver.fetchStart(session,resultSet,firstRow,maxRows);\n        try {\n          long fetchStartTime=System.currentTimeMillis();\n          while (!fetchProgress.isMaxRowsFetched(maxRows) && !fetchProgress.isCanceled() && resultSet.nextRow()) {\n            dataReceiver.fetchRow(session,resultSet);\n            fetchProgress.monitorRowFetch();\n          }\n          statistics.addFetchTime(System.currentTimeMillis() - fetchStartTime);\n        }\n  finally {\n          try {\n            resultSet.close();\n          }\n catch (          Throwable e) {\n            log.error(\"Error while closing resultset\",e);\n          }\n          try {\n            dataReceiver.fetchEnd(session,resultSet);\n          }\n catch (          Throwable e) {\n            log.error(\"Error while handling end of result set fetch\",e);\n          }\n          dataReceiver.close();\n        }\n        if (executeResult != null) {\n          executeResult.setRowCount(fetchProgress.getRowCount());\n        }\n        statistics.setRowsFetched(fetchProgress.getRowCount());\n        monitor.subTask(fetchProgress.getRowCount() + \" rows fetched\");\n      }\n    }\n else {\n      log.warn(\"No results returned by query execution\");\n    }\n    try {\n      curResult.addWarnings(dbcStatement.getStatementWarnings());\n    }\n catch (    Throwable e) {\n      log.warn(\"Can't read execution warnings\",e);\n    }\n  }\n   return statistics;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 493,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 133,
        "startColumnNumber" : 20,
        "endLineNumber" : 133,
        "endColumnNumber" : 98
      },
      "nodeContext" : "SQLQueryResult.ExecuteResult executeResult=curResult.addExecuteResult(true);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.jkiss.dbeaver.model.sql.SQLQueryResult"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 133,
    "startColumnNumber" : 20,
    "endLineNumber" : 133,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}