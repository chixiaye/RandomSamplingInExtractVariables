{
  "id" : 391,
  "expression" : "rand(minLevels,maxLevels)",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/utils/graphutils/GraphGenerator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "rand(minLevels,maxLevels)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 36,
      "startColumnNumber" : 19,
      "endLineNumber" : 36,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 36,
        "startColumnNumber" : 10,
        "endLineNumber" : 36,
        "endColumnNumber" : 45
      },
      "nodeContext" : "levels=rand(minLevels,maxLevels)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 36,
        "startColumnNumber" : 6,
        "endLineNumber" : 36,
        "endColumnNumber" : 46
      },
      "nodeContext" : "int levels=rand(minLevels,maxLevels);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 837,
        "startLineNumber" : 35,
        "startColumnNumber" : 43,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int levels=rand(minLevels,maxLevels);\n  int[] nodesPerLevel=new int[levels];\n  int n=0;\n  for (int l=0; l < levels; l++) {\n    nodesPerLevel[l]=rand(minNodesPerLevel,maxNodesPerLevel);\n    n+=nodesPerLevel[l];\n  }\n  List<List<Integer>> g=Utils.createEmptyAdjacencyList(n);\n  int levelIndex=0;\n  for (int l=0; l < levels - 1; l++) {\n    for (int i=0; i < nodesPerLevel[l]; i++) {\n      for (int j=0; j < nodesPerLevel[l + 1]; j++) {\n        if (Math.random() <= edgeProbability) {\n          Utils.addDirectedEdge(g,levelIndex + i,levelIndex + nodesPerLevel[l] + j);\n        }\n      }\n    }\n    levelIndex+=nodesPerLevel[l];\n  }\n  return g;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 145,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 876,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public List<List<Integer>> createDag(){\n  int levels=rand(minLevels,maxLevels);\n  int[] nodesPerLevel=new int[levels];\n  int n=0;\n  for (int l=0; l < levels; l++) {\n    nodesPerLevel[l]=rand(minNodesPerLevel,maxNodesPerLevel);\n    n+=nodesPerLevel[l];\n  }\n  List<List<Integer>> g=Utils.createEmptyAdjacencyList(n);\n  int levelIndex=0;\n  for (int l=0; l < levels - 1; l++) {\n    for (int i=0; i < nodesPerLevel[l]; i++) {\n      for (int j=0; j < nodesPerLevel[l + 1]; j++) {\n        if (Math.random() <= edgeProbability) {\n          Utils.addDirectedEdge(g,levelIndex + i,levelIndex + nodesPerLevel[l] + j);\n        }\n      }\n    }\n    levelIndex+=nodesPerLevel[l];\n  }\n  return g;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 156,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 36,
        "startColumnNumber" : 6,
        "endLineNumber" : 36,
        "endColumnNumber" : 46
      },
      "nodeContext" : "int levels=rand(minLevels,maxLevels);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 36,
    "startColumnNumber" : 19,
    "endLineNumber" : 36,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}