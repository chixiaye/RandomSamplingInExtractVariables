{
  "id" : 364,
  "expression" : "totalLen",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/merger/ArrayMerger.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "totalLen",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 57,
      "startColumnNumber" : 12,
      "endLineNumber" : 57,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 57,
        "endColumnNumber" : 25
      },
      "nodeContext" : "totalLen == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (totalLen == 0) {\n  return new Object[0];\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1160,
        "startLineNumber" : 29,
        "startColumnNumber" : 45,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (ArrayUtils.isEmpty(items)) {\n    return new Object[0];\n  }\n  int i=0;\n  while (i < items.length && items[i] == null) {\n    i++;\n  }\n  if (i == items.length) {\n    return new Object[0];\n  }\n  Class<?> type=items[i].getClass().getComponentType();\n  int totalLen=0;\n  for (; i < items.length; i++) {\n    if (items[i] == null) {\n      continue;\n    }\n    Class<?> itemType=items[i].getClass().getComponentType();\n    if (itemType != type) {\n      throw new IllegalArgumentException(\"Arguments' types are different\");\n    }\n    totalLen+=items[i].length;\n  }\n  if (totalLen == 0) {\n    return new Object[0];\n  }\n  Object result=Array.newInstance(type,totalLen);\n  int index=0;\n  for (  Object[] array : items) {\n    if (array != null) {\n      for (int j=0; j < array.length; j++) {\n        Array.set(result,index++,array[j]);\n      }\n    }\n  }\n  return (Object[])result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 189,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1215,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Object[] merge(Object[]... items){\n  if (ArrayUtils.isEmpty(items)) {\n    return new Object[0];\n  }\n  int i=0;\n  while (i < items.length && items[i] == null) {\n    i++;\n  }\n  if (i == items.length) {\n    return new Object[0];\n  }\n  Class<?> type=items[i].getClass().getComponentType();\n  int totalLen=0;\n  for (; i < items.length; i++) {\n    if (items[i] == null) {\n      continue;\n    }\n    Class<?> itemType=items[i].getClass().getComponentType();\n    if (itemType != type) {\n      throw new IllegalArgumentException(\"Arguments' types are different\");\n    }\n    totalLen+=items[i].length;\n  }\n  if (totalLen == 0) {\n    return new Object[0];\n  }\n  Object result=Array.newInstance(type,totalLen);\n  int index=0;\n  for (  Object[] array : items) {\n    if (array != null) {\n      for (int j=0; j < array.length; j++) {\n        Array.set(result,index++,array[j]);\n      }\n    }\n  }\n  return (Object[])result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 204,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 57,
        "endColumnNumber" : 25
      },
      "nodeContext" : "totalLen == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "totalLen",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 61,
      "startColumnNumber" : 48,
      "endLineNumber" : 61,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 61,
        "startColumnNumber" : 24,
        "endLineNumber" : 61,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Array.newInstance(type,totalLen)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 61,
        "startColumnNumber" : 15,
        "endLineNumber" : 61,
        "endColumnNumber" : 57
      },
      "nodeContext" : "result=Array.newInstance(type,totalLen)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Object result=Array.newInstance(type,totalLen);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1160,
        "startLineNumber" : 29,
        "startColumnNumber" : 45,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (ArrayUtils.isEmpty(items)) {\n    return new Object[0];\n  }\n  int i=0;\n  while (i < items.length && items[i] == null) {\n    i++;\n  }\n  if (i == items.length) {\n    return new Object[0];\n  }\n  Class<?> type=items[i].getClass().getComponentType();\n  int totalLen=0;\n  for (; i < items.length; i++) {\n    if (items[i] == null) {\n      continue;\n    }\n    Class<?> itemType=items[i].getClass().getComponentType();\n    if (itemType != type) {\n      throw new IllegalArgumentException(\"Arguments' types are different\");\n    }\n    totalLen+=items[i].length;\n  }\n  if (totalLen == 0) {\n    return new Object[0];\n  }\n  Object result=Array.newInstance(type,totalLen);\n  int index=0;\n  for (  Object[] array : items) {\n    if (array != null) {\n      for (int j=0; j < array.length; j++) {\n        Array.set(result,index++,array[j]);\n      }\n    }\n  }\n  return (Object[])result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 189,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1215,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Object[] merge(Object[]... items){\n  if (ArrayUtils.isEmpty(items)) {\n    return new Object[0];\n  }\n  int i=0;\n  while (i < items.length && items[i] == null) {\n    i++;\n  }\n  if (i == items.length) {\n    return new Object[0];\n  }\n  Class<?> type=items[i].getClass().getComponentType();\n  int totalLen=0;\n  for (; i < items.length; i++) {\n    if (items[i] == null) {\n      continue;\n    }\n    Class<?> itemType=items[i].getClass().getComponentType();\n    if (itemType != type) {\n      throw new IllegalArgumentException(\"Arguments' types are different\");\n    }\n    totalLen+=items[i].length;\n  }\n  if (totalLen == 0) {\n    return new Object[0];\n  }\n  Object result=Array.newInstance(type,totalLen);\n  int index=0;\n  for (  Object[] array : items) {\n    if (array != null) {\n      for (int j=0; j < array.length; j++) {\n        Array.set(result,index++,array[j]);\n      }\n    }\n  }\n  return (Object[])result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 204,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Object result=Array.newInstance(type,totalLen);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 57,
    "startColumnNumber" : 12,
    "endLineNumber" : 57,
    "endColumnNumber" : 20
  }, {
    "charLength" : 8,
    "startLineNumber" : 61,
    "startColumnNumber" : 48,
    "endLineNumber" : 61,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}