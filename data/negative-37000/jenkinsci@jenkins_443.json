{
  "id" : 443,
  "expression" : "_delim.indexOf(c)",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/cli/src/main/java/hudson/util/QuotedStringTokenizer.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "_delim.indexOf(c)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 158,
      "startColumnNumber" : 21,
      "endLineNumber" : 158,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 158,
        "startColumnNumber" : 21,
        "endLineNumber" : 158,
        "endColumnNumber" : 41
      },
      "nodeContext" : "_delim.indexOf(c) >= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 853,
        "startLineNumber" : 158,
        "startColumnNumber" : 18,
        "endLineNumber" : 183,
        "endColumnNumber" : 19
      },
      "nodeContext" : "if (_delim.indexOf(c) >= 0) {\n  if (_returnDelimiters) {\n    _token.append(c);\n    return _hasToken=true;\n  }\n}\n else if (c == '\\'' && _single) {\n  if (_returnQuotes)   _token.append(c);\n  state=2;\n}\n else if (c == '\\\"' && _double) {\n  if (_returnQuotes)   _token.append(c);\n  state=3;\n}\n else {\n  _token.append(c);\n  _hasToken=true;\n  state=1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 70,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3794,
        "startLineNumber" : 155,
        "startColumnNumber" : 12,
        "endLineNumber" : 272,
        "endColumnNumber" : 13
      },
      "nodeContext" : "switch (state) {\ncase 0:  if (_delim.indexOf(c) >= 0) {\n    if (_returnDelimiters) {\n      _token.append(c);\n      return _hasToken=true;\n    }\n  }\n else   if (c == '\\'' && _single) {\n    if (_returnQuotes)     _token.append(c);\n    state=2;\n  }\n else   if (c == '\\\"' && _double) {\n    if (_returnQuotes)     _token.append(c);\n    state=3;\n  }\n else {\n    _token.append(c);\n    _hasToken=true;\n    state=1;\n  }\ncontinue;\ncase 1:_hasToken=true;\nif (escape) {\nescape=false;\nif (ESCAPABLE_CHARS.indexOf(c) < 0) _token.append('\\\\');\n_token.append(c);\n}\n else if (_delim.indexOf(c) >= 0) {\nif (_returnDelimiters) _i--;\nreturn _hasToken;\n}\n else if (c == '\\'' && _single) {\nif (_returnQuotes) _token.append(c);\nstate=2;\n}\n else if (c == '\\\"' && _double) {\nif (_returnQuotes) _token.append(c);\nstate=3;\n}\n else if (c == '\\\\') {\nescape=true;\n}\n else _token.append(c);\ncontinue;\ncase 2:_hasToken=true;\nif (escape) {\nescape=false;\nif (ESCAPABLE_CHARS.indexOf(c) < 0) _token.append('\\\\');\n_token.append(c);\n}\n else if (c == '\\'') {\nif (_returnQuotes) _token.append(c);\nstate=1;\n}\n else if (c == '\\\\') {\nif (_returnQuotes) _token.append(c);\nescape=true;\n}\n else _token.append(c);\ncontinue;\ncase 3:_hasToken=true;\nif (escape) {\nescape=false;\nif (ESCAPABLE_CHARS.indexOf(c) < 0) _token.append('\\\\');\n_token.append(c);\n}\n else if (c == '\\\"') {\nif (_returnQuotes) _token.append(c);\nstate=1;\n}\n else if (c == '\\\\') {\nif (_returnQuotes) _token.append(c);\nescape=true;\n}\n else _token.append(c);\ncontinue;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 307,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 3864,
        "startLineNumber" : 152,
        "startColumnNumber" : 8,
        "endLineNumber" : 273,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  char c=_string.charAt(_i++);\nswitch (state) {\ncase 0:    if (_delim.indexOf(c) >= 0) {\n      if (_returnDelimiters) {\n        _token.append(c);\n        return _hasToken=true;\n      }\n    }\n else     if (c == '\\'' && _single) {\n      if (_returnQuotes)       _token.append(c);\n      state=2;\n    }\n else     if (c == '\\\"' && _double) {\n      if (_returnQuotes)       _token.append(c);\n      state=3;\n    }\n else {\n      _token.append(c);\n      _hasToken=true;\n      state=1;\n    }\n  continue;\ncase 1:_hasToken=true;\nif (escape) {\nescape=false;\nif (ESCAPABLE_CHARS.indexOf(c) < 0) _token.append('\\\\');\n_token.append(c);\n}\n else if (_delim.indexOf(c) >= 0) {\nif (_returnDelimiters) _i--;\nreturn _hasToken;\n}\n else if (c == '\\'' && _single) {\nif (_returnQuotes) _token.append(c);\nstate=2;\n}\n else if (c == '\\\"' && _double) {\nif (_returnQuotes) _token.append(c);\nstate=3;\n}\n else if (c == '\\\\') {\nescape=true;\n}\n else _token.append(c);\ncontinue;\ncase 2:_hasToken=true;\nif (escape) {\nescape=false;\nif (ESCAPABLE_CHARS.indexOf(c) < 0) _token.append('\\\\');\n_token.append(c);\n}\n else if (c == '\\'') {\nif (_returnQuotes) _token.append(c);\nstate=1;\n}\n else if (c == '\\\\') {\nif (_returnQuotes) _token.append(c);\nescape=true;\n}\n else _token.append(c);\ncontinue;\ncase 3:_hasToken=true;\nif (escape) {\nescape=false;\nif (ESCAPABLE_CHARS.indexOf(c) < 0) _token.append('\\\\');\n_token.append(c);\n}\n else if (c == '\\\"') {\nif (_returnQuotes) _token.append(c);\nstate=1;\n}\n else if (c == '\\\\') {\nif (_returnQuotes) _token.append(c);\nescape=true;\n}\n else _token.append(c);\ncontinue;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 317,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3901,
        "startLineNumber" : 151,
        "startColumnNumber" : 8,
        "endLineNumber" : 273,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (_i < _string.length()) {\n  char c=_string.charAt(_i++);\nswitch (state) {\ncase 0:    if (_delim.indexOf(c) >= 0) {\n      if (_returnDelimiters) {\n        _token.append(c);\n        return _hasToken=true;\n      }\n    }\n else     if (c == '\\'' && _single) {\n      if (_returnQuotes)       _token.append(c);\n      state=2;\n    }\n else     if (c == '\\\"' && _double) {\n      if (_returnQuotes)       _token.append(c);\n      state=3;\n    }\n else {\n      _token.append(c);\n      _hasToken=true;\n      state=1;\n    }\n  continue;\ncase 1:_hasToken=true;\nif (escape) {\nescape=false;\nif (ESCAPABLE_CHARS.indexOf(c) < 0) _token.append('\\\\');\n_token.append(c);\n}\n else if (_delim.indexOf(c) >= 0) {\nif (_returnDelimiters) _i--;\nreturn _hasToken;\n}\n else if (c == '\\'' && _single) {\nif (_returnQuotes) _token.append(c);\nstate=2;\n}\n else if (c == '\\\"' && _double) {\nif (_returnQuotes) _token.append(c);\nstate=3;\n}\n else if (c == '\\\\') {\nescape=true;\n}\n else _token.append(c);\ncontinue;\ncase 2:_hasToken=true;\nif (escape) {\nescape=false;\nif (ESCAPABLE_CHARS.indexOf(c) < 0) _token.append('\\\\');\n_token.append(c);\n}\n else if (c == '\\'') {\nif (_returnQuotes) _token.append(c);\nstate=1;\n}\n else if (c == '\\\\') {\nif (_returnQuotes) _token.append(c);\nescape=true;\n}\n else _token.append(c);\ncontinue;\ncase 3:_hasToken=true;\nif (escape) {\nescape=false;\nif (ESCAPABLE_CHARS.indexOf(c) < 0) _token.append('\\\\');\n_token.append(c);\n}\n else if (c == '\\\"') {\nif (_returnQuotes) _token.append(c);\nstate=1;\n}\n else if (c == '\\\\') {\nif (_returnQuotes) _token.append(c);\nescape=true;\n}\n else _token.append(c);\ncontinue;\n}\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 323,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4113,
        "startLineNumber" : 142,
        "startColumnNumber" : 4,
        "endLineNumber" : 276,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (_hasToken)   return true;\n  _lastStart=_i;\n  int state=0;\n  boolean escape=false;\n  while (_i < _string.length()) {\n    char c=_string.charAt(_i++);\nswitch (state) {\ncase 0:      if (_delim.indexOf(c) >= 0) {\n        if (_returnDelimiters) {\n          _token.append(c);\n          return _hasToken=true;\n        }\n      }\n else       if (c == '\\'' && _single) {\n        if (_returnQuotes)         _token.append(c);\n        state=2;\n      }\n else       if (c == '\\\"' && _double) {\n        if (_returnQuotes)         _token.append(c);\n        state=3;\n      }\n else {\n        _token.append(c);\n        _hasToken=true;\n        state=1;\n      }\n    continue;\ncase 1:  _hasToken=true;\nif (escape) {\n  escape=false;\n  if (ESCAPABLE_CHARS.indexOf(c) < 0)   _token.append('\\\\');\n  _token.append(c);\n}\n else if (_delim.indexOf(c) >= 0) {\n  if (_returnDelimiters)   _i--;\n  return _hasToken;\n}\n else if (c == '\\'' && _single) {\n  if (_returnQuotes)   _token.append(c);\n  state=2;\n}\n else if (c == '\\\"' && _double) {\n  if (_returnQuotes)   _token.append(c);\n  state=3;\n}\n else if (c == '\\\\') {\n  escape=true;\n}\n else _token.append(c);\ncontinue;\ncase 2:_hasToken=true;\nif (escape) {\nescape=false;\nif (ESCAPABLE_CHARS.indexOf(c) < 0) _token.append('\\\\');\n_token.append(c);\n}\n else if (c == '\\'') {\nif (_returnQuotes) _token.append(c);\nstate=1;\n}\n else if (c == '\\\\') {\nif (_returnQuotes) _token.append(c);\nescape=true;\n}\n else _token.append(c);\ncontinue;\ncase 3:_hasToken=true;\nif (escape) {\nescape=false;\nif (ESCAPABLE_CHARS.indexOf(c) < 0) _token.append('\\\\');\n_token.append(c);\n}\n else if (c == '\\\"') {\nif (_returnQuotes) _token.append(c);\nstate=1;\n}\n else if (c == '\\\\') {\nif (_returnQuotes) _token.append(c);\nescape=true;\n}\n else _token.append(c);\ncontinue;\n}\n}\nreturn _hasToken;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 344,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4164,
        "startLineNumber" : 140,
        "startColumnNumber" : 4,
        "endLineNumber" : 276,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public boolean hasMoreTokens(){\n  if (_hasToken)   return true;\n  _lastStart=_i;\n  int state=0;\n  boolean escape=false;\n  while (_i < _string.length()) {\n    char c=_string.charAt(_i++);\nswitch (state) {\ncase 0:      if (_delim.indexOf(c) >= 0) {\n        if (_returnDelimiters) {\n          _token.append(c);\n          return _hasToken=true;\n        }\n      }\n else       if (c == '\\'' && _single) {\n        if (_returnQuotes)         _token.append(c);\n        state=2;\n      }\n else       if (c == '\\\"' && _double) {\n        if (_returnQuotes)         _token.append(c);\n        state=3;\n      }\n else {\n        _token.append(c);\n        _hasToken=true;\n        state=1;\n      }\n    continue;\ncase 1:  _hasToken=true;\nif (escape) {\n  escape=false;\n  if (ESCAPABLE_CHARS.indexOf(c) < 0)   _token.append('\\\\');\n  _token.append(c);\n}\n else if (_delim.indexOf(c) >= 0) {\n  if (_returnDelimiters)   _i--;\n  return _hasToken;\n}\n else if (c == '\\'' && _single) {\n  if (_returnQuotes)   _token.append(c);\n  state=2;\n}\n else if (c == '\\\"' && _double) {\n  if (_returnQuotes)   _token.append(c);\n  state=3;\n}\n else if (c == '\\\\') {\n  escape=true;\n}\n else _token.append(c);\ncontinue;\ncase 2:_hasToken=true;\nif (escape) {\nescape=false;\nif (ESCAPABLE_CHARS.indexOf(c) < 0) _token.append('\\\\');\n_token.append(c);\n}\n else if (c == '\\'') {\nif (_returnQuotes) _token.append(c);\nstate=1;\n}\n else if (c == '\\\\') {\nif (_returnQuotes) _token.append(c);\nescape=true;\n}\n else _token.append(c);\ncontinue;\ncase 3:_hasToken=true;\nif (escape) {\nescape=false;\nif (ESCAPABLE_CHARS.indexOf(c) < 0) _token.append('\\\\');\n_token.append(c);\n}\n else if (c == '\\\"') {\nif (_returnQuotes) _token.append(c);\nstate=1;\n}\n else if (c == '\\\\') {\nif (_returnQuotes) _token.append(c);\nescape=true;\n}\n else _token.append(c);\ncontinue;\n}\n}\nreturn _hasToken;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 350,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 158,
        "startColumnNumber" : 21,
        "endLineNumber" : 158,
        "endColumnNumber" : 41
      },
      "nodeContext" : "_delim.indexOf(c) >= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "int"
  }, {
    "nodeContext" : "_delim.indexOf(c)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 195,
      "startColumnNumber" : 26,
      "endLineNumber" : 195,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 195,
        "startColumnNumber" : 26,
        "endLineNumber" : 195,
        "endColumnNumber" : 46
      },
      "nodeContext" : "_delim.indexOf(c) >= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 784,
        "startLineNumber" : 195,
        "startColumnNumber" : 23,
        "endLineNumber" : 218,
        "endColumnNumber" : 39
      },
      "nodeContext" : "if (_delim.indexOf(c) >= 0) {\n  if (_returnDelimiters)   _i--;\n  return _hasToken;\n}\n else if (c == '\\'' && _single) {\n  if (_returnQuotes)   _token.append(c);\n  state=2;\n}\n else if (c == '\\\"' && _double) {\n  if (_returnQuotes)   _token.append(c);\n  state=3;\n}\n else if (c == '\\\\') {\n  escape=true;\n}\n else _token.append(c);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 65,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 1044,
        "startLineNumber" : 188,
        "startColumnNumber" : 18,
        "endLineNumber" : 218,
        "endColumnNumber" : 39
      },
      "nodeContext" : "if (escape) {\n  escape=false;\n  if (ESCAPABLE_CHARS.indexOf(c) < 0)   _token.append('\\\\');\n  _token.append(c);\n}\n else if (_delim.indexOf(c) >= 0) {\n  if (_returnDelimiters)   _i--;\n  return _hasToken;\n}\n else if (c == '\\'' && _single) {\n  if (_returnQuotes)   _token.append(c);\n  state=2;\n}\n else if (c == '\\\"' && _double) {\n  if (_returnQuotes)   _token.append(c);\n  state=3;\n}\n else if (c == '\\\\') {\n  escape=true;\n}\n else _token.append(c);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 89,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3794,
        "startLineNumber" : 155,
        "startColumnNumber" : 12,
        "endLineNumber" : 272,
        "endColumnNumber" : 13
      },
      "nodeContext" : "switch (state) {\ncase 0:  if (_delim.indexOf(c) >= 0) {\n    if (_returnDelimiters) {\n      _token.append(c);\n      return _hasToken=true;\n    }\n  }\n else   if (c == '\\'' && _single) {\n    if (_returnQuotes)     _token.append(c);\n    state=2;\n  }\n else   if (c == '\\\"' && _double) {\n    if (_returnQuotes)     _token.append(c);\n    state=3;\n  }\n else {\n    _token.append(c);\n    _hasToken=true;\n    state=1;\n  }\ncontinue;\ncase 1:_hasToken=true;\nif (escape) {\nescape=false;\nif (ESCAPABLE_CHARS.indexOf(c) < 0) _token.append('\\\\');\n_token.append(c);\n}\n else if (_delim.indexOf(c) >= 0) {\nif (_returnDelimiters) _i--;\nreturn _hasToken;\n}\n else if (c == '\\'' && _single) {\nif (_returnQuotes) _token.append(c);\nstate=2;\n}\n else if (c == '\\\"' && _double) {\nif (_returnQuotes) _token.append(c);\nstate=3;\n}\n else if (c == '\\\\') {\nescape=true;\n}\n else _token.append(c);\ncontinue;\ncase 2:_hasToken=true;\nif (escape) {\nescape=false;\nif (ESCAPABLE_CHARS.indexOf(c) < 0) _token.append('\\\\');\n_token.append(c);\n}\n else if (c == '\\'') {\nif (_returnQuotes) _token.append(c);\nstate=1;\n}\n else if (c == '\\\\') {\nif (_returnQuotes) _token.append(c);\nescape=true;\n}\n else _token.append(c);\ncontinue;\ncase 3:_hasToken=true;\nif (escape) {\nescape=false;\nif (ESCAPABLE_CHARS.indexOf(c) < 0) _token.append('\\\\');\n_token.append(c);\n}\n else if (c == '\\\"') {\nif (_returnQuotes) _token.append(c);\nstate=1;\n}\n else if (c == '\\\\') {\nif (_returnQuotes) _token.append(c);\nescape=true;\n}\n else _token.append(c);\ncontinue;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 307,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 3864,
        "startLineNumber" : 152,
        "startColumnNumber" : 8,
        "endLineNumber" : 273,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  char c=_string.charAt(_i++);\nswitch (state) {\ncase 0:    if (_delim.indexOf(c) >= 0) {\n      if (_returnDelimiters) {\n        _token.append(c);\n        return _hasToken=true;\n      }\n    }\n else     if (c == '\\'' && _single) {\n      if (_returnQuotes)       _token.append(c);\n      state=2;\n    }\n else     if (c == '\\\"' && _double) {\n      if (_returnQuotes)       _token.append(c);\n      state=3;\n    }\n else {\n      _token.append(c);\n      _hasToken=true;\n      state=1;\n    }\n  continue;\ncase 1:_hasToken=true;\nif (escape) {\nescape=false;\nif (ESCAPABLE_CHARS.indexOf(c) < 0) _token.append('\\\\');\n_token.append(c);\n}\n else if (_delim.indexOf(c) >= 0) {\nif (_returnDelimiters) _i--;\nreturn _hasToken;\n}\n else if (c == '\\'' && _single) {\nif (_returnQuotes) _token.append(c);\nstate=2;\n}\n else if (c == '\\\"' && _double) {\nif (_returnQuotes) _token.append(c);\nstate=3;\n}\n else if (c == '\\\\') {\nescape=true;\n}\n else _token.append(c);\ncontinue;\ncase 2:_hasToken=true;\nif (escape) {\nescape=false;\nif (ESCAPABLE_CHARS.indexOf(c) < 0) _token.append('\\\\');\n_token.append(c);\n}\n else if (c == '\\'') {\nif (_returnQuotes) _token.append(c);\nstate=1;\n}\n else if (c == '\\\\') {\nif (_returnQuotes) _token.append(c);\nescape=true;\n}\n else _token.append(c);\ncontinue;\ncase 3:_hasToken=true;\nif (escape) {\nescape=false;\nif (ESCAPABLE_CHARS.indexOf(c) < 0) _token.append('\\\\');\n_token.append(c);\n}\n else if (c == '\\\"') {\nif (_returnQuotes) _token.append(c);\nstate=1;\n}\n else if (c == '\\\\') {\nif (_returnQuotes) _token.append(c);\nescape=true;\n}\n else _token.append(c);\ncontinue;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 317,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3901,
        "startLineNumber" : 151,
        "startColumnNumber" : 8,
        "endLineNumber" : 273,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (_i < _string.length()) {\n  char c=_string.charAt(_i++);\nswitch (state) {\ncase 0:    if (_delim.indexOf(c) >= 0) {\n      if (_returnDelimiters) {\n        _token.append(c);\n        return _hasToken=true;\n      }\n    }\n else     if (c == '\\'' && _single) {\n      if (_returnQuotes)       _token.append(c);\n      state=2;\n    }\n else     if (c == '\\\"' && _double) {\n      if (_returnQuotes)       _token.append(c);\n      state=3;\n    }\n else {\n      _token.append(c);\n      _hasToken=true;\n      state=1;\n    }\n  continue;\ncase 1:_hasToken=true;\nif (escape) {\nescape=false;\nif (ESCAPABLE_CHARS.indexOf(c) < 0) _token.append('\\\\');\n_token.append(c);\n}\n else if (_delim.indexOf(c) >= 0) {\nif (_returnDelimiters) _i--;\nreturn _hasToken;\n}\n else if (c == '\\'' && _single) {\nif (_returnQuotes) _token.append(c);\nstate=2;\n}\n else if (c == '\\\"' && _double) {\nif (_returnQuotes) _token.append(c);\nstate=3;\n}\n else if (c == '\\\\') {\nescape=true;\n}\n else _token.append(c);\ncontinue;\ncase 2:_hasToken=true;\nif (escape) {\nescape=false;\nif (ESCAPABLE_CHARS.indexOf(c) < 0) _token.append('\\\\');\n_token.append(c);\n}\n else if (c == '\\'') {\nif (_returnQuotes) _token.append(c);\nstate=1;\n}\n else if (c == '\\\\') {\nif (_returnQuotes) _token.append(c);\nescape=true;\n}\n else _token.append(c);\ncontinue;\ncase 3:_hasToken=true;\nif (escape) {\nescape=false;\nif (ESCAPABLE_CHARS.indexOf(c) < 0) _token.append('\\\\');\n_token.append(c);\n}\n else if (c == '\\\"') {\nif (_returnQuotes) _token.append(c);\nstate=1;\n}\n else if (c == '\\\\') {\nif (_returnQuotes) _token.append(c);\nescape=true;\n}\n else _token.append(c);\ncontinue;\n}\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 323,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4113,
        "startLineNumber" : 142,
        "startColumnNumber" : 4,
        "endLineNumber" : 276,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (_hasToken)   return true;\n  _lastStart=_i;\n  int state=0;\n  boolean escape=false;\n  while (_i < _string.length()) {\n    char c=_string.charAt(_i++);\nswitch (state) {\ncase 0:      if (_delim.indexOf(c) >= 0) {\n        if (_returnDelimiters) {\n          _token.append(c);\n          return _hasToken=true;\n        }\n      }\n else       if (c == '\\'' && _single) {\n        if (_returnQuotes)         _token.append(c);\n        state=2;\n      }\n else       if (c == '\\\"' && _double) {\n        if (_returnQuotes)         _token.append(c);\n        state=3;\n      }\n else {\n        _token.append(c);\n        _hasToken=true;\n        state=1;\n      }\n    continue;\ncase 1:  _hasToken=true;\nif (escape) {\n  escape=false;\n  if (ESCAPABLE_CHARS.indexOf(c) < 0)   _token.append('\\\\');\n  _token.append(c);\n}\n else if (_delim.indexOf(c) >= 0) {\n  if (_returnDelimiters)   _i--;\n  return _hasToken;\n}\n else if (c == '\\'' && _single) {\n  if (_returnQuotes)   _token.append(c);\n  state=2;\n}\n else if (c == '\\\"' && _double) {\n  if (_returnQuotes)   _token.append(c);\n  state=3;\n}\n else if (c == '\\\\') {\n  escape=true;\n}\n else _token.append(c);\ncontinue;\ncase 2:_hasToken=true;\nif (escape) {\nescape=false;\nif (ESCAPABLE_CHARS.indexOf(c) < 0) _token.append('\\\\');\n_token.append(c);\n}\n else if (c == '\\'') {\nif (_returnQuotes) _token.append(c);\nstate=1;\n}\n else if (c == '\\\\') {\nif (_returnQuotes) _token.append(c);\nescape=true;\n}\n else _token.append(c);\ncontinue;\ncase 3:_hasToken=true;\nif (escape) {\nescape=false;\nif (ESCAPABLE_CHARS.indexOf(c) < 0) _token.append('\\\\');\n_token.append(c);\n}\n else if (c == '\\\"') {\nif (_returnQuotes) _token.append(c);\nstate=1;\n}\n else if (c == '\\\\') {\nif (_returnQuotes) _token.append(c);\nescape=true;\n}\n else _token.append(c);\ncontinue;\n}\n}\nreturn _hasToken;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 344,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4164,
        "startLineNumber" : 140,
        "startColumnNumber" : 4,
        "endLineNumber" : 276,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public boolean hasMoreTokens(){\n  if (_hasToken)   return true;\n  _lastStart=_i;\n  int state=0;\n  boolean escape=false;\n  while (_i < _string.length()) {\n    char c=_string.charAt(_i++);\nswitch (state) {\ncase 0:      if (_delim.indexOf(c) >= 0) {\n        if (_returnDelimiters) {\n          _token.append(c);\n          return _hasToken=true;\n        }\n      }\n else       if (c == '\\'' && _single) {\n        if (_returnQuotes)         _token.append(c);\n        state=2;\n      }\n else       if (c == '\\\"' && _double) {\n        if (_returnQuotes)         _token.append(c);\n        state=3;\n      }\n else {\n        _token.append(c);\n        _hasToken=true;\n        state=1;\n      }\n    continue;\ncase 1:  _hasToken=true;\nif (escape) {\n  escape=false;\n  if (ESCAPABLE_CHARS.indexOf(c) < 0)   _token.append('\\\\');\n  _token.append(c);\n}\n else if (_delim.indexOf(c) >= 0) {\n  if (_returnDelimiters)   _i--;\n  return _hasToken;\n}\n else if (c == '\\'' && _single) {\n  if (_returnQuotes)   _token.append(c);\n  state=2;\n}\n else if (c == '\\\"' && _double) {\n  if (_returnQuotes)   _token.append(c);\n  state=3;\n}\n else if (c == '\\\\') {\n  escape=true;\n}\n else _token.append(c);\ncontinue;\ncase 2:_hasToken=true;\nif (escape) {\nescape=false;\nif (ESCAPABLE_CHARS.indexOf(c) < 0) _token.append('\\\\');\n_token.append(c);\n}\n else if (c == '\\'') {\nif (_returnQuotes) _token.append(c);\nstate=1;\n}\n else if (c == '\\\\') {\nif (_returnQuotes) _token.append(c);\nescape=true;\n}\n else _token.append(c);\ncontinue;\ncase 3:_hasToken=true;\nif (escape) {\nescape=false;\nif (ESCAPABLE_CHARS.indexOf(c) < 0) _token.append('\\\\');\n_token.append(c);\n}\n else if (c == '\\\"') {\nif (_returnQuotes) _token.append(c);\nstate=1;\n}\n else if (c == '\\\\') {\nif (_returnQuotes) _token.append(c);\nescape=true;\n}\n else _token.append(c);\ncontinue;\n}\n}\nreturn _hasToken;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 350,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 195,
        "startColumnNumber" : 26,
        "endLineNumber" : 195,
        "endColumnNumber" : 46
      },
      "nodeContext" : "_delim.indexOf(c) >= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 158,
    "startColumnNumber" : 21,
    "endLineNumber" : 158,
    "endColumnNumber" : 38
  }, {
    "charLength" : 17,
    "startLineNumber" : 195,
    "startColumnNumber" : 26,
    "endLineNumber" : 195,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}