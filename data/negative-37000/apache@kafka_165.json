{
  "id" : 165,
  "expression" : "1L",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/metadata/src/test/java/org/apache/kafka/controller/ControllerPurgatoryTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1L",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 58,
      "startColumnNumber" : 37,
      "endLineNumber" : 58,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 58,
        "startColumnNumber" : 21,
        "endLineNumber" : 58,
        "endColumnNumber" : 40
      },
      "nodeContext" : "OptionalLong.of(1L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 75
      },
      "nodeContext" : "assertEquals(OptionalLong.of(1L),purgatory.highestPendingOffset())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertEquals(OptionalLong.of(1L),purgatory.highestPendingOffset());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 924,
        "startLineNumber" : 52,
        "startColumnNumber" : 37,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ControllerPurgatory purgatory=new ControllerPurgatory();\n  SampleDeferredEvent event1=new SampleDeferredEvent();\n  SampleDeferredEvent event2=new SampleDeferredEvent();\n  SampleDeferredEvent event3=new SampleDeferredEvent();\n  purgatory.add(1,event1);\n  assertEquals(OptionalLong.of(1L),purgatory.highestPendingOffset());\n  purgatory.add(1,event2);\n  assertEquals(OptionalLong.of(1L),purgatory.highestPendingOffset());\n  purgatory.add(3,event3);\n  assertEquals(OptionalLong.of(3L),purgatory.highestPendingOffset());\n  purgatory.completeUpTo(2);\n  assertTrue(event1.future.isDone());\n  assertTrue(event2.future.isDone());\n  assertFalse(event3.future.isDone());\n  purgatory.completeUpTo(4);\n  assertTrue(event3.future.isDone());\n  assertEquals(OptionalLong.empty(),purgatory.highestPendingOffset());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 132,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 967,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCompleteEvents(){\n  ControllerPurgatory purgatory=new ControllerPurgatory();\n  SampleDeferredEvent event1=new SampleDeferredEvent();\n  SampleDeferredEvent event2=new SampleDeferredEvent();\n  SampleDeferredEvent event3=new SampleDeferredEvent();\n  purgatory.add(1,event1);\n  assertEquals(OptionalLong.of(1L),purgatory.highestPendingOffset());\n  purgatory.add(1,event2);\n  assertEquals(OptionalLong.of(1L),purgatory.highestPendingOffset());\n  purgatory.add(3,event3);\n  assertEquals(OptionalLong.of(3L),purgatory.highestPendingOffset());\n  purgatory.completeUpTo(2);\n  assertTrue(event1.future.isDone());\n  assertTrue(event2.future.isDone());\n  assertFalse(event3.future.isDone());\n  purgatory.completeUpTo(4);\n  assertTrue(event3.future.isDone());\n  assertEquals(OptionalLong.empty(),purgatory.highestPendingOffset());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 138,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertEquals(OptionalLong.of(1L),purgatory.highestPendingOffset());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "long"
  }, {
    "nodeContext" : "1L",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 60,
      "startColumnNumber" : 37,
      "endLineNumber" : 60,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 60,
        "startColumnNumber" : 21,
        "endLineNumber" : 60,
        "endColumnNumber" : 40
      },
      "nodeContext" : "OptionalLong.of(1L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 75
      },
      "nodeContext" : "assertEquals(OptionalLong.of(1L),purgatory.highestPendingOffset())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertEquals(OptionalLong.of(1L),purgatory.highestPendingOffset());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 924,
        "startLineNumber" : 52,
        "startColumnNumber" : 37,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ControllerPurgatory purgatory=new ControllerPurgatory();\n  SampleDeferredEvent event1=new SampleDeferredEvent();\n  SampleDeferredEvent event2=new SampleDeferredEvent();\n  SampleDeferredEvent event3=new SampleDeferredEvent();\n  purgatory.add(1,event1);\n  assertEquals(OptionalLong.of(1L),purgatory.highestPendingOffset());\n  purgatory.add(1,event2);\n  assertEquals(OptionalLong.of(1L),purgatory.highestPendingOffset());\n  purgatory.add(3,event3);\n  assertEquals(OptionalLong.of(3L),purgatory.highestPendingOffset());\n  purgatory.completeUpTo(2);\n  assertTrue(event1.future.isDone());\n  assertTrue(event2.future.isDone());\n  assertFalse(event3.future.isDone());\n  purgatory.completeUpTo(4);\n  assertTrue(event3.future.isDone());\n  assertEquals(OptionalLong.empty(),purgatory.highestPendingOffset());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 132,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 967,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCompleteEvents(){\n  ControllerPurgatory purgatory=new ControllerPurgatory();\n  SampleDeferredEvent event1=new SampleDeferredEvent();\n  SampleDeferredEvent event2=new SampleDeferredEvent();\n  SampleDeferredEvent event3=new SampleDeferredEvent();\n  purgatory.add(1,event1);\n  assertEquals(OptionalLong.of(1L),purgatory.highestPendingOffset());\n  purgatory.add(1,event2);\n  assertEquals(OptionalLong.of(1L),purgatory.highestPendingOffset());\n  purgatory.add(3,event3);\n  assertEquals(OptionalLong.of(3L),purgatory.highestPendingOffset());\n  purgatory.completeUpTo(2);\n  assertTrue(event1.future.isDone());\n  assertTrue(event2.future.isDone());\n  assertFalse(event3.future.isDone());\n  purgatory.completeUpTo(4);\n  assertTrue(event3.future.isDone());\n  assertEquals(OptionalLong.empty(),purgatory.highestPendingOffset());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 138,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertEquals(OptionalLong.of(1L),purgatory.highestPendingOffset());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 58,
    "startColumnNumber" : 37,
    "endLineNumber" : 58,
    "endColumnNumber" : 39
  }, {
    "charLength" : 2,
    "startLineNumber" : 60,
    "startColumnNumber" : 37,
    "endLineNumber" : 60,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}