{
  "id" : 513,
  "expression" : "\"Pool available=2 inUse=0\"",
  "projectName" : "iluwatar@java-design-patterns",
  "commitID" : "428efc7d53449a51d25dfda4141742629ecbb0b2",
  "filePath" : "/object-pool/src/test/java/com/iluwatar/object/pool/OliphauntPoolTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Pool available=2 inUse=0\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 109,
      "startColumnNumber" : 36,
      "endLineNumber" : 109,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 109,
        "startColumnNumber" : 6,
        "endLineNumber" : 109,
        "endColumnNumber" : 63
      },
      "nodeContext" : "assertEquals(pool.toString(),\"Pool available=2 inUse=0\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 109,
        "startColumnNumber" : 6,
        "endLineNumber" : 109,
        "endColumnNumber" : 64
      },
      "nodeContext" : "assertEquals(pool.toString(),\"Pool available=2 inUse=0\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1891,
        "startLineNumber" : 75,
        "startColumnNumber" : 40,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final OliphauntPool pool=new OliphauntPool();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=0\");\n  final Oliphaunt firstOliphaunt=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=1\");\n  final Oliphaunt secondOliphaunt=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertNotSame(firstOliphaunt,secondOliphaunt);\n  assertEquals(firstOliphaunt.getId() + 1,secondOliphaunt.getId());\n  pool.checkIn(secondOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  final Oliphaunt oliphaunt3=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertSame(secondOliphaunt,oliphaunt3);\n  pool.checkIn(firstOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  final Oliphaunt oliphaunt4=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertSame(firstOliphaunt,oliphaunt4);\n  pool.checkIn(firstOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  pool.checkIn(secondOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=2 inUse=0\");\n  final List<Oliphaunt> oliphaunts=List.of(pool.checkOut(),pool.checkOut());\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertTrue(oliphaunts.contains(firstOliphaunt));\n  assertTrue(oliphaunts.contains(secondOliphaunt));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 194,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1897,
        "startLineNumber" : 75,
        "startColumnNumber" : 34,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "() -> {\n  final OliphauntPool pool=new OliphauntPool();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=0\");\n  final Oliphaunt firstOliphaunt=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=1\");\n  final Oliphaunt secondOliphaunt=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertNotSame(firstOliphaunt,secondOliphaunt);\n  assertEquals(firstOliphaunt.getId() + 1,secondOliphaunt.getId());\n  pool.checkIn(secondOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  final Oliphaunt oliphaunt3=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertSame(secondOliphaunt,oliphaunt3);\n  pool.checkIn(firstOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  final Oliphaunt oliphaunt4=pool.checkOut();\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertSame(firstOliphaunt,oliphaunt4);\n  pool.checkIn(firstOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=1 inUse=1\");\n  pool.checkIn(secondOliphaunt);\n  assertEquals(pool.toString(),\"Pool available=2 inUse=0\");\n  final List<Oliphaunt> oliphaunts=List.of(pool.checkOut(),pool.checkOut());\n  assertEquals(pool.toString(),\"Pool available=0 inUse=2\");\n  assertTrue(oliphaunts.contains(firstOliphaunt));\n  assertTrue(oliphaunts.contains(secondOliphaunt));\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 195,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 109,
        "startColumnNumber" : 6,
        "endLineNumber" : 109,
        "endColumnNumber" : 64
      },
      "nodeContext" : "assertEquals(pool.toString(),\"Pool available=2 inUse=0\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 109,
    "startColumnNumber" : 36,
    "endLineNumber" : 109,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}