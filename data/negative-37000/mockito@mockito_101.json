{
  "id" : 101,
  "expression" : "when(mock(MyListener.class).isListenerDirty())",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockito/internal/progress/MockingProgressImplTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "when(mock(MyListener.class).isListenerDirty())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 46,
      "startLineNumber" : 94,
      "startColumnNumber" : 16,
      "endLineNumber" : 94,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 9,
    "astHeight" : 6,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 94,
        "startColumnNumber" : 16,
        "endLineNumber" : 94,
        "endColumnNumber" : 79
      },
      "nodeContext" : "when(mock(MyListener.class).isListenerDirty()).thenReturn(true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 94,
        "startColumnNumber" : 16,
        "endLineNumber" : 94,
        "endColumnNumber" : 89
      },
      "nodeContext" : "when(mock(MyListener.class).isListenerDirty()).thenReturn(true).getMock()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 93,
        "startColumnNumber" : 19,
        "endLineNumber" : 94,
        "endColumnNumber" : 89
      },
      "nodeContext" : "dirtyListener=when(mock(MyListener.class).isListenerDirty()).thenReturn(true).getMock()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 16,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 90
      },
      "nodeContext" : "MyListener dirtyListener=when(mock(MyListener.class).isListenerDirty()).thenReturn(true).getMock();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 863,
        "startLineNumber" : 90,
        "startColumnNumber" : 58,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MockitoListener someListener=mock(MockitoListener.class);\n  MyListener cleanListener=mock(MyListener.class);\n  MyListener dirtyListener=when(mock(MyListener.class).isListenerDirty()).thenReturn(true).getMock();\n  Set<MockitoListener> listeners=new LinkedHashSet<MockitoListener>();\n  MockingProgressImpl.addListener(someListener,listeners);\n  MockingProgressImpl.addListener(dirtyListener,listeners);\n  Assertions.assertThat(listeners).containsExactlyInAnyOrder(someListener,dirtyListener);\n  MockingProgressImpl.addListener(cleanListener,listeners);\n  Assertions.assertThat(listeners).containsExactlyInAnyOrder(someListener,cleanListener);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 928,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void should_clean_up_listeners_automatically(){\n  MockitoListener someListener=mock(MockitoListener.class);\n  MyListener cleanListener=mock(MyListener.class);\n  MyListener dirtyListener=when(mock(MyListener.class).isListenerDirty()).thenReturn(true).getMock();\n  Set<MockitoListener> listeners=new LinkedHashSet<MockitoListener>();\n  MockingProgressImpl.addListener(someListener,listeners);\n  MockingProgressImpl.addListener(dirtyListener,listeners);\n  Assertions.assertThat(listeners).containsExactlyInAnyOrder(someListener,dirtyListener);\n  MockingProgressImpl.addListener(cleanListener,listeners);\n  Assertions.assertThat(listeners).containsExactlyInAnyOrder(someListener,cleanListener);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 94,
        "startColumnNumber" : 16,
        "endLineNumber" : 94,
        "endColumnNumber" : 89
      },
      "nodeContext" : "when(mock(MyListener.class).isListenerDirty()).thenReturn(true).getMock()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 8
    },
    "tokenLength" : 4,
    "type" : "org.mockito.stubbing.OngoingStubbing<java.lang.Boolean>"
  } ],
  "positionList" : [ {
    "charLength" : 46,
    "startLineNumber" : 94,
    "startColumnNumber" : 16,
    "endLineNumber" : 94,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}