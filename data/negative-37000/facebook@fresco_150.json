{
  "id" : 150,
  "expression" : "decoder != null",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/imagepipeline/src/main/java/com/facebook/imagepipeline/decoder/DefaultImageDecoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "decoder != null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 116,
      "startColumnNumber" : 10,
      "endLineNumber" : 116,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 116,
        "startColumnNumber" : 6,
        "endLineNumber" : 118,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (decoder != null) {\n  return decoder.decode(encodedImage,length,qualityInfo,options);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 182,
        "startLineNumber" : 114,
        "startColumnNumber" : 33,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ImageDecoder decoder=mCustomDecoders.get(imageFormat);\n  if (decoder != null) {\n    return decoder.decode(encodedImage,length,qualityInfo,options);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 211,
        "startLineNumber" : 114,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (mCustomDecoders != null) {\n  ImageDecoder decoder=mCustomDecoders.get(imageFormat);\n  if (decoder != null) {\n    return decoder.decode(encodedImage,length,qualityInfo,options);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 740,
        "startLineNumber" : 104,
        "startColumnNumber" : 40,
        "endLineNumber" : 121,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (options.customImageDecoder != null) {\n    return options.customImageDecoder.decode(encodedImage,length,qualityInfo,options);\n  }\n  ImageFormat imageFormat=encodedImage.getImageFormat();\n  if (imageFormat == null || imageFormat == ImageFormat.UNKNOWN) {\n    imageFormat=ImageFormatChecker.getImageFormat_WrapIOException(encodedImage.getInputStream());\n    encodedImage.setImageFormat(imageFormat);\n  }\n  if (mCustomDecoders != null) {\n    ImageDecoder decoder=mCustomDecoders.get(imageFormat);\n    if (decoder != null) {\n      return decoder.decode(encodedImage,length,qualityInfo,options);\n    }\n  }\n  return mDefaultDecoder.decode(encodedImage,length,qualityInfo,options);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1287,
        "startLineNumber" : 90,
        "startColumnNumber" : 2,
        "endLineNumber" : 121,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Decodes image.\n * @param encodedImage input image (encoded bytes plus meta data)\n * @param length if image type supports decoding incomplete image then determines where the imagedata should be cut for decoding.\n * @param qualityInfo quality information for the image\n * @param options options that can change decode behavior\n */\n@Override public CloseableImage decode(final EncodedImage encodedImage,final int length,final QualityInfo qualityInfo,final ImageDecodeOptions options){\n  if (options.customImageDecoder != null) {\n    return options.customImageDecoder.decode(encodedImage,length,qualityInfo,options);\n  }\n  ImageFormat imageFormat=encodedImage.getImageFormat();\n  if (imageFormat == null || imageFormat == ImageFormat.UNKNOWN) {\n    imageFormat=ImageFormatChecker.getImageFormat_WrapIOException(encodedImage.getInputStream());\n    encodedImage.setImageFormat(imageFormat);\n  }\n  if (mCustomDecoders != null) {\n    ImageDecoder decoder=mCustomDecoders.get(imageFormat);\n    if (decoder != null) {\n      return decoder.decode(encodedImage,length,qualityInfo,options);\n    }\n  }\n  return mDefaultDecoder.decode(encodedImage,length,qualityInfo,options);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 113,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 116,
        "startColumnNumber" : 6,
        "endLineNumber" : 118,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (decoder != null) {\n  return decoder.decode(encodedImage,length,qualityInfo,options);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 116,
    "startColumnNumber" : 10,
    "endLineNumber" : 116,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ ]
}