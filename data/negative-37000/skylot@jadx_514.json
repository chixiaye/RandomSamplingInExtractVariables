{
  "id" : 514,
  "expression" : "InsnType.MOVE",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/main/java/jadx/core/dex/visitors/CodeShrinker.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "InsnType.MOVE",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 308,
      "startColumnNumber" : 25,
      "endLineNumber" : 308,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 308,
        "startColumnNumber" : 7,
        "endLineNumber" : 308,
        "endColumnNumber" : 38
      },
      "nodeContext" : "insn.getType() == InsnType.MOVE",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 421,
        "startLineNumber" : 308,
        "startColumnNumber" : 3,
        "endLineNumber" : 319,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (insn.getType() == InsnType.MOVE) {\n  InsnArg arg=insn.getArg(0);\n  if (arg.isInsnWrap()) {\n    InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n    wrapInsn.setResult(insn.getResult());\n    wrapInsn.copyAttributesFrom(insn);\n    wrapInsn.setOffset(insn.getOffset());\n    wrapInsn.remove(AFlag.WRAPPED);\n    block.getInstructions().set(i,wrapInsn);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 69,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 463,
        "startLineNumber" : 306,
        "startColumnNumber" : 33,
        "endLineNumber" : 320,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  InsnNode insn=insns.get(i);\n  if (insn.getType() == InsnType.MOVE) {\n    InsnArg arg=insn.getArg(0);\n    if (arg.isInsnWrap()) {\n      InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n      wrapInsn.setResult(insn.getResult());\n      wrapInsn.copyAttributesFrom(insn);\n      wrapInsn.setOffset(insn.getOffset());\n      wrapInsn.remove(AFlag.WRAPPED);\n      block.getInstructions().set(i,wrapInsn);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 494,
        "startLineNumber" : 306,
        "startColumnNumber" : 2,
        "endLineNumber" : 320,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < size; i++) {\n  InsnNode insn=insns.get(i);\n  if (insn.getType() == InsnType.MOVE) {\n    InsnArg arg=insn.getArg(0);\n    if (arg.isInsnWrap()) {\n      InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n      wrapInsn.setResult(insn.getResult());\n      wrapInsn.copyAttributesFrom(insn);\n      wrapInsn.setOffset(insn.getOffset());\n      wrapInsn.remove(AFlag.WRAPPED);\n      block.getInstructions().set(i,wrapInsn);\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 90,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 578,
        "startLineNumber" : 303,
        "startColumnNumber" : 56,
        "endLineNumber" : 321,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  List<InsnNode> insns=block.getInstructions();\n  int size=insns.size();\n  for (int i=0; i < size; i++) {\n    InsnNode insn=insns.get(i);\n    if (insn.getType() == InsnType.MOVE) {\n      InsnArg arg=insn.getArg(0);\n      if (arg.isInsnWrap()) {\n        InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n        wrapInsn.setResult(insn.getResult());\n        wrapInsn.copyAttributesFrom(insn);\n        wrapInsn.setOffset(insn.getOffset());\n        wrapInsn.remove(AFlag.WRAPPED);\n        block.getInstructions().set(i,wrapInsn);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 633,
        "startLineNumber" : 303,
        "startColumnNumber" : 1,
        "endLineNumber" : 321,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private static void simplifyMoveInsns(BlockNode block){\n  List<InsnNode> insns=block.getInstructions();\n  int size=insns.size();\n  for (int i=0; i < size; i++) {\n    InsnNode insn=insns.get(i);\n    if (insn.getType() == InsnType.MOVE) {\n      InsnArg arg=insn.getArg(0);\n      if (arg.isInsnWrap()) {\n        InsnNode wrapInsn=((InsnWrapArg)arg).getWrapInsn();\n        wrapInsn.setResult(insn.getResult());\n        wrapInsn.copyAttributesFrom(insn);\n        wrapInsn.setOffset(insn.getOffset());\n        wrapInsn.remove(AFlag.WRAPPED);\n        block.getInstructions().set(i,wrapInsn);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 308,
        "startColumnNumber" : 7,
        "endLineNumber" : 308,
        "endColumnNumber" : 38
      },
      "nodeContext" : "insn.getType() == InsnType.MOVE",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "jadx.core.dex.instructions.InsnType"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 308,
    "startColumnNumber" : 25,
    "endLineNumber" : 308,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}