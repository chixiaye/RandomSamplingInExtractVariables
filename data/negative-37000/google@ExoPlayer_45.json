{
  "id" : 45,
  "expression" : "requestProperties",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/core/src/main/java/com/google/android/exoplayer2/drm/HttpMediaDrmCallback.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "requestProperties",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 144,
      "startColumnNumber" : 4,
      "endLineNumber" : 144,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 144,
        "startColumnNumber" : 4,
        "endLineNumber" : 144,
        "endColumnNumber" : 54
      },
      "nodeContext" : "requestProperties.put(\"Content-Type\",contentType)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 144,
        "startColumnNumber" : 4,
        "endLineNumber" : 144,
        "endColumnNumber" : 55
      },
      "nodeContext" : "requestProperties.put(\"Content-Type\",contentType);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1230,
        "startLineNumber" : 125,
        "startColumnNumber" : 98,
        "endLineNumber" : 154,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String url=request.getLicenseServerUrl();\n  if (forceDefaultLicenseUrl || TextUtils.isEmpty(url)) {\n    url=defaultLicenseUrl;\n  }\n  if (TextUtils.isEmpty(url)) {\n    throw new MediaDrmCallbackException(new DataSpec.Builder().setUri(Uri.EMPTY).build(),Uri.EMPTY,ImmutableMap.of(),0,new IllegalStateException(\"No license URL\"));\n  }\n  Map<String,String> requestProperties=new HashMap<>();\n  String contentType=C.PLAYREADY_UUID.equals(uuid) ? \"text/xml\" : (C.CLEARKEY_UUID.equals(uuid) ? \"application/json\" : \"application/octet-stream\");\n  requestProperties.put(\"Content-Type\",contentType);\n  if (C.PLAYREADY_UUID.equals(uuid)) {\n    requestProperties.put(\"SOAPAction\",\"http://schemas.microsoft.com/DRM/2007/03/protocols/AcquireLicense\");\n  }\nsynchronized (keyRequestProperties) {\n    requestProperties.putAll(keyRequestProperties);\n  }\n  return executePost(dataSourceFactory,url,request.getData(),requestProperties);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1338,
        "startLineNumber" : 124,
        "startColumnNumber" : 2,
        "endLineNumber" : 154,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public byte[] executeKeyRequest(UUID uuid,KeyRequest request) throws MediaDrmCallbackException {\n  String url=request.getLicenseServerUrl();\n  if (forceDefaultLicenseUrl || TextUtils.isEmpty(url)) {\n    url=defaultLicenseUrl;\n  }\n  if (TextUtils.isEmpty(url)) {\n    throw new MediaDrmCallbackException(new DataSpec.Builder().setUri(Uri.EMPTY).build(),Uri.EMPTY,ImmutableMap.of(),0,new IllegalStateException(\"No license URL\"));\n  }\n  Map<String,String> requestProperties=new HashMap<>();\n  String contentType=C.PLAYREADY_UUID.equals(uuid) ? \"text/xml\" : (C.CLEARKEY_UUID.equals(uuid) ? \"application/json\" : \"application/octet-stream\");\n  requestProperties.put(\"Content-Type\",contentType);\n  if (C.PLAYREADY_UUID.equals(uuid)) {\n    requestProperties.put(\"SOAPAction\",\"http://schemas.microsoft.com/DRM/2007/03/protocols/AcquireLicense\");\n  }\nsynchronized (keyRequestProperties) {\n    requestProperties.putAll(keyRequestProperties);\n  }\n  return executePost(dataSourceFactory,url,request.getData(),requestProperties);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 144,
        "startColumnNumber" : 4,
        "endLineNumber" : 144,
        "endColumnNumber" : 55
      },
      "nodeContext" : "requestProperties.put(\"Content-Type\",contentType);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.String>"
  }, {
    "nodeContext" : "requestProperties",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 146,
      "startColumnNumber" : 6,
      "endLineNumber" : 146,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 146,
        "startColumnNumber" : 6,
        "endLineNumber" : 147,
        "endColumnNumber" : 92
      },
      "nodeContext" : "requestProperties.put(\"SOAPAction\",\"http://schemas.microsoft.com/DRM/2007/03/protocols/AcquireLicense\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 146,
        "startColumnNumber" : 6,
        "endLineNumber" : 147,
        "endColumnNumber" : 93
      },
      "nodeContext" : "requestProperties.put(\"SOAPAction\",\"http://schemas.microsoft.com/DRM/2007/03/protocols/AcquireLicense\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 145,
        "startColumnNumber" : 39,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  requestProperties.put(\"SOAPAction\",\"http://schemas.microsoft.com/DRM/2007/03/protocols/AcquireLicense\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 145,
        "startColumnNumber" : 4,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (C.PLAYREADY_UUID.equals(uuid)) {\n  requestProperties.put(\"SOAPAction\",\"http://schemas.microsoft.com/DRM/2007/03/protocols/AcquireLicense\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1230,
        "startLineNumber" : 125,
        "startColumnNumber" : 98,
        "endLineNumber" : 154,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String url=request.getLicenseServerUrl();\n  if (forceDefaultLicenseUrl || TextUtils.isEmpty(url)) {\n    url=defaultLicenseUrl;\n  }\n  if (TextUtils.isEmpty(url)) {\n    throw new MediaDrmCallbackException(new DataSpec.Builder().setUri(Uri.EMPTY).build(),Uri.EMPTY,ImmutableMap.of(),0,new IllegalStateException(\"No license URL\"));\n  }\n  Map<String,String> requestProperties=new HashMap<>();\n  String contentType=C.PLAYREADY_UUID.equals(uuid) ? \"text/xml\" : (C.CLEARKEY_UUID.equals(uuid) ? \"application/json\" : \"application/octet-stream\");\n  requestProperties.put(\"Content-Type\",contentType);\n  if (C.PLAYREADY_UUID.equals(uuid)) {\n    requestProperties.put(\"SOAPAction\",\"http://schemas.microsoft.com/DRM/2007/03/protocols/AcquireLicense\");\n  }\nsynchronized (keyRequestProperties) {\n    requestProperties.putAll(keyRequestProperties);\n  }\n  return executePost(dataSourceFactory,url,request.getData(),requestProperties);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1338,
        "startLineNumber" : 124,
        "startColumnNumber" : 2,
        "endLineNumber" : 154,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public byte[] executeKeyRequest(UUID uuid,KeyRequest request) throws MediaDrmCallbackException {\n  String url=request.getLicenseServerUrl();\n  if (forceDefaultLicenseUrl || TextUtils.isEmpty(url)) {\n    url=defaultLicenseUrl;\n  }\n  if (TextUtils.isEmpty(url)) {\n    throw new MediaDrmCallbackException(new DataSpec.Builder().setUri(Uri.EMPTY).build(),Uri.EMPTY,ImmutableMap.of(),0,new IllegalStateException(\"No license URL\"));\n  }\n  Map<String,String> requestProperties=new HashMap<>();\n  String contentType=C.PLAYREADY_UUID.equals(uuid) ? \"text/xml\" : (C.CLEARKEY_UUID.equals(uuid) ? \"application/json\" : \"application/octet-stream\");\n  requestProperties.put(\"Content-Type\",contentType);\n  if (C.PLAYREADY_UUID.equals(uuid)) {\n    requestProperties.put(\"SOAPAction\",\"http://schemas.microsoft.com/DRM/2007/03/protocols/AcquireLicense\");\n  }\nsynchronized (keyRequestProperties) {\n    requestProperties.putAll(keyRequestProperties);\n  }\n  return executePost(dataSourceFactory,url,request.getData(),requestProperties);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 146,
        "startColumnNumber" : 6,
        "endLineNumber" : 147,
        "endColumnNumber" : 92
      },
      "nodeContext" : "requestProperties.put(\"SOAPAction\",\"http://schemas.microsoft.com/DRM/2007/03/protocols/AcquireLicense\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.String>"
  }, {
    "nodeContext" : "requestProperties",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 151,
      "startColumnNumber" : 6,
      "endLineNumber" : 151,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 151,
        "startColumnNumber" : 6,
        "endLineNumber" : 151,
        "endColumnNumber" : 52
      },
      "nodeContext" : "requestProperties.putAll(keyRequestProperties)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 151,
        "startColumnNumber" : 6,
        "endLineNumber" : 151,
        "endColumnNumber" : 53
      },
      "nodeContext" : "requestProperties.putAll(keyRequestProperties);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 150,
        "startColumnNumber" : 40,
        "endLineNumber" : 152,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  requestProperties.putAll(keyRequestProperties);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 150,
        "startColumnNumber" : 4,
        "endLineNumber" : 152,
        "endColumnNumber" : 5
      },
      "nodeContext" : "synchronized (keyRequestProperties) {\n  requestProperties.putAll(keyRequestProperties);\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1230,
        "startLineNumber" : 125,
        "startColumnNumber" : 98,
        "endLineNumber" : 154,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String url=request.getLicenseServerUrl();\n  if (forceDefaultLicenseUrl || TextUtils.isEmpty(url)) {\n    url=defaultLicenseUrl;\n  }\n  if (TextUtils.isEmpty(url)) {\n    throw new MediaDrmCallbackException(new DataSpec.Builder().setUri(Uri.EMPTY).build(),Uri.EMPTY,ImmutableMap.of(),0,new IllegalStateException(\"No license URL\"));\n  }\n  Map<String,String> requestProperties=new HashMap<>();\n  String contentType=C.PLAYREADY_UUID.equals(uuid) ? \"text/xml\" : (C.CLEARKEY_UUID.equals(uuid) ? \"application/json\" : \"application/octet-stream\");\n  requestProperties.put(\"Content-Type\",contentType);\n  if (C.PLAYREADY_UUID.equals(uuid)) {\n    requestProperties.put(\"SOAPAction\",\"http://schemas.microsoft.com/DRM/2007/03/protocols/AcquireLicense\");\n  }\nsynchronized (keyRequestProperties) {\n    requestProperties.putAll(keyRequestProperties);\n  }\n  return executePost(dataSourceFactory,url,request.getData(),requestProperties);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1338,
        "startLineNumber" : 124,
        "startColumnNumber" : 2,
        "endLineNumber" : 154,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public byte[] executeKeyRequest(UUID uuid,KeyRequest request) throws MediaDrmCallbackException {\n  String url=request.getLicenseServerUrl();\n  if (forceDefaultLicenseUrl || TextUtils.isEmpty(url)) {\n    url=defaultLicenseUrl;\n  }\n  if (TextUtils.isEmpty(url)) {\n    throw new MediaDrmCallbackException(new DataSpec.Builder().setUri(Uri.EMPTY).build(),Uri.EMPTY,ImmutableMap.of(),0,new IllegalStateException(\"No license URL\"));\n  }\n  Map<String,String> requestProperties=new HashMap<>();\n  String contentType=C.PLAYREADY_UUID.equals(uuid) ? \"text/xml\" : (C.CLEARKEY_UUID.equals(uuid) ? \"application/json\" : \"application/octet-stream\");\n  requestProperties.put(\"Content-Type\",contentType);\n  if (C.PLAYREADY_UUID.equals(uuid)) {\n    requestProperties.put(\"SOAPAction\",\"http://schemas.microsoft.com/DRM/2007/03/protocols/AcquireLicense\");\n  }\nsynchronized (keyRequestProperties) {\n    requestProperties.putAll(keyRequestProperties);\n  }\n  return executePost(dataSourceFactory,url,request.getData(),requestProperties);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 151,
        "startColumnNumber" : 6,
        "endLineNumber" : 151,
        "endColumnNumber" : 53
      },
      "nodeContext" : "requestProperties.putAll(keyRequestProperties);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.String>"
  }, {
    "nodeContext" : "requestProperties",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 153,
      "startColumnNumber" : 66,
      "endLineNumber" : 153,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 153,
        "startColumnNumber" : 11,
        "endLineNumber" : 153,
        "endColumnNumber" : 84
      },
      "nodeContext" : "executePost(dataSourceFactory,url,request.getData(),requestProperties)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 153,
        "startColumnNumber" : 4,
        "endLineNumber" : 153,
        "endColumnNumber" : 85
      },
      "nodeContext" : "return executePost(dataSourceFactory,url,request.getData(),requestProperties);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1230,
        "startLineNumber" : 125,
        "startColumnNumber" : 98,
        "endLineNumber" : 154,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String url=request.getLicenseServerUrl();\n  if (forceDefaultLicenseUrl || TextUtils.isEmpty(url)) {\n    url=defaultLicenseUrl;\n  }\n  if (TextUtils.isEmpty(url)) {\n    throw new MediaDrmCallbackException(new DataSpec.Builder().setUri(Uri.EMPTY).build(),Uri.EMPTY,ImmutableMap.of(),0,new IllegalStateException(\"No license URL\"));\n  }\n  Map<String,String> requestProperties=new HashMap<>();\n  String contentType=C.PLAYREADY_UUID.equals(uuid) ? \"text/xml\" : (C.CLEARKEY_UUID.equals(uuid) ? \"application/json\" : \"application/octet-stream\");\n  requestProperties.put(\"Content-Type\",contentType);\n  if (C.PLAYREADY_UUID.equals(uuid)) {\n    requestProperties.put(\"SOAPAction\",\"http://schemas.microsoft.com/DRM/2007/03/protocols/AcquireLicense\");\n  }\nsynchronized (keyRequestProperties) {\n    requestProperties.putAll(keyRequestProperties);\n  }\n  return executePost(dataSourceFactory,url,request.getData(),requestProperties);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1338,
        "startLineNumber" : 124,
        "startColumnNumber" : 2,
        "endLineNumber" : 154,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public byte[] executeKeyRequest(UUID uuid,KeyRequest request) throws MediaDrmCallbackException {\n  String url=request.getLicenseServerUrl();\n  if (forceDefaultLicenseUrl || TextUtils.isEmpty(url)) {\n    url=defaultLicenseUrl;\n  }\n  if (TextUtils.isEmpty(url)) {\n    throw new MediaDrmCallbackException(new DataSpec.Builder().setUri(Uri.EMPTY).build(),Uri.EMPTY,ImmutableMap.of(),0,new IllegalStateException(\"No license URL\"));\n  }\n  Map<String,String> requestProperties=new HashMap<>();\n  String contentType=C.PLAYREADY_UUID.equals(uuid) ? \"text/xml\" : (C.CLEARKEY_UUID.equals(uuid) ? \"application/json\" : \"application/octet-stream\");\n  requestProperties.put(\"Content-Type\",contentType);\n  if (C.PLAYREADY_UUID.equals(uuid)) {\n    requestProperties.put(\"SOAPAction\",\"http://schemas.microsoft.com/DRM/2007/03/protocols/AcquireLicense\");\n  }\nsynchronized (keyRequestProperties) {\n    requestProperties.putAll(keyRequestProperties);\n  }\n  return executePost(dataSourceFactory,url,request.getData(),requestProperties);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 153,
        "startColumnNumber" : 4,
        "endLineNumber" : 153,
        "endColumnNumber" : 85
      },
      "nodeContext" : "return executePost(dataSourceFactory,url,request.getData(),requestProperties);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 144,
    "startColumnNumber" : 4,
    "endLineNumber" : 144,
    "endColumnNumber" : 21
  }, {
    "charLength" : 17,
    "startLineNumber" : 146,
    "startColumnNumber" : 6,
    "endLineNumber" : 146,
    "endColumnNumber" : 23
  }, {
    "charLength" : 17,
    "startLineNumber" : 151,
    "startColumnNumber" : 6,
    "endLineNumber" : 151,
    "endColumnNumber" : 23
  }, {
    "charLength" : 17,
    "startLineNumber" : 153,
    "startColumnNumber" : 66,
    "endLineNumber" : 153,
    "endColumnNumber" : 83
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}