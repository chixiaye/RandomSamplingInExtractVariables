{
  "id" : 398,
  "expression" : "new Runnable(){\n  @Override public void run(){\n    if (idx == index) {\n      done=true;\n      s.dispose();\n      dispose();\n      actual.onError(new TimeoutException());\n    }\n  }\n}\n",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/main/java/io/reactivex/internal/operators/observable/ObservableTimeoutTimed.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Runnable(){\n  @Override public void run(){\n    if (idx == index) {\n      done=true;\n      s.dispose();\n      dispose();\n      actual.onError(new TimeoutException());\n    }\n  }\n}\n",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 425,
      "startLineNumber" : 249,
      "startColumnNumber" : 36,
      "endLineNumber" : 260,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 34,
    "astHeight" : 11,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 457,
        "startLineNumber" : 249,
        "startColumnNumber" : 20,
        "endLineNumber" : 260,
        "endColumnNumber" : 33
      },
      "nodeContext" : "worker.schedule(new Runnable(){\n  @Override public void run(){\n    if (idx == index) {\n      done=true;\n      s.dispose();\n      dispose();\n      actual.onError(new TimeoutException());\n    }\n  }\n}\n,timeout,unit)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 39,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 461,
        "startLineNumber" : 249,
        "startColumnNumber" : 16,
        "endLineNumber" : 260,
        "endColumnNumber" : 33
      },
      "nodeContext" : "d=worker.schedule(new Runnable(){\n  @Override public void run(){\n    if (idx == index) {\n      done=true;\n      s.dispose();\n      dispose();\n      actual.onError(new TimeoutException());\n    }\n  }\n}\n,timeout,unit)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 41,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 462,
        "startLineNumber" : 249,
        "startColumnNumber" : 16,
        "endLineNumber" : 260,
        "endColumnNumber" : 34
      },
      "nodeContext" : "d=worker.schedule(new Runnable(){\n  @Override public void run(){\n    if (idx == index) {\n      done=true;\n      s.dispose();\n      dispose();\n      actual.onError(new TimeoutException());\n    }\n  }\n}\n,timeout,unit);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 42,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 626,
        "startLineNumber" : 248,
        "startColumnNumber" : 51,
        "endLineNumber" : 265,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  d=worker.schedule(new Runnable(){\n    @Override public void run(){\n      if (idx == index) {\n        done=true;\n        s.dispose();\n        dispose();\n        actual.onError(new TimeoutException());\n      }\n    }\n  }\n,timeout,unit);\n  if (!timer.compareAndSet(NEW_TIMER,d)) {\n    d.dispose();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 665,
        "startLineNumber" : 248,
        "startColumnNumber" : 12,
        "endLineNumber" : 265,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (timer.compareAndSet(d,NEW_TIMER)) {\n  d=worker.schedule(new Runnable(){\n    @Override public void run(){\n      if (idx == index) {\n        done=true;\n        s.dispose();\n        dispose();\n        actual.onError(new TimeoutException());\n      }\n    }\n  }\n,timeout,unit);\n  if (!timer.compareAndSet(NEW_TIMER,d)) {\n    d.dispose();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 61,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 821,
        "startLineNumber" : 242,
        "startColumnNumber" : 45,
        "endLineNumber" : 266,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Disposable d=timer.get();\n  if (d != null) {\n    d.dispose();\n  }\n  if (timer.compareAndSet(d,NEW_TIMER)) {\n    d=worker.schedule(new Runnable(){\n      @Override public void run(){\n        if (idx == index) {\n          done=true;\n          s.dispose();\n          dispose();\n          actual.onError(new TimeoutException());\n        }\n      }\n    }\n,timeout,unit);\n    if (!timer.compareAndSet(NEW_TIMER,d)) {\n      d.dispose();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 858,
        "startLineNumber" : 242,
        "startColumnNumber" : 8,
        "endLineNumber" : 266,
        "endColumnNumber" : 9
      },
      "nodeContext" : "void scheduleTimeout(final long idx){\n  Disposable d=timer.get();\n  if (d != null) {\n    d.dispose();\n  }\n  if (timer.compareAndSet(d,NEW_TIMER)) {\n    d=worker.schedule(new Runnable(){\n      @Override public void run(){\n        if (idx == index) {\n          done=true;\n          s.dispose();\n          dispose();\n          actual.onError(new TimeoutException());\n        }\n      }\n    }\n,timeout,unit);\n    if (!timer.compareAndSet(NEW_TIMER,d)) {\n      d.dispose();\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 86,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 462,
        "startLineNumber" : 249,
        "startColumnNumber" : 16,
        "endLineNumber" : 260,
        "endColumnNumber" : 34
      },
      "nodeContext" : "d=worker.schedule(new Runnable(){\n  @Override public void run(){\n    if (idx == index) {\n      done=true;\n      s.dispose();\n      dispose();\n      actual.onError(new TimeoutException());\n    }\n  }\n}\n,timeout,unit);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 42,
      "astHeight" : 14
    },
    "tokenLength" : 13,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 425,
    "startLineNumber" : 249,
    "startColumnNumber" : 36,
    "endLineNumber" : 260,
    "endColumnNumber" : 17
  } ],
  "layoutRelationDataList" : [ ]
}