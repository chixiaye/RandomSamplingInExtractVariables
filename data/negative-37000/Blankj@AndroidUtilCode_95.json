{
  "id" : 95,
  "expression" : "Arrays",
  "projectName" : "Blankj@AndroidUtilCode",
  "commitID" : "b0f09e2df62a8b5e40c07016bf0588e3d1eb4151",
  "filePath" : "/subutil/src/main/java/com/blankj/subutil/util/ReflectUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Arrays",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 303,
      "startColumnNumber" : 88,
      "endLineNumber" : 303,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 303,
        "startColumnNumber" : 88,
        "endLineNumber" : 303,
        "endColumnNumber" : 110
      },
      "nodeContext" : "Arrays.toString(types)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 303,
        "startColumnNumber" : 40,
        "endLineNumber" : 303,
        "endColumnNumber" : 156
      },
      "nodeContext" : "\"No similar method \" + name + \" with params \"+ Arrays.toString(types)+ \" could be found init type \"+ type()+ \".\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 303,
        "startColumnNumber" : 14,
        "endLineNumber" : 303,
        "endColumnNumber" : 157
      },
      "nodeContext" : "new NoSuchMethodException(\"No similar method \" + name + \" with params \"+ Arrays.toString(types)+ \" could be found init type \"+ type()+ \".\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 303,
        "startColumnNumber" : 8,
        "endLineNumber" : 303,
        "endColumnNumber" : 158
      },
      "nodeContext" : "throw new NoSuchMethodException(\"No similar method \" + name + \" with params \"+ Arrays.toString(types)+ \" could be found init type \"+ type()+ \".\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 925,
        "startLineNumber" : 280,
        "startColumnNumber" : 93,
        "endLineNumber" : 304,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Class<?> t=type();\n  for (  Method method : t.getMethods()) {\n    if (isSimilarSignature(method,name,types)) {\n      return method;\n    }\n  }\n  do {\n    for (    Method method : t.getDeclaredMethods()) {\n      if (isSimilarSignature(method,name,types)) {\n        return method;\n      }\n    }\n    t=t.getSuperclass();\n  }\n while (t != null);\n  throw new NoSuchMethodException(\"No similar method \" + name + \" with params \"+ Arrays.toString(types)+ \" could be found init type \"+ type()+ \".\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1410,
        "startLineNumber" : 272,
        "startColumnNumber" : 4,
        "endLineNumber" : 304,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Searches a method with a similar signature as desired using {@link #isSimilarSignature(java.lang.reflect.Method,String,Class[])}. <p> First public methods are searched in the class hierarchy, then private methods init the declaring class. If a method could be found, it is returned, otherwise a  {@code NoSuchMethodException} is thrown.\n */\nprivate Method similarMethod(String name,Class<?>[] types) throws NoSuchMethodException {\n  Class<?> t=type();\n  for (  Method method : t.getMethods()) {\n    if (isSimilarSignature(method,name,types)) {\n      return method;\n    }\n  }\n  do {\n    for (    Method method : t.getDeclaredMethods()) {\n      if (isSimilarSignature(method,name,types)) {\n        return method;\n      }\n    }\n    t=t.getSuperclass();\n  }\n while (t != null);\n  throw new NoSuchMethodException(\"No similar method \" + name + \" with params \"+ Arrays.toString(types)+ \" could be found init type \"+ type()+ \".\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 303,
        "startColumnNumber" : 8,
        "endLineNumber" : 303,
        "endColumnNumber" : 158
      },
      "nodeContext" : "throw new NoSuchMethodException(\"No similar method \" + name + \" with params \"+ Arrays.toString(types)+ \" could be found init type \"+ type()+ \".\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.Arrays"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 303,
    "startColumnNumber" : 88,
    "endLineNumber" : 303,
    "endColumnNumber" : 94
  } ],
  "layoutRelationDataList" : [ ]
}