{
  "id" : 310,
  "expression" : "255",
  "projectName" : "airbnb@lottie-android",
  "commitID" : "54c2775bf2c8b67c8d24840424c13968255caea7",
  "filePath" : "/lottie/src/main/java/com/airbnb/lottie/DocumentData.java",
  "occurrences" : 8,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "255",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 63,
      "startColumnNumber" : 10,
      "endLineNumber" : 63,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 173,
        "startLineNumber" : 62,
        "startColumnNumber" : 18,
        "endLineNumber" : 66,
        "endColumnNumber" : 48
      },
      "nodeContext" : "Color.argb(255,(int)(colorArray.optDouble(0) * 255),(int)(colorArray.optDouble(1) * 255),(int)(colorArray.optDouble(2) * 255))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 62,
        "startColumnNumber" : 10,
        "endLineNumber" : 66,
        "endColumnNumber" : 48
      },
      "nodeContext" : "color=Color.argb(255,(int)(colorArray.optDouble(0) * 255),(int)(colorArray.optDouble(1) * 255),(int)(colorArray.optDouble(2) * 255))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 186,
        "startLineNumber" : 62,
        "startColumnNumber" : 6,
        "endLineNumber" : 66,
        "endColumnNumber" : 49
      },
      "nodeContext" : "int color=Color.argb(255,(int)(colorArray.optDouble(0) * 255),(int)(colorArray.optDouble(1) * 255),(int)(colorArray.optDouble(2) * 255));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 35,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1086,
        "startLineNumber" : 54,
        "startColumnNumber" : 53,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String text=json.optString(\"t\");\n  String fontName=json.optString(\"f\");\n  int size=json.optInt(\"s\");\n  int justification=json.optInt(\"j\");\n  int tracking=json.optInt(\"tr\");\n  double lineHeight=json.optDouble(\"lh\");\n  JSONArray colorArray=json.optJSONArray(\"fc\");\n  int color=Color.argb(255,(int)(colorArray.optDouble(0) * 255),(int)(colorArray.optDouble(1) * 255),(int)(colorArray.optDouble(2) * 255));\n  JSONArray strokeArray=json.optJSONArray(\"sc\");\n  int strokeColor=0;\n  if (strokeArray != null) {\n    strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255));\n  }\n  int strokeWidth=json.optInt(\"sw\");\n  boolean strokeOverFill=json.optBoolean(\"of\");\n  return new DocumentData(text,fontName,size,justification,tracking,lineHeight,color,strokeColor,strokeWidth,strokeOverFill);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 178,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static DocumentData newInstance(JSONObject json){\n  String text=json.optString(\"t\");\n  String fontName=json.optString(\"f\");\n  int size=json.optInt(\"s\");\n  int justification=json.optInt(\"j\");\n  int tracking=json.optInt(\"tr\");\n  double lineHeight=json.optDouble(\"lh\");\n  JSONArray colorArray=json.optJSONArray(\"fc\");\n  int color=Color.argb(255,(int)(colorArray.optDouble(0) * 255),(int)(colorArray.optDouble(1) * 255),(int)(colorArray.optDouble(2) * 255));\n  JSONArray strokeArray=json.optJSONArray(\"sc\");\n  int strokeColor=0;\n  if (strokeArray != null) {\n    strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255));\n  }\n  int strokeWidth=json.optInt(\"sw\");\n  boolean strokeOverFill=json.optBoolean(\"of\");\n  return new DocumentData(text,fontName,size,justification,tracking,lineHeight,color,strokeColor,strokeWidth,strokeOverFill);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 187,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 173,
        "startLineNumber" : 62,
        "startColumnNumber" : 18,
        "endLineNumber" : 66,
        "endColumnNumber" : 48
      },
      "nodeContext" : "Color.argb(255,(int)(colorArray.optDouble(0) * 255),(int)(colorArray.optDouble(1) * 255),(int)(colorArray.optDouble(2) * 255))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "255",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 64,
      "startColumnNumber" : 43,
      "endLineNumber" : 64,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 64,
        "startColumnNumber" : 17,
        "endLineNumber" : 64,
        "endColumnNumber" : 46
      },
      "nodeContext" : "colorArray.optDouble(0) * 255",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 64,
        "startColumnNumber" : 16,
        "endLineNumber" : 64,
        "endColumnNumber" : 47
      },
      "nodeContext" : "(colorArray.optDouble(0) * 255)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 64,
        "startColumnNumber" : 10,
        "endLineNumber" : 64,
        "endColumnNumber" : 47
      },
      "nodeContext" : "(int)(colorArray.optDouble(0) * 255)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 173,
        "startLineNumber" : 62,
        "startColumnNumber" : 18,
        "endLineNumber" : 66,
        "endColumnNumber" : 48
      },
      "nodeContext" : "Color.argb(255,(int)(colorArray.optDouble(0) * 255),(int)(colorArray.optDouble(1) * 255),(int)(colorArray.optDouble(2) * 255))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 62,
        "startColumnNumber" : 10,
        "endLineNumber" : 66,
        "endColumnNumber" : 48
      },
      "nodeContext" : "color=Color.argb(255,(int)(colorArray.optDouble(0) * 255),(int)(colorArray.optDouble(1) * 255),(int)(colorArray.optDouble(2) * 255))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 186,
        "startLineNumber" : 62,
        "startColumnNumber" : 6,
        "endLineNumber" : 66,
        "endColumnNumber" : 49
      },
      "nodeContext" : "int color=Color.argb(255,(int)(colorArray.optDouble(0) * 255),(int)(colorArray.optDouble(1) * 255),(int)(colorArray.optDouble(2) * 255));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 35,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1086,
        "startLineNumber" : 54,
        "startColumnNumber" : 53,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String text=json.optString(\"t\");\n  String fontName=json.optString(\"f\");\n  int size=json.optInt(\"s\");\n  int justification=json.optInt(\"j\");\n  int tracking=json.optInt(\"tr\");\n  double lineHeight=json.optDouble(\"lh\");\n  JSONArray colorArray=json.optJSONArray(\"fc\");\n  int color=Color.argb(255,(int)(colorArray.optDouble(0) * 255),(int)(colorArray.optDouble(1) * 255),(int)(colorArray.optDouble(2) * 255));\n  JSONArray strokeArray=json.optJSONArray(\"sc\");\n  int strokeColor=0;\n  if (strokeArray != null) {\n    strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255));\n  }\n  int strokeWidth=json.optInt(\"sw\");\n  boolean strokeOverFill=json.optBoolean(\"of\");\n  return new DocumentData(text,fontName,size,justification,tracking,lineHeight,color,strokeColor,strokeWidth,strokeOverFill);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 178,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static DocumentData newInstance(JSONObject json){\n  String text=json.optString(\"t\");\n  String fontName=json.optString(\"f\");\n  int size=json.optInt(\"s\");\n  int justification=json.optInt(\"j\");\n  int tracking=json.optInt(\"tr\");\n  double lineHeight=json.optDouble(\"lh\");\n  JSONArray colorArray=json.optJSONArray(\"fc\");\n  int color=Color.argb(255,(int)(colorArray.optDouble(0) * 255),(int)(colorArray.optDouble(1) * 255),(int)(colorArray.optDouble(2) * 255));\n  JSONArray strokeArray=json.optJSONArray(\"sc\");\n  int strokeColor=0;\n  if (strokeArray != null) {\n    strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255));\n  }\n  int strokeWidth=json.optInt(\"sw\");\n  boolean strokeOverFill=json.optBoolean(\"of\");\n  return new DocumentData(text,fontName,size,justification,tracking,lineHeight,color,strokeColor,strokeWidth,strokeOverFill);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 187,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 64,
        "startColumnNumber" : 10,
        "endLineNumber" : 64,
        "endColumnNumber" : 47
      },
      "nodeContext" : "(int)(colorArray.optDouble(0) * 255)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "255",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 65,
      "startColumnNumber" : 43,
      "endLineNumber" : 65,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 65,
        "startColumnNumber" : 17,
        "endLineNumber" : 65,
        "endColumnNumber" : 46
      },
      "nodeContext" : "colorArray.optDouble(1) * 255",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 65,
        "startColumnNumber" : 16,
        "endLineNumber" : 65,
        "endColumnNumber" : 47
      },
      "nodeContext" : "(colorArray.optDouble(1) * 255)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 65,
        "startColumnNumber" : 10,
        "endLineNumber" : 65,
        "endColumnNumber" : 47
      },
      "nodeContext" : "(int)(colorArray.optDouble(1) * 255)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 173,
        "startLineNumber" : 62,
        "startColumnNumber" : 18,
        "endLineNumber" : 66,
        "endColumnNumber" : 48
      },
      "nodeContext" : "Color.argb(255,(int)(colorArray.optDouble(0) * 255),(int)(colorArray.optDouble(1) * 255),(int)(colorArray.optDouble(2) * 255))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 62,
        "startColumnNumber" : 10,
        "endLineNumber" : 66,
        "endColumnNumber" : 48
      },
      "nodeContext" : "color=Color.argb(255,(int)(colorArray.optDouble(0) * 255),(int)(colorArray.optDouble(1) * 255),(int)(colorArray.optDouble(2) * 255))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 186,
        "startLineNumber" : 62,
        "startColumnNumber" : 6,
        "endLineNumber" : 66,
        "endColumnNumber" : 49
      },
      "nodeContext" : "int color=Color.argb(255,(int)(colorArray.optDouble(0) * 255),(int)(colorArray.optDouble(1) * 255),(int)(colorArray.optDouble(2) * 255));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 35,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1086,
        "startLineNumber" : 54,
        "startColumnNumber" : 53,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String text=json.optString(\"t\");\n  String fontName=json.optString(\"f\");\n  int size=json.optInt(\"s\");\n  int justification=json.optInt(\"j\");\n  int tracking=json.optInt(\"tr\");\n  double lineHeight=json.optDouble(\"lh\");\n  JSONArray colorArray=json.optJSONArray(\"fc\");\n  int color=Color.argb(255,(int)(colorArray.optDouble(0) * 255),(int)(colorArray.optDouble(1) * 255),(int)(colorArray.optDouble(2) * 255));\n  JSONArray strokeArray=json.optJSONArray(\"sc\");\n  int strokeColor=0;\n  if (strokeArray != null) {\n    strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255));\n  }\n  int strokeWidth=json.optInt(\"sw\");\n  boolean strokeOverFill=json.optBoolean(\"of\");\n  return new DocumentData(text,fontName,size,justification,tracking,lineHeight,color,strokeColor,strokeWidth,strokeOverFill);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 178,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static DocumentData newInstance(JSONObject json){\n  String text=json.optString(\"t\");\n  String fontName=json.optString(\"f\");\n  int size=json.optInt(\"s\");\n  int justification=json.optInt(\"j\");\n  int tracking=json.optInt(\"tr\");\n  double lineHeight=json.optDouble(\"lh\");\n  JSONArray colorArray=json.optJSONArray(\"fc\");\n  int color=Color.argb(255,(int)(colorArray.optDouble(0) * 255),(int)(colorArray.optDouble(1) * 255),(int)(colorArray.optDouble(2) * 255));\n  JSONArray strokeArray=json.optJSONArray(\"sc\");\n  int strokeColor=0;\n  if (strokeArray != null) {\n    strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255));\n  }\n  int strokeWidth=json.optInt(\"sw\");\n  boolean strokeOverFill=json.optBoolean(\"of\");\n  return new DocumentData(text,fontName,size,justification,tracking,lineHeight,color,strokeColor,strokeWidth,strokeOverFill);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 187,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 65,
        "startColumnNumber" : 10,
        "endLineNumber" : 65,
        "endColumnNumber" : 47
      },
      "nodeContext" : "(int)(colorArray.optDouble(1) * 255)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "255",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 66,
      "startColumnNumber" : 43,
      "endLineNumber" : 66,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 66,
        "startColumnNumber" : 17,
        "endLineNumber" : 66,
        "endColumnNumber" : 46
      },
      "nodeContext" : "colorArray.optDouble(2) * 255",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 66,
        "startColumnNumber" : 16,
        "endLineNumber" : 66,
        "endColumnNumber" : 47
      },
      "nodeContext" : "(colorArray.optDouble(2) * 255)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 66,
        "startColumnNumber" : 10,
        "endLineNumber" : 66,
        "endColumnNumber" : 47
      },
      "nodeContext" : "(int)(colorArray.optDouble(2) * 255)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 173,
        "startLineNumber" : 62,
        "startColumnNumber" : 18,
        "endLineNumber" : 66,
        "endColumnNumber" : 48
      },
      "nodeContext" : "Color.argb(255,(int)(colorArray.optDouble(0) * 255),(int)(colorArray.optDouble(1) * 255),(int)(colorArray.optDouble(2) * 255))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 62,
        "startColumnNumber" : 10,
        "endLineNumber" : 66,
        "endColumnNumber" : 48
      },
      "nodeContext" : "color=Color.argb(255,(int)(colorArray.optDouble(0) * 255),(int)(colorArray.optDouble(1) * 255),(int)(colorArray.optDouble(2) * 255))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 186,
        "startLineNumber" : 62,
        "startColumnNumber" : 6,
        "endLineNumber" : 66,
        "endColumnNumber" : 49
      },
      "nodeContext" : "int color=Color.argb(255,(int)(colorArray.optDouble(0) * 255),(int)(colorArray.optDouble(1) * 255),(int)(colorArray.optDouble(2) * 255));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 35,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1086,
        "startLineNumber" : 54,
        "startColumnNumber" : 53,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String text=json.optString(\"t\");\n  String fontName=json.optString(\"f\");\n  int size=json.optInt(\"s\");\n  int justification=json.optInt(\"j\");\n  int tracking=json.optInt(\"tr\");\n  double lineHeight=json.optDouble(\"lh\");\n  JSONArray colorArray=json.optJSONArray(\"fc\");\n  int color=Color.argb(255,(int)(colorArray.optDouble(0) * 255),(int)(colorArray.optDouble(1) * 255),(int)(colorArray.optDouble(2) * 255));\n  JSONArray strokeArray=json.optJSONArray(\"sc\");\n  int strokeColor=0;\n  if (strokeArray != null) {\n    strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255));\n  }\n  int strokeWidth=json.optInt(\"sw\");\n  boolean strokeOverFill=json.optBoolean(\"of\");\n  return new DocumentData(text,fontName,size,justification,tracking,lineHeight,color,strokeColor,strokeWidth,strokeOverFill);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 178,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static DocumentData newInstance(JSONObject json){\n  String text=json.optString(\"t\");\n  String fontName=json.optString(\"f\");\n  int size=json.optInt(\"s\");\n  int justification=json.optInt(\"j\");\n  int tracking=json.optInt(\"tr\");\n  double lineHeight=json.optDouble(\"lh\");\n  JSONArray colorArray=json.optJSONArray(\"fc\");\n  int color=Color.argb(255,(int)(colorArray.optDouble(0) * 255),(int)(colorArray.optDouble(1) * 255),(int)(colorArray.optDouble(2) * 255));\n  JSONArray strokeArray=json.optJSONArray(\"sc\");\n  int strokeColor=0;\n  if (strokeArray != null) {\n    strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255));\n  }\n  int strokeWidth=json.optInt(\"sw\");\n  boolean strokeOverFill=json.optBoolean(\"of\");\n  return new DocumentData(text,fontName,size,justification,tracking,lineHeight,color,strokeColor,strokeWidth,strokeOverFill);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 187,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 66,
        "startColumnNumber" : 10,
        "endLineNumber" : 66,
        "endColumnNumber" : 47
      },
      "nodeContext" : "(int)(colorArray.optDouble(2) * 255)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "255",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 71,
      "startColumnNumber" : 12,
      "endLineNumber" : 71,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 70,
        "startColumnNumber" : 22,
        "endLineNumber" : 74,
        "endColumnNumber" : 51
      },
      "nodeContext" : "Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 51
      },
      "nodeContext" : "strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 52
      },
      "nodeContext" : "strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 34,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 69,
        "startColumnNumber" : 31,
        "endLineNumber" : 75,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 242,
        "startLineNumber" : 69,
        "startColumnNumber" : 6,
        "endLineNumber" : 75,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (strokeArray != null) {\n  strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1086,
        "startLineNumber" : 54,
        "startColumnNumber" : 53,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String text=json.optString(\"t\");\n  String fontName=json.optString(\"f\");\n  int size=json.optInt(\"s\");\n  int justification=json.optInt(\"j\");\n  int tracking=json.optInt(\"tr\");\n  double lineHeight=json.optDouble(\"lh\");\n  JSONArray colorArray=json.optJSONArray(\"fc\");\n  int color=Color.argb(255,(int)(colorArray.optDouble(0) * 255),(int)(colorArray.optDouble(1) * 255),(int)(colorArray.optDouble(2) * 255));\n  JSONArray strokeArray=json.optJSONArray(\"sc\");\n  int strokeColor=0;\n  if (strokeArray != null) {\n    strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255));\n  }\n  int strokeWidth=json.optInt(\"sw\");\n  boolean strokeOverFill=json.optBoolean(\"of\");\n  return new DocumentData(text,fontName,size,justification,tracking,lineHeight,color,strokeColor,strokeWidth,strokeOverFill);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 178,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static DocumentData newInstance(JSONObject json){\n  String text=json.optString(\"t\");\n  String fontName=json.optString(\"f\");\n  int size=json.optInt(\"s\");\n  int justification=json.optInt(\"j\");\n  int tracking=json.optInt(\"tr\");\n  double lineHeight=json.optDouble(\"lh\");\n  JSONArray colorArray=json.optJSONArray(\"fc\");\n  int color=Color.argb(255,(int)(colorArray.optDouble(0) * 255),(int)(colorArray.optDouble(1) * 255),(int)(colorArray.optDouble(2) * 255));\n  JSONArray strokeArray=json.optJSONArray(\"sc\");\n  int strokeColor=0;\n  if (strokeArray != null) {\n    strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255));\n  }\n  int strokeWidth=json.optInt(\"sw\");\n  boolean strokeOverFill=json.optBoolean(\"of\");\n  return new DocumentData(text,fontName,size,justification,tracking,lineHeight,color,strokeColor,strokeWidth,strokeOverFill);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 187,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 70,
        "startColumnNumber" : 22,
        "endLineNumber" : 74,
        "endColumnNumber" : 51
      },
      "nodeContext" : "Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "255",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 72,
      "startColumnNumber" : 46,
      "endLineNumber" : 72,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 72,
        "startColumnNumber" : 19,
        "endLineNumber" : 72,
        "endColumnNumber" : 49
      },
      "nodeContext" : "strokeArray.optDouble(0) * 255",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 72,
        "startColumnNumber" : 18,
        "endLineNumber" : 72,
        "endColumnNumber" : 50
      },
      "nodeContext" : "(strokeArray.optDouble(0) * 255)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 72,
        "startColumnNumber" : 12,
        "endLineNumber" : 72,
        "endColumnNumber" : 50
      },
      "nodeContext" : "(int)(strokeArray.optDouble(0) * 255)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 70,
        "startColumnNumber" : 22,
        "endLineNumber" : 74,
        "endColumnNumber" : 51
      },
      "nodeContext" : "Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 51
      },
      "nodeContext" : "strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 52
      },
      "nodeContext" : "strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 34,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 69,
        "startColumnNumber" : 31,
        "endLineNumber" : 75,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 242,
        "startLineNumber" : 69,
        "startColumnNumber" : 6,
        "endLineNumber" : 75,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (strokeArray != null) {\n  strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1086,
        "startLineNumber" : 54,
        "startColumnNumber" : 53,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String text=json.optString(\"t\");\n  String fontName=json.optString(\"f\");\n  int size=json.optInt(\"s\");\n  int justification=json.optInt(\"j\");\n  int tracking=json.optInt(\"tr\");\n  double lineHeight=json.optDouble(\"lh\");\n  JSONArray colorArray=json.optJSONArray(\"fc\");\n  int color=Color.argb(255,(int)(colorArray.optDouble(0) * 255),(int)(colorArray.optDouble(1) * 255),(int)(colorArray.optDouble(2) * 255));\n  JSONArray strokeArray=json.optJSONArray(\"sc\");\n  int strokeColor=0;\n  if (strokeArray != null) {\n    strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255));\n  }\n  int strokeWidth=json.optInt(\"sw\");\n  boolean strokeOverFill=json.optBoolean(\"of\");\n  return new DocumentData(text,fontName,size,justification,tracking,lineHeight,color,strokeColor,strokeWidth,strokeOverFill);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 178,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static DocumentData newInstance(JSONObject json){\n  String text=json.optString(\"t\");\n  String fontName=json.optString(\"f\");\n  int size=json.optInt(\"s\");\n  int justification=json.optInt(\"j\");\n  int tracking=json.optInt(\"tr\");\n  double lineHeight=json.optDouble(\"lh\");\n  JSONArray colorArray=json.optJSONArray(\"fc\");\n  int color=Color.argb(255,(int)(colorArray.optDouble(0) * 255),(int)(colorArray.optDouble(1) * 255),(int)(colorArray.optDouble(2) * 255));\n  JSONArray strokeArray=json.optJSONArray(\"sc\");\n  int strokeColor=0;\n  if (strokeArray != null) {\n    strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255));\n  }\n  int strokeWidth=json.optInt(\"sw\");\n  boolean strokeOverFill=json.optBoolean(\"of\");\n  return new DocumentData(text,fontName,size,justification,tracking,lineHeight,color,strokeColor,strokeWidth,strokeOverFill);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 187,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 72,
        "startColumnNumber" : 12,
        "endLineNumber" : 72,
        "endColumnNumber" : 50
      },
      "nodeContext" : "(int)(strokeArray.optDouble(0) * 255)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "255",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 73,
      "startColumnNumber" : 46,
      "endLineNumber" : 73,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 73,
        "startColumnNumber" : 19,
        "endLineNumber" : 73,
        "endColumnNumber" : 49
      },
      "nodeContext" : "strokeArray.optDouble(1) * 255",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 73,
        "startColumnNumber" : 18,
        "endLineNumber" : 73,
        "endColumnNumber" : 50
      },
      "nodeContext" : "(strokeArray.optDouble(1) * 255)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 73,
        "startColumnNumber" : 12,
        "endLineNumber" : 73,
        "endColumnNumber" : 50
      },
      "nodeContext" : "(int)(strokeArray.optDouble(1) * 255)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 70,
        "startColumnNumber" : 22,
        "endLineNumber" : 74,
        "endColumnNumber" : 51
      },
      "nodeContext" : "Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 51
      },
      "nodeContext" : "strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 52
      },
      "nodeContext" : "strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 34,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 69,
        "startColumnNumber" : 31,
        "endLineNumber" : 75,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 242,
        "startLineNumber" : 69,
        "startColumnNumber" : 6,
        "endLineNumber" : 75,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (strokeArray != null) {\n  strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1086,
        "startLineNumber" : 54,
        "startColumnNumber" : 53,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String text=json.optString(\"t\");\n  String fontName=json.optString(\"f\");\n  int size=json.optInt(\"s\");\n  int justification=json.optInt(\"j\");\n  int tracking=json.optInt(\"tr\");\n  double lineHeight=json.optDouble(\"lh\");\n  JSONArray colorArray=json.optJSONArray(\"fc\");\n  int color=Color.argb(255,(int)(colorArray.optDouble(0) * 255),(int)(colorArray.optDouble(1) * 255),(int)(colorArray.optDouble(2) * 255));\n  JSONArray strokeArray=json.optJSONArray(\"sc\");\n  int strokeColor=0;\n  if (strokeArray != null) {\n    strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255));\n  }\n  int strokeWidth=json.optInt(\"sw\");\n  boolean strokeOverFill=json.optBoolean(\"of\");\n  return new DocumentData(text,fontName,size,justification,tracking,lineHeight,color,strokeColor,strokeWidth,strokeOverFill);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 178,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static DocumentData newInstance(JSONObject json){\n  String text=json.optString(\"t\");\n  String fontName=json.optString(\"f\");\n  int size=json.optInt(\"s\");\n  int justification=json.optInt(\"j\");\n  int tracking=json.optInt(\"tr\");\n  double lineHeight=json.optDouble(\"lh\");\n  JSONArray colorArray=json.optJSONArray(\"fc\");\n  int color=Color.argb(255,(int)(colorArray.optDouble(0) * 255),(int)(colorArray.optDouble(1) * 255),(int)(colorArray.optDouble(2) * 255));\n  JSONArray strokeArray=json.optJSONArray(\"sc\");\n  int strokeColor=0;\n  if (strokeArray != null) {\n    strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255));\n  }\n  int strokeWidth=json.optInt(\"sw\");\n  boolean strokeOverFill=json.optBoolean(\"of\");\n  return new DocumentData(text,fontName,size,justification,tracking,lineHeight,color,strokeColor,strokeWidth,strokeOverFill);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 187,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 73,
        "startColumnNumber" : 12,
        "endLineNumber" : 73,
        "endColumnNumber" : 50
      },
      "nodeContext" : "(int)(strokeArray.optDouble(1) * 255)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "255",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 74,
      "startColumnNumber" : 46,
      "endLineNumber" : 74,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 74,
        "startColumnNumber" : 19,
        "endLineNumber" : 74,
        "endColumnNumber" : 49
      },
      "nodeContext" : "strokeArray.optDouble(2) * 255",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 74,
        "startColumnNumber" : 18,
        "endLineNumber" : 74,
        "endColumnNumber" : 50
      },
      "nodeContext" : "(strokeArray.optDouble(2) * 255)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 74,
        "startColumnNumber" : 12,
        "endLineNumber" : 74,
        "endColumnNumber" : 50
      },
      "nodeContext" : "(int)(strokeArray.optDouble(2) * 255)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 70,
        "startColumnNumber" : 22,
        "endLineNumber" : 74,
        "endColumnNumber" : 51
      },
      "nodeContext" : "Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 51
      },
      "nodeContext" : "strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 52
      },
      "nodeContext" : "strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 34,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 69,
        "startColumnNumber" : 31,
        "endLineNumber" : 75,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 242,
        "startLineNumber" : 69,
        "startColumnNumber" : 6,
        "endLineNumber" : 75,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (strokeArray != null) {\n  strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1086,
        "startLineNumber" : 54,
        "startColumnNumber" : 53,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String text=json.optString(\"t\");\n  String fontName=json.optString(\"f\");\n  int size=json.optInt(\"s\");\n  int justification=json.optInt(\"j\");\n  int tracking=json.optInt(\"tr\");\n  double lineHeight=json.optDouble(\"lh\");\n  JSONArray colorArray=json.optJSONArray(\"fc\");\n  int color=Color.argb(255,(int)(colorArray.optDouble(0) * 255),(int)(colorArray.optDouble(1) * 255),(int)(colorArray.optDouble(2) * 255));\n  JSONArray strokeArray=json.optJSONArray(\"sc\");\n  int strokeColor=0;\n  if (strokeArray != null) {\n    strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255));\n  }\n  int strokeWidth=json.optInt(\"sw\");\n  boolean strokeOverFill=json.optBoolean(\"of\");\n  return new DocumentData(text,fontName,size,justification,tracking,lineHeight,color,strokeColor,strokeWidth,strokeOverFill);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 178,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static DocumentData newInstance(JSONObject json){\n  String text=json.optString(\"t\");\n  String fontName=json.optString(\"f\");\n  int size=json.optInt(\"s\");\n  int justification=json.optInt(\"j\");\n  int tracking=json.optInt(\"tr\");\n  double lineHeight=json.optDouble(\"lh\");\n  JSONArray colorArray=json.optJSONArray(\"fc\");\n  int color=Color.argb(255,(int)(colorArray.optDouble(0) * 255),(int)(colorArray.optDouble(1) * 255),(int)(colorArray.optDouble(2) * 255));\n  JSONArray strokeArray=json.optJSONArray(\"sc\");\n  int strokeColor=0;\n  if (strokeArray != null) {\n    strokeColor=Color.argb(255,(int)(strokeArray.optDouble(0) * 255),(int)(strokeArray.optDouble(1) * 255),(int)(strokeArray.optDouble(2) * 255));\n  }\n  int strokeWidth=json.optInt(\"sw\");\n  boolean strokeOverFill=json.optBoolean(\"of\");\n  return new DocumentData(text,fontName,size,justification,tracking,lineHeight,color,strokeColor,strokeWidth,strokeOverFill);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 187,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 74,
        "startColumnNumber" : 12,
        "endLineNumber" : 74,
        "endColumnNumber" : 50
      },
      "nodeContext" : "(int)(strokeArray.optDouble(2) * 255)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 63,
    "startColumnNumber" : 10,
    "endLineNumber" : 63,
    "endColumnNumber" : 13
  }, {
    "charLength" : 3,
    "startLineNumber" : 64,
    "startColumnNumber" : 43,
    "endLineNumber" : 64,
    "endColumnNumber" : 46
  }, {
    "charLength" : 3,
    "startLineNumber" : 65,
    "startColumnNumber" : 43,
    "endLineNumber" : 65,
    "endColumnNumber" : 46
  }, {
    "charLength" : 3,
    "startLineNumber" : 66,
    "startColumnNumber" : 43,
    "endLineNumber" : 66,
    "endColumnNumber" : 46
  }, {
    "charLength" : 3,
    "startLineNumber" : 71,
    "startColumnNumber" : 12,
    "endLineNumber" : 71,
    "endColumnNumber" : 15
  }, {
    "charLength" : 3,
    "startLineNumber" : 72,
    "startColumnNumber" : 46,
    "endLineNumber" : 72,
    "endColumnNumber" : 49
  }, {
    "charLength" : 3,
    "startLineNumber" : 73,
    "startColumnNumber" : 46,
    "endLineNumber" : 73,
    "endColumnNumber" : 49
  }, {
    "charLength" : 3,
    "startLineNumber" : 74,
    "startColumnNumber" : 46,
    "endLineNumber" : 74,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 0
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 0
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 0
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 0
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 0
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 3
  } ]
}