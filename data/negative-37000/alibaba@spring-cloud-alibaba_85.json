{
  "id" : 85,
  "expression" : "hostResource",
  "projectName" : "alibaba@spring-cloud-alibaba",
  "commitID" : "89ad537f66927a647f6233cfc79d58b18f2f6928",
  "filePath" : "/spring-cloud-alibaba-sentinel/src/main/java/com/alibaba/cloud/sentinel/custom/SentinelProtectInterceptor.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "hostResource",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 63,
      "startColumnNumber" : 32,
      "endLineNumber" : 63,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 63,
        "startColumnNumber" : 32,
        "endLineNumber" : 63,
        "endColumnNumber" : 60
      },
      "nodeContext" : "hostResource + uri.getPath()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 63,
        "startColumnNumber" : 9,
        "endLineNumber" : 63,
        "endColumnNumber" : 60
      },
      "nodeContext" : "hostWithPathResource=hostResource + uri.getPath()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 63,
        "endColumnNumber" : 61
      },
      "nodeContext" : "String hostWithPathResource=hostResource + uri.getPath();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1196,
        "startLineNumber" : 58,
        "startColumnNumber" : 60,
        "endLineNumber" : 98,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  URI uri=request.getURI();\n  String hostResource=request.getMethod().toString() + \":\" + uri.getScheme()+ \"://\"+ uri.getHost()+ (uri.getPort() == -1 ? \"\" : \":\" + uri.getPort());\n  String hostWithPathResource=hostResource + uri.getPath();\n  boolean entryWithPath=true;\n  if (hostResource.equals(hostWithPathResource)) {\n    entryWithPath=false;\n  }\n  Entry hostEntry=null, hostWithPathEntry=null;\n  ClientHttpResponse response=null;\n  try {\n    hostEntry=SphU.entry(hostResource,EntryType.OUT);\n    if (entryWithPath) {\n      hostWithPathEntry=SphU.entry(hostWithPathResource,EntryType.OUT);\n    }\n    response=execution.execute(request,body);\n    if (this.restTemplate.getErrorHandler().hasError(response)) {\n      Tracer.trace(new IllegalStateException(\"RestTemplate ErrorHandler has error\"));\n    }\n  }\n catch (  Throwable e) {\n    if (!BlockException.isBlockException(e)) {\n      Tracer.trace(e);\n    }\n else {\n      return handleBlockException(request,body,execution,(BlockException)e);\n    }\n  }\n finally {\n    if (hostWithPathEntry != null) {\n      hostWithPathEntry.exit();\n    }\n    if (hostEntry != null) {\n      hostEntry.exit();\n    }\n  }\n  return response;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 183,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1337,
        "startLineNumber" : 56,
        "startColumnNumber" : 1,
        "endLineNumber" : 98,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public ClientHttpResponse intercept(HttpRequest request,byte[] body,ClientHttpRequestExecution execution) throws IOException {\n  URI uri=request.getURI();\n  String hostResource=request.getMethod().toString() + \":\" + uri.getScheme()+ \"://\"+ uri.getHost()+ (uri.getPort() == -1 ? \"\" : \":\" + uri.getPort());\n  String hostWithPathResource=hostResource + uri.getPath();\n  boolean entryWithPath=true;\n  if (hostResource.equals(hostWithPathResource)) {\n    entryWithPath=false;\n  }\n  Entry hostEntry=null, hostWithPathEntry=null;\n  ClientHttpResponse response=null;\n  try {\n    hostEntry=SphU.entry(hostResource,EntryType.OUT);\n    if (entryWithPath) {\n      hostWithPathEntry=SphU.entry(hostWithPathResource,EntryType.OUT);\n    }\n    response=execution.execute(request,body);\n    if (this.restTemplate.getErrorHandler().hasError(response)) {\n      Tracer.trace(new IllegalStateException(\"RestTemplate ErrorHandler has error\"));\n    }\n  }\n catch (  Throwable e) {\n    if (!BlockException.isBlockException(e)) {\n      Tracer.trace(e);\n    }\n else {\n      return handleBlockException(request,body,execution,(BlockException)e);\n    }\n  }\n finally {\n    if (hostWithPathEntry != null) {\n      hostWithPathEntry.exit();\n    }\n    if (hostEntry != null) {\n      hostEntry.exit();\n    }\n  }\n  return response;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 205,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 63,
        "endColumnNumber" : 61
      },
      "nodeContext" : "String hostWithPathResource=hostResource + uri.getPath();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "hostResource",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 65,
      "startColumnNumber" : 6,
      "endLineNumber" : 65,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 65,
        "startColumnNumber" : 6,
        "endLineNumber" : 65,
        "endColumnNumber" : 47
      },
      "nodeContext" : "hostResource.equals(hostWithPathResource)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 67,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (hostResource.equals(hostWithPathResource)) {\n  entryWithPath=false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1196,
        "startLineNumber" : 58,
        "startColumnNumber" : 60,
        "endLineNumber" : 98,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  URI uri=request.getURI();\n  String hostResource=request.getMethod().toString() + \":\" + uri.getScheme()+ \"://\"+ uri.getHost()+ (uri.getPort() == -1 ? \"\" : \":\" + uri.getPort());\n  String hostWithPathResource=hostResource + uri.getPath();\n  boolean entryWithPath=true;\n  if (hostResource.equals(hostWithPathResource)) {\n    entryWithPath=false;\n  }\n  Entry hostEntry=null, hostWithPathEntry=null;\n  ClientHttpResponse response=null;\n  try {\n    hostEntry=SphU.entry(hostResource,EntryType.OUT);\n    if (entryWithPath) {\n      hostWithPathEntry=SphU.entry(hostWithPathResource,EntryType.OUT);\n    }\n    response=execution.execute(request,body);\n    if (this.restTemplate.getErrorHandler().hasError(response)) {\n      Tracer.trace(new IllegalStateException(\"RestTemplate ErrorHandler has error\"));\n    }\n  }\n catch (  Throwable e) {\n    if (!BlockException.isBlockException(e)) {\n      Tracer.trace(e);\n    }\n else {\n      return handleBlockException(request,body,execution,(BlockException)e);\n    }\n  }\n finally {\n    if (hostWithPathEntry != null) {\n      hostWithPathEntry.exit();\n    }\n    if (hostEntry != null) {\n      hostEntry.exit();\n    }\n  }\n  return response;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 183,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1337,
        "startLineNumber" : 56,
        "startColumnNumber" : 1,
        "endLineNumber" : 98,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public ClientHttpResponse intercept(HttpRequest request,byte[] body,ClientHttpRequestExecution execution) throws IOException {\n  URI uri=request.getURI();\n  String hostResource=request.getMethod().toString() + \":\" + uri.getScheme()+ \"://\"+ uri.getHost()+ (uri.getPort() == -1 ? \"\" : \":\" + uri.getPort());\n  String hostWithPathResource=hostResource + uri.getPath();\n  boolean entryWithPath=true;\n  if (hostResource.equals(hostWithPathResource)) {\n    entryWithPath=false;\n  }\n  Entry hostEntry=null, hostWithPathEntry=null;\n  ClientHttpResponse response=null;\n  try {\n    hostEntry=SphU.entry(hostResource,EntryType.OUT);\n    if (entryWithPath) {\n      hostWithPathEntry=SphU.entry(hostWithPathResource,EntryType.OUT);\n    }\n    response=execution.execute(request,body);\n    if (this.restTemplate.getErrorHandler().hasError(response)) {\n      Tracer.trace(new IllegalStateException(\"RestTemplate ErrorHandler has error\"));\n    }\n  }\n catch (  Throwable e) {\n    if (!BlockException.isBlockException(e)) {\n      Tracer.trace(e);\n    }\n else {\n      return handleBlockException(request,body,execution,(BlockException)e);\n    }\n  }\n finally {\n    if (hostWithPathEntry != null) {\n      hostWithPathEntry.exit();\n    }\n    if (hostEntry != null) {\n      hostEntry.exit();\n    }\n  }\n  return response;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 205,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 65,
        "startColumnNumber" : 6,
        "endLineNumber" : 65,
        "endColumnNumber" : 47
      },
      "nodeContext" : "hostResource.equals(hostWithPathResource)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "hostResource",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 71,
      "startColumnNumber" : 26,
      "endLineNumber" : 71,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 71,
        "startColumnNumber" : 15,
        "endLineNumber" : 71,
        "endColumnNumber" : 54
      },
      "nodeContext" : "SphU.entry(hostResource,EntryType.OUT)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 71,
        "startColumnNumber" : 3,
        "endLineNumber" : 71,
        "endColumnNumber" : 54
      },
      "nodeContext" : "hostEntry=SphU.entry(hostResource,EntryType.OUT)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 71,
        "startColumnNumber" : 3,
        "endLineNumber" : 71,
        "endColumnNumber" : 55
      },
      "nodeContext" : "hostEntry=SphU.entry(hostResource,EntryType.OUT);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 372,
        "startLineNumber" : 70,
        "startColumnNumber" : 6,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  hostEntry=SphU.entry(hostResource,EntryType.OUT);\n  if (entryWithPath) {\n    hostWithPathEntry=SphU.entry(hostWithPathResource,EntryType.OUT);\n  }\n  response=execution.execute(request,body);\n  if (this.restTemplate.getErrorHandler().hasError(response)) {\n    Tracer.trace(new IllegalStateException(\"RestTemplate ErrorHandler has error\"));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 712,
        "startLineNumber" : 70,
        "startColumnNumber" : 2,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  hostEntry=SphU.entry(hostResource,EntryType.OUT);\n  if (entryWithPath) {\n    hostWithPathEntry=SphU.entry(hostWithPathResource,EntryType.OUT);\n  }\n  response=execution.execute(request,body);\n  if (this.restTemplate.getErrorHandler().hasError(response)) {\n    Tracer.trace(new IllegalStateException(\"RestTemplate ErrorHandler has error\"));\n  }\n}\n catch (Throwable e) {\n  if (!BlockException.isBlockException(e)) {\n    Tracer.trace(e);\n  }\n else {\n    return handleBlockException(request,body,execution,(BlockException)e);\n  }\n}\n finally {\n  if (hostWithPathEntry != null) {\n    hostWithPathEntry.exit();\n  }\n  if (hostEntry != null) {\n    hostEntry.exit();\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 99,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1196,
        "startLineNumber" : 58,
        "startColumnNumber" : 60,
        "endLineNumber" : 98,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  URI uri=request.getURI();\n  String hostResource=request.getMethod().toString() + \":\" + uri.getScheme()+ \"://\"+ uri.getHost()+ (uri.getPort() == -1 ? \"\" : \":\" + uri.getPort());\n  String hostWithPathResource=hostResource + uri.getPath();\n  boolean entryWithPath=true;\n  if (hostResource.equals(hostWithPathResource)) {\n    entryWithPath=false;\n  }\n  Entry hostEntry=null, hostWithPathEntry=null;\n  ClientHttpResponse response=null;\n  try {\n    hostEntry=SphU.entry(hostResource,EntryType.OUT);\n    if (entryWithPath) {\n      hostWithPathEntry=SphU.entry(hostWithPathResource,EntryType.OUT);\n    }\n    response=execution.execute(request,body);\n    if (this.restTemplate.getErrorHandler().hasError(response)) {\n      Tracer.trace(new IllegalStateException(\"RestTemplate ErrorHandler has error\"));\n    }\n  }\n catch (  Throwable e) {\n    if (!BlockException.isBlockException(e)) {\n      Tracer.trace(e);\n    }\n else {\n      return handleBlockException(request,body,execution,(BlockException)e);\n    }\n  }\n finally {\n    if (hostWithPathEntry != null) {\n      hostWithPathEntry.exit();\n    }\n    if (hostEntry != null) {\n      hostEntry.exit();\n    }\n  }\n  return response;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 183,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1337,
        "startLineNumber" : 56,
        "startColumnNumber" : 1,
        "endLineNumber" : 98,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public ClientHttpResponse intercept(HttpRequest request,byte[] body,ClientHttpRequestExecution execution) throws IOException {\n  URI uri=request.getURI();\n  String hostResource=request.getMethod().toString() + \":\" + uri.getScheme()+ \"://\"+ uri.getHost()+ (uri.getPort() == -1 ? \"\" : \":\" + uri.getPort());\n  String hostWithPathResource=hostResource + uri.getPath();\n  boolean entryWithPath=true;\n  if (hostResource.equals(hostWithPathResource)) {\n    entryWithPath=false;\n  }\n  Entry hostEntry=null, hostWithPathEntry=null;\n  ClientHttpResponse response=null;\n  try {\n    hostEntry=SphU.entry(hostResource,EntryType.OUT);\n    if (entryWithPath) {\n      hostWithPathEntry=SphU.entry(hostWithPathResource,EntryType.OUT);\n    }\n    response=execution.execute(request,body);\n    if (this.restTemplate.getErrorHandler().hasError(response)) {\n      Tracer.trace(new IllegalStateException(\"RestTemplate ErrorHandler has error\"));\n    }\n  }\n catch (  Throwable e) {\n    if (!BlockException.isBlockException(e)) {\n      Tracer.trace(e);\n    }\n else {\n      return handleBlockException(request,body,execution,(BlockException)e);\n    }\n  }\n finally {\n    if (hostWithPathEntry != null) {\n      hostWithPathEntry.exit();\n    }\n    if (hostEntry != null) {\n      hostEntry.exit();\n    }\n  }\n  return response;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 205,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 71,
        "startColumnNumber" : 3,
        "endLineNumber" : 71,
        "endColumnNumber" : 55
      },
      "nodeContext" : "hostEntry=SphU.entry(hostResource,EntryType.OUT);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 63,
    "startColumnNumber" : 32,
    "endLineNumber" : 63,
    "endColumnNumber" : 44
  }, {
    "charLength" : 12,
    "startLineNumber" : 65,
    "startColumnNumber" : 6,
    "endLineNumber" : 65,
    "endColumnNumber" : 18
  }, {
    "charLength" : 12,
    "startLineNumber" : 71,
    "startColumnNumber" : 26,
    "endLineNumber" : 71,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  } ]
}