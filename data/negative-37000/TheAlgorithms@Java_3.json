{
  "id" : 3,
  "expression" : "stringArray",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/Sorts/BinaryTreeSort.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "stringArray",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 68,
      "startColumnNumber" : 19,
      "endLineNumber" : 68,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 68,
        "startColumnNumber" : 19,
        "endLineNumber" : 68,
        "endColumnNumber" : 37
      },
      "nodeContext" : "stringArray.length",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 68,
        "startColumnNumber" : 12,
        "endLineNumber" : 68,
        "endColumnNumber" : 37
      },
      "nodeContext" : "last=stringArray.length",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 38
      },
      "nodeContext" : "int last=stringArray.length;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1658,
        "startLineNumber" : 48,
        "startColumnNumber" : 39,
        "endLineNumber" : 78,
        "endColumnNumber" : 1
      },
      "nodeContext" : "{\n  int[] intArray={12,40,9,3,19,74,7,31,23,54,26,81,12};\n  TreeSort ts=new TreeSort(new Integer(intArray[0]));\n  for (int i=1; i < intArray.length; i++) {\n    ts.insert(ts.root,new Integer(intArray[i]));\n  }\n  System.out.print(\"Integer Array Sorted in Increasing Order: \");\n  ts.treeSort(ts.root);\n  System.out.println();\n  Double[] decimalArray={8.2,1.5,3.14159265,9.3,5.1,4.8,2.6};\n  TreeSort dts=new TreeSort(new Double(decimalArray[0]).doubleValue());\n  for (int i=1; i < decimalArray.length; i++) {\n    dts.decimalInsert(dts.root,new Double(decimalArray[i]).doubleValue());\n  }\n  System.out.print(\"Decimal Array, Sorted in Increasing Order: \");\n  dts.treeSort(dts.root);\n  System.out.println();\n  String[] stringArray={\"c\",\"a\",\"e\",\"b\",\"d\",\"dd\",\"da\",\"zz\",\"AA\",\"aa\",\"aB\",\"Hb\",\"Z\"};\n  int last=stringArray.length;\n  Arrays.sort(stringArray);\n  System.out.print(\"String Array Sorted in Alphabetical Order: \");\n  ts.insert(ts.root,last);\n  for (int i=0; i < last; i++) {\n    System.out.print(stringArray[i] + \"\\t\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 233,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1697,
        "startLineNumber" : 48,
        "startColumnNumber" : 0,
        "endLineNumber" : 78,
        "endColumnNumber" : 1
      },
      "nodeContext" : "public static void main(String args[]){\n  int[] intArray={12,40,9,3,19,74,7,31,23,54,26,81,12};\n  TreeSort ts=new TreeSort(new Integer(intArray[0]));\n  for (int i=1; i < intArray.length; i++) {\n    ts.insert(ts.root,new Integer(intArray[i]));\n  }\n  System.out.print(\"Integer Array Sorted in Increasing Order: \");\n  ts.treeSort(ts.root);\n  System.out.println();\n  Double[] decimalArray={8.2,1.5,3.14159265,9.3,5.1,4.8,2.6};\n  TreeSort dts=new TreeSort(new Double(decimalArray[0]).doubleValue());\n  for (int i=1; i < decimalArray.length; i++) {\n    dts.decimalInsert(dts.root,new Double(decimalArray[i]).doubleValue());\n  }\n  System.out.print(\"Decimal Array, Sorted in Increasing Order: \");\n  dts.treeSort(dts.root);\n  System.out.println();\n  String[] stringArray={\"c\",\"a\",\"e\",\"b\",\"d\",\"dd\",\"da\",\"zz\",\"AA\",\"aa\",\"aB\",\"Hb\",\"Z\"};\n  int last=stringArray.length;\n  Arrays.sort(stringArray);\n  System.out.print(\"String Array Sorted in Alphabetical Order: \");\n  ts.insert(ts.root,last);\n  for (int i=0; i < last; i++) {\n    System.out.print(stringArray[i] + \"\\t\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 243,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 38
      },
      "nodeContext" : "int last=stringArray.length;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "stringArray",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 69,
      "startColumnNumber" : 20,
      "endLineNumber" : 69,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 32
      },
      "nodeContext" : "Arrays.sort(stringArray)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 33
      },
      "nodeContext" : "Arrays.sort(stringArray);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1658,
        "startLineNumber" : 48,
        "startColumnNumber" : 39,
        "endLineNumber" : 78,
        "endColumnNumber" : 1
      },
      "nodeContext" : "{\n  int[] intArray={12,40,9,3,19,74,7,31,23,54,26,81,12};\n  TreeSort ts=new TreeSort(new Integer(intArray[0]));\n  for (int i=1; i < intArray.length; i++) {\n    ts.insert(ts.root,new Integer(intArray[i]));\n  }\n  System.out.print(\"Integer Array Sorted in Increasing Order: \");\n  ts.treeSort(ts.root);\n  System.out.println();\n  Double[] decimalArray={8.2,1.5,3.14159265,9.3,5.1,4.8,2.6};\n  TreeSort dts=new TreeSort(new Double(decimalArray[0]).doubleValue());\n  for (int i=1; i < decimalArray.length; i++) {\n    dts.decimalInsert(dts.root,new Double(decimalArray[i]).doubleValue());\n  }\n  System.out.print(\"Decimal Array, Sorted in Increasing Order: \");\n  dts.treeSort(dts.root);\n  System.out.println();\n  String[] stringArray={\"c\",\"a\",\"e\",\"b\",\"d\",\"dd\",\"da\",\"zz\",\"AA\",\"aa\",\"aB\",\"Hb\",\"Z\"};\n  int last=stringArray.length;\n  Arrays.sort(stringArray);\n  System.out.print(\"String Array Sorted in Alphabetical Order: \");\n  ts.insert(ts.root,last);\n  for (int i=0; i < last; i++) {\n    System.out.print(stringArray[i] + \"\\t\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 233,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1697,
        "startLineNumber" : 48,
        "startColumnNumber" : 0,
        "endLineNumber" : 78,
        "endColumnNumber" : 1
      },
      "nodeContext" : "public static void main(String args[]){\n  int[] intArray={12,40,9,3,19,74,7,31,23,54,26,81,12};\n  TreeSort ts=new TreeSort(new Integer(intArray[0]));\n  for (int i=1; i < intArray.length; i++) {\n    ts.insert(ts.root,new Integer(intArray[i]));\n  }\n  System.out.print(\"Integer Array Sorted in Increasing Order: \");\n  ts.treeSort(ts.root);\n  System.out.println();\n  Double[] decimalArray={8.2,1.5,3.14159265,9.3,5.1,4.8,2.6};\n  TreeSort dts=new TreeSort(new Double(decimalArray[0]).doubleValue());\n  for (int i=1; i < decimalArray.length; i++) {\n    dts.decimalInsert(dts.root,new Double(decimalArray[i]).doubleValue());\n  }\n  System.out.print(\"Decimal Array, Sorted in Increasing Order: \");\n  dts.treeSort(dts.root);\n  System.out.println();\n  String[] stringArray={\"c\",\"a\",\"e\",\"b\",\"d\",\"dd\",\"da\",\"zz\",\"AA\",\"aa\",\"aB\",\"Hb\",\"Z\"};\n  int last=stringArray.length;\n  Arrays.sort(stringArray);\n  System.out.print(\"String Array Sorted in Alphabetical Order: \");\n  ts.insert(ts.root,last);\n  for (int i=0; i < last; i++) {\n    System.out.print(stringArray[i] + \"\\t\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 243,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 33
      },
      "nodeContext" : "Arrays.sort(stringArray);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "stringArray",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 73,
      "startColumnNumber" : 26,
      "endLineNumber" : 73,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 73,
        "startColumnNumber" : 26,
        "endLineNumber" : 73,
        "endColumnNumber" : 40
      },
      "nodeContext" : "stringArray[i]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 73,
        "startColumnNumber" : 26,
        "endLineNumber" : 73,
        "endColumnNumber" : 45
      },
      "nodeContext" : "stringArray[i] + \"\\t\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 73,
        "startColumnNumber" : 9,
        "endLineNumber" : 73,
        "endColumnNumber" : 46
      },
      "nodeContext" : "System.out.print(stringArray[i] + \"\\t\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 73,
        "startColumnNumber" : 9,
        "endLineNumber" : 73,
        "endColumnNumber" : 47
      },
      "nodeContext" : "System.out.print(stringArray[i] + \"\\t\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 288,
        "startLineNumber" : 72,
        "startColumnNumber" : 33,
        "endLineNumber" : 77,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  System.out.print(stringArray[i] + \"\\t\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 313,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < last; i++) {\n  System.out.print(stringArray[i] + \"\\t\");\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1658,
        "startLineNumber" : 48,
        "startColumnNumber" : 39,
        "endLineNumber" : 78,
        "endColumnNumber" : 1
      },
      "nodeContext" : "{\n  int[] intArray={12,40,9,3,19,74,7,31,23,54,26,81,12};\n  TreeSort ts=new TreeSort(new Integer(intArray[0]));\n  for (int i=1; i < intArray.length; i++) {\n    ts.insert(ts.root,new Integer(intArray[i]));\n  }\n  System.out.print(\"Integer Array Sorted in Increasing Order: \");\n  ts.treeSort(ts.root);\n  System.out.println();\n  Double[] decimalArray={8.2,1.5,3.14159265,9.3,5.1,4.8,2.6};\n  TreeSort dts=new TreeSort(new Double(decimalArray[0]).doubleValue());\n  for (int i=1; i < decimalArray.length; i++) {\n    dts.decimalInsert(dts.root,new Double(decimalArray[i]).doubleValue());\n  }\n  System.out.print(\"Decimal Array, Sorted in Increasing Order: \");\n  dts.treeSort(dts.root);\n  System.out.println();\n  String[] stringArray={\"c\",\"a\",\"e\",\"b\",\"d\",\"dd\",\"da\",\"zz\",\"AA\",\"aa\",\"aB\",\"Hb\",\"Z\"};\n  int last=stringArray.length;\n  Arrays.sort(stringArray);\n  System.out.print(\"String Array Sorted in Alphabetical Order: \");\n  ts.insert(ts.root,last);\n  for (int i=0; i < last; i++) {\n    System.out.print(stringArray[i] + \"\\t\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 233,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1697,
        "startLineNumber" : 48,
        "startColumnNumber" : 0,
        "endLineNumber" : 78,
        "endColumnNumber" : 1
      },
      "nodeContext" : "public static void main(String args[]){\n  int[] intArray={12,40,9,3,19,74,7,31,23,54,26,81,12};\n  TreeSort ts=new TreeSort(new Integer(intArray[0]));\n  for (int i=1; i < intArray.length; i++) {\n    ts.insert(ts.root,new Integer(intArray[i]));\n  }\n  System.out.print(\"Integer Array Sorted in Increasing Order: \");\n  ts.treeSort(ts.root);\n  System.out.println();\n  Double[] decimalArray={8.2,1.5,3.14159265,9.3,5.1,4.8,2.6};\n  TreeSort dts=new TreeSort(new Double(decimalArray[0]).doubleValue());\n  for (int i=1; i < decimalArray.length; i++) {\n    dts.decimalInsert(dts.root,new Double(decimalArray[i]).doubleValue());\n  }\n  System.out.print(\"Decimal Array, Sorted in Increasing Order: \");\n  dts.treeSort(dts.root);\n  System.out.println();\n  String[] stringArray={\"c\",\"a\",\"e\",\"b\",\"d\",\"dd\",\"da\",\"zz\",\"AA\",\"aa\",\"aB\",\"Hb\",\"Z\"};\n  int last=stringArray.length;\n  Arrays.sort(stringArray);\n  System.out.print(\"String Array Sorted in Alphabetical Order: \");\n  ts.insert(ts.root,last);\n  for (int i=0; i < last; i++) {\n    System.out.print(stringArray[i] + \"\\t\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 243,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 73,
        "startColumnNumber" : 9,
        "endLineNumber" : 73,
        "endColumnNumber" : 47
      },
      "nodeContext" : "System.out.print(stringArray[i] + \"\\t\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 68,
    "startColumnNumber" : 19,
    "endLineNumber" : 68,
    "endColumnNumber" : 30
  }, {
    "charLength" : 11,
    "startLineNumber" : 69,
    "startColumnNumber" : 20,
    "endLineNumber" : 69,
    "endColumnNumber" : 31
  }, {
    "charLength" : 11,
    "startLineNumber" : 73,
    "startColumnNumber" : 26,
    "endLineNumber" : 73,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 6
  } ]
}