{
  "id" : 206,
  "expression" : "source.getCapability(FIREFOX_OPTIONS)",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/client/src/org/openqa/selenium/firefox/FirefoxOptions.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "source.getCapability(FIREFOX_OPTIONS)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 115,
      "startColumnNumber" : 17,
      "endLineNumber" : 115,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 115,
        "startColumnNumber" : 11,
        "endLineNumber" : 115,
        "endColumnNumber" : 54
      },
      "nodeContext" : "raw=source.getCapability(FIREFOX_OPTIONS)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 115,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Object raw=source.getCapability(FIREFOX_OPTIONS);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2785,
        "startLineNumber" : 98,
        "startColumnNumber" : 45,
        "endLineNumber" : 174,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this();\n  source.asMap().forEach((key,value) -> {\n    if (value != null) {\n      setCapability(key,value);\n    }\n  }\n);\n  if (source instanceof FirefoxOptions) {\n    mirror((FirefoxOptions)source);\n    return;\n  }\n  Object raw=source.getCapability(FIREFOX_OPTIONS);\n  if (raw == null) {\n    return;\n  }\n  if (raw instanceof FirefoxOptions) {\n    FirefoxOptions that=(FirefoxOptions)raw;\n    addArguments(that.args);\n    that.preferences.forEach(this::addPreference);\n    setLegacy(that.legacy);\n    if (that.logLevel != null) {\n      setLogLevel(that.logLevel);\n    }\n    if (that.binary != null) {\n      setCapability(BINARY,that.binary.asCapability());\n    }\n    if (that.profile != null) {\n      setProfile(that.profile);\n    }\n  }\n else   if (raw instanceof Map) {\n    Map<?,?> that=(Map<?,?>)raw;\n    if (that.containsKey(\"args\")) {\n      Object value=that.get(\"args\");\n      if (value instanceof String) {\n        addArguments((String)that.get(\"args\"));\n      }\n else       if (value instanceof List<?>) {\n        addArguments((List<String>)that.get(\"args\"));\n      }\n else {\n        addArguments(that.get(\"args\").toString());\n      }\n    }\n    if (that.containsKey(\"prefs\")) {\n      Map<String,Object> prefs=(Map<String,Object>)that.get(\"prefs\");\n      preferences.putAll(prefs);\n    }\n    if (that.containsKey(\"binary\")) {\n      setBinary((String)that.get(\"binary\"));\n    }\n    if (that.containsKey(\"log\")) {\n      Map<?,?> logStruct=(Map<?,?>)that.get(\"log\");\n      Object rawLevel=logStruct.get(\"level\");\n      if (rawLevel instanceof String) {\n        setLogLevel(FirefoxDriverLogLevel.fromString((String)rawLevel));\n      }\n else       if (rawLevel instanceof FirefoxDriverLogLevel) {\n        setLogLevel((FirefoxDriverLogLevel)rawLevel);\n      }\n    }\n    if (that.containsKey(\"profile\")) {\n      Object value=that.get(\"profile\");\n      if (value instanceof String) {\n        try {\n          setProfile(FirefoxProfile.fromJson((String)value));\n        }\n catch (        IOException e) {\n          throw new WebDriverException(e);\n        }\n      }\n else       if (value instanceof FirefoxProfile) {\n        setProfile((FirefoxProfile)value);\n      }\n else {\n        throw new WebDriverException(\"In FirefoxOptions, don't know how to convert profile: \" + that);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 390,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2828,
        "startLineNumber" : 98,
        "startColumnNumber" : 2,
        "endLineNumber" : 174,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public FirefoxOptions(Capabilities source){\n  this();\n  source.asMap().forEach((key,value) -> {\n    if (value != null) {\n      setCapability(key,value);\n    }\n  }\n);\n  if (source instanceof FirefoxOptions) {\n    mirror((FirefoxOptions)source);\n    return;\n  }\n  Object raw=source.getCapability(FIREFOX_OPTIONS);\n  if (raw == null) {\n    return;\n  }\n  if (raw instanceof FirefoxOptions) {\n    FirefoxOptions that=(FirefoxOptions)raw;\n    addArguments(that.args);\n    that.preferences.forEach(this::addPreference);\n    setLegacy(that.legacy);\n    if (that.logLevel != null) {\n      setLogLevel(that.logLevel);\n    }\n    if (that.binary != null) {\n      setCapability(BINARY,that.binary.asCapability());\n    }\n    if (that.profile != null) {\n      setProfile(that.profile);\n    }\n  }\n else   if (raw instanceof Map) {\n    Map<?,?> that=(Map<?,?>)raw;\n    if (that.containsKey(\"args\")) {\n      Object value=that.get(\"args\");\n      if (value instanceof String) {\n        addArguments((String)that.get(\"args\"));\n      }\n else       if (value instanceof List<?>) {\n        addArguments((List<String>)that.get(\"args\"));\n      }\n else {\n        addArguments(that.get(\"args\").toString());\n      }\n    }\n    if (that.containsKey(\"prefs\")) {\n      Map<String,Object> prefs=(Map<String,Object>)that.get(\"prefs\");\n      preferences.putAll(prefs);\n    }\n    if (that.containsKey(\"binary\")) {\n      setBinary((String)that.get(\"binary\"));\n    }\n    if (that.containsKey(\"log\")) {\n      Map<?,?> logStruct=(Map<?,?>)that.get(\"log\");\n      Object rawLevel=logStruct.get(\"level\");\n      if (rawLevel instanceof String) {\n        setLogLevel(FirefoxDriverLogLevel.fromString((String)rawLevel));\n      }\n else       if (rawLevel instanceof FirefoxDriverLogLevel) {\n        setLogLevel((FirefoxDriverLogLevel)rawLevel);\n      }\n    }\n    if (that.containsKey(\"profile\")) {\n      Object value=that.get(\"profile\");\n      if (value instanceof String) {\n        try {\n          setProfile(FirefoxProfile.fromJson((String)value));\n        }\n catch (        IOException e) {\n          throw new WebDriverException(e);\n        }\n      }\n else       if (value instanceof FirefoxProfile) {\n        setProfile((FirefoxProfile)value);\n      }\n else {\n        throw new WebDriverException(\"In FirefoxOptions, don't know how to convert profile: \" + that);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 397,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 115,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Object raw=source.getCapability(FIREFOX_OPTIONS);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.lang.Object"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 115,
    "startColumnNumber" : 17,
    "endLineNumber" : 115,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}