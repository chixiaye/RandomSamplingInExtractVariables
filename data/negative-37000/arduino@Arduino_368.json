{
  "id" : 368,
  "expression" : "Predicates",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/arduino-core/src/cc/arduino/contributions/packages/ContributionsIndexer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Predicates",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 347,
      "startColumnNumber" : 69,
      "endLineNumber" : 347,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 347,
        "startColumnNumber" : 69,
        "endLineNumber" : 347,
        "endColumnNumber" : 107
      },
      "nodeContext" : "Predicates.not(new BuiltInPredicate())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 347,
        "startColumnNumber" : 30,
        "endLineNumber" : 347,
        "endColumnNumber" : 108
      },
      "nodeContext" : "Collections2.filter(platformsWithName,Predicates.not(new BuiltInPredicate()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 347,
        "startColumnNumber" : 10,
        "endLineNumber" : 347,
        "endColumnNumber" : 108
      },
      "nodeContext" : "platformsWithName=Collections2.filter(platformsWithName,Predicates.not(new BuiltInPredicate()))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 347,
        "startColumnNumber" : 10,
        "endLineNumber" : 347,
        "endColumnNumber" : 109
      },
      "nodeContext" : "platformsWithName=Collections2.filter(platformsWithName,Predicates.not(new BuiltInPredicate()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 346,
        "startColumnNumber" : 42,
        "endLineNumber" : 348,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  platformsWithName=Collections2.filter(platformsWithName,Predicates.not(new BuiltInPredicate()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 155,
        "startLineNumber" : 346,
        "startColumnNumber" : 8,
        "endLineNumber" : 348,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (platformsWithName.size() > 1) {\n  platformsWithName=Collections2.filter(platformsWithName,Predicates.not(new BuiltInPredicate()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 379,
        "startLineNumber" : 344,
        "startColumnNumber" : 106,
        "endLineNumber" : 352,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  Collection<ContributedPlatform> platformsWithName=entry.getValue();\n  if (platformsWithName.size() > 1) {\n    platformsWithName=Collections2.filter(platformsWithName,Predicates.not(new BuiltInPredicate()));\n  }\n  for (  ContributedPlatform platform : platformsWithName) {\n    tools.addAll(platform.getResolvedTools());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 479,
        "startLineNumber" : 344,
        "startColumnNumber" : 6,
        "endLineNumber" : 352,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (Map.Entry<String,Collection<ContributedPlatform>> entry : platformsByName.asMap().entrySet()) {\n  Collection<ContributedPlatform> platformsWithName=entry.getValue();\n  if (platformsWithName.size() > 1) {\n    platformsWithName=Collections2.filter(platformsWithName,Predicates.not(new BuiltInPredicate()));\n  }\n  for (  ContributedPlatform platform : platformsWithName) {\n    tools.addAll(platform.getResolvedTools());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 66,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 917,
        "startLineNumber" : 335,
        "startColumnNumber" : 56,
        "endLineNumber" : 353,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Collection<ContributedPlatform> platforms=Collections2.filter(pack.getPlatforms(),new InstalledPredicate());\n  ImmutableListMultimap<String,ContributedPlatform> platformsByName=Multimaps.index(platforms,new Function<ContributedPlatform,String>(){\n    @Override public String apply(    ContributedPlatform contributedPlatform){\n      return contributedPlatform.getName();\n    }\n  }\n);\n  for (  Map.Entry<String,Collection<ContributedPlatform>> entry : platformsByName.asMap().entrySet()) {\n    Collection<ContributedPlatform> platformsWithName=entry.getValue();\n    if (platformsWithName.size() > 1) {\n      platformsWithName=Collections2.filter(platformsWithName,Predicates.not(new BuiltInPredicate()));\n    }\n    for (    ContributedPlatform platform : platformsWithName) {\n      tools.addAll(platform.getResolvedTools());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 123,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 969,
        "startLineNumber" : 335,
        "startColumnNumber" : 4,
        "endLineNumber" : 353,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (ContributedPackage pack : index.getPackages()) {\n  Collection<ContributedPlatform> platforms=Collections2.filter(pack.getPlatforms(),new InstalledPredicate());\n  ImmutableListMultimap<String,ContributedPlatform> platformsByName=Multimaps.index(platforms,new Function<ContributedPlatform,String>(){\n    @Override public String apply(    ContributedPlatform contributedPlatform){\n      return contributedPlatform.getName();\n    }\n  }\n);\n  for (  Map.Entry<String,Collection<ContributedPlatform>> entry : platformsByName.asMap().entrySet()) {\n    Collection<ContributedPlatform> platformsWithName=entry.getValue();\n    if (platformsWithName.size() > 1) {\n      platformsWithName=Collections2.filter(platformsWithName,Predicates.not(new BuiltInPredicate()));\n    }\n    for (    ContributedPlatform platform : platformsWithName) {\n      tools.addAll(platform.getResolvedTools());\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 131,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1113,
        "startLineNumber" : 330,
        "startColumnNumber" : 50,
        "endLineNumber" : 355,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Set<ContributedTool> tools=new HashSet<ContributedTool>();\n  if (index == null) {\n    return tools;\n  }\n  for (  ContributedPackage pack : index.getPackages()) {\n    Collection<ContributedPlatform> platforms=Collections2.filter(pack.getPlatforms(),new InstalledPredicate());\n    ImmutableListMultimap<String,ContributedPlatform> platformsByName=Multimaps.index(platforms,new Function<ContributedPlatform,String>(){\n      @Override public String apply(      ContributedPlatform contributedPlatform){\n        return contributedPlatform.getName();\n      }\n    }\n);\n    for (    Map.Entry<String,Collection<ContributedPlatform>> entry : platformsByName.asMap().entrySet()) {\n      Collection<ContributedPlatform> platformsWithName=entry.getValue();\n      if (platformsWithName.size() > 1) {\n        platformsWithName=Collections2.filter(platformsWithName,Predicates.not(new BuiltInPredicate()));\n      }\n      for (      ContributedPlatform platform : platformsWithName) {\n        tools.addAll(platform.getResolvedTools());\n      }\n    }\n  }\n  return tools;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 155,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1161,
        "startLineNumber" : 330,
        "startColumnNumber" : 2,
        "endLineNumber" : 355,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public Set<ContributedTool> getInstalledTools(){\n  Set<ContributedTool> tools=new HashSet<ContributedTool>();\n  if (index == null) {\n    return tools;\n  }\n  for (  ContributedPackage pack : index.getPackages()) {\n    Collection<ContributedPlatform> platforms=Collections2.filter(pack.getPlatforms(),new InstalledPredicate());\n    ImmutableListMultimap<String,ContributedPlatform> platformsByName=Multimaps.index(platforms,new Function<ContributedPlatform,String>(){\n      @Override public String apply(      ContributedPlatform contributedPlatform){\n        return contributedPlatform.getName();\n      }\n    }\n);\n    for (    Map.Entry<String,Collection<ContributedPlatform>> entry : platformsByName.asMap().entrySet()) {\n      Collection<ContributedPlatform> platformsWithName=entry.getValue();\n      if (platformsWithName.size() > 1) {\n        platformsWithName=Collections2.filter(platformsWithName,Predicates.not(new BuiltInPredicate()));\n      }\n      for (      ContributedPlatform platform : platformsWithName) {\n        tools.addAll(platform.getResolvedTools());\n      }\n    }\n  }\n  return tools;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 163,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 347,
        "startColumnNumber" : 10,
        "endLineNumber" : 347,
        "endColumnNumber" : 109
      },
      "nodeContext" : "platformsWithName=Collections2.filter(platformsWithName,Predicates.not(new BuiltInPredicate()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 347,
    "startColumnNumber" : 69,
    "endLineNumber" : 347,
    "endColumnNumber" : 79
  } ],
  "layoutRelationDataList" : [ ]
}