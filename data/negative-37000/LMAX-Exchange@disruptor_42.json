{
  "id" : 42,
  "expression" : "running.compareAndSet(false,true)",
  "projectName" : "LMAX-Exchange@disruptor",
  "commitID" : "6d8500d39ac15cc2fdbc3dbf2e3a97fbe425b8fa",
  "filePath" : "/src/main/java/com/lmax/disruptor/BatchEventProcessor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "running.compareAndSet(false,true)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 97,
      "startColumnNumber" : 13,
      "endLineNumber" : 97,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 97,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 47
      },
      "nodeContext" : "!running.compareAndSet(false,true)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 100,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!running.compareAndSet(false,true)) {\n  throw new IllegalStateException(\"Thread is already running\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1248,
        "startLineNumber" : 96,
        "startColumnNumber" : 4,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!running.compareAndSet(false,true)) {\n    throw new IllegalStateException(\"Thread is already running\");\n  }\n  sequenceBarrier.clearAlert();\n  notifyStart();\n  T event=null;\n  long nextSequence=sequence.get() + 1L;\n  while (true) {\n    try {\n      final long availableSequence=sequenceBarrier.waitFor(nextSequence);\n      while (nextSequence <= availableSequence) {\n        event=ringBuffer.getPublished(nextSequence);\n        eventHandler.onEvent(event,nextSequence,nextSequence == availableSequence);\n        nextSequence++;\n      }\n      sequence.set(availableSequence);\n    }\n catch (    final AlertException ex) {\n      if (!running.get()) {\n        break;\n      }\n    }\ncatch (    final Throwable ex) {\n      exceptionHandler.handleEventException(ex,nextSequence,event);\n      sequence.set(nextSequence);\n      nextSequence++;\n    }\n  }\n  notifyShutdown();\n  running.set(false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 123,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1473,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * It is ok to have another thread rerun this method after a halt().\n * @throws IllegalStateException if this object instance is already running in a thread\n */\n@Override public void run(){\n  if (!running.compareAndSet(false,true)) {\n    throw new IllegalStateException(\"Thread is already running\");\n  }\n  sequenceBarrier.clearAlert();\n  notifyStart();\n  T event=null;\n  long nextSequence=sequence.get() + 1L;\n  while (true) {\n    try {\n      final long availableSequence=sequenceBarrier.waitFor(nextSequence);\n      while (nextSequence <= availableSequence) {\n        event=ringBuffer.getPublished(nextSequence);\n        eventHandler.onEvent(event,nextSequence,nextSequence == availableSequence);\n        nextSequence++;\n      }\n      sequence.set(availableSequence);\n    }\n catch (    final AlertException ex) {\n      if (!running.get()) {\n        break;\n      }\n    }\ncatch (    final Throwable ex) {\n      exceptionHandler.handleEventException(ex,nextSequence,event);\n      sequence.set(nextSequence);\n      nextSequence++;\n    }\n  }\n  notifyShutdown();\n  running.set(false);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 130,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 97,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 47
      },
      "nodeContext" : "!running.compareAndSet(false,true)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 97,
    "startColumnNumber" : 13,
    "endLineNumber" : 97,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ ]
}