{
  "id" : 81,
  "expression" : "nonNullObservable",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/flowable/FlowableCombineLatestTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "nonNullObservable",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 74,
      "startColumnNumber" : 46,
      "endLineNumber" : 74,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 304,
        "startLineNumber" : 74,
        "startColumnNumber" : 16,
        "endLineNumber" : 79,
        "endColumnNumber" : 18
      },
      "nodeContext" : "combineLatest(nullObservable,nonNullObservable,new BiFunction<Boolean,Boolean,Boolean>(){\n  @Override public Boolean apply(  Boolean bool1,  Boolean bool2){\n    return bool1 == null ? null : bool2;\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 38,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 332,
        "startLineNumber" : 73,
        "startColumnNumber" : 26,
        "endLineNumber" : 79,
        "endColumnNumber" : 18
      },
      "nodeContext" : "combined=combineLatest(nullObservable,nonNullObservable,new BiFunction<Boolean,Boolean,Boolean>(){\n  @Override public Boolean apply(  Boolean bool1,  Boolean bool2){\n    return bool1 == null ? null : bool2;\n  }\n}\n)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 40,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 351,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 19
      },
      "nodeContext" : "Flowable<Boolean> combined=combineLatest(nullObservable,nonNullObservable,new BiFunction<Boolean,Boolean,Boolean>(){\n  @Override public Boolean apply(  Boolean bool1,  Boolean bool2){\n    return bool1 == null ? null : bool2;\n  }\n}\n);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 46,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 788,
        "startLineNumber" : 69,
        "startColumnNumber" : 52,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Flowable<Boolean> nullObservable=BehaviorProcessor.createDefault((Boolean)null);\n  Flowable<Boolean> nonNullObservable=BehaviorProcessor.createDefault(true);\n  Flowable<Boolean> combined=combineLatest(nullObservable,nonNullObservable,new BiFunction<Boolean,Boolean,Boolean>(){\n    @Override public Boolean apply(    Boolean bool1,    Boolean bool2){\n      return bool1 == null ? null : bool2;\n    }\n  }\n);\n  combined.subscribe(new Consumer<Boolean>(){\n    @Override public void accept(    Boolean aBoolean){\n      assertNull(aBoolean);\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 881,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Ignore(\"No longer allowed\") @Test public void testNullEmitting() throws Exception {\n  Flowable<Boolean> nullObservable=BehaviorProcessor.createDefault((Boolean)null);\n  Flowable<Boolean> nonNullObservable=BehaviorProcessor.createDefault(true);\n  Flowable<Boolean> combined=combineLatest(nullObservable,nonNullObservable,new BiFunction<Boolean,Boolean,Boolean>(){\n    @Override public Boolean apply(    Boolean bool1,    Boolean bool2){\n      return bool1 == null ? null : bool2;\n    }\n  }\n);\n  combined.subscribe(new Consumer<Boolean>(){\n    @Override public void accept(    Boolean aBoolean){\n      assertNull(aBoolean);\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 111,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 304,
        "startLineNumber" : 74,
        "startColumnNumber" : 16,
        "endLineNumber" : 79,
        "endColumnNumber" : 18
      },
      "nodeContext" : "combineLatest(nullObservable,nonNullObservable,new BiFunction<Boolean,Boolean,Boolean>(){\n  @Override public Boolean apply(  Boolean bool1,  Boolean bool2){\n    return bool1 == null ? null : bool2;\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 38,
      "astHeight" : 9
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.Flowable<java.lang.Boolean>"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 74,
    "startColumnNumber" : 46,
    "endLineNumber" : 74,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ]
}