{
  "id" : 134,
  "expression" : "Float.class",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson/src/main/java/org/redisson/liveobject/misc/ClassUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Float.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 256,
      "startColumnNumber" : 19,
      "endLineNumber" : 256,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 256,
        "startColumnNumber" : 12,
        "endLineNumber" : 256,
        "endColumnNumber" : 31
      },
      "nodeContext" : "return Float.class;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 255,
        "startColumnNumber" : 42,
        "endLineNumber" : 257,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return Float.class;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 255,
        "startColumnNumber" : 8,
        "endLineNumber" : 257,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Float.TYPE.equals(primitive)) {\n  return Float.class;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 866,
        "startLineNumber" : 232,
        "startColumnNumber" : 71,
        "endLineNumber" : 263,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!primitive.isPrimitive()) {\n    return primitive;\n  }\n  if (Boolean.TYPE.equals(primitive)) {\n    return Boolean.class;\n  }\n  if (Character.TYPE.equals(primitive)) {\n    return Character.class;\n  }\n  if (Byte.TYPE.equals(primitive)) {\n    return Byte.class;\n  }\n  if (Short.TYPE.equals(primitive)) {\n    return Short.class;\n  }\n  if (Integer.TYPE.equals(primitive)) {\n    return Integer.class;\n  }\n  if (Long.TYPE.equals(primitive)) {\n    return Long.class;\n  }\n  if (Float.TYPE.equals(primitive)) {\n    return Float.class;\n  }\n  if (Double.TYPE.equals(primitive)) {\n    return Double.class;\n  }\n  throw new RuntimeException(\"Error translating type:\" + primitive);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1233,
        "startLineNumber" : 224,
        "startColumnNumber" : 4,
        "endLineNumber" : 263,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * If this specified class represents a primitive type (int, float, etc.) then it is translated into its wrapper type (Integer, Float, etc.). If the passed class is not a primitive then it is just returned.\n * @param primitive class\n * @return class\n */\nprivate static Class<?> translateFromPrimitive(Class<?> primitive){\n  if (!primitive.isPrimitive()) {\n    return primitive;\n  }\n  if (Boolean.TYPE.equals(primitive)) {\n    return Boolean.class;\n  }\n  if (Character.TYPE.equals(primitive)) {\n    return Character.class;\n  }\n  if (Byte.TYPE.equals(primitive)) {\n    return Byte.class;\n  }\n  if (Short.TYPE.equals(primitive)) {\n    return Short.class;\n  }\n  if (Integer.TYPE.equals(primitive)) {\n    return Integer.class;\n  }\n  if (Long.TYPE.equals(primitive)) {\n    return Long.class;\n  }\n  if (Float.TYPE.equals(primitive)) {\n    return Float.class;\n  }\n  if (Double.TYPE.equals(primitive)) {\n    return Double.class;\n  }\n  throw new RuntimeException(\"Error translating type:\" + primitive);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 256,
        "startColumnNumber" : 12,
        "endLineNumber" : 256,
        "endColumnNumber" : 31
      },
      "nodeContext" : "return Float.class;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<java.lang.Float>"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 256,
    "startColumnNumber" : 19,
    "endLineNumber" : 256,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}