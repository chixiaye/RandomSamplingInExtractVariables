{
  "id" : 24,
  "expression" : "\"1\"",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/test/java/org/apache/kafka/streams/kstream/internals/SlidingWindowedKStreamImplTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"1\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 85,
      "startColumnNumber" : 36,
      "endLineNumber" : 85,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 85,
        "startColumnNumber" : 21,
        "endLineNumber" : 85,
        "endColumnNumber" : 66
      },
      "nodeContext" : "new Windowed<>(\"1\",new TimeWindow(0L,100L))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 85,
        "endColumnNumber" : 67
      },
      "nodeContext" : "supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(0L,100L)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 209,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(0L,100L))),equalTo(ValueAndTimestamp.make(1L,100L)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 210,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(0L,100L))),equalTo(ValueAndTimestamp.make(1L,100L)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1911,
        "startLineNumber" : 73,
        "startColumnNumber" : 44,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final MockApiProcessorSupplier<Windowed<String>,Long,Void,Void> supplier=new MockApiProcessorSupplier<>();\n  windowedStream.count().toStream().process(supplier);\n  try (final TopologyTestDriver driver=new TopologyTestDriver(builder.build(),props)){\n    processData(driver);\n  }\n   assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(0L,100L))),equalTo(ValueAndTimestamp.make(1L,100L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(101L,201L))),equalTo(ValueAndTimestamp.make(1L,150L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(50L,150L))),equalTo(ValueAndTimestamp.make(2L,150L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(400L,500L))),equalTo(ValueAndTimestamp.make(1L,500L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"2\",new TimeWindow(100L,200L))),equalTo(ValueAndTimestamp.make(2L,200L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"2\",new TimeWindow(50L,150L))),equalTo(ValueAndTimestamp.make(1L,150L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"2\",new TimeWindow(151L,251L))),equalTo(ValueAndTimestamp.make(1L,200L)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 240,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1961,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldCountSlidingWindows(){\n  final MockApiProcessorSupplier<Windowed<String>,Long,Void,Void> supplier=new MockApiProcessorSupplier<>();\n  windowedStream.count().toStream().process(supplier);\n  try (final TopologyTestDriver driver=new TopologyTestDriver(builder.build(),props)){\n    processData(driver);\n  }\n   assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(0L,100L))),equalTo(ValueAndTimestamp.make(1L,100L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(101L,201L))),equalTo(ValueAndTimestamp.make(1L,150L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(50L,150L))),equalTo(ValueAndTimestamp.make(2L,150L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(400L,500L))),equalTo(ValueAndTimestamp.make(1L,500L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"2\",new TimeWindow(100L,200L))),equalTo(ValueAndTimestamp.make(2L,200L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"2\",new TimeWindow(50L,150L))),equalTo(ValueAndTimestamp.make(1L,150L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"2\",new TimeWindow(151L,251L))),equalTo(ValueAndTimestamp.make(1L,200L)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 246,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 85,
        "startColumnNumber" : 21,
        "endLineNumber" : 85,
        "endColumnNumber" : 66
      },
      "nodeContext" : "new Windowed<>(\"1\",new TimeWindow(0L,100L))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"1\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 89,
      "startColumnNumber" : 36,
      "endLineNumber" : 89,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 89,
        "startColumnNumber" : 21,
        "endLineNumber" : 89,
        "endColumnNumber" : 68
      },
      "nodeContext" : "new Windowed<>(\"1\",new TimeWindow(101L,201L))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 88,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 69
      },
      "nodeContext" : "supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(101L,201L)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 211,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(101L,201L))),equalTo(ValueAndTimestamp.make(1L,150L)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 212,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(101L,201L))),equalTo(ValueAndTimestamp.make(1L,150L)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1911,
        "startLineNumber" : 73,
        "startColumnNumber" : 44,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final MockApiProcessorSupplier<Windowed<String>,Long,Void,Void> supplier=new MockApiProcessorSupplier<>();\n  windowedStream.count().toStream().process(supplier);\n  try (final TopologyTestDriver driver=new TopologyTestDriver(builder.build(),props)){\n    processData(driver);\n  }\n   assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(0L,100L))),equalTo(ValueAndTimestamp.make(1L,100L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(101L,201L))),equalTo(ValueAndTimestamp.make(1L,150L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(50L,150L))),equalTo(ValueAndTimestamp.make(2L,150L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(400L,500L))),equalTo(ValueAndTimestamp.make(1L,500L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"2\",new TimeWindow(100L,200L))),equalTo(ValueAndTimestamp.make(2L,200L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"2\",new TimeWindow(50L,150L))),equalTo(ValueAndTimestamp.make(1L,150L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"2\",new TimeWindow(151L,251L))),equalTo(ValueAndTimestamp.make(1L,200L)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 240,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1961,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldCountSlidingWindows(){\n  final MockApiProcessorSupplier<Windowed<String>,Long,Void,Void> supplier=new MockApiProcessorSupplier<>();\n  windowedStream.count().toStream().process(supplier);\n  try (final TopologyTestDriver driver=new TopologyTestDriver(builder.build(),props)){\n    processData(driver);\n  }\n   assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(0L,100L))),equalTo(ValueAndTimestamp.make(1L,100L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(101L,201L))),equalTo(ValueAndTimestamp.make(1L,150L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(50L,150L))),equalTo(ValueAndTimestamp.make(2L,150L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(400L,500L))),equalTo(ValueAndTimestamp.make(1L,500L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"2\",new TimeWindow(100L,200L))),equalTo(ValueAndTimestamp.make(2L,200L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"2\",new TimeWindow(50L,150L))),equalTo(ValueAndTimestamp.make(1L,150L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"2\",new TimeWindow(151L,251L))),equalTo(ValueAndTimestamp.make(1L,200L)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 246,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 89,
        "startColumnNumber" : 21,
        "endLineNumber" : 89,
        "endColumnNumber" : 68
      },
      "nodeContext" : "new Windowed<>(\"1\",new TimeWindow(101L,201L))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"1\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 93,
      "startColumnNumber" : 36,
      "endLineNumber" : 93,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 93,
        "startColumnNumber" : 21,
        "endLineNumber" : 93,
        "endColumnNumber" : 67
      },
      "nodeContext" : "new Windowed<>(\"1\",new TimeWindow(50L,150L))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 93,
        "endColumnNumber" : 68
      },
      "nodeContext" : "supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(50L,150L)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 210,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(50L,150L))),equalTo(ValueAndTimestamp.make(2L,150L)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 211,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(50L,150L))),equalTo(ValueAndTimestamp.make(2L,150L)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1911,
        "startLineNumber" : 73,
        "startColumnNumber" : 44,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final MockApiProcessorSupplier<Windowed<String>,Long,Void,Void> supplier=new MockApiProcessorSupplier<>();\n  windowedStream.count().toStream().process(supplier);\n  try (final TopologyTestDriver driver=new TopologyTestDriver(builder.build(),props)){\n    processData(driver);\n  }\n   assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(0L,100L))),equalTo(ValueAndTimestamp.make(1L,100L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(101L,201L))),equalTo(ValueAndTimestamp.make(1L,150L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(50L,150L))),equalTo(ValueAndTimestamp.make(2L,150L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(400L,500L))),equalTo(ValueAndTimestamp.make(1L,500L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"2\",new TimeWindow(100L,200L))),equalTo(ValueAndTimestamp.make(2L,200L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"2\",new TimeWindow(50L,150L))),equalTo(ValueAndTimestamp.make(1L,150L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"2\",new TimeWindow(151L,251L))),equalTo(ValueAndTimestamp.make(1L,200L)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 240,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1961,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldCountSlidingWindows(){\n  final MockApiProcessorSupplier<Windowed<String>,Long,Void,Void> supplier=new MockApiProcessorSupplier<>();\n  windowedStream.count().toStream().process(supplier);\n  try (final TopologyTestDriver driver=new TopologyTestDriver(builder.build(),props)){\n    processData(driver);\n  }\n   assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(0L,100L))),equalTo(ValueAndTimestamp.make(1L,100L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(101L,201L))),equalTo(ValueAndTimestamp.make(1L,150L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(50L,150L))),equalTo(ValueAndTimestamp.make(2L,150L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(400L,500L))),equalTo(ValueAndTimestamp.make(1L,500L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"2\",new TimeWindow(100L,200L))),equalTo(ValueAndTimestamp.make(2L,200L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"2\",new TimeWindow(50L,150L))),equalTo(ValueAndTimestamp.make(1L,150L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"2\",new TimeWindow(151L,251L))),equalTo(ValueAndTimestamp.make(1L,200L)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 246,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 93,
        "startColumnNumber" : 21,
        "endLineNumber" : 93,
        "endColumnNumber" : 67
      },
      "nodeContext" : "new Windowed<>(\"1\",new TimeWindow(50L,150L))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"1\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 97,
      "startColumnNumber" : 36,
      "endLineNumber" : 97,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 97,
        "startColumnNumber" : 21,
        "endLineNumber" : 97,
        "endColumnNumber" : 68
      },
      "nodeContext" : "new Windowed<>(\"1\",new TimeWindow(400L,500L))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 96,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 69
      },
      "nodeContext" : "supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(400L,500L)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 211,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(400L,500L))),equalTo(ValueAndTimestamp.make(1L,500L)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 212,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(400L,500L))),equalTo(ValueAndTimestamp.make(1L,500L)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1911,
        "startLineNumber" : 73,
        "startColumnNumber" : 44,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final MockApiProcessorSupplier<Windowed<String>,Long,Void,Void> supplier=new MockApiProcessorSupplier<>();\n  windowedStream.count().toStream().process(supplier);\n  try (final TopologyTestDriver driver=new TopologyTestDriver(builder.build(),props)){\n    processData(driver);\n  }\n   assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(0L,100L))),equalTo(ValueAndTimestamp.make(1L,100L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(101L,201L))),equalTo(ValueAndTimestamp.make(1L,150L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(50L,150L))),equalTo(ValueAndTimestamp.make(2L,150L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(400L,500L))),equalTo(ValueAndTimestamp.make(1L,500L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"2\",new TimeWindow(100L,200L))),equalTo(ValueAndTimestamp.make(2L,200L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"2\",new TimeWindow(50L,150L))),equalTo(ValueAndTimestamp.make(1L,150L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"2\",new TimeWindow(151L,251L))),equalTo(ValueAndTimestamp.make(1L,200L)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 240,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1961,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldCountSlidingWindows(){\n  final MockApiProcessorSupplier<Windowed<String>,Long,Void,Void> supplier=new MockApiProcessorSupplier<>();\n  windowedStream.count().toStream().process(supplier);\n  try (final TopologyTestDriver driver=new TopologyTestDriver(builder.build(),props)){\n    processData(driver);\n  }\n   assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(0L,100L))),equalTo(ValueAndTimestamp.make(1L,100L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(101L,201L))),equalTo(ValueAndTimestamp.make(1L,150L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(50L,150L))),equalTo(ValueAndTimestamp.make(2L,150L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"1\",new TimeWindow(400L,500L))),equalTo(ValueAndTimestamp.make(1L,500L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"2\",new TimeWindow(100L,200L))),equalTo(ValueAndTimestamp.make(2L,200L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"2\",new TimeWindow(50L,150L))),equalTo(ValueAndTimestamp.make(1L,150L)));\n  assertThat(supplier.theCapturedProcessor().lastValueAndTimestampPerKey().get(new Windowed<>(\"2\",new TimeWindow(151L,251L))),equalTo(ValueAndTimestamp.make(1L,200L)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 246,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 97,
        "startColumnNumber" : 21,
        "endLineNumber" : 97,
        "endColumnNumber" : 68
      },
      "nodeContext" : "new Windowed<>(\"1\",new TimeWindow(400L,500L))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 85,
    "startColumnNumber" : 36,
    "endLineNumber" : 85,
    "endColumnNumber" : 39
  }, {
    "charLength" : 3,
    "startLineNumber" : 89,
    "startColumnNumber" : 36,
    "endLineNumber" : 89,
    "endColumnNumber" : 39
  }, {
    "charLength" : 3,
    "startLineNumber" : 93,
    "startColumnNumber" : 36,
    "endLineNumber" : 93,
    "endColumnNumber" : 39
  }, {
    "charLength" : 3,
    "startLineNumber" : 97,
    "startColumnNumber" : 36,
    "endLineNumber" : 97,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  } ]
}