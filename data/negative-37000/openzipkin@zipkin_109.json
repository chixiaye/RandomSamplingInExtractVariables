{
  "id" : 109,
  "expression" : "Annotation.create(System.currentTimeMillis() * 1000,SERVER_RECV,endpoint)",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin-server/src/it/minimal-dependencies/src/test/java/zipkin/minimal/ZipkinServerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Annotation.create(System.currentTimeMillis() * 1000,SERVER_RECV,endpoint)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 75,
      "startLineNumber" : 58,
      "startColumnNumber" : 21,
      "endLineNumber" : 58,
      "endColumnNumber" : 96
    },
    "astNodeNumber" : 10,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 58,
        "startColumnNumber" : 15,
        "endLineNumber" : 58,
        "endColumnNumber" : 96
      },
      "nodeContext" : "ann=Annotation.create(System.currentTimeMillis() * 1000,SERVER_RECV,endpoint)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 97
      },
      "nodeContext" : "Annotation ann=Annotation.create(System.currentTimeMillis() * 1000,SERVER_RECV,endpoint);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 751,
        "startLineNumber" : 55,
        "startColumnNumber" : 51,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String service=\"web\";\n  Endpoint endpoint=Endpoint.create(service,127 << 24 | 1,80);\n  Annotation ann=Annotation.create(System.currentTimeMillis() * 1000,SERVER_RECV,endpoint);\n  Span span=Span.builder().id(1L).traceId(1L).name(\"get\").addAnnotation(ann).build();\n  mockMvc.perform(post(\"/api/v1/spans\").content(Codec.JSON.writeSpans(asList(span)))).andExpect(status().isAccepted());\n  Thread.sleep(1000);\n  mockMvc.perform(get(\"/api/v1/spans?serviceName=\" + service)).andExpect(status().isOk()).andExpect(content().string(\"[\\\"\" + span.name + \"\\\"]\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 808,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void readsBackSpanName() throws Exception {\n  String service=\"web\";\n  Endpoint endpoint=Endpoint.create(service,127 << 24 | 1,80);\n  Annotation ann=Annotation.create(System.currentTimeMillis() * 1000,SERVER_RECV,endpoint);\n  Span span=Span.builder().id(1L).traceId(1L).name(\"get\").addAnnotation(ann).build();\n  mockMvc.perform(post(\"/api/v1/spans\").content(Codec.JSON.writeSpans(asList(span)))).andExpect(status().isAccepted());\n  Thread.sleep(1000);\n  mockMvc.perform(get(\"/api/v1/spans?serviceName=\" + service)).andExpect(status().isOk()).andExpect(content().string(\"[\\\"\" + span.name + \"\\\"]\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 97
      },
      "nodeContext" : "Annotation ann=Annotation.create(System.currentTimeMillis() * 1000,SERVER_RECV,endpoint);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 9,
    "type" : "zipkin.Annotation"
  } ],
  "positionList" : [ {
    "charLength" : 75,
    "startLineNumber" : 58,
    "startColumnNumber" : 21,
    "endLineNumber" : 58,
    "endColumnNumber" : 96
  } ],
  "layoutRelationDataList" : [ ]
}