{
  "id" : 422,
  "expression" : "(BinaryExpression)expression",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-core/src/main/java/com/baomidou/mybatisplus/plugins/parser/logicdelete/LogicDeleteSqlParser.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(BinaryExpression)expression",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 241,
      "startColumnNumber" : 52,
      "endLineNumber" : 241,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 241,
        "startColumnNumber" : 33,
        "endLineNumber" : 241,
        "endColumnNumber" : 81
      },
      "nodeContext" : "binaryExpression=(BinaryExpression)expression",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 241,
        "startColumnNumber" : 16,
        "endLineNumber" : 241,
        "endColumnNumber" : 82
      },
      "nodeContext" : "BinaryExpression binaryExpression=(BinaryExpression)expression;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 468,
        "startLineNumber" : 240,
        "startColumnNumber" : 56,
        "endLineNumber" : 248,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  BinaryExpression binaryExpression=(BinaryExpression)expression;\n  if (binaryExpression.getLeftExpression() instanceof FromItem) {\n    processFromItem((FromItem)binaryExpression.getLeftExpression());\n  }\n  if (binaryExpression.getRightExpression() instanceof FromItem) {\n    processFromItem((FromItem)binaryExpression.getRightExpression());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 512,
        "startLineNumber" : 240,
        "startColumnNumber" : 12,
        "endLineNumber" : 248,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (expression instanceof BinaryExpression) {\n  BinaryExpression binaryExpression=(BinaryExpression)expression;\n  if (binaryExpression.getLeftExpression() instanceof FromItem) {\n    processFromItem((FromItem)binaryExpression.getLeftExpression());\n  }\n  if (binaryExpression.getRightExpression() instanceof FromItem) {\n    processFromItem((FromItem)binaryExpression.getRightExpression());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 596,
        "startLineNumber" : 239,
        "startColumnNumber" : 15,
        "endLineNumber" : 250,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (expression instanceof BinaryExpression) {\n    BinaryExpression binaryExpression=(BinaryExpression)expression;\n    if (binaryExpression.getLeftExpression() instanceof FromItem) {\n      processFromItem((FromItem)binaryExpression.getLeftExpression());\n    }\n    if (binaryExpression.getRightExpression() instanceof FromItem) {\n      processFromItem((FromItem)binaryExpression.getRightExpression());\n    }\n  }\n  return new AndExpression(expression,equalsTo);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 666,
        "startLineNumber" : 237,
        "startColumnNumber" : 8,
        "endLineNumber" : 250,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (expression == null) {\n  return equalsTo;\n}\n else {\n  if (expression instanceof BinaryExpression) {\n    BinaryExpression binaryExpression=(BinaryExpression)expression;\n    if (binaryExpression.getLeftExpression() instanceof FromItem) {\n      processFromItem((FromItem)binaryExpression.getLeftExpression());\n    }\n    if (binaryExpression.getRightExpression() instanceof FromItem) {\n      processFromItem((FromItem)binaryExpression.getRightExpression());\n    }\n  }\n  return new AndExpression(expression,equalsTo);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 63,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 933,
        "startLineNumber" : 231,
        "startColumnNumber" : 79,
        "endLineNumber" : 251,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  EqualsTo equalsTo=new EqualsTo();\n  equalsTo.setLeftExpression(this.getAliasColumn(table));\n  equalsTo.setRightExpression(logicDeleteHandler.getValue(table.getName()));\n  if (expression == null) {\n    return equalsTo;\n  }\n else {\n    if (expression instanceof BinaryExpression) {\n      BinaryExpression binaryExpression=(BinaryExpression)expression;\n      if (binaryExpression.getLeftExpression() instanceof FromItem) {\n        processFromItem((FromItem)binaryExpression.getLeftExpression());\n      }\n      if (binaryExpression.getRightExpression() instanceof FromItem) {\n        processFromItem((FromItem)binaryExpression.getRightExpression());\n      }\n    }\n    return new AndExpression(expression,equalsTo);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1036,
        "startLineNumber" : 228,
        "startColumnNumber" : 4,
        "endLineNumber" : 251,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 处理条件\n */\nprotected Expression builderExpression(Expression expression,Table table){\n  EqualsTo equalsTo=new EqualsTo();\n  equalsTo.setLeftExpression(this.getAliasColumn(table));\n  equalsTo.setRightExpression(logicDeleteHandler.getValue(table.getName()));\n  if (expression == null) {\n    return equalsTo;\n  }\n else {\n    if (expression instanceof BinaryExpression) {\n      BinaryExpression binaryExpression=(BinaryExpression)expression;\n      if (binaryExpression.getLeftExpression() instanceof FromItem) {\n        processFromItem((FromItem)binaryExpression.getLeftExpression());\n      }\n      if (binaryExpression.getRightExpression() instanceof FromItem) {\n        processFromItem((FromItem)binaryExpression.getRightExpression());\n      }\n    }\n    return new AndExpression(expression,equalsTo);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 241,
        "startColumnNumber" : 16,
        "endLineNumber" : 241,
        "endColumnNumber" : 82
      },
      "nodeContext" : "BinaryExpression binaryExpression=(BinaryExpression)expression;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "com.baomidou.mybatisplus.plugins.parser.logicdelete.BinaryExpression"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 241,
    "startColumnNumber" : 52,
    "endLineNumber" : 241,
    "endColumnNumber" : 81
  } ],
  "layoutRelationDataList" : [ ]
}