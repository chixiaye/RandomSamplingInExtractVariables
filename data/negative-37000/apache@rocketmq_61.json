{
  "id" : 61,
  "expression" : "String.format(\"%s file  is not data\",fileHome + File.separator + fileName)",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/acl/src/main/java/org/apache/rocketmq/acl/plain/PlainPermissionLoader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "String.format(\"%s file  is not data\",fileHome + File.separator + fileName)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 75,
      "startLineNumber" : 72,
      "startColumnNumber" : 35,
      "endLineNumber" : 72,
      "endColumnNumber" : 110
    },
    "astNodeNumber" : 10,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 72,
        "startColumnNumber" : 18,
        "endLineNumber" : 72,
        "endColumnNumber" : 111
      },
      "nodeContext" : "new AclException(String.format(\"%s file  is not data\",fileHome + File.separator + fileName))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 72,
        "startColumnNumber" : 12,
        "endLineNumber" : 72,
        "endColumnNumber" : 112
      },
      "nodeContext" : "throw new AclException(String.format(\"%s file  is not data\",fileHome + File.separator + fileName));\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 71,
        "startColumnNumber" : 68,
        "endLineNumber" : 73,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new AclException(String.format(\"%s file  is not data\",fileHome + File.separator + fileName));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (plainAclConfData == null || plainAclConfData.isEmpty()) {\n  throw new AclException(String.format(\"%s file  is not data\",fileHome + File.separator + fileName));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1771,
        "startLineNumber" : 63,
        "startColumnNumber" : 23,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,PlainAccessResource> plainAccessResourceMap=new HashMap<>();\n  List<RemoteAddressStrategy> globalWhiteRemoteAddressStrategy=new ArrayList<>();\n  JSONObject plainAclConfData=AclUtils.getYamlDataObject(fileHome + File.separator + fileName,JSONObject.class);\n  if (plainAclConfData == null || plainAclConfData.isEmpty()) {\n    throw new AclException(String.format(\"%s file  is not data\",fileHome + File.separator + fileName));\n  }\n  log.info(\"Broker plain acl conf data is : \",plainAclConfData.toString());\n  JSONArray globalWhiteRemoteAddressesList=plainAclConfData.getJSONArray(\"globalWhiteRemoteAddresses\");\n  if (globalWhiteRemoteAddressesList != null && !globalWhiteRemoteAddressesList.isEmpty()) {\n    for (int i=0; i < globalWhiteRemoteAddressesList.size(); i++) {\n      globalWhiteRemoteAddressStrategy.add(remoteAddressStrategyFactory.getRemoteAddressStrategy(globalWhiteRemoteAddressesList.getString(i)));\n    }\n  }\n  JSONArray accounts=plainAclConfData.getJSONArray(\"accounts\");\n  if (accounts != null && !accounts.isEmpty()) {\n    List<PlainAccessConfig> plainAccessConfigList=accounts.toJavaList(PlainAccessConfig.class);\n    for (    PlainAccessConfig plainAccessConfig : plainAccessConfigList) {\n      PlainAccessResource plainAccessResource=buildPlainAccessResource(plainAccessConfig);\n      plainAccessResourceMap.put(plainAccessResource.getAccessKey(),plainAccessResource);\n    }\n  }\n  this.globalWhiteRemoteAddressStrategy=globalWhiteRemoteAddressStrategy;\n  this.plainAccessResourceMap=plainAccessResourceMap;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 187,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1790,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void load(){\n  Map<String,PlainAccessResource> plainAccessResourceMap=new HashMap<>();\n  List<RemoteAddressStrategy> globalWhiteRemoteAddressStrategy=new ArrayList<>();\n  JSONObject plainAclConfData=AclUtils.getYamlDataObject(fileHome + File.separator + fileName,JSONObject.class);\n  if (plainAclConfData == null || plainAclConfData.isEmpty()) {\n    throw new AclException(String.format(\"%s file  is not data\",fileHome + File.separator + fileName));\n  }\n  log.info(\"Broker plain acl conf data is : \",plainAclConfData.toString());\n  JSONArray globalWhiteRemoteAddressesList=plainAclConfData.getJSONArray(\"globalWhiteRemoteAddresses\");\n  if (globalWhiteRemoteAddressesList != null && !globalWhiteRemoteAddressesList.isEmpty()) {\n    for (int i=0; i < globalWhiteRemoteAddressesList.size(); i++) {\n      globalWhiteRemoteAddressStrategy.add(remoteAddressStrategyFactory.getRemoteAddressStrategy(globalWhiteRemoteAddressesList.getString(i)));\n    }\n  }\n  JSONArray accounts=plainAclConfData.getJSONArray(\"accounts\");\n  if (accounts != null && !accounts.isEmpty()) {\n    List<PlainAccessConfig> plainAccessConfigList=accounts.toJavaList(PlainAccessConfig.class);\n    for (    PlainAccessConfig plainAccessConfig : plainAccessConfigList) {\n      PlainAccessResource plainAccessResource=buildPlainAccessResource(plainAccessConfig);\n      plainAccessResourceMap.put(plainAccessResource.getAccessKey(),plainAccessResource);\n    }\n  }\n  this.globalWhiteRemoteAddressStrategy=globalWhiteRemoteAddressStrategy;\n  this.plainAccessResourceMap=plainAccessResourceMap;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 191,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 72,
        "startColumnNumber" : 12,
        "endLineNumber" : 72,
        "endColumnNumber" : 112
      },
      "nodeContext" : "throw new AclException(String.format(\"%s file  is not data\",fileHome + File.separator + fileName));\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 13,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 75,
    "startLineNumber" : 72,
    "startColumnNumber" : 35,
    "endLineNumber" : 72,
    "endColumnNumber" : 110
  } ],
  "layoutRelationDataList" : [ ]
}