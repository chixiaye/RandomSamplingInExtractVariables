{
  "id" : 319,
  "expression" : "startchar",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/oned/CodaBarReader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "startchar",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 125,
      "startColumnNumber" : 42,
      "endLineNumber" : 125,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 125,
        "startColumnNumber" : 9,
        "endLineNumber" : 125,
        "endColumnNumber" : 52
      },
      "nodeContext" : "arrayContains(STARTEND_ENCODING,startchar)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 52
      },
      "nodeContext" : "!arrayContains(STARTEND_ENCODING,startchar)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 125,
        "startColumnNumber" : 4,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!arrayContains(STARTEND_ENCODING,startchar)) {\n  throw NotFoundException.getNotFoundInstance();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3072,
        "startLineNumber" : 79,
        "startColumnNumber" : 109,
        "endLineNumber" : 158,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  setCounters(row);\n  int startOffset=findStartPattern();\n  int nextStart=startOffset;\n  decodeRowResult.setLength(0);\n  do {\n    int charOffset=toNarrowWidePattern(nextStart);\n    if (charOffset == -1) {\n      throw NotFoundException.getNotFoundInstance();\n    }\n    decodeRowResult.append((char)charOffset);\n    nextStart+=8;\n    if (decodeRowResult.length() > 1 && arrayContains(STARTEND_ENCODING,ALPHABET[charOffset])) {\n      break;\n    }\n  }\n while (nextStart < counterLength);\n  int trailingWhitespace=counters[nextStart - 1];\n  int lastPatternSize=0;\n  for (int i=-8; i < -1; i++) {\n    lastPatternSize+=counters[nextStart + i];\n  }\n  if (nextStart < counterLength && trailingWhitespace < lastPatternSize / 2) {\n    throw NotFoundException.getNotFoundInstance();\n  }\n  validatePattern(startOffset);\n  for (int i=0; i < decodeRowResult.length(); i++) {\n    decodeRowResult.setCharAt(i,ALPHABET[decodeRowResult.charAt(i)]);\n  }\n  char startchar=decodeRowResult.charAt(0);\n  if (!arrayContains(STARTEND_ENCODING,startchar)) {\n    throw NotFoundException.getNotFoundInstance();\n  }\n  char endchar=decodeRowResult.charAt(decodeRowResult.length() - 1);\n  if (!arrayContains(STARTEND_ENCODING,endchar)) {\n    throw NotFoundException.getNotFoundInstance();\n  }\n  if (decodeRowResult.length() <= MIN_CHARACTER_LENGTH) {\n    throw NotFoundException.getNotFoundInstance();\n  }\n  decodeRowResult.deleteCharAt(decodeRowResult.length() - 1);\n  decodeRowResult.deleteCharAt(0);\n  int runningCount=0;\n  for (int i=0; i < startOffset; i++) {\n    runningCount+=counters[i];\n  }\n  float left=(float)runningCount;\n  for (int i=startOffset; i < nextStart - 1; i++) {\n    runningCount+=counters[i];\n  }\n  float right=(float)runningCount;\n  return new Result(decodeRowResult.toString(),null,new ResultPoint[]{new ResultPoint(left,(float)rowNumber),new ResultPoint(right,(float)rowNumber)},BarcodeFormat.CODABAR);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 304,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3192,
        "startLineNumber" : 78,
        "startColumnNumber" : 2,
        "endLineNumber" : 158,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Result decodeRow(int rowNumber,BitArray row,Map<DecodeHintType,?> hints) throws NotFoundException {\n  setCounters(row);\n  int startOffset=findStartPattern();\n  int nextStart=startOffset;\n  decodeRowResult.setLength(0);\n  do {\n    int charOffset=toNarrowWidePattern(nextStart);\n    if (charOffset == -1) {\n      throw NotFoundException.getNotFoundInstance();\n    }\n    decodeRowResult.append((char)charOffset);\n    nextStart+=8;\n    if (decodeRowResult.length() > 1 && arrayContains(STARTEND_ENCODING,ALPHABET[charOffset])) {\n      break;\n    }\n  }\n while (nextStart < counterLength);\n  int trailingWhitespace=counters[nextStart - 1];\n  int lastPatternSize=0;\n  for (int i=-8; i < -1; i++) {\n    lastPatternSize+=counters[nextStart + i];\n  }\n  if (nextStart < counterLength && trailingWhitespace < lastPatternSize / 2) {\n    throw NotFoundException.getNotFoundInstance();\n  }\n  validatePattern(startOffset);\n  for (int i=0; i < decodeRowResult.length(); i++) {\n    decodeRowResult.setCharAt(i,ALPHABET[decodeRowResult.charAt(i)]);\n  }\n  char startchar=decodeRowResult.charAt(0);\n  if (!arrayContains(STARTEND_ENCODING,startchar)) {\n    throw NotFoundException.getNotFoundInstance();\n  }\n  char endchar=decodeRowResult.charAt(decodeRowResult.length() - 1);\n  if (!arrayContains(STARTEND_ENCODING,endchar)) {\n    throw NotFoundException.getNotFoundInstance();\n  }\n  if (decodeRowResult.length() <= MIN_CHARACTER_LENGTH) {\n    throw NotFoundException.getNotFoundInstance();\n  }\n  decodeRowResult.deleteCharAt(decodeRowResult.length() - 1);\n  decodeRowResult.deleteCharAt(0);\n  int runningCount=0;\n  for (int i=0; i < startOffset; i++) {\n    runningCount+=counters[i];\n  }\n  float left=(float)runningCount;\n  for (int i=startOffset; i < nextStart - 1; i++) {\n    runningCount+=counters[i];\n  }\n  float right=(float)runningCount;\n  return new Result(decodeRowResult.toString(),null,new ResultPoint[]{new ResultPoint(left,(float)rowNumber),new ResultPoint(right,(float)rowNumber)},BarcodeFormat.CODABAR);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 328,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 52
      },
      "nodeContext" : "!arrayContains(STARTEND_ENCODING,startchar)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "char"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 125,
    "startColumnNumber" : 42,
    "endLineNumber" : 125,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}