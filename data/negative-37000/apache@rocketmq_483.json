{
  "id" : 483,
  "expression" : "offsetTable",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/tools/src/main/java/org/apache/rocketmq/tools/command/offset/ResetOffsetByTimeCommand.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "offsetTable",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 119,
      "startColumnNumber" : 63,
      "endLineNumber" : 119,
      "endColumnNumber" : 74
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 119,
        "startColumnNumber" : 63,
        "endLineNumber" : 119,
        "endColumnNumber" : 85
      },
      "nodeContext" : "offsetTable.entrySet()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 119,
        "startColumnNumber" : 63,
        "endLineNumber" : 119,
        "endColumnNumber" : 96
      },
      "nodeContext" : "offsetTable.entrySet().iterator()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 119,
        "startColumnNumber" : 52,
        "endLineNumber" : 119,
        "endColumnNumber" : 96
      },
      "nodeContext" : "iterator=offsetTable.entrySet().iterator()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 119,
        "startColumnNumber" : 12,
        "endLineNumber" : 119,
        "endColumnNumber" : 97
      },
      "nodeContext" : "Iterator<Map.Entry<MessageQueue,Long>> iterator=offsetTable.entrySet().iterator();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2273,
        "startLineNumber" : 74,
        "startColumnNumber" : 12,
        "endLineNumber" : 127,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String group=commandLine.getOptionValue(\"g\").trim();\n  String topic=commandLine.getOptionValue(\"t\").trim();\n  String timeStampStr=commandLine.getOptionValue(\"s\").trim();\n  long timestamp=timeStampStr.equals(\"now\") ? System.currentTimeMillis() : 0;\n  try {\n    if (timestamp == 0) {\n      timestamp=Long.parseLong(timeStampStr);\n    }\n  }\n catch (  NumberFormatException e) {\n    timestamp=UtilAll.parseDate(timeStampStr,UtilAll.YYYY_MM_DD_HH_MM_SS_SSS).getTime();\n  }\n  boolean force=true;\n  if (commandLine.hasOption('f')) {\n    force=Boolean.valueOf(commandLine.getOptionValue(\"f\").trim());\n  }\n  boolean isC=false;\n  if (commandLine.hasOption('c')) {\n    isC=true;\n  }\n  defaultMQAdminExt.start();\n  Map<MessageQueue,Long> offsetTable;\n  try {\n    offsetTable=defaultMQAdminExt.resetOffsetByTimestamp(topic,group,timestamp,force,isC);\n  }\n catch (  MQClientException e) {\n    if (ResponseCode.CONSUMER_NOT_ONLINE == e.getResponseCode()) {\n      ResetOffsetByTimeOldCommand.resetOffset(defaultMQAdminExt,group,topic,timestamp,force,timeStampStr);\n      return;\n    }\n    throw e;\n  }\n  System.out.printf(\"rollback consumer offset by specified group[%s], topic[%s], force[%s], timestamp(string)[%s], timestamp(long)[%s]%n\",group,topic,force,timeStampStr,timestamp);\n  System.out.printf(\"%-40s  %-40s  %-40s%n\",\"#brokerName\",\"#queueId\",\"#offset\");\n  Iterator<Map.Entry<MessageQueue,Long>> iterator=offsetTable.entrySet().iterator();\n  while (iterator.hasNext()) {\n    Map.Entry<MessageQueue,Long> entry=iterator.next();\n    System.out.printf(\"%-40s  %-40d  %-40d%n\",UtilAll.frontStringAtLeast(entry.getKey().getBrokerName(),32),entry.getKey().getQueueId(),entry.getValue());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 258,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2470,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 131,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  String group=commandLine.getOptionValue(\"g\").trim();\n  String topic=commandLine.getOptionValue(\"t\").trim();\n  String timeStampStr=commandLine.getOptionValue(\"s\").trim();\n  long timestamp=timeStampStr.equals(\"now\") ? System.currentTimeMillis() : 0;\n  try {\n    if (timestamp == 0) {\n      timestamp=Long.parseLong(timeStampStr);\n    }\n  }\n catch (  NumberFormatException e) {\n    timestamp=UtilAll.parseDate(timeStampStr,UtilAll.YYYY_MM_DD_HH_MM_SS_SSS).getTime();\n  }\n  boolean force=true;\n  if (commandLine.hasOption('f')) {\n    force=Boolean.valueOf(commandLine.getOptionValue(\"f\").trim());\n  }\n  boolean isC=false;\n  if (commandLine.hasOption('c')) {\n    isC=true;\n  }\n  defaultMQAdminExt.start();\n  Map<MessageQueue,Long> offsetTable;\n  try {\n    offsetTable=defaultMQAdminExt.resetOffsetByTimestamp(topic,group,timestamp,force,isC);\n  }\n catch (  MQClientException e) {\n    if (ResponseCode.CONSUMER_NOT_ONLINE == e.getResponseCode()) {\n      ResetOffsetByTimeOldCommand.resetOffset(defaultMQAdminExt,group,topic,timestamp,force,timeStampStr);\n      return;\n    }\n    throw e;\n  }\n  System.out.printf(\"rollback consumer offset by specified group[%s], topic[%s], force[%s], timestamp(string)[%s], timestamp(long)[%s]%n\",group,topic,force,timeStampStr,timestamp);\n  System.out.printf(\"%-40s  %-40s  %-40s%n\",\"#brokerName\",\"#queueId\",\"#offset\");\n  Iterator<Map.Entry<MessageQueue,Long>> iterator=offsetTable.entrySet().iterator();\n  while (iterator.hasNext()) {\n    Map.Entry<MessageQueue,Long> entry=iterator.next();\n    System.out.printf(\"%-40s  %-40d  %-40d%n\",UtilAll.frontStringAtLeast(entry.getKey().getBrokerName(),32),entry.getKey().getQueueId(),entry.getValue());\n  }\n}\n catch (Exception e) {\n  throw new SubCommandException(this.getClass().getSimpleName() + \" command failed\",e);\n}\n finally {\n  defaultMQAdminExt.shutdown();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 282,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2650,
        "startLineNumber" : 71,
        "startColumnNumber" : 110,
        "endLineNumber" : 132,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DefaultMQAdminExt defaultMQAdminExt=new DefaultMQAdminExt(rpcHook);\n  defaultMQAdminExt.setInstanceName(Long.toString(System.currentTimeMillis()));\n  try {\n    String group=commandLine.getOptionValue(\"g\").trim();\n    String topic=commandLine.getOptionValue(\"t\").trim();\n    String timeStampStr=commandLine.getOptionValue(\"s\").trim();\n    long timestamp=timeStampStr.equals(\"now\") ? System.currentTimeMillis() : 0;\n    try {\n      if (timestamp == 0) {\n        timestamp=Long.parseLong(timeStampStr);\n      }\n    }\n catch (    NumberFormatException e) {\n      timestamp=UtilAll.parseDate(timeStampStr,UtilAll.YYYY_MM_DD_HH_MM_SS_SSS).getTime();\n    }\n    boolean force=true;\n    if (commandLine.hasOption('f')) {\n      force=Boolean.valueOf(commandLine.getOptionValue(\"f\").trim());\n    }\n    boolean isC=false;\n    if (commandLine.hasOption('c')) {\n      isC=true;\n    }\n    defaultMQAdminExt.start();\n    Map<MessageQueue,Long> offsetTable;\n    try {\n      offsetTable=defaultMQAdminExt.resetOffsetByTimestamp(topic,group,timestamp,force,isC);\n    }\n catch (    MQClientException e) {\n      if (ResponseCode.CONSUMER_NOT_ONLINE == e.getResponseCode()) {\n        ResetOffsetByTimeOldCommand.resetOffset(defaultMQAdminExt,group,topic,timestamp,force,timeStampStr);\n        return;\n      }\n      throw e;\n    }\n    System.out.printf(\"rollback consumer offset by specified group[%s], topic[%s], force[%s], timestamp(string)[%s], timestamp(long)[%s]%n\",group,topic,force,timeStampStr,timestamp);\n    System.out.printf(\"%-40s  %-40s  %-40s%n\",\"#brokerName\",\"#queueId\",\"#offset\");\n    Iterator<Map.Entry<MessageQueue,Long>> iterator=offsetTable.entrySet().iterator();\n    while (iterator.hasNext()) {\n      Map.Entry<MessageQueue,Long> entry=iterator.next();\n      System.out.printf(\"%-40s  %-40d  %-40d%n\",UtilAll.frontStringAtLeast(entry.getKey().getBrokerName(),32),entry.getKey().getQueueId(),entry.getValue());\n    }\n  }\n catch (  Exception e) {\n    throw new SubCommandException(this.getClass().getSimpleName() + \" command failed\",e);\n  }\n finally {\n    defaultMQAdminExt.shutdown();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 302,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2770,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 132,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void execute(CommandLine commandLine,Options options,RPCHook rpcHook) throws SubCommandException {\n  DefaultMQAdminExt defaultMQAdminExt=new DefaultMQAdminExt(rpcHook);\n  defaultMQAdminExt.setInstanceName(Long.toString(System.currentTimeMillis()));\n  try {\n    String group=commandLine.getOptionValue(\"g\").trim();\n    String topic=commandLine.getOptionValue(\"t\").trim();\n    String timeStampStr=commandLine.getOptionValue(\"s\").trim();\n    long timestamp=timeStampStr.equals(\"now\") ? System.currentTimeMillis() : 0;\n    try {\n      if (timestamp == 0) {\n        timestamp=Long.parseLong(timeStampStr);\n      }\n    }\n catch (    NumberFormatException e) {\n      timestamp=UtilAll.parseDate(timeStampStr,UtilAll.YYYY_MM_DD_HH_MM_SS_SSS).getTime();\n    }\n    boolean force=true;\n    if (commandLine.hasOption('f')) {\n      force=Boolean.valueOf(commandLine.getOptionValue(\"f\").trim());\n    }\n    boolean isC=false;\n    if (commandLine.hasOption('c')) {\n      isC=true;\n    }\n    defaultMQAdminExt.start();\n    Map<MessageQueue,Long> offsetTable;\n    try {\n      offsetTable=defaultMQAdminExt.resetOffsetByTimestamp(topic,group,timestamp,force,isC);\n    }\n catch (    MQClientException e) {\n      if (ResponseCode.CONSUMER_NOT_ONLINE == e.getResponseCode()) {\n        ResetOffsetByTimeOldCommand.resetOffset(defaultMQAdminExt,group,topic,timestamp,force,timeStampStr);\n        return;\n      }\n      throw e;\n    }\n    System.out.printf(\"rollback consumer offset by specified group[%s], topic[%s], force[%s], timestamp(string)[%s], timestamp(long)[%s]%n\",group,topic,force,timeStampStr,timestamp);\n    System.out.printf(\"%-40s  %-40s  %-40s%n\",\"#brokerName\",\"#queueId\",\"#offset\");\n    Iterator<Map.Entry<MessageQueue,Long>> iterator=offsetTable.entrySet().iterator();\n    while (iterator.hasNext()) {\n      Map.Entry<MessageQueue,Long> entry=iterator.next();\n      System.out.printf(\"%-40s  %-40d  %-40d%n\",UtilAll.frontStringAtLeast(entry.getKey().getBrokerName(),32),entry.getKey().getQueueId(),entry.getValue());\n    }\n  }\n catch (  Exception e) {\n    throw new SubCommandException(this.getClass().getSimpleName() + \" command failed\",e);\n  }\n finally {\n    defaultMQAdminExt.shutdown();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 322,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 119,
        "startColumnNumber" : 12,
        "endLineNumber" : 119,
        "endColumnNumber" : 97
      },
      "nodeContext" : "Iterator<Map.Entry<MessageQueue,Long>> iterator=offsetTable.entrySet().iterator();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<org.apache.rocketmq.common.message.MessageQueue,java.lang.Long>"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 119,
    "startColumnNumber" : 63,
    "endLineNumber" : 119,
    "endColumnNumber" : 74
  } ],
  "layoutRelationDataList" : [ ]
}