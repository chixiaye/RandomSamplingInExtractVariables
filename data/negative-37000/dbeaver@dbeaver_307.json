{
  "id" : 307,
  "expression" : "appliedState.clipW != currentState.clipW",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ext.ui.svg/src/org/jkiss/dbeaver/ext/ui/svg/GraphicsToGraphics2DAdaptor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "appliedState.clipW != currentState.clipW",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 40,
      "startLineNumber" : 290,
      "startColumnNumber" : 19,
      "endLineNumber" : 290,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 289,
        "startColumnNumber" : 12,
        "endLineNumber" : 290,
        "endColumnNumber" : 59
      },
      "nodeContext" : "appliedState.clipX != currentState.clipX || appliedState.clipY != currentState.clipY || appliedState.clipW != currentState.clipW",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 23,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 188,
        "startLineNumber" : 289,
        "startColumnNumber" : 12,
        "endLineNumber" : 290,
        "endColumnNumber" : 103
      },
      "nodeContext" : "appliedState.clipX != currentState.clipX || appliedState.clipY != currentState.clipY || appliedState.clipW != currentState.clipW || appliedState.clipH != currentState.clipH",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 619,
        "startLineNumber" : 289,
        "startColumnNumber" : 8,
        "endLineNumber" : 301,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (appliedState.clipX != currentState.clipX || appliedState.clipY != currentState.clipY || appliedState.clipW != currentState.clipW || appliedState.clipH != currentState.clipH) {\n  appliedState.clipX=currentState.clipX;\n  appliedState.clipY=currentState.clipY;\n  appliedState.clipW=currentState.clipW;\n  appliedState.clipH=currentState.clipH;\n  getGraphics2D().setClip(currentState.clipX - 1,currentState.clipY - 1,currentState.clipW + 2,currentState.clipH + 2);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 90,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1035,
        "startLineNumber" : 281,
        "startColumnNumber" : 4,
        "endLineNumber" : 311,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (appliedState.font != currentState.font) {\n    appliedState.font=currentState.font;\n    setFont(currentState.font);\n  }\n  if (appliedState.clipX != currentState.clipX || appliedState.clipY != currentState.clipY || appliedState.clipW != currentState.clipW || appliedState.clipH != currentState.clipH) {\n    appliedState.clipX=currentState.clipX;\n    appliedState.clipY=currentState.clipY;\n    appliedState.clipW=currentState.clipW;\n    appliedState.clipH=currentState.clipH;\n    getGraphics2D().setClip(currentState.clipX - 1,currentState.clipY - 1,currentState.clipW + 2,currentState.clipH + 2);\n  }\n  if (appliedState.alpha != currentState.alpha) {\n    appliedState.alpha=currentState.alpha;\n    setAlpha(currentState.alpha);\n  }\n  appliedState.graphicHints=currentState.graphicHints;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 145,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1202,
        "startLineNumber" : 277,
        "startColumnNumber" : 4,
        "endLineNumber" : 311,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Verifies that the applied state is up to date with the current state and updates the applied state accordingly.\n */\nprotected void checkState(){\n  if (appliedState.font != currentState.font) {\n    appliedState.font=currentState.font;\n    setFont(currentState.font);\n  }\n  if (appliedState.clipX != currentState.clipX || appliedState.clipY != currentState.clipY || appliedState.clipW != currentState.clipW || appliedState.clipH != currentState.clipH) {\n    appliedState.clipX=currentState.clipX;\n    appliedState.clipY=currentState.clipY;\n    appliedState.clipW=currentState.clipW;\n    appliedState.clipH=currentState.clipH;\n    getGraphics2D().setClip(currentState.clipX - 1,currentState.clipY - 1,currentState.clipW + 2,currentState.clipH + 2);\n  }\n  if (appliedState.alpha != currentState.alpha) {\n    appliedState.alpha=currentState.alpha;\n    setAlpha(currentState.alpha);\n  }\n  appliedState.graphicHints=currentState.graphicHints;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 150,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 289,
        "startColumnNumber" : 12,
        "endLineNumber" : 290,
        "endColumnNumber" : 59
      },
      "nodeContext" : "appliedState.clipX != currentState.clipX || appliedState.clipY != currentState.clipY || appliedState.clipW != currentState.clipW",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 23,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 40,
    "startLineNumber" : 290,
    "startColumnNumber" : 19,
    "endLineNumber" : 290,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ ]
}