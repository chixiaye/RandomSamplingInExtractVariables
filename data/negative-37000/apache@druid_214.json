{
  "id" : 214,
  "expression" : "task.getId()",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/indexing-service/src/test/java/org/apache/druid/indexing/overlord/TaskLockConfigTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "task.getId()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 61,
      "startColumnNumber" : 60,
      "endLineNumber" : 61,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 61,
        "startColumnNumber" : 40,
        "endLineNumber" : 61,
        "endColumnNumber" : 73
      },
      "nodeContext" : "taskStorage.getTask(task.getId())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 61,
        "startColumnNumber" : 25,
        "endLineNumber" : 61,
        "endColumnNumber" : 73
      },
      "nodeContext" : "optionalTask=taskStorage.getTask(task.getId())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 74
      },
      "nodeContext" : "final Optional<Task> optionalTask=taskStorage.getTask(task.getId());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 456,
        "startLineNumber" : 55,
        "startColumnNumber" : 2,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final TaskQueue taskQueue=createTaskQueue(null);\n  taskQueue.start();\n  final Task task=NoopTask.create();\n  Assert.assertTrue(taskQueue.add(task));\n  taskQueue.stop();\n  final Optional<Task> optionalTask=taskStorage.getTask(task.getId());\n  Assert.assertTrue(optionalTask.isPresent());\n  final Task fromTaskStorage=optionalTask.get();\n  Assert.assertTrue(fromTaskStorage.getContextValue(Tasks.FORCE_TIME_CHUNK_LOCK_KEY));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 520,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testDefault() throws EntryExistsException {\n  final TaskQueue taskQueue=createTaskQueue(null);\n  taskQueue.start();\n  final Task task=NoopTask.create();\n  Assert.assertTrue(taskQueue.add(task));\n  taskQueue.stop();\n  final Optional<Task> optionalTask=taskStorage.getTask(task.getId());\n  Assert.assertTrue(optionalTask.isPresent());\n  final Task fromTaskStorage=optionalTask.get();\n  Assert.assertTrue(fromTaskStorage.getContextValue(Tasks.FORCE_TIME_CHUNK_LOCK_KEY));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 84,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 74
      },
      "nodeContext" : "final Optional<Task> optionalTask=taskStorage.getTask(task.getId());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 61,
    "startColumnNumber" : 60,
    "endLineNumber" : 61,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ ]
}