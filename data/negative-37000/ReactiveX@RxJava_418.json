{
  "id" : 418,
  "expression" : "21",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/observable/ObservableSingleTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "21",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 246,
      "startColumnNumber" : 21,
      "endLineNumber" : 246,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 246,
        "startColumnNumber" : 8,
        "endLineNumber" : 246,
        "endColumnNumber" : 38
      },
      "nodeContext" : "assertEquals(21,r.intValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 246,
        "startColumnNumber" : 8,
        "endLineNumber" : 246,
        "endColumnNumber" : 39
      },
      "nodeContext" : "assertEquals(21,r.intValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 475,
        "startLineNumber" : 235,
        "startColumnNumber" : 60,
        "endLineNumber" : 247,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Observable<Integer> source=Observable.just(1,2,3,4,5,6);\n  Observable<Integer> reduced=source.reduce(new BiFunction<Integer,Integer,Integer>(){\n    @Override public Integer apply(    Integer i1,    Integer i2){\n      return i1 + i2;\n    }\n  }\n);\n  Integer r=reduced.toBlocking().first();\n  assertEquals(21,r.intValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 559,
        "startLineNumber" : 234,
        "startColumnNumber" : 4,
        "endLineNumber" : 247,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test(timeout=30000) public void testIssue1527() throws InterruptedException {\n  Observable<Integer> source=Observable.just(1,2,3,4,5,6);\n  Observable<Integer> reduced=source.reduce(new BiFunction<Integer,Integer,Integer>(){\n    @Override public Integer apply(    Integer i1,    Integer i2){\n      return i1 + i2;\n    }\n  }\n);\n  Integer r=reduced.toBlocking().first();\n  assertEquals(21,r.intValue());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 88,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 246,
        "startColumnNumber" : 8,
        "endLineNumber" : 246,
        "endColumnNumber" : 39
      },
      "nodeContext" : "assertEquals(21,r.intValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 246,
    "startColumnNumber" : 21,
    "endLineNumber" : 246,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ ]
}