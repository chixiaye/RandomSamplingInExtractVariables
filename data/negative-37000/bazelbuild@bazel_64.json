{
  "id" : 64,
  "expression" : "filter.matches(FIELD_PROPAGATION_VALUE)",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/third_party/java/proguard/proguard6.2.2/src/proguard/optimize/Optimizer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "filter.matches(FIELD_PROPAGATION_VALUE)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 39,
      "startLineNumber" : 181,
      "startColumnNumber" : 44,
      "endLineNumber" : 181,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 181,
        "startColumnNumber" : 8,
        "endLineNumber" : 181,
        "endColumnNumber" : 83
      },
      "nodeContext" : "fieldPropagationValue=filter.matches(FIELD_PROPAGATION_VALUE)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 181,
        "startColumnNumber" : 8,
        "endLineNumber" : 181,
        "endColumnNumber" : 84
      },
      "nodeContext" : "fieldPropagationValue=filter.matches(FIELD_PROPAGATION_VALUE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4260,
        "startLineNumber" : 165,
        "startColumnNumber" : 4,
        "endLineNumber" : 239,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.configuration=configuration;\n  StringMatcher filter=configuration.optimizations != null ? new ListParser(new NameParser()).parse(configuration.optimizations) : new ConstantMatcher(true);\n  libraryGson=filter.matches(LIBRARY_GSON);\n  classMarkingFinal=filter.matches(CLASS_MARKING_FINAL);\n  classUnboxingEnum=filter.matches(CLASS_UNBOXING_ENUM);\n  classMergingVertical=filter.matches(CLASS_MERGING_VERTICAL);\n  classMergingHorizontal=filter.matches(CLASS_MERGING_HORIZONTAL);\n  classMergingWrapper=filter.matches(CLASS_MERGING_WRAPPER);\n  fieldRemovalWriteonly=filter.matches(FIELD_REMOVAL_WRITEONLY);\n  fieldMarkingPrivate=filter.matches(FIELD_MARKING_PRIVATE);\n  fieldPropagationValue=filter.matches(FIELD_PROPAGATION_VALUE);\n  methodMarkingPrivate=filter.matches(METHOD_MARKING_PRIVATE);\n  methodMarkingStatic=filter.matches(METHOD_MARKING_STATIC);\n  methodMarkingFinal=filter.matches(METHOD_MARKING_FINAL);\n  methodMarkingSynchronized=filter.matches(METHOD_MARKING_SYNCHRONIZED);\n  methodRemovalParameter=filter.matches(METHOD_REMOVAL_PARAMETER);\n  methodPropagationParameter=filter.matches(METHOD_PROPAGATION_PARAMETER);\n  methodPropagationReturnvalue=filter.matches(METHOD_PROPAGATION_RETURNVALUE);\n  methodInliningShort=filter.matches(METHOD_INLINING_SHORT);\n  methodInliningUnique=filter.matches(METHOD_INLINING_UNIQUE);\n  methodInliningTailrecursion=filter.matches(METHOD_INLINING_TAILRECURSION);\n  codeMerging=filter.matches(CODE_MERGING);\n  codeSimplificationVariable=filter.matches(CODE_SIMPLIFICATION_VARIABLE);\n  codeSimplificationArithmetic=filter.matches(CODE_SIMPLIFICATION_ARITHMETIC);\n  codeSimplificationCast=filter.matches(CODE_SIMPLIFICATION_CAST);\n  codeSimplificationField=filter.matches(CODE_SIMPLIFICATION_FIELD);\n  codeSimplificationBranch=filter.matches(CODE_SIMPLIFICATION_BRANCH);\n  codeSimplificationObject=filter.matches(CODE_SIMPLIFICATION_OBJECT);\n  codeSimplificationString=filter.matches(CODE_SIMPLIFICATION_STRING);\n  codeSimplificationMath=filter.matches(CODE_SIMPLIFICATION_MATH);\n  codeSimplificationAdvanced=filter.matches(CODE_SIMPLIFICATION_ADVANCED);\n  codeRemovalAdvanced=filter.matches(CODE_REMOVAL_ADVANCED);\n  codeRemovalSimple=filter.matches(CODE_REMOVAL_SIMPLE);\n  codeRemovalVariable=filter.matches(CODE_REMOVAL_VARIABLE);\n  codeRemovalException=filter.matches(CODE_REMOVAL_EXCEPTION);\n  codeAllocationVariable=filter.matches(CODE_ALLOCATION_VARIABLE);\n  codeSimplificationAdvanced=codeSimplificationAdvanced || fieldPropagationValue || methodPropagationParameter|| methodPropagationReturnvalue;\n  codeRemovalAdvanced=codeRemovalAdvanced || fieldRemovalWriteonly || methodMarkingStatic|| methodRemovalParameter;\n  codeRemovalSimple=codeRemovalSimple || codeSimplificationBranch;\n  codeRemovalException=codeRemovalException || codeRemovalAdvanced || codeRemovalSimple;\n  codeSimplificationPeephole=codeSimplificationVariable || codeSimplificationArithmetic || codeSimplificationCast|| codeSimplificationField|| codeSimplificationBranch|| codeSimplificationObject|| codeSimplificationString|| codeSimplificationMath;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 312,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4358,
        "startLineNumber" : 161,
        "startColumnNumber" : 4,
        "endLineNumber" : 239,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Creates a new Optimizer.\n */\npublic Optimizer(Configuration configuration){\n  this.configuration=configuration;\n  StringMatcher filter=configuration.optimizations != null ? new ListParser(new NameParser()).parse(configuration.optimizations) : new ConstantMatcher(true);\n  libraryGson=filter.matches(LIBRARY_GSON);\n  classMarkingFinal=filter.matches(CLASS_MARKING_FINAL);\n  classUnboxingEnum=filter.matches(CLASS_UNBOXING_ENUM);\n  classMergingVertical=filter.matches(CLASS_MERGING_VERTICAL);\n  classMergingHorizontal=filter.matches(CLASS_MERGING_HORIZONTAL);\n  classMergingWrapper=filter.matches(CLASS_MERGING_WRAPPER);\n  fieldRemovalWriteonly=filter.matches(FIELD_REMOVAL_WRITEONLY);\n  fieldMarkingPrivate=filter.matches(FIELD_MARKING_PRIVATE);\n  fieldPropagationValue=filter.matches(FIELD_PROPAGATION_VALUE);\n  methodMarkingPrivate=filter.matches(METHOD_MARKING_PRIVATE);\n  methodMarkingStatic=filter.matches(METHOD_MARKING_STATIC);\n  methodMarkingFinal=filter.matches(METHOD_MARKING_FINAL);\n  methodMarkingSynchronized=filter.matches(METHOD_MARKING_SYNCHRONIZED);\n  methodRemovalParameter=filter.matches(METHOD_REMOVAL_PARAMETER);\n  methodPropagationParameter=filter.matches(METHOD_PROPAGATION_PARAMETER);\n  methodPropagationReturnvalue=filter.matches(METHOD_PROPAGATION_RETURNVALUE);\n  methodInliningShort=filter.matches(METHOD_INLINING_SHORT);\n  methodInliningUnique=filter.matches(METHOD_INLINING_UNIQUE);\n  methodInliningTailrecursion=filter.matches(METHOD_INLINING_TAILRECURSION);\n  codeMerging=filter.matches(CODE_MERGING);\n  codeSimplificationVariable=filter.matches(CODE_SIMPLIFICATION_VARIABLE);\n  codeSimplificationArithmetic=filter.matches(CODE_SIMPLIFICATION_ARITHMETIC);\n  codeSimplificationCast=filter.matches(CODE_SIMPLIFICATION_CAST);\n  codeSimplificationField=filter.matches(CODE_SIMPLIFICATION_FIELD);\n  codeSimplificationBranch=filter.matches(CODE_SIMPLIFICATION_BRANCH);\n  codeSimplificationObject=filter.matches(CODE_SIMPLIFICATION_OBJECT);\n  codeSimplificationString=filter.matches(CODE_SIMPLIFICATION_STRING);\n  codeSimplificationMath=filter.matches(CODE_SIMPLIFICATION_MATH);\n  codeSimplificationAdvanced=filter.matches(CODE_SIMPLIFICATION_ADVANCED);\n  codeRemovalAdvanced=filter.matches(CODE_REMOVAL_ADVANCED);\n  codeRemovalSimple=filter.matches(CODE_REMOVAL_SIMPLE);\n  codeRemovalVariable=filter.matches(CODE_REMOVAL_VARIABLE);\n  codeRemovalException=filter.matches(CODE_REMOVAL_EXCEPTION);\n  codeAllocationVariable=filter.matches(CODE_ALLOCATION_VARIABLE);\n  codeSimplificationAdvanced=codeSimplificationAdvanced || fieldPropagationValue || methodPropagationParameter|| methodPropagationReturnvalue;\n  codeRemovalAdvanced=codeRemovalAdvanced || fieldRemovalWriteonly || methodMarkingStatic|| methodRemovalParameter;\n  codeRemovalSimple=codeRemovalSimple || codeSimplificationBranch;\n  codeRemovalException=codeRemovalException || codeRemovalAdvanced || codeRemovalSimple;\n  codeSimplificationPeephole=codeSimplificationVariable || codeSimplificationArithmetic || codeSimplificationCast|| codeSimplificationField|| codeSimplificationBranch|| codeSimplificationObject|| codeSimplificationString|| codeSimplificationMath;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 320,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 181,
        "startColumnNumber" : 8,
        "endLineNumber" : 181,
        "endColumnNumber" : 84
      },
      "nodeContext" : "fieldPropagationValue=filter.matches(FIELD_PROPAGATION_VALUE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 39,
    "startLineNumber" : 181,
    "startColumnNumber" : 44,
    "endLineNumber" : 181,
    "endColumnNumber" : 83
  } ],
  "layoutRelationDataList" : [ ]
}