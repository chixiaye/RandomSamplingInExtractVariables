{
  "id" : 188,
  "expression" : "\"Destination key must not be null!\"",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson-spring-data/redisson-spring-data-20/src/main/java/org/redisson/spring/data/connection/RedissonReactiveHyperLogLogCommands.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Destination key must not be null!\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 86,
      "startColumnNumber" : 45,
      "endLineNumber" : 86,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 86,
        "startColumnNumber" : 12,
        "endLineNumber" : 86,
        "endColumnNumber" : 81
      },
      "nodeContext" : "Assert.notNull(command.getKey(),\"Destination key must not be null!\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 86,
        "startColumnNumber" : 12,
        "endLineNumber" : 86,
        "endColumnNumber" : 82
      },
      "nodeContext" : "Assert.notNull(command.getKey(),\"Destination key must not be null!\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 648,
        "startLineNumber" : 84,
        "startColumnNumber" : 44,
        "endLineNumber" : 95,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Assert.notNull(command.getKey(),\"Destination key must not be null!\");\n  Assert.notEmpty(command.getSourceKeys(),\"Source keys must not be null!\");\n  byte[] keyBuf=toByteArray(command.getKey());\n  List<Object> args=new ArrayList<Object>(command.getSourceKeys().size() + 1);\n  args.add(keyBuf);\n  args.addAll(command.getSourceKeys().stream().map(v -> toByteArray(v)).collect(Collectors.toList()));\n  Mono<String> m=write(keyBuf,StringCodec.INSTANCE,PFMERGE,args.toArray());\n  return m.map(v -> new BooleanResponse<>(command,true));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 659,
        "startLineNumber" : 84,
        "startColumnNumber" : 33,
        "endLineNumber" : 95,
        "endColumnNumber" : 9
      },
      "nodeContext" : "command -> {\n  Assert.notNull(command.getKey(),\"Destination key must not be null!\");\n  Assert.notEmpty(command.getSourceKeys(),\"Source keys must not be null!\");\n  byte[] keyBuf=toByteArray(command.getKey());\n  List<Object> args=new ArrayList<Object>(command.getSourceKeys().size() + 1);\n  args.add(keyBuf);\n  args.addAll(command.getSourceKeys().stream().map(v -> toByteArray(v)).collect(Collectors.toList()));\n  Mono<String> m=write(keyBuf,StringCodec.INSTANCE,PFMERGE,args.toArray());\n  return m.map(v -> new BooleanResponse<>(command,true));\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 110,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 86,
        "startColumnNumber" : 12,
        "endLineNumber" : 86,
        "endColumnNumber" : 82
      },
      "nodeContext" : "Assert.notNull(command.getKey(),\"Destination key must not be null!\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 6,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 86,
    "startColumnNumber" : 45,
    "endLineNumber" : 86,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ ]
}