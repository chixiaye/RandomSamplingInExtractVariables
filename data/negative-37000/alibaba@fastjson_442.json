{
  "id" : 442,
  "expression" : "\"id\"",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/test/java/com/alibaba/json/bvt/TypeReferenceTest.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"id\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 46,
      "startColumnNumber" : 69,
      "endLineNumber" : 46,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 46,
        "startColumnNumber" : 37,
        "endLineNumber" : 46,
        "endColumnNumber" : 74
      },
      "nodeContext" : "((JSONObject)map.get(\"a\")).get(\"id\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 629,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Map map=JSON.parseObject(text,new TypeReference<Map>(){\n  }\n);\n  Assert.assertEquals(3,map.size());\n  Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n  Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n  Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n  Assert.assertEquals(\"马加爵\",((JSONObject)map.get(\"a\")).get(\"name\"));\n  Assert.assertEquals(\"药家鑫\",((JSONObject)map.get(\"b\")).get(\"name\"));\n  Assert.assertEquals(\"刘大伟\",((JSONObject)map.get(\"c\")).get(\"name\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2301,
        "startLineNumber" : 16,
        "startColumnNumber" : 42,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  System.out.println(System.getProperties());\n  String text;\n{\n    Map<String,Bean> map=new HashMap<String,Bean>();\n    map.put(\"a\",new Bean(123,\"马加爵\"));\n    map.put(\"b\",new Bean(234,\"药家鑫\"));\n    map.put(\"c\",new Bean(456,\"刘大伟\"));\n    text=JSON.toJSONString(map);\n  }\n  System.out.println(text);\n{\n    Map<String,Bean> map=JSON.parseObject(text,new TypeReference<Map<String,Bean>>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((Bean)map.get(\"a\")).getId());\n    Assert.assertEquals(234,((Bean)map.get(\"b\")).getId());\n    Assert.assertEquals(456,((Bean)map.get(\"c\")).getId());\n    Assert.assertEquals(\"马加爵\",((Bean)map.get(\"a\")).getName());\n    Assert.assertEquals(\"药家鑫\",((Bean)map.get(\"b\")).getName());\n    Assert.assertEquals(\"刘大伟\",((Bean)map.get(\"c\")).getName());\n  }\n{\n    Map map=JSON.parseObject(text,new TypeReference<Map>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n    Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n    Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n    Assert.assertEquals(\"马加爵\",((JSONObject)map.get(\"a\")).get(\"name\"));\n    Assert.assertEquals(\"药家鑫\",((JSONObject)map.get(\"b\")).get(\"name\"));\n    Assert.assertEquals(\"刘大伟\",((JSONObject)map.get(\"c\")).get(\"name\"));\n  }\n{\n    Map map=JSON.parseObject(text,new TypeReference<JSONObject>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n    Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n    Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n    Assert.assertEquals(\"马加爵\",((JSONObject)map.get(\"a\")).get(\"name\"));\n    Assert.assertEquals(\"药家鑫\",((JSONObject)map.get(\"b\")).get(\"name\"));\n    Assert.assertEquals(\"刘大伟\",((JSONObject)map.get(\"c\")).get(\"name\"));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 445,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2373,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"rawtypes\") public void test_0() throws Exception {\n  System.out.println(System.getProperties());\n  String text;\n{\n    Map<String,Bean> map=new HashMap<String,Bean>();\n    map.put(\"a\",new Bean(123,\"马加爵\"));\n    map.put(\"b\",new Bean(234,\"药家鑫\"));\n    map.put(\"c\",new Bean(456,\"刘大伟\"));\n    text=JSON.toJSONString(map);\n  }\n  System.out.println(text);\n{\n    Map<String,Bean> map=JSON.parseObject(text,new TypeReference<Map<String,Bean>>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((Bean)map.get(\"a\")).getId());\n    Assert.assertEquals(234,((Bean)map.get(\"b\")).getId());\n    Assert.assertEquals(456,((Bean)map.get(\"c\")).getId());\n    Assert.assertEquals(\"马加爵\",((Bean)map.get(\"a\")).getName());\n    Assert.assertEquals(\"药家鑫\",((Bean)map.get(\"b\")).getName());\n    Assert.assertEquals(\"刘大伟\",((Bean)map.get(\"c\")).getName());\n  }\n{\n    Map map=JSON.parseObject(text,new TypeReference<Map>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n    Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n    Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n    Assert.assertEquals(\"马加爵\",((JSONObject)map.get(\"a\")).get(\"name\"));\n    Assert.assertEquals(\"药家鑫\",((JSONObject)map.get(\"b\")).get(\"name\"));\n    Assert.assertEquals(\"刘大伟\",((JSONObject)map.get(\"c\")).get(\"name\"));\n  }\n{\n    Map map=JSON.parseObject(text,new TypeReference<JSONObject>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n    Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n    Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n    Assert.assertEquals(\"马加爵\",((JSONObject)map.get(\"a\")).get(\"name\"));\n    Assert.assertEquals(\"药家鑫\",((JSONObject)map.get(\"b\")).get(\"name\"));\n    Assert.assertEquals(\"刘大伟\",((JSONObject)map.get(\"c\")).get(\"name\"));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 454,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"id\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 47,
      "startColumnNumber" : 69,
      "endLineNumber" : 47,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 47,
        "startColumnNumber" : 37,
        "endLineNumber" : 47,
        "endColumnNumber" : 74
      },
      "nodeContext" : "((JSONObject)map.get(\"b\")).get(\"id\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 629,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Map map=JSON.parseObject(text,new TypeReference<Map>(){\n  }\n);\n  Assert.assertEquals(3,map.size());\n  Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n  Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n  Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n  Assert.assertEquals(\"马加爵\",((JSONObject)map.get(\"a\")).get(\"name\"));\n  Assert.assertEquals(\"药家鑫\",((JSONObject)map.get(\"b\")).get(\"name\"));\n  Assert.assertEquals(\"刘大伟\",((JSONObject)map.get(\"c\")).get(\"name\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2301,
        "startLineNumber" : 16,
        "startColumnNumber" : 42,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  System.out.println(System.getProperties());\n  String text;\n{\n    Map<String,Bean> map=new HashMap<String,Bean>();\n    map.put(\"a\",new Bean(123,\"马加爵\"));\n    map.put(\"b\",new Bean(234,\"药家鑫\"));\n    map.put(\"c\",new Bean(456,\"刘大伟\"));\n    text=JSON.toJSONString(map);\n  }\n  System.out.println(text);\n{\n    Map<String,Bean> map=JSON.parseObject(text,new TypeReference<Map<String,Bean>>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((Bean)map.get(\"a\")).getId());\n    Assert.assertEquals(234,((Bean)map.get(\"b\")).getId());\n    Assert.assertEquals(456,((Bean)map.get(\"c\")).getId());\n    Assert.assertEquals(\"马加爵\",((Bean)map.get(\"a\")).getName());\n    Assert.assertEquals(\"药家鑫\",((Bean)map.get(\"b\")).getName());\n    Assert.assertEquals(\"刘大伟\",((Bean)map.get(\"c\")).getName());\n  }\n{\n    Map map=JSON.parseObject(text,new TypeReference<Map>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n    Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n    Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n    Assert.assertEquals(\"马加爵\",((JSONObject)map.get(\"a\")).get(\"name\"));\n    Assert.assertEquals(\"药家鑫\",((JSONObject)map.get(\"b\")).get(\"name\"));\n    Assert.assertEquals(\"刘大伟\",((JSONObject)map.get(\"c\")).get(\"name\"));\n  }\n{\n    Map map=JSON.parseObject(text,new TypeReference<JSONObject>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n    Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n    Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n    Assert.assertEquals(\"马加爵\",((JSONObject)map.get(\"a\")).get(\"name\"));\n    Assert.assertEquals(\"药家鑫\",((JSONObject)map.get(\"b\")).get(\"name\"));\n    Assert.assertEquals(\"刘大伟\",((JSONObject)map.get(\"c\")).get(\"name\"));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 445,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2373,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"rawtypes\") public void test_0() throws Exception {\n  System.out.println(System.getProperties());\n  String text;\n{\n    Map<String,Bean> map=new HashMap<String,Bean>();\n    map.put(\"a\",new Bean(123,\"马加爵\"));\n    map.put(\"b\",new Bean(234,\"药家鑫\"));\n    map.put(\"c\",new Bean(456,\"刘大伟\"));\n    text=JSON.toJSONString(map);\n  }\n  System.out.println(text);\n{\n    Map<String,Bean> map=JSON.parseObject(text,new TypeReference<Map<String,Bean>>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((Bean)map.get(\"a\")).getId());\n    Assert.assertEquals(234,((Bean)map.get(\"b\")).getId());\n    Assert.assertEquals(456,((Bean)map.get(\"c\")).getId());\n    Assert.assertEquals(\"马加爵\",((Bean)map.get(\"a\")).getName());\n    Assert.assertEquals(\"药家鑫\",((Bean)map.get(\"b\")).getName());\n    Assert.assertEquals(\"刘大伟\",((Bean)map.get(\"c\")).getName());\n  }\n{\n    Map map=JSON.parseObject(text,new TypeReference<Map>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n    Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n    Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n    Assert.assertEquals(\"马加爵\",((JSONObject)map.get(\"a\")).get(\"name\"));\n    Assert.assertEquals(\"药家鑫\",((JSONObject)map.get(\"b\")).get(\"name\"));\n    Assert.assertEquals(\"刘大伟\",((JSONObject)map.get(\"c\")).get(\"name\"));\n  }\n{\n    Map map=JSON.parseObject(text,new TypeReference<JSONObject>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n    Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n    Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n    Assert.assertEquals(\"马加爵\",((JSONObject)map.get(\"a\")).get(\"name\"));\n    Assert.assertEquals(\"药家鑫\",((JSONObject)map.get(\"b\")).get(\"name\"));\n    Assert.assertEquals(\"刘大伟\",((JSONObject)map.get(\"c\")).get(\"name\"));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 454,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"id\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 48,
      "startColumnNumber" : 69,
      "endLineNumber" : 48,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 48,
        "startColumnNumber" : 37,
        "endLineNumber" : 48,
        "endColumnNumber" : 74
      },
      "nodeContext" : "((JSONObject)map.get(\"c\")).get(\"id\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 48,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 48,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 629,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Map map=JSON.parseObject(text,new TypeReference<Map>(){\n  }\n);\n  Assert.assertEquals(3,map.size());\n  Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n  Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n  Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n  Assert.assertEquals(\"马加爵\",((JSONObject)map.get(\"a\")).get(\"name\"));\n  Assert.assertEquals(\"药家鑫\",((JSONObject)map.get(\"b\")).get(\"name\"));\n  Assert.assertEquals(\"刘大伟\",((JSONObject)map.get(\"c\")).get(\"name\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2301,
        "startLineNumber" : 16,
        "startColumnNumber" : 42,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  System.out.println(System.getProperties());\n  String text;\n{\n    Map<String,Bean> map=new HashMap<String,Bean>();\n    map.put(\"a\",new Bean(123,\"马加爵\"));\n    map.put(\"b\",new Bean(234,\"药家鑫\"));\n    map.put(\"c\",new Bean(456,\"刘大伟\"));\n    text=JSON.toJSONString(map);\n  }\n  System.out.println(text);\n{\n    Map<String,Bean> map=JSON.parseObject(text,new TypeReference<Map<String,Bean>>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((Bean)map.get(\"a\")).getId());\n    Assert.assertEquals(234,((Bean)map.get(\"b\")).getId());\n    Assert.assertEquals(456,((Bean)map.get(\"c\")).getId());\n    Assert.assertEquals(\"马加爵\",((Bean)map.get(\"a\")).getName());\n    Assert.assertEquals(\"药家鑫\",((Bean)map.get(\"b\")).getName());\n    Assert.assertEquals(\"刘大伟\",((Bean)map.get(\"c\")).getName());\n  }\n{\n    Map map=JSON.parseObject(text,new TypeReference<Map>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n    Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n    Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n    Assert.assertEquals(\"马加爵\",((JSONObject)map.get(\"a\")).get(\"name\"));\n    Assert.assertEquals(\"药家鑫\",((JSONObject)map.get(\"b\")).get(\"name\"));\n    Assert.assertEquals(\"刘大伟\",((JSONObject)map.get(\"c\")).get(\"name\"));\n  }\n{\n    Map map=JSON.parseObject(text,new TypeReference<JSONObject>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n    Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n    Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n    Assert.assertEquals(\"马加爵\",((JSONObject)map.get(\"a\")).get(\"name\"));\n    Assert.assertEquals(\"药家鑫\",((JSONObject)map.get(\"b\")).get(\"name\"));\n    Assert.assertEquals(\"刘大伟\",((JSONObject)map.get(\"c\")).get(\"name\"));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 445,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2373,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"rawtypes\") public void test_0() throws Exception {\n  System.out.println(System.getProperties());\n  String text;\n{\n    Map<String,Bean> map=new HashMap<String,Bean>();\n    map.put(\"a\",new Bean(123,\"马加爵\"));\n    map.put(\"b\",new Bean(234,\"药家鑫\"));\n    map.put(\"c\",new Bean(456,\"刘大伟\"));\n    text=JSON.toJSONString(map);\n  }\n  System.out.println(text);\n{\n    Map<String,Bean> map=JSON.parseObject(text,new TypeReference<Map<String,Bean>>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((Bean)map.get(\"a\")).getId());\n    Assert.assertEquals(234,((Bean)map.get(\"b\")).getId());\n    Assert.assertEquals(456,((Bean)map.get(\"c\")).getId());\n    Assert.assertEquals(\"马加爵\",((Bean)map.get(\"a\")).getName());\n    Assert.assertEquals(\"药家鑫\",((Bean)map.get(\"b\")).getName());\n    Assert.assertEquals(\"刘大伟\",((Bean)map.get(\"c\")).getName());\n  }\n{\n    Map map=JSON.parseObject(text,new TypeReference<Map>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n    Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n    Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n    Assert.assertEquals(\"马加爵\",((JSONObject)map.get(\"a\")).get(\"name\"));\n    Assert.assertEquals(\"药家鑫\",((JSONObject)map.get(\"b\")).get(\"name\"));\n    Assert.assertEquals(\"刘大伟\",((JSONObject)map.get(\"c\")).get(\"name\"));\n  }\n{\n    Map map=JSON.parseObject(text,new TypeReference<JSONObject>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n    Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n    Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n    Assert.assertEquals(\"马加爵\",((JSONObject)map.get(\"a\")).get(\"name\"));\n    Assert.assertEquals(\"药家鑫\",((JSONObject)map.get(\"b\")).get(\"name\"));\n    Assert.assertEquals(\"刘大伟\",((JSONObject)map.get(\"c\")).get(\"name\"));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 454,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 48,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"id\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 58,
      "startColumnNumber" : 69,
      "endLineNumber" : 58,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 58,
        "startColumnNumber" : 37,
        "endLineNumber" : 58,
        "endColumnNumber" : 74
      },
      "nodeContext" : "((JSONObject)map.get(\"a\")).get(\"id\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 636,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Map map=JSON.parseObject(text,new TypeReference<JSONObject>(){\n  }\n);\n  Assert.assertEquals(3,map.size());\n  Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n  Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n  Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n  Assert.assertEquals(\"马加爵\",((JSONObject)map.get(\"a\")).get(\"name\"));\n  Assert.assertEquals(\"药家鑫\",((JSONObject)map.get(\"b\")).get(\"name\"));\n  Assert.assertEquals(\"刘大伟\",((JSONObject)map.get(\"c\")).get(\"name\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2301,
        "startLineNumber" : 16,
        "startColumnNumber" : 42,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  System.out.println(System.getProperties());\n  String text;\n{\n    Map<String,Bean> map=new HashMap<String,Bean>();\n    map.put(\"a\",new Bean(123,\"马加爵\"));\n    map.put(\"b\",new Bean(234,\"药家鑫\"));\n    map.put(\"c\",new Bean(456,\"刘大伟\"));\n    text=JSON.toJSONString(map);\n  }\n  System.out.println(text);\n{\n    Map<String,Bean> map=JSON.parseObject(text,new TypeReference<Map<String,Bean>>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((Bean)map.get(\"a\")).getId());\n    Assert.assertEquals(234,((Bean)map.get(\"b\")).getId());\n    Assert.assertEquals(456,((Bean)map.get(\"c\")).getId());\n    Assert.assertEquals(\"马加爵\",((Bean)map.get(\"a\")).getName());\n    Assert.assertEquals(\"药家鑫\",((Bean)map.get(\"b\")).getName());\n    Assert.assertEquals(\"刘大伟\",((Bean)map.get(\"c\")).getName());\n  }\n{\n    Map map=JSON.parseObject(text,new TypeReference<Map>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n    Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n    Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n    Assert.assertEquals(\"马加爵\",((JSONObject)map.get(\"a\")).get(\"name\"));\n    Assert.assertEquals(\"药家鑫\",((JSONObject)map.get(\"b\")).get(\"name\"));\n    Assert.assertEquals(\"刘大伟\",((JSONObject)map.get(\"c\")).get(\"name\"));\n  }\n{\n    Map map=JSON.parseObject(text,new TypeReference<JSONObject>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n    Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n    Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n    Assert.assertEquals(\"马加爵\",((JSONObject)map.get(\"a\")).get(\"name\"));\n    Assert.assertEquals(\"药家鑫\",((JSONObject)map.get(\"b\")).get(\"name\"));\n    Assert.assertEquals(\"刘大伟\",((JSONObject)map.get(\"c\")).get(\"name\"));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 445,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2373,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"rawtypes\") public void test_0() throws Exception {\n  System.out.println(System.getProperties());\n  String text;\n{\n    Map<String,Bean> map=new HashMap<String,Bean>();\n    map.put(\"a\",new Bean(123,\"马加爵\"));\n    map.put(\"b\",new Bean(234,\"药家鑫\"));\n    map.put(\"c\",new Bean(456,\"刘大伟\"));\n    text=JSON.toJSONString(map);\n  }\n  System.out.println(text);\n{\n    Map<String,Bean> map=JSON.parseObject(text,new TypeReference<Map<String,Bean>>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((Bean)map.get(\"a\")).getId());\n    Assert.assertEquals(234,((Bean)map.get(\"b\")).getId());\n    Assert.assertEquals(456,((Bean)map.get(\"c\")).getId());\n    Assert.assertEquals(\"马加爵\",((Bean)map.get(\"a\")).getName());\n    Assert.assertEquals(\"药家鑫\",((Bean)map.get(\"b\")).getName());\n    Assert.assertEquals(\"刘大伟\",((Bean)map.get(\"c\")).getName());\n  }\n{\n    Map map=JSON.parseObject(text,new TypeReference<Map>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n    Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n    Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n    Assert.assertEquals(\"马加爵\",((JSONObject)map.get(\"a\")).get(\"name\"));\n    Assert.assertEquals(\"药家鑫\",((JSONObject)map.get(\"b\")).get(\"name\"));\n    Assert.assertEquals(\"刘大伟\",((JSONObject)map.get(\"c\")).get(\"name\"));\n  }\n{\n    Map map=JSON.parseObject(text,new TypeReference<JSONObject>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n    Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n    Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n    Assert.assertEquals(\"马加爵\",((JSONObject)map.get(\"a\")).get(\"name\"));\n    Assert.assertEquals(\"药家鑫\",((JSONObject)map.get(\"b\")).get(\"name\"));\n    Assert.assertEquals(\"刘大伟\",((JSONObject)map.get(\"c\")).get(\"name\"));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 454,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"id\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 59,
      "startColumnNumber" : 69,
      "endLineNumber" : 59,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 59,
        "startColumnNumber" : 37,
        "endLineNumber" : 59,
        "endColumnNumber" : 74
      },
      "nodeContext" : "((JSONObject)map.get(\"b\")).get(\"id\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 59,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 59,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 636,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Map map=JSON.parseObject(text,new TypeReference<JSONObject>(){\n  }\n);\n  Assert.assertEquals(3,map.size());\n  Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n  Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n  Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n  Assert.assertEquals(\"马加爵\",((JSONObject)map.get(\"a\")).get(\"name\"));\n  Assert.assertEquals(\"药家鑫\",((JSONObject)map.get(\"b\")).get(\"name\"));\n  Assert.assertEquals(\"刘大伟\",((JSONObject)map.get(\"c\")).get(\"name\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2301,
        "startLineNumber" : 16,
        "startColumnNumber" : 42,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  System.out.println(System.getProperties());\n  String text;\n{\n    Map<String,Bean> map=new HashMap<String,Bean>();\n    map.put(\"a\",new Bean(123,\"马加爵\"));\n    map.put(\"b\",new Bean(234,\"药家鑫\"));\n    map.put(\"c\",new Bean(456,\"刘大伟\"));\n    text=JSON.toJSONString(map);\n  }\n  System.out.println(text);\n{\n    Map<String,Bean> map=JSON.parseObject(text,new TypeReference<Map<String,Bean>>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((Bean)map.get(\"a\")).getId());\n    Assert.assertEquals(234,((Bean)map.get(\"b\")).getId());\n    Assert.assertEquals(456,((Bean)map.get(\"c\")).getId());\n    Assert.assertEquals(\"马加爵\",((Bean)map.get(\"a\")).getName());\n    Assert.assertEquals(\"药家鑫\",((Bean)map.get(\"b\")).getName());\n    Assert.assertEquals(\"刘大伟\",((Bean)map.get(\"c\")).getName());\n  }\n{\n    Map map=JSON.parseObject(text,new TypeReference<Map>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n    Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n    Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n    Assert.assertEquals(\"马加爵\",((JSONObject)map.get(\"a\")).get(\"name\"));\n    Assert.assertEquals(\"药家鑫\",((JSONObject)map.get(\"b\")).get(\"name\"));\n    Assert.assertEquals(\"刘大伟\",((JSONObject)map.get(\"c\")).get(\"name\"));\n  }\n{\n    Map map=JSON.parseObject(text,new TypeReference<JSONObject>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n    Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n    Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n    Assert.assertEquals(\"马加爵\",((JSONObject)map.get(\"a\")).get(\"name\"));\n    Assert.assertEquals(\"药家鑫\",((JSONObject)map.get(\"b\")).get(\"name\"));\n    Assert.assertEquals(\"刘大伟\",((JSONObject)map.get(\"c\")).get(\"name\"));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 445,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2373,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"rawtypes\") public void test_0() throws Exception {\n  System.out.println(System.getProperties());\n  String text;\n{\n    Map<String,Bean> map=new HashMap<String,Bean>();\n    map.put(\"a\",new Bean(123,\"马加爵\"));\n    map.put(\"b\",new Bean(234,\"药家鑫\"));\n    map.put(\"c\",new Bean(456,\"刘大伟\"));\n    text=JSON.toJSONString(map);\n  }\n  System.out.println(text);\n{\n    Map<String,Bean> map=JSON.parseObject(text,new TypeReference<Map<String,Bean>>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((Bean)map.get(\"a\")).getId());\n    Assert.assertEquals(234,((Bean)map.get(\"b\")).getId());\n    Assert.assertEquals(456,((Bean)map.get(\"c\")).getId());\n    Assert.assertEquals(\"马加爵\",((Bean)map.get(\"a\")).getName());\n    Assert.assertEquals(\"药家鑫\",((Bean)map.get(\"b\")).getName());\n    Assert.assertEquals(\"刘大伟\",((Bean)map.get(\"c\")).getName());\n  }\n{\n    Map map=JSON.parseObject(text,new TypeReference<Map>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n    Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n    Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n    Assert.assertEquals(\"马加爵\",((JSONObject)map.get(\"a\")).get(\"name\"));\n    Assert.assertEquals(\"药家鑫\",((JSONObject)map.get(\"b\")).get(\"name\"));\n    Assert.assertEquals(\"刘大伟\",((JSONObject)map.get(\"c\")).get(\"name\"));\n  }\n{\n    Map map=JSON.parseObject(text,new TypeReference<JSONObject>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n    Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n    Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n    Assert.assertEquals(\"马加爵\",((JSONObject)map.get(\"a\")).get(\"name\"));\n    Assert.assertEquals(\"药家鑫\",((JSONObject)map.get(\"b\")).get(\"name\"));\n    Assert.assertEquals(\"刘大伟\",((JSONObject)map.get(\"c\")).get(\"name\"));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 454,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 59,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"id\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 60,
      "startColumnNumber" : 69,
      "endLineNumber" : 60,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 60,
        "startColumnNumber" : 37,
        "endLineNumber" : 60,
        "endColumnNumber" : 74
      },
      "nodeContext" : "((JSONObject)map.get(\"c\")).get(\"id\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 636,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Map map=JSON.parseObject(text,new TypeReference<JSONObject>(){\n  }\n);\n  Assert.assertEquals(3,map.size());\n  Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n  Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n  Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n  Assert.assertEquals(\"马加爵\",((JSONObject)map.get(\"a\")).get(\"name\"));\n  Assert.assertEquals(\"药家鑫\",((JSONObject)map.get(\"b\")).get(\"name\"));\n  Assert.assertEquals(\"刘大伟\",((JSONObject)map.get(\"c\")).get(\"name\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2301,
        "startLineNumber" : 16,
        "startColumnNumber" : 42,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  System.out.println(System.getProperties());\n  String text;\n{\n    Map<String,Bean> map=new HashMap<String,Bean>();\n    map.put(\"a\",new Bean(123,\"马加爵\"));\n    map.put(\"b\",new Bean(234,\"药家鑫\"));\n    map.put(\"c\",new Bean(456,\"刘大伟\"));\n    text=JSON.toJSONString(map);\n  }\n  System.out.println(text);\n{\n    Map<String,Bean> map=JSON.parseObject(text,new TypeReference<Map<String,Bean>>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((Bean)map.get(\"a\")).getId());\n    Assert.assertEquals(234,((Bean)map.get(\"b\")).getId());\n    Assert.assertEquals(456,((Bean)map.get(\"c\")).getId());\n    Assert.assertEquals(\"马加爵\",((Bean)map.get(\"a\")).getName());\n    Assert.assertEquals(\"药家鑫\",((Bean)map.get(\"b\")).getName());\n    Assert.assertEquals(\"刘大伟\",((Bean)map.get(\"c\")).getName());\n  }\n{\n    Map map=JSON.parseObject(text,new TypeReference<Map>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n    Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n    Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n    Assert.assertEquals(\"马加爵\",((JSONObject)map.get(\"a\")).get(\"name\"));\n    Assert.assertEquals(\"药家鑫\",((JSONObject)map.get(\"b\")).get(\"name\"));\n    Assert.assertEquals(\"刘大伟\",((JSONObject)map.get(\"c\")).get(\"name\"));\n  }\n{\n    Map map=JSON.parseObject(text,new TypeReference<JSONObject>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n    Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n    Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n    Assert.assertEquals(\"马加爵\",((JSONObject)map.get(\"a\")).get(\"name\"));\n    Assert.assertEquals(\"药家鑫\",((JSONObject)map.get(\"b\")).get(\"name\"));\n    Assert.assertEquals(\"刘大伟\",((JSONObject)map.get(\"c\")).get(\"name\"));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 445,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2373,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"rawtypes\") public void test_0() throws Exception {\n  System.out.println(System.getProperties());\n  String text;\n{\n    Map<String,Bean> map=new HashMap<String,Bean>();\n    map.put(\"a\",new Bean(123,\"马加爵\"));\n    map.put(\"b\",new Bean(234,\"药家鑫\"));\n    map.put(\"c\",new Bean(456,\"刘大伟\"));\n    text=JSON.toJSONString(map);\n  }\n  System.out.println(text);\n{\n    Map<String,Bean> map=JSON.parseObject(text,new TypeReference<Map<String,Bean>>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((Bean)map.get(\"a\")).getId());\n    Assert.assertEquals(234,((Bean)map.get(\"b\")).getId());\n    Assert.assertEquals(456,((Bean)map.get(\"c\")).getId());\n    Assert.assertEquals(\"马加爵\",((Bean)map.get(\"a\")).getName());\n    Assert.assertEquals(\"药家鑫\",((Bean)map.get(\"b\")).getName());\n    Assert.assertEquals(\"刘大伟\",((Bean)map.get(\"c\")).getName());\n  }\n{\n    Map map=JSON.parseObject(text,new TypeReference<Map>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n    Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n    Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n    Assert.assertEquals(\"马加爵\",((JSONObject)map.get(\"a\")).get(\"name\"));\n    Assert.assertEquals(\"药家鑫\",((JSONObject)map.get(\"b\")).get(\"name\"));\n    Assert.assertEquals(\"刘大伟\",((JSONObject)map.get(\"c\")).get(\"name\"));\n  }\n{\n    Map map=JSON.parseObject(text,new TypeReference<JSONObject>(){\n    }\n);\n    Assert.assertEquals(3,map.size());\n    Assert.assertEquals(123,((JSONObject)map.get(\"a\")).get(\"id\"));\n    Assert.assertEquals(234,((JSONObject)map.get(\"b\")).get(\"id\"));\n    Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n    Assert.assertEquals(\"马加爵\",((JSONObject)map.get(\"a\")).get(\"name\"));\n    Assert.assertEquals(\"药家鑫\",((JSONObject)map.get(\"b\")).get(\"name\"));\n    Assert.assertEquals(\"刘大伟\",((JSONObject)map.get(\"c\")).get(\"name\"));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 454,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Assert.assertEquals(456,((JSONObject)map.get(\"c\")).get(\"id\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 46,
    "startColumnNumber" : 69,
    "endLineNumber" : 46,
    "endColumnNumber" : 73
  }, {
    "charLength" : 4,
    "startLineNumber" : 47,
    "startColumnNumber" : 69,
    "endLineNumber" : 47,
    "endColumnNumber" : 73
  }, {
    "charLength" : 4,
    "startLineNumber" : 48,
    "startColumnNumber" : 69,
    "endLineNumber" : 48,
    "endColumnNumber" : 73
  }, {
    "charLength" : 4,
    "startLineNumber" : 58,
    "startColumnNumber" : 69,
    "endLineNumber" : 58,
    "endColumnNumber" : 73
  }, {
    "charLength" : 4,
    "startLineNumber" : 59,
    "startColumnNumber" : 69,
    "endLineNumber" : 59,
    "endColumnNumber" : 73
  }, {
    "charLength" : 4,
    "startLineNumber" : 60,
    "startColumnNumber" : 69,
    "endLineNumber" : 60,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  } ]
}