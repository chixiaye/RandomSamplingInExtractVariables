{
  "id" : 92,
  "expression" : "invalidExcludes.isEmpty()",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/AutoConfigurationImportSelector.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "invalidExcludes.isEmpty()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 179,
      "startColumnNumber" : 7,
      "endLineNumber" : 179,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 179,
        "startColumnNumber" : 6,
        "endLineNumber" : 179,
        "endColumnNumber" : 32
      },
      "nodeContext" : "!invalidExcludes.isEmpty()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 179,
        "startColumnNumber" : 2,
        "endLineNumber" : 181,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (!invalidExcludes.isEmpty()) {\n  handleInvalidExcludes(invalidExcludes);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 356,
        "startLineNumber" : 171,
        "startColumnNumber" : 27,
        "endLineNumber" : 182,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  List<String> invalidExcludes=new ArrayList<>(exclusions.size());\n  for (  String exclusion : exclusions) {\n    if (ClassUtils.isPresent(exclusion,getClass().getClassLoader()) && !configurations.contains(exclusion)) {\n      invalidExcludes.add(exclusion);\n    }\n  }\n  if (!invalidExcludes.isEmpty()) {\n    handleInvalidExcludes(invalidExcludes);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 446,
        "startLineNumber" : 170,
        "startColumnNumber" : 1,
        "endLineNumber" : 182,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private void checkExcludedClasses(List<String> configurations,Set<String> exclusions){\n  List<String> invalidExcludes=new ArrayList<>(exclusions.size());\n  for (  String exclusion : exclusions) {\n    if (ClassUtils.isPresent(exclusion,getClass().getClassLoader()) && !configurations.contains(exclusion)) {\n      invalidExcludes.add(exclusion);\n    }\n  }\n  if (!invalidExcludes.isEmpty()) {\n    handleInvalidExcludes(invalidExcludes);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 72,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 179,
        "startColumnNumber" : 6,
        "endLineNumber" : 179,
        "endColumnNumber" : 32
      },
      "nodeContext" : "!invalidExcludes.isEmpty()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 179,
    "startColumnNumber" : 7,
    "endLineNumber" : 179,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}