{
  "id" : 509,
  "expression" : "9",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/telegram/ui/FilterUsersActivity.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "9",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 204,
      "startColumnNumber" : 87,
      "endLineNumber" : 204,
      "endColumnNumber" : 88
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 204,
        "startColumnNumber" : 67,
        "endLineNumber" : 204,
        "endColumnNumber" : 89
      },
      "nodeContext" : "AndroidUtilities.dp(9)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 204,
        "startColumnNumber" : 40,
        "endLineNumber" : 204,
        "endColumnNumber" : 89
      },
      "nodeContext" : "child.getMeasuredWidth() + AndroidUtilities.dp(9)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 204,
        "startColumnNumber" : 20,
        "endLineNumber" : 204,
        "endColumnNumber" : 89
      },
      "nodeContext" : "currentLineWidth+=child.getMeasuredWidth() + AndroidUtilities.dp(9)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 204,
        "startColumnNumber" : 20,
        "endLineNumber" : 204,
        "endColumnNumber" : 90
      },
      "nodeContext" : "currentLineWidth+=child.getMeasuredWidth() + AndroidUtilities.dp(9);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 203,
        "startColumnNumber" : 43,
        "endLineNumber" : 205,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  currentLineWidth+=child.getMeasuredWidth() + AndroidUtilities.dp(9);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 203,
        "startColumnNumber" : 16,
        "endLineNumber" : 205,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (child != removingSpan) {\n  currentLineWidth+=child.getMeasuredWidth() + AndroidUtilities.dp(9);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1928,
        "startLineNumber" : 172,
        "startColumnNumber" : 44,
        "endLineNumber" : 207,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  View child=getChildAt(a);\n  if (!(child instanceof GroupCreateSpan)) {\n    continue;\n  }\n  child.measure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.AT_MOST),MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(32),MeasureSpec.EXACTLY));\n  if (child != removingSpan && currentLineWidth + child.getMeasuredWidth() > maxWidth) {\n    y+=child.getMeasuredHeight() + AndroidUtilities.dp(8);\n    currentLineWidth=0;\n  }\n  if (allCurrentLineWidth + child.getMeasuredWidth() > maxWidth) {\n    allY+=child.getMeasuredHeight() + AndroidUtilities.dp(8);\n    allCurrentLineWidth=0;\n  }\n  x=AndroidUtilities.dp(13) + currentLineWidth;\n  if (!animationStarted) {\n    if (child == removingSpan) {\n      child.setTranslationX(AndroidUtilities.dp(13) + allCurrentLineWidth);\n      child.setTranslationY(allY);\n    }\n else     if (removingSpan != null) {\n      if (child.getTranslationX() != x) {\n        animators.add(ObjectAnimator.ofFloat(child,View.TRANSLATION_X,x));\n      }\n      if (child.getTranslationY() != y) {\n        animators.add(ObjectAnimator.ofFloat(child,View.TRANSLATION_Y,y));\n      }\n    }\n else {\n      child.setTranslationX(x);\n      child.setTranslationY(y);\n    }\n  }\n  if (child != removingSpan) {\n    currentLineWidth+=child.getMeasuredWidth() + AndroidUtilities.dp(9);\n  }\n  allCurrentLineWidth+=child.getMeasuredWidth() + AndroidUtilities.dp(9);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 205,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1960,
        "startLineNumber" : 172,
        "startColumnNumber" : 12,
        "endLineNumber" : 207,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int a=0; a < count; a++) {\n  View child=getChildAt(a);\n  if (!(child instanceof GroupCreateSpan)) {\n    continue;\n  }\n  child.measure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.AT_MOST),MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(32),MeasureSpec.EXACTLY));\n  if (child != removingSpan && currentLineWidth + child.getMeasuredWidth() > maxWidth) {\n    y+=child.getMeasuredHeight() + AndroidUtilities.dp(8);\n    currentLineWidth=0;\n  }\n  if (allCurrentLineWidth + child.getMeasuredWidth() > maxWidth) {\n    allY+=child.getMeasuredHeight() + AndroidUtilities.dp(8);\n    allCurrentLineWidth=0;\n  }\n  x=AndroidUtilities.dp(13) + currentLineWidth;\n  if (!animationStarted) {\n    if (child == removingSpan) {\n      child.setTranslationX(AndroidUtilities.dp(13) + allCurrentLineWidth);\n      child.setTranslationY(allY);\n    }\n else     if (removingSpan != null) {\n      if (child.getTranslationX() != x) {\n        animators.add(ObjectAnimator.ofFloat(child,View.TRANSLATION_X,x));\n      }\n      if (child.getTranslationY() != y) {\n        animators.add(ObjectAnimator.ofFloat(child,View.TRANSLATION_Y,y));\n      }\n    }\n else {\n      child.setTranslationX(x);\n      child.setTranslationY(y);\n    }\n  }\n  if (child != removingSpan) {\n    currentLineWidth+=child.getMeasuredWidth() + AndroidUtilities.dp(9);\n  }\n  allCurrentLineWidth+=child.getMeasuredWidth() + AndroidUtilities.dp(9);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 216,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4748,
        "startLineNumber" : 163,
        "startColumnNumber" : 78,
        "endLineNumber" : 252,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int count=getChildCount();\n  int width=MeasureSpec.getSize(widthMeasureSpec);\n  int maxWidth=width - AndroidUtilities.dp(26);\n  int currentLineWidth=0;\n  int y=AndroidUtilities.dp(10);\n  int allCurrentLineWidth=0;\n  int allY=AndroidUtilities.dp(10);\n  int x;\n  for (int a=0; a < count; a++) {\n    View child=getChildAt(a);\n    if (!(child instanceof GroupCreateSpan)) {\n      continue;\n    }\n    child.measure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.AT_MOST),MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(32),MeasureSpec.EXACTLY));\n    if (child != removingSpan && currentLineWidth + child.getMeasuredWidth() > maxWidth) {\n      y+=child.getMeasuredHeight() + AndroidUtilities.dp(8);\n      currentLineWidth=0;\n    }\n    if (allCurrentLineWidth + child.getMeasuredWidth() > maxWidth) {\n      allY+=child.getMeasuredHeight() + AndroidUtilities.dp(8);\n      allCurrentLineWidth=0;\n    }\n    x=AndroidUtilities.dp(13) + currentLineWidth;\n    if (!animationStarted) {\n      if (child == removingSpan) {\n        child.setTranslationX(AndroidUtilities.dp(13) + allCurrentLineWidth);\n        child.setTranslationY(allY);\n      }\n else       if (removingSpan != null) {\n        if (child.getTranslationX() != x) {\n          animators.add(ObjectAnimator.ofFloat(child,View.TRANSLATION_X,x));\n        }\n        if (child.getTranslationY() != y) {\n          animators.add(ObjectAnimator.ofFloat(child,View.TRANSLATION_Y,y));\n        }\n      }\n else {\n        child.setTranslationX(x);\n        child.setTranslationY(y);\n      }\n    }\n    if (child != removingSpan) {\n      currentLineWidth+=child.getMeasuredWidth() + AndroidUtilities.dp(9);\n    }\n    allCurrentLineWidth+=child.getMeasuredWidth() + AndroidUtilities.dp(9);\n  }\n  int minWidth;\n  if (AndroidUtilities.isTablet()) {\n    minWidth=AndroidUtilities.dp(530 - 26 - 18- 57 * 2) / 3;\n  }\n else {\n    minWidth=(Math.min(AndroidUtilities.displaySize.x,AndroidUtilities.displaySize.y) - AndroidUtilities.dp(26 + 18 + 57 * 2)) / 3;\n  }\n  if (maxWidth - currentLineWidth < minWidth) {\n    currentLineWidth=0;\n    y+=AndroidUtilities.dp(32 + 8);\n  }\n  if (maxWidth - allCurrentLineWidth < minWidth) {\n    allY+=AndroidUtilities.dp(32 + 8);\n  }\n  editText.measure(MeasureSpec.makeMeasureSpec(maxWidth - currentLineWidth,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(32),MeasureSpec.EXACTLY));\n  if (!animationStarted) {\n    int currentHeight=allY + AndroidUtilities.dp(32 + 10);\n    int fieldX=currentLineWidth + AndroidUtilities.dp(16);\n    fieldY=y;\n    if (currentAnimation != null) {\n      int resultHeight=y + AndroidUtilities.dp(32 + 10);\n      if (containerHeight != resultHeight) {\n        animators.add(ObjectAnimator.ofInt(FilterUsersActivity.this,\"containerHeight\",resultHeight));\n      }\n      if (editText.getTranslationX() != fieldX) {\n        animators.add(ObjectAnimator.ofFloat(editText,View.TRANSLATION_X,fieldX));\n      }\n      if (editText.getTranslationY() != fieldY) {\n        animators.add(ObjectAnimator.ofFloat(editText,View.TRANSLATION_Y,fieldY));\n      }\n      editText.setAllowDrawCursor(false);\n      currentAnimation.playTogether(animators);\n      currentAnimation.start();\n      animationStarted=true;\n    }\n else {\n      containerHeight=currentHeight;\n      editText.setTranslationX(fieldX);\n      editText.setTranslationY(fieldY);\n    }\n  }\n else   if (currentAnimation != null) {\n    if (!ignoreScrollEvent && removingSpan == null) {\n      editText.bringPointIntoView(editText.getSelectionStart());\n    }\n  }\n  setMeasuredDimension(width,containerHeight);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 543,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4836,
        "startLineNumber" : 162,
        "startColumnNumber" : 8,
        "endLineNumber" : 252,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override protected void onMeasure(int widthMeasureSpec,int heightMeasureSpec){\n  int count=getChildCount();\n  int width=MeasureSpec.getSize(widthMeasureSpec);\n  int maxWidth=width - AndroidUtilities.dp(26);\n  int currentLineWidth=0;\n  int y=AndroidUtilities.dp(10);\n  int allCurrentLineWidth=0;\n  int allY=AndroidUtilities.dp(10);\n  int x;\n  for (int a=0; a < count; a++) {\n    View child=getChildAt(a);\n    if (!(child instanceof GroupCreateSpan)) {\n      continue;\n    }\n    child.measure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.AT_MOST),MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(32),MeasureSpec.EXACTLY));\n    if (child != removingSpan && currentLineWidth + child.getMeasuredWidth() > maxWidth) {\n      y+=child.getMeasuredHeight() + AndroidUtilities.dp(8);\n      currentLineWidth=0;\n    }\n    if (allCurrentLineWidth + child.getMeasuredWidth() > maxWidth) {\n      allY+=child.getMeasuredHeight() + AndroidUtilities.dp(8);\n      allCurrentLineWidth=0;\n    }\n    x=AndroidUtilities.dp(13) + currentLineWidth;\n    if (!animationStarted) {\n      if (child == removingSpan) {\n        child.setTranslationX(AndroidUtilities.dp(13) + allCurrentLineWidth);\n        child.setTranslationY(allY);\n      }\n else       if (removingSpan != null) {\n        if (child.getTranslationX() != x) {\n          animators.add(ObjectAnimator.ofFloat(child,View.TRANSLATION_X,x));\n        }\n        if (child.getTranslationY() != y) {\n          animators.add(ObjectAnimator.ofFloat(child,View.TRANSLATION_Y,y));\n        }\n      }\n else {\n        child.setTranslationX(x);\n        child.setTranslationY(y);\n      }\n    }\n    if (child != removingSpan) {\n      currentLineWidth+=child.getMeasuredWidth() + AndroidUtilities.dp(9);\n    }\n    allCurrentLineWidth+=child.getMeasuredWidth() + AndroidUtilities.dp(9);\n  }\n  int minWidth;\n  if (AndroidUtilities.isTablet()) {\n    minWidth=AndroidUtilities.dp(530 - 26 - 18- 57 * 2) / 3;\n  }\n else {\n    minWidth=(Math.min(AndroidUtilities.displaySize.x,AndroidUtilities.displaySize.y) - AndroidUtilities.dp(26 + 18 + 57 * 2)) / 3;\n  }\n  if (maxWidth - currentLineWidth < minWidth) {\n    currentLineWidth=0;\n    y+=AndroidUtilities.dp(32 + 8);\n  }\n  if (maxWidth - allCurrentLineWidth < minWidth) {\n    allY+=AndroidUtilities.dp(32 + 8);\n  }\n  editText.measure(MeasureSpec.makeMeasureSpec(maxWidth - currentLineWidth,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(32),MeasureSpec.EXACTLY));\n  if (!animationStarted) {\n    int currentHeight=allY + AndroidUtilities.dp(32 + 10);\n    int fieldX=currentLineWidth + AndroidUtilities.dp(16);\n    fieldY=y;\n    if (currentAnimation != null) {\n      int resultHeight=y + AndroidUtilities.dp(32 + 10);\n      if (containerHeight != resultHeight) {\n        animators.add(ObjectAnimator.ofInt(FilterUsersActivity.this,\"containerHeight\",resultHeight));\n      }\n      if (editText.getTranslationX() != fieldX) {\n        animators.add(ObjectAnimator.ofFloat(editText,View.TRANSLATION_X,fieldX));\n      }\n      if (editText.getTranslationY() != fieldY) {\n        animators.add(ObjectAnimator.ofFloat(editText,View.TRANSLATION_Y,fieldY));\n      }\n      editText.setAllowDrawCursor(false);\n      currentAnimation.playTogether(animators);\n      currentAnimation.start();\n      animationStarted=true;\n    }\n else {\n      containerHeight=currentHeight;\n      editText.setTranslationX(fieldX);\n      editText.setTranslationY(fieldY);\n    }\n  }\n else   if (currentAnimation != null) {\n    if (!ignoreScrollEvent && removingSpan == null) {\n      editText.bringPointIntoView(editText.getSelectionStart());\n    }\n  }\n  setMeasuredDimension(width,containerHeight);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 555,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 204,
        "startColumnNumber" : 20,
        "endLineNumber" : 204,
        "endColumnNumber" : 90
      },
      "nodeContext" : "currentLineWidth+=child.getMeasuredWidth() + AndroidUtilities.dp(9);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "9",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 206,
      "startColumnNumber" : 86,
      "endLineNumber" : 206,
      "endColumnNumber" : 87
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 206,
        "startColumnNumber" : 66,
        "endLineNumber" : 206,
        "endColumnNumber" : 88
      },
      "nodeContext" : "AndroidUtilities.dp(9)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 206,
        "startColumnNumber" : 39,
        "endLineNumber" : 206,
        "endColumnNumber" : 88
      },
      "nodeContext" : "child.getMeasuredWidth() + AndroidUtilities.dp(9)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 206,
        "startColumnNumber" : 16,
        "endLineNumber" : 206,
        "endColumnNumber" : 88
      },
      "nodeContext" : "allCurrentLineWidth+=child.getMeasuredWidth() + AndroidUtilities.dp(9)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 206,
        "startColumnNumber" : 16,
        "endLineNumber" : 206,
        "endColumnNumber" : 89
      },
      "nodeContext" : "allCurrentLineWidth+=child.getMeasuredWidth() + AndroidUtilities.dp(9);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1928,
        "startLineNumber" : 172,
        "startColumnNumber" : 44,
        "endLineNumber" : 207,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  View child=getChildAt(a);\n  if (!(child instanceof GroupCreateSpan)) {\n    continue;\n  }\n  child.measure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.AT_MOST),MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(32),MeasureSpec.EXACTLY));\n  if (child != removingSpan && currentLineWidth + child.getMeasuredWidth() > maxWidth) {\n    y+=child.getMeasuredHeight() + AndroidUtilities.dp(8);\n    currentLineWidth=0;\n  }\n  if (allCurrentLineWidth + child.getMeasuredWidth() > maxWidth) {\n    allY+=child.getMeasuredHeight() + AndroidUtilities.dp(8);\n    allCurrentLineWidth=0;\n  }\n  x=AndroidUtilities.dp(13) + currentLineWidth;\n  if (!animationStarted) {\n    if (child == removingSpan) {\n      child.setTranslationX(AndroidUtilities.dp(13) + allCurrentLineWidth);\n      child.setTranslationY(allY);\n    }\n else     if (removingSpan != null) {\n      if (child.getTranslationX() != x) {\n        animators.add(ObjectAnimator.ofFloat(child,View.TRANSLATION_X,x));\n      }\n      if (child.getTranslationY() != y) {\n        animators.add(ObjectAnimator.ofFloat(child,View.TRANSLATION_Y,y));\n      }\n    }\n else {\n      child.setTranslationX(x);\n      child.setTranslationY(y);\n    }\n  }\n  if (child != removingSpan) {\n    currentLineWidth+=child.getMeasuredWidth() + AndroidUtilities.dp(9);\n  }\n  allCurrentLineWidth+=child.getMeasuredWidth() + AndroidUtilities.dp(9);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 205,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1960,
        "startLineNumber" : 172,
        "startColumnNumber" : 12,
        "endLineNumber" : 207,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int a=0; a < count; a++) {\n  View child=getChildAt(a);\n  if (!(child instanceof GroupCreateSpan)) {\n    continue;\n  }\n  child.measure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.AT_MOST),MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(32),MeasureSpec.EXACTLY));\n  if (child != removingSpan && currentLineWidth + child.getMeasuredWidth() > maxWidth) {\n    y+=child.getMeasuredHeight() + AndroidUtilities.dp(8);\n    currentLineWidth=0;\n  }\n  if (allCurrentLineWidth + child.getMeasuredWidth() > maxWidth) {\n    allY+=child.getMeasuredHeight() + AndroidUtilities.dp(8);\n    allCurrentLineWidth=0;\n  }\n  x=AndroidUtilities.dp(13) + currentLineWidth;\n  if (!animationStarted) {\n    if (child == removingSpan) {\n      child.setTranslationX(AndroidUtilities.dp(13) + allCurrentLineWidth);\n      child.setTranslationY(allY);\n    }\n else     if (removingSpan != null) {\n      if (child.getTranslationX() != x) {\n        animators.add(ObjectAnimator.ofFloat(child,View.TRANSLATION_X,x));\n      }\n      if (child.getTranslationY() != y) {\n        animators.add(ObjectAnimator.ofFloat(child,View.TRANSLATION_Y,y));\n      }\n    }\n else {\n      child.setTranslationX(x);\n      child.setTranslationY(y);\n    }\n  }\n  if (child != removingSpan) {\n    currentLineWidth+=child.getMeasuredWidth() + AndroidUtilities.dp(9);\n  }\n  allCurrentLineWidth+=child.getMeasuredWidth() + AndroidUtilities.dp(9);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 216,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4748,
        "startLineNumber" : 163,
        "startColumnNumber" : 78,
        "endLineNumber" : 252,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int count=getChildCount();\n  int width=MeasureSpec.getSize(widthMeasureSpec);\n  int maxWidth=width - AndroidUtilities.dp(26);\n  int currentLineWidth=0;\n  int y=AndroidUtilities.dp(10);\n  int allCurrentLineWidth=0;\n  int allY=AndroidUtilities.dp(10);\n  int x;\n  for (int a=0; a < count; a++) {\n    View child=getChildAt(a);\n    if (!(child instanceof GroupCreateSpan)) {\n      continue;\n    }\n    child.measure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.AT_MOST),MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(32),MeasureSpec.EXACTLY));\n    if (child != removingSpan && currentLineWidth + child.getMeasuredWidth() > maxWidth) {\n      y+=child.getMeasuredHeight() + AndroidUtilities.dp(8);\n      currentLineWidth=0;\n    }\n    if (allCurrentLineWidth + child.getMeasuredWidth() > maxWidth) {\n      allY+=child.getMeasuredHeight() + AndroidUtilities.dp(8);\n      allCurrentLineWidth=0;\n    }\n    x=AndroidUtilities.dp(13) + currentLineWidth;\n    if (!animationStarted) {\n      if (child == removingSpan) {\n        child.setTranslationX(AndroidUtilities.dp(13) + allCurrentLineWidth);\n        child.setTranslationY(allY);\n      }\n else       if (removingSpan != null) {\n        if (child.getTranslationX() != x) {\n          animators.add(ObjectAnimator.ofFloat(child,View.TRANSLATION_X,x));\n        }\n        if (child.getTranslationY() != y) {\n          animators.add(ObjectAnimator.ofFloat(child,View.TRANSLATION_Y,y));\n        }\n      }\n else {\n        child.setTranslationX(x);\n        child.setTranslationY(y);\n      }\n    }\n    if (child != removingSpan) {\n      currentLineWidth+=child.getMeasuredWidth() + AndroidUtilities.dp(9);\n    }\n    allCurrentLineWidth+=child.getMeasuredWidth() + AndroidUtilities.dp(9);\n  }\n  int minWidth;\n  if (AndroidUtilities.isTablet()) {\n    minWidth=AndroidUtilities.dp(530 - 26 - 18- 57 * 2) / 3;\n  }\n else {\n    minWidth=(Math.min(AndroidUtilities.displaySize.x,AndroidUtilities.displaySize.y) - AndroidUtilities.dp(26 + 18 + 57 * 2)) / 3;\n  }\n  if (maxWidth - currentLineWidth < minWidth) {\n    currentLineWidth=0;\n    y+=AndroidUtilities.dp(32 + 8);\n  }\n  if (maxWidth - allCurrentLineWidth < minWidth) {\n    allY+=AndroidUtilities.dp(32 + 8);\n  }\n  editText.measure(MeasureSpec.makeMeasureSpec(maxWidth - currentLineWidth,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(32),MeasureSpec.EXACTLY));\n  if (!animationStarted) {\n    int currentHeight=allY + AndroidUtilities.dp(32 + 10);\n    int fieldX=currentLineWidth + AndroidUtilities.dp(16);\n    fieldY=y;\n    if (currentAnimation != null) {\n      int resultHeight=y + AndroidUtilities.dp(32 + 10);\n      if (containerHeight != resultHeight) {\n        animators.add(ObjectAnimator.ofInt(FilterUsersActivity.this,\"containerHeight\",resultHeight));\n      }\n      if (editText.getTranslationX() != fieldX) {\n        animators.add(ObjectAnimator.ofFloat(editText,View.TRANSLATION_X,fieldX));\n      }\n      if (editText.getTranslationY() != fieldY) {\n        animators.add(ObjectAnimator.ofFloat(editText,View.TRANSLATION_Y,fieldY));\n      }\n      editText.setAllowDrawCursor(false);\n      currentAnimation.playTogether(animators);\n      currentAnimation.start();\n      animationStarted=true;\n    }\n else {\n      containerHeight=currentHeight;\n      editText.setTranslationX(fieldX);\n      editText.setTranslationY(fieldY);\n    }\n  }\n else   if (currentAnimation != null) {\n    if (!ignoreScrollEvent && removingSpan == null) {\n      editText.bringPointIntoView(editText.getSelectionStart());\n    }\n  }\n  setMeasuredDimension(width,containerHeight);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 543,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4836,
        "startLineNumber" : 162,
        "startColumnNumber" : 8,
        "endLineNumber" : 252,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override protected void onMeasure(int widthMeasureSpec,int heightMeasureSpec){\n  int count=getChildCount();\n  int width=MeasureSpec.getSize(widthMeasureSpec);\n  int maxWidth=width - AndroidUtilities.dp(26);\n  int currentLineWidth=0;\n  int y=AndroidUtilities.dp(10);\n  int allCurrentLineWidth=0;\n  int allY=AndroidUtilities.dp(10);\n  int x;\n  for (int a=0; a < count; a++) {\n    View child=getChildAt(a);\n    if (!(child instanceof GroupCreateSpan)) {\n      continue;\n    }\n    child.measure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.AT_MOST),MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(32),MeasureSpec.EXACTLY));\n    if (child != removingSpan && currentLineWidth + child.getMeasuredWidth() > maxWidth) {\n      y+=child.getMeasuredHeight() + AndroidUtilities.dp(8);\n      currentLineWidth=0;\n    }\n    if (allCurrentLineWidth + child.getMeasuredWidth() > maxWidth) {\n      allY+=child.getMeasuredHeight() + AndroidUtilities.dp(8);\n      allCurrentLineWidth=0;\n    }\n    x=AndroidUtilities.dp(13) + currentLineWidth;\n    if (!animationStarted) {\n      if (child == removingSpan) {\n        child.setTranslationX(AndroidUtilities.dp(13) + allCurrentLineWidth);\n        child.setTranslationY(allY);\n      }\n else       if (removingSpan != null) {\n        if (child.getTranslationX() != x) {\n          animators.add(ObjectAnimator.ofFloat(child,View.TRANSLATION_X,x));\n        }\n        if (child.getTranslationY() != y) {\n          animators.add(ObjectAnimator.ofFloat(child,View.TRANSLATION_Y,y));\n        }\n      }\n else {\n        child.setTranslationX(x);\n        child.setTranslationY(y);\n      }\n    }\n    if (child != removingSpan) {\n      currentLineWidth+=child.getMeasuredWidth() + AndroidUtilities.dp(9);\n    }\n    allCurrentLineWidth+=child.getMeasuredWidth() + AndroidUtilities.dp(9);\n  }\n  int minWidth;\n  if (AndroidUtilities.isTablet()) {\n    minWidth=AndroidUtilities.dp(530 - 26 - 18- 57 * 2) / 3;\n  }\n else {\n    minWidth=(Math.min(AndroidUtilities.displaySize.x,AndroidUtilities.displaySize.y) - AndroidUtilities.dp(26 + 18 + 57 * 2)) / 3;\n  }\n  if (maxWidth - currentLineWidth < minWidth) {\n    currentLineWidth=0;\n    y+=AndroidUtilities.dp(32 + 8);\n  }\n  if (maxWidth - allCurrentLineWidth < minWidth) {\n    allY+=AndroidUtilities.dp(32 + 8);\n  }\n  editText.measure(MeasureSpec.makeMeasureSpec(maxWidth - currentLineWidth,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(AndroidUtilities.dp(32),MeasureSpec.EXACTLY));\n  if (!animationStarted) {\n    int currentHeight=allY + AndroidUtilities.dp(32 + 10);\n    int fieldX=currentLineWidth + AndroidUtilities.dp(16);\n    fieldY=y;\n    if (currentAnimation != null) {\n      int resultHeight=y + AndroidUtilities.dp(32 + 10);\n      if (containerHeight != resultHeight) {\n        animators.add(ObjectAnimator.ofInt(FilterUsersActivity.this,\"containerHeight\",resultHeight));\n      }\n      if (editText.getTranslationX() != fieldX) {\n        animators.add(ObjectAnimator.ofFloat(editText,View.TRANSLATION_X,fieldX));\n      }\n      if (editText.getTranslationY() != fieldY) {\n        animators.add(ObjectAnimator.ofFloat(editText,View.TRANSLATION_Y,fieldY));\n      }\n      editText.setAllowDrawCursor(false);\n      currentAnimation.playTogether(animators);\n      currentAnimation.start();\n      animationStarted=true;\n    }\n else {\n      containerHeight=currentHeight;\n      editText.setTranslationX(fieldX);\n      editText.setTranslationY(fieldY);\n    }\n  }\n else   if (currentAnimation != null) {\n    if (!ignoreScrollEvent && removingSpan == null) {\n      editText.bringPointIntoView(editText.getSelectionStart());\n    }\n  }\n  setMeasuredDimension(width,containerHeight);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 555,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 206,
        "startColumnNumber" : 16,
        "endLineNumber" : 206,
        "endColumnNumber" : 89
      },
      "nodeContext" : "allCurrentLineWidth+=child.getMeasuredWidth() + AndroidUtilities.dp(9);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 204,
    "startColumnNumber" : 87,
    "endLineNumber" : 204,
    "endColumnNumber" : 88
  }, {
    "charLength" : 1,
    "startLineNumber" : 206,
    "startColumnNumber" : 86,
    "endLineNumber" : 206,
    "endColumnNumber" : 87
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}