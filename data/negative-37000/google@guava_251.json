{
  "id" : 251,
  "expression" : "map.get(\"b\")",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava-tests/test/com/google/common/collect/MapsTransformValuesUnmodifiableIteratorTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "map.get(\"b\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 243,
      "startColumnNumber" : 36,
      "endLineNumber" : 243,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 243,
        "startColumnNumber" : 4,
        "endLineNumber" : 243,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertEquals(expected.get(\"b\"),map.get(\"b\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 243,
        "startColumnNumber" : 4,
        "endLineNumber" : 243,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertEquals(expected.get(\"b\"),map.get(\"b\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 894,
        "startLineNumber" : 225,
        "startColumnNumber" : 58,
        "endLineNumber" : 247,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Map<String,String> underlying=Maps.newHashMap();\n  underlying.put(\"a\",null);\n  underlying.put(\"b\",\"\");\n  Map<String,Boolean> map=Maps.transformValues(underlying,new Function<String,Boolean>(){\n    @Override public Boolean apply(    @Nullable String from){\n      return from == null;\n    }\n  }\n);\n  Map<String,Boolean> expected=ImmutableMap.of(\"a\",true,\"b\",false);\n  assertMapsEqual(expected,map);\n  assertEquals(expected.get(\"a\"),map.get(\"a\"));\n  assertEquals(expected.containsKey(\"a\"),map.containsKey(\"a\"));\n  assertEquals(expected.get(\"b\"),map.get(\"b\"));\n  assertEquals(expected.containsKey(\"b\"),map.containsKey(\"b\"));\n  assertEquals(expected.get(\"c\"),map.get(\"c\"));\n  assertEquals(expected.containsKey(\"c\"),map.containsKey(\"c\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 155,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 950,
        "startLineNumber" : 225,
        "startColumnNumber" : 2,
        "endLineNumber" : 247,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testTransformEqualityOfMapsWithNullValues(){\n  Map<String,String> underlying=Maps.newHashMap();\n  underlying.put(\"a\",null);\n  underlying.put(\"b\",\"\");\n  Map<String,Boolean> map=Maps.transformValues(underlying,new Function<String,Boolean>(){\n    @Override public Boolean apply(    @Nullable String from){\n      return from == null;\n    }\n  }\n);\n  Map<String,Boolean> expected=ImmutableMap.of(\"a\",true,\"b\",false);\n  assertMapsEqual(expected,map);\n  assertEquals(expected.get(\"a\"),map.get(\"a\"));\n  assertEquals(expected.containsKey(\"a\"),map.containsKey(\"a\"));\n  assertEquals(expected.get(\"b\"),map.get(\"b\"));\n  assertEquals(expected.containsKey(\"b\"),map.containsKey(\"b\"));\n  assertEquals(expected.get(\"c\"),map.get(\"c\"));\n  assertEquals(expected.containsKey(\"c\"),map.containsKey(\"c\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 243,
        "startColumnNumber" : 4,
        "endLineNumber" : 243,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertEquals(expected.get(\"b\"),map.get(\"b\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.Boolean"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 243,
    "startColumnNumber" : 36,
    "endLineNumber" : 243,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}