{
  "id" : 52,
  "expression" : "Runnable::run",
  "projectName" : "OpenAPITools@openapi-generator",
  "commitID" : "9e1972bb1d3a4f1e3f47c87613f4050feada0146",
  "filePath" : "/samples/server/petstore/spring-mvc-j8-async/src/main/java/org/openapitools/api/UserApi.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Runnable::run",
    "nodeType" : "ExpressionMethodReference",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 193,
      "startColumnNumber" : 11,
      "endLineNumber" : 193,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 1309,
        "startLineNumber" : 177,
        "startColumnNumber" : 15,
        "endLineNumber" : 193,
        "endColumnNumber" : 25
      },
      "nodeContext" : "CompletableFuture.supplyAsync(() -> {\n  getRequest().ifPresent(request -> {\n    for (    MediaType mediaType : MediaType.parseMediaTypes(request.getHeader(\"Accept\"))) {\n      if (mediaType.isCompatibleWith(MediaType.valueOf(\"application/json\"))) {\n        String exampleString=\"{ \\\"firstName\\\" : \\\"firstName\\\", \\\"lastName\\\" : \\\"lastName\\\", \\\"password\\\" : \\\"password\\\", \\\"userStatus\\\" : 6, \\\"phone\\\" : \\\"phone\\\", \\\"id\\\" : 0, \\\"email\\\" : \\\"email\\\", \\\"username\\\" : \\\"username\\\" }\";\n        ApiUtil.setExampleResponse(request,\"application/json\",exampleString);\n        break;\n      }\n      if (mediaType.isCompatibleWith(MediaType.valueOf(\"application/xml\"))) {\n        String exampleString=\"<User> <id>123456789</id> <username>aeiou</username> <firstName>aeiou</firstName> <lastName>aeiou</lastName> <email>aeiou</email> <password>aeiou</password> <phone>aeiou</phone> <userStatus>123</userStatus> </User>\";\n        ApiUtil.setExampleResponse(request,\"application/xml\",exampleString);\n        break;\n      }\n    }\n  }\n);\n  return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n}\n,Runnable::run)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 84,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1317,
        "startLineNumber" : 177,
        "startColumnNumber" : 8,
        "endLineNumber" : 193,
        "endColumnNumber" : 26
      },
      "nodeContext" : "return CompletableFuture.supplyAsync(() -> {\n  getRequest().ifPresent(request -> {\n    for (    MediaType mediaType : MediaType.parseMediaTypes(request.getHeader(\"Accept\"))) {\n      if (mediaType.isCompatibleWith(MediaType.valueOf(\"application/json\"))) {\n        String exampleString=\"{ \\\"firstName\\\" : \\\"firstName\\\", \\\"lastName\\\" : \\\"lastName\\\", \\\"password\\\" : \\\"password\\\", \\\"userStatus\\\" : 6, \\\"phone\\\" : \\\"phone\\\", \\\"id\\\" : 0, \\\"email\\\" : \\\"email\\\", \\\"username\\\" : \\\"username\\\" }\";\n        ApiUtil.setExampleResponse(request,\"application/json\",exampleString);\n        break;\n      }\n      if (mediaType.isCompatibleWith(MediaType.valueOf(\"application/xml\"))) {\n        String exampleString=\"<User> <id>123456789</id> <username>aeiou</username> <firstName>aeiou</firstName> <lastName>aeiou</lastName> <email>aeiou</email> <password>aeiou</password> <phone>aeiou</phone> <userStatus>123</userStatus> </User>\";\n        ApiUtil.setExampleResponse(request,\"application/xml\",exampleString);\n        break;\n      }\n    }\n  }\n);\n  return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n}\n,Runnable::run);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 85,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1334,
        "startLineNumber" : 176,
        "startColumnNumber" : 6,
        "endLineNumber" : 195,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return CompletableFuture.supplyAsync(() -> {\n    getRequest().ifPresent(request -> {\n      for (      MediaType mediaType : MediaType.parseMediaTypes(request.getHeader(\"Accept\"))) {\n        if (mediaType.isCompatibleWith(MediaType.valueOf(\"application/json\"))) {\n          String exampleString=\"{ \\\"firstName\\\" : \\\"firstName\\\", \\\"lastName\\\" : \\\"lastName\\\", \\\"password\\\" : \\\"password\\\", \\\"userStatus\\\" : 6, \\\"phone\\\" : \\\"phone\\\", \\\"id\\\" : 0, \\\"email\\\" : \\\"email\\\", \\\"username\\\" : \\\"username\\\" }\";\n          ApiUtil.setExampleResponse(request,\"application/json\",exampleString);\n          break;\n        }\n        if (mediaType.isCompatibleWith(MediaType.valueOf(\"application/xml\"))) {\n          String exampleString=\"<User> <id>123456789</id> <username>aeiou</username> <firstName>aeiou</firstName> <lastName>aeiou</lastName> <email>aeiou</email> <password>aeiou</password> <phone>aeiou</phone> <userStatus>123</userStatus> </User>\";\n          ApiUtil.setExampleResponse(request,\"application/xml\",exampleString);\n          break;\n        }\n      }\n    }\n);\n    return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n  }\n,Runnable::run);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2474,
        "startLineNumber" : 149,
        "startColumnNumber" : 4,
        "endLineNumber" : 195,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * GET /user/{username} : Get user by user name\n * @param username The name that needs to be fetched. Use user1 for testing. (required)\n * @return successful operation (status code 200)or Invalid username supplied (status code 400) or User not found (status code 404)\n */\n@ApiOperation(tags={\"user\"},value=\"Get user by user name\",nickname=\"getUserByName\",notes=\"\",response=User.class) @ApiResponses({@ApiResponse(code=200,message=\"successful operation\",response=User.class),@ApiResponse(code=400,message=\"Invalid username supplied\"),@ApiResponse(code=404,message=\"User not found\")}) @RequestMapping(method=RequestMethod.GET,value=\"/user/{username}\",produces={\"application/xml\",\"application/json\"}) default CompletableFuture<ResponseEntity<User>> getUserByName(@ApiParam(value=\"The name that needs to be fetched. Use user1 for testing.\",required=true) @PathVariable(\"username\") String username){\n  return CompletableFuture.supplyAsync(() -> {\n    getRequest().ifPresent(request -> {\n      for (      MediaType mediaType : MediaType.parseMediaTypes(request.getHeader(\"Accept\"))) {\n        if (mediaType.isCompatibleWith(MediaType.valueOf(\"application/json\"))) {\n          String exampleString=\"{ \\\"firstName\\\" : \\\"firstName\\\", \\\"lastName\\\" : \\\"lastName\\\", \\\"password\\\" : \\\"password\\\", \\\"userStatus\\\" : 6, \\\"phone\\\" : \\\"phone\\\", \\\"id\\\" : 0, \\\"email\\\" : \\\"email\\\", \\\"username\\\" : \\\"username\\\" }\";\n          ApiUtil.setExampleResponse(request,\"application/json\",exampleString);\n          break;\n        }\n        if (mediaType.isCompatibleWith(MediaType.valueOf(\"application/xml\"))) {\n          String exampleString=\"<User> <id>123456789</id> <username>aeiou</username> <firstName>aeiou</firstName> <lastName>aeiou</lastName> <email>aeiou</email> <password>aeiou</password> <phone>aeiou</phone> <userStatus>123</userStatus> </User>\";\n          ApiUtil.setExampleResponse(request,\"application/xml\",exampleString);\n          break;\n        }\n      }\n    }\n);\n    return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n  }\n,Runnable::run);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 1309,
        "startLineNumber" : 177,
        "startColumnNumber" : 15,
        "endLineNumber" : 193,
        "endColumnNumber" : 25
      },
      "nodeContext" : "CompletableFuture.supplyAsync(() -> {\n  getRequest().ifPresent(request -> {\n    for (    MediaType mediaType : MediaType.parseMediaTypes(request.getHeader(\"Accept\"))) {\n      if (mediaType.isCompatibleWith(MediaType.valueOf(\"application/json\"))) {\n        String exampleString=\"{ \\\"firstName\\\" : \\\"firstName\\\", \\\"lastName\\\" : \\\"lastName\\\", \\\"password\\\" : \\\"password\\\", \\\"userStatus\\\" : 6, \\\"phone\\\" : \\\"phone\\\", \\\"id\\\" : 0, \\\"email\\\" : \\\"email\\\", \\\"username\\\" : \\\"username\\\" }\";\n        ApiUtil.setExampleResponse(request,\"application/json\",exampleString);\n        break;\n      }\n      if (mediaType.isCompatibleWith(MediaType.valueOf(\"application/xml\"))) {\n        String exampleString=\"<User> <id>123456789</id> <username>aeiou</username> <firstName>aeiou</firstName> <lastName>aeiou</lastName> <email>aeiou</email> <password>aeiou</password> <phone>aeiou</phone> <userStatus>123</userStatus> </User>\";\n        ApiUtil.setExampleResponse(request,\"application/xml\",exampleString);\n        break;\n      }\n    }\n  }\n);\n  return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);\n}\n,Runnable::run)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 84,
      "astHeight" : 14
    },
    "tokenLength" : 2,
    "type" : "java.util.concurrent.Executor"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 193,
    "startColumnNumber" : 11,
    "endLineNumber" : 193,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ ]
}