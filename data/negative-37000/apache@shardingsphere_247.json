{
  "id" : 247,
  "expression" : "distinctProjectionPrefixTokenGenerator.isGenerateSQLToken(createDatabaseStatementContext)",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/rewrite/token/DistinctProjectionPrefixTokenGeneratorTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "distinctProjectionPrefixTokenGenerator.isGenerateSQLToken(createDatabaseStatementContext)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 89,
      "startLineNumber" : 44,
      "startColumnNumber" : 20,
      "endLineNumber" : 44,
      "endColumnNumber" : 109
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 110
      },
      "nodeContext" : "assertFalse(distinctProjectionPrefixTokenGenerator.isGenerateSQLToken(createDatabaseStatementContext))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 111
      },
      "nodeContext" : "assertFalse(distinctProjectionPrefixTokenGenerator.isGenerateSQLToken(createDatabaseStatementContext));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1022,
        "startLineNumber" : 41,
        "startColumnNumber" : 43,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CreateDatabaseStatementContext createDatabaseStatementContext=mock(CreateDatabaseStatementContext.class);\n  DistinctProjectionPrefixTokenGenerator distinctProjectionPrefixTokenGenerator=new DistinctProjectionPrefixTokenGenerator();\n  assertFalse(distinctProjectionPrefixTokenGenerator.isGenerateSQLToken(createDatabaseStatementContext));\n  SelectStatementContext selectStatementContext=mock(SelectStatementContext.class,RETURNS_DEEP_STUBS);\n  List<AggregationDistinctProjection> aggregationDistinctProjectionList=new LinkedList<>();\n  when(selectStatementContext.getProjectionsContext().getAggregationDistinctProjections()).thenReturn(aggregationDistinctProjectionList);\n  assertFalse(distinctProjectionPrefixTokenGenerator.isGenerateSQLToken(selectStatementContext));\n  aggregationDistinctProjectionList.add(mock(AggregationDistinctProjection.class));\n  assertTrue(distinctProjectionPrefixTokenGenerator.isGenerateSQLToken(selectStatementContext));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1071,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void assertIsGenerateSQLToken(){\n  CreateDatabaseStatementContext createDatabaseStatementContext=mock(CreateDatabaseStatementContext.class);\n  DistinctProjectionPrefixTokenGenerator distinctProjectionPrefixTokenGenerator=new DistinctProjectionPrefixTokenGenerator();\n  assertFalse(distinctProjectionPrefixTokenGenerator.isGenerateSQLToken(createDatabaseStatementContext));\n  SelectStatementContext selectStatementContext=mock(SelectStatementContext.class,RETURNS_DEEP_STUBS);\n  List<AggregationDistinctProjection> aggregationDistinctProjectionList=new LinkedList<>();\n  when(selectStatementContext.getProjectionsContext().getAggregationDistinctProjections()).thenReturn(aggregationDistinctProjectionList);\n  assertFalse(distinctProjectionPrefixTokenGenerator.isGenerateSQLToken(selectStatementContext));\n  aggregationDistinctProjectionList.add(mock(AggregationDistinctProjection.class));\n  assertTrue(distinctProjectionPrefixTokenGenerator.isGenerateSQLToken(selectStatementContext));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 89,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 111
      },
      "nodeContext" : "assertFalse(distinctProjectionPrefixTokenGenerator.isGenerateSQLToken(createDatabaseStatementContext));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 89,
    "startLineNumber" : 44,
    "startColumnNumber" : 20,
    "endLineNumber" : 44,
    "endColumnNumber" : 109
  } ],
  "layoutRelationDataList" : [ ]
}