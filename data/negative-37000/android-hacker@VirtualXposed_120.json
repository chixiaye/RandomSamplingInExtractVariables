{
  "id" : 120,
  "expression" : "mSize + (mSize >> 1)",
  "projectName" : "android-hacker@VirtualXposed",
  "commitID" : "8e98dd20e6a751089d4eb2642fa6bf088a3e7a79",
  "filePath" : "/VirtualApp/lib/src/main/java/com/lody/virtual/helper/collection/SimpleArrayMap.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mSize + (mSize >> 1)",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 392,
      "startColumnNumber" : 52,
      "endLineNumber" : 392,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,thenExpression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 392,
        "startColumnNumber" : 51,
        "endLineNumber" : 392,
        "endColumnNumber" : 69
      },
      "nodeContext" : "(mSize + (mSize >> 1))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 392,
        "startColumnNumber" : 26,
        "endLineNumber" : 393,
        "endColumnNumber" : 70
      },
      "nodeContext" : "mSize >= (BASE_SIZE * 2) ? (mSize + (mSize >> 1)) : (mSize >= BASE_SIZE ? (BASE_SIZE * 2) : BASE_SIZE)",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 392,
        "startColumnNumber" : 22,
        "endLineNumber" : 393,
        "endColumnNumber" : 70
      },
      "nodeContext" : "n=mSize >= (BASE_SIZE * 2) ? (mSize + (mSize >> 1)) : (mSize >= BASE_SIZE ? (BASE_SIZE * 2) : BASE_SIZE)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 392,
        "startColumnNumber" : 12,
        "endLineNumber" : 393,
        "endColumnNumber" : 71
      },
      "nodeContext" : "final int n=mSize >= (BASE_SIZE * 2) ? (mSize + (mSize >> 1)) : (mSize >= BASE_SIZE ? (BASE_SIZE * 2) : BASE_SIZE);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 674,
        "startLineNumber" : 391,
        "startColumnNumber" : 37,
        "endLineNumber" : 408,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final int n=mSize >= (BASE_SIZE * 2) ? (mSize + (mSize >> 1)) : (mSize >= BASE_SIZE ? (BASE_SIZE * 2) : BASE_SIZE);\n  if (DEBUG)   Log.d(TAG,\"put: grow from \" + mHashes.length + \" to \"+ n);\n  final int[] ohashes=mHashes;\n  final Object[] oarray=mArray;\n  allocArrays(n);\n  if (mHashes.length > 0) {\n    if (DEBUG)     Log.d(TAG,\"put: copy 0-\" + mSize + \" to 0\");\n    System.arraycopy(ohashes,0,mHashes,0,ohashes.length);\n    System.arraycopy(oarray,0,mArray,0,oarray.length);\n  }\n  freeArrays(ohashes,oarray,mSize);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 703,
        "startLineNumber" : 391,
        "startColumnNumber" : 8,
        "endLineNumber" : 408,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mSize >= mHashes.length) {\n  final int n=mSize >= (BASE_SIZE * 2) ? (mSize + (mSize >> 1)) : (mSize >= BASE_SIZE ? (BASE_SIZE * 2) : BASE_SIZE);\n  if (DEBUG)   Log.d(TAG,\"put: grow from \" + mHashes.length + \" to \"+ n);\n  final int[] ohashes=mHashes;\n  final Object[] oarray=mArray;\n  allocArrays(n);\n  if (mHashes.length > 0) {\n    if (DEBUG)     Log.d(TAG,\"put: copy 0-\" + mSize + \" to 0\");\n    System.arraycopy(ohashes,0,mHashes,0,ohashes.length);\n    System.arraycopy(oarray,0,mArray,0,oarray.length);\n  }\n  freeArrays(ohashes,oarray,mSize);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 117,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1627,
        "startLineNumber" : 373,
        "startColumnNumber" : 33,
        "endLineNumber" : 422,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int hash;\n  int index;\n  if (key == null) {\n    hash=0;\n    index=indexOfNull();\n  }\n else {\n    hash=key.hashCode();\n    index=indexOf(key,hash);\n  }\n  if (index >= 0) {\n    index=(index << 1) + 1;\n    final V old=(V)mArray[index];\n    mArray[index]=value;\n    return old;\n  }\n  index=~index;\n  if (mSize >= mHashes.length) {\n    final int n=mSize >= (BASE_SIZE * 2) ? (mSize + (mSize >> 1)) : (mSize >= BASE_SIZE ? (BASE_SIZE * 2) : BASE_SIZE);\n    if (DEBUG)     Log.d(TAG,\"put: grow from \" + mHashes.length + \" to \"+ n);\n    final int[] ohashes=mHashes;\n    final Object[] oarray=mArray;\n    allocArrays(n);\n    if (mHashes.length > 0) {\n      if (DEBUG)       Log.d(TAG,\"put: copy 0-\" + mSize + \" to 0\");\n      System.arraycopy(ohashes,0,mHashes,0,ohashes.length);\n      System.arraycopy(oarray,0,mArray,0,oarray.length);\n    }\n    freeArrays(ohashes,oarray,mSize);\n  }\n  if (index < mSize) {\n    if (DEBUG)     Log.d(TAG,\"put: move \" + index + \"-\"+ (mSize - index)+ \" to \"+ (index + 1));\n    System.arraycopy(mHashes,index,mHashes,index + 1,mSize - index);\n    System.arraycopy(mArray,index << 1,mArray,(index + 1) << 1,(mSize - index) << 1);\n  }\n  mHashes[index]=hash;\n  mArray[index << 1]=key;\n  mArray[(index << 1) + 1]=value;\n  mSize++;\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2045,
        "startLineNumber" : 365,
        "startColumnNumber" : 4,
        "endLineNumber" : 422,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Add a new value to the array map.\n * @param key The key under which to store the value.  <b>Must not be null.</b>  Ifthis key already exists in the array, its value will be replaced.\n * @param value The value to store for the given key.\n * @return Returns the old value that was stored for the given key, or null if therewas no such key.\n */\npublic V put(K key,V value){\n  final int hash;\n  int index;\n  if (key == null) {\n    hash=0;\n    index=indexOfNull();\n  }\n else {\n    hash=key.hashCode();\n    index=indexOf(key,hash);\n  }\n  if (index >= 0) {\n    index=(index << 1) + 1;\n    final V old=(V)mArray[index];\n    mArray[index]=value;\n    return old;\n  }\n  index=~index;\n  if (mSize >= mHashes.length) {\n    final int n=mSize >= (BASE_SIZE * 2) ? (mSize + (mSize >> 1)) : (mSize >= BASE_SIZE ? (BASE_SIZE * 2) : BASE_SIZE);\n    if (DEBUG)     Log.d(TAG,\"put: grow from \" + mHashes.length + \" to \"+ n);\n    final int[] ohashes=mHashes;\n    final Object[] oarray=mArray;\n    allocArrays(n);\n    if (mHashes.length > 0) {\n      if (DEBUG)       Log.d(TAG,\"put: copy 0-\" + mSize + \" to 0\");\n      System.arraycopy(ohashes,0,mHashes,0,ohashes.length);\n      System.arraycopy(oarray,0,mArray,0,oarray.length);\n    }\n    freeArrays(ohashes,oarray,mSize);\n  }\n  if (index < mSize) {\n    if (DEBUG)     Log.d(TAG,\"put: move \" + index + \"-\"+ (mSize - index)+ \" to \"+ (index + 1));\n    System.arraycopy(mHashes,index,mHashes,index + 1,mSize - index);\n    System.arraycopy(mArray,index << 1,mArray,(index + 1) << 1,(mSize - index) << 1);\n  }\n  mHashes[index]=hash;\n  mArray[index << 1]=key;\n  mArray[(index << 1) + 1]=value;\n  mSize++;\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 297,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,thenExpression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 392,
        "startColumnNumber" : 51,
        "endLineNumber" : 392,
        "endColumnNumber" : 69
      },
      "nodeContext" : "(mSize + (mSize >> 1))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 7,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 392,
    "startColumnNumber" : 52,
    "endLineNumber" : 392,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}