{
  "id" : 418,
  "expression" : "header.bytesLeft() < 7",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/extractor/src/main/java/com/google/android/exoplayer2/extractor/VorbisUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "header.bytesLeft() < 7",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 263,
      "startColumnNumber" : 8,
      "endLineNumber" : 263,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 233,
        "startLineNumber" : 263,
        "startColumnNumber" : 4,
        "endLineNumber" : 270,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (header.bytesLeft() < 7) {\n  if (quiet) {\n    return false;\n  }\n else {\n    throw ParserException.createForMalformedContainer(\"too short header: \" + header.bytesLeft(),null);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 993,
        "startLineNumber" : 262,
        "startColumnNumber" : 86,
        "endLineNumber" : 295,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (header.bytesLeft() < 7) {\n    if (quiet) {\n      return false;\n    }\n else {\n      throw ParserException.createForMalformedContainer(\"too short header: \" + header.bytesLeft(),null);\n    }\n  }\n  if (header.readUnsignedByte() != headerType) {\n    if (quiet) {\n      return false;\n    }\n else {\n      throw ParserException.createForMalformedContainer(\"expected header type \" + Integer.toHexString(headerType),null);\n    }\n  }\n  if (!(header.readUnsignedByte() == 'v' && header.readUnsignedByte() == 'o' && header.readUnsignedByte() == 'r' && header.readUnsignedByte() == 'b' && header.readUnsignedByte() == 'i' && header.readUnsignedByte() == 's')) {\n    if (quiet) {\n      return false;\n    }\n else {\n      throw ParserException.createForMalformedContainer(\"expected characters 'vorbis'\",null);\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1590,
        "startLineNumber" : 251,
        "startColumnNumber" : 2,
        "endLineNumber" : 295,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Verifies whether the next bytes in  {@code header} are a Vorbis header of the given {@code headerType}.\n * @param headerType the type of the header expected.\n * @param header the alleged header bytes.\n * @param quiet if {@code true} no exceptions are thrown. Instead {@code false} is returned.\n * @return the number of bytes read.\n * @throws ParserException thrown if header type or capture pattern is not as expected.\n */\npublic static boolean verifyVorbisHeaderCapturePattern(int headerType,ParsableByteArray header,boolean quiet) throws ParserException {\n  if (header.bytesLeft() < 7) {\n    if (quiet) {\n      return false;\n    }\n else {\n      throw ParserException.createForMalformedContainer(\"too short header: \" + header.bytesLeft(),null);\n    }\n  }\n  if (header.readUnsignedByte() != headerType) {\n    if (quiet) {\n      return false;\n    }\n else {\n      throw ParserException.createForMalformedContainer(\"expected header type \" + Integer.toHexString(headerType),null);\n    }\n  }\n  if (!(header.readUnsignedByte() == 'v' && header.readUnsignedByte() == 'o' && header.readUnsignedByte() == 'r' && header.readUnsignedByte() == 'b' && header.readUnsignedByte() == 'i' && header.readUnsignedByte() == 's')) {\n    if (quiet) {\n      return false;\n    }\n else {\n      throw ParserException.createForMalformedContainer(\"expected characters 'vorbis'\",null);\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 119,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 233,
        "startLineNumber" : 263,
        "startColumnNumber" : 4,
        "endLineNumber" : 270,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (header.bytesLeft() < 7) {\n  if (quiet) {\n    return false;\n  }\n else {\n    throw ParserException.createForMalformedContainer(\"too short header: \" + header.bytesLeft(),null);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 9
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 263,
    "startColumnNumber" : 8,
    "endLineNumber" : 263,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}