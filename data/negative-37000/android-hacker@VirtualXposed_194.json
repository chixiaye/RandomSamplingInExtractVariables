{
  "id" : 194,
  "expression" : "\"remove: copy from \"",
  "projectName" : "android-hacker@VirtualXposed",
  "commitID" : "8e98dd20e6a751089d4eb2642fa6bf088a3e7a79",
  "filePath" : "/VirtualApp/lib/src/main/java/com/lody/virtual/helper/collection/ArraySet.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"remove: copy from \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 457,
      "startColumnNumber" : 42,
      "endLineNumber" : 457,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 457,
        "startColumnNumber" : 42,
        "endLineNumber" : 458,
        "endColumnNumber" : 44
      },
      "nodeContext" : "\"remove: copy from \" + (index + 1) + \"-\"+ mSize+ \" to \"+ index",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 457,
        "startColumnNumber" : 31,
        "endLineNumber" : 458,
        "endColumnNumber" : 45
      },
      "nodeContext" : "Log.d(TAG,\"remove: copy from \" + (index + 1) + \"-\"+ mSize+ \" to \"+ index)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 457,
        "startColumnNumber" : 31,
        "endLineNumber" : 458,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Log.d(TAG,\"remove: copy from \" + (index + 1) + \"-\"+ mSize+ \" to \"+ index);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 457,
        "startColumnNumber" : 20,
        "endLineNumber" : 458,
        "endColumnNumber" : 46
      },
      "nodeContext" : "if (DEBUG) Log.d(TAG,\"remove: copy from \" + (index + 1) + \"-\"+ mSize+ \" to \"+ index);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 331,
        "startLineNumber" : 456,
        "startColumnNumber" : 35,
        "endLineNumber" : 461,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (DEBUG)   Log.d(TAG,\"remove: copy from \" + (index + 1) + \"-\"+ mSize+ \" to \"+ index);\n  System.arraycopy(ohashes,index + 1,mHashes,index,mSize - index);\n  System.arraycopy(oarray,index + 1,mArray,index,mSize - index);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 350,
        "startLineNumber" : 456,
        "startColumnNumber" : 16,
        "endLineNumber" : 461,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (index < mSize) {\n  if (DEBUG)   Log.d(TAG,\"remove: copy from \" + (index + 1) + \"-\"+ mSize+ \" to \"+ index);\n  System.arraycopy(ohashes,index + 1,mHashes,index,mSize - index);\n  System.arraycopy(oarray,index + 1,mArray,index,mSize - index);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1193,
        "startLineNumber" : 438,
        "startColumnNumber" : 76,
        "endLineNumber" : 462,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  final int n=mSize > (BASE_SIZE * 2) ? (mSize + (mSize >> 1)) : (BASE_SIZE * 2);\n  if (DEBUG)   Log.d(TAG,\"remove: shrink from \" + mHashes.length + \" to \"+ n);\n  final int[] ohashes=mHashes;\n  final Object[] oarray=mArray;\n  allocArrays(n);\n  mSize--;\n  if (index > 0) {\n    if (DEBUG)     Log.d(TAG,\"remove: copy from 0-\" + index + \" to 0\");\n    System.arraycopy(ohashes,0,mHashes,0,index);\n    System.arraycopy(oarray,0,mArray,0,index);\n  }\n  if (index < mSize) {\n    if (DEBUG)     Log.d(TAG,\"remove: copy from \" + (index + 1) + \"-\"+ mSize+ \" to \"+ index);\n    System.arraycopy(ohashes,index + 1,mHashes,index,mSize - index);\n    System.arraycopy(oarray,index + 1,mArray,index,mSize - index);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1703,
        "startLineNumber" : 438,
        "startColumnNumber" : 12,
        "endLineNumber" : 471,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (mHashes.length > (BASE_SIZE * 2) && mSize < mHashes.length / 3) {\n  final int n=mSize > (BASE_SIZE * 2) ? (mSize + (mSize >> 1)) : (BASE_SIZE * 2);\n  if (DEBUG)   Log.d(TAG,\"remove: shrink from \" + mHashes.length + \" to \"+ n);\n  final int[] ohashes=mHashes;\n  final Object[] oarray=mArray;\n  allocArrays(n);\n  mSize--;\n  if (index > 0) {\n    if (DEBUG)     Log.d(TAG,\"remove: copy from 0-\" + index + \" to 0\");\n    System.arraycopy(ohashes,0,mHashes,0,index);\n    System.arraycopy(oarray,0,mArray,0,index);\n  }\n  if (index < mSize) {\n    if (DEBUG)     Log.d(TAG,\"remove: copy from \" + (index + 1) + \"-\"+ mSize+ \" to \"+ index);\n    System.arraycopy(ohashes,index + 1,mHashes,index,mSize - index);\n    System.arraycopy(oarray,index + 1,mArray,index,mSize - index);\n  }\n}\n else {\n  mSize--;\n  if (index < mSize) {\n    if (DEBUG)     Log.d(TAG,\"remove: move \" + (index + 1) + \"-\"+ mSize+ \" to \"+ index);\n    System.arraycopy(mHashes,index + 1,mHashes,index,mSize - index);\n    System.arraycopy(mArray,index + 1,mArray,index,mSize - index);\n  }\n  mArray[mSize]=null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 219,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1727,
        "startLineNumber" : 437,
        "startColumnNumber" : 15,
        "endLineNumber" : 472,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (mHashes.length > (BASE_SIZE * 2) && mSize < mHashes.length / 3) {\n    final int n=mSize > (BASE_SIZE * 2) ? (mSize + (mSize >> 1)) : (BASE_SIZE * 2);\n    if (DEBUG)     Log.d(TAG,\"remove: shrink from \" + mHashes.length + \" to \"+ n);\n    final int[] ohashes=mHashes;\n    final Object[] oarray=mArray;\n    allocArrays(n);\n    mSize--;\n    if (index > 0) {\n      if (DEBUG)       Log.d(TAG,\"remove: copy from 0-\" + index + \" to 0\");\n      System.arraycopy(ohashes,0,mHashes,0,index);\n      System.arraycopy(oarray,0,mArray,0,index);\n    }\n    if (index < mSize) {\n      if (DEBUG)       Log.d(TAG,\"remove: copy from \" + (index + 1) + \"-\"+ mSize+ \" to \"+ index);\n      System.arraycopy(ohashes,index + 1,mHashes,index,mSize - index);\n      System.arraycopy(oarray,index + 1,mArray,index,mSize - index);\n    }\n  }\n else {\n    mSize--;\n    if (index < mSize) {\n      if (DEBUG)       Log.d(TAG,\"remove: move \" + (index + 1) + \"-\"+ mSize+ \" to \"+ index);\n      System.arraycopy(mHashes,index + 1,mHashes,index,mSize - index);\n      System.arraycopy(mArray,index + 1,mArray,index,mSize - index);\n    }\n    mArray[mSize]=null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 220,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2047,
        "startLineNumber" : 430,
        "startColumnNumber" : 8,
        "endLineNumber" : 472,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mSize <= 1) {\n  if (DEBUG)   Log.d(TAG,\"remove: shrink from \" + mHashes.length + \" to 0\");\n  freeArrays(mHashes,mArray,mSize);\n  mHashes=ContainerHelpers.EMPTY_INTS;\n  mArray=ContainerHelpers.EMPTY_OBJECTS;\n  mSize=0;\n}\n else {\n  if (mHashes.length > (BASE_SIZE * 2) && mSize < mHashes.length / 3) {\n    final int n=mSize > (BASE_SIZE * 2) ? (mSize + (mSize >> 1)) : (BASE_SIZE * 2);\n    if (DEBUG)     Log.d(TAG,\"remove: shrink from \" + mHashes.length + \" to \"+ n);\n    final int[] ohashes=mHashes;\n    final Object[] oarray=mArray;\n    allocArrays(n);\n    mSize--;\n    if (index > 0) {\n      if (DEBUG)       Log.d(TAG,\"remove: copy from 0-\" + index + \" to 0\");\n      System.arraycopy(ohashes,0,mHashes,0,index);\n      System.arraycopy(oarray,0,mArray,0,index);\n    }\n    if (index < mSize) {\n      if (DEBUG)       Log.d(TAG,\"remove: copy from \" + (index + 1) + \"-\"+ mSize+ \" to \"+ index);\n      System.arraycopy(ohashes,index + 1,mHashes,index,mSize - index);\n      System.arraycopy(oarray,index + 1,mArray,index,mSize - index);\n    }\n  }\n else {\n    mSize--;\n    if (index < mSize) {\n      if (DEBUG)       Log.d(TAG,\"remove: move \" + (index + 1) + \"-\"+ mSize+ \" to \"+ index);\n      System.arraycopy(mHashes,index + 1,mHashes,index,mSize - index);\n      System.arraycopy(mArray,index + 1,mArray,index,mSize - index);\n    }\n    mArray[mSize]=null;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 260,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2128,
        "startLineNumber" : 428,
        "startColumnNumber" : 33,
        "endLineNumber" : 474,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Object old=mArray[index];\n  if (mSize <= 1) {\n    if (DEBUG)     Log.d(TAG,\"remove: shrink from \" + mHashes.length + \" to 0\");\n    freeArrays(mHashes,mArray,mSize);\n    mHashes=ContainerHelpers.EMPTY_INTS;\n    mArray=ContainerHelpers.EMPTY_OBJECTS;\n    mSize=0;\n  }\n else {\n    if (mHashes.length > (BASE_SIZE * 2) && mSize < mHashes.length / 3) {\n      final int n=mSize > (BASE_SIZE * 2) ? (mSize + (mSize >> 1)) : (BASE_SIZE * 2);\n      if (DEBUG)       Log.d(TAG,\"remove: shrink from \" + mHashes.length + \" to \"+ n);\n      final int[] ohashes=mHashes;\n      final Object[] oarray=mArray;\n      allocArrays(n);\n      mSize--;\n      if (index > 0) {\n        if (DEBUG)         Log.d(TAG,\"remove: copy from 0-\" + index + \" to 0\");\n        System.arraycopy(ohashes,0,mHashes,0,index);\n        System.arraycopy(oarray,0,mArray,0,index);\n      }\n      if (index < mSize) {\n        if (DEBUG)         Log.d(TAG,\"remove: copy from \" + (index + 1) + \"-\"+ mSize+ \" to \"+ index);\n        System.arraycopy(ohashes,index + 1,mHashes,index,mSize - index);\n        System.arraycopy(oarray,index + 1,mArray,index,mSize - index);\n      }\n    }\n else {\n      mSize--;\n      if (index < mSize) {\n        if (DEBUG)         Log.d(TAG,\"remove: move \" + (index + 1) + \"-\"+ mSize+ \" to \"+ index);\n        System.arraycopy(mHashes,index + 1,mHashes,index,mSize - index);\n        System.arraycopy(mArray,index + 1,mArray,index,mSize - index);\n      }\n      mArray[mSize]=null;\n    }\n  }\n  return (E)old;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 275,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2373,
        "startLineNumber" : 423,
        "startColumnNumber" : 4,
        "endLineNumber" : 474,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Remove the key/value mapping at the given index.\n * @param index The desired index, must be between 0 and {@link #size()}-1.\n * @return Returns the value that was stored at this index.\n */\npublic E removeAt(int index){\n  final Object old=mArray[index];\n  if (mSize <= 1) {\n    if (DEBUG)     Log.d(TAG,\"remove: shrink from \" + mHashes.length + \" to 0\");\n    freeArrays(mHashes,mArray,mSize);\n    mHashes=ContainerHelpers.EMPTY_INTS;\n    mArray=ContainerHelpers.EMPTY_OBJECTS;\n    mSize=0;\n  }\n else {\n    if (mHashes.length > (BASE_SIZE * 2) && mSize < mHashes.length / 3) {\n      final int n=mSize > (BASE_SIZE * 2) ? (mSize + (mSize >> 1)) : (BASE_SIZE * 2);\n      if (DEBUG)       Log.d(TAG,\"remove: shrink from \" + mHashes.length + \" to \"+ n);\n      final int[] ohashes=mHashes;\n      final Object[] oarray=mArray;\n      allocArrays(n);\n      mSize--;\n      if (index > 0) {\n        if (DEBUG)         Log.d(TAG,\"remove: copy from 0-\" + index + \" to 0\");\n        System.arraycopy(ohashes,0,mHashes,0,index);\n        System.arraycopy(oarray,0,mArray,0,index);\n      }\n      if (index < mSize) {\n        if (DEBUG)         Log.d(TAG,\"remove: copy from \" + (index + 1) + \"-\"+ mSize+ \" to \"+ index);\n        System.arraycopy(ohashes,index + 1,mHashes,index,mSize - index);\n        System.arraycopy(oarray,index + 1,mArray,index,mSize - index);\n      }\n    }\n else {\n      mSize--;\n      if (index < mSize) {\n        if (DEBUG)         Log.d(TAG,\"remove: move \" + (index + 1) + \"-\"+ mSize+ \" to \"+ index);\n        System.arraycopy(mHashes,index + 1,mHashes,index,mSize - index);\n        System.arraycopy(mArray,index + 1,mArray,index,mSize - index);\n      }\n      mArray[mSize]=null;\n    }\n  }\n  return (E)old;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 284,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 457,
        "startColumnNumber" : 42,
        "endLineNumber" : 458,
        "endColumnNumber" : 44
      },
      "nodeContext" : "\"remove: copy from \" + (index + 1) + \"-\"+ mSize+ \" to \"+ index",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 457,
    "startColumnNumber" : 42,
    "endLineNumber" : 457,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}