{
  "id" : 396,
  "expression" : "new String[emptyNames.size()]",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-common/src/main/java/com/ctrip/framework/apollo/common/utils/BeanUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new String[emptyNames.size()]",
    "nodeType" : "ArrayCreation",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 71,
      "startColumnNumber" : 22,
      "endLineNumber" : 71,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 71,
        "startColumnNumber" : 13,
        "endLineNumber" : 71,
        "endColumnNumber" : 51
      },
      "nodeContext" : "result=new String[emptyNames.size()]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 52
      },
      "nodeContext" : "String[] result=new String[emptyNames.size()];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 432,
        "startLineNumber" : 62,
        "startColumnNumber" : 62,
        "endLineNumber" : 73,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final BeanWrapper src=new BeanWrapperImpl(source);\n  PropertyDescriptor[] pds=src.getPropertyDescriptors();\n  Set<String> emptyNames=new HashSet<String>();\n  for (  PropertyDescriptor pd : pds) {\n    Object srcValue=src.getPropertyValue(pd.getName());\n    if (srcValue == null)     emptyNames.add(pd.getName());\n  }\n  String[] result=new String[emptyNames.size()];\n  return emptyNames.toArray(result);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 492,
        "startLineNumber" : 62,
        "startColumnNumber" : 2,
        "endLineNumber" : 73,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static String[] getNullPropertyNames(Object source){\n  final BeanWrapper src=new BeanWrapperImpl(source);\n  PropertyDescriptor[] pds=src.getPropertyDescriptors();\n  Set<String> emptyNames=new HashSet<String>();\n  for (  PropertyDescriptor pd : pds) {\n    Object srcValue=src.getPropertyValue(pd.getName());\n    if (srcValue == null)     emptyNames.add(pd.getName());\n  }\n  String[] result=new String[emptyNames.size()];\n  return emptyNames.toArray(result);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 52
      },
      "nodeContext" : "String[] result=new String[emptyNames.size()];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.lang.String[]"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 71,
    "startColumnNumber" : 22,
    "endLineNumber" : 71,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}