{
  "id" : 148,
  "expression" : "field",
  "projectName" : "projectlombok@lombok",
  "commitID" : "25def866b50860715ee7c315c678b8c3d1ba9b56",
  "filePath" : "/src/core/lombok/eclipse/handlers/HandleGetter.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "field",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 103,
      "startColumnNumber" : 41,
      "endLineNumber" : 103,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 103,
        "startColumnNumber" : 7,
        "endLineNumber" : 103,
        "endColumnNumber" : 47
      },
      "nodeContext" : "fieldQualifiesForGetterGeneration(field)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 103,
        "startColumnNumber" : 3,
        "endLineNumber" : 103,
        "endColumnNumber" : 104
      },
      "nodeContext" : "if (fieldQualifiesForGetterGeneration(field)) generateGetterForField(field,pos.get(),level,false);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 102,
        "startColumnNumber" : 44,
        "endLineNumber" : 104,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (fieldQualifiesForGetterGeneration(field))   generateGetterForField(field,pos.get(),level,false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 102,
        "startColumnNumber" : 2,
        "endLineNumber" : 104,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (EclipseNode field : typeNode.down()) {\n  if (fieldQualifiesForGetterGeneration(field))   generateGetterForField(field,pos.get(),level,false);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 934,
        "startLineNumber" : 79,
        "startColumnNumber" : 129,
        "endLineNumber" : 106,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (checkForTypeLevelGetter) {\n    if (typeNode != null)     for (    EclipseNode child : typeNode.down()) {\n      if (child.getKind() == Kind.ANNOTATION) {\n        if (annotationTypeMatches(Getter.class,child)) {\n          return true;\n        }\n      }\n    }\n  }\n  TypeDeclaration typeDecl=null;\n  if (typeNode.get() instanceof TypeDeclaration)   typeDecl=(TypeDeclaration)typeNode.get();\n  int modifiers=typeDecl == null ? 0 : typeDecl.modifiers;\n  boolean notAClass=(modifiers & (ClassFileConstants.AccInterface | ClassFileConstants.AccAnnotation)) != 0;\n  if (typeDecl == null || notAClass) {\n    pos.addError(\"@Getter is only supported on a class, an enum, or a field.\");\n    return false;\n  }\n  for (  EclipseNode field : typeNode.down()) {\n    if (fieldQualifiesForGetterGeneration(field))     generateGetterForField(field,pos.get(),level,false);\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1062,
        "startLineNumber" : 79,
        "startColumnNumber" : 1,
        "endLineNumber" : 106,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public boolean generateGetterForType(EclipseNode typeNode,EclipseNode pos,AccessLevel level,boolean checkForTypeLevelGetter){\n  if (checkForTypeLevelGetter) {\n    if (typeNode != null)     for (    EclipseNode child : typeNode.down()) {\n      if (child.getKind() == Kind.ANNOTATION) {\n        if (annotationTypeMatches(Getter.class,child)) {\n          return true;\n        }\n      }\n    }\n  }\n  TypeDeclaration typeDecl=null;\n  if (typeNode.get() instanceof TypeDeclaration)   typeDecl=(TypeDeclaration)typeNode.get();\n  int modifiers=typeDecl == null ? 0 : typeDecl.modifiers;\n  boolean notAClass=(modifiers & (ClassFileConstants.AccInterface | ClassFileConstants.AccAnnotation)) != 0;\n  if (typeDecl == null || notAClass) {\n    pos.addError(\"@Getter is only supported on a class, an enum, or a field.\");\n    return false;\n  }\n  for (  EclipseNode field : typeNode.down()) {\n    if (fieldQualifiesForGetterGeneration(field))     generateGetterForField(field,pos.get(),level,false);\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 144,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 103,
        "startColumnNumber" : 3,
        "endLineNumber" : 103,
        "endColumnNumber" : 104
      },
      "nodeContext" : "if (fieldQualifiesForGetterGeneration(field)) generateGetterForField(field,pos.get(),level,false);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "lombok.eclipse.EclipseNode"
  }, {
    "nodeContext" : "field",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 103,
      "startColumnNumber" : 72,
      "endLineNumber" : 103,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 103,
        "startColumnNumber" : 49,
        "endLineNumber" : 103,
        "endColumnNumber" : 103
      },
      "nodeContext" : "generateGetterForField(field,pos.get(),level,false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 103,
        "startColumnNumber" : 49,
        "endLineNumber" : 103,
        "endColumnNumber" : 104
      },
      "nodeContext" : "generateGetterForField(field,pos.get(),level,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 103,
        "startColumnNumber" : 3,
        "endLineNumber" : 103,
        "endColumnNumber" : 104
      },
      "nodeContext" : "if (fieldQualifiesForGetterGeneration(field)) generateGetterForField(field,pos.get(),level,false);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 102,
        "startColumnNumber" : 44,
        "endLineNumber" : 104,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (fieldQualifiesForGetterGeneration(field))   generateGetterForField(field,pos.get(),level,false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 102,
        "startColumnNumber" : 2,
        "endLineNumber" : 104,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (EclipseNode field : typeNode.down()) {\n  if (fieldQualifiesForGetterGeneration(field))   generateGetterForField(field,pos.get(),level,false);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 934,
        "startLineNumber" : 79,
        "startColumnNumber" : 129,
        "endLineNumber" : 106,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (checkForTypeLevelGetter) {\n    if (typeNode != null)     for (    EclipseNode child : typeNode.down()) {\n      if (child.getKind() == Kind.ANNOTATION) {\n        if (annotationTypeMatches(Getter.class,child)) {\n          return true;\n        }\n      }\n    }\n  }\n  TypeDeclaration typeDecl=null;\n  if (typeNode.get() instanceof TypeDeclaration)   typeDecl=(TypeDeclaration)typeNode.get();\n  int modifiers=typeDecl == null ? 0 : typeDecl.modifiers;\n  boolean notAClass=(modifiers & (ClassFileConstants.AccInterface | ClassFileConstants.AccAnnotation)) != 0;\n  if (typeDecl == null || notAClass) {\n    pos.addError(\"@Getter is only supported on a class, an enum, or a field.\");\n    return false;\n  }\n  for (  EclipseNode field : typeNode.down()) {\n    if (fieldQualifiesForGetterGeneration(field))     generateGetterForField(field,pos.get(),level,false);\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1062,
        "startLineNumber" : 79,
        "startColumnNumber" : 1,
        "endLineNumber" : 106,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public boolean generateGetterForType(EclipseNode typeNode,EclipseNode pos,AccessLevel level,boolean checkForTypeLevelGetter){\n  if (checkForTypeLevelGetter) {\n    if (typeNode != null)     for (    EclipseNode child : typeNode.down()) {\n      if (child.getKind() == Kind.ANNOTATION) {\n        if (annotationTypeMatches(Getter.class,child)) {\n          return true;\n        }\n      }\n    }\n  }\n  TypeDeclaration typeDecl=null;\n  if (typeNode.get() instanceof TypeDeclaration)   typeDecl=(TypeDeclaration)typeNode.get();\n  int modifiers=typeDecl == null ? 0 : typeDecl.modifiers;\n  boolean notAClass=(modifiers & (ClassFileConstants.AccInterface | ClassFileConstants.AccAnnotation)) != 0;\n  if (typeDecl == null || notAClass) {\n    pos.addError(\"@Getter is only supported on a class, an enum, or a field.\");\n    return false;\n  }\n  for (  EclipseNode field : typeNode.down()) {\n    if (fieldQualifiesForGetterGeneration(field))     generateGetterForField(field,pos.get(),level,false);\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 144,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 103,
        "startColumnNumber" : 3,
        "endLineNumber" : 103,
        "endColumnNumber" : 104
      },
      "nodeContext" : "if (fieldQualifiesForGetterGeneration(field)) generateGetterForField(field,pos.get(),level,false);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "lombok.eclipse.EclipseNode"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 103,
    "startColumnNumber" : 41,
    "endLineNumber" : 103,
    "endColumnNumber" : 46
  }, {
    "charLength" : 5,
    "startLineNumber" : 103,
    "startColumnNumber" : 72,
    "endLineNumber" : 103,
    "endColumnNumber" : 77
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}