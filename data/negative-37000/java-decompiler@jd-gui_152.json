{
  "id" : 152,
  "expression" : "count",
  "projectName" : "java-decompiler@jd-gui",
  "commitID" : "fbc5b14d66b37b88bf1dc18386b530e874550240",
  "filePath" : "/app/src/main/java/org/jd/gui/view/OpenTypeView.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "count",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 223,
      "startColumnNumber" : 20,
      "endLineNumber" : 223,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 377,
        "startLineNumber" : 223,
        "startColumnNumber" : 12,
        "endLineNumber" : 232,
        "endColumnNumber" : 13
      },
      "nodeContext" : "switch (count) {\ncase 0:  openTypeMatchLabel.setText(\"Matching types:\");\nbreak;\ncase 1:openTypeMatchLabel.setText(\"1 matching type:\");\nbreak;\ndefault:openTypeMatchLabel.setText(count + \" matching types:\");\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 26,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1567,
        "startLineNumber" : 196,
        "startColumnNumber" : 36,
        "endLineNumber" : 233,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  DefaultListModel model=(DefaultListModel)openTypeList.getModel();\n  ArrayList<String> typeNames=new ArrayList<>(map.keySet());\n  int index=0;\n  typeNames.sort(TYPE_NAME_COMPARATOR);\n  model.removeAllElements();\n  for (  String typeName : typeNames) {\n    if (index < MAX_LINE_COUNT) {\n      Collection<Container.Entry> entries=map.get(typeName);\n      Container.Entry firstEntry=entries.iterator().next();\n      Type type=api.getTypeFactory(firstEntry).make(api,firstEntry,typeName);\n      if (type != null) {\n        model.addElement(new OpenTypeListCellBean(type.getDisplayTypeName(),type.getDisplayPackageName(),type.getIcon(),entries,typeName));\n      }\n else {\n        model.addElement(new OpenTypeListCellBean(typeName,entries,typeName));\n      }\n    }\n else     if (index == MAX_LINE_COUNT) {\n      model.addElement(null);\n    }\n  }\n  int count=typeNames.size();\nswitch (count) {\ncase 0:    openTypeMatchLabel.setText(\"Matching types:\");\n  break;\ncase 1:openTypeMatchLabel.setText(\"1 matching type:\");\nbreak;\ndefault:openTypeMatchLabel.setText(count + \" matching types:\");\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1573,
        "startLineNumber" : 196,
        "startColumnNumber" : 30,
        "endLineNumber" : 233,
        "endColumnNumber" : 9
      },
      "nodeContext" : "() -> {\n  DefaultListModel model=(DefaultListModel)openTypeList.getModel();\n  ArrayList<String> typeNames=new ArrayList<>(map.keySet());\n  int index=0;\n  typeNames.sort(TYPE_NAME_COMPARATOR);\n  model.removeAllElements();\n  for (  String typeName : typeNames) {\n    if (index < MAX_LINE_COUNT) {\n      Collection<Container.Entry> entries=map.get(typeName);\n      Container.Entry firstEntry=entries.iterator().next();\n      Type type=api.getTypeFactory(firstEntry).make(api,firstEntry,typeName);\n      if (type != null) {\n        model.addElement(new OpenTypeListCellBean(type.getDisplayTypeName(),type.getDisplayPackageName(),type.getIcon(),entries,typeName));\n      }\n else {\n        model.addElement(new OpenTypeListCellBean(typeName,entries,typeName));\n      }\n    }\n else     if (index == MAX_LINE_COUNT) {\n      model.addElement(null);\n    }\n  }\n  int count=typeNames.size();\nswitch (count) {\ncase 0:    openTypeMatchLabel.setText(\"Matching types:\");\n  break;\ncase 1:openTypeMatchLabel.setText(\"1 matching type:\");\nbreak;\ndefault:openTypeMatchLabel.setText(count + \" matching types:\");\n}\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 171,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 377,
        "startLineNumber" : 223,
        "startColumnNumber" : 12,
        "endLineNumber" : 232,
        "endColumnNumber" : 13
      },
      "nodeContext" : "switch (count) {\ncase 0:  openTypeMatchLabel.setText(\"Matching types:\");\nbreak;\ncase 1:openTypeMatchLabel.setText(\"1 matching type:\");\nbreak;\ndefault:openTypeMatchLabel.setText(count + \" matching types:\");\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 26,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "count",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 231,
      "startColumnNumber" : 47,
      "endLineNumber" : 231,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 231,
        "startColumnNumber" : 47,
        "endLineNumber" : 231,
        "endColumnNumber" : 73
      },
      "nodeContext" : "count + \" matching types:\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 231,
        "startColumnNumber" : 20,
        "endLineNumber" : 231,
        "endColumnNumber" : 74
      },
      "nodeContext" : "openTypeMatchLabel.setText(count + \" matching types:\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 231,
        "startColumnNumber" : 20,
        "endLineNumber" : 231,
        "endColumnNumber" : 75
      },
      "nodeContext" : "openTypeMatchLabel.setText(count + \" matching types:\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 377,
        "startLineNumber" : 223,
        "startColumnNumber" : 12,
        "endLineNumber" : 232,
        "endColumnNumber" : 13
      },
      "nodeContext" : "switch (count) {\ncase 0:  openTypeMatchLabel.setText(\"Matching types:\");\nbreak;\ncase 1:openTypeMatchLabel.setText(\"1 matching type:\");\nbreak;\ndefault:openTypeMatchLabel.setText(count + \" matching types:\");\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 26,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1567,
        "startLineNumber" : 196,
        "startColumnNumber" : 36,
        "endLineNumber" : 233,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  DefaultListModel model=(DefaultListModel)openTypeList.getModel();\n  ArrayList<String> typeNames=new ArrayList<>(map.keySet());\n  int index=0;\n  typeNames.sort(TYPE_NAME_COMPARATOR);\n  model.removeAllElements();\n  for (  String typeName : typeNames) {\n    if (index < MAX_LINE_COUNT) {\n      Collection<Container.Entry> entries=map.get(typeName);\n      Container.Entry firstEntry=entries.iterator().next();\n      Type type=api.getTypeFactory(firstEntry).make(api,firstEntry,typeName);\n      if (type != null) {\n        model.addElement(new OpenTypeListCellBean(type.getDisplayTypeName(),type.getDisplayPackageName(),type.getIcon(),entries,typeName));\n      }\n else {\n        model.addElement(new OpenTypeListCellBean(typeName,entries,typeName));\n      }\n    }\n else     if (index == MAX_LINE_COUNT) {\n      model.addElement(null);\n    }\n  }\n  int count=typeNames.size();\nswitch (count) {\ncase 0:    openTypeMatchLabel.setText(\"Matching types:\");\n  break;\ncase 1:openTypeMatchLabel.setText(\"1 matching type:\");\nbreak;\ndefault:openTypeMatchLabel.setText(count + \" matching types:\");\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1573,
        "startLineNumber" : 196,
        "startColumnNumber" : 30,
        "endLineNumber" : 233,
        "endColumnNumber" : 9
      },
      "nodeContext" : "() -> {\n  DefaultListModel model=(DefaultListModel)openTypeList.getModel();\n  ArrayList<String> typeNames=new ArrayList<>(map.keySet());\n  int index=0;\n  typeNames.sort(TYPE_NAME_COMPARATOR);\n  model.removeAllElements();\n  for (  String typeName : typeNames) {\n    if (index < MAX_LINE_COUNT) {\n      Collection<Container.Entry> entries=map.get(typeName);\n      Container.Entry firstEntry=entries.iterator().next();\n      Type type=api.getTypeFactory(firstEntry).make(api,firstEntry,typeName);\n      if (type != null) {\n        model.addElement(new OpenTypeListCellBean(type.getDisplayTypeName(),type.getDisplayPackageName(),type.getIcon(),entries,typeName));\n      }\n else {\n        model.addElement(new OpenTypeListCellBean(typeName,entries,typeName));\n      }\n    }\n else     if (index == MAX_LINE_COUNT) {\n      model.addElement(null);\n    }\n  }\n  int count=typeNames.size();\nswitch (count) {\ncase 0:    openTypeMatchLabel.setText(\"Matching types:\");\n  break;\ncase 1:openTypeMatchLabel.setText(\"1 matching type:\");\nbreak;\ndefault:openTypeMatchLabel.setText(count + \" matching types:\");\n}\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 171,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 231,
        "startColumnNumber" : 20,
        "endLineNumber" : 231,
        "endColumnNumber" : 75
      },
      "nodeContext" : "openTypeMatchLabel.setText(count + \" matching types:\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 223,
    "startColumnNumber" : 20,
    "endLineNumber" : 223,
    "endColumnNumber" : 25
  }, {
    "charLength" : 5,
    "startLineNumber" : 231,
    "startColumnNumber" : 47,
    "endLineNumber" : 231,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}