{
  "id" : 72,
  "expression" : "new Metadata.LeaderAndEpoch(Optional.empty(),Optional.of(1))",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/test/java/org/apache/kafka/clients/consumer/internals/OffsetForLeaderEpochClientTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Metadata.LeaderAndEpoch(Optional.empty(),Optional.of(1))",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 61,
      "startLineNumber" : 75,
      "startColumnNumber" : 16,
      "endLineNumber" : 75,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 12,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 74,
        "startColumnNumber" : 29,
        "endLineNumber" : 75,
        "endColumnNumber" : 78
      },
      "nodeContext" : "new SubscriptionState.FetchPosition(0,Optional.of(1),new Metadata.LeaderAndEpoch(Optional.empty(),Optional.of(1)))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 155,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 79
      },
      "nodeContext" : "positionMap.put(tp0,new SubscriptionState.FetchPosition(0,Optional.of(1),new Metadata.LeaderAndEpoch(Optional.empty(),Optional.of(1))))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 80
      },
      "nodeContext" : "positionMap.put(tp0,new SubscriptionState.FetchPosition(0,Optional.of(1),new Metadata.LeaderAndEpoch(Optional.empty(),Optional.of(1))));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 895,
        "startLineNumber" : 72,
        "startColumnNumber" : 46,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<TopicPartition,SubscriptionState.FetchPosition> positionMap=new HashMap<>();\n  positionMap.put(tp0,new SubscriptionState.FetchPosition(0,Optional.of(1),new Metadata.LeaderAndEpoch(Optional.empty(),Optional.of(1))));\n  OffsetsForLeaderEpochClient offsetClient=newOffsetClient();\n  RequestFuture<OffsetsForLeaderEpochClient.OffsetForEpochResult> future=offsetClient.sendAsyncRequest(Node.noNode(),positionMap);\n  OffsetsForLeaderEpochResponse resp=new OffsetsForLeaderEpochResponse(new OffsetForLeaderEpochResponseData());\n  client.prepareResponse(resp);\n  consumerClient.pollNoWakeup();\n  OffsetsForLeaderEpochClient.OffsetForEpochResult result=future.value();\n  assertFalse(result.partitionsToRetry().isEmpty());\n  assertTrue(result.endOffsets().isEmpty());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 947,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testUnexpectedEmptyResponse(){\n  Map<TopicPartition,SubscriptionState.FetchPosition> positionMap=new HashMap<>();\n  positionMap.put(tp0,new SubscriptionState.FetchPosition(0,Optional.of(1),new Metadata.LeaderAndEpoch(Optional.empty(),Optional.of(1))));\n  OffsetsForLeaderEpochClient offsetClient=newOffsetClient();\n  RequestFuture<OffsetsForLeaderEpochClient.OffsetForEpochResult> future=offsetClient.sendAsyncRequest(Node.noNode(),positionMap);\n  OffsetsForLeaderEpochResponse resp=new OffsetsForLeaderEpochResponse(new OffsetForLeaderEpochResponseData());\n  client.prepareResponse(resp);\n  consumerClient.pollNoWakeup();\n  OffsetsForLeaderEpochClient.OffsetForEpochResult result=future.value();\n  assertFalse(result.partitionsToRetry().isEmpty());\n  assertTrue(result.endOffsets().isEmpty());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 74,
        "startColumnNumber" : 29,
        "endLineNumber" : 75,
        "endColumnNumber" : 78
      },
      "nodeContext" : "new SubscriptionState.FetchPosition(0,Optional.of(1),new Metadata.LeaderAndEpoch(Optional.empty(),Optional.of(1)))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 22,
      "astHeight" : 5
    },
    "tokenLength" : 7,
    "type" : "org.apache.kafka.clients.Metadata.LeaderAndEpoch"
  } ],
  "positionList" : [ {
    "charLength" : 61,
    "startLineNumber" : 75,
    "startColumnNumber" : 16,
    "endLineNumber" : 75,
    "endColumnNumber" : 77
  } ],
  "layoutRelationDataList" : [ ]
}