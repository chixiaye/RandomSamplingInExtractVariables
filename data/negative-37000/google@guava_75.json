{
  "id" : 75,
  "expression" : "new FunctionToCacheLoader<>(function)",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava/src/com/google/common/cache/CacheLoader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new FunctionToCacheLoader<>(function)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 143,
      "startColumnNumber" : 11,
      "endLineNumber" : 143,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 5,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 143,
        "startColumnNumber" : 4,
        "endLineNumber" : 143,
        "endColumnNumber" : 49
      },
      "nodeContext" : "return new FunctionToCacheLoader<>(function);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 142,
        "startColumnNumber" : 71,
        "endLineNumber" : 144,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  return new FunctionToCacheLoader<>(function);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 632,
        "startLineNumber" : 133,
        "startColumnNumber" : 2,
        "endLineNumber" : 144,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns a cache loader that uses  {@code function} to load keys, and without supporting eitherreloading or bulk loading. This is most useful when you can pass a lambda expression. Otherwise it is useful mostly when you already have an existing function instance.\n * @param function the function to be used for loading values; must never return {@code null}\n * @return a cache loader that loads values by passing each key to {@code function}\n */\n@CheckReturnValue public static <K,V>CacheLoader<K,V> from(Function<K,V> function){\n  return new FunctionToCacheLoader<>(function);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 34,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 143,
        "startColumnNumber" : 4,
        "endLineNumber" : 143,
        "endColumnNumber" : 49
      },
      "nodeContext" : "return new FunctionToCacheLoader<>(function);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "com.google.common.cache.CacheLoader.FunctionToCacheLoader<K,V>"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 143,
    "startColumnNumber" : 11,
    "endLineNumber" : 143,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}