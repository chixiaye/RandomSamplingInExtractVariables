{
  "id" : 312,
  "expression" : "basicBlocks",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/main/java/jadx/core/dex/visitors/blocksmaker/BlockProcessor.java",
  "occurrences" : 7,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "basicBlocks",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 186,
      "startColumnNumber" : 16,
      "endLineNumber" : 186,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 186,
        "startColumnNumber" : 16,
        "endLineNumber" : 186,
        "endColumnNumber" : 34
      },
      "nodeContext" : "basicBlocks.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 186,
        "startColumnNumber" : 6,
        "endLineNumber" : 186,
        "endColumnNumber" : 34
      },
      "nodeContext" : "nBlocks=basicBlocks.size()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 186,
        "startColumnNumber" : 2,
        "endLineNumber" : 186,
        "endColumnNumber" : 35
      },
      "nodeContext" : "int nBlocks=basicBlocks.size();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1840,
        "startLineNumber" : 184,
        "startColumnNumber" : 55,
        "endLineNumber" : 256,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  List<BlockNode> basicBlocks=mth.getBasicBlocks();\n  int nBlocks=basicBlocks.size();\n  for (int i=0; i < nBlocks; i++) {\n    BlockNode block=basicBlocks.get(i);\n    block.setId(i);\n    block.setDoms(new BitSet(nBlocks));\n    block.getDoms().set(0,nBlocks);\n  }\n  BlockNode entryBlock=mth.getEnterBlock();\n  entryBlock.getDoms().clear();\n  entryBlock.getDoms().set(entryBlock.getId());\n  BitSet dset=new BitSet(nBlocks);\n  boolean changed;\n  do {\n    changed=false;\n    for (    BlockNode block : basicBlocks) {\n      if (block == entryBlock) {\n        continue;\n      }\n      BitSet d=block.getDoms();\n      if (!changed) {\n        dset.clear();\n        dset.or(d);\n      }\n      for (      BlockNode pred : block.getPredecessors()) {\n        d.and(pred.getDoms());\n      }\n      d.set(block.getId());\n      if (!changed && !d.equals(dset)) {\n        changed=true;\n      }\n    }\n  }\n while (changed);\n  markLoops(mth);\n  basicBlocks.forEach(block -> {\n    block.getDoms().clear(block.getId());\n    if (block.getDoms().isEmpty()) {\n      block.setDoms(EMPTY);\n    }\n  }\n);\n  for (  BlockNode block : basicBlocks) {\n    if (block == entryBlock) {\n      continue;\n    }\n    BlockNode idom;\n    List<BlockNode> preds=block.getPredecessors();\n    if (preds.size() == 1) {\n      idom=preds.get(0);\n    }\n else {\n      BitSet bs=new BitSet(block.getDoms().length());\n      bs.or(block.getDoms());\n      for (int i=bs.nextSetBit(0); i >= 0; i=bs.nextSetBit(i + 1)) {\n        BlockNode dom=basicBlocks.get(i);\n        bs.andNot(dom.getDoms());\n      }\n      if (bs.cardinality() != 1) {\n        throw new JadxRuntimeException(\"Can't find immediate dominator for block \" + block + \" in \"+ bs+ \" preds:\"+ preds);\n      }\n      idom=basicBlocks.get(bs.nextSetBit(0));\n    }\n    block.setIDom(idom);\n    idom.addDominatesOn(block);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 347,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1894,
        "startLineNumber" : 184,
        "startColumnNumber" : 1,
        "endLineNumber" : 256,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private static void computeDominators(MethodNode mth){\n  List<BlockNode> basicBlocks=mth.getBasicBlocks();\n  int nBlocks=basicBlocks.size();\n  for (int i=0; i < nBlocks; i++) {\n    BlockNode block=basicBlocks.get(i);\n    block.setId(i);\n    block.setDoms(new BitSet(nBlocks));\n    block.getDoms().set(0,nBlocks);\n  }\n  BlockNode entryBlock=mth.getEnterBlock();\n  entryBlock.getDoms().clear();\n  entryBlock.getDoms().set(entryBlock.getId());\n  BitSet dset=new BitSet(nBlocks);\n  boolean changed;\n  do {\n    changed=false;\n    for (    BlockNode block : basicBlocks) {\n      if (block == entryBlock) {\n        continue;\n      }\n      BitSet d=block.getDoms();\n      if (!changed) {\n        dset.clear();\n        dset.or(d);\n      }\n      for (      BlockNode pred : block.getPredecessors()) {\n        d.and(pred.getDoms());\n      }\n      d.set(block.getId());\n      if (!changed && !d.equals(dset)) {\n        changed=true;\n      }\n    }\n  }\n while (changed);\n  markLoops(mth);\n  basicBlocks.forEach(block -> {\n    block.getDoms().clear(block.getId());\n    if (block.getDoms().isEmpty()) {\n      block.setDoms(EMPTY);\n    }\n  }\n);\n  for (  BlockNode block : basicBlocks) {\n    if (block == entryBlock) {\n      continue;\n    }\n    BlockNode idom;\n    List<BlockNode> preds=block.getPredecessors();\n    if (preds.size() == 1) {\n      idom=preds.get(0);\n    }\n else {\n      BitSet bs=new BitSet(block.getDoms().length());\n      bs.or(block.getDoms());\n      for (int i=bs.nextSetBit(0); i >= 0; i=bs.nextSetBit(i + 1)) {\n        BlockNode dom=basicBlocks.get(i);\n        bs.andNot(dom.getDoms());\n      }\n      if (bs.cardinality() != 1) {\n        throw new JadxRuntimeException(\"Can't find immediate dominator for block \" + block + \" in \"+ bs+ \" preds:\"+ preds);\n      }\n      idom=basicBlocks.get(bs.nextSetBit(0));\n    }\n    block.setIDom(idom);\n    idom.addDominatesOn(block);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 356,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 186,
        "startColumnNumber" : 2,
        "endLineNumber" : 186,
        "endColumnNumber" : 35
      },
      "nodeContext" : "int nBlocks=basicBlocks.size();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.List<jadx.core.dex.nodes.BlockNode>"
  }, {
    "nodeContext" : "basicBlocks",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 188,
      "startColumnNumber" : 21,
      "endLineNumber" : 188,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 188,
        "startColumnNumber" : 21,
        "endLineNumber" : 188,
        "endColumnNumber" : 39
      },
      "nodeContext" : "basicBlocks.get(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 188,
        "startColumnNumber" : 13,
        "endLineNumber" : 188,
        "endColumnNumber" : 39
      },
      "nodeContext" : "block=basicBlocks.get(i)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 188,
        "startColumnNumber" : 3,
        "endLineNumber" : 188,
        "endColumnNumber" : 40
      },
      "nodeContext" : "BlockNode block=basicBlocks.get(i);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 187,
        "startColumnNumber" : 36,
        "endLineNumber" : 192,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BlockNode block=basicBlocks.get(i);\n  block.setId(i);\n  block.setDoms(new BitSet(nBlocks));\n  block.getDoms().set(0,nBlocks);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 174,
        "startLineNumber" : 187,
        "startColumnNumber" : 2,
        "endLineNumber" : 192,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < nBlocks; i++) {\n  BlockNode block=basicBlocks.get(i);\n  block.setId(i);\n  block.setDoms(new BitSet(nBlocks));\n  block.getDoms().set(0,nBlocks);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1840,
        "startLineNumber" : 184,
        "startColumnNumber" : 55,
        "endLineNumber" : 256,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  List<BlockNode> basicBlocks=mth.getBasicBlocks();\n  int nBlocks=basicBlocks.size();\n  for (int i=0; i < nBlocks; i++) {\n    BlockNode block=basicBlocks.get(i);\n    block.setId(i);\n    block.setDoms(new BitSet(nBlocks));\n    block.getDoms().set(0,nBlocks);\n  }\n  BlockNode entryBlock=mth.getEnterBlock();\n  entryBlock.getDoms().clear();\n  entryBlock.getDoms().set(entryBlock.getId());\n  BitSet dset=new BitSet(nBlocks);\n  boolean changed;\n  do {\n    changed=false;\n    for (    BlockNode block : basicBlocks) {\n      if (block == entryBlock) {\n        continue;\n      }\n      BitSet d=block.getDoms();\n      if (!changed) {\n        dset.clear();\n        dset.or(d);\n      }\n      for (      BlockNode pred : block.getPredecessors()) {\n        d.and(pred.getDoms());\n      }\n      d.set(block.getId());\n      if (!changed && !d.equals(dset)) {\n        changed=true;\n      }\n    }\n  }\n while (changed);\n  markLoops(mth);\n  basicBlocks.forEach(block -> {\n    block.getDoms().clear(block.getId());\n    if (block.getDoms().isEmpty()) {\n      block.setDoms(EMPTY);\n    }\n  }\n);\n  for (  BlockNode block : basicBlocks) {\n    if (block == entryBlock) {\n      continue;\n    }\n    BlockNode idom;\n    List<BlockNode> preds=block.getPredecessors();\n    if (preds.size() == 1) {\n      idom=preds.get(0);\n    }\n else {\n      BitSet bs=new BitSet(block.getDoms().length());\n      bs.or(block.getDoms());\n      for (int i=bs.nextSetBit(0); i >= 0; i=bs.nextSetBit(i + 1)) {\n        BlockNode dom=basicBlocks.get(i);\n        bs.andNot(dom.getDoms());\n      }\n      if (bs.cardinality() != 1) {\n        throw new JadxRuntimeException(\"Can't find immediate dominator for block \" + block + \" in \"+ bs+ \" preds:\"+ preds);\n      }\n      idom=basicBlocks.get(bs.nextSetBit(0));\n    }\n    block.setIDom(idom);\n    idom.addDominatesOn(block);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 347,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1894,
        "startLineNumber" : 184,
        "startColumnNumber" : 1,
        "endLineNumber" : 256,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private static void computeDominators(MethodNode mth){\n  List<BlockNode> basicBlocks=mth.getBasicBlocks();\n  int nBlocks=basicBlocks.size();\n  for (int i=0; i < nBlocks; i++) {\n    BlockNode block=basicBlocks.get(i);\n    block.setId(i);\n    block.setDoms(new BitSet(nBlocks));\n    block.getDoms().set(0,nBlocks);\n  }\n  BlockNode entryBlock=mth.getEnterBlock();\n  entryBlock.getDoms().clear();\n  entryBlock.getDoms().set(entryBlock.getId());\n  BitSet dset=new BitSet(nBlocks);\n  boolean changed;\n  do {\n    changed=false;\n    for (    BlockNode block : basicBlocks) {\n      if (block == entryBlock) {\n        continue;\n      }\n      BitSet d=block.getDoms();\n      if (!changed) {\n        dset.clear();\n        dset.or(d);\n      }\n      for (      BlockNode pred : block.getPredecessors()) {\n        d.and(pred.getDoms());\n      }\n      d.set(block.getId());\n      if (!changed && !d.equals(dset)) {\n        changed=true;\n      }\n    }\n  }\n while (changed);\n  markLoops(mth);\n  basicBlocks.forEach(block -> {\n    block.getDoms().clear(block.getId());\n    if (block.getDoms().isEmpty()) {\n      block.setDoms(EMPTY);\n    }\n  }\n);\n  for (  BlockNode block : basicBlocks) {\n    if (block == entryBlock) {\n      continue;\n    }\n    BlockNode idom;\n    List<BlockNode> preds=block.getPredecessors();\n    if (preds.size() == 1) {\n      idom=preds.get(0);\n    }\n else {\n      BitSet bs=new BitSet(block.getDoms().length());\n      bs.or(block.getDoms());\n      for (int i=bs.nextSetBit(0); i >= 0; i=bs.nextSetBit(i + 1)) {\n        BlockNode dom=basicBlocks.get(i);\n        bs.andNot(dom.getDoms());\n      }\n      if (bs.cardinality() != 1) {\n        throw new JadxRuntimeException(\"Can't find immediate dominator for block \" + block + \" in \"+ bs+ \" preds:\"+ preds);\n      }\n      idom=basicBlocks.get(bs.nextSetBit(0));\n    }\n    block.setIDom(idom);\n    idom.addDominatesOn(block);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 356,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 188,
        "startColumnNumber" : 3,
        "endLineNumber" : 188,
        "endColumnNumber" : 40
      },
      "nodeContext" : "BlockNode block=basicBlocks.get(i);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.List<jadx.core.dex.nodes.BlockNode>"
  }, {
    "nodeContext" : "basicBlocks",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 202,
      "startColumnNumber" : 26,
      "endLineNumber" : 202,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 367,
        "startLineNumber" : 202,
        "startColumnNumber" : 3,
        "endLineNumber" : 218,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (BlockNode block : basicBlocks) {\n  if (block == entryBlock) {\n    continue;\n  }\n  BitSet d=block.getDoms();\n  if (!changed) {\n    dset.clear();\n    dset.or(d);\n  }\n  for (  BlockNode pred : block.getPredecessors()) {\n    d.and(pred.getDoms());\n  }\n  d.set(block.getId());\n  if (!changed && !d.equals(dset)) {\n    changed=true;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 71,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.DoStatement,body]",
      "nodePosition" : {
        "charLength" : 396,
        "startLineNumber" : 200,
        "startColumnNumber" : 5,
        "endLineNumber" : 219,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  changed=false;\n  for (  BlockNode block : basicBlocks) {\n    if (block == entryBlock) {\n      continue;\n    }\n    BitSet d=block.getDoms();\n    if (!changed) {\n      dset.clear();\n      dset.or(d);\n    }\n    for (    BlockNode pred : block.getPredecessors()) {\n      d.and(pred.getDoms());\n    }\n    d.set(block.getId());\n    if (!changed && !d.equals(dset)) {\n      changed=true;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 416,
        "startLineNumber" : 200,
        "startColumnNumber" : 2,
        "endLineNumber" : 219,
        "endColumnNumber" : 20
      },
      "nodeContext" : "do {\n  changed=false;\n  for (  BlockNode block : basicBlocks) {\n    if (block == entryBlock) {\n      continue;\n    }\n    BitSet d=block.getDoms();\n    if (!changed) {\n      dset.clear();\n      dset.or(d);\n    }\n    for (    BlockNode pred : block.getPredecessors()) {\n      d.and(pred.getDoms());\n    }\n    d.set(block.getId());\n    if (!changed && !d.equals(dset)) {\n      changed=true;\n    }\n  }\n}\n while (changed);\n",
      "nodeType" : "DoStatement",
      "astNodeNumber" : 78,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1840,
        "startLineNumber" : 184,
        "startColumnNumber" : 55,
        "endLineNumber" : 256,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  List<BlockNode> basicBlocks=mth.getBasicBlocks();\n  int nBlocks=basicBlocks.size();\n  for (int i=0; i < nBlocks; i++) {\n    BlockNode block=basicBlocks.get(i);\n    block.setId(i);\n    block.setDoms(new BitSet(nBlocks));\n    block.getDoms().set(0,nBlocks);\n  }\n  BlockNode entryBlock=mth.getEnterBlock();\n  entryBlock.getDoms().clear();\n  entryBlock.getDoms().set(entryBlock.getId());\n  BitSet dset=new BitSet(nBlocks);\n  boolean changed;\n  do {\n    changed=false;\n    for (    BlockNode block : basicBlocks) {\n      if (block == entryBlock) {\n        continue;\n      }\n      BitSet d=block.getDoms();\n      if (!changed) {\n        dset.clear();\n        dset.or(d);\n      }\n      for (      BlockNode pred : block.getPredecessors()) {\n        d.and(pred.getDoms());\n      }\n      d.set(block.getId());\n      if (!changed && !d.equals(dset)) {\n        changed=true;\n      }\n    }\n  }\n while (changed);\n  markLoops(mth);\n  basicBlocks.forEach(block -> {\n    block.getDoms().clear(block.getId());\n    if (block.getDoms().isEmpty()) {\n      block.setDoms(EMPTY);\n    }\n  }\n);\n  for (  BlockNode block : basicBlocks) {\n    if (block == entryBlock) {\n      continue;\n    }\n    BlockNode idom;\n    List<BlockNode> preds=block.getPredecessors();\n    if (preds.size() == 1) {\n      idom=preds.get(0);\n    }\n else {\n      BitSet bs=new BitSet(block.getDoms().length());\n      bs.or(block.getDoms());\n      for (int i=bs.nextSetBit(0); i >= 0; i=bs.nextSetBit(i + 1)) {\n        BlockNode dom=basicBlocks.get(i);\n        bs.andNot(dom.getDoms());\n      }\n      if (bs.cardinality() != 1) {\n        throw new JadxRuntimeException(\"Can't find immediate dominator for block \" + block + \" in \"+ bs+ \" preds:\"+ preds);\n      }\n      idom=basicBlocks.get(bs.nextSetBit(0));\n    }\n    block.setIDom(idom);\n    idom.addDominatesOn(block);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 347,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1894,
        "startLineNumber" : 184,
        "startColumnNumber" : 1,
        "endLineNumber" : 256,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private static void computeDominators(MethodNode mth){\n  List<BlockNode> basicBlocks=mth.getBasicBlocks();\n  int nBlocks=basicBlocks.size();\n  for (int i=0; i < nBlocks; i++) {\n    BlockNode block=basicBlocks.get(i);\n    block.setId(i);\n    block.setDoms(new BitSet(nBlocks));\n    block.getDoms().set(0,nBlocks);\n  }\n  BlockNode entryBlock=mth.getEnterBlock();\n  entryBlock.getDoms().clear();\n  entryBlock.getDoms().set(entryBlock.getId());\n  BitSet dset=new BitSet(nBlocks);\n  boolean changed;\n  do {\n    changed=false;\n    for (    BlockNode block : basicBlocks) {\n      if (block == entryBlock) {\n        continue;\n      }\n      BitSet d=block.getDoms();\n      if (!changed) {\n        dset.clear();\n        dset.or(d);\n      }\n      for (      BlockNode pred : block.getPredecessors()) {\n        d.and(pred.getDoms());\n      }\n      d.set(block.getId());\n      if (!changed && !d.equals(dset)) {\n        changed=true;\n      }\n    }\n  }\n while (changed);\n  markLoops(mth);\n  basicBlocks.forEach(block -> {\n    block.getDoms().clear(block.getId());\n    if (block.getDoms().isEmpty()) {\n      block.setDoms(EMPTY);\n    }\n  }\n);\n  for (  BlockNode block : basicBlocks) {\n    if (block == entryBlock) {\n      continue;\n    }\n    BlockNode idom;\n    List<BlockNode> preds=block.getPredecessors();\n    if (preds.size() == 1) {\n      idom=preds.get(0);\n    }\n else {\n      BitSet bs=new BitSet(block.getDoms().length());\n      bs.or(block.getDoms());\n      for (int i=bs.nextSetBit(0); i >= 0; i=bs.nextSetBit(i + 1)) {\n        BlockNode dom=basicBlocks.get(i);\n        bs.andNot(dom.getDoms());\n      }\n      if (bs.cardinality() != 1) {\n        throw new JadxRuntimeException(\"Can't find immediate dominator for block \" + block + \" in \"+ bs+ \" preds:\"+ preds);\n      }\n      idom=basicBlocks.get(bs.nextSetBit(0));\n    }\n    block.setIDom(idom);\n    idom.addDominatesOn(block);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 356,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 367,
        "startLineNumber" : 202,
        "startColumnNumber" : 3,
        "endLineNumber" : 218,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (BlockNode block : basicBlocks) {\n  if (block == entryBlock) {\n    continue;\n  }\n  BitSet d=block.getDoms();\n  if (!changed) {\n    dset.clear();\n    dset.or(d);\n  }\n  for (  BlockNode pred : block.getPredecessors()) {\n    d.and(pred.getDoms());\n  }\n  d.set(block.getId());\n  if (!changed && !d.equals(dset)) {\n    changed=true;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 71,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "java.util.List<jadx.core.dex.nodes.BlockNode>"
  }, {
    "nodeContext" : "basicBlocks",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 224,
      "startColumnNumber" : 2,
      "endLineNumber" : 224,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 224,
        "startColumnNumber" : 2,
        "endLineNumber" : 229,
        "endColumnNumber" : 4
      },
      "nodeContext" : "basicBlocks.forEach(block -> {\n  block.getDoms().clear(block.getId());\n  if (block.getDoms().isEmpty()) {\n    block.setDoms(EMPTY);\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 224,
        "startColumnNumber" : 2,
        "endLineNumber" : 229,
        "endColumnNumber" : 5
      },
      "nodeContext" : "basicBlocks.forEach(block -> {\n  block.getDoms().clear(block.getId());\n  if (block.getDoms().isEmpty()) {\n    block.setDoms(EMPTY);\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 29,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1840,
        "startLineNumber" : 184,
        "startColumnNumber" : 55,
        "endLineNumber" : 256,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  List<BlockNode> basicBlocks=mth.getBasicBlocks();\n  int nBlocks=basicBlocks.size();\n  for (int i=0; i < nBlocks; i++) {\n    BlockNode block=basicBlocks.get(i);\n    block.setId(i);\n    block.setDoms(new BitSet(nBlocks));\n    block.getDoms().set(0,nBlocks);\n  }\n  BlockNode entryBlock=mth.getEnterBlock();\n  entryBlock.getDoms().clear();\n  entryBlock.getDoms().set(entryBlock.getId());\n  BitSet dset=new BitSet(nBlocks);\n  boolean changed;\n  do {\n    changed=false;\n    for (    BlockNode block : basicBlocks) {\n      if (block == entryBlock) {\n        continue;\n      }\n      BitSet d=block.getDoms();\n      if (!changed) {\n        dset.clear();\n        dset.or(d);\n      }\n      for (      BlockNode pred : block.getPredecessors()) {\n        d.and(pred.getDoms());\n      }\n      d.set(block.getId());\n      if (!changed && !d.equals(dset)) {\n        changed=true;\n      }\n    }\n  }\n while (changed);\n  markLoops(mth);\n  basicBlocks.forEach(block -> {\n    block.getDoms().clear(block.getId());\n    if (block.getDoms().isEmpty()) {\n      block.setDoms(EMPTY);\n    }\n  }\n);\n  for (  BlockNode block : basicBlocks) {\n    if (block == entryBlock) {\n      continue;\n    }\n    BlockNode idom;\n    List<BlockNode> preds=block.getPredecessors();\n    if (preds.size() == 1) {\n      idom=preds.get(0);\n    }\n else {\n      BitSet bs=new BitSet(block.getDoms().length());\n      bs.or(block.getDoms());\n      for (int i=bs.nextSetBit(0); i >= 0; i=bs.nextSetBit(i + 1)) {\n        BlockNode dom=basicBlocks.get(i);\n        bs.andNot(dom.getDoms());\n      }\n      if (bs.cardinality() != 1) {\n        throw new JadxRuntimeException(\"Can't find immediate dominator for block \" + block + \" in \"+ bs+ \" preds:\"+ preds);\n      }\n      idom=basicBlocks.get(bs.nextSetBit(0));\n    }\n    block.setIDom(idom);\n    idom.addDominatesOn(block);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 347,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1894,
        "startLineNumber" : 184,
        "startColumnNumber" : 1,
        "endLineNumber" : 256,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private static void computeDominators(MethodNode mth){\n  List<BlockNode> basicBlocks=mth.getBasicBlocks();\n  int nBlocks=basicBlocks.size();\n  for (int i=0; i < nBlocks; i++) {\n    BlockNode block=basicBlocks.get(i);\n    block.setId(i);\n    block.setDoms(new BitSet(nBlocks));\n    block.getDoms().set(0,nBlocks);\n  }\n  BlockNode entryBlock=mth.getEnterBlock();\n  entryBlock.getDoms().clear();\n  entryBlock.getDoms().set(entryBlock.getId());\n  BitSet dset=new BitSet(nBlocks);\n  boolean changed;\n  do {\n    changed=false;\n    for (    BlockNode block : basicBlocks) {\n      if (block == entryBlock) {\n        continue;\n      }\n      BitSet d=block.getDoms();\n      if (!changed) {\n        dset.clear();\n        dset.or(d);\n      }\n      for (      BlockNode pred : block.getPredecessors()) {\n        d.and(pred.getDoms());\n      }\n      d.set(block.getId());\n      if (!changed && !d.equals(dset)) {\n        changed=true;\n      }\n    }\n  }\n while (changed);\n  markLoops(mth);\n  basicBlocks.forEach(block -> {\n    block.getDoms().clear(block.getId());\n    if (block.getDoms().isEmpty()) {\n      block.setDoms(EMPTY);\n    }\n  }\n);\n  for (  BlockNode block : basicBlocks) {\n    if (block == entryBlock) {\n      continue;\n    }\n    BlockNode idom;\n    List<BlockNode> preds=block.getPredecessors();\n    if (preds.size() == 1) {\n      idom=preds.get(0);\n    }\n else {\n      BitSet bs=new BitSet(block.getDoms().length());\n      bs.or(block.getDoms());\n      for (int i=bs.nextSetBit(0); i >= 0; i=bs.nextSetBit(i + 1)) {\n        BlockNode dom=basicBlocks.get(i);\n        bs.andNot(dom.getDoms());\n      }\n      if (bs.cardinality() != 1) {\n        throw new JadxRuntimeException(\"Can't find immediate dominator for block \" + block + \" in \"+ bs+ \" preds:\"+ preds);\n      }\n      idom=basicBlocks.get(bs.nextSetBit(0));\n    }\n    block.setIDom(idom);\n    idom.addDominatesOn(block);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 356,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 224,
        "startColumnNumber" : 2,
        "endLineNumber" : 229,
        "endColumnNumber" : 4
      },
      "nodeContext" : "basicBlocks.forEach(block -> {\n  block.getDoms().clear(block.getId());\n  if (block.getDoms().isEmpty()) {\n    block.setDoms(EMPTY);\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 28,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "java.util.List<jadx.core.dex.nodes.BlockNode>"
  }, {
    "nodeContext" : "basicBlocks",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 232,
      "startColumnNumber" : 25,
      "endLineNumber" : 232,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 733,
        "startLineNumber" : 232,
        "startColumnNumber" : 2,
        "endLineNumber" : 255,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (BlockNode block : basicBlocks) {\n  if (block == entryBlock) {\n    continue;\n  }\n  BlockNode idom;\n  List<BlockNode> preds=block.getPredecessors();\n  if (preds.size() == 1) {\n    idom=preds.get(0);\n  }\n else {\n    BitSet bs=new BitSet(block.getDoms().length());\n    bs.or(block.getDoms());\n    for (int i=bs.nextSetBit(0); i >= 0; i=bs.nextSetBit(i + 1)) {\n      BlockNode dom=basicBlocks.get(i);\n      bs.andNot(dom.getDoms());\n    }\n    if (bs.cardinality() != 1) {\n      throw new JadxRuntimeException(\"Can't find immediate dominator for block \" + block + \" in \"+ bs+ \" preds:\"+ preds);\n    }\n    idom=basicBlocks.get(bs.nextSetBit(0));\n  }\n  block.setIDom(idom);\n  idom.addDominatesOn(block);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 139,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1840,
        "startLineNumber" : 184,
        "startColumnNumber" : 55,
        "endLineNumber" : 256,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  List<BlockNode> basicBlocks=mth.getBasicBlocks();\n  int nBlocks=basicBlocks.size();\n  for (int i=0; i < nBlocks; i++) {\n    BlockNode block=basicBlocks.get(i);\n    block.setId(i);\n    block.setDoms(new BitSet(nBlocks));\n    block.getDoms().set(0,nBlocks);\n  }\n  BlockNode entryBlock=mth.getEnterBlock();\n  entryBlock.getDoms().clear();\n  entryBlock.getDoms().set(entryBlock.getId());\n  BitSet dset=new BitSet(nBlocks);\n  boolean changed;\n  do {\n    changed=false;\n    for (    BlockNode block : basicBlocks) {\n      if (block == entryBlock) {\n        continue;\n      }\n      BitSet d=block.getDoms();\n      if (!changed) {\n        dset.clear();\n        dset.or(d);\n      }\n      for (      BlockNode pred : block.getPredecessors()) {\n        d.and(pred.getDoms());\n      }\n      d.set(block.getId());\n      if (!changed && !d.equals(dset)) {\n        changed=true;\n      }\n    }\n  }\n while (changed);\n  markLoops(mth);\n  basicBlocks.forEach(block -> {\n    block.getDoms().clear(block.getId());\n    if (block.getDoms().isEmpty()) {\n      block.setDoms(EMPTY);\n    }\n  }\n);\n  for (  BlockNode block : basicBlocks) {\n    if (block == entryBlock) {\n      continue;\n    }\n    BlockNode idom;\n    List<BlockNode> preds=block.getPredecessors();\n    if (preds.size() == 1) {\n      idom=preds.get(0);\n    }\n else {\n      BitSet bs=new BitSet(block.getDoms().length());\n      bs.or(block.getDoms());\n      for (int i=bs.nextSetBit(0); i >= 0; i=bs.nextSetBit(i + 1)) {\n        BlockNode dom=basicBlocks.get(i);\n        bs.andNot(dom.getDoms());\n      }\n      if (bs.cardinality() != 1) {\n        throw new JadxRuntimeException(\"Can't find immediate dominator for block \" + block + \" in \"+ bs+ \" preds:\"+ preds);\n      }\n      idom=basicBlocks.get(bs.nextSetBit(0));\n    }\n    block.setIDom(idom);\n    idom.addDominatesOn(block);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 347,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1894,
        "startLineNumber" : 184,
        "startColumnNumber" : 1,
        "endLineNumber" : 256,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private static void computeDominators(MethodNode mth){\n  List<BlockNode> basicBlocks=mth.getBasicBlocks();\n  int nBlocks=basicBlocks.size();\n  for (int i=0; i < nBlocks; i++) {\n    BlockNode block=basicBlocks.get(i);\n    block.setId(i);\n    block.setDoms(new BitSet(nBlocks));\n    block.getDoms().set(0,nBlocks);\n  }\n  BlockNode entryBlock=mth.getEnterBlock();\n  entryBlock.getDoms().clear();\n  entryBlock.getDoms().set(entryBlock.getId());\n  BitSet dset=new BitSet(nBlocks);\n  boolean changed;\n  do {\n    changed=false;\n    for (    BlockNode block : basicBlocks) {\n      if (block == entryBlock) {\n        continue;\n      }\n      BitSet d=block.getDoms();\n      if (!changed) {\n        dset.clear();\n        dset.or(d);\n      }\n      for (      BlockNode pred : block.getPredecessors()) {\n        d.and(pred.getDoms());\n      }\n      d.set(block.getId());\n      if (!changed && !d.equals(dset)) {\n        changed=true;\n      }\n    }\n  }\n while (changed);\n  markLoops(mth);\n  basicBlocks.forEach(block -> {\n    block.getDoms().clear(block.getId());\n    if (block.getDoms().isEmpty()) {\n      block.setDoms(EMPTY);\n    }\n  }\n);\n  for (  BlockNode block : basicBlocks) {\n    if (block == entryBlock) {\n      continue;\n    }\n    BlockNode idom;\n    List<BlockNode> preds=block.getPredecessors();\n    if (preds.size() == 1) {\n      idom=preds.get(0);\n    }\n else {\n      BitSet bs=new BitSet(block.getDoms().length());\n      bs.or(block.getDoms());\n      for (int i=bs.nextSetBit(0); i >= 0; i=bs.nextSetBit(i + 1)) {\n        BlockNode dom=basicBlocks.get(i);\n        bs.andNot(dom.getDoms());\n      }\n      if (bs.cardinality() != 1) {\n        throw new JadxRuntimeException(\"Can't find immediate dominator for block \" + block + \" in \"+ bs+ \" preds:\"+ preds);\n      }\n      idom=basicBlocks.get(bs.nextSetBit(0));\n    }\n    block.setIDom(idom);\n    idom.addDominatesOn(block);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 356,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 733,
        "startLineNumber" : 232,
        "startColumnNumber" : 2,
        "endLineNumber" : 255,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (BlockNode block : basicBlocks) {\n  if (block == entryBlock) {\n    continue;\n  }\n  BlockNode idom;\n  List<BlockNode> preds=block.getPredecessors();\n  if (preds.size() == 1) {\n    idom=preds.get(0);\n  }\n else {\n    BitSet bs=new BitSet(block.getDoms().length());\n    bs.or(block.getDoms());\n    for (int i=bs.nextSetBit(0); i >= 0; i=bs.nextSetBit(i + 1)) {\n      BlockNode dom=basicBlocks.get(i);\n      bs.andNot(dom.getDoms());\n    }\n    if (bs.cardinality() != 1) {\n      throw new JadxRuntimeException(\"Can't find immediate dominator for block \" + block + \" in \"+ bs+ \" preds:\"+ preds);\n    }\n    idom=basicBlocks.get(bs.nextSetBit(0));\n  }\n  block.setIDom(idom);\n  idom.addDominatesOn(block);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 139,
      "astHeight" : 10
    },
    "tokenLength" : 1,
    "type" : "java.util.List<jadx.core.dex.nodes.BlockNode>"
  }, {
    "nodeContext" : "basicBlocks",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 244,
      "startColumnNumber" : 21,
      "endLineNumber" : 244,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 244,
        "startColumnNumber" : 21,
        "endLineNumber" : 244,
        "endColumnNumber" : 39
      },
      "nodeContext" : "basicBlocks.get(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 244,
        "startColumnNumber" : 15,
        "endLineNumber" : 244,
        "endColumnNumber" : 39
      },
      "nodeContext" : "dom=basicBlocks.get(i)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 244,
        "startColumnNumber" : 5,
        "endLineNumber" : 244,
        "endColumnNumber" : 40
      },
      "nodeContext" : "BlockNode dom=basicBlocks.get(i);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 243,
        "startColumnNumber" : 69,
        "endLineNumber" : 246,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  BlockNode dom=basicBlocks.get(i);\n  bs.andNot(dom.getDoms());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 243,
        "startColumnNumber" : 4,
        "endLineNumber" : 246,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=bs.nextSetBit(0); i >= 0; i=bs.nextSetBit(i + 1)) {\n  BlockNode dom=basicBlocks.get(i);\n  bs.andNot(dom.getDoms());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 37,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 453,
        "startLineNumber" : 240,
        "startColumnNumber" : 10,
        "endLineNumber" : 252,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  BitSet bs=new BitSet(block.getDoms().length());\n  bs.or(block.getDoms());\n  for (int i=bs.nextSetBit(0); i >= 0; i=bs.nextSetBit(i + 1)) {\n    BlockNode dom=basicBlocks.get(i);\n    bs.andNot(dom.getDoms());\n  }\n  if (bs.cardinality() != 1) {\n    throw new JadxRuntimeException(\"Can't find immediate dominator for block \" + block + \" in \"+ bs+ \" preds:\"+ preds);\n  }\n  idom=basicBlocks.get(bs.nextSetBit(0));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 513,
        "startLineNumber" : 238,
        "startColumnNumber" : 3,
        "endLineNumber" : 252,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (preds.size() == 1) {\n  idom=preds.get(0);\n}\n else {\n  BitSet bs=new BitSet(block.getDoms().length());\n  bs.or(block.getDoms());\n  for (int i=bs.nextSetBit(0); i >= 0; i=bs.nextSetBit(i + 1)) {\n    BlockNode dom=basicBlocks.get(i);\n    bs.andNot(dom.getDoms());\n  }\n  if (bs.cardinality() != 1) {\n    throw new JadxRuntimeException(\"Can't find immediate dominator for block \" + block + \" in \"+ bs+ \" preds:\"+ preds);\n  }\n  idom=basicBlocks.get(bs.nextSetBit(0));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 100,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 232,
        "startColumnNumber" : 38,
        "endLineNumber" : 255,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (block == entryBlock) {\n    continue;\n  }\n  BlockNode idom;\n  List<BlockNode> preds=block.getPredecessors();\n  if (preds.size() == 1) {\n    idom=preds.get(0);\n  }\n else {\n    BitSet bs=new BitSet(block.getDoms().length());\n    bs.or(block.getDoms());\n    for (int i=bs.nextSetBit(0); i >= 0; i=bs.nextSetBit(i + 1)) {\n      BlockNode dom=basicBlocks.get(i);\n      bs.andNot(dom.getDoms());\n    }\n    if (bs.cardinality() != 1) {\n      throw new JadxRuntimeException(\"Can't find immediate dominator for block \" + block + \" in \"+ bs+ \" preds:\"+ preds);\n    }\n    idom=basicBlocks.get(bs.nextSetBit(0));\n  }\n  block.setIDom(idom);\n  idom.addDominatesOn(block);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 733,
        "startLineNumber" : 232,
        "startColumnNumber" : 2,
        "endLineNumber" : 255,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (BlockNode block : basicBlocks) {\n  if (block == entryBlock) {\n    continue;\n  }\n  BlockNode idom;\n  List<BlockNode> preds=block.getPredecessors();\n  if (preds.size() == 1) {\n    idom=preds.get(0);\n  }\n else {\n    BitSet bs=new BitSet(block.getDoms().length());\n    bs.or(block.getDoms());\n    for (int i=bs.nextSetBit(0); i >= 0; i=bs.nextSetBit(i + 1)) {\n      BlockNode dom=basicBlocks.get(i);\n      bs.andNot(dom.getDoms());\n    }\n    if (bs.cardinality() != 1) {\n      throw new JadxRuntimeException(\"Can't find immediate dominator for block \" + block + \" in \"+ bs+ \" preds:\"+ preds);\n    }\n    idom=basicBlocks.get(bs.nextSetBit(0));\n  }\n  block.setIDom(idom);\n  idom.addDominatesOn(block);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 139,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1840,
        "startLineNumber" : 184,
        "startColumnNumber" : 55,
        "endLineNumber" : 256,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  List<BlockNode> basicBlocks=mth.getBasicBlocks();\n  int nBlocks=basicBlocks.size();\n  for (int i=0; i < nBlocks; i++) {\n    BlockNode block=basicBlocks.get(i);\n    block.setId(i);\n    block.setDoms(new BitSet(nBlocks));\n    block.getDoms().set(0,nBlocks);\n  }\n  BlockNode entryBlock=mth.getEnterBlock();\n  entryBlock.getDoms().clear();\n  entryBlock.getDoms().set(entryBlock.getId());\n  BitSet dset=new BitSet(nBlocks);\n  boolean changed;\n  do {\n    changed=false;\n    for (    BlockNode block : basicBlocks) {\n      if (block == entryBlock) {\n        continue;\n      }\n      BitSet d=block.getDoms();\n      if (!changed) {\n        dset.clear();\n        dset.or(d);\n      }\n      for (      BlockNode pred : block.getPredecessors()) {\n        d.and(pred.getDoms());\n      }\n      d.set(block.getId());\n      if (!changed && !d.equals(dset)) {\n        changed=true;\n      }\n    }\n  }\n while (changed);\n  markLoops(mth);\n  basicBlocks.forEach(block -> {\n    block.getDoms().clear(block.getId());\n    if (block.getDoms().isEmpty()) {\n      block.setDoms(EMPTY);\n    }\n  }\n);\n  for (  BlockNode block : basicBlocks) {\n    if (block == entryBlock) {\n      continue;\n    }\n    BlockNode idom;\n    List<BlockNode> preds=block.getPredecessors();\n    if (preds.size() == 1) {\n      idom=preds.get(0);\n    }\n else {\n      BitSet bs=new BitSet(block.getDoms().length());\n      bs.or(block.getDoms());\n      for (int i=bs.nextSetBit(0); i >= 0; i=bs.nextSetBit(i + 1)) {\n        BlockNode dom=basicBlocks.get(i);\n        bs.andNot(dom.getDoms());\n      }\n      if (bs.cardinality() != 1) {\n        throw new JadxRuntimeException(\"Can't find immediate dominator for block \" + block + \" in \"+ bs+ \" preds:\"+ preds);\n      }\n      idom=basicBlocks.get(bs.nextSetBit(0));\n    }\n    block.setIDom(idom);\n    idom.addDominatesOn(block);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 347,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1894,
        "startLineNumber" : 184,
        "startColumnNumber" : 1,
        "endLineNumber" : 256,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private static void computeDominators(MethodNode mth){\n  List<BlockNode> basicBlocks=mth.getBasicBlocks();\n  int nBlocks=basicBlocks.size();\n  for (int i=0; i < nBlocks; i++) {\n    BlockNode block=basicBlocks.get(i);\n    block.setId(i);\n    block.setDoms(new BitSet(nBlocks));\n    block.getDoms().set(0,nBlocks);\n  }\n  BlockNode entryBlock=mth.getEnterBlock();\n  entryBlock.getDoms().clear();\n  entryBlock.getDoms().set(entryBlock.getId());\n  BitSet dset=new BitSet(nBlocks);\n  boolean changed;\n  do {\n    changed=false;\n    for (    BlockNode block : basicBlocks) {\n      if (block == entryBlock) {\n        continue;\n      }\n      BitSet d=block.getDoms();\n      if (!changed) {\n        dset.clear();\n        dset.or(d);\n      }\n      for (      BlockNode pred : block.getPredecessors()) {\n        d.and(pred.getDoms());\n      }\n      d.set(block.getId());\n      if (!changed && !d.equals(dset)) {\n        changed=true;\n      }\n    }\n  }\n while (changed);\n  markLoops(mth);\n  basicBlocks.forEach(block -> {\n    block.getDoms().clear(block.getId());\n    if (block.getDoms().isEmpty()) {\n      block.setDoms(EMPTY);\n    }\n  }\n);\n  for (  BlockNode block : basicBlocks) {\n    if (block == entryBlock) {\n      continue;\n    }\n    BlockNode idom;\n    List<BlockNode> preds=block.getPredecessors();\n    if (preds.size() == 1) {\n      idom=preds.get(0);\n    }\n else {\n      BitSet bs=new BitSet(block.getDoms().length());\n      bs.or(block.getDoms());\n      for (int i=bs.nextSetBit(0); i >= 0; i=bs.nextSetBit(i + 1)) {\n        BlockNode dom=basicBlocks.get(i);\n        bs.andNot(dom.getDoms());\n      }\n      if (bs.cardinality() != 1) {\n        throw new JadxRuntimeException(\"Can't find immediate dominator for block \" + block + \" in \"+ bs+ \" preds:\"+ preds);\n      }\n      idom=basicBlocks.get(bs.nextSetBit(0));\n    }\n    block.setIDom(idom);\n    idom.addDominatesOn(block);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 356,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 244,
        "startColumnNumber" : 5,
        "endLineNumber" : 244,
        "endColumnNumber" : 40
      },
      "nodeContext" : "BlockNode dom=basicBlocks.get(i);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.List<jadx.core.dex.nodes.BlockNode>"
  }, {
    "nodeContext" : "basicBlocks",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 251,
      "startColumnNumber" : 11,
      "endLineNumber" : 251,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 251,
        "startColumnNumber" : 11,
        "endLineNumber" : 251,
        "endColumnNumber" : 44
      },
      "nodeContext" : "basicBlocks.get(bs.nextSetBit(0))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 251,
        "startColumnNumber" : 4,
        "endLineNumber" : 251,
        "endColumnNumber" : 44
      },
      "nodeContext" : "idom=basicBlocks.get(bs.nextSetBit(0))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 251,
        "startColumnNumber" : 4,
        "endLineNumber" : 251,
        "endColumnNumber" : 45
      },
      "nodeContext" : "idom=basicBlocks.get(bs.nextSetBit(0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 453,
        "startLineNumber" : 240,
        "startColumnNumber" : 10,
        "endLineNumber" : 252,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  BitSet bs=new BitSet(block.getDoms().length());\n  bs.or(block.getDoms());\n  for (int i=bs.nextSetBit(0); i >= 0; i=bs.nextSetBit(i + 1)) {\n    BlockNode dom=basicBlocks.get(i);\n    bs.andNot(dom.getDoms());\n  }\n  if (bs.cardinality() != 1) {\n    throw new JadxRuntimeException(\"Can't find immediate dominator for block \" + block + \" in \"+ bs+ \" preds:\"+ preds);\n  }\n  idom=basicBlocks.get(bs.nextSetBit(0));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 513,
        "startLineNumber" : 238,
        "startColumnNumber" : 3,
        "endLineNumber" : 252,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (preds.size() == 1) {\n  idom=preds.get(0);\n}\n else {\n  BitSet bs=new BitSet(block.getDoms().length());\n  bs.or(block.getDoms());\n  for (int i=bs.nextSetBit(0); i >= 0; i=bs.nextSetBit(i + 1)) {\n    BlockNode dom=basicBlocks.get(i);\n    bs.andNot(dom.getDoms());\n  }\n  if (bs.cardinality() != 1) {\n    throw new JadxRuntimeException(\"Can't find immediate dominator for block \" + block + \" in \"+ bs+ \" preds:\"+ preds);\n  }\n  idom=basicBlocks.get(bs.nextSetBit(0));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 100,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 232,
        "startColumnNumber" : 38,
        "endLineNumber" : 255,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (block == entryBlock) {\n    continue;\n  }\n  BlockNode idom;\n  List<BlockNode> preds=block.getPredecessors();\n  if (preds.size() == 1) {\n    idom=preds.get(0);\n  }\n else {\n    BitSet bs=new BitSet(block.getDoms().length());\n    bs.or(block.getDoms());\n    for (int i=bs.nextSetBit(0); i >= 0; i=bs.nextSetBit(i + 1)) {\n      BlockNode dom=basicBlocks.get(i);\n      bs.andNot(dom.getDoms());\n    }\n    if (bs.cardinality() != 1) {\n      throw new JadxRuntimeException(\"Can't find immediate dominator for block \" + block + \" in \"+ bs+ \" preds:\"+ preds);\n    }\n    idom=basicBlocks.get(bs.nextSetBit(0));\n  }\n  block.setIDom(idom);\n  idom.addDominatesOn(block);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 733,
        "startLineNumber" : 232,
        "startColumnNumber" : 2,
        "endLineNumber" : 255,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (BlockNode block : basicBlocks) {\n  if (block == entryBlock) {\n    continue;\n  }\n  BlockNode idom;\n  List<BlockNode> preds=block.getPredecessors();\n  if (preds.size() == 1) {\n    idom=preds.get(0);\n  }\n else {\n    BitSet bs=new BitSet(block.getDoms().length());\n    bs.or(block.getDoms());\n    for (int i=bs.nextSetBit(0); i >= 0; i=bs.nextSetBit(i + 1)) {\n      BlockNode dom=basicBlocks.get(i);\n      bs.andNot(dom.getDoms());\n    }\n    if (bs.cardinality() != 1) {\n      throw new JadxRuntimeException(\"Can't find immediate dominator for block \" + block + \" in \"+ bs+ \" preds:\"+ preds);\n    }\n    idom=basicBlocks.get(bs.nextSetBit(0));\n  }\n  block.setIDom(idom);\n  idom.addDominatesOn(block);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 139,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1840,
        "startLineNumber" : 184,
        "startColumnNumber" : 55,
        "endLineNumber" : 256,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  List<BlockNode> basicBlocks=mth.getBasicBlocks();\n  int nBlocks=basicBlocks.size();\n  for (int i=0; i < nBlocks; i++) {\n    BlockNode block=basicBlocks.get(i);\n    block.setId(i);\n    block.setDoms(new BitSet(nBlocks));\n    block.getDoms().set(0,nBlocks);\n  }\n  BlockNode entryBlock=mth.getEnterBlock();\n  entryBlock.getDoms().clear();\n  entryBlock.getDoms().set(entryBlock.getId());\n  BitSet dset=new BitSet(nBlocks);\n  boolean changed;\n  do {\n    changed=false;\n    for (    BlockNode block : basicBlocks) {\n      if (block == entryBlock) {\n        continue;\n      }\n      BitSet d=block.getDoms();\n      if (!changed) {\n        dset.clear();\n        dset.or(d);\n      }\n      for (      BlockNode pred : block.getPredecessors()) {\n        d.and(pred.getDoms());\n      }\n      d.set(block.getId());\n      if (!changed && !d.equals(dset)) {\n        changed=true;\n      }\n    }\n  }\n while (changed);\n  markLoops(mth);\n  basicBlocks.forEach(block -> {\n    block.getDoms().clear(block.getId());\n    if (block.getDoms().isEmpty()) {\n      block.setDoms(EMPTY);\n    }\n  }\n);\n  for (  BlockNode block : basicBlocks) {\n    if (block == entryBlock) {\n      continue;\n    }\n    BlockNode idom;\n    List<BlockNode> preds=block.getPredecessors();\n    if (preds.size() == 1) {\n      idom=preds.get(0);\n    }\n else {\n      BitSet bs=new BitSet(block.getDoms().length());\n      bs.or(block.getDoms());\n      for (int i=bs.nextSetBit(0); i >= 0; i=bs.nextSetBit(i + 1)) {\n        BlockNode dom=basicBlocks.get(i);\n        bs.andNot(dom.getDoms());\n      }\n      if (bs.cardinality() != 1) {\n        throw new JadxRuntimeException(\"Can't find immediate dominator for block \" + block + \" in \"+ bs+ \" preds:\"+ preds);\n      }\n      idom=basicBlocks.get(bs.nextSetBit(0));\n    }\n    block.setIDom(idom);\n    idom.addDominatesOn(block);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 347,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1894,
        "startLineNumber" : 184,
        "startColumnNumber" : 1,
        "endLineNumber" : 256,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private static void computeDominators(MethodNode mth){\n  List<BlockNode> basicBlocks=mth.getBasicBlocks();\n  int nBlocks=basicBlocks.size();\n  for (int i=0; i < nBlocks; i++) {\n    BlockNode block=basicBlocks.get(i);\n    block.setId(i);\n    block.setDoms(new BitSet(nBlocks));\n    block.getDoms().set(0,nBlocks);\n  }\n  BlockNode entryBlock=mth.getEnterBlock();\n  entryBlock.getDoms().clear();\n  entryBlock.getDoms().set(entryBlock.getId());\n  BitSet dset=new BitSet(nBlocks);\n  boolean changed;\n  do {\n    changed=false;\n    for (    BlockNode block : basicBlocks) {\n      if (block == entryBlock) {\n        continue;\n      }\n      BitSet d=block.getDoms();\n      if (!changed) {\n        dset.clear();\n        dset.or(d);\n      }\n      for (      BlockNode pred : block.getPredecessors()) {\n        d.and(pred.getDoms());\n      }\n      d.set(block.getId());\n      if (!changed && !d.equals(dset)) {\n        changed=true;\n      }\n    }\n  }\n while (changed);\n  markLoops(mth);\n  basicBlocks.forEach(block -> {\n    block.getDoms().clear(block.getId());\n    if (block.getDoms().isEmpty()) {\n      block.setDoms(EMPTY);\n    }\n  }\n);\n  for (  BlockNode block : basicBlocks) {\n    if (block == entryBlock) {\n      continue;\n    }\n    BlockNode idom;\n    List<BlockNode> preds=block.getPredecessors();\n    if (preds.size() == 1) {\n      idom=preds.get(0);\n    }\n else {\n      BitSet bs=new BitSet(block.getDoms().length());\n      bs.or(block.getDoms());\n      for (int i=bs.nextSetBit(0); i >= 0; i=bs.nextSetBit(i + 1)) {\n        BlockNode dom=basicBlocks.get(i);\n        bs.andNot(dom.getDoms());\n      }\n      if (bs.cardinality() != 1) {\n        throw new JadxRuntimeException(\"Can't find immediate dominator for block \" + block + \" in \"+ bs+ \" preds:\"+ preds);\n      }\n      idom=basicBlocks.get(bs.nextSetBit(0));\n    }\n    block.setIDom(idom);\n    idom.addDominatesOn(block);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 356,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 251,
        "startColumnNumber" : 4,
        "endLineNumber" : 251,
        "endColumnNumber" : 45
      },
      "nodeContext" : "idom=basicBlocks.get(bs.nextSetBit(0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.List<jadx.core.dex.nodes.BlockNode>"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 186,
    "startColumnNumber" : 16,
    "endLineNumber" : 186,
    "endColumnNumber" : 27
  }, {
    "charLength" : 11,
    "startLineNumber" : 188,
    "startColumnNumber" : 21,
    "endLineNumber" : 188,
    "endColumnNumber" : 32
  }, {
    "charLength" : 11,
    "startLineNumber" : 202,
    "startColumnNumber" : 26,
    "endLineNumber" : 202,
    "endColumnNumber" : 37
  }, {
    "charLength" : 11,
    "startLineNumber" : 224,
    "startColumnNumber" : 2,
    "endLineNumber" : 224,
    "endColumnNumber" : 13
  }, {
    "charLength" : 11,
    "startLineNumber" : 232,
    "startColumnNumber" : 25,
    "endLineNumber" : 232,
    "endColumnNumber" : 36
  }, {
    "charLength" : 11,
    "startLineNumber" : 244,
    "startColumnNumber" : 21,
    "endLineNumber" : 244,
    "endColumnNumber" : 32
  }, {
    "charLength" : 11,
    "startLineNumber" : 251,
    "startColumnNumber" : 11,
    "endLineNumber" : 251,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 0
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 0
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 9
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 9
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 9
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 3
  } ]
}