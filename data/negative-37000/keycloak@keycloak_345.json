{
  "id" : 345,
  "expression" : "PublicKeyStorageManager",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/services/src/main/java/org/keycloak/crypto/ClientAsymmetricSignatureVerifierContext.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "PublicKeyStorageManager",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 32,
      "startColumnNumber" : 25,
      "endLineNumber" : 32,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 32,
        "startColumnNumber" : 25,
        "endLineNumber" : 32,
        "endColumnNumber" : 98
      },
      "nodeContext" : "PublicKeyStorageManager.getClientPublicKeyWrapper(session,client,input)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 32,
        "startColumnNumber" : 19,
        "endLineNumber" : 32,
        "endColumnNumber" : 98
      },
      "nodeContext" : "key=PublicKeyStorageManager.getClientPublicKeyWrapper(session,client,input)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 99
      },
      "nodeContext" : "KeyWrapper key=PublicKeyStorageManager.getClientPublicKeyWrapper(session,client,input);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 567,
        "startLineNumber" : 31,
        "startColumnNumber" : 127,
        "endLineNumber" : 43,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  KeyWrapper key=PublicKeyStorageManager.getClientPublicKeyWrapper(session,client,input);\n  if (key == null) {\n    throw new VerificationException(\"Key not found\");\n  }\n  if (key.getAlgorithm() == null) {\n    key.setAlgorithm(input.getHeader().getRawAlgorithm());\n  }\n  return key;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 690,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 43,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static KeyWrapper getKey(KeycloakSession session,ClientModel client,JWSInput input) throws VerificationException {\n  KeyWrapper key=PublicKeyStorageManager.getClientPublicKeyWrapper(session,client,input);\n  if (key == null) {\n    throw new VerificationException(\"Key not found\");\n  }\n  if (key.getAlgorithm() == null) {\n    key.setAlgorithm(input.getHeader().getRawAlgorithm());\n  }\n  return key;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 60,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 99
      },
      "nodeContext" : "KeyWrapper key=PublicKeyStorageManager.getClientPublicKeyWrapper(session,client,input);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.keys.loader.PublicKeyStorageManager"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 32,
    "startColumnNumber" : 25,
    "endLineNumber" : 32,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}