{
  "id" : 373,
  "expression" : "cent * ratios[i]",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/main/java/cn/hutool/core/math/Money.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "cent * ratios[i]",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 763,
      "startColumnNumber" : 42,
      "endLineNumber" : 763,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 763,
        "startColumnNumber" : 41,
        "endLineNumber" : 763,
        "endColumnNumber" : 59
      },
      "nodeContext" : "(cent * ratios[i])",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 763,
        "startColumnNumber" : 41,
        "endLineNumber" : 763,
        "endColumnNumber" : 67
      },
      "nodeContext" : "(cent * ratios[i]) / total",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 763,
        "startColumnNumber" : 16,
        "endLineNumber" : 763,
        "endColumnNumber" : 68
      },
      "nodeContext" : "newMoneyWithSameCurrency((cent * ratios[i]) / total)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 763,
        "startColumnNumber" : 3,
        "endLineNumber" : 763,
        "endColumnNumber" : 68
      },
      "nodeContext" : "results[i]=newMoneyWithSameCurrency((cent * ratios[i]) / total)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 763,
        "startColumnNumber" : 3,
        "endLineNumber" : 763,
        "endColumnNumber" : 69
      },
      "nodeContext" : "results[i]=newMoneyWithSameCurrency((cent * ratios[i]) / total);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 762,
        "startColumnNumber" : 43,
        "endLineNumber" : 765,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  results[i]=newMoneyWithSameCurrency((cent * ratios[i]) / total);\n  remainder-=results[i].cent;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 762,
        "startColumnNumber" : 2,
        "endLineNumber" : 765,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < results.length; i++) {\n  results[i]=newMoneyWithSameCurrency((cent * ratios[i]) / total);\n  remainder-=results[i].cent;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 37,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 427,
        "startLineNumber" : 751,
        "startColumnNumber" : 40,
        "endLineNumber" : 772,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Money[] results=new Money[ratios.length];\n  long total=0;\n  for (int i=0; i < ratios.length; i++) {\n    total+=ratios[i];\n  }\n  long remainder=cent;\n  for (int i=0; i < results.length; i++) {\n    results[i]=newMoneyWithSameCurrency((cent * ratios[i]) / total);\n    remainder-=results[i].cent;\n  }\n  for (int i=0; i < remainder; i++) {\n    results[i].cent++;\n  }\n  return results;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 683,
        "startLineNumber" : 740,
        "startColumnNumber" : 1,
        "endLineNumber" : 772,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 货币分配。 <p> 将本货币对象按照规定的比例分配成若干份。分配所剩的零头 从第一份开始顺序分配。分配运算确保不会丢失金额零头。\n * @param ratios 分配比例数组，每一个比例是一个长整型，代表相对于总数的相对数。\n * @return 货币对象数组，数组的长度与分配比例数组的长度相同。\n */\npublic Money[] allocate(long[] ratios){\n  Money[] results=new Money[ratios.length];\n  long total=0;\n  for (int i=0; i < ratios.length; i++) {\n    total+=ratios[i];\n  }\n  long remainder=cent;\n  for (int i=0; i < results.length; i++) {\n    results[i]=newMoneyWithSameCurrency((cent * ratios[i]) / total);\n    remainder-=results[i].cent;\n  }\n  for (int i=0; i < remainder; i++) {\n    results[i].cent++;\n  }\n  return results;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 117,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 763,
        "startColumnNumber" : 3,
        "endLineNumber" : 763,
        "endColumnNumber" : 69
      },
      "nodeContext" : "results[i]=newMoneyWithSameCurrency((cent * ratios[i]) / total);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 8
    },
    "tokenLength" : 4,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 763,
    "startColumnNumber" : 42,
    "endLineNumber" : 763,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ ]
}