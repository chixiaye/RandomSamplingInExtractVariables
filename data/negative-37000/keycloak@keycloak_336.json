{
  "id" : 336,
  "expression" : "otherAttributes",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/saml-core/src/main/java/org/keycloak/saml/processing/core/parsers/saml/assertion/SAMLAttributeParser.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "otherAttributes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 89,
      "startColumnNumber" : 12,
      "endLineNumber" : 89,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 63
      },
      "nodeContext" : "otherAttributes.put(attributeQName,attributeValue)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 64
      },
      "nodeContext" : "otherAttributes.put(attributeQName,attributeValue);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 587,
        "startLineNumber" : 82,
        "startColumnNumber" : 37,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Attribute currentAttribute=(Attribute)attributes.next();\n  QName attributeQName=currentAttribute.getName();\n  if (attributeQName == null || DEFAULT_KNOWN_ATTRIBUTE_NAMES.contains(attributeQName)) {\n    continue;\n  }\n  String attributeValue=currentAttribute.getValue();\n  otherAttributes.put(attributeQName,attributeValue);\n  if (LOGGER.isTraceEnabled()) {\n    LOGGER.trace(String.format(\"Adding attribute %s with value %s\",attributeQName,attributeValue));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 616,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (attributes.hasNext()) {\n  Attribute currentAttribute=(Attribute)attributes.next();\n  QName attributeQName=currentAttribute.getName();\n  if (attributeQName == null || DEFAULT_KNOWN_ATTRIBUTE_NAMES.contains(attributeQName)) {\n    continue;\n  }\n  String attributeValue=currentAttribute.getValue();\n  otherAttributes.put(attributeQName,attributeValue);\n  if (LOGGER.isTraceEnabled()) {\n    LOGGER.trace(String.format(\"Adding attribute %s with value %s\",attributeQName,attributeValue));\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 64,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 787,
        "startLineNumber" : 77,
        "startColumnNumber" : 89,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<QName,String> otherAttributes=new HashMap<>();\n  Iterator<?> attributes=element.getAttributes();\n  while (attributes.hasNext()) {\n    Attribute currentAttribute=(Attribute)attributes.next();\n    QName attributeQName=currentAttribute.getName();\n    if (attributeQName == null || DEFAULT_KNOWN_ATTRIBUTE_NAMES.contains(attributeQName)) {\n      continue;\n    }\n    String attributeValue=currentAttribute.getValue();\n    otherAttributes.put(attributeQName,attributeValue);\n    if (LOGGER.isTraceEnabled()) {\n      LOGGER.trace(String.format(\"Adding attribute %s with value %s\",attributeQName,attributeValue));\n    }\n  }\n  return otherAttributes;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1138,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns a  {@link Map} with the found non-standard attribute values for the given {@link StartElement}. An attribute is considered as non-standard, if it is not contained in DEFAULT_KNOWN_LOCAL_ATTRIBUTE_NAMES.\n * @return Map\n */\nprivate static Map<QName,String> collectUnknownAttributesFrom(StartElement element){\n  Map<QName,String> otherAttributes=new HashMap<>();\n  Iterator<?> attributes=element.getAttributes();\n  while (attributes.hasNext()) {\n    Attribute currentAttribute=(Attribute)attributes.next();\n    QName attributeQName=currentAttribute.getName();\n    if (attributeQName == null || DEFAULT_KNOWN_ATTRIBUTE_NAMES.contains(attributeQName)) {\n      continue;\n    }\n    String attributeValue=currentAttribute.getValue();\n    otherAttributes.put(attributeQName,attributeValue);\n    if (LOGGER.isTraceEnabled()) {\n      LOGGER.trace(String.format(\"Adding attribute %s with value %s\",attributeQName,attributeValue));\n    }\n  }\n  return otherAttributes;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 64
      },
      "nodeContext" : "otherAttributes.put(attributeQName,attributeValue);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<javax.xml.namespace.QName,java.lang.String>"
  }, {
    "nodeContext" : "otherAttributes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 95,
      "startColumnNumber" : 15,
      "endLineNumber" : 95,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 95,
        "endColumnNumber" : 31
      },
      "nodeContext" : "return otherAttributes;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 787,
        "startLineNumber" : 77,
        "startColumnNumber" : 89,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<QName,String> otherAttributes=new HashMap<>();\n  Iterator<?> attributes=element.getAttributes();\n  while (attributes.hasNext()) {\n    Attribute currentAttribute=(Attribute)attributes.next();\n    QName attributeQName=currentAttribute.getName();\n    if (attributeQName == null || DEFAULT_KNOWN_ATTRIBUTE_NAMES.contains(attributeQName)) {\n      continue;\n    }\n    String attributeValue=currentAttribute.getValue();\n    otherAttributes.put(attributeQName,attributeValue);\n    if (LOGGER.isTraceEnabled()) {\n      LOGGER.trace(String.format(\"Adding attribute %s with value %s\",attributeQName,attributeValue));\n    }\n  }\n  return otherAttributes;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1138,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns a  {@link Map} with the found non-standard attribute values for the given {@link StartElement}. An attribute is considered as non-standard, if it is not contained in DEFAULT_KNOWN_LOCAL_ATTRIBUTE_NAMES.\n * @return Map\n */\nprivate static Map<QName,String> collectUnknownAttributesFrom(StartElement element){\n  Map<QName,String> otherAttributes=new HashMap<>();\n  Iterator<?> attributes=element.getAttributes();\n  while (attributes.hasNext()) {\n    Attribute currentAttribute=(Attribute)attributes.next();\n    QName attributeQName=currentAttribute.getName();\n    if (attributeQName == null || DEFAULT_KNOWN_ATTRIBUTE_NAMES.contains(attributeQName)) {\n      continue;\n    }\n    String attributeValue=currentAttribute.getValue();\n    otherAttributes.put(attributeQName,attributeValue);\n    if (LOGGER.isTraceEnabled()) {\n      LOGGER.trace(String.format(\"Adding attribute %s with value %s\",attributeQName,attributeValue));\n    }\n  }\n  return otherAttributes;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 95,
        "endColumnNumber" : 31
      },
      "nodeContext" : "return otherAttributes;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<javax.xml.namespace.QName,java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 89,
    "startColumnNumber" : 12,
    "endLineNumber" : 89,
    "endColumnNumber" : 27
  }, {
    "charLength" : 15,
    "startLineNumber" : 95,
    "startColumnNumber" : 15,
    "endLineNumber" : 95,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}