{
  "id" : 461,
  "expression" : "serviceManager",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/naming/src/main/java/com/alibaba/nacos/naming/controllers/DistroController.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "serviceManager",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 83,
      "startColumnNumber" : 21,
      "endLineNumber" : 83,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 83,
        "startColumnNumber" : 21,
        "endLineNumber" : 83,
        "endColumnNumber" : 76
      },
      "nodeContext" : "serviceManager.containService(namespaceId,serviceName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 83,
        "startColumnNumber" : 20,
        "endLineNumber" : 83,
        "endColumnNumber" : 76
      },
      "nodeContext" : "!serviceManager.containService(namespaceId,serviceName)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 83,
        "startColumnNumber" : 20,
        "endLineNumber" : 84,
        "endColumnNumber" : 53
      },
      "nodeContext" : "!serviceManager.containService(namespaceId,serviceName) && switchDomain.isDefaultInstanceEphemeral()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 238,
        "startLineNumber" : 83,
        "startColumnNumber" : 16,
        "endLineNumber" : 86,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!serviceManager.containService(namespaceId,serviceName) && switchDomain.isDefaultInstanceEphemeral()) {\n  serviceManager.createEmptyService(namespaceId,serviceName,true);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 605,
        "startLineNumber" : 80,
        "startColumnNumber" : 74,
        "endLineNumber" : 89,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String namespaceId=KeyBuilder.getNamespace(entry.getKey());\n  String serviceName=KeyBuilder.getServiceName(entry.getKey());\n  if (!serviceManager.containService(namespaceId,serviceName) && switchDomain.isDefaultInstanceEphemeral()) {\n    serviceManager.createEmptyService(namespaceId,serviceName,true);\n  }\n  DistroHttpData distroHttpData=new DistroHttpData(createDistroKey(entry.getKey()),entry.getValue());\n  distroProtocol.onReceive(distroHttpData);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 667,
        "startLineNumber" : 80,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (KeyBuilder.matchEphemeralInstanceListKey(entry.getKey())) {\n  String namespaceId=KeyBuilder.getNamespace(entry.getKey());\n  String serviceName=KeyBuilder.getServiceName(entry.getKey());\n  if (!serviceManager.containService(namespaceId,serviceName) && switchDomain.isDefaultInstanceEphemeral()) {\n    serviceManager.createEmptyService(namespaceId,serviceName,true);\n  }\n  DistroHttpData distroHttpData=new DistroHttpData(createDistroKey(entry.getKey()),entry.getValue());\n  distroProtocol.onReceive(distroHttpData);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 70,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 691,
        "startLineNumber" : 79,
        "startColumnNumber" : 77,
        "endLineNumber" : 90,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (KeyBuilder.matchEphemeralInstanceListKey(entry.getKey())) {\n    String namespaceId=KeyBuilder.getNamespace(entry.getKey());\n    String serviceName=KeyBuilder.getServiceName(entry.getKey());\n    if (!serviceManager.containService(namespaceId,serviceName) && switchDomain.isDefaultInstanceEphemeral()) {\n      serviceManager.createEmptyService(namespaceId,serviceName,true);\n    }\n    DistroHttpData distroHttpData=new DistroHttpData(createDistroKey(entry.getKey()),entry.getValue());\n    distroProtocol.onReceive(distroHttpData);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 760,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Map.Entry<String,Datum<Instances>> entry : dataMap.entrySet()) {\n  if (KeyBuilder.matchEphemeralInstanceListKey(entry.getKey())) {\n    String namespaceId=KeyBuilder.getNamespace(entry.getKey());\n    String serviceName=KeyBuilder.getServiceName(entry.getKey());\n    if (!serviceManager.containService(namespaceId,serviceName) && switchDomain.isDefaultInstanceEphemeral()) {\n      serviceManager.createEmptyService(namespaceId,serviceName,true);\n    }\n    DistroHttpData distroHttpData=new DistroHttpData(createDistroKey(entry.getKey()),entry.getValue());\n    distroProtocol.onReceive(distroHttpData);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 89,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1038,
        "startLineNumber" : 72,
        "startColumnNumber" : 107,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (dataMap.isEmpty()) {\n    Loggers.DISTRO.error(\"[onSync] receive empty entity!\");\n    throw new NacosException(NacosException.INVALID_PARAM,\"receive empty entity!\");\n  }\n  for (  Map.Entry<String,Datum<Instances>> entry : dataMap.entrySet()) {\n    if (KeyBuilder.matchEphemeralInstanceListKey(entry.getKey())) {\n      String namespaceId=KeyBuilder.getNamespace(entry.getKey());\n      String serviceName=KeyBuilder.getServiceName(entry.getKey());\n      if (!serviceManager.containService(namespaceId,serviceName) && switchDomain.isDefaultInstanceEphemeral()) {\n        serviceManager.createEmptyService(namespaceId,serviceName,true);\n      }\n      DistroHttpData distroHttpData=new DistroHttpData(createDistroKey(entry.getKey()),entry.getValue());\n      distroProtocol.onReceive(distroHttpData);\n    }\n  }\n  return ResponseEntity.ok(\"ok\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1313,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Synchronize datum.\n * @param dataMap data map\n * @return 'ok' if success\n * @throws Exception if failed\n */\n@PutMapping(\"/datum\") public ResponseEntity onSyncDatum(@RequestBody Map<String,Datum<Instances>> dataMap) throws Exception {\n  if (dataMap.isEmpty()) {\n    Loggers.DISTRO.error(\"[onSync] receive empty entity!\");\n    throw new NacosException(NacosException.INVALID_PARAM,\"receive empty entity!\");\n  }\n  for (  Map.Entry<String,Datum<Instances>> entry : dataMap.entrySet()) {\n    if (KeyBuilder.matchEphemeralInstanceListKey(entry.getKey())) {\n      String namespaceId=KeyBuilder.getNamespace(entry.getKey());\n      String serviceName=KeyBuilder.getServiceName(entry.getKey());\n      if (!serviceManager.containService(namespaceId,serviceName) && switchDomain.isDefaultInstanceEphemeral()) {\n        serviceManager.createEmptyService(namespaceId,serviceName,true);\n      }\n      DistroHttpData distroHttpData=new DistroHttpData(createDistroKey(entry.getKey()),entry.getValue());\n      distroProtocol.onReceive(distroHttpData);\n    }\n  }\n  return ResponseEntity.ok(\"ok\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 83,
        "startColumnNumber" : 20,
        "endLineNumber" : 83,
        "endColumnNumber" : 76
      },
      "nodeContext" : "!serviceManager.containService(namespaceId,serviceName)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.alibaba.nacos.naming.core.ServiceManager"
  }, {
    "nodeContext" : "serviceManager",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 85,
      "startColumnNumber" : 20,
      "endLineNumber" : 85,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 85,
        "startColumnNumber" : 20,
        "endLineNumber" : 85,
        "endColumnNumber" : 85
      },
      "nodeContext" : "serviceManager.createEmptyService(namespaceId,serviceName,true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 85,
        "startColumnNumber" : 20,
        "endLineNumber" : 85,
        "endColumnNumber" : 86
      },
      "nodeContext" : "serviceManager.createEmptyService(namespaceId,serviceName,true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 84,
        "startColumnNumber" : 55,
        "endLineNumber" : 86,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  serviceManager.createEmptyService(namespaceId,serviceName,true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 238,
        "startLineNumber" : 83,
        "startColumnNumber" : 16,
        "endLineNumber" : 86,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!serviceManager.containService(namespaceId,serviceName) && switchDomain.isDefaultInstanceEphemeral()) {\n  serviceManager.createEmptyService(namespaceId,serviceName,true);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 605,
        "startLineNumber" : 80,
        "startColumnNumber" : 74,
        "endLineNumber" : 89,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String namespaceId=KeyBuilder.getNamespace(entry.getKey());\n  String serviceName=KeyBuilder.getServiceName(entry.getKey());\n  if (!serviceManager.containService(namespaceId,serviceName) && switchDomain.isDefaultInstanceEphemeral()) {\n    serviceManager.createEmptyService(namespaceId,serviceName,true);\n  }\n  DistroHttpData distroHttpData=new DistroHttpData(createDistroKey(entry.getKey()),entry.getValue());\n  distroProtocol.onReceive(distroHttpData);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 667,
        "startLineNumber" : 80,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (KeyBuilder.matchEphemeralInstanceListKey(entry.getKey())) {\n  String namespaceId=KeyBuilder.getNamespace(entry.getKey());\n  String serviceName=KeyBuilder.getServiceName(entry.getKey());\n  if (!serviceManager.containService(namespaceId,serviceName) && switchDomain.isDefaultInstanceEphemeral()) {\n    serviceManager.createEmptyService(namespaceId,serviceName,true);\n  }\n  DistroHttpData distroHttpData=new DistroHttpData(createDistroKey(entry.getKey()),entry.getValue());\n  distroProtocol.onReceive(distroHttpData);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 70,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 691,
        "startLineNumber" : 79,
        "startColumnNumber" : 77,
        "endLineNumber" : 90,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (KeyBuilder.matchEphemeralInstanceListKey(entry.getKey())) {\n    String namespaceId=KeyBuilder.getNamespace(entry.getKey());\n    String serviceName=KeyBuilder.getServiceName(entry.getKey());\n    if (!serviceManager.containService(namespaceId,serviceName) && switchDomain.isDefaultInstanceEphemeral()) {\n      serviceManager.createEmptyService(namespaceId,serviceName,true);\n    }\n    DistroHttpData distroHttpData=new DistroHttpData(createDistroKey(entry.getKey()),entry.getValue());\n    distroProtocol.onReceive(distroHttpData);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 760,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Map.Entry<String,Datum<Instances>> entry : dataMap.entrySet()) {\n  if (KeyBuilder.matchEphemeralInstanceListKey(entry.getKey())) {\n    String namespaceId=KeyBuilder.getNamespace(entry.getKey());\n    String serviceName=KeyBuilder.getServiceName(entry.getKey());\n    if (!serviceManager.containService(namespaceId,serviceName) && switchDomain.isDefaultInstanceEphemeral()) {\n      serviceManager.createEmptyService(namespaceId,serviceName,true);\n    }\n    DistroHttpData distroHttpData=new DistroHttpData(createDistroKey(entry.getKey()),entry.getValue());\n    distroProtocol.onReceive(distroHttpData);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 89,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1038,
        "startLineNumber" : 72,
        "startColumnNumber" : 107,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (dataMap.isEmpty()) {\n    Loggers.DISTRO.error(\"[onSync] receive empty entity!\");\n    throw new NacosException(NacosException.INVALID_PARAM,\"receive empty entity!\");\n  }\n  for (  Map.Entry<String,Datum<Instances>> entry : dataMap.entrySet()) {\n    if (KeyBuilder.matchEphemeralInstanceListKey(entry.getKey())) {\n      String namespaceId=KeyBuilder.getNamespace(entry.getKey());\n      String serviceName=KeyBuilder.getServiceName(entry.getKey());\n      if (!serviceManager.containService(namespaceId,serviceName) && switchDomain.isDefaultInstanceEphemeral()) {\n        serviceManager.createEmptyService(namespaceId,serviceName,true);\n      }\n      DistroHttpData distroHttpData=new DistroHttpData(createDistroKey(entry.getKey()),entry.getValue());\n      distroProtocol.onReceive(distroHttpData);\n    }\n  }\n  return ResponseEntity.ok(\"ok\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1313,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Synchronize datum.\n * @param dataMap data map\n * @return 'ok' if success\n * @throws Exception if failed\n */\n@PutMapping(\"/datum\") public ResponseEntity onSyncDatum(@RequestBody Map<String,Datum<Instances>> dataMap) throws Exception {\n  if (dataMap.isEmpty()) {\n    Loggers.DISTRO.error(\"[onSync] receive empty entity!\");\n    throw new NacosException(NacosException.INVALID_PARAM,\"receive empty entity!\");\n  }\n  for (  Map.Entry<String,Datum<Instances>> entry : dataMap.entrySet()) {\n    if (KeyBuilder.matchEphemeralInstanceListKey(entry.getKey())) {\n      String namespaceId=KeyBuilder.getNamespace(entry.getKey());\n      String serviceName=KeyBuilder.getServiceName(entry.getKey());\n      if (!serviceManager.containService(namespaceId,serviceName) && switchDomain.isDefaultInstanceEphemeral()) {\n        serviceManager.createEmptyService(namespaceId,serviceName,true);\n      }\n      DistroHttpData distroHttpData=new DistroHttpData(createDistroKey(entry.getKey()),entry.getValue());\n      distroProtocol.onReceive(distroHttpData);\n    }\n  }\n  return ResponseEntity.ok(\"ok\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 85,
        "startColumnNumber" : 20,
        "endLineNumber" : 85,
        "endColumnNumber" : 86
      },
      "nodeContext" : "serviceManager.createEmptyService(namespaceId,serviceName,true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.alibaba.nacos.naming.core.ServiceManager"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 83,
    "startColumnNumber" : 21,
    "endLineNumber" : 83,
    "endColumnNumber" : 35
  }, {
    "charLength" : 14,
    "startLineNumber" : 85,
    "startColumnNumber" : 20,
    "endLineNumber" : 85,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}