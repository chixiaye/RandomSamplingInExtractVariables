{
  "id" : 491,
  "expression" : "Util.toHexString(payload).substring(0,length)",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/main/java/jenkins/security/HexStringConfidentialKey.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Util.toHexString(payload).substring(0,length)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 46,
      "startLineNumber" : 57,
      "startColumnNumber" : 25,
      "endLineNumber" : 57,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 8,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 57,
        "startColumnNumber" : 16,
        "endLineNumber" : 57,
        "endColumnNumber" : 71
      },
      "nodeContext" : "secret=Util.toHexString(payload).substring(0,length)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 57,
        "startColumnNumber" : 16,
        "endLineNumber" : 57,
        "endColumnNumber" : 72
      },
      "nodeContext" : "secret=Util.toHexString(payload).substring(0,length);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 287,
        "startLineNumber" : 51,
        "startColumnNumber" : 16,
        "endLineNumber" : 58,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  byte[] payload=load();\n  if (payload == null) {\n    payload=cs.randomBytes(length / 2);\n    store(payload);\n  }\n  secret=Util.toHexString(payload).substring(0,length);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 405,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  byte[] payload=load();\n  if (payload == null) {\n    payload=cs.randomBytes(length / 2);\n    store(payload);\n  }\n  secret=Util.toHexString(payload).substring(0,length);\n}\n catch (IOException e) {\n  throw new Error(\"Failed to load the key: \" + getId(),e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 54,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 457,
        "startLineNumber" : 49,
        "startColumnNumber" : 44,
        "endLineNumber" : 61,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  lastCS=cs;\n  try {\n    byte[] payload=load();\n    if (payload == null) {\n      payload=cs.randomBytes(length / 2);\n      store(payload);\n    }\n    secret=Util.toHexString(payload).substring(0,length);\n  }\n catch (  IOException e) {\n    throw new Error(\"Failed to load the key: \" + getId(),e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 493,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (secret == null || cs != lastCS) {\n  lastCS=cs;\n  try {\n    byte[] payload=load();\n    if (payload == null) {\n      payload=cs.randomBytes(length / 2);\n      store(payload);\n    }\n    secret=Util.toHexString(payload).substring(0,length);\n  }\n catch (  IOException e) {\n    throw new Error(\"Failed to load the key: \" + getId(),e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 67,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 592,
        "startLineNumber" : 47,
        "startColumnNumber" : 37,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ConfidentialStore cs=ConfidentialStore.get();\n  if (secret == null || cs != lastCS) {\n    lastCS=cs;\n    try {\n      byte[] payload=load();\n      if (payload == null) {\n        payload=cs.randomBytes(length / 2);\n        store(payload);\n      }\n      secret=Util.toHexString(payload).substring(0,length);\n    }\n catch (    IOException e) {\n      throw new Error(\"Failed to load the key: \" + getId(),e);\n    }\n  }\n  return secret;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 78,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 924,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns the persisted hex string value. If the value isn't persisted, a new random value is created.\n * @throws Error If the secret fails to load. Not throwing a checked exception is for the convenience of the caller.\n */\npublic synchronized String get(){\n  ConfidentialStore cs=ConfidentialStore.get();\n  if (secret == null || cs != lastCS) {\n    lastCS=cs;\n    try {\n      byte[] payload=load();\n      if (payload == null) {\n        payload=cs.randomBytes(length / 2);\n        store(payload);\n      }\n      secret=Util.toHexString(payload).substring(0,length);\n    }\n catch (    IOException e) {\n      throw new Error(\"Failed to load the key: \" + getId(),e);\n    }\n  }\n  return secret;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 85,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 57,
        "startColumnNumber" : 16,
        "endLineNumber" : 57,
        "endColumnNumber" : 72
      },
      "nodeContext" : "secret=Util.toHexString(payload).substring(0,length);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 6,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 46,
    "startLineNumber" : 57,
    "startColumnNumber" : 25,
    "endLineNumber" : 57,
    "endColumnNumber" : 71
  } ],
  "layoutRelationDataList" : [ ]
}