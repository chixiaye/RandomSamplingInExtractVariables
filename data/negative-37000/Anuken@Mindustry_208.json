{
  "id" : 208,
  "expression" : "timerTarget2",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/ai/types/BuilderAI.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "timerTarget2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 69,
      "startColumnNumber" : 42,
      "endLineNumber" : 69,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 69,
        "startColumnNumber" : 32,
        "endLineNumber" : 69,
        "endColumnNumber" : 60
      },
      "nodeContext" : "timer.get(timerTarget2,40f)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 69,
        "startColumnNumber" : 15,
        "endLineNumber" : 69,
        "endColumnNumber" : 60
      },
      "nodeContext" : "!req.breaking && timer.get(timerTarget2,40f)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 398,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 76,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!req.breaking && timer.get(timerTarget2,40f)) {\n  for (  Player player : Groups.player) {\n    if (player.isBuilder() && player.unit().activelyBuilding() && player.unit().buildPlan().samePos(req)&& player.unit().buildPlan().breaking) {\n      unit.plans.removeFirst();\n      return;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 54,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1192,
        "startLineNumber" : 63,
        "startColumnNumber" : 36,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  retreatTimer=0f;\n  BuildPlan req=unit.buildPlan();\n  if (!req.breaking && timer.get(timerTarget2,40f)) {\n    for (    Player player : Groups.player) {\n      if (player.isBuilder() && player.unit().activelyBuilding() && player.unit().buildPlan().samePos(req)&& player.unit().buildPlan().breaking) {\n        unit.plans.removeFirst();\n        return;\n      }\n    }\n  }\n  boolean valid=(req.tile() != null && req.tile().build instanceof   ConstructBuild cons && cons.cblock == req.block) || (req.breaking ? Build.validBreak(unit.team(),req.x,req.y) : Build.validPlace(req.block,unit.team(),req.x,req.y,req.rotation));\n  if (valid) {\n    moveTo(req.tile(),buildingRange - 20f);\n  }\n else {\n    unit.plans.removeFirst();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3439,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 138,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (unit.buildPlan() != null) {\n  retreatTimer=0f;\n  BuildPlan req=unit.buildPlan();\n  if (!req.breaking && timer.get(timerTarget2,40f)) {\n    for (    Player player : Groups.player) {\n      if (player.isBuilder() && player.unit().activelyBuilding() && player.unit().buildPlan().samePos(req)&& player.unit().buildPlan().breaking) {\n        unit.plans.removeFirst();\n        return;\n      }\n    }\n  }\n  boolean valid=(req.tile() != null && req.tile().build instanceof   ConstructBuild cons && cons.cblock == req.block) || (req.breaking ? Build.validBreak(unit.team(),req.x,req.y) : Build.validPlace(req.block,unit.team(),req.x,req.y,req.rotation));\n  if (valid) {\n    moveTo(req.tile(),buildingRange - 20f);\n  }\n else {\n    unit.plans.removeFirst();\n  }\n}\n else {\n  if (timer.get(timerTarget2,60f)) {\n    found=false;\n    Units.nearby(unit.team,unit.x,unit.y,buildRadius,u -> {\n      if (found)       return;\n      if (u.canBuild() && u != unit && u.activelyBuilding()) {\n        BuildPlan plan=u.buildPlan();\n        Building build=world.build(plan.x,plan.y);\n        if (build instanceof         ConstructBuild cons) {\n          float dist=Math.min(cons.dst(unit) - buildingRange,0);\n          if (dist / unit.speed() < cons.buildCost * 0.9f) {\n            following=u;\n            found=true;\n          }\n        }\n      }\n    }\n);\n  }\n  float rebuildTime=(unit.team.rules().ai ? Mathf.lerp(15f,2f,unit.team.rules().aiTier) : 2f) * 60f;\n  if (!unit.team.data().blocks.isEmpty() && following == null && timer.get(timerTarget3,rebuildTime)) {\n    Queue<BlockPlan> blocks=unit.team.data().blocks;\n    BlockPlan block=blocks.first();\n    if (world.tile(block.x,block.y) != null && world.tile(block.x,block.y).block().id == block.block) {\n      blocks.removeFirst();\n    }\n else     if (Build.validPlace(content.block(block.block),unit.team(),block.x,block.y,block.rotation)) {\n      unit.addBuild(new BuildPlan(block.x,block.y,block.rotation,content.block(block.block),block.config));\n      blocks.addLast(blocks.removeFirst());\n    }\n else {\n      blocks.removeFirst();\n      blocks.addLast(block);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 441,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4697,
        "startLineNumber" : 24,
        "startColumnNumber" : 32,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (target != null && shouldShoot()) {\n    unit.lookAt(target);\n  }\n  unit.updateBuilding=true;\n  if (following != null) {\n    retreatTimer=0f;\n    if (!following.isValid() || !following.activelyBuilding()) {\n      following=null;\n      unit.plans.clear();\n      return;\n    }\n    unit.plans.clear();\n    unit.plans.addFirst(following.buildPlan());\n  }\n else   if (unit.buildPlan() == null) {\n    if (timer.get(timerTarget4,40)) {\n      enemy=target(unit.x,unit.y,fleeRange,true,true);\n    }\n    if ((retreatTimer+=Time.delta) >= retreatDelay) {\n      if (enemy != null) {\n        var core=unit.closestCore();\n        if (core != null && !unit.within(core,retreatDst)) {\n          moveTo(core,retreatDst);\n        }\n      }\n    }\n  }\n  if (unit.buildPlan() != null) {\n    retreatTimer=0f;\n    BuildPlan req=unit.buildPlan();\n    if (!req.breaking && timer.get(timerTarget2,40f)) {\n      for (      Player player : Groups.player) {\n        if (player.isBuilder() && player.unit().activelyBuilding() && player.unit().buildPlan().samePos(req)&& player.unit().buildPlan().breaking) {\n          unit.plans.removeFirst();\n          return;\n        }\n      }\n    }\n    boolean valid=(req.tile() != null && req.tile().build instanceof     ConstructBuild cons && cons.cblock == req.block) || (req.breaking ? Build.validBreak(unit.team(),req.x,req.y) : Build.validPlace(req.block,unit.team(),req.x,req.y,req.rotation));\n    if (valid) {\n      moveTo(req.tile(),buildingRange - 20f);\n    }\n else {\n      unit.plans.removeFirst();\n    }\n  }\n else {\n    if (timer.get(timerTarget2,60f)) {\n      found=false;\n      Units.nearby(unit.team,unit.x,unit.y,buildRadius,u -> {\n        if (found)         return;\n        if (u.canBuild() && u != unit && u.activelyBuilding()) {\n          BuildPlan plan=u.buildPlan();\n          Building build=world.build(plan.x,plan.y);\n          if (build instanceof           ConstructBuild cons) {\n            float dist=Math.min(cons.dst(unit) - buildingRange,0);\n            if (dist / unit.speed() < cons.buildCost * 0.9f) {\n              following=u;\n              found=true;\n            }\n          }\n        }\n      }\n);\n    }\n    float rebuildTime=(unit.team.rules().ai ? Mathf.lerp(15f,2f,unit.team.rules().aiTier) : 2f) * 60f;\n    if (!unit.team.data().blocks.isEmpty() && following == null && timer.get(timerTarget3,rebuildTime)) {\n      Queue<BlockPlan> blocks=unit.team.data().blocks;\n      BlockPlan block=blocks.first();\n      if (world.tile(block.x,block.y) != null && world.tile(block.x,block.y).block().id == block.block) {\n        blocks.removeFirst();\n      }\n else       if (Build.validPlace(content.block(block.block),unit.team(),block.x,block.y,block.rotation)) {\n        unit.addBuild(new BuildPlan(block.x,block.y,block.rotation,content.block(block.block),block.config));\n        blocks.addLast(blocks.removeFirst());\n      }\n else {\n        blocks.removeFirst();\n        blocks.addLast(block);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 575,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4739,
        "startLineNumber" : 23,
        "startColumnNumber" : 4,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void updateMovement(){\n  if (target != null && shouldShoot()) {\n    unit.lookAt(target);\n  }\n  unit.updateBuilding=true;\n  if (following != null) {\n    retreatTimer=0f;\n    if (!following.isValid() || !following.activelyBuilding()) {\n      following=null;\n      unit.plans.clear();\n      return;\n    }\n    unit.plans.clear();\n    unit.plans.addFirst(following.buildPlan());\n  }\n else   if (unit.buildPlan() == null) {\n    if (timer.get(timerTarget4,40)) {\n      enemy=target(unit.x,unit.y,fleeRange,true,true);\n    }\n    if ((retreatTimer+=Time.delta) >= retreatDelay) {\n      if (enemy != null) {\n        var core=unit.closestCore();\n        if (core != null && !unit.within(core,retreatDst)) {\n          moveTo(core,retreatDst);\n        }\n      }\n    }\n  }\n  if (unit.buildPlan() != null) {\n    retreatTimer=0f;\n    BuildPlan req=unit.buildPlan();\n    if (!req.breaking && timer.get(timerTarget2,40f)) {\n      for (      Player player : Groups.player) {\n        if (player.isBuilder() && player.unit().activelyBuilding() && player.unit().buildPlan().samePos(req)&& player.unit().buildPlan().breaking) {\n          unit.plans.removeFirst();\n          return;\n        }\n      }\n    }\n    boolean valid=(req.tile() != null && req.tile().build instanceof     ConstructBuild cons && cons.cblock == req.block) || (req.breaking ? Build.validBreak(unit.team(),req.x,req.y) : Build.validPlace(req.block,unit.team(),req.x,req.y,req.rotation));\n    if (valid) {\n      moveTo(req.tile(),buildingRange - 20f);\n    }\n else {\n      unit.plans.removeFirst();\n    }\n  }\n else {\n    if (timer.get(timerTarget2,60f)) {\n      found=false;\n      Units.nearby(unit.team,unit.x,unit.y,buildRadius,u -> {\n        if (found)         return;\n        if (u.canBuild() && u != unit && u.activelyBuilding()) {\n          BuildPlan plan=u.buildPlan();\n          Building build=world.build(plan.x,plan.y);\n          if (build instanceof           ConstructBuild cons) {\n            float dist=Math.min(cons.dst(unit) - buildingRange,0);\n            if (dist / unit.speed() < cons.buildCost * 0.9f) {\n              following=u;\n              found=true;\n            }\n          }\n        }\n      }\n);\n    }\n    float rebuildTime=(unit.team.rules().ai ? Mathf.lerp(15f,2f,unit.team.rules().aiTier) : 2f) * 60f;\n    if (!unit.team.data().blocks.isEmpty() && following == null && timer.get(timerTarget3,rebuildTime)) {\n      Queue<BlockPlan> blocks=unit.team.data().blocks;\n      BlockPlan block=blocks.first();\n      if (world.tile(block.x,block.y) != null && world.tile(block.x,block.y).block().id == block.block) {\n        blocks.removeFirst();\n      }\n else       if (Build.validPlace(content.block(block.block),unit.team(),block.x,block.y,block.rotation)) {\n        unit.addBuild(new BuildPlan(block.x,block.y,block.rotation,content.block(block.block),block.config));\n        blocks.addLast(blocks.removeFirst());\n      }\n else {\n        blocks.removeFirst();\n        blocks.addLast(block);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 581,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 69,
        "startColumnNumber" : 15,
        "endLineNumber" : 69,
        "endColumnNumber" : 60
      },
      "nodeContext" : "!req.breaking && timer.get(timerTarget2,40f)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "timerTarget2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 94,
      "startColumnNumber" : 25,
      "endLineNumber" : 94,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 94,
        "startColumnNumber" : 15,
        "endLineNumber" : 94,
        "endColumnNumber" : 43
      },
      "nodeContext" : "timer.get(timerTarget2,60f)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 891,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 115,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (timer.get(timerTarget2,60f)) {\n  found=false;\n  Units.nearby(unit.team,unit.x,unit.y,buildRadius,u -> {\n    if (found)     return;\n    if (u.canBuild() && u != unit && u.activelyBuilding()) {\n      BuildPlan plan=u.buildPlan();\n      Building build=world.build(plan.x,plan.y);\n      if (build instanceof       ConstructBuild cons) {\n        float dist=Math.min(cons.dst(unit) - buildingRange,0);\n        if (dist / unit.speed() < cons.buildCost * 0.9f) {\n          following=u;\n          found=true;\n        }\n      }\n    }\n  }\n);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 110,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2215,
        "startLineNumber" : 91,
        "startColumnNumber" : 13,
        "endLineNumber" : 138,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (timer.get(timerTarget2,60f)) {\n    found=false;\n    Units.nearby(unit.team,unit.x,unit.y,buildRadius,u -> {\n      if (found)       return;\n      if (u.canBuild() && u != unit && u.activelyBuilding()) {\n        BuildPlan plan=u.buildPlan();\n        Building build=world.build(plan.x,plan.y);\n        if (build instanceof         ConstructBuild cons) {\n          float dist=Math.min(cons.dst(unit) - buildingRange,0);\n          if (dist / unit.speed() < cons.buildCost * 0.9f) {\n            following=u;\n            found=true;\n          }\n        }\n      }\n    }\n);\n  }\n  float rebuildTime=(unit.team.rules().ai ? Mathf.lerp(15f,2f,unit.team.rules().aiTier) : 2f) * 60f;\n  if (!unit.team.data().blocks.isEmpty() && following == null && timer.get(timerTarget3,rebuildTime)) {\n    Queue<BlockPlan> blocks=unit.team.data().blocks;\n    BlockPlan block=blocks.first();\n    if (world.tile(block.x,block.y) != null && world.tile(block.x,block.y).block().id == block.block) {\n      blocks.removeFirst();\n    }\n else     if (Build.validPlace(content.block(block.block),unit.team(),block.x,block.y,block.rotation)) {\n      unit.addBuild(new BuildPlan(block.x,block.y,block.rotation,content.block(block.block),block.config));\n      blocks.addLast(blocks.removeFirst());\n    }\n else {\n      blocks.removeFirst();\n      blocks.addLast(block);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 284,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3439,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 138,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (unit.buildPlan() != null) {\n  retreatTimer=0f;\n  BuildPlan req=unit.buildPlan();\n  if (!req.breaking && timer.get(timerTarget2,40f)) {\n    for (    Player player : Groups.player) {\n      if (player.isBuilder() && player.unit().activelyBuilding() && player.unit().buildPlan().samePos(req)&& player.unit().buildPlan().breaking) {\n        unit.plans.removeFirst();\n        return;\n      }\n    }\n  }\n  boolean valid=(req.tile() != null && req.tile().build instanceof   ConstructBuild cons && cons.cblock == req.block) || (req.breaking ? Build.validBreak(unit.team(),req.x,req.y) : Build.validPlace(req.block,unit.team(),req.x,req.y,req.rotation));\n  if (valid) {\n    moveTo(req.tile(),buildingRange - 20f);\n  }\n else {\n    unit.plans.removeFirst();\n  }\n}\n else {\n  if (timer.get(timerTarget2,60f)) {\n    found=false;\n    Units.nearby(unit.team,unit.x,unit.y,buildRadius,u -> {\n      if (found)       return;\n      if (u.canBuild() && u != unit && u.activelyBuilding()) {\n        BuildPlan plan=u.buildPlan();\n        Building build=world.build(plan.x,plan.y);\n        if (build instanceof         ConstructBuild cons) {\n          float dist=Math.min(cons.dst(unit) - buildingRange,0);\n          if (dist / unit.speed() < cons.buildCost * 0.9f) {\n            following=u;\n            found=true;\n          }\n        }\n      }\n    }\n);\n  }\n  float rebuildTime=(unit.team.rules().ai ? Mathf.lerp(15f,2f,unit.team.rules().aiTier) : 2f) * 60f;\n  if (!unit.team.data().blocks.isEmpty() && following == null && timer.get(timerTarget3,rebuildTime)) {\n    Queue<BlockPlan> blocks=unit.team.data().blocks;\n    BlockPlan block=blocks.first();\n    if (world.tile(block.x,block.y) != null && world.tile(block.x,block.y).block().id == block.block) {\n      blocks.removeFirst();\n    }\n else     if (Build.validPlace(content.block(block.block),unit.team(),block.x,block.y,block.rotation)) {\n      unit.addBuild(new BuildPlan(block.x,block.y,block.rotation,content.block(block.block),block.config));\n      blocks.addLast(blocks.removeFirst());\n    }\n else {\n      blocks.removeFirst();\n      blocks.addLast(block);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 441,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4697,
        "startLineNumber" : 24,
        "startColumnNumber" : 32,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (target != null && shouldShoot()) {\n    unit.lookAt(target);\n  }\n  unit.updateBuilding=true;\n  if (following != null) {\n    retreatTimer=0f;\n    if (!following.isValid() || !following.activelyBuilding()) {\n      following=null;\n      unit.plans.clear();\n      return;\n    }\n    unit.plans.clear();\n    unit.plans.addFirst(following.buildPlan());\n  }\n else   if (unit.buildPlan() == null) {\n    if (timer.get(timerTarget4,40)) {\n      enemy=target(unit.x,unit.y,fleeRange,true,true);\n    }\n    if ((retreatTimer+=Time.delta) >= retreatDelay) {\n      if (enemy != null) {\n        var core=unit.closestCore();\n        if (core != null && !unit.within(core,retreatDst)) {\n          moveTo(core,retreatDst);\n        }\n      }\n    }\n  }\n  if (unit.buildPlan() != null) {\n    retreatTimer=0f;\n    BuildPlan req=unit.buildPlan();\n    if (!req.breaking && timer.get(timerTarget2,40f)) {\n      for (      Player player : Groups.player) {\n        if (player.isBuilder() && player.unit().activelyBuilding() && player.unit().buildPlan().samePos(req)&& player.unit().buildPlan().breaking) {\n          unit.plans.removeFirst();\n          return;\n        }\n      }\n    }\n    boolean valid=(req.tile() != null && req.tile().build instanceof     ConstructBuild cons && cons.cblock == req.block) || (req.breaking ? Build.validBreak(unit.team(),req.x,req.y) : Build.validPlace(req.block,unit.team(),req.x,req.y,req.rotation));\n    if (valid) {\n      moveTo(req.tile(),buildingRange - 20f);\n    }\n else {\n      unit.plans.removeFirst();\n    }\n  }\n else {\n    if (timer.get(timerTarget2,60f)) {\n      found=false;\n      Units.nearby(unit.team,unit.x,unit.y,buildRadius,u -> {\n        if (found)         return;\n        if (u.canBuild() && u != unit && u.activelyBuilding()) {\n          BuildPlan plan=u.buildPlan();\n          Building build=world.build(plan.x,plan.y);\n          if (build instanceof           ConstructBuild cons) {\n            float dist=Math.min(cons.dst(unit) - buildingRange,0);\n            if (dist / unit.speed() < cons.buildCost * 0.9f) {\n              following=u;\n              found=true;\n            }\n          }\n        }\n      }\n);\n    }\n    float rebuildTime=(unit.team.rules().ai ? Mathf.lerp(15f,2f,unit.team.rules().aiTier) : 2f) * 60f;\n    if (!unit.team.data().blocks.isEmpty() && following == null && timer.get(timerTarget3,rebuildTime)) {\n      Queue<BlockPlan> blocks=unit.team.data().blocks;\n      BlockPlan block=blocks.first();\n      if (world.tile(block.x,block.y) != null && world.tile(block.x,block.y).block().id == block.block) {\n        blocks.removeFirst();\n      }\n else       if (Build.validPlace(content.block(block.block),unit.team(),block.x,block.y,block.rotation)) {\n        unit.addBuild(new BuildPlan(block.x,block.y,block.rotation,content.block(block.block),block.config));\n        blocks.addLast(blocks.removeFirst());\n      }\n else {\n        blocks.removeFirst();\n        blocks.addLast(block);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 575,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4739,
        "startLineNumber" : 23,
        "startColumnNumber" : 4,
        "endLineNumber" : 139,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void updateMovement(){\n  if (target != null && shouldShoot()) {\n    unit.lookAt(target);\n  }\n  unit.updateBuilding=true;\n  if (following != null) {\n    retreatTimer=0f;\n    if (!following.isValid() || !following.activelyBuilding()) {\n      following=null;\n      unit.plans.clear();\n      return;\n    }\n    unit.plans.clear();\n    unit.plans.addFirst(following.buildPlan());\n  }\n else   if (unit.buildPlan() == null) {\n    if (timer.get(timerTarget4,40)) {\n      enemy=target(unit.x,unit.y,fleeRange,true,true);\n    }\n    if ((retreatTimer+=Time.delta) >= retreatDelay) {\n      if (enemy != null) {\n        var core=unit.closestCore();\n        if (core != null && !unit.within(core,retreatDst)) {\n          moveTo(core,retreatDst);\n        }\n      }\n    }\n  }\n  if (unit.buildPlan() != null) {\n    retreatTimer=0f;\n    BuildPlan req=unit.buildPlan();\n    if (!req.breaking && timer.get(timerTarget2,40f)) {\n      for (      Player player : Groups.player) {\n        if (player.isBuilder() && player.unit().activelyBuilding() && player.unit().buildPlan().samePos(req)&& player.unit().buildPlan().breaking) {\n          unit.plans.removeFirst();\n          return;\n        }\n      }\n    }\n    boolean valid=(req.tile() != null && req.tile().build instanceof     ConstructBuild cons && cons.cblock == req.block) || (req.breaking ? Build.validBreak(unit.team(),req.x,req.y) : Build.validPlace(req.block,unit.team(),req.x,req.y,req.rotation));\n    if (valid) {\n      moveTo(req.tile(),buildingRange - 20f);\n    }\n else {\n      unit.plans.removeFirst();\n    }\n  }\n else {\n    if (timer.get(timerTarget2,60f)) {\n      found=false;\n      Units.nearby(unit.team,unit.x,unit.y,buildRadius,u -> {\n        if (found)         return;\n        if (u.canBuild() && u != unit && u.activelyBuilding()) {\n          BuildPlan plan=u.buildPlan();\n          Building build=world.build(plan.x,plan.y);\n          if (build instanceof           ConstructBuild cons) {\n            float dist=Math.min(cons.dst(unit) - buildingRange,0);\n            if (dist / unit.speed() < cons.buildCost * 0.9f) {\n              following=u;\n              found=true;\n            }\n          }\n        }\n      }\n);\n    }\n    float rebuildTime=(unit.team.rules().ai ? Mathf.lerp(15f,2f,unit.team.rules().aiTier) : 2f) * 60f;\n    if (!unit.team.data().blocks.isEmpty() && following == null && timer.get(timerTarget3,rebuildTime)) {\n      Queue<BlockPlan> blocks=unit.team.data().blocks;\n      BlockPlan block=blocks.first();\n      if (world.tile(block.x,block.y) != null && world.tile(block.x,block.y).block().id == block.block) {\n        blocks.removeFirst();\n      }\n else       if (Build.validPlace(content.block(block.block),unit.team(),block.x,block.y,block.rotation)) {\n        unit.addBuild(new BuildPlan(block.x,block.y,block.rotation,content.block(block.block),block.config));\n        blocks.addLast(blocks.removeFirst());\n      }\n else {\n        blocks.removeFirst();\n        blocks.addLast(block);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 581,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 94,
        "startColumnNumber" : 15,
        "endLineNumber" : 94,
        "endColumnNumber" : 43
      },
      "nodeContext" : "timer.get(timerTarget2,60f)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 69,
    "startColumnNumber" : 42,
    "endLineNumber" : 69,
    "endColumnNumber" : 54
  }, {
    "charLength" : 12,
    "startLineNumber" : 94,
    "startColumnNumber" : 25,
    "endLineNumber" : 94,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}