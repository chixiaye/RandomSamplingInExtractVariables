{
  "id" : 125,
  "expression" : "\"Helen\"",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/spring-boot-modules/spring-boot-angular/src/main/java/com/baeldung/application/Application.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Helen\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 21,
      "startColumnNumber" : 51,
      "endLineNumber" : 21,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 21,
        "startColumnNumber" : 12,
        "endLineNumber" : 21,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Stream.of(\"John\",\"Julie\",\"Jennifer\",\"Helen\",\"Rachel\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 213,
        "startLineNumber" : 21,
        "startColumnNumber" : 12,
        "endLineNumber" : 24,
        "endColumnNumber" : 14
      },
      "nodeContext" : "Stream.of(\"John\",\"Julie\",\"Jennifer\",\"Helen\",\"Rachel\").forEach(name -> {\n  User user=new User(name,name.toLowerCase() + \"@domain.com\");\n  userRepository.save(user);\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 33,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 214,
        "startLineNumber" : 21,
        "startColumnNumber" : 12,
        "endLineNumber" : 24,
        "endColumnNumber" : 15
      },
      "nodeContext" : "Stream.of(\"John\",\"Julie\",\"Jennifer\",\"Helen\",\"Rachel\").forEach(name -> {\n  User user=new User(name,name.toLowerCase() + \"@domain.com\");\n  userRepository.save(user);\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 34,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 305,
        "startLineNumber" : 20,
        "startColumnNumber" : 23,
        "endLineNumber" : 26,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Stream.of(\"John\",\"Julie\",\"Jennifer\",\"Helen\",\"Rachel\").forEach(name -> {\n    User user=new User(name,name.toLowerCase() + \"@domain.com\");\n    userRepository.save(user);\n  }\n);\n  userRepository.findAll().forEach(System.out::println);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 313,
        "startLineNumber" : 20,
        "startColumnNumber" : 15,
        "endLineNumber" : 26,
        "endColumnNumber" : 9
      },
      "nodeContext" : "args -> {\n  Stream.of(\"John\",\"Julie\",\"Jennifer\",\"Helen\",\"Rachel\").forEach(name -> {\n    User user=new User(name,name.toLowerCase() + \"@domain.com\");\n    userRepository.save(user);\n  }\n);\n  userRepository.findAll().forEach(System.out::println);\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 49,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 21,
        "startColumnNumber" : 12,
        "endLineNumber" : 21,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Stream.of(\"John\",\"Julie\",\"Jennifer\",\"Helen\",\"Rachel\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 21,
    "startColumnNumber" : 51,
    "endLineNumber" : 21,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ ]
}