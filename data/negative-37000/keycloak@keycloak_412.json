{
  "id" : 412,
  "expression" : "metadata.getCreateAction() == null",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/services/src/main/java/org/keycloak/services/resources/account/AccountCredentialResource.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "metadata.getCreateAction() == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 215,
      "startColumnNumber" : 62,
      "endLineNumber" : 215,
      "endColumnNumber" : 96
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 215,
        "startColumnNumber" : 20,
        "endLineNumber" : 215,
        "endColumnNumber" : 96
      },
      "nodeContext" : "userCredentialMetadataModels.isEmpty() && metadata.getCreateAction() == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 215,
        "startColumnNumber" : 20,
        "endLineNumber" : 215,
        "endColumnNumber" : 134
      },
      "nodeContext" : "userCredentialMetadataModels.isEmpty() && metadata.getCreateAction() == null && metadata.getUpdateAction() == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 215,
        "startColumnNumber" : 16,
        "endLineNumber" : 217,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (userCredentialMetadataModels.isEmpty() && metadata.getCreateAction() == null && metadata.getUpdateAction() == null) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2223,
        "startLineNumber" : 186,
        "startColumnNumber" : 40,
        "endLineNumber" : 218,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  List<CredentialModel> modelsOfType=models.stream().filter(credentialModel -> credentialProvider.getType().equals(credentialModel.getType())).collect(Collectors.toList());\n  List<CredentialMetadata> credentialMetadataList=modelsOfType.stream().map(m -> {\n    return credentialProvider.getCredentialMetadata(credentialProvider.getCredentialFromModel(m),metadata);\n  }\n).collect(Collectors.toList());\n  credentialMetadataList.stream().forEach(md -> md.getCredentialModel().setSecretData(null));\n  userCredentialMetadataModels=credentialMetadataList.stream().map(ModelToRepresentation::toRepresentation).collect(Collectors.toList());\n  if (userCredentialMetadataModels.isEmpty() && session.userCredentialManager().isConfiguredFor(realm,user,credentialProvider.getType())) {\n    CredentialMetadataRepresentation metadataRepresentation=new CredentialMetadataRepresentation();\n    CredentialRepresentation credential=createUserStorageCredentialRepresentation(credentialProvider.getType());\n    metadataRepresentation.setCredential(credential);\n    userCredentialMetadataModels=Collections.singletonList(metadataRepresentation);\n  }\n  if (userCredentialMetadataModels.isEmpty() && metadata.getCreateAction() == null && metadata.getUpdateAction() == null) {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 157,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2251,
        "startLineNumber" : 186,
        "startColumnNumber" : 12,
        "endLineNumber" : 218,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (includeUserCredentials) {\n  List<CredentialModel> modelsOfType=models.stream().filter(credentialModel -> credentialProvider.getType().equals(credentialModel.getType())).collect(Collectors.toList());\n  List<CredentialMetadata> credentialMetadataList=modelsOfType.stream().map(m -> {\n    return credentialProvider.getCredentialMetadata(credentialProvider.getCredentialFromModel(m),metadata);\n  }\n).collect(Collectors.toList());\n  credentialMetadataList.stream().forEach(md -> md.getCredentialModel().setSecretData(null));\n  userCredentialMetadataModels=credentialMetadataList.stream().map(ModelToRepresentation::toRepresentation).collect(Collectors.toList());\n  if (userCredentialMetadataModels.isEmpty() && session.userCredentialManager().isConfiguredFor(realm,user,credentialProvider.getType())) {\n    CredentialMetadataRepresentation metadataRepresentation=new CredentialMetadataRepresentation();\n    CredentialRepresentation credential=createUserStorageCredentialRepresentation(credentialProvider.getType());\n    metadataRepresentation.setCredential(credential);\n    userCredentialMetadataModels=Collections.singletonList(metadataRepresentation);\n  }\n  if (userCredentialMetadataModels.isEmpty() && metadata.getCreateAction() == null && metadata.getUpdateAction() == null) {\n    return null;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 159,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 2704,
        "startLineNumber" : 178,
        "startColumnNumber" : 106,
        "endLineNumber" : 221,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  CredentialTypeMetadataContext ctx=CredentialTypeMetadataContext.builder().user(user).build(session);\n  CredentialTypeMetadata metadata=credentialProvider.getCredentialTypeMetadata(ctx);\n  List<CredentialMetadataRepresentation> userCredentialMetadataModels=null;\n  if (includeUserCredentials) {\n    List<CredentialModel> modelsOfType=models.stream().filter(credentialModel -> credentialProvider.getType().equals(credentialModel.getType())).collect(Collectors.toList());\n    List<CredentialMetadata> credentialMetadataList=modelsOfType.stream().map(m -> {\n      return credentialProvider.getCredentialMetadata(credentialProvider.getCredentialFromModel(m),metadata);\n    }\n).collect(Collectors.toList());\n    credentialMetadataList.stream().forEach(md -> md.getCredentialModel().setSecretData(null));\n    userCredentialMetadataModels=credentialMetadataList.stream().map(ModelToRepresentation::toRepresentation).collect(Collectors.toList());\n    if (userCredentialMetadataModels.isEmpty() && session.userCredentialManager().isConfiguredFor(realm,user,credentialProvider.getType())) {\n      CredentialMetadataRepresentation metadataRepresentation=new CredentialMetadataRepresentation();\n      CredentialRepresentation credential=createUserStorageCredentialRepresentation(credentialProvider.getType());\n      metadataRepresentation.setCredential(credential);\n      userCredentialMetadataModels=Collections.singletonList(metadataRepresentation);\n    }\n    if (userCredentialMetadataModels.isEmpty() && metadata.getCreateAction() == null && metadata.getUpdateAction() == null) {\n      return null;\n    }\n  }\n  return new CredentialContainer(metadata,userCredentialMetadataModels);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 198,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 2728,
        "startLineNumber" : 178,
        "startColumnNumber" : 82,
        "endLineNumber" : 221,
        "endColumnNumber" : 9
      },
      "nodeContext" : "(credentialProvider) -> {\n  CredentialTypeMetadataContext ctx=CredentialTypeMetadataContext.builder().user(user).build(session);\n  CredentialTypeMetadata metadata=credentialProvider.getCredentialTypeMetadata(ctx);\n  List<CredentialMetadataRepresentation> userCredentialMetadataModels=null;\n  if (includeUserCredentials) {\n    List<CredentialModel> modelsOfType=models.stream().filter(credentialModel -> credentialProvider.getType().equals(credentialModel.getType())).collect(Collectors.toList());\n    List<CredentialMetadata> credentialMetadataList=modelsOfType.stream().map(m -> {\n      return credentialProvider.getCredentialMetadata(credentialProvider.getCredentialFromModel(m),metadata);\n    }\n).collect(Collectors.toList());\n    credentialMetadataList.stream().forEach(md -> md.getCredentialModel().setSecretData(null));\n    userCredentialMetadataModels=credentialMetadataList.stream().map(ModelToRepresentation::toRepresentation).collect(Collectors.toList());\n    if (userCredentialMetadataModels.isEmpty() && session.userCredentialManager().isConfiguredFor(realm,user,credentialProvider.getType())) {\n      CredentialMetadataRepresentation metadataRepresentation=new CredentialMetadataRepresentation();\n      CredentialRepresentation credential=createUserStorageCredentialRepresentation(credentialProvider.getType());\n      metadataRepresentation.setCredential(credential);\n      userCredentialMetadataModels=Collections.singletonList(metadataRepresentation);\n    }\n    if (userCredentialMetadataModels.isEmpty() && metadata.getCreateAction() == null && metadata.getUpdateAction() == null) {\n      return null;\n    }\n  }\n  return new CredentialContainer(metadata,userCredentialMetadataModels);\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 201,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 215,
        "startColumnNumber" : 20,
        "endLineNumber" : 215,
        "endColumnNumber" : 134
      },
      "nodeContext" : "userCredentialMetadataModels.isEmpty() && metadata.getCreateAction() == null && metadata.getUpdateAction() == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 215,
    "startColumnNumber" : 62,
    "endLineNumber" : 215,
    "endColumnNumber" : 96
  } ],
  "layoutRelationDataList" : [ ]
}