{
  "id" : 9,
  "expression" : "input == null",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-demo/src/main/java/ApolloConfigDemo.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "input == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 86,
      "startColumnNumber" : 10,
      "endLineNumber" : 86,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 86,
        "startColumnNumber" : 10,
        "endLineNumber" : 86,
        "endColumnNumber" : 46
      },
      "nodeContext" : "input == null || input.length() == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 86,
        "startColumnNumber" : 6,
        "endLineNumber" : 88,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (input == null || input.length() == 0) {\n  continue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 592,
        "startLineNumber" : 83,
        "startColumnNumber" : 17,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  System.out.print(\"> \");\n  String input=new BufferedReader(new InputStreamReader(System.in,Charsets.UTF_8)).readLine();\n  if (input == null || input.length() == 0) {\n    continue;\n  }\n  input=input.trim();\n  if (input.equalsIgnoreCase(\"application\")) {\n    apolloConfigDemo.print(\"application\");\n    continue;\n  }\n  if (input.equalsIgnoreCase(\"xml\")) {\n    apolloConfigDemo.print(\"xml\");\n    continue;\n  }\n  if (input.equalsIgnoreCase(\"quit\")) {\n    System.exit(0);\n  }\n  apolloConfigDemo.getConfig(input);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 605,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (true) {\n  System.out.print(\"> \");\n  String input=new BufferedReader(new InputStreamReader(System.in,Charsets.UTF_8)).readLine();\n  if (input == null || input.length() == 0) {\n    continue;\n  }\n  input=input.trim();\n  if (input.equalsIgnoreCase(\"application\")) {\n    apolloConfigDemo.print(\"application\");\n    continue;\n  }\n  if (input.equalsIgnoreCase(\"xml\")) {\n    apolloConfigDemo.print(\"xml\");\n    continue;\n  }\n  if (input.equalsIgnoreCase(\"quit\")) {\n    System.exit(0);\n  }\n  apolloConfigDemo.getConfig(input);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 87,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 770,
        "startLineNumber" : 79,
        "startColumnNumber" : 60,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ApolloConfigDemo apolloConfigDemo=new ApolloConfigDemo();\n  System.out.println(\"Apollo Config Demo. Please input key to get the value.\");\n  while (true) {\n    System.out.print(\"> \");\n    String input=new BufferedReader(new InputStreamReader(System.in,Charsets.UTF_8)).readLine();\n    if (input == null || input.length() == 0) {\n      continue;\n    }\n    input=input.trim();\n    if (input.equalsIgnoreCase(\"application\")) {\n      apolloConfigDemo.print(\"application\");\n      continue;\n    }\n    if (input.equalsIgnoreCase(\"xml\")) {\n      apolloConfigDemo.print(\"xml\");\n      continue;\n    }\n    if (input.equalsIgnoreCase(\"quit\")) {\n      System.exit(0);\n    }\n    apolloConfigDemo.getConfig(input);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 828,
        "startLineNumber" : 79,
        "startColumnNumber" : 2,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static void main(String[] args) throws IOException {\n  ApolloConfigDemo apolloConfigDemo=new ApolloConfigDemo();\n  System.out.println(\"Apollo Config Demo. Please input key to get the value.\");\n  while (true) {\n    System.out.print(\"> \");\n    String input=new BufferedReader(new InputStreamReader(System.in,Charsets.UTF_8)).readLine();\n    if (input == null || input.length() == 0) {\n      continue;\n    }\n    input=input.trim();\n    if (input.equalsIgnoreCase(\"application\")) {\n      apolloConfigDemo.print(\"application\");\n      continue;\n    }\n    if (input.equalsIgnoreCase(\"xml\")) {\n      apolloConfigDemo.print(\"xml\");\n      continue;\n    }\n    if (input.equalsIgnoreCase(\"quit\")) {\n      System.exit(0);\n    }\n    apolloConfigDemo.getConfig(input);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 116,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 86,
        "startColumnNumber" : 10,
        "endLineNumber" : 86,
        "endColumnNumber" : 46
      },
      "nodeContext" : "input == null || input.length() == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 86,
    "startColumnNumber" : 10,
    "endLineNumber" : 86,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ ]
}