{
  "id" : 274,
  "expression" : "DefaultFilePathFilterTest.class",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/test/src/test/java/jenkins/security/s2m/DefaultFilePathFilterTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "DefaultFilePathFilterTest.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 74,
      "startColumnNumber" : 67,
      "endLineNumber" : 74,
      "endColumnNumber" : 98
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 74,
        "startColumnNumber" : 67,
        "endLineNumber" : 74,
        "endColumnNumber" : 108
      },
      "nodeContext" : "DefaultFilePathFilterTest.class.getName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 74,
        "startColumnNumber" : 67,
        "endLineNumber" : 74,
        "endColumnNumber" : 122
      },
      "nodeContext" : "DefaultFilePathFilterTest.class.getName() + \".remotePath\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 74,
        "startColumnNumber" : 52,
        "endLineNumber" : 74,
        "endColumnNumber" : 123
      },
      "nodeContext" : "containsString(DefaultFilePathFilterTest.class.getName() + \".remotePath\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 74,
        "startColumnNumber" : 12,
        "endLineNumber" : 74,
        "endColumnNumber" : 124
      },
      "nodeContext" : "assertThat(Functions.printThrowable(x),containsString(DefaultFilePathFilterTest.class.getName() + \".remotePath\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 74,
        "startColumnNumber" : 12,
        "endLineNumber" : 74,
        "endColumnNumber" : 125
      },
      "nodeContext" : "assertThat(Functions.printThrowable(x),containsString(DefaultFilePathFilterTest.class.getName() + \".remotePath\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 262,
        "startLineNumber" : 70,
        "startColumnNumber" : 30,
        "endLineNumber" : 75,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  assertThat(Functions.printThrowable(x),containsString(DefaultFilePathFilterTest.class.getName() + \".remotePath\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 282,
        "startLineNumber" : 70,
        "startColumnNumber" : 10,
        "endLineNumber" : 75,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Exception x) {\n  assertThat(Functions.printThrowable(x),containsString(DefaultFilePathFilterTest.class.getName() + \".remotePath\"));\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 22,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 404,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  s.getChannel().call(new ReverseCallable(reverse));\n  fail(\"should have failed\");\n}\n catch (Exception x) {\n  assertThat(Functions.printThrowable(x),containsString(DefaultFilePathFilterTest.class.getName() + \".remotePath\"));\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 38,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1008,
        "startLineNumber" : 60,
        "startColumnNumber" : 52,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Slave s=r.createOnlineSlave();\n  FilePath forward=s.getRootPath().child(\"forward\");\n  forward.write(\"hello\",null);\n  assertEquals(\"hello\",s.getRootPath().act(new LocalCallable(forward)));\n  FilePath reverse=new FilePath(new File(r.jenkins.root,\"reverse\"));\n  assertFalse(reverse.exists());\n  try {\n    s.getChannel().call(new ReverseCallable(reverse));\n    fail(\"should have failed\");\n  }\n catch (  Exception x) {\n    assertThat(Functions.printThrowable(x),containsString(DefaultFilePathFilterTest.class.getName() + \".remotePath\"));\n  }\n  assertFalse(reverse.exists());\n  DefaultFilePathFilter.BYPASS=true;\n  s.getChannel().call(new ReverseCallable(reverse));\n  assertTrue(reverse.exists());\n  assertEquals(\"goodbye\",reverse.readToString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1056,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void remotePath() throws Exception {\n  Slave s=r.createOnlineSlave();\n  FilePath forward=s.getRootPath().child(\"forward\");\n  forward.write(\"hello\",null);\n  assertEquals(\"hello\",s.getRootPath().act(new LocalCallable(forward)));\n  FilePath reverse=new FilePath(new File(r.jenkins.root,\"reverse\"));\n  assertFalse(reverse.exists());\n  try {\n    s.getChannel().call(new ReverseCallable(reverse));\n    fail(\"should have failed\");\n  }\n catch (  Exception x) {\n    assertThat(Functions.printThrowable(x),containsString(DefaultFilePathFilterTest.class.getName() + \".remotePath\"));\n  }\n  assertFalse(reverse.exists());\n  DefaultFilePathFilter.BYPASS=true;\n  s.getChannel().call(new ReverseCallable(reverse));\n  assertTrue(reverse.exists());\n  assertEquals(\"goodbye\",reverse.readToString());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 74,
        "startColumnNumber" : 12,
        "endLineNumber" : 74,
        "endColumnNumber" : 125
      },
      "nodeContext" : "assertThat(Functions.printThrowable(x),containsString(DefaultFilePathFilterTest.class.getName() + \".remotePath\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<jenkins.security.s2m.DefaultFilePathFilterTest>"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 74,
    "startColumnNumber" : 67,
    "endLineNumber" : 74,
    "endColumnNumber" : 98
  } ],
  "layoutRelationDataList" : [ ]
}