{
  "id" : 260,
  "expression" : "TinkerServiceInternals",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/listener/DefaultPatchListener.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TinkerServiceInternals",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 124,
      "startColumnNumber" : 12,
      "endLineNumber" : 124,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 124,
        "startColumnNumber" : 12,
        "endLineNumber" : 124,
        "endColumnNumber" : 71
      },
      "nodeContext" : "TinkerServiceInternals.isTinkerPatchServiceRunning(context)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 124,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (TinkerServiceInternals.isTinkerPatchServiceRunning(context)) {\n  return ShareConstants.ERROR_PATCH_RUNNING;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2693,
        "startLineNumber" : 104,
        "startColumnNumber" : 59,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Tinker manager=Tinker.with(context);\n  if (!manager.isTinkerEnabled() || !ShareTinkerInternals.isTinkerEnableWithSharedPreferences(context)) {\n    return ShareConstants.ERROR_PATCH_DISABLE;\n  }\n  if (TextUtils.isEmpty(patchMd5)) {\n    return ShareConstants.ERROR_PATCH_NOTEXIST;\n  }\n  final File file=new File(path);\n  if (!SharePatchFileUtil.isLegalFile(file)) {\n    return ShareConstants.ERROR_PATCH_NOTEXIST;\n  }\n  if (manager.isPatchProcess()) {\n    return ShareConstants.ERROR_PATCH_INSERVICE;\n  }\n  if (TinkerServiceInternals.isTinkerPatchServiceRunning(context)) {\n    return ShareConstants.ERROR_PATCH_RUNNING;\n  }\n  if (ShareTinkerInternals.isVmJit()) {\n    return ShareConstants.ERROR_PATCH_JIT;\n  }\n  final TinkerLoadResult loadResult=manager.getTinkerLoadResultIfPresent();\n  final boolean repairOptNeeded=manager.isMainProcess() && loadResult != null && loadResult.useInterpretMode;\n  if (!repairOptNeeded) {\n    if (manager.isTinkerLoaded() && loadResult != null) {\n      String currentVersion=loadResult.currentVersion;\n      if (patchMd5.equals(currentVersion)) {\n        return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n      }\n    }\n    final String patchDirectory=manager.getPatchDirectory().getAbsolutePath();\n    File patchInfoLockFile=SharePatchFileUtil.getPatchInfoLockFile(patchDirectory);\n    File patchInfoFile=SharePatchFileUtil.getPatchInfoFile(patchDirectory);\n    try {\n      final SharePatchInfo currInfo=SharePatchInfo.readAndCheckPropertyWithLock(patchInfoFile,patchInfoLockFile);\n      if (currInfo != null && !ShareTinkerInternals.isNullOrNil(currInfo.newVersion) && !currInfo.isRemoveNewVersion) {\n        if (patchMd5.equals(currInfo.newVersion)) {\n          return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n        }\n      }\n    }\n catch (    Throwable ignored) {\n    }\n  }\n  if (!UpgradePatchRetry.getInstance(context).onPatchListenerCheck(patchMd5)) {\n    return ShareConstants.ERROR_PATCH_RETRY_COUNT_LIMIT;\n  }\n  return ShareConstants.ERROR_PATCH_OK;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 238,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2748,
        "startLineNumber" : 104,
        "startColumnNumber" : 4,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected int patchCheck(String path,String patchMd5){\n  final Tinker manager=Tinker.with(context);\n  if (!manager.isTinkerEnabled() || !ShareTinkerInternals.isTinkerEnableWithSharedPreferences(context)) {\n    return ShareConstants.ERROR_PATCH_DISABLE;\n  }\n  if (TextUtils.isEmpty(patchMd5)) {\n    return ShareConstants.ERROR_PATCH_NOTEXIST;\n  }\n  final File file=new File(path);\n  if (!SharePatchFileUtil.isLegalFile(file)) {\n    return ShareConstants.ERROR_PATCH_NOTEXIST;\n  }\n  if (manager.isPatchProcess()) {\n    return ShareConstants.ERROR_PATCH_INSERVICE;\n  }\n  if (TinkerServiceInternals.isTinkerPatchServiceRunning(context)) {\n    return ShareConstants.ERROR_PATCH_RUNNING;\n  }\n  if (ShareTinkerInternals.isVmJit()) {\n    return ShareConstants.ERROR_PATCH_JIT;\n  }\n  final TinkerLoadResult loadResult=manager.getTinkerLoadResultIfPresent();\n  final boolean repairOptNeeded=manager.isMainProcess() && loadResult != null && loadResult.useInterpretMode;\n  if (!repairOptNeeded) {\n    if (manager.isTinkerLoaded() && loadResult != null) {\n      String currentVersion=loadResult.currentVersion;\n      if (patchMd5.equals(currentVersion)) {\n        return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n      }\n    }\n    final String patchDirectory=manager.getPatchDirectory().getAbsolutePath();\n    File patchInfoLockFile=SharePatchFileUtil.getPatchInfoLockFile(patchDirectory);\n    File patchInfoFile=SharePatchFileUtil.getPatchInfoFile(patchDirectory);\n    try {\n      final SharePatchInfo currInfo=SharePatchInfo.readAndCheckPropertyWithLock(patchInfoFile,patchInfoLockFile);\n      if (currInfo != null && !ShareTinkerInternals.isNullOrNil(currInfo.newVersion) && !currInfo.isRemoveNewVersion) {\n        if (patchMd5.equals(currInfo.newVersion)) {\n          return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n        }\n      }\n    }\n catch (    Throwable ignored) {\n    }\n  }\n  if (!UpgradePatchRetry.getInstance(context).onPatchListenerCheck(patchMd5)) {\n    return ShareConstants.ERROR_PATCH_RETRY_COUNT_LIMIT;\n  }\n  return ShareConstants.ERROR_PATCH_OK;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 250,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 124,
        "startColumnNumber" : 12,
        "endLineNumber" : 124,
        "endColumnNumber" : 71
      },
      "nodeContext" : "TinkerServiceInternals.isTinkerPatchServiceRunning(context)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.lib.util.TinkerServiceInternals"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 124,
    "startColumnNumber" : 12,
    "endLineNumber" : 124,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}