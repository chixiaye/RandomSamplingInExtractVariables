{
  "id" : 324,
  "expression" : "\"Finalized without closing: %x %x (type = %s).\\nStack:\\n%s\"",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/imagepipeline/src/main/java/com/facebook/imagepipeline/core/CloseableReferenceFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Finalized without closing: %x %x (type = %s).\\nStack:\\n%s\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 59,
      "startLineNumber" : 34,
      "startColumnNumber" : 16,
      "endLineNumber" : 34,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 312,
        "startLineNumber" : 32,
        "startColumnNumber" : 12,
        "endLineNumber" : 38,
        "endColumnNumber" : 48
      },
      "nodeContext" : "FLog.w(\"Fresco\",\"Finalized without closing: %x %x (type = %s).\\nStack:\\n%s\",System.identityHashCode(this),System.identityHashCode(reference),reference.get().getClass().getName(),getStackTraceString(stacktrace))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 313,
        "startLineNumber" : 32,
        "startColumnNumber" : 12,
        "endLineNumber" : 38,
        "endColumnNumber" : 49
      },
      "nodeContext" : "FLog.w(\"Fresco\",\"Finalized without closing: %x %x (type = %s).\\nStack:\\n%s\",System.identityHashCode(this),System.identityHashCode(reference),reference.get().getClass().getName(),getStackTraceString(stacktrace));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 433,
        "startLineNumber" : 30,
        "startColumnNumber" : 81,
        "endLineNumber" : 39,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  closeableReferenceLeakTracker.trackCloseableReferenceLeak(reference,stacktrace);\n  FLog.w(\"Fresco\",\"Finalized without closing: %x %x (type = %s).\\nStack:\\n%s\",System.identityHashCode(this),System.identityHashCode(reference),reference.get().getClass().getName(),getStackTraceString(stacktrace));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 558,
        "startLineNumber" : 28,
        "startColumnNumber" : 10,
        "endLineNumber" : 39,
        "endColumnNumber" : 11
      },
      "nodeContext" : "@Override public void reportLeak(SharedReference<Object> reference,@Nullable Throwable stacktrace){\n  closeableReferenceLeakTracker.trackCloseableReferenceLeak(reference,stacktrace);\n  FLog.w(\"Fresco\",\"Finalized without closing: %x %x (type = %s).\\nStack:\\n%s\",System.identityHashCode(this),System.identityHashCode(reference),reference.get().getClass().getName(),getStackTraceString(stacktrace));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 50,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 312,
        "startLineNumber" : 32,
        "startColumnNumber" : 12,
        "endLineNumber" : 38,
        "endColumnNumber" : 48
      },
      "nodeContext" : "FLog.w(\"Fresco\",\"Finalized without closing: %x %x (type = %s).\\nStack:\\n%s\",System.identityHashCode(this),System.identityHashCode(reference),reference.get().getClass().getName(),getStackTraceString(stacktrace))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 5
    },
    "tokenLength" : 10,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 59,
    "startLineNumber" : 34,
    "startColumnNumber" : 16,
    "endLineNumber" : 34,
    "endColumnNumber" : 75
  } ],
  "layoutRelationDataList" : [ ]
}