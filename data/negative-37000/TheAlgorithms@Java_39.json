{
  "id" : 39,
  "expression" : "T",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/Others/KMP.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "T",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 13,
      "startColumnNumber" : 22,
      "endLineNumber" : 13,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 13,
        "startColumnNumber" : 22,
        "endLineNumber" : 13,
        "endColumnNumber" : 32
      },
      "nodeContext" : "T.length()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 13,
        "startColumnNumber" : 18,
        "endLineNumber" : 13,
        "endColumnNumber" : 32
      },
      "nodeContext" : "m=T.length()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 13,
        "startColumnNumber" : 8,
        "endLineNumber" : 13,
        "endColumnNumber" : 33
      },
      "nodeContext" : "final int m=T.length();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 524,
        "startLineNumber" : 12,
        "startColumnNumber" : 59,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int m=T.length();\n  final int n=P.length();\n  final int[] pi=computePrefixFunction(P);\n  int q=0;\n  for (int i=0; i < m; i++) {\n    while (q > 0 && T.charAt(i) != P.charAt(q)) {\n      q=pi[q - 1];\n    }\n    if (T.charAt(i) == P.charAt(q)) {\n      q++;\n    }\n    if (q == n) {\n      System.out.println(\"Pattern starts: \" + (i + 1 - n));\n      q=pi[q - 1];\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 579,
        "startLineNumber" : 12,
        "startColumnNumber" : 4,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void KMPmatcher(final String T,final String P){\n  final int m=T.length();\n  final int n=P.length();\n  final int[] pi=computePrefixFunction(P);\n  int q=0;\n  for (int i=0; i < m; i++) {\n    while (q > 0 && T.charAt(i) != P.charAt(q)) {\n      q=pi[q - 1];\n    }\n    if (T.charAt(i) == P.charAt(q)) {\n      q++;\n    }\n    if (q == n) {\n      System.out.println(\"Pattern starts: \" + (i + 1 - n));\n      q=pi[q - 1];\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 13,
        "startColumnNumber" : 8,
        "endLineNumber" : 13,
        "endColumnNumber" : 33
      },
      "nodeContext" : "final int m=T.length();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "T",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 18,
      "startColumnNumber" : 28,
      "endLineNumber" : 18,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 18,
        "startColumnNumber" : 28,
        "endLineNumber" : 18,
        "endColumnNumber" : 39
      },
      "nodeContext" : "T.charAt(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 18,
        "startColumnNumber" : 28,
        "endLineNumber" : 18,
        "endColumnNumber" : 54
      },
      "nodeContext" : "T.charAt(i) != P.charAt(q)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 18,
        "startColumnNumber" : 19,
        "endLineNumber" : 18,
        "endColumnNumber" : 54
      },
      "nodeContext" : "q > 0 && T.charAt(i) != P.charAt(q)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 18,
        "startColumnNumber" : 12,
        "endLineNumber" : 20,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (q > 0 && T.charAt(i) != P.charAt(q)) {\n  q=pi[q - 1];\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 341,
        "startLineNumber" : 17,
        "startColumnNumber" : 36,
        "endLineNumber" : 30,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  while (q > 0 && T.charAt(i) != P.charAt(q)) {\n    q=pi[q - 1];\n  }\n  if (T.charAt(i) == P.charAt(q)) {\n    q++;\n  }\n  if (q == n) {\n    System.out.println(\"Pattern starts: \" + (i + 1 - n));\n    q=pi[q - 1];\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 369,
        "startLineNumber" : 17,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < m; i++) {\n  while (q > 0 && T.charAt(i) != P.charAt(q)) {\n    q=pi[q - 1];\n  }\n  if (T.charAt(i) == P.charAt(q)) {\n    q++;\n  }\n  if (q == n) {\n    System.out.println(\"Pattern starts: \" + (i + 1 - n));\n    q=pi[q - 1];\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 76,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 524,
        "startLineNumber" : 12,
        "startColumnNumber" : 59,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int m=T.length();\n  final int n=P.length();\n  final int[] pi=computePrefixFunction(P);\n  int q=0;\n  for (int i=0; i < m; i++) {\n    while (q > 0 && T.charAt(i) != P.charAt(q)) {\n      q=pi[q - 1];\n    }\n    if (T.charAt(i) == P.charAt(q)) {\n      q++;\n    }\n    if (q == n) {\n      System.out.println(\"Pattern starts: \" + (i + 1 - n));\n      q=pi[q - 1];\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 579,
        "startLineNumber" : 12,
        "startColumnNumber" : 4,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void KMPmatcher(final String T,final String P){\n  final int m=T.length();\n  final int n=P.length();\n  final int[] pi=computePrefixFunction(P);\n  int q=0;\n  for (int i=0; i < m; i++) {\n    while (q > 0 && T.charAt(i) != P.charAt(q)) {\n      q=pi[q - 1];\n    }\n    if (T.charAt(i) == P.charAt(q)) {\n      q++;\n    }\n    if (q == n) {\n      System.out.println(\"Pattern starts: \" + (i + 1 - n));\n      q=pi[q - 1];\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 18,
        "startColumnNumber" : 19,
        "endLineNumber" : 18,
        "endColumnNumber" : 54
      },
      "nodeContext" : "q > 0 && T.charAt(i) != P.charAt(q)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "T",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 22,
      "startColumnNumber" : 16,
      "endLineNumber" : 22,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 22,
        "startColumnNumber" : 16,
        "endLineNumber" : 22,
        "endColumnNumber" : 27
      },
      "nodeContext" : "T.charAt(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 22,
        "startColumnNumber" : 16,
        "endLineNumber" : 22,
        "endColumnNumber" : 42
      },
      "nodeContext" : "T.charAt(i) == P.charAt(q)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 22,
        "startColumnNumber" : 12,
        "endLineNumber" : 24,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (T.charAt(i) == P.charAt(q)) {\n  q++;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 341,
        "startLineNumber" : 17,
        "startColumnNumber" : 36,
        "endLineNumber" : 30,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  while (q > 0 && T.charAt(i) != P.charAt(q)) {\n    q=pi[q - 1];\n  }\n  if (T.charAt(i) == P.charAt(q)) {\n    q++;\n  }\n  if (q == n) {\n    System.out.println(\"Pattern starts: \" + (i + 1 - n));\n    q=pi[q - 1];\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 369,
        "startLineNumber" : 17,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < m; i++) {\n  while (q > 0 && T.charAt(i) != P.charAt(q)) {\n    q=pi[q - 1];\n  }\n  if (T.charAt(i) == P.charAt(q)) {\n    q++;\n  }\n  if (q == n) {\n    System.out.println(\"Pattern starts: \" + (i + 1 - n));\n    q=pi[q - 1];\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 76,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 524,
        "startLineNumber" : 12,
        "startColumnNumber" : 59,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int m=T.length();\n  final int n=P.length();\n  final int[] pi=computePrefixFunction(P);\n  int q=0;\n  for (int i=0; i < m; i++) {\n    while (q > 0 && T.charAt(i) != P.charAt(q)) {\n      q=pi[q - 1];\n    }\n    if (T.charAt(i) == P.charAt(q)) {\n      q++;\n    }\n    if (q == n) {\n      System.out.println(\"Pattern starts: \" + (i + 1 - n));\n      q=pi[q - 1];\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 579,
        "startLineNumber" : 12,
        "startColumnNumber" : 4,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void KMPmatcher(final String T,final String P){\n  final int m=T.length();\n  final int n=P.length();\n  final int[] pi=computePrefixFunction(P);\n  int q=0;\n  for (int i=0; i < m; i++) {\n    while (q > 0 && T.charAt(i) != P.charAt(q)) {\n      q=pi[q - 1];\n    }\n    if (T.charAt(i) == P.charAt(q)) {\n      q++;\n    }\n    if (q == n) {\n      System.out.println(\"Pattern starts: \" + (i + 1 - n));\n      q=pi[q - 1];\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 22,
        "startColumnNumber" : 16,
        "endLineNumber" : 22,
        "endColumnNumber" : 42
      },
      "nodeContext" : "T.charAt(i) == P.charAt(q)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 13,
    "startColumnNumber" : 22,
    "endLineNumber" : 13,
    "endColumnNumber" : 23
  }, {
    "charLength" : 1,
    "startLineNumber" : 18,
    "startColumnNumber" : 28,
    "endLineNumber" : 18,
    "endColumnNumber" : 29
  }, {
    "charLength" : 1,
    "startLineNumber" : 22,
    "startColumnNumber" : 16,
    "endLineNumber" : 22,
    "endColumnNumber" : 17
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}