{
  "id" : 455,
  "expression" : "0xaa000000L",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/test/src/com/google/zxing/qrcode/encoder/BitVectorTestCase.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0xaa000000L",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 70,
      "startColumnNumber" : 17,
      "endLineNumber" : 70,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertEquals(0xaa000000L,getUnsignedInt(v,0))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertEquals(0xaa000000L,getUnsignedInt(v,0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1365,
        "startLineNumber" : 40,
        "startColumnNumber" : 30,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BitArray v=new BitArray();\n  assertEquals(0,v.getSizeInBytes());\n  v.appendBit(true);\n  assertEquals(1,v.getSize());\n  assertEquals(0x80000000L,getUnsignedInt(v,0));\n  v.appendBit(false);\n  assertEquals(2,v.getSize());\n  assertEquals(0x80000000L,getUnsignedInt(v,0));\n  v.appendBit(true);\n  assertEquals(3,v.getSize());\n  assertEquals(0xa0000000L,getUnsignedInt(v,0));\n  v.appendBit(false);\n  assertEquals(4,v.getSize());\n  assertEquals(0xa0000000L,getUnsignedInt(v,0));\n  v.appendBit(true);\n  assertEquals(5,v.getSize());\n  assertEquals(0xa8000000L,getUnsignedInt(v,0));\n  v.appendBit(false);\n  assertEquals(6,v.getSize());\n  assertEquals(0xa8000000L,getUnsignedInt(v,0));\n  v.appendBit(true);\n  assertEquals(7,v.getSize());\n  assertEquals(0xaa000000L,getUnsignedInt(v,0));\n  v.appendBit(false);\n  assertEquals(8,v.getSize());\n  assertEquals(0xaa000000L,getUnsignedInt(v,0));\n  v.appendBit(true);\n  assertEquals(9,v.getSize());\n  assertEquals(0xaa800000L,getUnsignedInt(v,0));\n  v.appendBit(false);\n  assertEquals(10,v.getSize());\n  assertEquals(0xaa800000L,getUnsignedInt(v,0));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 216,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1402,
        "startLineNumber" : 39,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testAppendBit(){\n  BitArray v=new BitArray();\n  assertEquals(0,v.getSizeInBytes());\n  v.appendBit(true);\n  assertEquals(1,v.getSize());\n  assertEquals(0x80000000L,getUnsignedInt(v,0));\n  v.appendBit(false);\n  assertEquals(2,v.getSize());\n  assertEquals(0x80000000L,getUnsignedInt(v,0));\n  v.appendBit(true);\n  assertEquals(3,v.getSize());\n  assertEquals(0xa0000000L,getUnsignedInt(v,0));\n  v.appendBit(false);\n  assertEquals(4,v.getSize());\n  assertEquals(0xa0000000L,getUnsignedInt(v,0));\n  v.appendBit(true);\n  assertEquals(5,v.getSize());\n  assertEquals(0xa8000000L,getUnsignedInt(v,0));\n  v.appendBit(false);\n  assertEquals(6,v.getSize());\n  assertEquals(0xa8000000L,getUnsignedInt(v,0));\n  v.appendBit(true);\n  assertEquals(7,v.getSize());\n  assertEquals(0xaa000000L,getUnsignedInt(v,0));\n  v.appendBit(false);\n  assertEquals(8,v.getSize());\n  assertEquals(0xaa000000L,getUnsignedInt(v,0));\n  v.appendBit(true);\n  assertEquals(9,v.getSize());\n  assertEquals(0xaa800000L,getUnsignedInt(v,0));\n  v.appendBit(false);\n  assertEquals(10,v.getSize());\n  assertEquals(0xaa800000L,getUnsignedInt(v,0));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 222,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertEquals(0xaa000000L,getUnsignedInt(v,0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "long"
  }, {
    "nodeContext" : "0xaa000000L",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 74,
      "startColumnNumber" : 17,
      "endLineNumber" : 74,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertEquals(0xaa000000L,getUnsignedInt(v,0))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertEquals(0xaa000000L,getUnsignedInt(v,0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1365,
        "startLineNumber" : 40,
        "startColumnNumber" : 30,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BitArray v=new BitArray();\n  assertEquals(0,v.getSizeInBytes());\n  v.appendBit(true);\n  assertEquals(1,v.getSize());\n  assertEquals(0x80000000L,getUnsignedInt(v,0));\n  v.appendBit(false);\n  assertEquals(2,v.getSize());\n  assertEquals(0x80000000L,getUnsignedInt(v,0));\n  v.appendBit(true);\n  assertEquals(3,v.getSize());\n  assertEquals(0xa0000000L,getUnsignedInt(v,0));\n  v.appendBit(false);\n  assertEquals(4,v.getSize());\n  assertEquals(0xa0000000L,getUnsignedInt(v,0));\n  v.appendBit(true);\n  assertEquals(5,v.getSize());\n  assertEquals(0xa8000000L,getUnsignedInt(v,0));\n  v.appendBit(false);\n  assertEquals(6,v.getSize());\n  assertEquals(0xa8000000L,getUnsignedInt(v,0));\n  v.appendBit(true);\n  assertEquals(7,v.getSize());\n  assertEquals(0xaa000000L,getUnsignedInt(v,0));\n  v.appendBit(false);\n  assertEquals(8,v.getSize());\n  assertEquals(0xaa000000L,getUnsignedInt(v,0));\n  v.appendBit(true);\n  assertEquals(9,v.getSize());\n  assertEquals(0xaa800000L,getUnsignedInt(v,0));\n  v.appendBit(false);\n  assertEquals(10,v.getSize());\n  assertEquals(0xaa800000L,getUnsignedInt(v,0));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 216,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1402,
        "startLineNumber" : 39,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testAppendBit(){\n  BitArray v=new BitArray();\n  assertEquals(0,v.getSizeInBytes());\n  v.appendBit(true);\n  assertEquals(1,v.getSize());\n  assertEquals(0x80000000L,getUnsignedInt(v,0));\n  v.appendBit(false);\n  assertEquals(2,v.getSize());\n  assertEquals(0x80000000L,getUnsignedInt(v,0));\n  v.appendBit(true);\n  assertEquals(3,v.getSize());\n  assertEquals(0xa0000000L,getUnsignedInt(v,0));\n  v.appendBit(false);\n  assertEquals(4,v.getSize());\n  assertEquals(0xa0000000L,getUnsignedInt(v,0));\n  v.appendBit(true);\n  assertEquals(5,v.getSize());\n  assertEquals(0xa8000000L,getUnsignedInt(v,0));\n  v.appendBit(false);\n  assertEquals(6,v.getSize());\n  assertEquals(0xa8000000L,getUnsignedInt(v,0));\n  v.appendBit(true);\n  assertEquals(7,v.getSize());\n  assertEquals(0xaa000000L,getUnsignedInt(v,0));\n  v.appendBit(false);\n  assertEquals(8,v.getSize());\n  assertEquals(0xaa000000L,getUnsignedInt(v,0));\n  v.appendBit(true);\n  assertEquals(9,v.getSize());\n  assertEquals(0xaa800000L,getUnsignedInt(v,0));\n  v.appendBit(false);\n  assertEquals(10,v.getSize());\n  assertEquals(0xaa800000L,getUnsignedInt(v,0));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 222,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertEquals(0xaa000000L,getUnsignedInt(v,0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 70,
    "startColumnNumber" : 17,
    "endLineNumber" : 70,
    "endColumnNumber" : 28
  }, {
    "charLength" : 11,
    "startLineNumber" : 74,
    "startColumnNumber" : 17,
    "endLineNumber" : 74,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}