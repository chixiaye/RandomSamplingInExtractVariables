{
  "id" : 117,
  "expression" : "this.originalNavigationHandler",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-web/src/main/java/org/springframework/web/jsf/DelegatingNavigationHandlerProxy.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this.originalNavigationHandler",
    "nodeType" : "FieldAccess",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 115,
      "startColumnNumber" : 40,
      "endLineNumber" : 115,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 114,
        "startColumnNumber" : 3,
        "endLineNumber" : 115,
        "endColumnNumber" : 71
      },
      "nodeContext" : "((DecoratingNavigationHandler)handler).handleNavigation(facesContext,fromAction,outcome,this.originalNavigationHandler)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 114,
        "startColumnNumber" : 3,
        "endLineNumber" : 115,
        "endColumnNumber" : 72
      },
      "nodeContext" : "((DecoratingNavigationHandler)handler).handleNavigation(facesContext,fromAction,outcome,this.originalNavigationHandler);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 113,
        "startColumnNumber" : 54,
        "endLineNumber" : 116,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ((DecoratingNavigationHandler)handler).handleNavigation(facesContext,fromAction,outcome,this.originalNavigationHandler);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 268,
        "startLineNumber" : 113,
        "startColumnNumber" : 2,
        "endLineNumber" : 119,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (handler instanceof DecoratingNavigationHandler) {\n  ((DecoratingNavigationHandler)handler).handleNavigation(facesContext,fromAction,outcome,this.originalNavigationHandler);\n}\n else {\n  handler.handleNavigation(facesContext,fromAction,outcome);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 332,
        "startLineNumber" : 111,
        "startColumnNumber" : 92,
        "endLineNumber" : 120,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  NavigationHandler handler=getDelegate(facesContext);\n  if (handler instanceof DecoratingNavigationHandler) {\n    ((DecoratingNavigationHandler)handler).handleNavigation(facesContext,fromAction,outcome,this.originalNavigationHandler);\n  }\n else {\n    handler.handleNavigation(facesContext,fromAction,outcome);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 908,
        "startLineNumber" : 101,
        "startColumnNumber" : 1,
        "endLineNumber" : 120,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Handle the navigation request implied by the specified parameters, through delegating to the target bean in the Spring application context. <p>The target bean needs to extend the JSF NavigationHandler class. If it extends Spring's DecoratingNavigationHandler, the overloaded {@code handleNavigation} method with the original NavigationHandleras argument will be used. Else, the standard  {@code handleNavigation}method will be called.\n */\n@Override public void handleNavigation(FacesContext facesContext,String fromAction,String outcome){\n  NavigationHandler handler=getDelegate(facesContext);\n  if (handler instanceof DecoratingNavigationHandler) {\n    ((DecoratingNavigationHandler)handler).handleNavigation(facesContext,fromAction,outcome,this.originalNavigationHandler);\n  }\n else {\n    handler.handleNavigation(facesContext,fromAction,outcome);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 56,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 114,
        "startColumnNumber" : 3,
        "endLineNumber" : 115,
        "endColumnNumber" : 71
      },
      "nodeContext" : "((DecoratingNavigationHandler)handler).handleNavigation(facesContext,fromAction,outcome,this.originalNavigationHandler)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.springframework.web.jsf.NavigationHandler"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 115,
    "startColumnNumber" : 40,
    "endLineNumber" : 115,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}