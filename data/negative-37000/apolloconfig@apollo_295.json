{
  "id" : 295,
  "expression" : "item0.getDataChangeCreatedBy()",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-adminservice/src/test/java/com/ctrip/framework/apollo/adminservice/controller/ItemSetControllerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "item0.getDataChangeCreatedBy()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 73,
      "startColumnNumber" : 35,
      "endLineNumber" : 73,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 66
      },
      "nodeContext" : "Assert.assertEquals(\"created\",item0.getDataChangeCreatedBy())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Assert.assertEquals(\"created\",item0.getDataChangeCreatedBy());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2010,
        "startLineNumber" : 31,
        "startColumnNumber" : 35,
        "endLineNumber" : 75,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String appId=\"someAppId\";\n  AppDTO app=restTemplate.getForObject(\"http://localhost:\" + port + \"/apps/\"+ appId,AppDTO.class);\n  ClusterDTO cluster=restTemplate.getForObject(\"http://localhost:\" + port + \"/apps/\"+ app.getAppId()+ \"/clusters/default\",ClusterDTO.class);\n  NamespaceDTO namespace=restTemplate.getForObject(\"http://localhost:\" + port + \"/apps/\"+ app.getAppId()+ \"/clusters/\"+ cluster.getName()+ \"/namespaces/application\",NamespaceDTO.class);\n  Assert.assertEquals(\"someAppId\",app.getAppId());\n  Assert.assertEquals(\"default\",cluster.getName());\n  Assert.assertEquals(\"application\",namespace.getNamespaceName());\n  ItemChangeSets itemSet=new ItemChangeSets();\n  itemSet.setDataChangeLastModifiedBy(\"created\");\n  RestTemplate createdTemplate=new TestRestTemplate(\"created\",\"\");\n  createdTemplate.setMessageConverters(restTemplate.getMessageConverters());\n  int createdSize=3;\n  for (int i=0; i < createdSize; i++) {\n    ItemDTO item=new ItemDTO();\n    item.setNamespaceId(namespace.getId());\n    item.setKey(\"key_\" + i);\n    item.setValue(\"created_value_\" + i);\n    itemSet.addCreateItem(item);\n  }\n  ResponseEntity<Void> response=createdTemplate.postForEntity(\"http://localhost:\" + port + \"/apps/\"+ app.getAppId()+ \"/clusters/\"+ cluster.getName()+ \"/namespaces/\"+ namespace.getNamespaceName()+ \"/itemset\",itemSet,Void.class);\n  Assert.assertEquals(HttpStatus.OK,response.getStatusCode());\n  List<Item> items=itemRepository.findByNamespaceIdOrderByLineNumAsc(namespace.getId());\n  Assert.assertEquals(createdSize,items.size());\n  Item item0=items.get(0);\n  Assert.assertEquals(\"key_0\",item0.getKey());\n  Assert.assertEquals(\"created_value_0\",item0.getValue());\n  Assert.assertEquals(\"created\",item0.getDataChangeCreatedBy());\n  Assert.assertNotNull(item0.getDataChangeCreatedTime());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 273,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2247,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 75,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test @Sql(scripts=\"/controller/test-itemset.sql\",executionPhase=ExecutionPhase.BEFORE_TEST_METHOD) @Sql(scripts=\"/controller/cleanup.sql\",executionPhase=ExecutionPhase.AFTER_TEST_METHOD) public void testItemSetCreated(){\n  String appId=\"someAppId\";\n  AppDTO app=restTemplate.getForObject(\"http://localhost:\" + port + \"/apps/\"+ appId,AppDTO.class);\n  ClusterDTO cluster=restTemplate.getForObject(\"http://localhost:\" + port + \"/apps/\"+ app.getAppId()+ \"/clusters/default\",ClusterDTO.class);\n  NamespaceDTO namespace=restTemplate.getForObject(\"http://localhost:\" + port + \"/apps/\"+ app.getAppId()+ \"/clusters/\"+ cluster.getName()+ \"/namespaces/application\",NamespaceDTO.class);\n  Assert.assertEquals(\"someAppId\",app.getAppId());\n  Assert.assertEquals(\"default\",cluster.getName());\n  Assert.assertEquals(\"application\",namespace.getNamespaceName());\n  ItemChangeSets itemSet=new ItemChangeSets();\n  itemSet.setDataChangeLastModifiedBy(\"created\");\n  RestTemplate createdTemplate=new TestRestTemplate(\"created\",\"\");\n  createdTemplate.setMessageConverters(restTemplate.getMessageConverters());\n  int createdSize=3;\n  for (int i=0; i < createdSize; i++) {\n    ItemDTO item=new ItemDTO();\n    item.setNamespaceId(namespace.getId());\n    item.setKey(\"key_\" + i);\n    item.setValue(\"created_value_\" + i);\n    itemSet.addCreateItem(item);\n  }\n  ResponseEntity<Void> response=createdTemplate.postForEntity(\"http://localhost:\" + port + \"/apps/\"+ app.getAppId()+ \"/clusters/\"+ cluster.getName()+ \"/namespaces/\"+ namespace.getNamespaceName()+ \"/itemset\",itemSet,Void.class);\n  Assert.assertEquals(HttpStatus.OK,response.getStatusCode());\n  List<Item> items=itemRepository.findByNamespaceIdOrderByLineNumAsc(namespace.getId());\n  Assert.assertEquals(createdSize,items.size());\n  Item item0=items.get(0);\n  Assert.assertEquals(\"key_0\",item0.getKey());\n  Assert.assertEquals(\"created_value_0\",item0.getValue());\n  Assert.assertEquals(\"created\",item0.getDataChangeCreatedBy());\n  Assert.assertNotNull(item0.getDataChangeCreatedTime());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 299,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Assert.assertEquals(\"created\",item0.getDataChangeCreatedBy());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 73,
    "startColumnNumber" : 35,
    "endLineNumber" : 73,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}