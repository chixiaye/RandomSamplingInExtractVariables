{
  "id" : 115,
  "expression" : "200",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/observable/ObservableMergeMaxConcurrentTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "200",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 196,
      "startColumnNumber" : 28,
      "endLineNumber" : 196,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 196,
        "startColumnNumber" : 24,
        "endLineNumber" : 196,
        "endColumnNumber" : 31
      },
      "nodeContext" : "i < 200",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 232,
        "startLineNumber" : 196,
        "startColumnNumber" : 8,
        "endLineNumber" : 202,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 200; i++) {\n  testSimpleAsync();\n  int c1=ios.size();\n  if (c + 60 < c1) {\n    throw new AssertionError(\"Worker leak: \" + c + \" - \"+ c1);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 336,
        "startLineNumber" : 193,
        "startColumnNumber" : 38,
        "endLineNumber" : 203,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  IoScheduler ios=(IoScheduler)Schedulers.io();\n  int c=ios.size();\n  for (int i=0; i < 200; i++) {\n    testSimpleAsync();\n    int c1=ios.size();\n    if (c + 60 < c1) {\n      throw new AssertionError(\"Worker leak: \" + c + \" - \"+ c1);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 400,
        "startLineNumber" : 192,
        "startColumnNumber" : 4,
        "endLineNumber" : 203,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSimpleAsyncLoop(){\n  IoScheduler ios=(IoScheduler)Schedulers.io();\n  int c=ios.size();\n  for (int i=0; i < 200; i++) {\n    testSimpleAsync();\n    int c1=ios.size();\n    if (c + 60 < c1) {\n      throw new AssertionError(\"Worker leak: \" + c + \" - \"+ c1);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 63,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 196,
        "startColumnNumber" : 24,
        "endLineNumber" : 196,
        "endColumnNumber" : 31
      },
      "nodeContext" : "i < 200",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 196,
    "startColumnNumber" : 28,
    "endLineNumber" : 196,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}