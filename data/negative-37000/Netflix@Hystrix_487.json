{
  "id" : 487,
  "expression" : "\"Percentile (\" + percentile + \") is not currently cached\"",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-core/src/main/java/com/netflix/hystrix/metric/CachedValuesHistogram.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Percentile (\" + percentile + \") is not currently cached\"",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 57,
      "startLineNumber" : 139,
      "startColumnNumber" : 56,
      "endLineNumber" : 139,
      "endColumnNumber" : 113
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 139,
        "startColumnNumber" : 27,
        "endLineNumber" : 139,
        "endColumnNumber" : 114
      },
      "nodeContext" : "new IllegalArgumentException(\"Percentile (\" + percentile + \") is not currently cached\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 139,
        "startColumnNumber" : 21,
        "endLineNumber" : 139,
        "endColumnNumber" : 115
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Percentile (\" + percentile + \") is not currently cached\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1062,
        "startLineNumber" : 112,
        "startColumnNumber" : 8,
        "endLineNumber" : 140,
        "endColumnNumber" : 9
      },
      "nodeContext" : "switch (permyriad) {\ncase 0:  return p0;\ncase 500:return p5;\ncase 1000:return p10;\ncase 1500:return p15;\ncase 2000:return p20;\ncase 2500:return p25;\ncase 3000:return p30;\ncase 3500:return p35;\ncase 4000:return p40;\ncase 4500:return p45;\ncase 5000:return p50;\ncase 5500:return p55;\ncase 6000:return p60;\ncase 6500:return p65;\ncase 7000:return p70;\ncase 7500:return p75;\ncase 8000:return p80;\ncase 8500:return p85;\ncase 9000:return p90;\ncase 9500:return p95;\ncase 9900:return p99;\ncase 9950:return p99_5;\ncase 9990:return p99_9;\ncase 9995:return p99_95;\ncase 9999:return p99_99;\ncase 10000:return p100;\ndefault:throw new IllegalArgumentException(\"Percentile (\" + percentile + \") is not currently cached\");\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 115,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1128,
        "startLineNumber" : 110,
        "startColumnNumber" : 55,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int permyriad=(int)(percentile * 100);\nswitch (permyriad) {\ncase 0:    return p0;\ncase 500:  return p5;\ncase 1000:return p10;\ncase 1500:return p15;\ncase 2000:return p20;\ncase 2500:return p25;\ncase 3000:return p30;\ncase 3500:return p35;\ncase 4000:return p40;\ncase 4500:return p45;\ncase 5000:return p50;\ncase 5500:return p55;\ncase 6000:return p60;\ncase 6500:return p65;\ncase 7000:return p70;\ncase 7500:return p75;\ncase 8000:return p80;\ncase 8500:return p85;\ncase 9000:return p90;\ncase 9500:return p95;\ncase 9900:return p99;\ncase 9950:return p99_5;\ncase 9990:return p99_9;\ncase 9995:return p99_95;\ncase 9999:return p99_99;\ncase 10000:return p100;\ndefault:throw new IllegalArgumentException(\"Percentile (\" + percentile + \") is not currently cached\");\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1436,
        "startLineNumber" : 104,
        "startColumnNumber" : 4,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Return the cached value if available. Otherwise, we need to synchronize access to the underlying  {@link Histogram}\n * @param percentile percentile of distribution\n * @return value at percentile (from cache if possible)\n */\npublic int getValueAtPercentile(double percentile){\n  int permyriad=(int)(percentile * 100);\nswitch (permyriad) {\ncase 0:    return p0;\ncase 500:  return p5;\ncase 1000:return p10;\ncase 1500:return p15;\ncase 2000:return p20;\ncase 2500:return p25;\ncase 3000:return p30;\ncase 3500:return p35;\ncase 4000:return p40;\ncase 4500:return p45;\ncase 5000:return p50;\ncase 5500:return p55;\ncase 6000:return p60;\ncase 6500:return p65;\ncase 7000:return p70;\ncase 7500:return p75;\ncase 8000:return p80;\ncase 8500:return p85;\ncase 9000:return p90;\ncase 9500:return p95;\ncase 9900:return p99;\ncase 9950:return p99_5;\ncase 9990:return p99_9;\ncase 9995:return p99_95;\ncase 9999:return p99_99;\ncase 10000:return p100;\ndefault:throw new IllegalArgumentException(\"Percentile (\" + percentile + \") is not currently cached\");\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 139,
        "startColumnNumber" : 21,
        "endLineNumber" : 139,
        "endColumnNumber" : 115
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Percentile (\" + percentile + \") is not currently cached\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 8,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 57,
    "startLineNumber" : 139,
    "startColumnNumber" : 56,
    "endLineNumber" : 139,
    "endColumnNumber" : 113
  } ],
  "layoutRelationDataList" : [ ]
}