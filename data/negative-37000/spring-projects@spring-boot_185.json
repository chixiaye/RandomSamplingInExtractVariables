{
  "id" : 185,
  "expression" : "error instanceof ServletException && error.getCause() != null",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/web/servlet/error/DefaultErrorAttributes.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "error instanceof ServletException && error.getCause() != null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 61,
      "startLineNumber" : 137,
      "startColumnNumber" : 10,
      "endLineNumber" : 137,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 10,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 137,
        "startColumnNumber" : 3,
        "endLineNumber" : 139,
        "endColumnNumber" : 4
      },
      "nodeContext" : "while (error instanceof ServletException && error.getCause() != null) {\n  error=((ServletException)error).getCause();\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 22,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 359,
        "startLineNumber" : 136,
        "startColumnNumber" : 21,
        "endLineNumber" : 147,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  while (error instanceof ServletException && error.getCause() != null) {\n    error=((ServletException)error).getCause();\n  }\n  if (this.includeException) {\n    errorAttributes.put(\"exception\",error.getClass().getName());\n  }\n  addErrorMessage(errorAttributes,error);\n  if (includeStackTrace) {\n    addStackTrace(errorAttributes,error);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 378,
        "startLineNumber" : 136,
        "startColumnNumber" : 2,
        "endLineNumber" : 147,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (error != null) {\n  while (error instanceof ServletException && error.getCause() != null) {\n    error=((ServletException)error).getCause();\n  }\n  if (this.includeException) {\n    errorAttributes.put(\"exception\",error.getClass().getName());\n  }\n  addErrorMessage(errorAttributes,error);\n  if (includeStackTrace) {\n    addStackTrace(errorAttributes,error);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 736,
        "startLineNumber" : 134,
        "startColumnNumber" : 53,
        "endLineNumber" : 154,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Throwable error=getError(webRequest);\n  if (error != null) {\n    while (error instanceof ServletException && error.getCause() != null) {\n      error=((ServletException)error).getCause();\n    }\n    if (this.includeException) {\n      errorAttributes.put(\"exception\",error.getClass().getName());\n    }\n    addErrorMessage(errorAttributes,error);\n    if (includeStackTrace) {\n      addStackTrace(errorAttributes,error);\n    }\n  }\n  Object message=getAttribute(webRequest,\"javax.servlet.error.message\");\n  if ((!StringUtils.isEmpty(message) || errorAttributes.get(\"message\") == null) && !(error instanceof BindingResult)) {\n    errorAttributes.put(\"message\",StringUtils.isEmpty(message) ? \"No message available\" : message);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 855,
        "startLineNumber" : 133,
        "startColumnNumber" : 1,
        "endLineNumber" : 154,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private void addErrorDetails(Map<String,Object> errorAttributes,WebRequest webRequest,boolean includeStackTrace){\n  Throwable error=getError(webRequest);\n  if (error != null) {\n    while (error instanceof ServletException && error.getCause() != null) {\n      error=((ServletException)error).getCause();\n    }\n    if (this.includeException) {\n      errorAttributes.put(\"exception\",error.getClass().getName());\n    }\n    addErrorMessage(errorAttributes,error);\n    if (includeStackTrace) {\n      addStackTrace(errorAttributes,error);\n    }\n  }\n  Object message=getAttribute(webRequest,\"javax.servlet.error.message\");\n  if ((!StringUtils.isEmpty(message) || errorAttributes.get(\"message\") == null) && !(error instanceof BindingResult)) {\n    errorAttributes.put(\"message\",StringUtils.isEmpty(message) ? \"No message available\" : message);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 137,
        "startColumnNumber" : 3,
        "endLineNumber" : 139,
        "endColumnNumber" : 4
      },
      "nodeContext" : "while (error instanceof ServletException && error.getCause() != null) {\n  error=((ServletException)error).getCause();\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 22,
      "astHeight" : 9
    },
    "tokenLength" : 7,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 61,
    "startLineNumber" : 137,
    "startColumnNumber" : 10,
    "endLineNumber" : 137,
    "endColumnNumber" : 71
  } ],
  "layoutRelationDataList" : [ ]
}