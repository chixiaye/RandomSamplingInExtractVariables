{
  "id" : 265,
  "expression" : "TimeUnit.MILLISECONDS",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-core/src/test/java/com/netflix/eureka2/channel/RetryableServiceChannelTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TimeUnit.MILLISECONDS",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 138,
      "startColumnNumber" : 47,
      "endLineNumber" : 138,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 138,
        "startColumnNumber" : 8,
        "endLineNumber" : 138,
        "endColumnNumber" : 69
      },
      "nodeContext" : "scheduler.advanceTimeBy(INITIAL_DELAY,TimeUnit.MILLISECONDS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 138,
        "startColumnNumber" : 8,
        "endLineNumber" : 138,
        "endColumnNumber" : 70
      },
      "nodeContext" : "scheduler.advanceTimeBy(INITIAL_DELAY,TimeUnit.MILLISECONDS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1459,
        "startLineNumber" : 129,
        "startColumnNumber" : 69,
        "endLineNumber" : 155,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  initialDelegate.lifecycle.onCompleted();\n  doThrow(new RuntimeException(\"reestablish failed\")).doCallRealMethod().when(channelFactory).call();\n  scheduler.advanceTimeBy(INITIAL_DELAY,TimeUnit.MILLISECONDS);\n  verify(initialDelegate,times(0))._close();\n  assertThat(retryableChannel.retryCount.get(),equalTo(1));\n  assertThat(retryableChannel.reestablishAttemptCount.get(),equalTo(1));\n  assertThat(retryableChannel.reestablishSuccessCount.get(),equalTo(0));\n  assertThat(retryableChannel.currentDelegateChannel().myId,equalTo(0));\n  scheduler.advanceTimeBy(2 * INITIAL_DELAY,TimeUnit.MILLISECONDS);\n  verify(initialDelegate,times(1))._close();\n  assertThat(retryableChannel.retryCount.get(),equalTo(2));\n  assertThat(retryableChannel.reestablishAttemptCount.get(),equalTo(2));\n  assertThat(retryableChannel.reestablishSuccessCount.get(),equalTo(1));\n  assertThat(retryableChannel.currentDelegateChannel().myId,equalTo(1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 145,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1534,
        "startLineNumber" : 128,
        "startColumnNumber" : 4,
        "endLineNumber" : 155,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testRecoversFromReestablishErrors() throws Exception {\n  initialDelegate.lifecycle.onCompleted();\n  doThrow(new RuntimeException(\"reestablish failed\")).doCallRealMethod().when(channelFactory).call();\n  scheduler.advanceTimeBy(INITIAL_DELAY,TimeUnit.MILLISECONDS);\n  verify(initialDelegate,times(0))._close();\n  assertThat(retryableChannel.retryCount.get(),equalTo(1));\n  assertThat(retryableChannel.reestablishAttemptCount.get(),equalTo(1));\n  assertThat(retryableChannel.reestablishSuccessCount.get(),equalTo(0));\n  assertThat(retryableChannel.currentDelegateChannel().myId,equalTo(0));\n  scheduler.advanceTimeBy(2 * INITIAL_DELAY,TimeUnit.MILLISECONDS);\n  verify(initialDelegate,times(1))._close();\n  assertThat(retryableChannel.retryCount.get(),equalTo(2));\n  assertThat(retryableChannel.reestablishAttemptCount.get(),equalTo(2));\n  assertThat(retryableChannel.reestablishSuccessCount.get(),equalTo(1));\n  assertThat(retryableChannel.currentDelegateChannel().myId,equalTo(1));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 153,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 138,
        "startColumnNumber" : 8,
        "endLineNumber" : 138,
        "endColumnNumber" : 70
      },
      "nodeContext" : "scheduler.advanceTimeBy(INITIAL_DELAY,TimeUnit.MILLISECONDS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.util.concurrent.TimeUnit"
  }, {
    "nodeContext" : "TimeUnit.MILLISECONDS",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 148,
      "startColumnNumber" : 49,
      "endLineNumber" : 148,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 148,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 71
      },
      "nodeContext" : "scheduler.advanceTimeBy(2 * INITIAL_DELAY,TimeUnit.MILLISECONDS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 148,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 72
      },
      "nodeContext" : "scheduler.advanceTimeBy(2 * INITIAL_DELAY,TimeUnit.MILLISECONDS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1459,
        "startLineNumber" : 129,
        "startColumnNumber" : 69,
        "endLineNumber" : 155,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  initialDelegate.lifecycle.onCompleted();\n  doThrow(new RuntimeException(\"reestablish failed\")).doCallRealMethod().when(channelFactory).call();\n  scheduler.advanceTimeBy(INITIAL_DELAY,TimeUnit.MILLISECONDS);\n  verify(initialDelegate,times(0))._close();\n  assertThat(retryableChannel.retryCount.get(),equalTo(1));\n  assertThat(retryableChannel.reestablishAttemptCount.get(),equalTo(1));\n  assertThat(retryableChannel.reestablishSuccessCount.get(),equalTo(0));\n  assertThat(retryableChannel.currentDelegateChannel().myId,equalTo(0));\n  scheduler.advanceTimeBy(2 * INITIAL_DELAY,TimeUnit.MILLISECONDS);\n  verify(initialDelegate,times(1))._close();\n  assertThat(retryableChannel.retryCount.get(),equalTo(2));\n  assertThat(retryableChannel.reestablishAttemptCount.get(),equalTo(2));\n  assertThat(retryableChannel.reestablishSuccessCount.get(),equalTo(1));\n  assertThat(retryableChannel.currentDelegateChannel().myId,equalTo(1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 145,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1534,
        "startLineNumber" : 128,
        "startColumnNumber" : 4,
        "endLineNumber" : 155,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testRecoversFromReestablishErrors() throws Exception {\n  initialDelegate.lifecycle.onCompleted();\n  doThrow(new RuntimeException(\"reestablish failed\")).doCallRealMethod().when(channelFactory).call();\n  scheduler.advanceTimeBy(INITIAL_DELAY,TimeUnit.MILLISECONDS);\n  verify(initialDelegate,times(0))._close();\n  assertThat(retryableChannel.retryCount.get(),equalTo(1));\n  assertThat(retryableChannel.reestablishAttemptCount.get(),equalTo(1));\n  assertThat(retryableChannel.reestablishSuccessCount.get(),equalTo(0));\n  assertThat(retryableChannel.currentDelegateChannel().myId,equalTo(0));\n  scheduler.advanceTimeBy(2 * INITIAL_DELAY,TimeUnit.MILLISECONDS);\n  verify(initialDelegate,times(1))._close();\n  assertThat(retryableChannel.retryCount.get(),equalTo(2));\n  assertThat(retryableChannel.reestablishAttemptCount.get(),equalTo(2));\n  assertThat(retryableChannel.reestablishSuccessCount.get(),equalTo(1));\n  assertThat(retryableChannel.currentDelegateChannel().myId,equalTo(1));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 153,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 148,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 72
      },
      "nodeContext" : "scheduler.advanceTimeBy(2 * INITIAL_DELAY,TimeUnit.MILLISECONDS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.util.concurrent.TimeUnit"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 138,
    "startColumnNumber" : 47,
    "endLineNumber" : 138,
    "endColumnNumber" : 68
  }, {
    "charLength" : 21,
    "startLineNumber" : 148,
    "startColumnNumber" : 49,
    "endLineNumber" : 148,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}