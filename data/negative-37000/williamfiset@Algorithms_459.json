{
  "id" : 459,
  "expression" : "edges != null",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/graphtheory/ConnectedComponentsAdjacencyList.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "edges != null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 35,
      "startColumnNumber" : 10,
      "endLineNumber" : 35,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 35,
        "startColumnNumber" : 6,
        "endLineNumber" : 39,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (edges != null) {\n  for (  Edge edge : edges) {\n    uf.unify(edge.from,edge.to);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 33,
        "startColumnNumber" : 32,
        "endLineNumber" : 40,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<Edge> edges=graph.get(i);\n  if (edges != null) {\n    for (    Edge edge : edges) {\n      uf.unify(edge.from,edge.to);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 193,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < n; i++) {\n  List<Edge> edges=graph.get(i);\n  if (edges != null) {\n    for (    Edge edge : edges) {\n      uf.unify(edge.from,edge.to);\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 46,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 271,
        "startLineNumber" : 29,
        "startColumnNumber" : 77,
        "endLineNumber" : 43,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  UnionFind uf=new UnionFind(n);\n  for (int i=0; i < n; i++) {\n    List<Edge> edges=graph.get(i);\n    if (edges != null) {\n      for (      Edge edge : edges) {\n        uf.unify(edge.from,edge.to);\n      }\n    }\n  }\n  return uf.components();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 346,
        "startLineNumber" : 29,
        "startColumnNumber" : 2,
        "endLineNumber" : 43,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static int countConnectedComponents(Map<Integer,List<Edge>> graph,int n){\n  UnionFind uf=new UnionFind(n);\n  for (int i=0; i < n; i++) {\n    List<Edge> edges=graph.get(i);\n    if (edges != null) {\n      for (      Edge edge : edges) {\n        uf.unify(edge.from,edge.to);\n      }\n    }\n  }\n  return uf.components();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 35,
        "startColumnNumber" : 6,
        "endLineNumber" : 39,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (edges != null) {\n  for (  Edge edge : edges) {\n    uf.unify(edge.from,edge.to);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 8
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 35,
    "startColumnNumber" : 10,
    "endLineNumber" : 35,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ ]
}