{
  "id" : 110,
  "expression" : "!RootContext.requireGlobalLock()",
  "projectName" : "seata@seata",
  "commitID" : "42d41623178ab076b11b27a0f049ac3ed7f1a9dc",
  "filePath" : "/rm-datasource/src/main/java/io/seata/rm/datasource/exec/ExecuteTemplate.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!RootContext.requireGlobalLock()",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 67,
      "startColumnNumber" : 50,
      "endLineNumber" : 67,
      "endColumnNumber" : 82
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 67,
        "startColumnNumber" : 12,
        "endLineNumber" : 67,
        "endColumnNumber" : 82
      },
      "nodeContext" : "!RootContext.inGlobalTransaction() && !RootContext.requireGlobalLock()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 223,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!RootContext.inGlobalTransaction() && !RootContext.requireGlobalLock()) {\n  return statementCallback.execute(statementProxy.getTargetStatement(),args);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1861,
        "startLineNumber" : 65,
        "startColumnNumber" : 89,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!RootContext.inGlobalTransaction() && !RootContext.requireGlobalLock()) {\n    return statementCallback.execute(statementProxy.getTargetStatement(),args);\n  }\n  if (sqlRecognizer == null) {\n    sqlRecognizer=SQLVisitorFactory.get(statementProxy.getTargetSQL(),statementProxy.getConnectionProxy().getDbType());\n  }\n  Executor<T> executor=null;\n  if (sqlRecognizer == null) {\n    executor=new PlainExecutor<T,S>(statementProxy,statementCallback);\n  }\n else {\nswitch (sqlRecognizer.getSQLType()) {\ncase INSERT:      executor=new InsertExecutor<T,S>(statementProxy,statementCallback,sqlRecognizer);\n    break;\ncase UPDATE:  executor=new UpdateExecutor<T,S>(statementProxy,statementCallback,sqlRecognizer);\nbreak;\ncase DELETE:executor=new DeleteExecutor<T,S>(statementProxy,statementCallback,sqlRecognizer);\nbreak;\ncase SELECT_FOR_UPDATE:executor=new SelectForUpdateExecutor<T,S>(statementProxy,statementCallback,sqlRecognizer);\nbreak;\ndefault:executor=new PlainExecutor<T,S>(statementProxy,statementCallback);\nbreak;\n}\n}\nT rs=null;\ntry {\nrs=executor.execute(args);\n}\n catch (Throwable ex) {\nif (!(ex instanceof SQLException)) {\nex=new SQLException(ex);\n}\nthrow (SQLException)ex;\n}\nreturn rs;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 197,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2620,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Execute t.\n * @param < T >               the type parameter\n * @param < S >               the type parameter\n * @param sqlRecognizer     the sql recognizer\n * @param statementProxy    the statement proxy\n * @param statementCallback the statement callback\n * @param args              the args\n * @return the t\n * @throws SQLException the sql exception\n */\npublic static <T,S extends Statement>T execute(SQLRecognizer sqlRecognizer,StatementProxy<S> statementProxy,StatementCallback<T,S> statementCallback,Object... args) throws SQLException {\n  if (!RootContext.inGlobalTransaction() && !RootContext.requireGlobalLock()) {\n    return statementCallback.execute(statementProxy.getTargetStatement(),args);\n  }\n  if (sqlRecognizer == null) {\n    sqlRecognizer=SQLVisitorFactory.get(statementProxy.getTargetSQL(),statementProxy.getConnectionProxy().getDbType());\n  }\n  Executor<T> executor=null;\n  if (sqlRecognizer == null) {\n    executor=new PlainExecutor<T,S>(statementProxy,statementCallback);\n  }\n else {\nswitch (sqlRecognizer.getSQLType()) {\ncase INSERT:      executor=new InsertExecutor<T,S>(statementProxy,statementCallback,sqlRecognizer);\n    break;\ncase UPDATE:  executor=new UpdateExecutor<T,S>(statementProxy,statementCallback,sqlRecognizer);\nbreak;\ncase DELETE:executor=new DeleteExecutor<T,S>(statementProxy,statementCallback,sqlRecognizer);\nbreak;\ncase SELECT_FOR_UPDATE:executor=new SelectForUpdateExecutor<T,S>(statementProxy,statementCallback,sqlRecognizer);\nbreak;\ndefault:executor=new PlainExecutor<T,S>(statementProxy,statementCallback);\nbreak;\n}\n}\nT rs=null;\ntry {\nrs=executor.execute(args);\n}\n catch (Throwable ex) {\nif (!(ex instanceof SQLException)) {\nex=new SQLException(ex);\n}\nthrow (SQLException)ex;\n}\nreturn rs;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 236,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 67,
        "startColumnNumber" : 12,
        "endLineNumber" : 67,
        "endColumnNumber" : 82
      },
      "nodeContext" : "!RootContext.inGlobalTransaction() && !RootContext.requireGlobalLock()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 67,
    "startColumnNumber" : 50,
    "endLineNumber" : 67,
    "endColumnNumber" : 82
  } ],
  "layoutRelationDataList" : [ ]
}