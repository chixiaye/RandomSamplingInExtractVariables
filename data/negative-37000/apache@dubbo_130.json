{
  "id" : 130,
  "expression" : "result",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/router/mesh/rule/virtualservice/match/DoubleMatch.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "result",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 58,
      "startColumnNumber" : 19,
      "endLineNumber" : 58,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 58,
        "startColumnNumber" : 19,
        "endLineNumber" : 58,
        "endColumnNumber" : 56
      },
      "nodeContext" : "result.equals(doubleMatch.getExact())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 57
      },
      "nodeContext" : "return result.equals(doubleMatch.getExact());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 56,
        "startColumnNumber" : 83,
        "endLineNumber" : 59,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Double result=input % doubleMatch.getMod();\n  return result.equals(doubleMatch.getExact());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 195,
        "startLineNumber" : 56,
        "startColumnNumber" : 15,
        "endLineNumber" : 59,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (doubleMatch.getExact() != null && doubleMatch.getMod() != null) {\n  Double result=input % doubleMatch.getMod();\n  return result.equals(doubleMatch.getExact());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 324,
        "startLineNumber" : 54,
        "startColumnNumber" : 15,
        "endLineNumber" : 59,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (doubleMatch.getRange() != null) {\n  return DoubleRangeMatch.isMatch(doubleMatch.getRange(),input);\n}\n else if (doubleMatch.getExact() != null && doubleMatch.getMod() != null) {\n  Double result=input % doubleMatch.getMod();\n  return result.equals(doubleMatch.getExact());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 466,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (doubleMatch.getExact() != null && doubleMatch.getMod() == null) {\n  return input.equals(doubleMatch.getExact());\n}\n else if (doubleMatch.getRange() != null) {\n  return DoubleRangeMatch.isMatch(doubleMatch.getRange(),input);\n}\n else if (doubleMatch.getExact() != null && doubleMatch.getMod() != null) {\n  Double result=input % doubleMatch.getMod();\n  return result.equals(doubleMatch.getExact());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 65,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 505,
        "startLineNumber" : 51,
        "startColumnNumber" : 73,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (doubleMatch.getExact() != null && doubleMatch.getMod() == null) {\n    return input.equals(doubleMatch.getExact());\n  }\n else   if (doubleMatch.getRange() != null) {\n    return DoubleRangeMatch.isMatch(doubleMatch.getRange(),input);\n  }\n else   if (doubleMatch.getExact() != null && doubleMatch.getMod() != null) {\n    Double result=input % doubleMatch.getMod();\n    return result.equals(doubleMatch.getExact());\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 574,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static boolean isMatch(DoubleMatch doubleMatch,Double input){\n  if (doubleMatch.getExact() != null && doubleMatch.getMod() == null) {\n    return input.equals(doubleMatch.getExact());\n  }\n else   if (doubleMatch.getRange() != null) {\n    return DoubleRangeMatch.isMatch(doubleMatch.getRange(),input);\n  }\n else   if (doubleMatch.getExact() != null && doubleMatch.getMod() != null) {\n    Double result=input % doubleMatch.getMod();\n    return result.equals(doubleMatch.getExact());\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 81,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 57
      },
      "nodeContext" : "return result.equals(doubleMatch.getExact());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Double"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 58,
    "startColumnNumber" : 19,
    "endLineNumber" : 58,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ ]
}