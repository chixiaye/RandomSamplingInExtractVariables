{
  "id" : 290,
  "expression" : "gson",
  "projectName" : "google@gson",
  "commitID" : "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
  "filePath" : "/gson/src/test/java/com/google/gson/functional/StreamingTypeAdaptersTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "gson",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 172,
      "startColumnNumber" : 6,
      "endLineNumber" : 172,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 172,
        "startColumnNumber" : 6,
        "endLineNumber" : 172,
        "endColumnNumber" : 37
      },
      "nodeContext" : "gson.toJson(truck,Truck.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 172,
        "startColumnNumber" : 6,
        "endLineNumber" : 172,
        "endColumnNumber" : 38
      },
      "nodeContext" : "gson.toJson(truck,Truck.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 171,
        "startColumnNumber" : 8,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  gson.toJson(truck,Truck.class);\n  fail();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 171,
        "startColumnNumber" : 4,
        "endLineNumber" : 174,
        "endColumnNumber" : 46
      },
      "nodeContext" : "try {\n  gson.toJson(truck,Truck.class);\n  fail();\n}\n catch (NullPointerException expected) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1392,
        "startLineNumber" : 154,
        "startColumnNumber" : 29,
        "endLineNumber" : 187,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TypeAdapter<Person> typeAdapter=new TypeAdapter<Person>(){\n    @Override public Person read(    JsonReader in) throws IOException {\n      String[] values=in.nextString().split(\",\");\n      return new Person(values[0],Integer.parseInt(values[1]));\n    }\n    public void write(    JsonWriter out,    Person person) throws IOException {\n      out.value(person.name + \",\" + person.age);\n    }\n  }\n;\n  Gson gson=new GsonBuilder().registerTypeAdapter(Person.class,typeAdapter).create();\n  Truck truck=new Truck();\n  truck.horsePower=1.0D;\n  truck.passengers=new ArrayList<Person>();\n  truck.passengers.add(null);\n  truck.passengers.add(new Person(\"jesse\",30));\n  try {\n    gson.toJson(truck,Truck.class);\n    fail();\n  }\n catch (  NullPointerException expected) {\n  }\n  String json=\"{horsePower:1.0,passengers:[null,'jesse,30']}\";\n  try {\n    gson.fromJson(json,Truck.class);\n    fail();\n  }\n catch (  JsonSyntaxException expected) {\n  }\n  gson=new GsonBuilder().registerTypeAdapter(Person.class,typeAdapter.nullSafe()).create();\n  assertEquals(\"{\\\"horsePower\\\":1.0,\\\"passengers\\\":[null,\\\"jesse,30\\\"]}\",gson.toJson(truck,Truck.class));\n  truck=gson.fromJson(json,Truck.class);\n  assertEquals(1.0D,truck.horsePower);\n  assertNull(truck.passengers.get(0));\n  assertEquals(\"jesse\",truck.passengers.get(1).name);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 251,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1419,
        "startLineNumber" : 154,
        "startColumnNumber" : 2,
        "endLineNumber" : 187,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testNullSafe(){\n  TypeAdapter<Person> typeAdapter=new TypeAdapter<Person>(){\n    @Override public Person read(    JsonReader in) throws IOException {\n      String[] values=in.nextString().split(\",\");\n      return new Person(values[0],Integer.parseInt(values[1]));\n    }\n    public void write(    JsonWriter out,    Person person) throws IOException {\n      out.value(person.name + \",\" + person.age);\n    }\n  }\n;\n  Gson gson=new GsonBuilder().registerTypeAdapter(Person.class,typeAdapter).create();\n  Truck truck=new Truck();\n  truck.horsePower=1.0D;\n  truck.passengers=new ArrayList<Person>();\n  truck.passengers.add(null);\n  truck.passengers.add(new Person(\"jesse\",30));\n  try {\n    gson.toJson(truck,Truck.class);\n    fail();\n  }\n catch (  NullPointerException expected) {\n  }\n  String json=\"{horsePower:1.0,passengers:[null,'jesse,30']}\";\n  try {\n    gson.fromJson(json,Truck.class);\n    fail();\n  }\n catch (  JsonSyntaxException expected) {\n  }\n  gson=new GsonBuilder().registerTypeAdapter(Person.class,typeAdapter.nullSafe()).create();\n  assertEquals(\"{\\\"horsePower\\\":1.0,\\\"passengers\\\":[null,\\\"jesse,30\\\"]}\",gson.toJson(truck,Truck.class));\n  truck=gson.fromJson(json,Truck.class);\n  assertEquals(1.0D,truck.horsePower);\n  assertNull(truck.passengers.get(0));\n  assertEquals(\"jesse\",truck.passengers.get(1).name);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 255,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 172,
        "startColumnNumber" : 6,
        "endLineNumber" : 172,
        "endColumnNumber" : 38
      },
      "nodeContext" : "gson.toJson(truck,Truck.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.google.gson.Gson"
  }, {
    "nodeContext" : "gson",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 177,
      "startColumnNumber" : 6,
      "endLineNumber" : 177,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 177,
        "startColumnNumber" : 6,
        "endLineNumber" : 177,
        "endColumnNumber" : 38
      },
      "nodeContext" : "gson.fromJson(json,Truck.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 177,
        "startColumnNumber" : 6,
        "endLineNumber" : 177,
        "endColumnNumber" : 39
      },
      "nodeContext" : "gson.fromJson(json,Truck.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 176,
        "startColumnNumber" : 8,
        "endLineNumber" : 179,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  gson.fromJson(json,Truck.class);\n  fail();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 176,
        "startColumnNumber" : 4,
        "endLineNumber" : 179,
        "endColumnNumber" : 45
      },
      "nodeContext" : "try {\n  gson.fromJson(json,Truck.class);\n  fail();\n}\n catch (JsonSyntaxException expected) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1392,
        "startLineNumber" : 154,
        "startColumnNumber" : 29,
        "endLineNumber" : 187,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TypeAdapter<Person> typeAdapter=new TypeAdapter<Person>(){\n    @Override public Person read(    JsonReader in) throws IOException {\n      String[] values=in.nextString().split(\",\");\n      return new Person(values[0],Integer.parseInt(values[1]));\n    }\n    public void write(    JsonWriter out,    Person person) throws IOException {\n      out.value(person.name + \",\" + person.age);\n    }\n  }\n;\n  Gson gson=new GsonBuilder().registerTypeAdapter(Person.class,typeAdapter).create();\n  Truck truck=new Truck();\n  truck.horsePower=1.0D;\n  truck.passengers=new ArrayList<Person>();\n  truck.passengers.add(null);\n  truck.passengers.add(new Person(\"jesse\",30));\n  try {\n    gson.toJson(truck,Truck.class);\n    fail();\n  }\n catch (  NullPointerException expected) {\n  }\n  String json=\"{horsePower:1.0,passengers:[null,'jesse,30']}\";\n  try {\n    gson.fromJson(json,Truck.class);\n    fail();\n  }\n catch (  JsonSyntaxException expected) {\n  }\n  gson=new GsonBuilder().registerTypeAdapter(Person.class,typeAdapter.nullSafe()).create();\n  assertEquals(\"{\\\"horsePower\\\":1.0,\\\"passengers\\\":[null,\\\"jesse,30\\\"]}\",gson.toJson(truck,Truck.class));\n  truck=gson.fromJson(json,Truck.class);\n  assertEquals(1.0D,truck.horsePower);\n  assertNull(truck.passengers.get(0));\n  assertEquals(\"jesse\",truck.passengers.get(1).name);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 251,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1419,
        "startLineNumber" : 154,
        "startColumnNumber" : 2,
        "endLineNumber" : 187,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testNullSafe(){\n  TypeAdapter<Person> typeAdapter=new TypeAdapter<Person>(){\n    @Override public Person read(    JsonReader in) throws IOException {\n      String[] values=in.nextString().split(\",\");\n      return new Person(values[0],Integer.parseInt(values[1]));\n    }\n    public void write(    JsonWriter out,    Person person) throws IOException {\n      out.value(person.name + \",\" + person.age);\n    }\n  }\n;\n  Gson gson=new GsonBuilder().registerTypeAdapter(Person.class,typeAdapter).create();\n  Truck truck=new Truck();\n  truck.horsePower=1.0D;\n  truck.passengers=new ArrayList<Person>();\n  truck.passengers.add(null);\n  truck.passengers.add(new Person(\"jesse\",30));\n  try {\n    gson.toJson(truck,Truck.class);\n    fail();\n  }\n catch (  NullPointerException expected) {\n  }\n  String json=\"{horsePower:1.0,passengers:[null,'jesse,30']}\";\n  try {\n    gson.fromJson(json,Truck.class);\n    fail();\n  }\n catch (  JsonSyntaxException expected) {\n  }\n  gson=new GsonBuilder().registerTypeAdapter(Person.class,typeAdapter.nullSafe()).create();\n  assertEquals(\"{\\\"horsePower\\\":1.0,\\\"passengers\\\":[null,\\\"jesse,30\\\"]}\",gson.toJson(truck,Truck.class));\n  truck=gson.fromJson(json,Truck.class);\n  assertEquals(1.0D,truck.horsePower);\n  assertNull(truck.passengers.get(0));\n  assertEquals(\"jesse\",truck.passengers.get(1).name);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 255,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 177,
        "startColumnNumber" : 6,
        "endLineNumber" : 177,
        "endColumnNumber" : 39
      },
      "nodeContext" : "gson.fromJson(json,Truck.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.google.gson.Gson"
  }, {
    "nodeContext" : "gson",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 182,
      "startColumnNumber" : 8,
      "endLineNumber" : 182,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 182,
        "startColumnNumber" : 8,
        "endLineNumber" : 182,
        "endColumnNumber" : 39
      },
      "nodeContext" : "gson.toJson(truck,Truck.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 181,
        "startColumnNumber" : 4,
        "endLineNumber" : 182,
        "endColumnNumber" : 40
      },
      "nodeContext" : "assertEquals(\"{\\\"horsePower\\\":1.0,\\\"passengers\\\":[null,\\\"jesse,30\\\"]}\",gson.toJson(truck,Truck.class))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 181,
        "startColumnNumber" : 4,
        "endLineNumber" : 182,
        "endColumnNumber" : 41
      },
      "nodeContext" : "assertEquals(\"{\\\"horsePower\\\":1.0,\\\"passengers\\\":[null,\\\"jesse,30\\\"]}\",gson.toJson(truck,Truck.class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1392,
        "startLineNumber" : 154,
        "startColumnNumber" : 29,
        "endLineNumber" : 187,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TypeAdapter<Person> typeAdapter=new TypeAdapter<Person>(){\n    @Override public Person read(    JsonReader in) throws IOException {\n      String[] values=in.nextString().split(\",\");\n      return new Person(values[0],Integer.parseInt(values[1]));\n    }\n    public void write(    JsonWriter out,    Person person) throws IOException {\n      out.value(person.name + \",\" + person.age);\n    }\n  }\n;\n  Gson gson=new GsonBuilder().registerTypeAdapter(Person.class,typeAdapter).create();\n  Truck truck=new Truck();\n  truck.horsePower=1.0D;\n  truck.passengers=new ArrayList<Person>();\n  truck.passengers.add(null);\n  truck.passengers.add(new Person(\"jesse\",30));\n  try {\n    gson.toJson(truck,Truck.class);\n    fail();\n  }\n catch (  NullPointerException expected) {\n  }\n  String json=\"{horsePower:1.0,passengers:[null,'jesse,30']}\";\n  try {\n    gson.fromJson(json,Truck.class);\n    fail();\n  }\n catch (  JsonSyntaxException expected) {\n  }\n  gson=new GsonBuilder().registerTypeAdapter(Person.class,typeAdapter.nullSafe()).create();\n  assertEquals(\"{\\\"horsePower\\\":1.0,\\\"passengers\\\":[null,\\\"jesse,30\\\"]}\",gson.toJson(truck,Truck.class));\n  truck=gson.fromJson(json,Truck.class);\n  assertEquals(1.0D,truck.horsePower);\n  assertNull(truck.passengers.get(0));\n  assertEquals(\"jesse\",truck.passengers.get(1).name);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 251,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1419,
        "startLineNumber" : 154,
        "startColumnNumber" : 2,
        "endLineNumber" : 187,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testNullSafe(){\n  TypeAdapter<Person> typeAdapter=new TypeAdapter<Person>(){\n    @Override public Person read(    JsonReader in) throws IOException {\n      String[] values=in.nextString().split(\",\");\n      return new Person(values[0],Integer.parseInt(values[1]));\n    }\n    public void write(    JsonWriter out,    Person person) throws IOException {\n      out.value(person.name + \",\" + person.age);\n    }\n  }\n;\n  Gson gson=new GsonBuilder().registerTypeAdapter(Person.class,typeAdapter).create();\n  Truck truck=new Truck();\n  truck.horsePower=1.0D;\n  truck.passengers=new ArrayList<Person>();\n  truck.passengers.add(null);\n  truck.passengers.add(new Person(\"jesse\",30));\n  try {\n    gson.toJson(truck,Truck.class);\n    fail();\n  }\n catch (  NullPointerException expected) {\n  }\n  String json=\"{horsePower:1.0,passengers:[null,'jesse,30']}\";\n  try {\n    gson.fromJson(json,Truck.class);\n    fail();\n  }\n catch (  JsonSyntaxException expected) {\n  }\n  gson=new GsonBuilder().registerTypeAdapter(Person.class,typeAdapter.nullSafe()).create();\n  assertEquals(\"{\\\"horsePower\\\":1.0,\\\"passengers\\\":[null,\\\"jesse,30\\\"]}\",gson.toJson(truck,Truck.class));\n  truck=gson.fromJson(json,Truck.class);\n  assertEquals(1.0D,truck.horsePower);\n  assertNull(truck.passengers.get(0));\n  assertEquals(\"jesse\",truck.passengers.get(1).name);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 255,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 182,
        "startColumnNumber" : 8,
        "endLineNumber" : 182,
        "endColumnNumber" : 39
      },
      "nodeContext" : "gson.toJson(truck,Truck.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.gson.Gson"
  }, {
    "nodeContext" : "gson",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 183,
      "startColumnNumber" : 12,
      "endLineNumber" : 183,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 183,
        "startColumnNumber" : 12,
        "endLineNumber" : 183,
        "endColumnNumber" : 44
      },
      "nodeContext" : "gson.fromJson(json,Truck.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 183,
        "endColumnNumber" : 44
      },
      "nodeContext" : "truck=gson.fromJson(json,Truck.class)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 183,
        "endColumnNumber" : 45
      },
      "nodeContext" : "truck=gson.fromJson(json,Truck.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1392,
        "startLineNumber" : 154,
        "startColumnNumber" : 29,
        "endLineNumber" : 187,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TypeAdapter<Person> typeAdapter=new TypeAdapter<Person>(){\n    @Override public Person read(    JsonReader in) throws IOException {\n      String[] values=in.nextString().split(\",\");\n      return new Person(values[0],Integer.parseInt(values[1]));\n    }\n    public void write(    JsonWriter out,    Person person) throws IOException {\n      out.value(person.name + \",\" + person.age);\n    }\n  }\n;\n  Gson gson=new GsonBuilder().registerTypeAdapter(Person.class,typeAdapter).create();\n  Truck truck=new Truck();\n  truck.horsePower=1.0D;\n  truck.passengers=new ArrayList<Person>();\n  truck.passengers.add(null);\n  truck.passengers.add(new Person(\"jesse\",30));\n  try {\n    gson.toJson(truck,Truck.class);\n    fail();\n  }\n catch (  NullPointerException expected) {\n  }\n  String json=\"{horsePower:1.0,passengers:[null,'jesse,30']}\";\n  try {\n    gson.fromJson(json,Truck.class);\n    fail();\n  }\n catch (  JsonSyntaxException expected) {\n  }\n  gson=new GsonBuilder().registerTypeAdapter(Person.class,typeAdapter.nullSafe()).create();\n  assertEquals(\"{\\\"horsePower\\\":1.0,\\\"passengers\\\":[null,\\\"jesse,30\\\"]}\",gson.toJson(truck,Truck.class));\n  truck=gson.fromJson(json,Truck.class);\n  assertEquals(1.0D,truck.horsePower);\n  assertNull(truck.passengers.get(0));\n  assertEquals(\"jesse\",truck.passengers.get(1).name);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 251,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1419,
        "startLineNumber" : 154,
        "startColumnNumber" : 2,
        "endLineNumber" : 187,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testNullSafe(){\n  TypeAdapter<Person> typeAdapter=new TypeAdapter<Person>(){\n    @Override public Person read(    JsonReader in) throws IOException {\n      String[] values=in.nextString().split(\",\");\n      return new Person(values[0],Integer.parseInt(values[1]));\n    }\n    public void write(    JsonWriter out,    Person person) throws IOException {\n      out.value(person.name + \",\" + person.age);\n    }\n  }\n;\n  Gson gson=new GsonBuilder().registerTypeAdapter(Person.class,typeAdapter).create();\n  Truck truck=new Truck();\n  truck.horsePower=1.0D;\n  truck.passengers=new ArrayList<Person>();\n  truck.passengers.add(null);\n  truck.passengers.add(new Person(\"jesse\",30));\n  try {\n    gson.toJson(truck,Truck.class);\n    fail();\n  }\n catch (  NullPointerException expected) {\n  }\n  String json=\"{horsePower:1.0,passengers:[null,'jesse,30']}\";\n  try {\n    gson.fromJson(json,Truck.class);\n    fail();\n  }\n catch (  JsonSyntaxException expected) {\n  }\n  gson=new GsonBuilder().registerTypeAdapter(Person.class,typeAdapter.nullSafe()).create();\n  assertEquals(\"{\\\"horsePower\\\":1.0,\\\"passengers\\\":[null,\\\"jesse,30\\\"]}\",gson.toJson(truck,Truck.class));\n  truck=gson.fromJson(json,Truck.class);\n  assertEquals(1.0D,truck.horsePower);\n  assertNull(truck.passengers.get(0));\n  assertEquals(\"jesse\",truck.passengers.get(1).name);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 255,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 183,
        "endColumnNumber" : 45
      },
      "nodeContext" : "truck=gson.fromJson(json,Truck.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "com.google.gson.Gson"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 172,
    "startColumnNumber" : 6,
    "endLineNumber" : 172,
    "endColumnNumber" : 10
  }, {
    "charLength" : 4,
    "startLineNumber" : 177,
    "startColumnNumber" : 6,
    "endLineNumber" : 177,
    "endColumnNumber" : 10
  }, {
    "charLength" : 4,
    "startLineNumber" : 182,
    "startColumnNumber" : 8,
    "endLineNumber" : 182,
    "endColumnNumber" : 12
  }, {
    "charLength" : 4,
    "startLineNumber" : 183,
    "startColumnNumber" : 12,
    "endLineNumber" : 183,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}