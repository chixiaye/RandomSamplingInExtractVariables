{
  "id" : 446,
  "expression" : "!other.isClosed()",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/memory-types/ashmem/src/main/java/com/facebook/imagepipeline/memory/AshmemMemoryChunk.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!other.isClosed()",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 172,
      "startColumnNumber" : 29,
      "endLineNumber" : 172,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 172,
        "startColumnNumber" : 4,
        "endLineNumber" : 172,
        "endColumnNumber" : 47
      },
      "nodeContext" : "Preconditions.checkState(!other.isClosed())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 172,
        "startColumnNumber" : 4,
        "endLineNumber" : 172,
        "endColumnNumber" : 48
      },
      "nodeContext" : "Preconditions.checkState(!other.isClosed());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 711,
        "startLineNumber" : 167,
        "startColumnNumber" : 89,
        "endLineNumber" : 182,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!(other instanceof AshmemMemoryChunk)) {\n    throw new IllegalArgumentException(\"Cannot copy two incompatible MemoryChunks\");\n  }\n  Preconditions.checkState(!isClosed());\n  Preconditions.checkState(!other.isClosed());\n  MemoryChunkUtil.checkBounds(offset,other.getSize(),otherOffset,count,getSize());\n  mByteBuffer.position(offset);\n  other.getByteBuffer().position(otherOffset);\n  byte[] b=new byte[count];\n  mByteBuffer.get(b,0,count);\n  other.getByteBuffer().put(b,0,count);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 941,
        "startLineNumber" : 162,
        "startColumnNumber" : 2,
        "endLineNumber" : 182,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * This does actual copy. It should be called only when we hold locks on both this and other objects\n */\nprivate void doCopy(final int offset,final MemoryChunk other,final int otherOffset,final int count){\n  if (!(other instanceof AshmemMemoryChunk)) {\n    throw new IllegalArgumentException(\"Cannot copy two incompatible MemoryChunks\");\n  }\n  Preconditions.checkState(!isClosed());\n  Preconditions.checkState(!other.isClosed());\n  MemoryChunkUtil.checkBounds(offset,other.getSize(),otherOffset,count,getSize());\n  mByteBuffer.position(offset);\n  other.getByteBuffer().position(otherOffset);\n  byte[] b=new byte[count];\n  mByteBuffer.get(b,0,count);\n  other.getByteBuffer().put(b,0,count);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 102,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 172,
        "startColumnNumber" : 4,
        "endLineNumber" : 172,
        "endColumnNumber" : 48
      },
      "nodeContext" : "Preconditions.checkState(!other.isClosed());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 172,
    "startColumnNumber" : 29,
    "endLineNumber" : 172,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}