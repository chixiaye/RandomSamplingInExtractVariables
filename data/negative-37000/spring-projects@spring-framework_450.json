{
  "id" : 450,
  "expression" : "(Supplier)new DirectFieldAccessor(aspect).getPropertyValue(\"exceptionHandler\")",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-aspects/src/test/java/org/springframework/scheduling/aspectj/AnnotationDrivenBeanDefinitionParserTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(Supplier)new DirectFieldAccessor(aspect).getPropertyValue(\"exceptionHandler\")",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 79,
      "startLineNumber" : 70,
      "startColumnNumber" : 32,
      "endLineNumber" : 70,
      "endColumnNumber" : 111
    },
    "astNodeNumber" : 10,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 70,
        "startColumnNumber" : 31,
        "endLineNumber" : 70,
        "endColumnNumber" : 112
      },
      "nodeContext" : "((Supplier)new DirectFieldAccessor(aspect).getPropertyValue(\"exceptionHandler\"))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 70,
        "startColumnNumber" : 31,
        "endLineNumber" : 70,
        "endColumnNumber" : 118
      },
      "nodeContext" : "((Supplier)new DirectFieldAccessor(aspect).getPropertyValue(\"exceptionHandler\")).get()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 70,
        "startColumnNumber" : 2,
        "endLineNumber" : 70,
        "endColumnNumber" : 119
      },
      "nodeContext" : "assertSame(exceptionHandler,((Supplier)new DirectFieldAccessor(aspect).getPropertyValue(\"exceptionHandler\")).get())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 70,
        "startColumnNumber" : 2,
        "endLineNumber" : 70,
        "endColumnNumber" : 120
      },
      "nodeContext" : "assertSame(exceptionHandler,((Supplier)new DirectFieldAccessor(aspect).getPropertyValue(\"exceptionHandler\")).get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 289,
        "startLineNumber" : 67,
        "startColumnNumber" : 59,
        "endLineNumber" : 71,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Object exceptionHandler=context.getBean(\"testExceptionHandler\");\n  Object aspect=context.getBean(TaskManagementConfigUtils.ASYNC_EXECUTION_ASPECT_BEAN_NAME);\n  assertSame(exceptionHandler,((Supplier)new DirectFieldAccessor(aspect).getPropertyValue(\"exceptionHandler\")).get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 385,
        "startLineNumber" : 65,
        "startColumnNumber" : 1,
        "endLineNumber" : 71,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test @SuppressWarnings(\"rawtypes\") public void asyncPostProcessorExceptionHandlerReference(){\n  Object exceptionHandler=context.getBean(\"testExceptionHandler\");\n  Object aspect=context.getBean(TaskManagementConfigUtils.ASYNC_EXECUTION_ASPECT_BEAN_NAME);\n  assertSame(exceptionHandler,((Supplier)new DirectFieldAccessor(aspect).getPropertyValue(\"exceptionHandler\")).get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 47,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 70,
        "startColumnNumber" : 2,
        "endLineNumber" : 70,
        "endColumnNumber" : 120
      },
      "nodeContext" : "assertSame(exceptionHandler,((Supplier)new DirectFieldAccessor(aspect).getPropertyValue(\"exceptionHandler\")).get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 9
    },
    "tokenLength" : 5,
    "type" : "java.util.function.Supplier"
  } ],
  "positionList" : [ {
    "charLength" : 79,
    "startLineNumber" : 70,
    "startColumnNumber" : 32,
    "endLineNumber" : 70,
    "endColumnNumber" : 111
  } ],
  "layoutRelationDataList" : [ ]
}