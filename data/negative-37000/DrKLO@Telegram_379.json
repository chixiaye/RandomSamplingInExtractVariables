{
  "id" : 379,
  "expression" : "removeOp.positionStart == moveOp.positionStart",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/androidx/recyclerview/widget/OpReorderer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "removeOp.positionStart == moveOp.positionStart",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 46,
      "startLineNumber" : 63,
      "startColumnNumber" : 16,
      "endLineNumber" : 63,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 63,
        "startColumnNumber" : 16,
        "endLineNumber" : 64,
        "endColumnNumber" : 84
      },
      "nodeContext" : "removeOp.positionStart == moveOp.positionStart && removeOp.itemCount == moveOp.itemCount - moveOp.positionStart",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (removeOp.positionStart == moveOp.positionStart && removeOp.itemCount == moveOp.itemCount - moveOp.positionStart) {\n  revertedMove=true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 250,
        "startLineNumber" : 61,
        "startColumnNumber" : 53,
        "endLineNumber" : 67,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  moveIsBackwards=false;\n  if (removeOp.positionStart == moveOp.positionStart && removeOp.itemCount == moveOp.itemCount - moveOp.positionStart) {\n    revertedMove=true;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 550,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (moveOp.positionStart < moveOp.itemCount) {\n  moveIsBackwards=false;\n  if (removeOp.positionStart == moveOp.positionStart && removeOp.itemCount == moveOp.itemCount - moveOp.positionStart) {\n    revertedMove=true;\n  }\n}\n else {\n  moveIsBackwards=true;\n  if (removeOp.positionStart == moveOp.itemCount + 1 && removeOp.itemCount == moveOp.positionStart - moveOp.itemCount) {\n    revertedMove=true;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 70,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3839,
        "startLineNumber" : 55,
        "startColumnNumber" : 60,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  AdapterHelper.UpdateOp extraRm=null;\n  boolean revertedMove=false;\n  final boolean moveIsBackwards;\n  if (moveOp.positionStart < moveOp.itemCount) {\n    moveIsBackwards=false;\n    if (removeOp.positionStart == moveOp.positionStart && removeOp.itemCount == moveOp.itemCount - moveOp.positionStart) {\n      revertedMove=true;\n    }\n  }\n else {\n    moveIsBackwards=true;\n    if (removeOp.positionStart == moveOp.itemCount + 1 && removeOp.itemCount == moveOp.positionStart - moveOp.itemCount) {\n      revertedMove=true;\n    }\n  }\n  if (moveOp.itemCount < removeOp.positionStart) {\n    removeOp.positionStart--;\n  }\n else   if (moveOp.itemCount < removeOp.positionStart + removeOp.itemCount) {\n    removeOp.itemCount--;\n    moveOp.cmd=AdapterHelper.UpdateOp.REMOVE;\n    moveOp.itemCount=1;\n    if (removeOp.itemCount == 0) {\n      list.remove(removePos);\n      mCallback.recycleUpdateOp(removeOp);\n    }\n    return;\n  }\n  if (moveOp.positionStart <= removeOp.positionStart) {\n    removeOp.positionStart++;\n  }\n else   if (moveOp.positionStart < removeOp.positionStart + removeOp.itemCount) {\n    final int remaining=removeOp.positionStart + removeOp.itemCount - moveOp.positionStart;\n    extraRm=mCallback.obtainUpdateOp(AdapterHelper.UpdateOp.REMOVE,moveOp.positionStart + 1,remaining,null);\n    removeOp.itemCount=moveOp.positionStart - removeOp.positionStart;\n  }\n  if (revertedMove) {\n    list.set(movePos,removeOp);\n    list.remove(removePos);\n    mCallback.recycleUpdateOp(moveOp);\n    return;\n  }\n  if (moveIsBackwards) {\n    if (extraRm != null) {\n      if (moveOp.positionStart > extraRm.positionStart) {\n        moveOp.positionStart-=extraRm.itemCount;\n      }\n      if (moveOp.itemCount > extraRm.positionStart) {\n        moveOp.itemCount-=extraRm.itemCount;\n      }\n    }\n    if (moveOp.positionStart > removeOp.positionStart) {\n      moveOp.positionStart-=removeOp.itemCount;\n    }\n    if (moveOp.itemCount > removeOp.positionStart) {\n      moveOp.itemCount-=removeOp.itemCount;\n    }\n  }\n else {\n    if (extraRm != null) {\n      if (moveOp.positionStart >= extraRm.positionStart) {\n        moveOp.positionStart-=extraRm.itemCount;\n      }\n      if (moveOp.itemCount >= extraRm.positionStart) {\n        moveOp.itemCount-=extraRm.itemCount;\n      }\n    }\n    if (moveOp.positionStart >= removeOp.positionStart) {\n      moveOp.positionStart-=removeOp.itemCount;\n    }\n    if (moveOp.itemCount >= removeOp.positionStart) {\n      moveOp.itemCount-=removeOp.itemCount;\n    }\n  }\n  list.set(movePos,removeOp);\n  if (moveOp.positionStart != moveOp.itemCount) {\n    list.set(removePos,moveOp);\n  }\n else {\n    list.remove(removePos);\n  }\n  if (extraRm != null) {\n    list.add(movePos,extraRm);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 436,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3998,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "void swapMoveRemove(List<AdapterHelper.UpdateOp> list,int movePos,AdapterHelper.UpdateOp moveOp,int removePos,AdapterHelper.UpdateOp removeOp){\n  AdapterHelper.UpdateOp extraRm=null;\n  boolean revertedMove=false;\n  final boolean moveIsBackwards;\n  if (moveOp.positionStart < moveOp.itemCount) {\n    moveIsBackwards=false;\n    if (removeOp.positionStart == moveOp.positionStart && removeOp.itemCount == moveOp.itemCount - moveOp.positionStart) {\n      revertedMove=true;\n    }\n  }\n else {\n    moveIsBackwards=true;\n    if (removeOp.positionStart == moveOp.itemCount + 1 && removeOp.itemCount == moveOp.positionStart - moveOp.itemCount) {\n      revertedMove=true;\n    }\n  }\n  if (moveOp.itemCount < removeOp.positionStart) {\n    removeOp.positionStart--;\n  }\n else   if (moveOp.itemCount < removeOp.positionStart + removeOp.itemCount) {\n    removeOp.itemCount--;\n    moveOp.cmd=AdapterHelper.UpdateOp.REMOVE;\n    moveOp.itemCount=1;\n    if (removeOp.itemCount == 0) {\n      list.remove(removePos);\n      mCallback.recycleUpdateOp(removeOp);\n    }\n    return;\n  }\n  if (moveOp.positionStart <= removeOp.positionStart) {\n    removeOp.positionStart++;\n  }\n else   if (moveOp.positionStart < removeOp.positionStart + removeOp.itemCount) {\n    final int remaining=removeOp.positionStart + removeOp.itemCount - moveOp.positionStart;\n    extraRm=mCallback.obtainUpdateOp(AdapterHelper.UpdateOp.REMOVE,moveOp.positionStart + 1,remaining,null);\n    removeOp.itemCount=moveOp.positionStart - removeOp.positionStart;\n  }\n  if (revertedMove) {\n    list.set(movePos,removeOp);\n    list.remove(removePos);\n    mCallback.recycleUpdateOp(moveOp);\n    return;\n  }\n  if (moveIsBackwards) {\n    if (extraRm != null) {\n      if (moveOp.positionStart > extraRm.positionStart) {\n        moveOp.positionStart-=extraRm.itemCount;\n      }\n      if (moveOp.itemCount > extraRm.positionStart) {\n        moveOp.itemCount-=extraRm.itemCount;\n      }\n    }\n    if (moveOp.positionStart > removeOp.positionStart) {\n      moveOp.positionStart-=removeOp.itemCount;\n    }\n    if (moveOp.itemCount > removeOp.positionStart) {\n      moveOp.itemCount-=removeOp.itemCount;\n    }\n  }\n else {\n    if (extraRm != null) {\n      if (moveOp.positionStart >= extraRm.positionStart) {\n        moveOp.positionStart-=extraRm.itemCount;\n      }\n      if (moveOp.itemCount >= extraRm.positionStart) {\n        moveOp.itemCount-=extraRm.itemCount;\n      }\n    }\n    if (moveOp.positionStart >= removeOp.positionStart) {\n      moveOp.positionStart-=removeOp.itemCount;\n    }\n    if (moveOp.itemCount >= removeOp.positionStart) {\n      moveOp.itemCount-=removeOp.itemCount;\n    }\n  }\n  list.set(movePos,removeOp);\n  if (moveOp.positionStart != moveOp.itemCount) {\n    list.set(removePos,moveOp);\n  }\n else {\n    list.remove(removePos);\n  }\n  if (extraRm != null) {\n    list.add(movePos,extraRm);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 466,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 63,
        "startColumnNumber" : 16,
        "endLineNumber" : 64,
        "endColumnNumber" : 84
      },
      "nodeContext" : "removeOp.positionStart == moveOp.positionStart && removeOp.itemCount == moveOp.itemCount - moveOp.positionStart",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 19,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 46,
    "startLineNumber" : 63,
    "startColumnNumber" : 16,
    "endLineNumber" : 63,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}