{
  "id" : 414,
  "expression" : "this.service",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-context/src/test/java/org/springframework/aop/aspectj/autoproxy/spr3064/SPR3064Tests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this.service",
    "nodeType" : "FieldAccess",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 48,
      "startColumnNumber" : 3,
      "endLineNumber" : 48,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 48,
        "startColumnNumber" : 3,
        "endLineNumber" : 48,
        "endColumnNumber" : 25
      },
      "nodeContext" : "this.service.serveMe()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 48,
        "startColumnNumber" : 3,
        "endLineNumber" : 48,
        "endColumnNumber" : 26
      },
      "nodeContext" : "this.service.serveMe();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 47,
        "startColumnNumber" : 6,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.service.serveMe();\n  fail(\"service operation has not been advised by transaction interceptor\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 201,
        "startLineNumber" : 47,
        "startColumnNumber" : 2,
        "endLineNumber" : 53,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  this.service.serveMe();\n  fail(\"service operation has not been advised by transaction interceptor\");\n}\n catch (RuntimeException ex) {\n  assertEquals(\"advice invoked\",ex.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 383,
        "startLineNumber" : 41,
        "startColumnNumber" : 36,
        "endLineNumber" : 54,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ClassPathXmlApplicationContext ctx=new ClassPathXmlApplicationContext(getClass().getSimpleName() + \".xml\",getClass());\n  service=(Service)ctx.getBean(\"service\");\n  try {\n    this.service.serveMe();\n    fail(\"service operation has not been advised by transaction interceptor\");\n  }\n catch (  RuntimeException ex) {\n    assertEquals(\"advice invoked\",ex.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 425,
        "startLineNumber" : 40,
        "startColumnNumber" : 1,
        "endLineNumber" : 54,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testServiceIsAdvised(){\n  ClassPathXmlApplicationContext ctx=new ClassPathXmlApplicationContext(getClass().getSimpleName() + \".xml\",getClass());\n  service=(Service)ctx.getBean(\"service\");\n  try {\n    this.service.serveMe();\n    fail(\"service operation has not been advised by transaction interceptor\");\n  }\n catch (  RuntimeException ex) {\n    assertEquals(\"advice invoked\",ex.getMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 58,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 48,
        "startColumnNumber" : 3,
        "endLineNumber" : 48,
        "endColumnNumber" : 26
      },
      "nodeContext" : "this.service.serveMe();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.springframework.aop.aspectj.autoproxy.spr3064.Service"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 48,
    "startColumnNumber" : 3,
    "endLineNumber" : 48,
    "endColumnNumber" : 15
  } ],
  "layoutRelationDataList" : [ ]
}