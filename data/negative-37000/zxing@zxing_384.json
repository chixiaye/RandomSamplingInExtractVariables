{
  "id" : 384,
  "expression" : "contentsToEncode == null",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/android/src/com/google/zxing/client/android/encode/QRCodeEncoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "contentsToEncode == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 306,
      "startColumnNumber" : 8,
      "endLineNumber" : 306,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 306,
        "startColumnNumber" : 4,
        "endLineNumber" : 308,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (contentsToEncode == null) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 993,
        "startLineNumber" : 304,
        "startColumnNumber" : 49,
        "endLineNumber" : 330,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String contentsToEncode=contents;\n  if (contentsToEncode == null) {\n    return null;\n  }\n  Map<EncodeHintType,Object> hints=null;\n  String encoding=guessAppropriateEncoding(contentsToEncode);\n  if (encoding != null) {\n    hints=new EnumMap<EncodeHintType,Object>(EncodeHintType.class);\n    hints.put(EncodeHintType.CHARACTER_SET,encoding);\n  }\n  MultiFormatWriter writer=new MultiFormatWriter();\n  BitMatrix result=writer.encode(contentsToEncode,format,dimension,dimension,hints);\n  int width=result.getWidth();\n  int height=result.getHeight();\n  int[] pixels=new int[width * height];\n  for (int y=0; y < height; y++) {\n    int offset=y * width;\n    for (int x=0; x < width; x++) {\n      pixels[offset + x]=result.get(x,y) ? BLACK : WHITE;\n    }\n  }\n  Bitmap bitmap=Bitmap.createBitmap(width,height,Bitmap.Config.ARGB_8888);\n  bitmap.setPixels(pixels,0,width,0,0,width,height);\n  return bitmap;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 182,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1040,
        "startLineNumber" : 304,
        "startColumnNumber" : 2,
        "endLineNumber" : 330,
        "endColumnNumber" : 3
      },
      "nodeContext" : "Bitmap encodeAsBitmap() throws WriterException {\n  String contentsToEncode=contents;\n  if (contentsToEncode == null) {\n    return null;\n  }\n  Map<EncodeHintType,Object> hints=null;\n  String encoding=guessAppropriateEncoding(contentsToEncode);\n  if (encoding != null) {\n    hints=new EnumMap<EncodeHintType,Object>(EncodeHintType.class);\n    hints.put(EncodeHintType.CHARACTER_SET,encoding);\n  }\n  MultiFormatWriter writer=new MultiFormatWriter();\n  BitMatrix result=writer.encode(contentsToEncode,format,dimension,dimension,hints);\n  int width=result.getWidth();\n  int height=result.getHeight();\n  int[] pixels=new int[width * height];\n  for (int y=0; y < height; y++) {\n    int offset=y * width;\n    for (int x=0; x < width; x++) {\n      pixels[offset + x]=result.get(x,y) ? BLACK : WHITE;\n    }\n  }\n  Bitmap bitmap=Bitmap.createBitmap(width,height,Bitmap.Config.ARGB_8888);\n  bitmap.setPixels(pixels,0,width,0,0,width,height);\n  return bitmap;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 188,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 306,
        "startColumnNumber" : 4,
        "endLineNumber" : 308,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (contentsToEncode == null) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 306,
    "startColumnNumber" : 8,
    "endLineNumber" : 306,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}