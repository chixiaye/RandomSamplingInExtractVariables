{
  "id" : 120,
  "expression" : "new InterestChannelMetrics()",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-bridge/src/main/java/com/netflix/eureka2/server/EurekaBridgeServerModule.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new InterestChannelMetrics()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 95,
      "startColumnNumber" : 54,
      "endLineNumber" : 95,
      "endColumnNumber" : 82
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 95,
        "endColumnNumber" : 83
      },
      "nodeContext" : "bind(InterestChannelMetrics.class).toInstance(new InterestChannelMetrics())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 95,
        "endColumnNumber" : 84
      },
      "nodeContext" : "bind(InterestChannelMetrics.class).toInstance(new InterestChannelMetrics());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3115,
        "startLineNumber" : 51,
        "startColumnNumber" : 28,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (config == null) {\n    bind(BridgeServerConfig.class).asEagerSingleton();\n    bind(EurekaRegistryConfig.class).to(BridgeServerConfig.class);\n  }\n else {\n    bind(EurekaRegistryConfig.class).toInstance(config);\n    bind(EurekaCommonConfig.class).toInstance(config);\n    bind(EurekaServerConfig.class).toInstance(config);\n    bind(WriteServerConfig.class).toInstance(config);\n    bind(BridgeServerConfig.class).toInstance(config);\n  }\n  bind(SerializedTaskInvokerMetrics.class).toInstance(new SerializedTaskInvokerMetrics(\"registry\"));\n  bind(SourcedEurekaRegistry.class).to(EurekaBridgeRegistry.class);\n  bind(EvictionQueue.class).to(EvictionQueueImpl.class).asEagerSingleton();\n  bind(EvictionStrategy.class).toProvider(EvictionStrategyProvider.class);\n  bind(SelfInfoResolver.class).to(EurekaBridgeServerSelfInfoResolver.class).asEagerSingleton();\n  bind(SelfRegistrationService.class).to(EurekaBridgeServerSelfRegistrationService.class).asEagerSingleton();\n  bind(MetricEventsListenerFactory.class).annotatedWith(Names.named(\"discovery\")).toInstance(new ServoEventsListenerFactory(\"discovery-rx-client-\",\"discovery-rx-server-\"));\n  bind(MetricEventsListenerFactory.class).annotatedWith(Names.named(\"replication\")).toInstance(new ServoEventsListenerFactory(\"replication-rx-client-\",\"replication-rx-server-\"));\n  bind(TcpDiscoveryServer.class).asEagerSingleton();\n  bind(TcpReplicationServer.class).asEagerSingleton();\n  bind(ReplicationService.class).asEagerSingleton();\n  bind(BridgeService.class).asEagerSingleton();\n  bind(ExtensionContext.class).asEagerSingleton();\n  bind(MessageConnectionMetrics.class).annotatedWith(Names.named(\"registration\")).toInstance(new MessageConnectionMetrics(\"registration\"));\n  bind(MessageConnectionMetrics.class).annotatedWith(Names.named(\"replication\")).toInstance(new MessageConnectionMetrics(\"replication\"));\n  bind(MessageConnectionMetrics.class).annotatedWith(Names.named(\"discovery\")).toInstance(new MessageConnectionMetrics(\"discovery\"));\n  bind(MessageConnectionMetrics.class).annotatedWith(Names.named(\"clientRegistration\")).toInstance(new MessageConnectionMetrics(\"clientRegistration\"));\n  bind(MessageConnectionMetrics.class).annotatedWith(Names.named(\"clientDiscovery\")).toInstance(new MessageConnectionMetrics(\"clientDiscovery\"));\n  bind(MessageConnectionMetrics.class).annotatedWith(Names.named(\"clientReplication\")).toInstance(new MessageConnectionMetrics(\"clientReplication\"));\n  bind(BridgeChannelMetrics.class).annotatedWith(Names.named(\"bridge\")).toInstance(new BridgeChannelMetrics());\n  bind(RegistrationChannelMetrics.class).toInstance(new RegistrationChannelMetrics());\n  bind(ReplicationChannelMetrics.class).toInstance(new ReplicationChannelMetrics());\n  bind(InterestChannelMetrics.class).toInstance(new InterestChannelMetrics());\n  bind(BridgeServerMetricFactory.class).asEagerSingleton();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 388,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3153,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void configure(){\n  if (config == null) {\n    bind(BridgeServerConfig.class).asEagerSingleton();\n    bind(EurekaRegistryConfig.class).to(BridgeServerConfig.class);\n  }\n else {\n    bind(EurekaRegistryConfig.class).toInstance(config);\n    bind(EurekaCommonConfig.class).toInstance(config);\n    bind(EurekaServerConfig.class).toInstance(config);\n    bind(WriteServerConfig.class).toInstance(config);\n    bind(BridgeServerConfig.class).toInstance(config);\n  }\n  bind(SerializedTaskInvokerMetrics.class).toInstance(new SerializedTaskInvokerMetrics(\"registry\"));\n  bind(SourcedEurekaRegistry.class).to(EurekaBridgeRegistry.class);\n  bind(EvictionQueue.class).to(EvictionQueueImpl.class).asEagerSingleton();\n  bind(EvictionStrategy.class).toProvider(EvictionStrategyProvider.class);\n  bind(SelfInfoResolver.class).to(EurekaBridgeServerSelfInfoResolver.class).asEagerSingleton();\n  bind(SelfRegistrationService.class).to(EurekaBridgeServerSelfRegistrationService.class).asEagerSingleton();\n  bind(MetricEventsListenerFactory.class).annotatedWith(Names.named(\"discovery\")).toInstance(new ServoEventsListenerFactory(\"discovery-rx-client-\",\"discovery-rx-server-\"));\n  bind(MetricEventsListenerFactory.class).annotatedWith(Names.named(\"replication\")).toInstance(new ServoEventsListenerFactory(\"replication-rx-client-\",\"replication-rx-server-\"));\n  bind(TcpDiscoveryServer.class).asEagerSingleton();\n  bind(TcpReplicationServer.class).asEagerSingleton();\n  bind(ReplicationService.class).asEagerSingleton();\n  bind(BridgeService.class).asEagerSingleton();\n  bind(ExtensionContext.class).asEagerSingleton();\n  bind(MessageConnectionMetrics.class).annotatedWith(Names.named(\"registration\")).toInstance(new MessageConnectionMetrics(\"registration\"));\n  bind(MessageConnectionMetrics.class).annotatedWith(Names.named(\"replication\")).toInstance(new MessageConnectionMetrics(\"replication\"));\n  bind(MessageConnectionMetrics.class).annotatedWith(Names.named(\"discovery\")).toInstance(new MessageConnectionMetrics(\"discovery\"));\n  bind(MessageConnectionMetrics.class).annotatedWith(Names.named(\"clientRegistration\")).toInstance(new MessageConnectionMetrics(\"clientRegistration\"));\n  bind(MessageConnectionMetrics.class).annotatedWith(Names.named(\"clientDiscovery\")).toInstance(new MessageConnectionMetrics(\"clientDiscovery\"));\n  bind(MessageConnectionMetrics.class).annotatedWith(Names.named(\"clientReplication\")).toInstance(new MessageConnectionMetrics(\"clientReplication\"));\n  bind(BridgeChannelMetrics.class).annotatedWith(Names.named(\"bridge\")).toInstance(new BridgeChannelMetrics());\n  bind(RegistrationChannelMetrics.class).toInstance(new RegistrationChannelMetrics());\n  bind(ReplicationChannelMetrics.class).toInstance(new ReplicationChannelMetrics());\n  bind(InterestChannelMetrics.class).toInstance(new InterestChannelMetrics());\n  bind(BridgeServerMetricFactory.class).asEagerSingleton();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 394,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 95,
        "endColumnNumber" : 84
      },
      "nodeContext" : "bind(InterestChannelMetrics.class).toInstance(new InterestChannelMetrics());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "com.netflix.eureka2.server.metric.InterestChannelMetrics"
  } ],
  "positionList" : [ {
    "charLength" : 28,
    "startLineNumber" : 95,
    "startColumnNumber" : 54,
    "endLineNumber" : 95,
    "endColumnNumber" : 82
  } ],
  "layoutRelationDataList" : [ ]
}