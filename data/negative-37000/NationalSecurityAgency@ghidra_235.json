{
  "id" : 235,
  "expression" : "null",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Debug/Framework-TraceModeling/src/main/java/ghidra/trace/util/OverlappingObjectIterator.java",
  "occurrences" : 13,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 112,
      "startColumnNumber" : 15,
      "endLineNumber" : 112,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 112,
        "startColumnNumber" : 6,
        "endLineNumber" : 112,
        "endColumnNumber" : 19
      },
      "nodeContext" : "nextL != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 371,
        "startLineNumber" : 112,
        "startColumnNumber" : 2,
        "endLineNumber" : 124,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (nextL != null) {\n  assert nextR != null;\n  int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n  if (cmp <= 0) {\n    nextL=null;\n  }\n  if (cmp >= 0) {\n    nextR=null;\n  }\n}\n else {\n  assert nextR == null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 111,
        "startColumnNumber" : 33,
        "endLineNumber" : 158,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (nextL != null) {\n    assert nextR != null;\n    int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n    if (cmp <= 0) {\n      nextL=null;\n    }\n    if (cmp >= 0) {\n      nextR=null;\n    }\n  }\n else {\n    assert nextR == null;\n  }\n  if (nextL == null) {\n    if (!left.hasNext()) {\n      return null;\n    }\n    nextL=left.next();\n  }\n  if (nextR == null) {\n    if (!right.hasNext()) {\n      return null;\n    }\n    nextR=right.next();\n  }\n  while (true) {\n    if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n      if (!left.hasNext()) {\n        nextL=null;\n        return null;\n      }\n      nextL=left.next();\n      continue;\n    }\n    if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n      if (!right.hasNext()) {\n        nextR=null;\n        return null;\n      }\n      nextR=right.next();\n      continue;\n    }\n    return pair;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 110,
        "startColumnNumber" : 1,
        "endLineNumber" : 158,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected Pair<L,R> seekNext(){\n  if (nextL != null) {\n    assert nextR != null;\n    int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n    if (cmp <= 0) {\n      nextL=null;\n    }\n    if (cmp >= 0) {\n      nextR=null;\n    }\n  }\n else {\n    assert nextR == null;\n  }\n  if (nextL == null) {\n    if (!left.hasNext()) {\n      return null;\n    }\n    nextL=left.next();\n  }\n  if (nextR == null) {\n    if (!right.hasNext()) {\n      return null;\n    }\n    nextR=right.next();\n  }\n  while (true) {\n    if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n      if (!left.hasNext()) {\n        nextL=null;\n        return null;\n      }\n      nextL=left.next();\n      continue;\n    }\n    if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n      if (!right.hasNext()) {\n        nextR=null;\n        return null;\n      }\n      nextR=right.next();\n      continue;\n    }\n    return pair;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 168,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 112,
        "startColumnNumber" : 6,
        "endLineNumber" : 112,
        "endColumnNumber" : 19
      },
      "nodeContext" : "nextL != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 113,
      "startColumnNumber" : 19,
      "endLineNumber" : 113,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.AssertStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 113,
        "startColumnNumber" : 10,
        "endLineNumber" : 113,
        "endColumnNumber" : 23
      },
      "nodeContext" : "nextR != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 113,
        "startColumnNumber" : 3,
        "endLineNumber" : 113,
        "endColumnNumber" : 24
      },
      "nodeContext" : "assert nextR != null;\n",
      "nodeType" : "AssertStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 311,
        "startLineNumber" : 112,
        "startColumnNumber" : 21,
        "endLineNumber" : 121,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assert nextR != null;\n  int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n  if (cmp <= 0) {\n    nextL=null;\n  }\n  if (cmp >= 0) {\n    nextR=null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 371,
        "startLineNumber" : 112,
        "startColumnNumber" : 2,
        "endLineNumber" : 124,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (nextL != null) {\n  assert nextR != null;\n  int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n  if (cmp <= 0) {\n    nextL=null;\n  }\n  if (cmp >= 0) {\n    nextR=null;\n  }\n}\n else {\n  assert nextR == null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 111,
        "startColumnNumber" : 33,
        "endLineNumber" : 158,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (nextL != null) {\n    assert nextR != null;\n    int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n    if (cmp <= 0) {\n      nextL=null;\n    }\n    if (cmp >= 0) {\n      nextR=null;\n    }\n  }\n else {\n    assert nextR == null;\n  }\n  if (nextL == null) {\n    if (!left.hasNext()) {\n      return null;\n    }\n    nextL=left.next();\n  }\n  if (nextR == null) {\n    if (!right.hasNext()) {\n      return null;\n    }\n    nextR=right.next();\n  }\n  while (true) {\n    if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n      if (!left.hasNext()) {\n        nextL=null;\n        return null;\n      }\n      nextL=left.next();\n      continue;\n    }\n    if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n      if (!right.hasNext()) {\n        nextR=null;\n        return null;\n      }\n      nextR=right.next();\n      continue;\n    }\n    return pair;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 110,
        "startColumnNumber" : 1,
        "endLineNumber" : 158,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected Pair<L,R> seekNext(){\n  if (nextL != null) {\n    assert nextR != null;\n    int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n    if (cmp <= 0) {\n      nextL=null;\n    }\n    if (cmp >= 0) {\n      nextR=null;\n    }\n  }\n else {\n    assert nextR == null;\n  }\n  if (nextL == null) {\n    if (!left.hasNext()) {\n      return null;\n    }\n    nextL=left.next();\n  }\n  if (nextR == null) {\n    if (!right.hasNext()) {\n      return null;\n    }\n    nextR=right.next();\n  }\n  while (true) {\n    if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n      if (!left.hasNext()) {\n        nextL=null;\n        return null;\n      }\n      nextL=left.next();\n      continue;\n    }\n    if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n      if (!right.hasNext()) {\n        nextR=null;\n        return null;\n      }\n      nextR=right.next();\n      continue;\n    }\n    return pair;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 168,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 113,
        "startColumnNumber" : 3,
        "endLineNumber" : 113,
        "endColumnNumber" : 24
      },
      "nodeContext" : "assert nextR != null;\n",
      "nodeType" : "AssertStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 116,
      "startColumnNumber" : 12,
      "endLineNumber" : 116,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 116,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 16
      },
      "nodeContext" : "nextL=null",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 116,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 17
      },
      "nodeContext" : "nextL=null;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 115,
        "startColumnNumber" : 17,
        "endLineNumber" : 117,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  nextL=null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 115,
        "startColumnNumber" : 3,
        "endLineNumber" : 117,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (cmp <= 0) {\n  nextL=null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 311,
        "startLineNumber" : 112,
        "startColumnNumber" : 21,
        "endLineNumber" : 121,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assert nextR != null;\n  int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n  if (cmp <= 0) {\n    nextL=null;\n  }\n  if (cmp >= 0) {\n    nextR=null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 371,
        "startLineNumber" : 112,
        "startColumnNumber" : 2,
        "endLineNumber" : 124,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (nextL != null) {\n  assert nextR != null;\n  int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n  if (cmp <= 0) {\n    nextL=null;\n  }\n  if (cmp >= 0) {\n    nextR=null;\n  }\n}\n else {\n  assert nextR == null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 111,
        "startColumnNumber" : 33,
        "endLineNumber" : 158,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (nextL != null) {\n    assert nextR != null;\n    int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n    if (cmp <= 0) {\n      nextL=null;\n    }\n    if (cmp >= 0) {\n      nextR=null;\n    }\n  }\n else {\n    assert nextR == null;\n  }\n  if (nextL == null) {\n    if (!left.hasNext()) {\n      return null;\n    }\n    nextL=left.next();\n  }\n  if (nextR == null) {\n    if (!right.hasNext()) {\n      return null;\n    }\n    nextR=right.next();\n  }\n  while (true) {\n    if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n      if (!left.hasNext()) {\n        nextL=null;\n        return null;\n      }\n      nextL=left.next();\n      continue;\n    }\n    if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n      if (!right.hasNext()) {\n        nextR=null;\n        return null;\n      }\n      nextR=right.next();\n      continue;\n    }\n    return pair;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 110,
        "startColumnNumber" : 1,
        "endLineNumber" : 158,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected Pair<L,R> seekNext(){\n  if (nextL != null) {\n    assert nextR != null;\n    int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n    if (cmp <= 0) {\n      nextL=null;\n    }\n    if (cmp >= 0) {\n      nextR=null;\n    }\n  }\n else {\n    assert nextR == null;\n  }\n  if (nextL == null) {\n    if (!left.hasNext()) {\n      return null;\n    }\n    nextL=left.next();\n  }\n  if (nextR == null) {\n    if (!right.hasNext()) {\n      return null;\n    }\n    nextR=right.next();\n  }\n  while (true) {\n    if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n      if (!left.hasNext()) {\n        nextL=null;\n        return null;\n      }\n      nextL=left.next();\n      continue;\n    }\n    if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n      if (!right.hasNext()) {\n        nextR=null;\n        return null;\n      }\n      nextR=right.next();\n      continue;\n    }\n    return pair;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 168,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 116,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 17
      },
      "nodeContext" : "nextL=null;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 119,
      "startColumnNumber" : 12,
      "endLineNumber" : 119,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 119,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 16
      },
      "nodeContext" : "nextR=null",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 119,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 17
      },
      "nodeContext" : "nextR=null;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 118,
        "startColumnNumber" : 17,
        "endLineNumber" : 120,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  nextR=null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 118,
        "startColumnNumber" : 3,
        "endLineNumber" : 120,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (cmp >= 0) {\n  nextR=null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 311,
        "startLineNumber" : 112,
        "startColumnNumber" : 21,
        "endLineNumber" : 121,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assert nextR != null;\n  int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n  if (cmp <= 0) {\n    nextL=null;\n  }\n  if (cmp >= 0) {\n    nextR=null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 371,
        "startLineNumber" : 112,
        "startColumnNumber" : 2,
        "endLineNumber" : 124,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (nextL != null) {\n  assert nextR != null;\n  int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n  if (cmp <= 0) {\n    nextL=null;\n  }\n  if (cmp >= 0) {\n    nextR=null;\n  }\n}\n else {\n  assert nextR == null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 111,
        "startColumnNumber" : 33,
        "endLineNumber" : 158,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (nextL != null) {\n    assert nextR != null;\n    int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n    if (cmp <= 0) {\n      nextL=null;\n    }\n    if (cmp >= 0) {\n      nextR=null;\n    }\n  }\n else {\n    assert nextR == null;\n  }\n  if (nextL == null) {\n    if (!left.hasNext()) {\n      return null;\n    }\n    nextL=left.next();\n  }\n  if (nextR == null) {\n    if (!right.hasNext()) {\n      return null;\n    }\n    nextR=right.next();\n  }\n  while (true) {\n    if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n      if (!left.hasNext()) {\n        nextL=null;\n        return null;\n      }\n      nextL=left.next();\n      continue;\n    }\n    if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n      if (!right.hasNext()) {\n        nextR=null;\n        return null;\n      }\n      nextR=right.next();\n      continue;\n    }\n    return pair;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 110,
        "startColumnNumber" : 1,
        "endLineNumber" : 158,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected Pair<L,R> seekNext(){\n  if (nextL != null) {\n    assert nextR != null;\n    int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n    if (cmp <= 0) {\n      nextL=null;\n    }\n    if (cmp >= 0) {\n      nextR=null;\n    }\n  }\n else {\n    assert nextR == null;\n  }\n  if (nextL == null) {\n    if (!left.hasNext()) {\n      return null;\n    }\n    nextL=left.next();\n  }\n  if (nextR == null) {\n    if (!right.hasNext()) {\n      return null;\n    }\n    nextR=right.next();\n  }\n  while (true) {\n    if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n      if (!left.hasNext()) {\n        nextL=null;\n        return null;\n      }\n      nextL=left.next();\n      continue;\n    }\n    if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n      if (!right.hasNext()) {\n        nextR=null;\n        return null;\n      }\n      nextR=right.next();\n      continue;\n    }\n    return pair;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 168,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 119,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 17
      },
      "nodeContext" : "nextR=null;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 123,
      "startColumnNumber" : 19,
      "endLineNumber" : 123,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.AssertStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 123,
        "startColumnNumber" : 10,
        "endLineNumber" : 123,
        "endColumnNumber" : 23
      },
      "nodeContext" : "nextR == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 123,
        "startColumnNumber" : 3,
        "endLineNumber" : 123,
        "endColumnNumber" : 24
      },
      "nodeContext" : "assert nextR == null;\n",
      "nodeType" : "AssertStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 122,
        "startColumnNumber" : 7,
        "endLineNumber" : 124,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assert nextR == null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 371,
        "startLineNumber" : 112,
        "startColumnNumber" : 2,
        "endLineNumber" : 124,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (nextL != null) {\n  assert nextR != null;\n  int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n  if (cmp <= 0) {\n    nextL=null;\n  }\n  if (cmp >= 0) {\n    nextR=null;\n  }\n}\n else {\n  assert nextR == null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 111,
        "startColumnNumber" : 33,
        "endLineNumber" : 158,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (nextL != null) {\n    assert nextR != null;\n    int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n    if (cmp <= 0) {\n      nextL=null;\n    }\n    if (cmp >= 0) {\n      nextR=null;\n    }\n  }\n else {\n    assert nextR == null;\n  }\n  if (nextL == null) {\n    if (!left.hasNext()) {\n      return null;\n    }\n    nextL=left.next();\n  }\n  if (nextR == null) {\n    if (!right.hasNext()) {\n      return null;\n    }\n    nextR=right.next();\n  }\n  while (true) {\n    if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n      if (!left.hasNext()) {\n        nextL=null;\n        return null;\n      }\n      nextL=left.next();\n      continue;\n    }\n    if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n      if (!right.hasNext()) {\n        nextR=null;\n        return null;\n      }\n      nextR=right.next();\n      continue;\n    }\n    return pair;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 110,
        "startColumnNumber" : 1,
        "endLineNumber" : 158,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected Pair<L,R> seekNext(){\n  if (nextL != null) {\n    assert nextR != null;\n    int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n    if (cmp <= 0) {\n      nextL=null;\n    }\n    if (cmp >= 0) {\n      nextR=null;\n    }\n  }\n else {\n    assert nextR == null;\n  }\n  if (nextL == null) {\n    if (!left.hasNext()) {\n      return null;\n    }\n    nextL=left.next();\n  }\n  if (nextR == null) {\n    if (!right.hasNext()) {\n      return null;\n    }\n    nextR=right.next();\n  }\n  while (true) {\n    if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n      if (!left.hasNext()) {\n        nextL=null;\n        return null;\n      }\n      nextL=left.next();\n      continue;\n    }\n    if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n      if (!right.hasNext()) {\n        nextR=null;\n        return null;\n      }\n      nextR=right.next();\n      continue;\n    }\n    return pair;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 168,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 123,
        "startColumnNumber" : 3,
        "endLineNumber" : 123,
        "endColumnNumber" : 24
      },
      "nodeContext" : "assert nextR == null;\n",
      "nodeType" : "AssertStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 126,
      "startColumnNumber" : 15,
      "endLineNumber" : 126,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 126,
        "startColumnNumber" : 6,
        "endLineNumber" : 126,
        "endColumnNumber" : 19
      },
      "nodeContext" : "nextL == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 126,
        "startColumnNumber" : 2,
        "endLineNumber" : 131,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (nextL == null) {\n  if (!left.hasNext()) {\n    return null;\n  }\n  nextL=left.next();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 111,
        "startColumnNumber" : 33,
        "endLineNumber" : 158,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (nextL != null) {\n    assert nextR != null;\n    int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n    if (cmp <= 0) {\n      nextL=null;\n    }\n    if (cmp >= 0) {\n      nextR=null;\n    }\n  }\n else {\n    assert nextR == null;\n  }\n  if (nextL == null) {\n    if (!left.hasNext()) {\n      return null;\n    }\n    nextL=left.next();\n  }\n  if (nextR == null) {\n    if (!right.hasNext()) {\n      return null;\n    }\n    nextR=right.next();\n  }\n  while (true) {\n    if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n      if (!left.hasNext()) {\n        nextL=null;\n        return null;\n      }\n      nextL=left.next();\n      continue;\n    }\n    if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n      if (!right.hasNext()) {\n        nextR=null;\n        return null;\n      }\n      nextR=right.next();\n      continue;\n    }\n    return pair;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 110,
        "startColumnNumber" : 1,
        "endLineNumber" : 158,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected Pair<L,R> seekNext(){\n  if (nextL != null) {\n    assert nextR != null;\n    int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n    if (cmp <= 0) {\n      nextL=null;\n    }\n    if (cmp >= 0) {\n      nextR=null;\n    }\n  }\n else {\n    assert nextR == null;\n  }\n  if (nextL == null) {\n    if (!left.hasNext()) {\n      return null;\n    }\n    nextL=left.next();\n  }\n  if (nextR == null) {\n    if (!right.hasNext()) {\n      return null;\n    }\n    nextR=right.next();\n  }\n  while (true) {\n    if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n      if (!left.hasNext()) {\n        nextL=null;\n        return null;\n      }\n      nextL=left.next();\n      continue;\n    }\n    if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n      if (!right.hasNext()) {\n        nextR=null;\n        return null;\n      }\n      nextR=right.next();\n      continue;\n    }\n    return pair;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 168,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 126,
        "startColumnNumber" : 6,
        "endLineNumber" : 126,
        "endColumnNumber" : 19
      },
      "nodeContext" : "nextL == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 128,
      "startColumnNumber" : 11,
      "endLineNumber" : 128,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 128,
        "startColumnNumber" : 4,
        "endLineNumber" : 128,
        "endColumnNumber" : 16
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 127,
        "startColumnNumber" : 24,
        "endLineNumber" : 129,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 3,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 127,
        "startColumnNumber" : 3,
        "endLineNumber" : 129,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (!left.hasNext()) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 126,
        "startColumnNumber" : 21,
        "endLineNumber" : 131,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!left.hasNext()) {\n    return null;\n  }\n  nextL=left.next();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 126,
        "startColumnNumber" : 2,
        "endLineNumber" : 131,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (nextL == null) {\n  if (!left.hasNext()) {\n    return null;\n  }\n  nextL=left.next();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 111,
        "startColumnNumber" : 33,
        "endLineNumber" : 158,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (nextL != null) {\n    assert nextR != null;\n    int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n    if (cmp <= 0) {\n      nextL=null;\n    }\n    if (cmp >= 0) {\n      nextR=null;\n    }\n  }\n else {\n    assert nextR == null;\n  }\n  if (nextL == null) {\n    if (!left.hasNext()) {\n      return null;\n    }\n    nextL=left.next();\n  }\n  if (nextR == null) {\n    if (!right.hasNext()) {\n      return null;\n    }\n    nextR=right.next();\n  }\n  while (true) {\n    if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n      if (!left.hasNext()) {\n        nextL=null;\n        return null;\n      }\n      nextL=left.next();\n      continue;\n    }\n    if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n      if (!right.hasNext()) {\n        nextR=null;\n        return null;\n      }\n      nextR=right.next();\n      continue;\n    }\n    return pair;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 110,
        "startColumnNumber" : 1,
        "endLineNumber" : 158,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected Pair<L,R> seekNext(){\n  if (nextL != null) {\n    assert nextR != null;\n    int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n    if (cmp <= 0) {\n      nextL=null;\n    }\n    if (cmp >= 0) {\n      nextR=null;\n    }\n  }\n else {\n    assert nextR == null;\n  }\n  if (nextL == null) {\n    if (!left.hasNext()) {\n      return null;\n    }\n    nextL=left.next();\n  }\n  if (nextR == null) {\n    if (!right.hasNext()) {\n      return null;\n    }\n    nextR=right.next();\n  }\n  while (true) {\n    if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n      if (!left.hasNext()) {\n        nextL=null;\n        return null;\n      }\n      nextL=left.next();\n      continue;\n    }\n    if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n      if (!right.hasNext()) {\n        nextR=null;\n        return null;\n      }\n      nextR=right.next();\n      continue;\n    }\n    return pair;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 168,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 128,
        "startColumnNumber" : 4,
        "endLineNumber" : 128,
        "endColumnNumber" : 16
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 132,
      "startColumnNumber" : 15,
      "endLineNumber" : 132,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 132,
        "startColumnNumber" : 6,
        "endLineNumber" : 132,
        "endColumnNumber" : 19
      },
      "nodeContext" : "nextR == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 132,
        "startColumnNumber" : 2,
        "endLineNumber" : 137,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (nextR == null) {\n  if (!right.hasNext()) {\n    return null;\n  }\n  nextR=right.next();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 111,
        "startColumnNumber" : 33,
        "endLineNumber" : 158,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (nextL != null) {\n    assert nextR != null;\n    int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n    if (cmp <= 0) {\n      nextL=null;\n    }\n    if (cmp >= 0) {\n      nextR=null;\n    }\n  }\n else {\n    assert nextR == null;\n  }\n  if (nextL == null) {\n    if (!left.hasNext()) {\n      return null;\n    }\n    nextL=left.next();\n  }\n  if (nextR == null) {\n    if (!right.hasNext()) {\n      return null;\n    }\n    nextR=right.next();\n  }\n  while (true) {\n    if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n      if (!left.hasNext()) {\n        nextL=null;\n        return null;\n      }\n      nextL=left.next();\n      continue;\n    }\n    if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n      if (!right.hasNext()) {\n        nextR=null;\n        return null;\n      }\n      nextR=right.next();\n      continue;\n    }\n    return pair;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 110,
        "startColumnNumber" : 1,
        "endLineNumber" : 158,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected Pair<L,R> seekNext(){\n  if (nextL != null) {\n    assert nextR != null;\n    int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n    if (cmp <= 0) {\n      nextL=null;\n    }\n    if (cmp >= 0) {\n      nextR=null;\n    }\n  }\n else {\n    assert nextR == null;\n  }\n  if (nextL == null) {\n    if (!left.hasNext()) {\n      return null;\n    }\n    nextL=left.next();\n  }\n  if (nextR == null) {\n    if (!right.hasNext()) {\n      return null;\n    }\n    nextR=right.next();\n  }\n  while (true) {\n    if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n      if (!left.hasNext()) {\n        nextL=null;\n        return null;\n      }\n      nextL=left.next();\n      continue;\n    }\n    if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n      if (!right.hasNext()) {\n        nextR=null;\n        return null;\n      }\n      nextR=right.next();\n      continue;\n    }\n    return pair;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 168,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 132,
        "startColumnNumber" : 6,
        "endLineNumber" : 132,
        "endColumnNumber" : 19
      },
      "nodeContext" : "nextR == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 134,
      "startColumnNumber" : 11,
      "endLineNumber" : 134,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 134,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 16
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 133,
        "startColumnNumber" : 25,
        "endLineNumber" : 135,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 3,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 133,
        "startColumnNumber" : 3,
        "endLineNumber" : 135,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (!right.hasNext()) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 132,
        "startColumnNumber" : 21,
        "endLineNumber" : 137,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!right.hasNext()) {\n    return null;\n  }\n  nextR=right.next();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 132,
        "startColumnNumber" : 2,
        "endLineNumber" : 137,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (nextR == null) {\n  if (!right.hasNext()) {\n    return null;\n  }\n  nextR=right.next();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 111,
        "startColumnNumber" : 33,
        "endLineNumber" : 158,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (nextL != null) {\n    assert nextR != null;\n    int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n    if (cmp <= 0) {\n      nextL=null;\n    }\n    if (cmp >= 0) {\n      nextR=null;\n    }\n  }\n else {\n    assert nextR == null;\n  }\n  if (nextL == null) {\n    if (!left.hasNext()) {\n      return null;\n    }\n    nextL=left.next();\n  }\n  if (nextR == null) {\n    if (!right.hasNext()) {\n      return null;\n    }\n    nextR=right.next();\n  }\n  while (true) {\n    if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n      if (!left.hasNext()) {\n        nextL=null;\n        return null;\n      }\n      nextL=left.next();\n      continue;\n    }\n    if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n      if (!right.hasNext()) {\n        nextR=null;\n        return null;\n      }\n      nextR=right.next();\n      continue;\n    }\n    return pair;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 110,
        "startColumnNumber" : 1,
        "endLineNumber" : 158,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected Pair<L,R> seekNext(){\n  if (nextL != null) {\n    assert nextR != null;\n    int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n    if (cmp <= 0) {\n      nextL=null;\n    }\n    if (cmp >= 0) {\n      nextR=null;\n    }\n  }\n else {\n    assert nextR == null;\n  }\n  if (nextL == null) {\n    if (!left.hasNext()) {\n      return null;\n    }\n    nextL=left.next();\n  }\n  if (nextR == null) {\n    if (!right.hasNext()) {\n      return null;\n    }\n    nextR=right.next();\n  }\n  while (true) {\n    if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n      if (!left.hasNext()) {\n        nextL=null;\n        return null;\n      }\n      nextL=left.next();\n      continue;\n    }\n    if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n      if (!right.hasNext()) {\n        nextR=null;\n        return null;\n      }\n      nextR=right.next();\n      continue;\n    }\n    return pair;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 168,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 134,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 16
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 141,
      "startColumnNumber" : 13,
      "endLineNumber" : 141,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 141,
        "startColumnNumber" : 5,
        "endLineNumber" : 141,
        "endColumnNumber" : 17
      },
      "nodeContext" : "nextL=null",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 141,
        "startColumnNumber" : 5,
        "endLineNumber" : 141,
        "endColumnNumber" : 18
      },
      "nodeContext" : "nextL=null;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 140,
        "startColumnNumber" : 25,
        "endLineNumber" : 143,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  nextL=null;\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 140,
        "startColumnNumber" : 4,
        "endLineNumber" : 143,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!left.hasNext()) {\n  nextL=null;\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 139,
        "startColumnNumber" : 88,
        "endLineNumber" : 146,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (!left.hasNext()) {\n    nextL=null;\n    return null;\n  }\n  nextL=left.next();\n  continue;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 139,
        "startColumnNumber" : 3,
        "endLineNumber" : 146,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n  if (!left.hasNext()) {\n    nextL=null;\n    return null;\n  }\n  nextL=left.next();\n  continue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 480,
        "startLineNumber" : 138,
        "startColumnNumber" : 15,
        "endLineNumber" : 157,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n    if (!left.hasNext()) {\n      nextL=null;\n      return null;\n    }\n    nextL=left.next();\n    continue;\n  }\n  if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n    if (!right.hasNext()) {\n      nextR=null;\n      return null;\n    }\n    nextR=right.next();\n    continue;\n  }\n  return pair;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 493,
        "startLineNumber" : 138,
        "startColumnNumber" : 2,
        "endLineNumber" : 157,
        "endColumnNumber" : 3
      },
      "nodeContext" : "while (true) {\n  if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n    if (!left.hasNext()) {\n      nextL=null;\n      return null;\n    }\n    nextL=left.next();\n    continue;\n  }\n  if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n    if (!right.hasNext()) {\n      nextR=null;\n      return null;\n    }\n    nextR=right.next();\n    continue;\n  }\n  return pair;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 71,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 111,
        "startColumnNumber" : 33,
        "endLineNumber" : 158,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (nextL != null) {\n    assert nextR != null;\n    int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n    if (cmp <= 0) {\n      nextL=null;\n    }\n    if (cmp >= 0) {\n      nextR=null;\n    }\n  }\n else {\n    assert nextR == null;\n  }\n  if (nextL == null) {\n    if (!left.hasNext()) {\n      return null;\n    }\n    nextL=left.next();\n  }\n  if (nextR == null) {\n    if (!right.hasNext()) {\n      return null;\n    }\n    nextR=right.next();\n  }\n  while (true) {\n    if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n      if (!left.hasNext()) {\n        nextL=null;\n        return null;\n      }\n      nextL=left.next();\n      continue;\n    }\n    if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n      if (!right.hasNext()) {\n        nextR=null;\n        return null;\n      }\n      nextR=right.next();\n      continue;\n    }\n    return pair;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 110,
        "startColumnNumber" : 1,
        "endLineNumber" : 158,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected Pair<L,R> seekNext(){\n  if (nextL != null) {\n    assert nextR != null;\n    int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n    if (cmp <= 0) {\n      nextL=null;\n    }\n    if (cmp >= 0) {\n      nextR=null;\n    }\n  }\n else {\n    assert nextR == null;\n  }\n  if (nextL == null) {\n    if (!left.hasNext()) {\n      return null;\n    }\n    nextL=left.next();\n  }\n  if (nextR == null) {\n    if (!right.hasNext()) {\n      return null;\n    }\n    nextR=right.next();\n  }\n  while (true) {\n    if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n      if (!left.hasNext()) {\n        nextL=null;\n        return null;\n      }\n      nextL=left.next();\n      continue;\n    }\n    if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n      if (!right.hasNext()) {\n        nextR=null;\n        return null;\n      }\n      nextR=right.next();\n      continue;\n    }\n    return pair;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 168,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 141,
        "startColumnNumber" : 5,
        "endLineNumber" : 141,
        "endColumnNumber" : 18
      },
      "nodeContext" : "nextL=null;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 142,
      "startColumnNumber" : 12,
      "endLineNumber" : 142,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 142,
        "startColumnNumber" : 5,
        "endLineNumber" : 142,
        "endColumnNumber" : 17
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 140,
        "startColumnNumber" : 25,
        "endLineNumber" : 143,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  nextL=null;\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 140,
        "startColumnNumber" : 4,
        "endLineNumber" : 143,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!left.hasNext()) {\n  nextL=null;\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 139,
        "startColumnNumber" : 88,
        "endLineNumber" : 146,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (!left.hasNext()) {\n    nextL=null;\n    return null;\n  }\n  nextL=left.next();\n  continue;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 139,
        "startColumnNumber" : 3,
        "endLineNumber" : 146,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n  if (!left.hasNext()) {\n    nextL=null;\n    return null;\n  }\n  nextL=left.next();\n  continue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 480,
        "startLineNumber" : 138,
        "startColumnNumber" : 15,
        "endLineNumber" : 157,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n    if (!left.hasNext()) {\n      nextL=null;\n      return null;\n    }\n    nextL=left.next();\n    continue;\n  }\n  if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n    if (!right.hasNext()) {\n      nextR=null;\n      return null;\n    }\n    nextR=right.next();\n    continue;\n  }\n  return pair;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 493,
        "startLineNumber" : 138,
        "startColumnNumber" : 2,
        "endLineNumber" : 157,
        "endColumnNumber" : 3
      },
      "nodeContext" : "while (true) {\n  if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n    if (!left.hasNext()) {\n      nextL=null;\n      return null;\n    }\n    nextL=left.next();\n    continue;\n  }\n  if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n    if (!right.hasNext()) {\n      nextR=null;\n      return null;\n    }\n    nextR=right.next();\n    continue;\n  }\n  return pair;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 71,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 111,
        "startColumnNumber" : 33,
        "endLineNumber" : 158,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (nextL != null) {\n    assert nextR != null;\n    int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n    if (cmp <= 0) {\n      nextL=null;\n    }\n    if (cmp >= 0) {\n      nextR=null;\n    }\n  }\n else {\n    assert nextR == null;\n  }\n  if (nextL == null) {\n    if (!left.hasNext()) {\n      return null;\n    }\n    nextL=left.next();\n  }\n  if (nextR == null) {\n    if (!right.hasNext()) {\n      return null;\n    }\n    nextR=right.next();\n  }\n  while (true) {\n    if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n      if (!left.hasNext()) {\n        nextL=null;\n        return null;\n      }\n      nextL=left.next();\n      continue;\n    }\n    if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n      if (!right.hasNext()) {\n        nextR=null;\n        return null;\n      }\n      nextR=right.next();\n      continue;\n    }\n    return pair;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 110,
        "startColumnNumber" : 1,
        "endLineNumber" : 158,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected Pair<L,R> seekNext(){\n  if (nextL != null) {\n    assert nextR != null;\n    int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n    if (cmp <= 0) {\n      nextL=null;\n    }\n    if (cmp >= 0) {\n      nextR=null;\n    }\n  }\n else {\n    assert nextR == null;\n  }\n  if (nextL == null) {\n    if (!left.hasNext()) {\n      return null;\n    }\n    nextL=left.next();\n  }\n  if (nextR == null) {\n    if (!right.hasNext()) {\n      return null;\n    }\n    nextR=right.next();\n  }\n  while (true) {\n    if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n      if (!left.hasNext()) {\n        nextL=null;\n        return null;\n      }\n      nextL=left.next();\n      continue;\n    }\n    if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n      if (!right.hasNext()) {\n        nextR=null;\n        return null;\n      }\n      nextR=right.next();\n      continue;\n    }\n    return pair;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 168,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 142,
        "startColumnNumber" : 5,
        "endLineNumber" : 142,
        "endColumnNumber" : 17
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 149,
      "startColumnNumber" : 13,
      "endLineNumber" : 149,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 149,
        "startColumnNumber" : 5,
        "endLineNumber" : 149,
        "endColumnNumber" : 17
      },
      "nodeContext" : "nextR=null",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 149,
        "startColumnNumber" : 5,
        "endLineNumber" : 149,
        "endColumnNumber" : 18
      },
      "nodeContext" : "nextR=null;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 148,
        "startColumnNumber" : 26,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  nextR=null;\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 148,
        "startColumnNumber" : 4,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!right.hasNext()) {\n  nextR=null;\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 147,
        "startColumnNumber" : 88,
        "endLineNumber" : 154,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (!right.hasNext()) {\n    nextR=null;\n    return null;\n  }\n  nextR=right.next();\n  continue;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 209,
        "startLineNumber" : 147,
        "startColumnNumber" : 3,
        "endLineNumber" : 154,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n  if (!right.hasNext()) {\n    nextR=null;\n    return null;\n  }\n  nextR=right.next();\n  continue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 480,
        "startLineNumber" : 138,
        "startColumnNumber" : 15,
        "endLineNumber" : 157,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n    if (!left.hasNext()) {\n      nextL=null;\n      return null;\n    }\n    nextL=left.next();\n    continue;\n  }\n  if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n    if (!right.hasNext()) {\n      nextR=null;\n      return null;\n    }\n    nextR=right.next();\n    continue;\n  }\n  return pair;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 493,
        "startLineNumber" : 138,
        "startColumnNumber" : 2,
        "endLineNumber" : 157,
        "endColumnNumber" : 3
      },
      "nodeContext" : "while (true) {\n  if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n    if (!left.hasNext()) {\n      nextL=null;\n      return null;\n    }\n    nextL=left.next();\n    continue;\n  }\n  if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n    if (!right.hasNext()) {\n      nextR=null;\n      return null;\n    }\n    nextR=right.next();\n    continue;\n  }\n  return pair;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 71,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 111,
        "startColumnNumber" : 33,
        "endLineNumber" : 158,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (nextL != null) {\n    assert nextR != null;\n    int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n    if (cmp <= 0) {\n      nextL=null;\n    }\n    if (cmp >= 0) {\n      nextR=null;\n    }\n  }\n else {\n    assert nextR == null;\n  }\n  if (nextL == null) {\n    if (!left.hasNext()) {\n      return null;\n    }\n    nextL=left.next();\n  }\n  if (nextR == null) {\n    if (!right.hasNext()) {\n      return null;\n    }\n    nextR=right.next();\n  }\n  while (true) {\n    if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n      if (!left.hasNext()) {\n        nextL=null;\n        return null;\n      }\n      nextL=left.next();\n      continue;\n    }\n    if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n      if (!right.hasNext()) {\n        nextR=null;\n        return null;\n      }\n      nextR=right.next();\n      continue;\n    }\n    return pair;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 110,
        "startColumnNumber" : 1,
        "endLineNumber" : 158,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected Pair<L,R> seekNext(){\n  if (nextL != null) {\n    assert nextR != null;\n    int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n    if (cmp <= 0) {\n      nextL=null;\n    }\n    if (cmp >= 0) {\n      nextR=null;\n    }\n  }\n else {\n    assert nextR == null;\n  }\n  if (nextL == null) {\n    if (!left.hasNext()) {\n      return null;\n    }\n    nextL=left.next();\n  }\n  if (nextR == null) {\n    if (!right.hasNext()) {\n      return null;\n    }\n    nextR=right.next();\n  }\n  while (true) {\n    if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n      if (!left.hasNext()) {\n        nextL=null;\n        return null;\n      }\n      nextL=left.next();\n      continue;\n    }\n    if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n      if (!right.hasNext()) {\n        nextR=null;\n        return null;\n      }\n      nextR=right.next();\n      continue;\n    }\n    return pair;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 168,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 149,
        "startColumnNumber" : 5,
        "endLineNumber" : 149,
        "endColumnNumber" : 18
      },
      "nodeContext" : "nextR=null;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 150,
      "startColumnNumber" : 12,
      "endLineNumber" : 150,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 150,
        "startColumnNumber" : 5,
        "endLineNumber" : 150,
        "endColumnNumber" : 17
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 148,
        "startColumnNumber" : 26,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  nextR=null;\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 148,
        "startColumnNumber" : 4,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!right.hasNext()) {\n  nextR=null;\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 147,
        "startColumnNumber" : 88,
        "endLineNumber" : 154,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (!right.hasNext()) {\n    nextR=null;\n    return null;\n  }\n  nextR=right.next();\n  continue;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 209,
        "startLineNumber" : 147,
        "startColumnNumber" : 3,
        "endLineNumber" : 154,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n  if (!right.hasNext()) {\n    nextR=null;\n    return null;\n  }\n  nextR=right.next();\n  continue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 480,
        "startLineNumber" : 138,
        "startColumnNumber" : 15,
        "endLineNumber" : 157,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n    if (!left.hasNext()) {\n      nextL=null;\n      return null;\n    }\n    nextL=left.next();\n    continue;\n  }\n  if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n    if (!right.hasNext()) {\n      nextR=null;\n      return null;\n    }\n    nextR=right.next();\n    continue;\n  }\n  return pair;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 493,
        "startLineNumber" : 138,
        "startColumnNumber" : 2,
        "endLineNumber" : 157,
        "endColumnNumber" : 3
      },
      "nodeContext" : "while (true) {\n  if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n    if (!left.hasNext()) {\n      nextL=null;\n      return null;\n    }\n    nextL=left.next();\n    continue;\n  }\n  if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n    if (!right.hasNext()) {\n      nextR=null;\n      return null;\n    }\n    nextR=right.next();\n    continue;\n  }\n  return pair;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 71,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 111,
        "startColumnNumber" : 33,
        "endLineNumber" : 158,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (nextL != null) {\n    assert nextR != null;\n    int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n    if (cmp <= 0) {\n      nextL=null;\n    }\n    if (cmp >= 0) {\n      nextR=null;\n    }\n  }\n else {\n    assert nextR == null;\n  }\n  if (nextL == null) {\n    if (!left.hasNext()) {\n      return null;\n    }\n    nextL=left.next();\n  }\n  if (nextR == null) {\n    if (!right.hasNext()) {\n      return null;\n    }\n    nextR=right.next();\n  }\n  while (true) {\n    if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n      if (!left.hasNext()) {\n        nextL=null;\n        return null;\n      }\n      nextL=left.next();\n      continue;\n    }\n    if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n      if (!right.hasNext()) {\n        nextR=null;\n        return null;\n      }\n      nextR=right.next();\n      continue;\n    }\n    return pair;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 110,
        "startColumnNumber" : 1,
        "endLineNumber" : 158,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected Pair<L,R> seekNext(){\n  if (nextL != null) {\n    assert nextR != null;\n    int cmp=leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMaxAddress(nextR));\n    if (cmp <= 0) {\n      nextL=null;\n    }\n    if (cmp >= 0) {\n      nextR=null;\n    }\n  }\n else {\n    assert nextR == null;\n  }\n  if (nextL == null) {\n    if (!left.hasNext()) {\n      return null;\n    }\n    nextL=left.next();\n  }\n  if (nextR == null) {\n    if (!right.hasNext()) {\n      return null;\n    }\n    nextR=right.next();\n  }\n  while (true) {\n    if (leftRanger.getMaxAddress(nextL).compareTo(rightRanger.getMinAddress(nextR)) < 0) {\n      if (!left.hasNext()) {\n        nextL=null;\n        return null;\n      }\n      nextL=left.next();\n      continue;\n    }\n    if (rightRanger.getMaxAddress(nextR).compareTo(leftRanger.getMinAddress(nextL)) < 0) {\n      if (!right.hasNext()) {\n        nextR=null;\n        return null;\n      }\n      nextR=right.next();\n      continue;\n    }\n    return pair;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 168,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 150,
        "startColumnNumber" : 5,
        "endLineNumber" : 150,
        "endColumnNumber" : 17
      },
      "nodeContext" : "return null;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 112,
    "startColumnNumber" : 15,
    "endLineNumber" : 112,
    "endColumnNumber" : 19
  }, {
    "charLength" : 4,
    "startLineNumber" : 113,
    "startColumnNumber" : 19,
    "endLineNumber" : 113,
    "endColumnNumber" : 23
  }, {
    "charLength" : 4,
    "startLineNumber" : 116,
    "startColumnNumber" : 12,
    "endLineNumber" : 116,
    "endColumnNumber" : 16
  }, {
    "charLength" : 4,
    "startLineNumber" : 119,
    "startColumnNumber" : 12,
    "endLineNumber" : 119,
    "endColumnNumber" : 16
  }, {
    "charLength" : 4,
    "startLineNumber" : 123,
    "startColumnNumber" : 19,
    "endLineNumber" : 123,
    "endColumnNumber" : 23
  }, {
    "charLength" : 4,
    "startLineNumber" : 126,
    "startColumnNumber" : 15,
    "endLineNumber" : 126,
    "endColumnNumber" : 19
  }, {
    "charLength" : 4,
    "startLineNumber" : 128,
    "startColumnNumber" : 11,
    "endLineNumber" : 128,
    "endColumnNumber" : 15
  }, {
    "charLength" : 4,
    "startLineNumber" : 132,
    "startColumnNumber" : 15,
    "endLineNumber" : 132,
    "endColumnNumber" : 19
  }, {
    "charLength" : 4,
    "startLineNumber" : 134,
    "startColumnNumber" : 11,
    "endLineNumber" : 134,
    "endColumnNumber" : 15
  }, {
    "charLength" : 4,
    "startLineNumber" : 141,
    "startColumnNumber" : 13,
    "endLineNumber" : 141,
    "endColumnNumber" : 17
  }, {
    "charLength" : 4,
    "startLineNumber" : 142,
    "startColumnNumber" : 12,
    "endLineNumber" : 142,
    "endColumnNumber" : 16
  }, {
    "charLength" : 4,
    "startLineNumber" : 149,
    "startColumnNumber" : 13,
    "endLineNumber" : 149,
    "endColumnNumber" : 17
  }, {
    "charLength" : 4,
    "startLineNumber" : 150,
    "startColumnNumber" : 12,
    "endLineNumber" : 150,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 12,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 12,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 8
  }, {
    "firstKey" : 9,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 10,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 8,
    "layout" : 7
  }, {
    "firstKey" : 10,
    "secondKey" : 9,
    "layout" : 1
  }, {
    "firstKey" : 10,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 12,
    "layout" : 5
  }, {
    "firstKey" : 11,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 8,
    "layout" : 8
  }, {
    "firstKey" : 11,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 11,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 11,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 12,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 12,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 12,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 12,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 12,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 12,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 12,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 12,
    "secondKey" : 8,
    "layout" : 7
  }, {
    "firstKey" : 12,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 12,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 12,
    "secondKey" : 11,
    "layout" : 1
  } ]
}