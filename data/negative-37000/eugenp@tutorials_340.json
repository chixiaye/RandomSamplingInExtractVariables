{
  "id" : 340,
  "expression" : "OutputKeys.INDENT",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/xml/src/main/java/com/baeldung/xml/XMLDocumentWriter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "OutputKeys.INDENT",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 27,
      "startColumnNumber" : 46,
      "endLineNumber" : 27,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 27,
        "startColumnNumber" : 16,
        "endLineNumber" : 27,
        "endColumnNumber" : 71
      },
      "nodeContext" : "transformer.setOutputProperty(OutputKeys.INDENT,\"yes\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 27,
        "startColumnNumber" : 16,
        "endLineNumber" : 27,
        "endColumnNumber" : 72
      },
      "nodeContext" : "transformer.setOutputProperty(OutputKeys.INDENT,\"yes\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 26,
        "startColumnNumber" : 28,
        "endLineNumber" : 29,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  transformer.setOutputProperty(OutputKeys.INDENT,\"yes\");\n  transformer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\",\"2\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 201,
        "startLineNumber" : 26,
        "startColumnNumber" : 12,
        "endLineNumber" : 29,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (prettyPrint) {\n  transformer.setOutputProperty(OutputKeys.INDENT,\"yes\");\n  transformer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\",\"2\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 691,
        "startLineNumber" : 20,
        "startColumnNumber" : 68,
        "endLineNumber" : 33,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  TransformerFactory transformerFactory=TransformerFactory.newInstance();\n  Transformer transformer=transformerFactory.newTransformer();\n  if (excludeDeclaration) {\n    transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION,\"yes\");\n  }\n  if (prettyPrint) {\n    transformer.setOutputProperty(OutputKeys.INDENT,\"yes\");\n    transformer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\",\"2\");\n  }\n  DOMSource source=new DOMSource(document);\n  StreamResult result=new StreamResult(writer);\n  transformer.transform(source,result);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1034,
        "startLineNumber" : 20,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (FileWriter writer=new FileWriter(new File(fileName))){\n  TransformerFactory transformerFactory=TransformerFactory.newInstance();\n  Transformer transformer=transformerFactory.newTransformer();\n  if (excludeDeclaration) {\n    transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION,\"yes\");\n  }\n  if (prettyPrint) {\n    transformer.setOutputProperty(OutputKeys.INDENT,\"yes\");\n    transformer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\",\"2\");\n  }\n  DOMSource source=new DOMSource(document);\n  StreamResult result=new StreamResult(writer);\n  transformer.transform(source,result);\n}\n catch (IOException e) {\n  throw new IllegalArgumentException(e);\n}\ncatch (TransformerConfigurationException e) {\n  throw new IllegalStateException(e);\n}\ncatch (TransformerException e) {\n  throw new IllegalArgumentException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 115,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1050,
        "startLineNumber" : 19,
        "startColumnNumber" : 107,
        "endLineNumber" : 40,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try (FileWriter writer=new FileWriter(new File(fileName))){\n    TransformerFactory transformerFactory=TransformerFactory.newInstance();\n    Transformer transformer=transformerFactory.newTransformer();\n    if (excludeDeclaration) {\n      transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION,\"yes\");\n    }\n    if (prettyPrint) {\n      transformer.setOutputProperty(OutputKeys.INDENT,\"yes\");\n      transformer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\",\"2\");\n    }\n    DOMSource source=new DOMSource(document);\n    StreamResult result=new StreamResult(writer);\n    transformer.transform(source,result);\n  }\n catch (  IOException e) {\n    throw new IllegalArgumentException(e);\n  }\ncatch (  TransformerConfigurationException e) {\n    throw new IllegalStateException(e);\n  }\ncatch (  TransformerException e) {\n    throw new IllegalArgumentException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1153,
        "startLineNumber" : 19,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void write(Document document,String fileName,boolean excludeDeclaration,boolean prettyPrint){\n  try (FileWriter writer=new FileWriter(new File(fileName))){\n    TransformerFactory transformerFactory=TransformerFactory.newInstance();\n    Transformer transformer=transformerFactory.newTransformer();\n    if (excludeDeclaration) {\n      transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION,\"yes\");\n    }\n    if (prettyPrint) {\n      transformer.setOutputProperty(OutputKeys.INDENT,\"yes\");\n      transformer.setOutputProperty(\"{http://xml.apache.org/xslt}indent-amount\",\"2\");\n    }\n    DOMSource source=new DOMSource(document);\n    StreamResult result=new StreamResult(writer);\n    transformer.transform(source,result);\n  }\n catch (  IOException e) {\n    throw new IllegalArgumentException(e);\n  }\ncatch (  TransformerConfigurationException e) {\n    throw new IllegalStateException(e);\n  }\ncatch (  TransformerException e) {\n    throw new IllegalArgumentException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 27,
        "startColumnNumber" : 16,
        "endLineNumber" : 27,
        "endColumnNumber" : 72
      },
      "nodeContext" : "transformer.setOutputProperty(OutputKeys.INDENT,\"yes\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 27,
    "startColumnNumber" : 46,
    "endLineNumber" : 27,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ]
}