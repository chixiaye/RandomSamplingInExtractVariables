{
  "id" : 324,
  "expression" : "newInterest",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-server/src/main/java/com/netflix/eureka2/server/channel/InterestNotificationMultiplexer.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "newInterest",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 59,
      "startColumnNumber" : 12,
      "endLineNumber" : 59,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 59,
        "endColumnNumber" : 52
      },
      "nodeContext" : "newInterest instanceof MultipleInterests",
      "nodeType" : "InstanceofExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1272,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (newInterest instanceof MultipleInterests) {\n  Set<Interest<InstanceInfo>> newInterestSet=((MultipleInterests<InstanceInfo>)newInterest).flatten();\n  Set<Interest<InstanceInfo>> toRemove=new HashSet<>(subscriptionBreakers.keySet());\n  toRemove.removeAll(newInterestSet);\n  for (  Interest<InstanceInfo> item : toRemove) {\n    removeInterest(item);\n  }\n  Set<Interest<InstanceInfo>> toAdd=new HashSet<>(newInterestSet);\n  toAdd.removeAll(subscriptionBreakers.keySet());\n  for (  Interest<InstanceInfo> item : toAdd) {\n    subscribeToInterest(item);\n  }\n}\n else {\n  Set<Interest<InstanceInfo>> toRemove=new HashSet<>(subscriptionBreakers.keySet());\n  toRemove.remove(newInterest);\n  for (  Interest<InstanceInfo> item : toRemove) {\n    removeInterest(item);\n  }\n  if (subscriptionBreakers.isEmpty()) {\n    subscribeToInterest(newInterest);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 148,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1288,
        "startLineNumber" : 58,
        "startColumnNumber" : 59,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (newInterest instanceof MultipleInterests) {\n    Set<Interest<InstanceInfo>> newInterestSet=((MultipleInterests<InstanceInfo>)newInterest).flatten();\n    Set<Interest<InstanceInfo>> toRemove=new HashSet<>(subscriptionBreakers.keySet());\n    toRemove.removeAll(newInterestSet);\n    for (    Interest<InstanceInfo> item : toRemove) {\n      removeInterest(item);\n    }\n    Set<Interest<InstanceInfo>> toAdd=new HashSet<>(newInterestSet);\n    toAdd.removeAll(subscriptionBreakers.keySet());\n    for (    Interest<InstanceInfo> item : toAdd) {\n      subscribeToInterest(item);\n    }\n  }\n else {\n    Set<Interest<InstanceInfo>> toRemove=new HashSet<>(subscriptionBreakers.keySet());\n    toRemove.remove(newInterest);\n    for (    Interest<InstanceInfo> item : toRemove) {\n      removeInterest(item);\n    }\n    if (subscriptionBreakers.isEmpty()) {\n      subscribeToInterest(newInterest);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 149,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1472,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * For composite interest, we flatten it first, and than make parallel subscriptionBreakers to the registry.\n */\npublic void update(Interest<InstanceInfo> newInterest){\n  if (newInterest instanceof MultipleInterests) {\n    Set<Interest<InstanceInfo>> newInterestSet=((MultipleInterests<InstanceInfo>)newInterest).flatten();\n    Set<Interest<InstanceInfo>> toRemove=new HashSet<>(subscriptionBreakers.keySet());\n    toRemove.removeAll(newInterestSet);\n    for (    Interest<InstanceInfo> item : toRemove) {\n      removeInterest(item);\n    }\n    Set<Interest<InstanceInfo>> toAdd=new HashSet<>(newInterestSet);\n    toAdd.removeAll(subscriptionBreakers.keySet());\n    for (    Interest<InstanceInfo> item : toAdd) {\n      subscribeToInterest(item);\n    }\n  }\n else {\n    Set<Interest<InstanceInfo>> toRemove=new HashSet<>(subscriptionBreakers.keySet());\n    toRemove.remove(newInterest);\n    for (    Interest<InstanceInfo> item : toRemove) {\n      removeInterest(item);\n    }\n    if (subscriptionBreakers.isEmpty()) {\n      subscribeToInterest(newInterest);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 161,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 59,
        "endColumnNumber" : 52
      },
      "nodeContext" : "newInterest instanceof MultipleInterests",
      "nodeType" : "InstanceofExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.netflix.eureka2.interests.Interest<com.netflix.eureka2.registry.instance.InstanceInfo>"
  }, {
    "nodeContext" : "newInterest",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 60,
      "startColumnNumber" : 92,
      "endLineNumber" : 60,
      "endColumnNumber" : 103
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 60,
        "startColumnNumber" : 58,
        "endLineNumber" : 60,
        "endColumnNumber" : 103
      },
      "nodeContext" : "(MultipleInterests<InstanceInfo>)newInterest",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 60,
        "startColumnNumber" : 57,
        "endLineNumber" : 60,
        "endColumnNumber" : 104
      },
      "nodeContext" : "((MultipleInterests<InstanceInfo>)newInterest)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 60,
        "startColumnNumber" : 57,
        "endLineNumber" : 60,
        "endColumnNumber" : 114
      },
      "nodeContext" : "((MultipleInterests<InstanceInfo>)newInterest).flatten()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 60,
        "startColumnNumber" : 40,
        "endLineNumber" : 60,
        "endColumnNumber" : 114
      },
      "nodeContext" : "newInterestSet=((MultipleInterests<InstanceInfo>)newInterest).flatten()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 115
      },
      "nodeContext" : "Set<Interest<InstanceInfo>> newInterestSet=((MultipleInterests<InstanceInfo>)newInterest).flatten();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 736,
        "startLineNumber" : 59,
        "startColumnNumber" : 54,
        "endLineNumber" : 73,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Set<Interest<InstanceInfo>> newInterestSet=((MultipleInterests<InstanceInfo>)newInterest).flatten();\n  Set<Interest<InstanceInfo>> toRemove=new HashSet<>(subscriptionBreakers.keySet());\n  toRemove.removeAll(newInterestSet);\n  for (  Interest<InstanceInfo> item : toRemove) {\n    removeInterest(item);\n  }\n  Set<Interest<InstanceInfo>> toAdd=new HashSet<>(newInterestSet);\n  toAdd.removeAll(subscriptionBreakers.keySet());\n  for (  Interest<InstanceInfo> item : toAdd) {\n    subscribeToInterest(item);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 96,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1272,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (newInterest instanceof MultipleInterests) {\n  Set<Interest<InstanceInfo>> newInterestSet=((MultipleInterests<InstanceInfo>)newInterest).flatten();\n  Set<Interest<InstanceInfo>> toRemove=new HashSet<>(subscriptionBreakers.keySet());\n  toRemove.removeAll(newInterestSet);\n  for (  Interest<InstanceInfo> item : toRemove) {\n    removeInterest(item);\n  }\n  Set<Interest<InstanceInfo>> toAdd=new HashSet<>(newInterestSet);\n  toAdd.removeAll(subscriptionBreakers.keySet());\n  for (  Interest<InstanceInfo> item : toAdd) {\n    subscribeToInterest(item);\n  }\n}\n else {\n  Set<Interest<InstanceInfo>> toRemove=new HashSet<>(subscriptionBreakers.keySet());\n  toRemove.remove(newInterest);\n  for (  Interest<InstanceInfo> item : toRemove) {\n    removeInterest(item);\n  }\n  if (subscriptionBreakers.isEmpty()) {\n    subscribeToInterest(newInterest);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 148,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1288,
        "startLineNumber" : 58,
        "startColumnNumber" : 59,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (newInterest instanceof MultipleInterests) {\n    Set<Interest<InstanceInfo>> newInterestSet=((MultipleInterests<InstanceInfo>)newInterest).flatten();\n    Set<Interest<InstanceInfo>> toRemove=new HashSet<>(subscriptionBreakers.keySet());\n    toRemove.removeAll(newInterestSet);\n    for (    Interest<InstanceInfo> item : toRemove) {\n      removeInterest(item);\n    }\n    Set<Interest<InstanceInfo>> toAdd=new HashSet<>(newInterestSet);\n    toAdd.removeAll(subscriptionBreakers.keySet());\n    for (    Interest<InstanceInfo> item : toAdd) {\n      subscribeToInterest(item);\n    }\n  }\n else {\n    Set<Interest<InstanceInfo>> toRemove=new HashSet<>(subscriptionBreakers.keySet());\n    toRemove.remove(newInterest);\n    for (    Interest<InstanceInfo> item : toRemove) {\n      removeInterest(item);\n    }\n    if (subscriptionBreakers.isEmpty()) {\n      subscribeToInterest(newInterest);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 149,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1472,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * For composite interest, we flatten it first, and than make parallel subscriptionBreakers to the registry.\n */\npublic void update(Interest<InstanceInfo> newInterest){\n  if (newInterest instanceof MultipleInterests) {\n    Set<Interest<InstanceInfo>> newInterestSet=((MultipleInterests<InstanceInfo>)newInterest).flatten();\n    Set<Interest<InstanceInfo>> toRemove=new HashSet<>(subscriptionBreakers.keySet());\n    toRemove.removeAll(newInterestSet);\n    for (    Interest<InstanceInfo> item : toRemove) {\n      removeInterest(item);\n    }\n    Set<Interest<InstanceInfo>> toAdd=new HashSet<>(newInterestSet);\n    toAdd.removeAll(subscriptionBreakers.keySet());\n    for (    Interest<InstanceInfo> item : toAdd) {\n      subscribeToInterest(item);\n    }\n  }\n else {\n    Set<Interest<InstanceInfo>> toRemove=new HashSet<>(subscriptionBreakers.keySet());\n    toRemove.remove(newInterest);\n    for (    Interest<InstanceInfo> item : toRemove) {\n      removeInterest(item);\n    }\n    if (subscriptionBreakers.isEmpty()) {\n      subscribeToInterest(newInterest);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 161,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 115
      },
      "nodeContext" : "Set<Interest<InstanceInfo>> newInterestSet=((MultipleInterests<InstanceInfo>)newInterest).flatten();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "com.netflix.eureka2.interests.Interest<com.netflix.eureka2.registry.instance.InstanceInfo>"
  }, {
    "nodeContext" : "newInterest",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 76,
      "startColumnNumber" : 28,
      "endLineNumber" : 76,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 76,
        "startColumnNumber" : 12,
        "endLineNumber" : 76,
        "endColumnNumber" : 40
      },
      "nodeContext" : "toRemove.remove(newInterest)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 76,
        "startColumnNumber" : 12,
        "endLineNumber" : 76,
        "endColumnNumber" : 41
      },
      "nodeContext" : "toRemove.remove(newInterest);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 484,
        "startLineNumber" : 73,
        "startColumnNumber" : 15,
        "endLineNumber" : 84,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Set<Interest<InstanceInfo>> toRemove=new HashSet<>(subscriptionBreakers.keySet());\n  toRemove.remove(newInterest);\n  for (  Interest<InstanceInfo> item : toRemove) {\n    removeInterest(item);\n  }\n  if (subscriptionBreakers.isEmpty()) {\n    subscribeToInterest(newInterest);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1272,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (newInterest instanceof MultipleInterests) {\n  Set<Interest<InstanceInfo>> newInterestSet=((MultipleInterests<InstanceInfo>)newInterest).flatten();\n  Set<Interest<InstanceInfo>> toRemove=new HashSet<>(subscriptionBreakers.keySet());\n  toRemove.removeAll(newInterestSet);\n  for (  Interest<InstanceInfo> item : toRemove) {\n    removeInterest(item);\n  }\n  Set<Interest<InstanceInfo>> toAdd=new HashSet<>(newInterestSet);\n  toAdd.removeAll(subscriptionBreakers.keySet());\n  for (  Interest<InstanceInfo> item : toAdd) {\n    subscribeToInterest(item);\n  }\n}\n else {\n  Set<Interest<InstanceInfo>> toRemove=new HashSet<>(subscriptionBreakers.keySet());\n  toRemove.remove(newInterest);\n  for (  Interest<InstanceInfo> item : toRemove) {\n    removeInterest(item);\n  }\n  if (subscriptionBreakers.isEmpty()) {\n    subscribeToInterest(newInterest);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 148,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1288,
        "startLineNumber" : 58,
        "startColumnNumber" : 59,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (newInterest instanceof MultipleInterests) {\n    Set<Interest<InstanceInfo>> newInterestSet=((MultipleInterests<InstanceInfo>)newInterest).flatten();\n    Set<Interest<InstanceInfo>> toRemove=new HashSet<>(subscriptionBreakers.keySet());\n    toRemove.removeAll(newInterestSet);\n    for (    Interest<InstanceInfo> item : toRemove) {\n      removeInterest(item);\n    }\n    Set<Interest<InstanceInfo>> toAdd=new HashSet<>(newInterestSet);\n    toAdd.removeAll(subscriptionBreakers.keySet());\n    for (    Interest<InstanceInfo> item : toAdd) {\n      subscribeToInterest(item);\n    }\n  }\n else {\n    Set<Interest<InstanceInfo>> toRemove=new HashSet<>(subscriptionBreakers.keySet());\n    toRemove.remove(newInterest);\n    for (    Interest<InstanceInfo> item : toRemove) {\n      removeInterest(item);\n    }\n    if (subscriptionBreakers.isEmpty()) {\n      subscribeToInterest(newInterest);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 149,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1472,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * For composite interest, we flatten it first, and than make parallel subscriptionBreakers to the registry.\n */\npublic void update(Interest<InstanceInfo> newInterest){\n  if (newInterest instanceof MultipleInterests) {\n    Set<Interest<InstanceInfo>> newInterestSet=((MultipleInterests<InstanceInfo>)newInterest).flatten();\n    Set<Interest<InstanceInfo>> toRemove=new HashSet<>(subscriptionBreakers.keySet());\n    toRemove.removeAll(newInterestSet);\n    for (    Interest<InstanceInfo> item : toRemove) {\n      removeInterest(item);\n    }\n    Set<Interest<InstanceInfo>> toAdd=new HashSet<>(newInterestSet);\n    toAdd.removeAll(subscriptionBreakers.keySet());\n    for (    Interest<InstanceInfo> item : toAdd) {\n      subscribeToInterest(item);\n    }\n  }\n else {\n    Set<Interest<InstanceInfo>> toRemove=new HashSet<>(subscriptionBreakers.keySet());\n    toRemove.remove(newInterest);\n    for (    Interest<InstanceInfo> item : toRemove) {\n      removeInterest(item);\n    }\n    if (subscriptionBreakers.isEmpty()) {\n      subscribeToInterest(newInterest);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 161,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 76,
        "startColumnNumber" : 12,
        "endLineNumber" : 76,
        "endColumnNumber" : 41
      },
      "nodeContext" : "toRemove.remove(newInterest);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.netflix.eureka2.interests.Interest<com.netflix.eureka2.registry.instance.InstanceInfo>"
  }, {
    "nodeContext" : "newInterest",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 82,
      "startColumnNumber" : 36,
      "endLineNumber" : 82,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 82,
        "startColumnNumber" : 16,
        "endLineNumber" : 82,
        "endColumnNumber" : 48
      },
      "nodeContext" : "subscribeToInterest(newInterest)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 82,
        "startColumnNumber" : 16,
        "endLineNumber" : 82,
        "endColumnNumber" : 49
      },
      "nodeContext" : "subscribeToInterest(newInterest);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 81,
        "startColumnNumber" : 48,
        "endLineNumber" : 83,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  subscribeToInterest(newInterest);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 81,
        "startColumnNumber" : 12,
        "endLineNumber" : 83,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (subscriptionBreakers.isEmpty()) {\n  subscribeToInterest(newInterest);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 484,
        "startLineNumber" : 73,
        "startColumnNumber" : 15,
        "endLineNumber" : 84,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Set<Interest<InstanceInfo>> toRemove=new HashSet<>(subscriptionBreakers.keySet());\n  toRemove.remove(newInterest);\n  for (  Interest<InstanceInfo> item : toRemove) {\n    removeInterest(item);\n  }\n  if (subscriptionBreakers.isEmpty()) {\n    subscribeToInterest(newInterest);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1272,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (newInterest instanceof MultipleInterests) {\n  Set<Interest<InstanceInfo>> newInterestSet=((MultipleInterests<InstanceInfo>)newInterest).flatten();\n  Set<Interest<InstanceInfo>> toRemove=new HashSet<>(subscriptionBreakers.keySet());\n  toRemove.removeAll(newInterestSet);\n  for (  Interest<InstanceInfo> item : toRemove) {\n    removeInterest(item);\n  }\n  Set<Interest<InstanceInfo>> toAdd=new HashSet<>(newInterestSet);\n  toAdd.removeAll(subscriptionBreakers.keySet());\n  for (  Interest<InstanceInfo> item : toAdd) {\n    subscribeToInterest(item);\n  }\n}\n else {\n  Set<Interest<InstanceInfo>> toRemove=new HashSet<>(subscriptionBreakers.keySet());\n  toRemove.remove(newInterest);\n  for (  Interest<InstanceInfo> item : toRemove) {\n    removeInterest(item);\n  }\n  if (subscriptionBreakers.isEmpty()) {\n    subscribeToInterest(newInterest);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 148,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1288,
        "startLineNumber" : 58,
        "startColumnNumber" : 59,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (newInterest instanceof MultipleInterests) {\n    Set<Interest<InstanceInfo>> newInterestSet=((MultipleInterests<InstanceInfo>)newInterest).flatten();\n    Set<Interest<InstanceInfo>> toRemove=new HashSet<>(subscriptionBreakers.keySet());\n    toRemove.removeAll(newInterestSet);\n    for (    Interest<InstanceInfo> item : toRemove) {\n      removeInterest(item);\n    }\n    Set<Interest<InstanceInfo>> toAdd=new HashSet<>(newInterestSet);\n    toAdd.removeAll(subscriptionBreakers.keySet());\n    for (    Interest<InstanceInfo> item : toAdd) {\n      subscribeToInterest(item);\n    }\n  }\n else {\n    Set<Interest<InstanceInfo>> toRemove=new HashSet<>(subscriptionBreakers.keySet());\n    toRemove.remove(newInterest);\n    for (    Interest<InstanceInfo> item : toRemove) {\n      removeInterest(item);\n    }\n    if (subscriptionBreakers.isEmpty()) {\n      subscribeToInterest(newInterest);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 149,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1472,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * For composite interest, we flatten it first, and than make parallel subscriptionBreakers to the registry.\n */\npublic void update(Interest<InstanceInfo> newInterest){\n  if (newInterest instanceof MultipleInterests) {\n    Set<Interest<InstanceInfo>> newInterestSet=((MultipleInterests<InstanceInfo>)newInterest).flatten();\n    Set<Interest<InstanceInfo>> toRemove=new HashSet<>(subscriptionBreakers.keySet());\n    toRemove.removeAll(newInterestSet);\n    for (    Interest<InstanceInfo> item : toRemove) {\n      removeInterest(item);\n    }\n    Set<Interest<InstanceInfo>> toAdd=new HashSet<>(newInterestSet);\n    toAdd.removeAll(subscriptionBreakers.keySet());\n    for (    Interest<InstanceInfo> item : toAdd) {\n      subscribeToInterest(item);\n    }\n  }\n else {\n    Set<Interest<InstanceInfo>> toRemove=new HashSet<>(subscriptionBreakers.keySet());\n    toRemove.remove(newInterest);\n    for (    Interest<InstanceInfo> item : toRemove) {\n      removeInterest(item);\n    }\n    if (subscriptionBreakers.isEmpty()) {\n      subscribeToInterest(newInterest);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 161,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 82,
        "startColumnNumber" : 16,
        "endLineNumber" : 82,
        "endColumnNumber" : 49
      },
      "nodeContext" : "subscribeToInterest(newInterest);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.netflix.eureka2.interests.Interest<com.netflix.eureka2.registry.instance.InstanceInfo>"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 59,
    "startColumnNumber" : 12,
    "endLineNumber" : 59,
    "endColumnNumber" : 23
  }, {
    "charLength" : 11,
    "startLineNumber" : 60,
    "startColumnNumber" : 92,
    "endLineNumber" : 60,
    "endColumnNumber" : 103
  }, {
    "charLength" : 11,
    "startLineNumber" : 76,
    "startColumnNumber" : 28,
    "endLineNumber" : 76,
    "endColumnNumber" : 39
  }, {
    "charLength" : 11,
    "startLineNumber" : 82,
    "startColumnNumber" : 36,
    "endLineNumber" : 82,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  } ]
}