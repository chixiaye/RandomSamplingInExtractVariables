{
  "id" : 264,
  "expression" : "pattern",
  "projectName" : "java-decompiler@jd-gui",
  "commitID" : "fbc5b14d66b37b88bf1dc18386b530e874550240",
  "filePath" : "/services/src/main/java/org/jd/gui/view/component/AbstractTextPage.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "pattern",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 396,
      "startColumnNumber" : 28,
      "endLineNumber" : 396,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 396,
        "startColumnNumber" : 28,
        "endLineNumber" : 396,
        "endColumnNumber" : 44
      },
      "nodeContext" : "pattern.length()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 396,
        "startColumnNumber" : 12,
        "endLineNumber" : 396,
        "endColumnNumber" : 44
      },
      "nodeContext" : "patternLength=pattern.length()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 396,
        "startColumnNumber" : 8,
        "endLineNumber" : 396,
        "endColumnNumber" : 45
      },
      "nodeContext" : "int patternLength=pattern.length();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 574,
        "startLineNumber" : 395,
        "startColumnNumber" : 54,
        "endLineNumber" : 414,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int patternLength=pattern.length();\n  StringBuilder sbPattern=new StringBuilder(patternLength * 2);\n  for (int i=0; i < patternLength; i++) {\n    char c=pattern.charAt(i);\n    if (c == '*') {\n      sbPattern.append(\".*\");\n    }\n else     if (c == '?') {\n      sbPattern.append('.');\n    }\n else     if (c == '.') {\n      sbPattern.append(\"\\\\.\");\n    }\n else {\n      sbPattern.append(c);\n    }\n  }\n  return sbPattern.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 812,
        "startLineNumber" : 388,
        "startColumnNumber" : 4,
        "endLineNumber" : 414,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Create a simple regular expression Rules: '*'        matchTypeEntries 0 ou N characters '?'        matchTypeEntries 1 character\n */\npublic static String createRegExp(String pattern){\n  int patternLength=pattern.length();\n  StringBuilder sbPattern=new StringBuilder(patternLength * 2);\n  for (int i=0; i < patternLength; i++) {\n    char c=pattern.charAt(i);\n    if (c == '*') {\n      sbPattern.append(\".*\");\n    }\n else     if (c == '?') {\n      sbPattern.append('.');\n    }\n else     if (c == '.') {\n      sbPattern.append(\"\\\\.\");\n    }\n else {\n      sbPattern.append(c);\n    }\n  }\n  return sbPattern.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 90,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 396,
        "startColumnNumber" : 8,
        "endLineNumber" : 396,
        "endColumnNumber" : 45
      },
      "nodeContext" : "int patternLength=pattern.length();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "pattern",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 400,
      "startColumnNumber" : 21,
      "endLineNumber" : 400,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 400,
        "startColumnNumber" : 21,
        "endLineNumber" : 400,
        "endColumnNumber" : 38
      },
      "nodeContext" : "pattern.charAt(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 400,
        "startColumnNumber" : 17,
        "endLineNumber" : 400,
        "endColumnNumber" : 38
      },
      "nodeContext" : "c=pattern.charAt(i)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 400,
        "startColumnNumber" : 12,
        "endLineNumber" : 400,
        "endColumnNumber" : 39
      },
      "nodeContext" : "char c=pattern.charAt(i);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 354,
        "startLineNumber" : 399,
        "startColumnNumber" : 48,
        "endLineNumber" : 411,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  char c=pattern.charAt(i);\n  if (c == '*') {\n    sbPattern.append(\".*\");\n  }\n else   if (c == '?') {\n    sbPattern.append('.');\n  }\n else   if (c == '.') {\n    sbPattern.append(\"\\\\.\");\n  }\n else {\n    sbPattern.append(c);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 394,
        "startLineNumber" : 399,
        "startColumnNumber" : 8,
        "endLineNumber" : 411,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < patternLength; i++) {\n  char c=pattern.charAt(i);\n  if (c == '*') {\n    sbPattern.append(\".*\");\n  }\n else   if (c == '?') {\n    sbPattern.append('.');\n  }\n else   if (c == '.') {\n    sbPattern.append(\"\\\\.\");\n  }\n else {\n    sbPattern.append(c);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 56,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 574,
        "startLineNumber" : 395,
        "startColumnNumber" : 54,
        "endLineNumber" : 414,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int patternLength=pattern.length();\n  StringBuilder sbPattern=new StringBuilder(patternLength * 2);\n  for (int i=0; i < patternLength; i++) {\n    char c=pattern.charAt(i);\n    if (c == '*') {\n      sbPattern.append(\".*\");\n    }\n else     if (c == '?') {\n      sbPattern.append('.');\n    }\n else     if (c == '.') {\n      sbPattern.append(\"\\\\.\");\n    }\n else {\n      sbPattern.append(c);\n    }\n  }\n  return sbPattern.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 812,
        "startLineNumber" : 388,
        "startColumnNumber" : 4,
        "endLineNumber" : 414,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Create a simple regular expression Rules: '*'        matchTypeEntries 0 ou N characters '?'        matchTypeEntries 1 character\n */\npublic static String createRegExp(String pattern){\n  int patternLength=pattern.length();\n  StringBuilder sbPattern=new StringBuilder(patternLength * 2);\n  for (int i=0; i < patternLength; i++) {\n    char c=pattern.charAt(i);\n    if (c == '*') {\n      sbPattern.append(\".*\");\n    }\n else     if (c == '?') {\n      sbPattern.append('.');\n    }\n else     if (c == '.') {\n      sbPattern.append(\"\\\\.\");\n    }\n else {\n      sbPattern.append(c);\n    }\n  }\n  return sbPattern.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 90,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 400,
        "startColumnNumber" : 12,
        "endLineNumber" : 400,
        "endColumnNumber" : 39
      },
      "nodeContext" : "char c=pattern.charAt(i);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 396,
    "startColumnNumber" : 28,
    "endLineNumber" : 396,
    "endColumnNumber" : 35
  }, {
    "charLength" : 7,
    "startLineNumber" : 400,
    "startColumnNumber" : 21,
    "endLineNumber" : 400,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}