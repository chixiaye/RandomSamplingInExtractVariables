{
  "id" : 278,
  "expression" : "\"-connectTo\"",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/main/java/hudson/slaves/Channels.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"-connectTo\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 222,
      "startColumnNumber" : 23,
      "endLineNumber" : 222,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 222,
        "startColumnNumber" : 8,
        "endLineNumber" : 222,
        "endColumnNumber" : 77
      },
      "nodeContext" : "vmb.args().add(\"-connectTo\",\"localhost:\" + serverSocket.getLocalPort())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 222,
        "startColumnNumber" : 8,
        "endLineNumber" : 222,
        "endColumnNumber" : 78
      },
      "nodeContext" : "vmb.args().add(\"-connectTo\",\"localhost:\" + serverSocket.getLocalPort());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1051,
        "startLineNumber" : 211,
        "startColumnNumber" : 157,
        "endLineNumber" : 233,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ServerSocket serverSocket=new ServerSocket();\n  serverSocket.bind(new InetSocketAddress(\"localhost\",0));\n  serverSocket.setSoTimeout((int)TimeUnit.SECONDS.toMillis(10));\n  vmb.classpath().addJarOf(Channel.class);\n  vmb.mainClass(Launcher.class);\n  if (classpath != null)   vmb.args().add(\"-cp\").add(classpath);\n  vmb.args().add(\"-connectTo\",\"localhost:\" + serverSocket.getLocalPort());\n  listener.getLogger().println(\"Starting \" + displayName);\n  Proc p=vmb.launch(new LocalLauncher(listener)).stdout(listener).pwd(workDir).start();\n  Socket s=serverSocket.accept();\n  serverSocket.close();\n  return forProcess(\"Channel to \" + displayName,Computer.threadPoolForRemoting,new BufferedInputStream(SocketChannelStream.in(s)),new BufferedOutputStream(SocketChannelStream.out(s)),null,p);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2607,
        "startLineNumber" : 187,
        "startColumnNumber" : 4,
        "endLineNumber" : 233,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Launches a new JVM with the given classpath, establish a communication channel, and return a  {@link Channel} to it.\n * @param displayName Human readable name of what this JVM represents. For example \"Selenium grid\" or \"Hadoop\". This token is used for messages to  {@code listener}.\n * @param listener The progress of the launcher and the failure information will be sent here. Must not be null.\n * @param workDir If non-null, the new JVM will have this directory as the working directory. This must be a local path.\n * @param classpath The classpath of the new JVM. Can be null if you just need  {@code agent.jar} (and everything elsecan be sent over the channel.) But if you have jars that are known to be necessary by the new JVM, setting it here will improve the classloading performance (by avoiding remote class file transfer.) Classes in this classpath will also take precedence over any other classes that's sent via the channel later, so it's also useful for making sure you get the version of the classes you want.\n * @param vmb A partially configured  {@link JVMBuilder} that allows the caller to fine-tune the launch parameter.\n * @return never null\n * @since 1.361\n */\npublic static Channel newJVM(String displayName,TaskListener listener,JVMBuilder vmb,FilePath workDir,ClasspathBuilder classpath) throws IOException {\n  ServerSocket serverSocket=new ServerSocket();\n  serverSocket.bind(new InetSocketAddress(\"localhost\",0));\n  serverSocket.setSoTimeout((int)TimeUnit.SECONDS.toMillis(10));\n  vmb.classpath().addJarOf(Channel.class);\n  vmb.mainClass(Launcher.class);\n  if (classpath != null)   vmb.args().add(\"-cp\").add(classpath);\n  vmb.args().add(\"-connectTo\",\"localhost:\" + serverSocket.getLocalPort());\n  listener.getLogger().println(\"Starting \" + displayName);\n  Proc p=vmb.launch(new LocalLauncher(listener)).stdout(listener).pwd(workDir).start();\n  Socket s=serverSocket.accept();\n  serverSocket.close();\n  return forProcess(\"Channel to \" + displayName,Computer.threadPoolForRemoting,new BufferedInputStream(SocketChannelStream.in(s)),new BufferedOutputStream(SocketChannelStream.out(s)),null,p);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 167,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 222,
        "startColumnNumber" : 8,
        "endLineNumber" : 222,
        "endColumnNumber" : 78
      },
      "nodeContext" : "vmb.args().add(\"-connectTo\",\"localhost:\" + serverSocket.getLocalPort());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 222,
    "startColumnNumber" : 23,
    "endLineNumber" : 222,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}