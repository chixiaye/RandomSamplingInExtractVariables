{
  "id" : 173,
  "expression" : "getAndIncrement() != 0",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/main/java/io/reactivex/internal/operators/flowable/FlowableSequenceEqual.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getAndIncrement() != 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 119,
      "startColumnNumber" : 16,
      "endLineNumber" : 119,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 119,
        "startColumnNumber" : 12,
        "endLineNumber" : 121,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (getAndIncrement() != 0) {\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3462,
        "startLineNumber" : 118,
        "startColumnNumber" : 21,
        "endLineNumber" : 223,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (getAndIncrement() != 0) {\n    return;\n  }\n  int missed=1;\n  EqualSubscriber<T>[] as=subscribers;\n  final EqualSubscriber<T> s1=as[0];\n  final Queue<T> q1=s1.queue;\n  final EqualSubscriber<T> s2=as[1];\n  final Queue<T> q2=s2.queue;\n  for (; ; ) {\n    long r=0L;\n    for (; ; ) {\n      if (cancelled) {\n        q1.clear();\n        q2.clear();\n        return;\n      }\n      boolean d1=s1.done;\n      if (d1) {\n        Throwable e=s1.error;\n        if (e != null) {\n          cancel(q1,q2);\n          actual.onError(e);\n          return;\n        }\n      }\n      boolean d2=s2.done;\n      if (d2) {\n        Throwable e=s2.error;\n        if (e != null) {\n          cancel(q1,q2);\n          actual.onError(e);\n          return;\n        }\n      }\n      T v1=q1.peek();\n      boolean e1=v1 == null;\n      T v2=q2.peek();\n      boolean e2=v2 == null;\n      if (d1 && d2 && e1&& e2) {\n        actual.onNext(true);\n        actual.onComplete();\n        return;\n      }\n      if ((d1 && d2) && (e1 != e2)) {\n        cancel(q1,q2);\n        actual.onNext(false);\n        actual.onComplete();\n        return;\n      }\n      if (!e1 && !e2) {\n        q1.poll();\n        q2.poll();\n        boolean c;\n        try {\n          c=comparer.test(v1,v2);\n        }\n catch (        Throwable ex) {\n          cancel(q1,q2);\n          actual.onError(ex);\n          return;\n        }\n        if (!c) {\n          cancel(q1,q2);\n          actual.onNext(false);\n          actual.onComplete();\n          return;\n        }\n        r++;\n      }\n      if (e1 || e2) {\n        break;\n      }\n    }\n    if (r != 0L) {\n      s1.s.request(r);\n      s2.s.request(r);\n    }\n    missed=addAndGet(-missed);\n    if (missed == 0) {\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 340,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3475,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 223,
        "endColumnNumber" : 9
      },
      "nodeContext" : "void drain(){\n  if (getAndIncrement() != 0) {\n    return;\n  }\n  int missed=1;\n  EqualSubscriber<T>[] as=subscribers;\n  final EqualSubscriber<T> s1=as[0];\n  final Queue<T> q1=s1.queue;\n  final EqualSubscriber<T> s2=as[1];\n  final Queue<T> q2=s2.queue;\n  for (; ; ) {\n    long r=0L;\n    for (; ; ) {\n      if (cancelled) {\n        q1.clear();\n        q2.clear();\n        return;\n      }\n      boolean d1=s1.done;\n      if (d1) {\n        Throwable e=s1.error;\n        if (e != null) {\n          cancel(q1,q2);\n          actual.onError(e);\n          return;\n        }\n      }\n      boolean d2=s2.done;\n      if (d2) {\n        Throwable e=s2.error;\n        if (e != null) {\n          cancel(q1,q2);\n          actual.onError(e);\n          return;\n        }\n      }\n      T v1=q1.peek();\n      boolean e1=v1 == null;\n      T v2=q2.peek();\n      boolean e2=v2 == null;\n      if (d1 && d2 && e1&& e2) {\n        actual.onNext(true);\n        actual.onComplete();\n        return;\n      }\n      if ((d1 && d2) && (e1 != e2)) {\n        cancel(q1,q2);\n        actual.onNext(false);\n        actual.onComplete();\n        return;\n      }\n      if (!e1 && !e2) {\n        q1.poll();\n        q2.poll();\n        boolean c;\n        try {\n          c=comparer.test(v1,v2);\n        }\n catch (        Throwable ex) {\n          cancel(q1,q2);\n          actual.onError(ex);\n          return;\n        }\n        if (!c) {\n          cancel(q1,q2);\n          actual.onNext(false);\n          actual.onComplete();\n          return;\n        }\n        r++;\n      }\n      if (e1 || e2) {\n        break;\n      }\n    }\n    if (r != 0L) {\n      s1.s.request(r);\n      s2.s.request(r);\n    }\n    missed=addAndGet(-missed);\n    if (missed == 0) {\n      break;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 343,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 119,
        "startColumnNumber" : 12,
        "endLineNumber" : 121,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (getAndIncrement() != 0) {\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 119,
    "startColumnNumber" : 16,
    "endLineNumber" : 119,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}