{
  "id" : 105,
  "expression" : "ruleChainById.getName()",
  "projectName" : "thingsboard@thingsboard",
  "commitID" : "7c2b3a9fbf84cc58aa7546029c5c7c10a662c55a",
  "filePath" : "/dao/src/main/java/org/thingsboard/server/dao/edge/EdgeServiceImpl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ruleChainById.getName()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 532,
      "startColumnNumber" : 46,
      "endLineNumber" : 532,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 532,
        "startColumnNumber" : 24,
        "endLineNumber" : 532,
        "endColumnNumber" : 70
      },
      "nodeContext" : "missingRuleChains.add(ruleChainById.getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 532,
        "startColumnNumber" : 24,
        "endLineNumber" : 532,
        "endColumnNumber" : 71
      },
      "nodeContext" : "missingRuleChains.add(ruleChainById.getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 211,
        "startLineNumber" : 530,
        "startColumnNumber" : 72,
        "endLineNumber" : 533,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  RuleChain ruleChainById=ruleChainService.findRuleChainById(tenantId,connectedRuleChain);\n  missingRuleChains.add(ruleChainById.getName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 263,
        "startLineNumber" : 530,
        "startColumnNumber" : 20,
        "endLineNumber" : 533,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (!edgeRuleChainIds.contains(connectedRuleChain)) {\n  RuleChain ruleChainById=ruleChainService.findRuleChainById(tenantId,connectedRuleChain);\n  missingRuleChains.add(ruleChainById.getName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 303,
        "startLineNumber" : 529,
        "startColumnNumber" : 75,
        "endLineNumber" : 534,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (!edgeRuleChainIds.contains(connectedRuleChain)) {\n    RuleChain ruleChainById=ruleChainService.findRuleChainById(tenantId,connectedRuleChain);\n    missingRuleChains.add(ruleChainById.getName());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 362,
        "startLineNumber" : 529,
        "startColumnNumber" : 16,
        "endLineNumber" : 534,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (RuleChainId connectedRuleChain : connectedRuleChains) {\n  if (!edgeRuleChainIds.contains(connectedRuleChain)) {\n    RuleChain ruleChainById=ruleChainService.findRuleChainById(tenantId,connectedRuleChain);\n    missingRuleChains.add(ruleChainById.getName());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 31,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 993,
        "startLineNumber" : 525,
        "startColumnNumber" : 71,
        "endLineNumber" : 542,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  List<RuleChainId> connectedRuleChains=connectionInfos.stream().map(RuleChainConnectionInfo::getTargetRuleChainId).collect(Collectors.toList());\n  List<String> missingRuleChains=new ArrayList<>();\n  for (  RuleChainId connectedRuleChain : connectedRuleChains) {\n    if (!edgeRuleChainIds.contains(connectedRuleChain)) {\n      RuleChain ruleChainById=ruleChainService.findRuleChainById(tenantId,connectedRuleChain);\n      missingRuleChains.add(ruleChainById.getName());\n    }\n  }\n  if (!missingRuleChains.isEmpty()) {\n    ArrayNode array=mapper.createArrayNode();\n    for (    String missingRuleChain : missingRuleChains) {\n      array.add(missingRuleChain);\n    }\n    result.set(edgeRuleChain.getName(),array);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1052,
        "startLineNumber" : 525,
        "startColumnNumber" : 12,
        "endLineNumber" : 542,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (connectionInfos != null && !connectionInfos.isEmpty()) {\n  List<RuleChainId> connectedRuleChains=connectionInfos.stream().map(RuleChainConnectionInfo::getTargetRuleChainId).collect(Collectors.toList());\n  List<String> missingRuleChains=new ArrayList<>();\n  for (  RuleChainId connectedRuleChain : connectedRuleChains) {\n    if (!edgeRuleChainIds.contains(connectedRuleChain)) {\n      RuleChain ruleChainById=ruleChainService.findRuleChainById(tenantId,connectedRuleChain);\n      missingRuleChains.add(ruleChainById.getName());\n    }\n  }\n  if (!missingRuleChains.isEmpty()) {\n    ArrayNode array=mapper.createArrayNode();\n    for (    String missingRuleChain : missingRuleChains) {\n      array.add(missingRuleChain);\n    }\n    result.set(edgeRuleChain.getName(),array);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 108,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1274,
        "startLineNumber" : 522,
        "startColumnNumber" : 55,
        "endLineNumber" : 543,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  List<RuleChainConnectionInfo> connectionInfos=ruleChainService.loadRuleChainMetaData(edgeRuleChain.getTenantId(),edgeRuleChain.getId()).getRuleChainConnections();\n  if (connectionInfos != null && !connectionInfos.isEmpty()) {\n    List<RuleChainId> connectedRuleChains=connectionInfos.stream().map(RuleChainConnectionInfo::getTargetRuleChainId).collect(Collectors.toList());\n    List<String> missingRuleChains=new ArrayList<>();\n    for (    RuleChainId connectedRuleChain : connectedRuleChains) {\n      if (!edgeRuleChainIds.contains(connectedRuleChain)) {\n        RuleChain ruleChainById=ruleChainService.findRuleChainById(tenantId,connectedRuleChain);\n        missingRuleChains.add(ruleChainById.getName());\n      }\n    }\n    if (!missingRuleChains.isEmpty()) {\n      ArrayNode array=mapper.createArrayNode();\n      for (      String missingRuleChain : missingRuleChains) {\n        array.add(missingRuleChain);\n      }\n      result.set(edgeRuleChain.getName(),array);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1321,
        "startLineNumber" : 522,
        "startColumnNumber" : 8,
        "endLineNumber" : 543,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (RuleChain edgeRuleChain : edgeRuleChains) {\n  List<RuleChainConnectionInfo> connectionInfos=ruleChainService.loadRuleChainMetaData(edgeRuleChain.getTenantId(),edgeRuleChain.getId()).getRuleChainConnections();\n  if (connectionInfos != null && !connectionInfos.isEmpty()) {\n    List<RuleChainId> connectedRuleChains=connectionInfos.stream().map(RuleChainConnectionInfo::getTargetRuleChainId).collect(Collectors.toList());\n    List<String> missingRuleChains=new ArrayList<>();\n    for (    RuleChainId connectedRuleChain : connectedRuleChains) {\n      if (!edgeRuleChainIds.contains(connectedRuleChain)) {\n        RuleChain ruleChainById=ruleChainService.findRuleChainById(tenantId,connectedRuleChain);\n        missingRuleChains.add(ruleChainById.getName());\n      }\n    }\n    if (!missingRuleChains.isEmpty()) {\n      ArrayNode array=mapper.createArrayNode();\n      for (      String missingRuleChain : missingRuleChains) {\n        array.add(missingRuleChain);\n      }\n      result.set(edgeRuleChain.getName(),array);\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 134,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1624,
        "startLineNumber" : 518,
        "startColumnNumber" : 83,
        "endLineNumber" : 545,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<RuleChain> edgeRuleChains=findEdgeRuleChains(tenantId,edgeId);\n  List<RuleChainId> edgeRuleChainIds=edgeRuleChains.stream().map(IdBased::getId).collect(Collectors.toList());\n  ObjectNode result=mapper.createObjectNode();\n  for (  RuleChain edgeRuleChain : edgeRuleChains) {\n    List<RuleChainConnectionInfo> connectionInfos=ruleChainService.loadRuleChainMetaData(edgeRuleChain.getTenantId(),edgeRuleChain.getId()).getRuleChainConnections();\n    if (connectionInfos != null && !connectionInfos.isEmpty()) {\n      List<RuleChainId> connectedRuleChains=connectionInfos.stream().map(RuleChainConnectionInfo::getTargetRuleChainId).collect(Collectors.toList());\n      List<String> missingRuleChains=new ArrayList<>();\n      for (      RuleChainId connectedRuleChain : connectedRuleChains) {\n        if (!edgeRuleChainIds.contains(connectedRuleChain)) {\n          RuleChain ruleChainById=ruleChainService.findRuleChainById(tenantId,connectedRuleChain);\n          missingRuleChains.add(ruleChainById.getName());\n        }\n      }\n      if (!missingRuleChains.isEmpty()) {\n        ArrayNode array=mapper.createArrayNode();\n        for (        String missingRuleChain : missingRuleChains) {\n          array.add(missingRuleChain);\n        }\n        result.set(edgeRuleChain.getName(),array);\n      }\n    }\n  }\n  return result.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1717,
        "startLineNumber" : 517,
        "startColumnNumber" : 4,
        "endLineNumber" : 545,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public String findMissingToRelatedRuleChains(TenantId tenantId,EdgeId edgeId){\n  List<RuleChain> edgeRuleChains=findEdgeRuleChains(tenantId,edgeId);\n  List<RuleChainId> edgeRuleChainIds=edgeRuleChains.stream().map(IdBased::getId).collect(Collectors.toList());\n  ObjectNode result=mapper.createObjectNode();\n  for (  RuleChain edgeRuleChain : edgeRuleChains) {\n    List<RuleChainConnectionInfo> connectionInfos=ruleChainService.loadRuleChainMetaData(edgeRuleChain.getTenantId(),edgeRuleChain.getId()).getRuleChainConnections();\n    if (connectionInfos != null && !connectionInfos.isEmpty()) {\n      List<RuleChainId> connectedRuleChains=connectionInfos.stream().map(RuleChainConnectionInfo::getTargetRuleChainId).collect(Collectors.toList());\n      List<String> missingRuleChains=new ArrayList<>();\n      for (      RuleChainId connectedRuleChain : connectedRuleChains) {\n        if (!edgeRuleChainIds.contains(connectedRuleChain)) {\n          RuleChain ruleChainById=ruleChainService.findRuleChainById(tenantId,connectedRuleChain);\n          missingRuleChains.add(ruleChainById.getName());\n        }\n      }\n      if (!missingRuleChains.isEmpty()) {\n        ArrayNode array=mapper.createArrayNode();\n        for (        String missingRuleChain : missingRuleChains) {\n          array.add(missingRuleChain);\n        }\n        result.set(edgeRuleChain.getName(),array);\n      }\n    }\n  }\n  return result.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 195,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 532,
        "startColumnNumber" : 24,
        "endLineNumber" : 532,
        "endColumnNumber" : 71
      },
      "nodeContext" : "missingRuleChains.add(ruleChainById.getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 532,
    "startColumnNumber" : 46,
    "endLineNumber" : 532,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ ]
}