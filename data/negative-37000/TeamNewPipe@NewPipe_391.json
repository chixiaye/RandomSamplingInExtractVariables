{
  "id" : 391,
  "expression" : "mMission.length",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "d7574973e97fa7a3a21aa59967311f6091941830",
  "filePath" : "/app/src/main/java/us/shandian/giga/get/DownloadMissionRecover.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mMission.length",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 184,
      "startColumnNumber" : 55,
      "endLineNumber" : 184,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 184,
        "startColumnNumber" : 55,
        "endLineNumber" : 184,
        "endColumnNumber" : 75
      },
      "nodeContext" : "mMission.length - 10",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 184,
        "startColumnNumber" : 20,
        "endLineNumber" : 184,
        "endColumnNumber" : 93
      },
      "nodeContext" : "mMission.openConnection(url,true,mMission.length - 10,mMission.length)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 184,
        "startColumnNumber" : 12,
        "endLineNumber" : 184,
        "endColumnNumber" : 93
      },
      "nodeContext" : "mConn=mMission.openConnection(url,true,mMission.length - 10,mMission.length)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 184,
        "startColumnNumber" : 12,
        "endLineNumber" : 184,
        "endColumnNumber" : 94
      },
      "nodeContext" : "mConn=mMission.openConnection(url,true,mMission.length - 10,mMission.length);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 183,
        "startColumnNumber" : 12,
        "endLineNumber" : 206,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  mConn=mMission.openConnection(url,true,mMission.length - 10,mMission.length);\n  mConn.setRequestProperty(\"If-Range\",mRecovery.validateCondition);\n  mMission.establishConnection(mID,mConn);\n  int code=mConn.getResponseCode();\nswitch (code) {\ncase 200:case 413:    recover(url,true);\n  return;\ncase 206:long[] contentRange=parseContentRange(mConn.getHeaderField(\"Content-Range\"));\nboolean lengthMismatch=contentRange[2] != -1 && contentRange[2] != mMission.length;\nrecover(url,lengthMismatch);\nreturn;\n}\nthrow new HttpError(code);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1007,
        "startLineNumber" : 183,
        "startColumnNumber" : 8,
        "endLineNumber" : 208,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  mConn=mMission.openConnection(url,true,mMission.length - 10,mMission.length);\n  mConn.setRequestProperty(\"If-Range\",mRecovery.validateCondition);\n  mMission.establishConnection(mID,mConn);\n  int code=mConn.getResponseCode();\nswitch (code) {\ncase 200:case 413:    recover(url,true);\n  return;\ncase 206:long[] contentRange=parseContentRange(mConn.getHeaderField(\"Content-Range\"));\nboolean lengthMismatch=contentRange[2] != -1 && contentRange[2] != mMission.length;\nrecover(url,lengthMismatch);\nreturn;\n}\nthrow new HttpError(code);\n}\n  finally {\ndisconnect();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 98,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1501,
        "startLineNumber" : 170,
        "startColumnNumber" : 67,
        "endLineNumber" : 209,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mRecovery.validateCondition == null) {\n    Log.w(TAG,\"validation condition not defined, the resource can be stale\");\n  }\n  if (mMission.unknownLength || mRecovery.validateCondition == null) {\n    recover(url,false);\n    return;\n  }\n  try {\n    mConn=mMission.openConnection(url,true,mMission.length - 10,mMission.length);\n    mConn.setRequestProperty(\"If-Range\",mRecovery.validateCondition);\n    mMission.establishConnection(mID,mConn);\n    int code=mConn.getResponseCode();\nswitch (code) {\ncase 200:case 413:      recover(url,true);\n    return;\ncase 206:  long[] contentRange=parseContentRange(mConn.getHeaderField(\"Content-Range\"));\nboolean lengthMismatch=contentRange[2] != -1 && contentRange[2] != mMission.length;\nrecover(url,lengthMismatch);\nreturn;\n}\nthrow new HttpError(code);\n}\n  finally {\ndisconnect();\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1564,
        "startLineNumber" : 170,
        "startColumnNumber" : 4,
        "endLineNumber" : 209,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void resolve(String url) throws IOException, HttpError {\n  if (mRecovery.validateCondition == null) {\n    Log.w(TAG,\"validation condition not defined, the resource can be stale\");\n  }\n  if (mMission.unknownLength || mRecovery.validateCondition == null) {\n    recover(url,false);\n    return;\n  }\n  try {\n    mConn=mMission.openConnection(url,true,mMission.length - 10,mMission.length);\n    mConn.setRequestProperty(\"If-Range\",mRecovery.validateCondition);\n    mMission.establishConnection(mID,mConn);\n    int code=mConn.getResponseCode();\nswitch (code) {\ncase 200:case 413:      recover(url,true);\n    return;\ncase 206:  long[] contentRange=parseContentRange(mConn.getHeaderField(\"Content-Range\"));\nboolean lengthMismatch=contentRange[2] != -1 && contentRange[2] != mMission.length;\nrecover(url,lengthMismatch);\nreturn;\n}\nthrow new HttpError(code);\n}\n  finally {\ndisconnect();\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 141,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 184,
        "startColumnNumber" : 12,
        "endLineNumber" : 184,
        "endColumnNumber" : 94
      },
      "nodeContext" : "mConn=mMission.openConnection(url,true,mMission.length - 10,mMission.length);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "long"
  }, {
    "nodeContext" : "mMission.length",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 184,
      "startColumnNumber" : 77,
      "endLineNumber" : 184,
      "endColumnNumber" : 92
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 184,
        "startColumnNumber" : 20,
        "endLineNumber" : 184,
        "endColumnNumber" : 93
      },
      "nodeContext" : "mMission.openConnection(url,true,mMission.length - 10,mMission.length)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 184,
        "startColumnNumber" : 12,
        "endLineNumber" : 184,
        "endColumnNumber" : 93
      },
      "nodeContext" : "mConn=mMission.openConnection(url,true,mMission.length - 10,mMission.length)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 184,
        "startColumnNumber" : 12,
        "endLineNumber" : 184,
        "endColumnNumber" : 94
      },
      "nodeContext" : "mConn=mMission.openConnection(url,true,mMission.length - 10,mMission.length);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 183,
        "startColumnNumber" : 12,
        "endLineNumber" : 206,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  mConn=mMission.openConnection(url,true,mMission.length - 10,mMission.length);\n  mConn.setRequestProperty(\"If-Range\",mRecovery.validateCondition);\n  mMission.establishConnection(mID,mConn);\n  int code=mConn.getResponseCode();\nswitch (code) {\ncase 200:case 413:    recover(url,true);\n  return;\ncase 206:long[] contentRange=parseContentRange(mConn.getHeaderField(\"Content-Range\"));\nboolean lengthMismatch=contentRange[2] != -1 && contentRange[2] != mMission.length;\nrecover(url,lengthMismatch);\nreturn;\n}\nthrow new HttpError(code);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1007,
        "startLineNumber" : 183,
        "startColumnNumber" : 8,
        "endLineNumber" : 208,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  mConn=mMission.openConnection(url,true,mMission.length - 10,mMission.length);\n  mConn.setRequestProperty(\"If-Range\",mRecovery.validateCondition);\n  mMission.establishConnection(mID,mConn);\n  int code=mConn.getResponseCode();\nswitch (code) {\ncase 200:case 413:    recover(url,true);\n  return;\ncase 206:long[] contentRange=parseContentRange(mConn.getHeaderField(\"Content-Range\"));\nboolean lengthMismatch=contentRange[2] != -1 && contentRange[2] != mMission.length;\nrecover(url,lengthMismatch);\nreturn;\n}\nthrow new HttpError(code);\n}\n  finally {\ndisconnect();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 98,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1501,
        "startLineNumber" : 170,
        "startColumnNumber" : 67,
        "endLineNumber" : 209,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mRecovery.validateCondition == null) {\n    Log.w(TAG,\"validation condition not defined, the resource can be stale\");\n  }\n  if (mMission.unknownLength || mRecovery.validateCondition == null) {\n    recover(url,false);\n    return;\n  }\n  try {\n    mConn=mMission.openConnection(url,true,mMission.length - 10,mMission.length);\n    mConn.setRequestProperty(\"If-Range\",mRecovery.validateCondition);\n    mMission.establishConnection(mID,mConn);\n    int code=mConn.getResponseCode();\nswitch (code) {\ncase 200:case 413:      recover(url,true);\n    return;\ncase 206:  long[] contentRange=parseContentRange(mConn.getHeaderField(\"Content-Range\"));\nboolean lengthMismatch=contentRange[2] != -1 && contentRange[2] != mMission.length;\nrecover(url,lengthMismatch);\nreturn;\n}\nthrow new HttpError(code);\n}\n  finally {\ndisconnect();\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1564,
        "startLineNumber" : 170,
        "startColumnNumber" : 4,
        "endLineNumber" : 209,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void resolve(String url) throws IOException, HttpError {\n  if (mRecovery.validateCondition == null) {\n    Log.w(TAG,\"validation condition not defined, the resource can be stale\");\n  }\n  if (mMission.unknownLength || mRecovery.validateCondition == null) {\n    recover(url,false);\n    return;\n  }\n  try {\n    mConn=mMission.openConnection(url,true,mMission.length - 10,mMission.length);\n    mConn.setRequestProperty(\"If-Range\",mRecovery.validateCondition);\n    mMission.establishConnection(mID,mConn);\n    int code=mConn.getResponseCode();\nswitch (code) {\ncase 200:case 413:      recover(url,true);\n    return;\ncase 206:  long[] contentRange=parseContentRange(mConn.getHeaderField(\"Content-Range\"));\nboolean lengthMismatch=contentRange[2] != -1 && contentRange[2] != mMission.length;\nrecover(url,lengthMismatch);\nreturn;\n}\nthrow new HttpError(code);\n}\n  finally {\ndisconnect();\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 141,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 184,
        "startColumnNumber" : 12,
        "endLineNumber" : 184,
        "endColumnNumber" : 94
      },
      "nodeContext" : "mConn=mMission.openConnection(url,true,mMission.length - 10,mMission.length);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "long"
  }, {
    "nodeContext" : "mMission.length",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 199,
      "startColumnNumber" : 89,
      "endLineNumber" : 199,
      "endColumnNumber" : 104
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 199,
        "startColumnNumber" : 70,
        "endLineNumber" : 199,
        "endColumnNumber" : 104
      },
      "nodeContext" : "contentRange[2] != mMission.length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 199,
        "startColumnNumber" : 45,
        "endLineNumber" : 199,
        "endColumnNumber" : 104
      },
      "nodeContext" : "contentRange[2] != -1 && contentRange[2] != mMission.length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 199,
        "startColumnNumber" : 28,
        "endLineNumber" : 199,
        "endColumnNumber" : 104
      },
      "nodeContext" : "lengthMismatch=contentRange[2] != -1 && contentRange[2] != mMission.length",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 199,
        "startColumnNumber" : 20,
        "endLineNumber" : 199,
        "endColumnNumber" : 105
      },
      "nodeContext" : "boolean lengthMismatch=contentRange[2] != -1 && contentRange[2] != mMission.length;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 603,
        "startLineNumber" : 190,
        "startColumnNumber" : 12,
        "endLineNumber" : 203,
        "endColumnNumber" : 13
      },
      "nodeContext" : "switch (code) {\ncase 200:case 413:  recover(url,true);\nreturn;\ncase 206:long[] contentRange=parseContentRange(mConn.getHeaderField(\"Content-Range\"));\nboolean lengthMismatch=contentRange[2] != -1 && contentRange[2] != mMission.length;\nrecover(url,lengthMismatch);\nreturn;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 50,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 183,
        "startColumnNumber" : 12,
        "endLineNumber" : 206,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  mConn=mMission.openConnection(url,true,mMission.length - 10,mMission.length);\n  mConn.setRequestProperty(\"If-Range\",mRecovery.validateCondition);\n  mMission.establishConnection(mID,mConn);\n  int code=mConn.getResponseCode();\nswitch (code) {\ncase 200:case 413:    recover(url,true);\n  return;\ncase 206:long[] contentRange=parseContentRange(mConn.getHeaderField(\"Content-Range\"));\nboolean lengthMismatch=contentRange[2] != -1 && contentRange[2] != mMission.length;\nrecover(url,lengthMismatch);\nreturn;\n}\nthrow new HttpError(code);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1007,
        "startLineNumber" : 183,
        "startColumnNumber" : 8,
        "endLineNumber" : 208,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  mConn=mMission.openConnection(url,true,mMission.length - 10,mMission.length);\n  mConn.setRequestProperty(\"If-Range\",mRecovery.validateCondition);\n  mMission.establishConnection(mID,mConn);\n  int code=mConn.getResponseCode();\nswitch (code) {\ncase 200:case 413:    recover(url,true);\n  return;\ncase 206:long[] contentRange=parseContentRange(mConn.getHeaderField(\"Content-Range\"));\nboolean lengthMismatch=contentRange[2] != -1 && contentRange[2] != mMission.length;\nrecover(url,lengthMismatch);\nreturn;\n}\nthrow new HttpError(code);\n}\n  finally {\ndisconnect();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 98,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1501,
        "startLineNumber" : 170,
        "startColumnNumber" : 67,
        "endLineNumber" : 209,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mRecovery.validateCondition == null) {\n    Log.w(TAG,\"validation condition not defined, the resource can be stale\");\n  }\n  if (mMission.unknownLength || mRecovery.validateCondition == null) {\n    recover(url,false);\n    return;\n  }\n  try {\n    mConn=mMission.openConnection(url,true,mMission.length - 10,mMission.length);\n    mConn.setRequestProperty(\"If-Range\",mRecovery.validateCondition);\n    mMission.establishConnection(mID,mConn);\n    int code=mConn.getResponseCode();\nswitch (code) {\ncase 200:case 413:      recover(url,true);\n    return;\ncase 206:  long[] contentRange=parseContentRange(mConn.getHeaderField(\"Content-Range\"));\nboolean lengthMismatch=contentRange[2] != -1 && contentRange[2] != mMission.length;\nrecover(url,lengthMismatch);\nreturn;\n}\nthrow new HttpError(code);\n}\n  finally {\ndisconnect();\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1564,
        "startLineNumber" : 170,
        "startColumnNumber" : 4,
        "endLineNumber" : 209,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void resolve(String url) throws IOException, HttpError {\n  if (mRecovery.validateCondition == null) {\n    Log.w(TAG,\"validation condition not defined, the resource can be stale\");\n  }\n  if (mMission.unknownLength || mRecovery.validateCondition == null) {\n    recover(url,false);\n    return;\n  }\n  try {\n    mConn=mMission.openConnection(url,true,mMission.length - 10,mMission.length);\n    mConn.setRequestProperty(\"If-Range\",mRecovery.validateCondition);\n    mMission.establishConnection(mID,mConn);\n    int code=mConn.getResponseCode();\nswitch (code) {\ncase 200:case 413:      recover(url,true);\n    return;\ncase 206:  long[] contentRange=parseContentRange(mConn.getHeaderField(\"Content-Range\"));\nboolean lengthMismatch=contentRange[2] != -1 && contentRange[2] != mMission.length;\nrecover(url,lengthMismatch);\nreturn;\n}\nthrow new HttpError(code);\n}\n  finally {\ndisconnect();\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 141,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 199,
        "startColumnNumber" : 20,
        "endLineNumber" : 199,
        "endColumnNumber" : 105
      },
      "nodeContext" : "boolean lengthMismatch=contentRange[2] != -1 && contentRange[2] != mMission.length;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 184,
    "startColumnNumber" : 55,
    "endLineNumber" : 184,
    "endColumnNumber" : 70
  }, {
    "charLength" : 15,
    "startLineNumber" : 184,
    "startColumnNumber" : 77,
    "endLineNumber" : 184,
    "endColumnNumber" : 92
  }, {
    "charLength" : 15,
    "startLineNumber" : 199,
    "startColumnNumber" : 89,
    "endLineNumber" : 199,
    "endColumnNumber" : 104
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  } ]
}