{
  "id" : 113,
  "expression" : "\"Get: Obtained: \" + safeKey + \" for for Key: \"+ key",
  "projectName" : "bumptech@glide",
  "commitID" : "7d9c28ec2763e973775abd5c3e3c971728a48a56",
  "filePath" : "/library/src/main/java/com/bumptech/glide/load/engine/cache/DiskLruCacheWrapper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Get: Obtained: \" + safeKey + \" for for Key: \"+ key",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 52,
      "startLineNumber" : 70,
      "startColumnNumber" : 17,
      "endLineNumber" : 70,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 70,
        "startColumnNumber" : 6,
        "endLineNumber" : 70,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Log.v(TAG,\"Get: Obtained: \" + safeKey + \" for for Key: \"+ key)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 70,
        "startColumnNumber" : 6,
        "endLineNumber" : 70,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Log.v(TAG,\"Get: Obtained: \" + safeKey + \" for for Key: \"+ key);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 69,
        "startColumnNumber" : 42,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Log.v(TAG,\"Get: Obtained: \" + safeKey + \" for for Key: \"+ key);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (Log.isLoggable(TAG,Log.VERBOSE)) {\n  Log.v(TAG,\"Get: Obtained: \" + safeKey + \" for for Key: \"+ key);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 763,
        "startLineNumber" : 67,
        "startColumnNumber" : 27,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String safeKey=safeKeyGenerator.getSafeKey(key);\n  if (Log.isLoggable(TAG,Log.VERBOSE)) {\n    Log.v(TAG,\"Get: Obtained: \" + safeKey + \" for for Key: \"+ key);\n  }\n  File result=null;\n  try {\n    final DiskLruCache.Value value=getDiskCache().get(safeKey);\n    if (value != null) {\n      result=value.getFile(0);\n    }\n  }\n catch (  IOException e) {\n    if (Log.isLoggable(TAG,Log.WARN)) {\n      Log.w(TAG,\"Unable to get from disk cache\",e);\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 800,
        "startLineNumber" : 66,
        "startColumnNumber" : 2,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public File get(Key key){\n  String safeKey=safeKeyGenerator.getSafeKey(key);\n  if (Log.isLoggable(TAG,Log.VERBOSE)) {\n    Log.v(TAG,\"Get: Obtained: \" + safeKey + \" for for Key: \"+ key);\n  }\n  File result=null;\n  try {\n    final DiskLruCache.Value value=getDiskCache().get(safeKey);\n    if (value != null) {\n      result=value.getFile(0);\n    }\n  }\n catch (  IOException e) {\n    if (Log.isLoggable(TAG,Log.WARN)) {\n      Log.w(TAG,\"Unable to get from disk cache\",e);\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 70,
        "startColumnNumber" : 6,
        "endLineNumber" : 70,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Log.v(TAG,\"Get: Obtained: \" + safeKey + \" for for Key: \"+ key);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 8,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 52,
    "startLineNumber" : 70,
    "startColumnNumber" : 17,
    "endLineNumber" : 70,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ ]
}