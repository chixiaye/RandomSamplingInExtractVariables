{
  "id" : 306,
  "expression" : "Files.newBufferedWriter(dumpFile)",
  "projectName" : "thingsboard@thingsboard",
  "commitID" : "7c2b3a9fbf84cc58aa7546029c5c7c10a662c55a",
  "filePath" : "/application/src/main/java/org/thingsboard/server/service/install/sql/SqlDbHelper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Files.newBufferedWriter(dumpFile)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 60,
      "startColumnNumber" : 56,
      "endLineNumber" : 60,
      "endColumnNumber" : 89
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 60,
        "startColumnNumber" : 41,
        "endLineNumber" : 60,
        "endColumnNumber" : 101
      },
      "nodeContext" : "new CSVPrinter(Files.newBufferedWriter(dumpFile),csvFormat)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 60,
        "startColumnNumber" : 28,
        "endLineNumber" : 60,
        "endColumnNumber" : 101
      },
      "nodeContext" : "csvPrinter=new CSVPrinter(Files.newBufferedWriter(dumpFile),csvFormat)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,resources]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 60,
        "startColumnNumber" : 17,
        "endLineNumber" : 60,
        "endColumnNumber" : 101
      },
      "nodeContext" : "CSVPrinter csvPrinter=new CSVPrinter(Files.newBufferedWriter(dumpFile),csvFormat)",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 912,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 74,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try (CSVPrinter csvPrinter=new CSVPrinter(Files.newBufferedWriter(dumpFile),csvFormat)){\n  try (PreparedStatement stmt=conn.prepareStatement(\"SELECT * FROM \" + tableName)){\n    try (ResultSet tableRes=stmt.executeQuery()){\n      ResultSetMetaData resMetaData=tableRes.getMetaData();\n      Map<String,Integer> columnIndexMap=new HashMap<>();\n      for (int i=1; i <= resMetaData.getColumnCount(); i++) {\n        String columnName=resMetaData.getColumnName(i);\n        columnIndexMap.put(columnName.toUpperCase(),i);\n      }\n      while (tableRes.next()) {\n        dumpRow(tableRes,columnIndexMap,columns,defaultValues,csvPrinter);\n      }\n    }\n   }\n }\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 104,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1232,
        "startLineNumber" : 53,
        "startColumnNumber" : 42,
        "endLineNumber" : 76,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Path dumpFile=Files.createTempFile(dumpPrefix,null);\n  Files.deleteIfExists(dumpFile);\n  CSVFormat csvFormat=CSV_DUMP_FORMAT;\n  if (printHeader) {\n    csvFormat=csvFormat.withHeader(columns);\n  }\n  try (CSVPrinter csvPrinter=new CSVPrinter(Files.newBufferedWriter(dumpFile),csvFormat)){\n    try (PreparedStatement stmt=conn.prepareStatement(\"SELECT * FROM \" + tableName)){\n      try (ResultSet tableRes=stmt.executeQuery()){\n        ResultSetMetaData resMetaData=tableRes.getMetaData();\n        Map<String,Integer> columnIndexMap=new HashMap<>();\n        for (int i=1; i <= resMetaData.getColumnCount(); i++) {\n          String columnName=resMetaData.getColumnName(i);\n          columnIndexMap.put(columnName.toUpperCase(),i);\n        }\n        while (tableRes.next()) {\n          dumpRow(tableRes,columnIndexMap,columns,defaultValues,csvPrinter);\n        }\n      }\n     }\n   }\n   return dumpFile;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1308,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (tableExists(conn,tableName)) {\n  Path dumpFile=Files.createTempFile(dumpPrefix,null);\n  Files.deleteIfExists(dumpFile);\n  CSVFormat csvFormat=CSV_DUMP_FORMAT;\n  if (printHeader) {\n    csvFormat=csvFormat.withHeader(columns);\n  }\n  try (CSVPrinter csvPrinter=new CSVPrinter(Files.newBufferedWriter(dumpFile),csvFormat)){\n    try (PreparedStatement stmt=conn.prepareStatement(\"SELECT * FROM \" + tableName)){\n      try (ResultSet tableRes=stmt.executeQuery()){\n        ResultSetMetaData resMetaData=tableRes.getMetaData();\n        Map<String,Integer> columnIndexMap=new HashMap<>();\n        for (int i=1; i <= resMetaData.getColumnCount(); i++) {\n          String columnName=resMetaData.getColumnName(i);\n          columnIndexMap.put(columnName.toUpperCase(),i);\n        }\n        while (tableRes.next()) {\n          dumpRow(tableRes,columnIndexMap,columns,defaultValues,csvPrinter);\n        }\n      }\n     }\n   }\n   return dumpFile;\n}\n else {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 146,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1325,
        "startLineNumber" : 51,
        "startColumnNumber" : 140,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (tableExists(conn,tableName)) {\n    Path dumpFile=Files.createTempFile(dumpPrefix,null);\n    Files.deleteIfExists(dumpFile);\n    CSVFormat csvFormat=CSV_DUMP_FORMAT;\n    if (printHeader) {\n      csvFormat=csvFormat.withHeader(columns);\n    }\n    try (CSVPrinter csvPrinter=new CSVPrinter(Files.newBufferedWriter(dumpFile),csvFormat)){\n      try (PreparedStatement stmt=conn.prepareStatement(\"SELECT * FROM \" + tableName)){\n        try (ResultSet tableRes=stmt.executeQuery()){\n          ResultSetMetaData resMetaData=tableRes.getMetaData();\n          Map<String,Integer> columnIndexMap=new HashMap<>();\n          for (int i=1; i <= resMetaData.getColumnCount(); i++) {\n            String columnName=resMetaData.getColumnName(i);\n            columnIndexMap.put(columnName.toUpperCase(),i);\n          }\n          while (tableRes.next()) {\n            dumpRow(tableRes,columnIndexMap,columns,defaultValues,csvPrinter);\n          }\n        }\n       }\n     }\n     return dumpFile;\n  }\n else {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 147,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1537,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static Path dumpTableIfExists(Connection conn,String tableName,String[] columns,String[] defaultValues,String dumpPrefix,boolean printHeader) throws Exception {\n  if (tableExists(conn,tableName)) {\n    Path dumpFile=Files.createTempFile(dumpPrefix,null);\n    Files.deleteIfExists(dumpFile);\n    CSVFormat csvFormat=CSV_DUMP_FORMAT;\n    if (printHeader) {\n      csvFormat=csvFormat.withHeader(columns);\n    }\n    try (CSVPrinter csvPrinter=new CSVPrinter(Files.newBufferedWriter(dumpFile),csvFormat)){\n      try (PreparedStatement stmt=conn.prepareStatement(\"SELECT * FROM \" + tableName)){\n        try (ResultSet tableRes=stmt.executeQuery()){\n          ResultSetMetaData resMetaData=tableRes.getMetaData();\n          Map<String,Integer> columnIndexMap=new HashMap<>();\n          for (int i=1; i <= resMetaData.getColumnCount(); i++) {\n            String columnName=resMetaData.getColumnName(i);\n            columnIndexMap.put(columnName.toUpperCase(),i);\n          }\n          while (tableRes.next()) {\n            dumpRow(tableRes,columnIndexMap,columns,defaultValues,csvPrinter);\n          }\n        }\n       }\n     }\n     return dumpFile;\n  }\n else {\n    return null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 182,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,resources]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 60,
        "startColumnNumber" : 17,
        "endLineNumber" : 60,
        "endColumnNumber" : 101
      },
      "nodeContext" : "CSVPrinter csvPrinter=new CSVPrinter(Files.newBufferedWriter(dumpFile),csvFormat)",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.io.BufferedWriter"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 60,
    "startColumnNumber" : 56,
    "endLineNumber" : 60,
    "endColumnNumber" : 89
  } ],
  "layoutRelationDataList" : [ ]
}