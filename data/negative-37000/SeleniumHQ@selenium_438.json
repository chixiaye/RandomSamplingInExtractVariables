{
  "id" : 438,
  "expression" : "selenium.getValue(\"theHidden\")",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/client/test/com/thoughtworks/selenium/corebased/TestFailingVerifications.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "selenium.getValue(\"theHidden\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 45,
      "startColumnNumber" : 19,
      "endLineNumber" : 45,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 45,
        "startColumnNumber" : 6,
        "endLineNumber" : 45,
        "endColumnNumber" : 74
      },
      "nodeContext" : "assertEquals(selenium.getValue(\"theHidden\"),\"not the hidden value\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 45,
        "startColumnNumber" : 6,
        "endLineNumber" : 45,
        "endColumnNumber" : 75
      },
      "nodeContext" : "assertEquals(selenium.getValue(\"theHidden\"),\"not the hidden value\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertEquals(selenium.getValue(\"theHidden\"),\"not the hidden value\");\n  fail(\"expected failure\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  assertEquals(selenium.getValue(\"theHidden\"),\"not the hidden value\");\n  fail(\"expected failure\");\n}\n catch (Throwable e) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2461,
        "startLineNumber" : 26,
        "startColumnNumber" : 41,
        "endLineNumber" : 110,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  selenium.open(\"/test_verifications.html\");\n  try {\n    assertTrue(selenium.getLocation().matches(\"^[\\\\s\\\\S]*/common/legacy/not_test_verifications\\\\.html$\"));\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n  try {\n    assertEquals(selenium.getValue(\"theText\"),\"not the text value\");\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n  try {\n    assertNotEquals(\"the text value\",selenium.getValue(\"theText\"));\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n  try {\n    assertEquals(selenium.getValue(\"theHidden\"),\"not the hidden value\");\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n  try {\n    assertEquals(selenium.getText(\"theSpan\"),\"this is not the span\");\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n  try {\n    assertTrue(selenium.isTextPresent(\"this is not the span\"));\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n  try {\n    assertFalse(selenium.isTextPresent(\"this is the span\"));\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n  try {\n    assertTrue(selenium.isElementPresent(\"notTheSpan\"));\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n  try {\n    assertFalse(selenium.isElementPresent(\"theSpan\"));\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n  try {\n    assertEquals(selenium.getTable(\"theTable.2.0\"),\"a\");\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n  try {\n    assertEquals(selenium.getSelectedIndex(\"theSelect\"),\"2\");\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n  try {\n    assertTrue(selenium.getSelectedValue(\"theSelect\").matches(\"^opt[\\\\s\\\\S]*3$\"));\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n  try {\n    assertEquals(selenium.getSelectedLabel(\"theSelect\"),\"third option\");\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n  try {\n    assertEquals(join(selenium.getSelectOptions(\"theSelect\"),','),\"first\\\\,option,second option\");\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n  try {\n    assertEquals(selenium.getAttribute(\"theText@class\"),\"bar\");\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n  try {\n    assertNotEquals(\"foo\",selenium.getAttribute(\"theText@class\"));\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 328,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2508,
        "startLineNumber" : 25,
        "startColumnNumber" : 2,
        "endLineNumber" : 110,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testFailingVerifications(){\n  selenium.open(\"/test_verifications.html\");\n  try {\n    assertTrue(selenium.getLocation().matches(\"^[\\\\s\\\\S]*/common/legacy/not_test_verifications\\\\.html$\"));\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n  try {\n    assertEquals(selenium.getValue(\"theText\"),\"not the text value\");\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n  try {\n    assertNotEquals(\"the text value\",selenium.getValue(\"theText\"));\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n  try {\n    assertEquals(selenium.getValue(\"theHidden\"),\"not the hidden value\");\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n  try {\n    assertEquals(selenium.getText(\"theSpan\"),\"this is not the span\");\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n  try {\n    assertTrue(selenium.isTextPresent(\"this is not the span\"));\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n  try {\n    assertFalse(selenium.isTextPresent(\"this is the span\"));\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n  try {\n    assertTrue(selenium.isElementPresent(\"notTheSpan\"));\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n  try {\n    assertFalse(selenium.isElementPresent(\"theSpan\"));\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n  try {\n    assertEquals(selenium.getTable(\"theTable.2.0\"),\"a\");\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n  try {\n    assertEquals(selenium.getSelectedIndex(\"theSelect\"),\"2\");\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n  try {\n    assertTrue(selenium.getSelectedValue(\"theSelect\").matches(\"^opt[\\\\s\\\\S]*3$\"));\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n  try {\n    assertEquals(selenium.getSelectedLabel(\"theSelect\"),\"third option\");\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n  try {\n    assertEquals(join(selenium.getSelectOptions(\"theSelect\"),','),\"first\\\\,option,second option\");\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n  try {\n    assertEquals(selenium.getAttribute(\"theText@class\"),\"bar\");\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n  try {\n    assertNotEquals(\"foo\",selenium.getAttribute(\"theText@class\"));\n    fail(\"expected failure\");\n  }\n catch (  Throwable e) {\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 334,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 45,
        "startColumnNumber" : 6,
        "endLineNumber" : 45,
        "endColumnNumber" : 75
      },
      "nodeContext" : "assertEquals(selenium.getValue(\"theHidden\"),\"not the hidden value\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 45,
    "startColumnNumber" : 19,
    "endLineNumber" : 45,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}