{
  "id" : 205,
  "expression" : "RootContext.getXID()",
  "projectName" : "seata@seata",
  "commitID" : "42d41623178ab076b11b27a0f049ac3ed7f1a9dc",
  "filePath" : "/integration/dubbo-alibaba/src/main/java/io/seata/integration/dubbo/alibaba/TransactionPropagationFilter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "RootContext.getXID()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 43,
      "startColumnNumber" : 21,
      "endLineNumber" : 43,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 43,
        "startColumnNumber" : 15,
        "endLineNumber" : 43,
        "endColumnNumber" : 41
      },
      "nodeContext" : "xid=RootContext.getXID()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 42
      },
      "nodeContext" : "String xid=RootContext.getXID();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1407,
        "startLineNumber" : 42,
        "startColumnNumber" : 88,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String xid=RootContext.getXID();\n  String rpcXid=RpcContext.getContext().getAttachment(RootContext.KEY_XID);\n  if (LOGGER.isDebugEnabled()) {\n    LOGGER.debug(\"xid in RootContext[\" + xid + \"] xid in RpcContext[\"+ rpcXid+ \"]\");\n  }\n  boolean bind=false;\n  if (xid != null) {\n    RpcContext.getContext().setAttachment(RootContext.KEY_XID,xid);\n  }\n else {\n    if (rpcXid != null) {\n      RootContext.bind(rpcXid);\n      bind=true;\n      if (LOGGER.isDebugEnabled()) {\n        LOGGER.debug(\"bind[\" + rpcXid + \"] to RootContext\");\n      }\n    }\n  }\n  try {\n    return invoker.invoke(invocation);\n  }\n  finally {\n    if (bind) {\n      String unbindXid=RootContext.unbind();\n      if (LOGGER.isDebugEnabled()) {\n        LOGGER.debug(\"unbind[\" + unbindXid + \"] from RootContext\");\n      }\n      if (!rpcXid.equalsIgnoreCase(unbindXid)) {\n        LOGGER.warn(\"xid in change during RPC from \" + rpcXid + \" to \"+ unbindXid);\n        if (unbindXid != null) {\n          RootContext.bind(unbindXid);\n          LOGGER.warn(\"bind [\" + unbindXid + \"] back to RootContext\");\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1505,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Result invoke(Invoker<?> invoker,Invocation invocation) throws RpcException {\n  String xid=RootContext.getXID();\n  String rpcXid=RpcContext.getContext().getAttachment(RootContext.KEY_XID);\n  if (LOGGER.isDebugEnabled()) {\n    LOGGER.debug(\"xid in RootContext[\" + xid + \"] xid in RpcContext[\"+ rpcXid+ \"]\");\n  }\n  boolean bind=false;\n  if (xid != null) {\n    RpcContext.getContext().setAttachment(RootContext.KEY_XID,xid);\n  }\n else {\n    if (rpcXid != null) {\n      RootContext.bind(rpcXid);\n      bind=true;\n      if (LOGGER.isDebugEnabled()) {\n        LOGGER.debug(\"bind[\" + rpcXid + \"] to RootContext\");\n      }\n    }\n  }\n  try {\n    return invoker.invoke(invocation);\n  }\n  finally {\n    if (bind) {\n      String unbindXid=RootContext.unbind();\n      if (LOGGER.isDebugEnabled()) {\n        LOGGER.debug(\"unbind[\" + unbindXid + \"] from RootContext\");\n      }\n      if (!rpcXid.equalsIgnoreCase(unbindXid)) {\n        LOGGER.warn(\"xid in change during RPC from \" + rpcXid + \" to \"+ unbindXid);\n        if (unbindXid != null) {\n          RootContext.bind(unbindXid);\n          LOGGER.warn(\"bind [\" + unbindXid + \"] back to RootContext\");\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 170,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 42
      },
      "nodeContext" : "String xid=RootContext.getXID();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 43,
    "startColumnNumber" : 21,
    "endLineNumber" : 43,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}