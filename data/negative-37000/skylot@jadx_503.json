{
  "id" : 503,
  "expression" : "i",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-gui/src/main/java/jadx/gui/utils/search/SimpleIndex.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 48,
      "startColumnNumber" : 20,
      "endLineNumber" : 48,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 48,
        "startColumnNumber" : 20,
        "endLineNumber" : 48,
        "endColumnNumber" : 28
      },
      "nodeContext" : "i < size",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < size; i++) {\n  if (isMatched(keys.get(i),searchStr,caseInsensitive)) {\n    emitter.onNext(values.get(i));\n  }\n  if (emitter.isCancelled()) {\n    return;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 36,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 239,
        "startLineNumber" : 46,
        "startColumnNumber" : 27,
        "endLineNumber" : 56,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  int size=keys.size();\n  for (int i=0; i < size; i++) {\n    if (isMatched(keys.get(i),searchStr,caseInsensitive)) {\n      emitter.onNext(values.get(i));\n    }\n    if (emitter.isCancelled()) {\n      return;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 263,
        "startLineNumber" : 46,
        "startColumnNumber" : 3,
        "endLineNumber" : 56,
        "endColumnNumber" : 4
      },
      "nodeContext" : "synchronized (syncData) {\n  int size=keys.size();\n  for (int i=0; i < size; i++) {\n    if (isMatched(keys.get(i),searchStr,caseInsensitive)) {\n      emitter.onNext(values.get(i));\n    }\n    if (emitter.isCancelled()) {\n      return;\n    }\n  }\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 46,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 297,
        "startLineNumber" : 45,
        "startColumnNumber" : 36,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\nsynchronized (syncData) {\n    int size=keys.size();\n    for (int i=0; i < size; i++) {\n      if (isMatched(keys.get(i),searchStr,caseInsensitive)) {\n        emitter.onNext(values.get(i));\n      }\n      if (emitter.isCancelled()) {\n        return;\n      }\n    }\n  }\n  emitter.onComplete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 308,
        "startLineNumber" : 45,
        "startColumnNumber" : 25,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "emitter -> {\nsynchronized (syncData) {\n    int size=keys.size();\n    for (int i=0; i < size; i++) {\n      if (isMatched(keys.get(i),searchStr,caseInsensitive)) {\n        emitter.onNext(values.get(i));\n      }\n      if (emitter.isCancelled()) {\n        return;\n      }\n    }\n  }\n  emitter.onComplete();\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 54,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 48,
        "startColumnNumber" : 20,
        "endLineNumber" : 48,
        "endColumnNumber" : 28
      },
      "nodeContext" : "i < size",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 49,
      "startColumnNumber" : 28,
      "endLineNumber" : 49,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 49,
        "startColumnNumber" : 19,
        "endLineNumber" : 49,
        "endColumnNumber" : 30
      },
      "nodeContext" : "keys.get(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 49,
        "startColumnNumber" : 9,
        "endLineNumber" : 49,
        "endColumnNumber" : 59
      },
      "nodeContext" : "isMatched(keys.get(i),searchStr,caseInsensitive)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 49,
        "startColumnNumber" : 5,
        "endLineNumber" : 51,
        "endColumnNumber" : 6
      },
      "nodeContext" : "if (isMatched(keys.get(i),searchStr,caseInsensitive)) {\n  emitter.onNext(values.get(i));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 48,
        "startColumnNumber" : 35,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (isMatched(keys.get(i),searchStr,caseInsensitive)) {\n    emitter.onNext(values.get(i));\n  }\n  if (emitter.isCancelled()) {\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < size; i++) {\n  if (isMatched(keys.get(i),searchStr,caseInsensitive)) {\n    emitter.onNext(values.get(i));\n  }\n  if (emitter.isCancelled()) {\n    return;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 36,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 239,
        "startLineNumber" : 46,
        "startColumnNumber" : 27,
        "endLineNumber" : 56,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  int size=keys.size();\n  for (int i=0; i < size; i++) {\n    if (isMatched(keys.get(i),searchStr,caseInsensitive)) {\n      emitter.onNext(values.get(i));\n    }\n    if (emitter.isCancelled()) {\n      return;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 263,
        "startLineNumber" : 46,
        "startColumnNumber" : 3,
        "endLineNumber" : 56,
        "endColumnNumber" : 4
      },
      "nodeContext" : "synchronized (syncData) {\n  int size=keys.size();\n  for (int i=0; i < size; i++) {\n    if (isMatched(keys.get(i),searchStr,caseInsensitive)) {\n      emitter.onNext(values.get(i));\n    }\n    if (emitter.isCancelled()) {\n      return;\n    }\n  }\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 46,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 297,
        "startLineNumber" : 45,
        "startColumnNumber" : 36,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\nsynchronized (syncData) {\n    int size=keys.size();\n    for (int i=0; i < size; i++) {\n      if (isMatched(keys.get(i),searchStr,caseInsensitive)) {\n        emitter.onNext(values.get(i));\n      }\n      if (emitter.isCancelled()) {\n        return;\n      }\n    }\n  }\n  emitter.onComplete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 308,
        "startLineNumber" : 45,
        "startColumnNumber" : 25,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "emitter -> {\nsynchronized (syncData) {\n    int size=keys.size();\n    for (int i=0; i < size; i++) {\n      if (isMatched(keys.get(i),searchStr,caseInsensitive)) {\n        emitter.onNext(values.get(i));\n      }\n      if (emitter.isCancelled()) {\n        return;\n      }\n    }\n  }\n  emitter.onComplete();\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 54,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 49,
        "startColumnNumber" : 9,
        "endLineNumber" : 49,
        "endColumnNumber" : 59
      },
      "nodeContext" : "isMatched(keys.get(i),searchStr,caseInsensitive)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 50,
      "startColumnNumber" : 32,
      "endLineNumber" : 50,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 50,
        "startColumnNumber" : 21,
        "endLineNumber" : 50,
        "endColumnNumber" : 34
      },
      "nodeContext" : "values.get(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 50,
        "startColumnNumber" : 6,
        "endLineNumber" : 50,
        "endColumnNumber" : 35
      },
      "nodeContext" : "emitter.onNext(values.get(i))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 50,
        "startColumnNumber" : 6,
        "endLineNumber" : 50,
        "endColumnNumber" : 36
      },
      "nodeContext" : "emitter.onNext(values.get(i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 49,
        "startColumnNumber" : 61,
        "endLineNumber" : 51,
        "endColumnNumber" : 6
      },
      "nodeContext" : "{\n  emitter.onNext(values.get(i));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 49,
        "startColumnNumber" : 5,
        "endLineNumber" : 51,
        "endColumnNumber" : 6
      },
      "nodeContext" : "if (isMatched(keys.get(i),searchStr,caseInsensitive)) {\n  emitter.onNext(values.get(i));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 48,
        "startColumnNumber" : 35,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (isMatched(keys.get(i),searchStr,caseInsensitive)) {\n    emitter.onNext(values.get(i));\n  }\n  if (emitter.isCancelled()) {\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < size; i++) {\n  if (isMatched(keys.get(i),searchStr,caseInsensitive)) {\n    emitter.onNext(values.get(i));\n  }\n  if (emitter.isCancelled()) {\n    return;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 36,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 239,
        "startLineNumber" : 46,
        "startColumnNumber" : 27,
        "endLineNumber" : 56,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  int size=keys.size();\n  for (int i=0; i < size; i++) {\n    if (isMatched(keys.get(i),searchStr,caseInsensitive)) {\n      emitter.onNext(values.get(i));\n    }\n    if (emitter.isCancelled()) {\n      return;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 263,
        "startLineNumber" : 46,
        "startColumnNumber" : 3,
        "endLineNumber" : 56,
        "endColumnNumber" : 4
      },
      "nodeContext" : "synchronized (syncData) {\n  int size=keys.size();\n  for (int i=0; i < size; i++) {\n    if (isMatched(keys.get(i),searchStr,caseInsensitive)) {\n      emitter.onNext(values.get(i));\n    }\n    if (emitter.isCancelled()) {\n      return;\n    }\n  }\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 46,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 297,
        "startLineNumber" : 45,
        "startColumnNumber" : 36,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\nsynchronized (syncData) {\n    int size=keys.size();\n    for (int i=0; i < size; i++) {\n      if (isMatched(keys.get(i),searchStr,caseInsensitive)) {\n        emitter.onNext(values.get(i));\n      }\n      if (emitter.isCancelled()) {\n        return;\n      }\n    }\n  }\n  emitter.onComplete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 308,
        "startLineNumber" : 45,
        "startColumnNumber" : 25,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "emitter -> {\nsynchronized (syncData) {\n    int size=keys.size();\n    for (int i=0; i < size; i++) {\n      if (isMatched(keys.get(i),searchStr,caseInsensitive)) {\n        emitter.onNext(values.get(i));\n      }\n      if (emitter.isCancelled()) {\n        return;\n      }\n    }\n  }\n  emitter.onComplete();\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 54,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 50,
        "startColumnNumber" : 6,
        "endLineNumber" : 50,
        "endColumnNumber" : 36
      },
      "nodeContext" : "emitter.onNext(values.get(i));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 48,
    "startColumnNumber" : 20,
    "endLineNumber" : 48,
    "endColumnNumber" : 21
  }, {
    "charLength" : 1,
    "startLineNumber" : 49,
    "startColumnNumber" : 28,
    "endLineNumber" : 49,
    "endColumnNumber" : 29
  }, {
    "charLength" : 1,
    "startLineNumber" : 50,
    "startColumnNumber" : 32,
    "endLineNumber" : 50,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}