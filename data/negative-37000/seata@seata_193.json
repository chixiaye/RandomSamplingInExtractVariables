{
  "id" : 193,
  "expression" : "mockInsertColumns()",
  "projectName" : "seata@seata",
  "commitID" : "42d41623178ab076b11b27a0f049ac3ed7f1a9dc",
  "filePath" : "/rm-datasource/src/test/java/io/seata/rm/datasource/exec/InsertExecutorTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mockInsertColumns()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 131,
      "startColumnNumber" : 37,
      "endLineNumber" : 131,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 131,
        "startColumnNumber" : 21,
        "endLineNumber" : 131,
        "endColumnNumber" : 56
      },
      "nodeContext" : "insertColumns=mockInsertColumns()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 131,
        "startColumnNumber" : 8,
        "endLineNumber" : 131,
        "endColumnNumber" : 57
      },
      "nodeContext" : "List<String> insertColumns=mockInsertColumns();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 388,
        "startLineNumber" : 130,
        "startColumnNumber" : 33,
        "endLineNumber" : 137,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<String> insertColumns=mockInsertColumns();\n  doReturn(tableMeta).when(insertExecutor).getTableMeta();\n  when(tableMeta.containsPK(insertColumns)).thenReturn(true);\n  Assertions.assertTrue(insertExecutor.containsPK());\n  when(tableMeta.containsPK(insertColumns)).thenReturn(false);\n  Assertions.assertFalse(insertExecutor.containsPK());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 427,
        "startLineNumber" : 129,
        "startColumnNumber" : 4,
        "endLineNumber" : 137,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testContainsPK(){\n  List<String> insertColumns=mockInsertColumns();\n  doReturn(tableMeta).when(insertExecutor).getTableMeta();\n  when(tableMeta.containsPK(insertColumns)).thenReturn(true);\n  Assertions.assertTrue(insertExecutor.containsPK());\n  when(tableMeta.containsPK(insertColumns)).thenReturn(false);\n  Assertions.assertFalse(insertExecutor.containsPK());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 60,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 131,
        "startColumnNumber" : 8,
        "endLineNumber" : 131,
        "endColumnNumber" : 57
      },
      "nodeContext" : "List<String> insertColumns=mockInsertColumns();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 131,
    "startColumnNumber" : 37,
    "endLineNumber" : 131,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}