{
  "id" : 1,
  "expression" : "\"lock2 interval\"",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/indexing-service/src/test/java/org/apache/druid/indexing/overlord/RealtimeishTask.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"lock2 interval\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 96,
      "startColumnNumber" : 24,
      "endLineNumber" : 96,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 96,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 73
      },
      "nodeContext" : "Assert.assertEquals(\"lock2 interval\",interval2,lock2.getInterval())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 96,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Assert.assertEquals(\"lock2 interval\",interval2,lock2.getInterval());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2732,
        "startLineNumber" : 71,
        "startColumnNumber" : 2,
        "endLineNumber" : 141,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final Interval interval1=Intervals.of(\"2010-01-01T00/PT1H\");\n  final Interval interval2=Intervals.of(\"2010-01-01T01/PT1H\");\n  final TaskLock lock1=toolbox.getTaskActionClient().submit(new TimeChunkLockAcquireAction(TaskLockType.EXCLUSIVE,interval1,5000));\n  Assert.assertNotNull(lock1);\n  final List<TaskLock> locks1=toolbox.getTaskActionClient().submit(new LockListAction());\n  Assert.assertEquals(\"lock1 interval\",interval1,lock1.getInterval());\n  Assert.assertEquals(\"locks1\",ImmutableList.of(lock1),locks1);\n  final TaskLock lock2=toolbox.getTaskActionClient().submit(new TimeChunkLockAcquireAction(TaskLockType.EXCLUSIVE,interval2,5000));\n  Assert.assertNotNull(lock2);\n  final List<TaskLock> locks2=toolbox.getTaskActionClient().submit(new LockListAction());\n  Assert.assertEquals(\"lock2 interval\",interval2,lock2.getInterval());\n  Assert.assertEquals(\"locks2\",ImmutableList.of(lock1,lock2),locks2);\n  SegmentInsertAction firstSegmentInsertAction=new SegmentInsertAction(ImmutableSet.of(DataSegment.builder().dataSource(\"foo\").interval(interval1).version(lock1.getVersion()).size(0).build()));\n  toolbox.getTaskActionClient().submit(firstSegmentInsertAction);\n  toolbox.getTaskActionClient().submit(new LockReleaseAction(interval1));\n  final List<TaskLock> locks3=toolbox.getTaskActionClient().submit(new LockListAction());\n  Assert.assertEquals(\"locks3\",ImmutableList.of(lock2),locks3);\n  SegmentInsertAction secondSegmentInsertAction=new SegmentInsertAction(ImmutableSet.of(DataSegment.builder().dataSource(\"foo\").interval(interval2).version(lock2.getVersion()).size(0).build()));\n  toolbox.getTaskActionClient().submit(secondSegmentInsertAction);\n  toolbox.getTaskActionClient().submit(new LockReleaseAction(interval2));\n  final List<TaskLock> locks4=toolbox.getTaskActionClient().submit(new LockListAction());\n  Assert.assertEquals(\"locks4\",ImmutableList.<TaskLock>of(),locks4);\n  return TaskStatus.success(getId());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 297,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2806,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 141,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public TaskStatus run(TaskToolbox toolbox) throws Exception {\n  final Interval interval1=Intervals.of(\"2010-01-01T00/PT1H\");\n  final Interval interval2=Intervals.of(\"2010-01-01T01/PT1H\");\n  final TaskLock lock1=toolbox.getTaskActionClient().submit(new TimeChunkLockAcquireAction(TaskLockType.EXCLUSIVE,interval1,5000));\n  Assert.assertNotNull(lock1);\n  final List<TaskLock> locks1=toolbox.getTaskActionClient().submit(new LockListAction());\n  Assert.assertEquals(\"lock1 interval\",interval1,lock1.getInterval());\n  Assert.assertEquals(\"locks1\",ImmutableList.of(lock1),locks1);\n  final TaskLock lock2=toolbox.getTaskActionClient().submit(new TimeChunkLockAcquireAction(TaskLockType.EXCLUSIVE,interval2,5000));\n  Assert.assertNotNull(lock2);\n  final List<TaskLock> locks2=toolbox.getTaskActionClient().submit(new LockListAction());\n  Assert.assertEquals(\"lock2 interval\",interval2,lock2.getInterval());\n  Assert.assertEquals(\"locks2\",ImmutableList.of(lock1,lock2),locks2);\n  SegmentInsertAction firstSegmentInsertAction=new SegmentInsertAction(ImmutableSet.of(DataSegment.builder().dataSource(\"foo\").interval(interval1).version(lock1.getVersion()).size(0).build()));\n  toolbox.getTaskActionClient().submit(firstSegmentInsertAction);\n  toolbox.getTaskActionClient().submit(new LockReleaseAction(interval1));\n  final List<TaskLock> locks3=toolbox.getTaskActionClient().submit(new LockListAction());\n  Assert.assertEquals(\"locks3\",ImmutableList.of(lock2),locks3);\n  SegmentInsertAction secondSegmentInsertAction=new SegmentInsertAction(ImmutableSet.of(DataSegment.builder().dataSource(\"foo\").interval(interval2).version(lock2.getVersion()).size(0).build()));\n  toolbox.getTaskActionClient().submit(secondSegmentInsertAction);\n  toolbox.getTaskActionClient().submit(new LockReleaseAction(interval2));\n  final List<TaskLock> locks4=toolbox.getTaskActionClient().submit(new LockListAction());\n  Assert.assertEquals(\"locks4\",ImmutableList.<TaskLock>of(),locks4);\n  return TaskStatus.success(getId());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 310,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 96,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Assert.assertEquals(\"lock2 interval\",interval2,lock2.getInterval());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 96,
    "startColumnNumber" : 24,
    "endLineNumber" : 96,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}