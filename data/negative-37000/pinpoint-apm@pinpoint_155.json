{
  "id" : 155,
  "expression" : "(target instanceof DatabaseInfoAccessor) ? ((DatabaseInfoAccessor)target)._$PINPOINT$_getDatabaseInfo() : null",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/plugins/cassandra/src/main/java/com/navercorp/pinpoint/plugin/cassandra/interceptor/CassandraStatementExecuteQueryInterceptor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(target instanceof DatabaseInfoAccessor) ? ((DatabaseInfoAccessor)target)._$PINPOINT$_getDatabaseInfo() : null",
    "nodeType" : "ConditionalExpression",
    "nodePosition" : {
      "charLength" : 131,
      "startLineNumber" : 84,
      "startColumnNumber" : 40,
      "endLineNumber" : 85,
      "endColumnNumber" : 90
    },
    "astNodeNumber" : 14,
    "astHeight" : 6,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 84,
        "startColumnNumber" : 25,
        "endLineNumber" : 85,
        "endColumnNumber" : 90
      },
      "nodeContext" : "databaseInfo=(target instanceof DatabaseInfoAccessor) ? ((DatabaseInfoAccessor)target)._$PINPOINT$_getDatabaseInfo() : null",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 160,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 85,
        "endColumnNumber" : 91
      },
      "nodeContext" : "DatabaseInfo databaseInfo=(target instanceof DatabaseInfoAccessor) ? ((DatabaseInfoAccessor)target)._$PINPOINT$_getDatabaseInfo() : null;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1989,
        "startLineNumber" : 83,
        "startColumnNumber" : 12,
        "endLineNumber" : 127,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  DatabaseInfo databaseInfo=(target instanceof DatabaseInfoAccessor) ? ((DatabaseInfoAccessor)target)._$PINPOINT$_getDatabaseInfo() : null;\n  if (databaseInfo == null) {\n    databaseInfo=UnKnownDatabaseInfo.INSTANCE;\n  }\n  recorder.recordServiceType(databaseInfo.getExecuteQueryType());\n  recorder.recordEndPoint(databaseInfo.getMultipleHost());\n  recorder.recordDestinationId(databaseInfo.getDatabaseId());\n  String sql;\n  if (args[0] instanceof BoundStatement) {\n    sql=((BoundStatement)args[0]).preparedStatement().getQueryString();\n  }\n else   if (args[0] instanceof RegularStatement) {\n    sql=((RegularStatement)args[0]).getQueryString();\n  }\n else {\n    sql=(String)args[0];\n  }\n  ParsingResult parsingResult=traceContext.parseSql(sql);\n  if (parsingResult != null) {\n    ((ParsingResultAccessor)target)._$PINPOINT$_setParsingResult(parsingResult);\n  }\n else {\n    if (logger.isErrorEnabled()) {\n      logger.error(\"sqlParsing fail. parsingResult is null sql:{}\",sql);\n    }\n  }\n  Map<Integer,String> bindValue=((BindValueAccessor)target)._$PINPOINT$_getBindValue();\n  if (bindValue != null && !bindValue.isEmpty()) {\n    String bindString=toBindVariable(bindValue);\n    recorder.recordSqlParsingResult(parsingResult,bindString);\n  }\n else {\n    recorder.recordSqlParsingResult(parsingResult);\n  }\n  recorder.recordApi(descriptor);\n  clean(target);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2129,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 131,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  DatabaseInfo databaseInfo=(target instanceof DatabaseInfoAccessor) ? ((DatabaseInfoAccessor)target)._$PINPOINT$_getDatabaseInfo() : null;\n  if (databaseInfo == null) {\n    databaseInfo=UnKnownDatabaseInfo.INSTANCE;\n  }\n  recorder.recordServiceType(databaseInfo.getExecuteQueryType());\n  recorder.recordEndPoint(databaseInfo.getMultipleHost());\n  recorder.recordDestinationId(databaseInfo.getDatabaseId());\n  String sql;\n  if (args[0] instanceof BoundStatement) {\n    sql=((BoundStatement)args[0]).preparedStatement().getQueryString();\n  }\n else   if (args[0] instanceof RegularStatement) {\n    sql=((RegularStatement)args[0]).getQueryString();\n  }\n else {\n    sql=(String)args[0];\n  }\n  ParsingResult parsingResult=traceContext.parseSql(sql);\n  if (parsingResult != null) {\n    ((ParsingResultAccessor)target)._$PINPOINT$_setParsingResult(parsingResult);\n  }\n else {\n    if (logger.isErrorEnabled()) {\n      logger.error(\"sqlParsing fail. parsingResult is null sql:{}\",sql);\n    }\n  }\n  Map<Integer,String> bindValue=((BindValueAccessor)target)._$PINPOINT$_getBindValue();\n  if (bindValue != null && !bindValue.isEmpty()) {\n    String bindString=toBindVariable(bindValue);\n    recorder.recordSqlParsingResult(parsingResult,bindString);\n  }\n else {\n    recorder.recordSqlParsingResult(parsingResult);\n  }\n  recorder.recordApi(descriptor);\n  clean(target);\n}\n catch (Exception e) {\n  if (logger.isWarnEnabled()) {\n    logger.warn(e.getMessage(),e);\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 220,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2410,
        "startLineNumber" : 72,
        "startColumnNumber" : 53,
        "endLineNumber" : 132,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (isDebug) {\n    logger.beforeInterceptor(target,args);\n  }\n  Trace trace=traceContext.currentTraceObject();\n  if (trace == null) {\n    return;\n  }\n  SpanEventRecorder recorder=trace.traceBlockBegin();\n  try {\n    DatabaseInfo databaseInfo=(target instanceof DatabaseInfoAccessor) ? ((DatabaseInfoAccessor)target)._$PINPOINT$_getDatabaseInfo() : null;\n    if (databaseInfo == null) {\n      databaseInfo=UnKnownDatabaseInfo.INSTANCE;\n    }\n    recorder.recordServiceType(databaseInfo.getExecuteQueryType());\n    recorder.recordEndPoint(databaseInfo.getMultipleHost());\n    recorder.recordDestinationId(databaseInfo.getDatabaseId());\n    String sql;\n    if (args[0] instanceof BoundStatement) {\n      sql=((BoundStatement)args[0]).preparedStatement().getQueryString();\n    }\n else     if (args[0] instanceof RegularStatement) {\n      sql=((RegularStatement)args[0]).getQueryString();\n    }\n else {\n      sql=(String)args[0];\n    }\n    ParsingResult parsingResult=traceContext.parseSql(sql);\n    if (parsingResult != null) {\n      ((ParsingResultAccessor)target)._$PINPOINT$_setParsingResult(parsingResult);\n    }\n else {\n      if (logger.isErrorEnabled()) {\n        logger.error(\"sqlParsing fail. parsingResult is null sql:{}\",sql);\n      }\n    }\n    Map<Integer,String> bindValue=((BindValueAccessor)target)._$PINPOINT$_getBindValue();\n    if (bindValue != null && !bindValue.isEmpty()) {\n      String bindString=toBindVariable(bindValue);\n      recorder.recordSqlParsingResult(parsingResult,bindString);\n    }\n else {\n      recorder.recordSqlParsingResult(parsingResult);\n    }\n    recorder.recordApi(descriptor);\n    clean(target);\n  }\n catch (  Exception e) {\n    if (logger.isWarnEnabled()) {\n      logger.warn(e.getMessage(),e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 252,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2473,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 132,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void before(Object target,Object[] args){\n  if (isDebug) {\n    logger.beforeInterceptor(target,args);\n  }\n  Trace trace=traceContext.currentTraceObject();\n  if (trace == null) {\n    return;\n  }\n  SpanEventRecorder recorder=trace.traceBlockBegin();\n  try {\n    DatabaseInfo databaseInfo=(target instanceof DatabaseInfoAccessor) ? ((DatabaseInfoAccessor)target)._$PINPOINT$_getDatabaseInfo() : null;\n    if (databaseInfo == null) {\n      databaseInfo=UnKnownDatabaseInfo.INSTANCE;\n    }\n    recorder.recordServiceType(databaseInfo.getExecuteQueryType());\n    recorder.recordEndPoint(databaseInfo.getMultipleHost());\n    recorder.recordDestinationId(databaseInfo.getDatabaseId());\n    String sql;\n    if (args[0] instanceof BoundStatement) {\n      sql=((BoundStatement)args[0]).preparedStatement().getQueryString();\n    }\n else     if (args[0] instanceof RegularStatement) {\n      sql=((RegularStatement)args[0]).getQueryString();\n    }\n else {\n      sql=(String)args[0];\n    }\n    ParsingResult parsingResult=traceContext.parseSql(sql);\n    if (parsingResult != null) {\n      ((ParsingResultAccessor)target)._$PINPOINT$_setParsingResult(parsingResult);\n    }\n else {\n      if (logger.isErrorEnabled()) {\n        logger.error(\"sqlParsing fail. parsingResult is null sql:{}\",sql);\n      }\n    }\n    Map<Integer,String> bindValue=((BindValueAccessor)target)._$PINPOINT$_getBindValue();\n    if (bindValue != null && !bindValue.isEmpty()) {\n      String bindString=toBindVariable(bindValue);\n      recorder.recordSqlParsingResult(parsingResult,bindString);\n    }\n else {\n      recorder.recordSqlParsingResult(parsingResult);\n    }\n    recorder.recordApi(descriptor);\n    clean(target);\n  }\n catch (  Exception e) {\n    if (logger.isWarnEnabled()) {\n      logger.warn(e.getMessage(),e);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 268,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 160,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 85,
        "endColumnNumber" : 91
      },
      "nodeContext" : "DatabaseInfo databaseInfo=(target instanceof DatabaseInfoAccessor) ? ((DatabaseInfoAccessor)target)._$PINPOINT$_getDatabaseInfo() : null;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    },
    "tokenLength" : 7,
    "type" : "com.navercorp.pinpoint.bootstrap.context.DatabaseInfo"
  } ],
  "positionList" : [ {
    "charLength" : 131,
    "startLineNumber" : 84,
    "startColumnNumber" : 40,
    "endLineNumber" : 85,
    "endColumnNumber" : 90
  } ],
  "layoutRelationDataList" : [ ]
}