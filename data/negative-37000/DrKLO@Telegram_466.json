{
  "id" : 466,
  "expression" : "position + trimBytes",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/com/google/android/exoplayer2/audio/TrimmingAudioProcessor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "position + trimBytes",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 92,
      "startColumnNumber" : 25,
      "endLineNumber" : 92,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 46
      },
      "nodeContext" : "inputBuffer.position(position + trimBytes)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 47
      },
      "nodeContext" : "inputBuffer.position(position + trimBytes);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1953,
        "startLineNumber" : 79,
        "startColumnNumber" : 49,
        "endLineNumber" : 125,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int position=inputBuffer.position();\n  int limit=inputBuffer.limit();\n  int remaining=limit - position;\n  if (remaining == 0) {\n    return;\n  }\n  int trimBytes=Math.min(remaining,pendingTrimStartBytes);\n  trimmedFrameCount+=trimBytes / inputAudioFormat.bytesPerFrame;\n  pendingTrimStartBytes-=trimBytes;\n  inputBuffer.position(position + trimBytes);\n  if (pendingTrimStartBytes > 0) {\n    return;\n  }\n  remaining-=trimBytes;\n  int remainingBytesToOutput=endBufferSize + remaining - endBuffer.length;\n  ByteBuffer buffer=replaceOutputBuffer(remainingBytesToOutput);\n  int endBufferBytesToOutput=Util.constrainValue(remainingBytesToOutput,0,endBufferSize);\n  buffer.put(endBuffer,0,endBufferBytesToOutput);\n  remainingBytesToOutput-=endBufferBytesToOutput;\n  int inputBufferBytesToOutput=Util.constrainValue(remainingBytesToOutput,0,remaining);\n  inputBuffer.limit(inputBuffer.position() + inputBufferBytesToOutput);\n  buffer.put(inputBuffer);\n  inputBuffer.limit(limit);\n  remaining-=inputBufferBytesToOutput;\n  endBufferSize-=endBufferBytesToOutput;\n  System.arraycopy(endBuffer,endBufferBytesToOutput,endBuffer,0,endBufferSize);\n  inputBuffer.get(endBuffer,endBufferSize,remaining);\n  endBufferSize+=remaining;\n  buffer.flip();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2012,
        "startLineNumber" : 78,
        "startColumnNumber" : 2,
        "endLineNumber" : 125,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void queueInput(ByteBuffer inputBuffer){\n  int position=inputBuffer.position();\n  int limit=inputBuffer.limit();\n  int remaining=limit - position;\n  if (remaining == 0) {\n    return;\n  }\n  int trimBytes=Math.min(remaining,pendingTrimStartBytes);\n  trimmedFrameCount+=trimBytes / inputAudioFormat.bytesPerFrame;\n  pendingTrimStartBytes-=trimBytes;\n  inputBuffer.position(position + trimBytes);\n  if (pendingTrimStartBytes > 0) {\n    return;\n  }\n  remaining-=trimBytes;\n  int remainingBytesToOutput=endBufferSize + remaining - endBuffer.length;\n  ByteBuffer buffer=replaceOutputBuffer(remainingBytesToOutput);\n  int endBufferBytesToOutput=Util.constrainValue(remainingBytesToOutput,0,endBufferSize);\n  buffer.put(endBuffer,0,endBufferBytesToOutput);\n  remainingBytesToOutput-=endBufferBytesToOutput;\n  int inputBufferBytesToOutput=Util.constrainValue(remainingBytesToOutput,0,remaining);\n  inputBuffer.limit(inputBuffer.position() + inputBufferBytesToOutput);\n  buffer.put(inputBuffer);\n  inputBuffer.limit(limit);\n  remaining-=inputBufferBytesToOutput;\n  endBufferSize-=endBufferBytesToOutput;\n  System.arraycopy(endBuffer,endBufferBytesToOutput,endBuffer,0,endBufferSize);\n  inputBuffer.get(endBuffer,endBufferSize,remaining);\n  endBufferSize+=remaining;\n  buffer.flip();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 177,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 47
      },
      "nodeContext" : "inputBuffer.position(position + trimBytes);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 92,
    "startColumnNumber" : 25,
    "endLineNumber" : 92,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}