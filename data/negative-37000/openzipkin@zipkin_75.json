{
  "id" : 75,
  "expression" : "change < threshold",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin-sampler/zookeeper/src/main/java/zipkin/sampler/zookeeper/SampleRateCalculator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "change < threshold",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 58,
      "startColumnNumber" : 10,
      "endLineNumber" : 58,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 58,
        "startColumnNumber" : 6,
        "endLineNumber" : 60,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (change < threshold) {\n  log.debug(\"Sample rate change was less than {} threshold. Ignoring\",threshold);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 228,
        "startLineNumber" : 56,
        "startColumnNumber" : 23,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  log.debug(\"Sample rate changed {} from {} to {}\",change,oldSampleRate,sampleRate);\n  if (change < threshold) {\n    log.debug(\"Sample rate change was less than {} threshold. Ignoring\",threshold);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 247,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (change > 0.0f) {\n  log.debug(\"Sample rate changed {} from {} to {}\",change,oldSampleRate,sampleRate);\n  if (change < threshold) {\n    log.debug(\"Sample rate change was less than {} threshold. Ignoring\",threshold);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 871,
        "startLineNumber" : 45,
        "startColumnNumber" : 72,
        "endLineNumber" : 63,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!input.isPresent())   return Optional.empty();\n  List<Integer> measurements=input.get();\n  int discountedAverage=discountedAverage(measurements,discountRate);\n  log.debug(\"{} discounted average measurement: {}\",discountRate,discountedAverage);\n  if (discountedAverage <= 0)   return Optional.empty();\n  float oldSampleRate=sampleRate.get();\n  float newSampleRate=Math.min(1.0f,oldSampleRate * target.get() / discountedAverage);\n  float change=Math.abs(oldSampleRate - newSampleRate) / oldSampleRate;\n  if (change > 0.0f) {\n    log.debug(\"Sample rate changed {} from {} to {}\",change,oldSampleRate,sampleRate);\n    if (change < threshold) {\n      log.debug(\"Sample rate change was less than {} threshold. Ignoring\",threshold);\n    }\n  }\n  return change >= threshold ? Optional.of(newSampleRate) : Optional.empty();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 941,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 63,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Optional<Float> apply(Optional<List<Integer>> input){\n  if (!input.isPresent())   return Optional.empty();\n  List<Integer> measurements=input.get();\n  int discountedAverage=discountedAverage(measurements,discountRate);\n  log.debug(\"{} discounted average measurement: {}\",discountRate,discountedAverage);\n  if (discountedAverage <= 0)   return Optional.empty();\n  float oldSampleRate=sampleRate.get();\n  float newSampleRate=Math.min(1.0f,oldSampleRate * target.get() / discountedAverage);\n  float change=Math.abs(oldSampleRate - newSampleRate) / oldSampleRate;\n  if (change > 0.0f) {\n    log.debug(\"Sample rate changed {} from {} to {}\",change,oldSampleRate,sampleRate);\n    if (change < threshold) {\n      log.debug(\"Sample rate change was less than {} threshold. Ignoring\",threshold);\n    }\n  }\n  return change >= threshold ? Optional.of(newSampleRate) : Optional.empty();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 58,
        "startColumnNumber" : 6,
        "endLineNumber" : 60,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (change < threshold) {\n  log.debug(\"Sample rate change was less than {} threshold. Ignoring\",threshold);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 58,
    "startColumnNumber" : 10,
    "endLineNumber" : 58,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ ]
}