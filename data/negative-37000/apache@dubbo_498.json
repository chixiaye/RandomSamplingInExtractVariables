{
  "id" : 498,
  "expression" : "protocolConfig",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/event/listener/PublishingServiceDefinitionListenerTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "protocolConfig",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 73,
      "startColumnNumber" : 8,
      "endLineNumber" : 73,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 94
      },
      "nodeContext" : "protocolConfig.setPort(NetUtils.getAvailablePort(20880 + new Random().nextInt(10000)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 95
      },
      "nodeContext" : "protocolConfig.setPort(NetUtils.getAvailablePort(20880 + new Random().nextInt(10000)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 815,
        "startLineNumber" : 71,
        "startColumnNumber" : 51,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ProtocolConfig protocolConfig=new ProtocolConfig(\"dubbo\");\n  protocolConfig.setPort(NetUtils.getAvailablePort(20880 + new Random().nextInt(10000)));\n  ServiceConfig<EchoService> serviceConfig=new ServiceConfig<>();\n  serviceConfig.setInterface(EchoService.class);\n  serviceConfig.setProtocol(protocolConfig);\n  serviceConfig.setRef(new EchoServiceImpl());\n  serviceConfig.setRegistry(new RegistryConfig(\"N/A\"));\n  serviceConfig.export();\n  String serviceDefinition=writableMetadataService.getServiceDefinition(EchoService.class.getName());\n  ServiceDefinition serviceDefinitionBuild=ServiceDefinitionBuilder.build(serviceConfig.getInterfaceClass());\n  assertEquals(serviceDefinition,new Gson().toJson(serviceDefinitionBuild));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 943,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Test  {@link ServiceConfigExportedEvent} arising\n */\n@Test public void testOnServiceConfigExportedEvent(){\n  ProtocolConfig protocolConfig=new ProtocolConfig(\"dubbo\");\n  protocolConfig.setPort(NetUtils.getAvailablePort(20880 + new Random().nextInt(10000)));\n  ServiceConfig<EchoService> serviceConfig=new ServiceConfig<>();\n  serviceConfig.setInterface(EchoService.class);\n  serviceConfig.setProtocol(protocolConfig);\n  serviceConfig.setRef(new EchoServiceImpl());\n  serviceConfig.setRegistry(new RegistryConfig(\"N/A\"));\n  serviceConfig.export();\n  String serviceDefinition=writableMetadataService.getServiceDefinition(EchoService.class.getName());\n  ServiceDefinition serviceDefinitionBuild=ServiceDefinitionBuilder.build(serviceConfig.getInterfaceClass());\n  assertEquals(serviceDefinition,new Gson().toJson(serviceDefinitionBuild));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 109,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 95
      },
      "nodeContext" : "protocolConfig.setPort(NetUtils.getAvailablePort(20880 + new Random().nextInt(10000)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.config.ProtocolConfig"
  }, {
    "nodeContext" : "protocolConfig",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 77,
      "startColumnNumber" : 34,
      "endLineNumber" : 77,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 49
      },
      "nodeContext" : "serviceConfig.setProtocol(protocolConfig)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 50
      },
      "nodeContext" : "serviceConfig.setProtocol(protocolConfig);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 815,
        "startLineNumber" : 71,
        "startColumnNumber" : 51,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ProtocolConfig protocolConfig=new ProtocolConfig(\"dubbo\");\n  protocolConfig.setPort(NetUtils.getAvailablePort(20880 + new Random().nextInt(10000)));\n  ServiceConfig<EchoService> serviceConfig=new ServiceConfig<>();\n  serviceConfig.setInterface(EchoService.class);\n  serviceConfig.setProtocol(protocolConfig);\n  serviceConfig.setRef(new EchoServiceImpl());\n  serviceConfig.setRegistry(new RegistryConfig(\"N/A\"));\n  serviceConfig.export();\n  String serviceDefinition=writableMetadataService.getServiceDefinition(EchoService.class.getName());\n  ServiceDefinition serviceDefinitionBuild=ServiceDefinitionBuilder.build(serviceConfig.getInterfaceClass());\n  assertEquals(serviceDefinition,new Gson().toJson(serviceDefinitionBuild));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 943,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Test  {@link ServiceConfigExportedEvent} arising\n */\n@Test public void testOnServiceConfigExportedEvent(){\n  ProtocolConfig protocolConfig=new ProtocolConfig(\"dubbo\");\n  protocolConfig.setPort(NetUtils.getAvailablePort(20880 + new Random().nextInt(10000)));\n  ServiceConfig<EchoService> serviceConfig=new ServiceConfig<>();\n  serviceConfig.setInterface(EchoService.class);\n  serviceConfig.setProtocol(protocolConfig);\n  serviceConfig.setRef(new EchoServiceImpl());\n  serviceConfig.setRegistry(new RegistryConfig(\"N/A\"));\n  serviceConfig.export();\n  String serviceDefinition=writableMetadataService.getServiceDefinition(EchoService.class.getName());\n  ServiceDefinition serviceDefinitionBuild=ServiceDefinitionBuilder.build(serviceConfig.getInterfaceClass());\n  assertEquals(serviceDefinition,new Gson().toJson(serviceDefinitionBuild));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 109,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 50
      },
      "nodeContext" : "serviceConfig.setProtocol(protocolConfig);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.config.ProtocolConfig"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 73,
    "startColumnNumber" : 8,
    "endLineNumber" : 73,
    "endColumnNumber" : 22
  }, {
    "charLength" : 14,
    "startLineNumber" : 77,
    "startColumnNumber" : 34,
    "endLineNumber" : 77,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}