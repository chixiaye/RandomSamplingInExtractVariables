{
  "id" : 381,
  "expression" : "','",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/third_party/java/proguard/proguard6.2.2/src/proguard/evaluation/value/InstructionOffsetValue.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "','",
    "nodeType" : "CharacterLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 431,
      "startColumnNumber" : 34,
      "endLineNumber" : 431,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 431,
        "startColumnNumber" : 20,
        "endLineNumber" : 431,
        "endColumnNumber" : 38
      },
      "nodeContext" : "buffer.append(',')",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 431,
        "startColumnNumber" : 20,
        "endLineNumber" : 431,
        "endColumnNumber" : 39
      },
      "nodeContext" : "buffer.append(',');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 430,
        "startColumnNumber" : 16,
        "endLineNumber" : 432,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  buffer.append(',');\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 429,
        "startColumnNumber" : 16,
        "endLineNumber" : 432,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (index > 0) {\n  buffer.append(',');\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1181,
        "startLineNumber" : 428,
        "startColumnNumber" : 12,
        "endLineNumber" : 472,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (index > 0) {\n    buffer.append(',');\n  }\n  if (values[index] < 0) {\n    buffer.append(values[index]);\n  }\n else {\n    if (isMethodParameter(index)) {\n      buffer.append('P');\n    }\n    if (isMethodReturnValue(index)) {\n      buffer.append('M');\n    }\n    if (isFieldValue(index)) {\n      buffer.append('F');\n    }\n    if (isNewinstance(index)) {\n      buffer.append('N');\n    }\n    if (isCast(index)) {\n      buffer.append('C');\n    }\n    if (isExceptionHandler(index)) {\n      buffer.append('E');\n    }\n    buffer.append(values[index] & 0xffff);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1245,
        "startLineNumber" : 427,
        "startColumnNumber" : 12,
        "endLineNumber" : 472,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int index=0; index < values.length; index++) {\n  if (index > 0) {\n    buffer.append(',');\n  }\n  if (values[index] < 0) {\n    buffer.append(values[index]);\n  }\n else {\n    if (isMethodParameter(index)) {\n      buffer.append('P');\n    }\n    if (isMethodReturnValue(index)) {\n      buffer.append('M');\n    }\n    if (isFieldValue(index)) {\n      buffer.append('F');\n    }\n    if (isNewinstance(index)) {\n      buffer.append('N');\n    }\n    if (isCast(index)) {\n      buffer.append('C');\n    }\n    if (isExceptionHandler(index)) {\n      buffer.append('E');\n    }\n    buffer.append(values[index] & 0xffff);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 108,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1269,
        "startLineNumber" : 426,
        "startColumnNumber" : 8,
        "endLineNumber" : 473,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int index=0; index < values.length; index++) {\n    if (index > 0) {\n      buffer.append(',');\n    }\n    if (values[index] < 0) {\n      buffer.append(values[index]);\n    }\n else {\n      if (isMethodParameter(index)) {\n        buffer.append('P');\n      }\n      if (isMethodReturnValue(index)) {\n        buffer.append('M');\n      }\n      if (isFieldValue(index)) {\n        buffer.append('F');\n      }\n      if (isNewinstance(index)) {\n        buffer.append('N');\n      }\n      if (isCast(index)) {\n        buffer.append('C');\n      }\n      if (isExceptionHandler(index)) {\n        buffer.append('E');\n      }\n      buffer.append(values[index] & 0xffff);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1297,
        "startLineNumber" : 425,
        "startColumnNumber" : 8,
        "endLineNumber" : 473,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (values != null) {\n  for (int index=0; index < values.length; index++) {\n    if (index > 0) {\n      buffer.append(',');\n    }\n    if (values[index] < 0) {\n      buffer.append(values[index]);\n    }\n else {\n      if (isMethodParameter(index)) {\n        buffer.append('P');\n      }\n      if (isMethodReturnValue(index)) {\n        buffer.append('M');\n      }\n      if (isFieldValue(index)) {\n        buffer.append('F');\n      }\n      if (isNewinstance(index)) {\n        buffer.append('N');\n      }\n      if (isCast(index)) {\n        buffer.append('C');\n      }\n      if (isExceptionHandler(index)) {\n        buffer.append('E');\n      }\n      buffer.append(values[index] & 0xffff);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 113,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1411,
        "startLineNumber" : 422,
        "startColumnNumber" : 4,
        "endLineNumber" : 476,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringBuffer buffer=new StringBuffer();\n  if (values != null) {\n    for (int index=0; index < values.length; index++) {\n      if (index > 0) {\n        buffer.append(',');\n      }\n      if (values[index] < 0) {\n        buffer.append(values[index]);\n      }\n else {\n        if (isMethodParameter(index)) {\n          buffer.append('P');\n        }\n        if (isMethodReturnValue(index)) {\n          buffer.append('M');\n        }\n        if (isFieldValue(index)) {\n          buffer.append('F');\n        }\n        if (isNewinstance(index)) {\n          buffer.append('N');\n        }\n        if (isCast(index)) {\n          buffer.append('C');\n        }\n        if (isExceptionHandler(index)) {\n          buffer.append('E');\n        }\n        buffer.append(values[index] & 0xffff);\n      }\n    }\n  }\n  return buffer.append(':').toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1440,
        "startLineNumber" : 421,
        "startColumnNumber" : 4,
        "endLineNumber" : 476,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public String toString(){\n  StringBuffer buffer=new StringBuffer();\n  if (values != null) {\n    for (int index=0; index < values.length; index++) {\n      if (index > 0) {\n        buffer.append(',');\n      }\n      if (values[index] < 0) {\n        buffer.append(values[index]);\n      }\n else {\n        if (isMethodParameter(index)) {\n          buffer.append('P');\n        }\n        if (isMethodReturnValue(index)) {\n          buffer.append('M');\n        }\n        if (isFieldValue(index)) {\n          buffer.append('F');\n        }\n        if (isNewinstance(index)) {\n          buffer.append('N');\n        }\n        if (isCast(index)) {\n          buffer.append('C');\n        }\n        if (isExceptionHandler(index)) {\n          buffer.append('E');\n        }\n        buffer.append(values[index] & 0xffff);\n      }\n    }\n  }\n  return buffer.append(':').toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 431,
        "startColumnNumber" : 20,
        "endLineNumber" : 431,
        "endColumnNumber" : 39
      },
      "nodeContext" : "buffer.append(',');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "char"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 431,
    "startColumnNumber" : 34,
    "endLineNumber" : 431,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}