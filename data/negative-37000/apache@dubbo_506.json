{
  "id" : 506,
  "expression" : "IllegalStateException.class",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-remoting/dubbo-remoting-netty/src/test/java/org/apache/dubbo/remoting/transport/netty/ClientsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "IllegalStateException.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 59,
      "startColumnNumber" : 32,
      "endLineNumber" : 59,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 10
      },
      "nodeContext" : "Assertions.assertThrows(IllegalStateException.class,() -> {\n  String name=\"nety\";\n  assertNull(ExtensionLoader.getExtensionLoader(Transporter.class).getExtension(name).getClass());\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 28,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 218,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 11
      },
      "nodeContext" : "Assertions.assertThrows(IllegalStateException.class,() -> {\n  String name=\"nety\";\n  assertNull(ExtensionLoader.getExtensionLoader(Transporter.class).getExtension(name).getClass());\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 29,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 58,
        "startColumnNumber" : 40,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assertions.assertThrows(IllegalStateException.class,() -> {\n    String name=\"nety\";\n    assertNull(ExtensionLoader.getExtensionLoader(Transporter.class).getExtension(name).getClass());\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 283,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testGetTransportWrong(){\n  Assertions.assertThrows(IllegalStateException.class,() -> {\n    String name=\"nety\";\n    assertNull(ExtensionLoader.getExtensionLoader(Transporter.class).getExtension(name).getClass());\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 36,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 10
      },
      "nodeContext" : "Assertions.assertThrows(IllegalStateException.class,() -> {\n  String name=\"nety\";\n  assertNull(ExtensionLoader.getExtensionLoader(Transporter.class).getExtension(name).getClass());\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 28,
      "astHeight" : 11
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<java.lang.IllegalStateException>"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 59,
    "startColumnNumber" : 32,
    "endLineNumber" : 59,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ ]
}