{
  "id" : 377,
  "expression" : "new DummyTask()",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/test/src/test/java/jenkins/agents/WebSocketAgentsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new DummyTask()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 103,
      "startColumnNumber" : 57,
      "endLineNumber" : 103,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 103,
        "startColumnNumber" : 37,
        "endLineNumber" : 103,
        "endColumnNumber" : 73
      },
      "nodeContext" : "s.getChannel().call(new DummyTask())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 103,
        "startColumnNumber" : 12,
        "endLineNumber" : 103,
        "endColumnNumber" : 74
      },
      "nodeContext" : "assertEquals(\"response\",s.getChannel().call(new DummyTask()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 103,
        "startColumnNumber" : 12,
        "endLineNumber" : 103,
        "endColumnNumber" : 75
      },
      "nodeContext" : "assertEquals(\"response\",s.getChannel().call(new DummyTask()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1267,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  JNLPLauncher launcher=new JNLPLauncher(true);\n  launcher.setWebSocket(true);\n  DumbSlave s=new DumbSlave(\"remote\",tmp.newFolder(\"agent\").getAbsolutePath(),launcher);\n  r.jenkins.addNode(s);\n  String secret=((SlaveComputer)s.toComputer()).getJnlpMac();\n  File slaveJar=tmp.newFile();\n  FileUtils.copyURLToFile(new Slave.JnlpJar(\"slave.jar\").getURL(),slaveJar);\n  proc.set(r.createLocalLauncher().launch().cmds(JavaEnvUtils.getJreExecutable(\"java\"),\"-jar\",slaveJar.getAbsolutePath(),\"-jnlpUrl\",r.getURL() + \"computer/remote/slave-agent.jnlp\",\"-secret\",secret).stdout(System.out).start());\n  r.waitOnline(s);\n  assertEquals(\"response\",s.getChannel().call(new DummyTask()));\n  assertNotNull(s.getChannel().call(new FatTask()));\n  FreeStyleProject p=r.createFreeStyleProject();\n  p.setAssignedNode(s);\n  p.getBuildersList().add(Functions.isWindows() ? new BatchFile(\"echo hello\") : new Shell(\"echo hello\"));\n  r.buildAndAssertSuccess(p);\n  s.toComputer().getLogText().writeLogTo(0,System.out);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 183,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1583,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  JNLPLauncher launcher=new JNLPLauncher(true);\n  launcher.setWebSocket(true);\n  DumbSlave s=new DumbSlave(\"remote\",tmp.newFolder(\"agent\").getAbsolutePath(),launcher);\n  r.jenkins.addNode(s);\n  String secret=((SlaveComputer)s.toComputer()).getJnlpMac();\n  File slaveJar=tmp.newFile();\n  FileUtils.copyURLToFile(new Slave.JnlpJar(\"slave.jar\").getURL(),slaveJar);\n  proc.set(r.createLocalLauncher().launch().cmds(JavaEnvUtils.getJreExecutable(\"java\"),\"-jar\",slaveJar.getAbsolutePath(),\"-jnlpUrl\",r.getURL() + \"computer/remote/slave-agent.jnlp\",\"-secret\",secret).stdout(System.out).start());\n  r.waitOnline(s);\n  assertEquals(\"response\",s.getChannel().call(new DummyTask()));\n  assertNotNull(s.getChannel().call(new FatTask()));\n  FreeStyleProject p=r.createFreeStyleProject();\n  p.setAssignedNode(s);\n  p.getBuildersList().add(Functions.isWindows() ? new BatchFile(\"echo hello\") : new Shell(\"echo hello\"));\n  r.buildAndAssertSuccess(p);\n  s.toComputer().getLogText().writeLogTo(0,System.out);\n}\n  finally {\n  if (proc.get() != null) {\n    proc.get().kill();\n    while (r.jenkins.getComputer(\"remote\").isOnline()) {\n      LOGGER.info(\"waiting for computer to go offline\");\n      Thread.sleep(250);\n    }\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 218,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1664,
        "startLineNumber" : 87,
        "startColumnNumber" : 42,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  AtomicReference<Proc> proc=new AtomicReference<>();\n  try {\n    JNLPLauncher launcher=new JNLPLauncher(true);\n    launcher.setWebSocket(true);\n    DumbSlave s=new DumbSlave(\"remote\",tmp.newFolder(\"agent\").getAbsolutePath(),launcher);\n    r.jenkins.addNode(s);\n    String secret=((SlaveComputer)s.toComputer()).getJnlpMac();\n    File slaveJar=tmp.newFile();\n    FileUtils.copyURLToFile(new Slave.JnlpJar(\"slave.jar\").getURL(),slaveJar);\n    proc.set(r.createLocalLauncher().launch().cmds(JavaEnvUtils.getJreExecutable(\"java\"),\"-jar\",slaveJar.getAbsolutePath(),\"-jnlpUrl\",r.getURL() + \"computer/remote/slave-agent.jnlp\",\"-secret\",secret).stdout(System.out).start());\n    r.waitOnline(s);\n    assertEquals(\"response\",s.getChannel().call(new DummyTask()));\n    assertNotNull(s.getChannel().call(new FatTask()));\n    FreeStyleProject p=r.createFreeStyleProject();\n    p.setAssignedNode(s);\n    p.getBuildersList().add(Functions.isWindows() ? new BatchFile(\"echo hello\") : new Shell(\"echo hello\"));\n    r.buildAndAssertSuccess(p);\n    s.toComputer().getLogText().writeLogTo(0,System.out);\n  }\n  finally {\n    if (proc.get() != null) {\n      proc.get().kill();\n      while (r.jenkins.getComputer(\"remote\").isOnline()) {\n        LOGGER.info(\"waiting for computer to go offline\");\n        Thread.sleep(250);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 231,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2256,
        "startLineNumber" : 77,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Verify basic functionality of an agent in  {@code -webSocket} mode.Requires  {@code remoting} to have been {@code mvn install}ed. Does not show  {@code FINE} or lower agent logs ({@link JenkinsRule#showAgentLogs(Slave,LoggerRule)} cannot be used here).Unlike  {@link hudson.slaves.JNLPLauncherTest} this does not use {@code javaws}; closer to  {@link hudson.bugs.JnlpAccessWithSecuredHudsonTest}.\n * @see hudson.remoting.Launcher\n */\n@SuppressWarnings(\"ResultOfMethodCallIgnored\") @Test public void smokes() throws Exception {\n  AtomicReference<Proc> proc=new AtomicReference<>();\n  try {\n    JNLPLauncher launcher=new JNLPLauncher(true);\n    launcher.setWebSocket(true);\n    DumbSlave s=new DumbSlave(\"remote\",tmp.newFolder(\"agent\").getAbsolutePath(),launcher);\n    r.jenkins.addNode(s);\n    String secret=((SlaveComputer)s.toComputer()).getJnlpMac();\n    File slaveJar=tmp.newFile();\n    FileUtils.copyURLToFile(new Slave.JnlpJar(\"slave.jar\").getURL(),slaveJar);\n    proc.set(r.createLocalLauncher().launch().cmds(JavaEnvUtils.getJreExecutable(\"java\"),\"-jar\",slaveJar.getAbsolutePath(),\"-jnlpUrl\",r.getURL() + \"computer/remote/slave-agent.jnlp\",\"-secret\",secret).stdout(System.out).start());\n    r.waitOnline(s);\n    assertEquals(\"response\",s.getChannel().call(new DummyTask()));\n    assertNotNull(s.getChannel().call(new FatTask()));\n    FreeStyleProject p=r.createFreeStyleProject();\n    p.setAssignedNode(s);\n    p.getBuildersList().add(Functions.isWindows() ? new BatchFile(\"echo hello\") : new Shell(\"echo hello\"));\n    r.buildAndAssertSuccess(p);\n    s.toComputer().getLogText().writeLogTo(0,System.out);\n  }\n  finally {\n    if (proc.get() != null) {\n      proc.get().kill();\n      while (r.jenkins.getComputer(\"remote\").isOnline()) {\n        LOGGER.info(\"waiting for computer to go offline\");\n        Thread.sleep(250);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 243,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 103,
        "startColumnNumber" : 12,
        "endLineNumber" : 103,
        "endColumnNumber" : 75
      },
      "nodeContext" : "assertEquals(\"response\",s.getChannel().call(new DummyTask()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "jenkins.agents.WebSocketAgentsTest.DummyTask"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 103,
    "startColumnNumber" : 57,
    "endLineNumber" : 103,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ ]
}