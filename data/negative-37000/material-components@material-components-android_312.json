{
  "id" : 312,
  "expression" : "parent",
  "projectName" : "material-components@material-components-android",
  "commitID" : "79bf9d0e8e62eea9c2f2620d4e1a0a2ca0e12017",
  "filePath" : "/lib/java/com/google/android/material/internal/DescendantOffsetUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "parent",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 56,
      "startColumnNumber" : 27,
      "endLineNumber" : 56,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 49
      },
      "nodeContext" : "offsetDescendantMatrix(parent,descendant,m)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 50
      },
      "nodeContext" : "offsetDescendantMatrix(parent,descendant,m);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 546,
        "startLineNumber" : 47,
        "startColumnNumber" : 88,
        "endLineNumber" : 70,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Matrix m=matrix.get();\n  if (m == null) {\n    m=new Matrix();\n    matrix.set(m);\n  }\n else {\n    m.reset();\n  }\n  offsetDescendantMatrix(parent,descendant,m);\n  RectF rectF=DescendantOffsetUtils.rectF.get();\n  if (rectF == null) {\n    rectF=new RectF();\n    DescendantOffsetUtils.rectF.set(rectF);\n  }\n  rectF.set(rect);\n  m.mapRect(rectF);\n  rect.set((int)(rectF.left + 0.5f),(int)(rectF.top + 0.5f),(int)(rectF.right + 0.5f),(int)(rectF.bottom + 0.5f));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1061,
        "startLineNumber" : 39,
        "startColumnNumber" : 2,
        "endLineNumber" : 70,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * This is a port of the common  {@link ViewGroup#offsetDescendantRectToMyCoords(View,Rect)} fromthe framework, but adapted to take transformations into account. The result will be the bounding rect of the real transformed rect.\n * @param descendant view defining the original coordinate system of rect\n * @param rect (in/out) the rect to offset from descendant to this view's coordinate system\n */\npublic static void offsetDescendantRect(ViewGroup parent,View descendant,Rect rect){\n  Matrix m=matrix.get();\n  if (m == null) {\n    m=new Matrix();\n    matrix.set(m);\n  }\n else {\n    m.reset();\n  }\n  offsetDescendantMatrix(parent,descendant,m);\n  RectF rectF=DescendantOffsetUtils.rectF.get();\n  if (rectF == null) {\n    rectF=new RectF();\n    DescendantOffsetUtils.rectF.set(rectF);\n  }\n  rectF.set(rect);\n  m.mapRect(rectF);\n  rect.set((int)(rectF.left + 0.5f),(int)(rectF.top + 0.5f),(int)(rectF.right + 0.5f),(int)(rectF.bottom + 0.5f));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 128,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 50
      },
      "nodeContext" : "offsetDescendantMatrix(parent,descendant,m);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.google.android.material.internal.ViewGroup"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 56,
    "startColumnNumber" : 27,
    "endLineNumber" : 56,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}