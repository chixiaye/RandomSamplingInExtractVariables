{
  "id" : 164,
  "expression" : "Thread",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/core/src/test/java/org/apache/druid/java/util/http/client/AsyncHttpClientTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Thread",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 54,
      "startColumnNumber" : 20,
      "endLineNumber" : 54,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 54,
        "startColumnNumber" : 20,
        "endLineNumber" : 54,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Thread.currentThread()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 54,
        "startColumnNumber" : 20,
        "endLineNumber" : 54,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Thread.currentThread().isInterrupted()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 54,
        "startColumnNumber" : 19,
        "endLineNumber" : 54,
        "endColumnNumber" : 58
      },
      "nodeContext" : "!Thread.currentThread().isInterrupted()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 771,
        "startLineNumber" : 54,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (!Thread.currentThread().isInterrupted()) {\n  try (Socket clientSocket=serverSocket.accept();BufferedReader in=new BufferedReader(new InputStreamReader(clientSocket.getInputStream(),StandardCharsets.UTF_8));OutputStream out=clientSocket.getOutputStream()){\n    while (!in.readLine().equals(\"\")) {\n    }\n    Thread.sleep(5000);\n    out.write(\"HTTP/1.1 200 OK\\r\\nContent-Length: 6\\r\\n\\r\\nhello!\".getBytes(StandardCharsets.UTF_8));\n  }\n catch (  Exception e) {\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 73,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 797,
        "startLineNumber" : 53,
        "startColumnNumber" : 10,
        "endLineNumber" : 72,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  while (!Thread.currentThread().isInterrupted()) {\n    try (Socket clientSocket=serverSocket.accept();BufferedReader in=new BufferedReader(new InputStreamReader(clientSocket.getInputStream(),StandardCharsets.UTF_8));OutputStream out=clientSocket.getOutputStream()){\n      while (!in.readLine().equals(\"\")) {\n      }\n      Thread.sleep(5000);\n      out.write(\"HTTP/1.1 200 OK\\r\\nContent-Length: 6\\r\\n\\r\\nhello!\".getBytes(StandardCharsets.UTF_8));\n    }\n catch (    Exception e) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 845,
        "startLineNumber" : 51,
        "startColumnNumber" : 10,
        "endLineNumber" : 72,
        "endColumnNumber" : 11
      },
      "nodeContext" : "@Override public void run(){\n  while (!Thread.currentThread().isInterrupted()) {\n    try (Socket clientSocket=serverSocket.accept();BufferedReader in=new BufferedReader(new InputStreamReader(clientSocket.getInputStream(),StandardCharsets.UTF_8));OutputStream out=clientSocket.getOutputStream()){\n      while (!in.readLine().equals(\"\")) {\n      }\n      Thread.sleep(5000);\n      out.write(\"HTTP/1.1 200 OK\\r\\nContent-Length: 6\\r\\n\\r\\nhello!\".getBytes(StandardCharsets.UTF_8));\n    }\n catch (    Exception e) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 80,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 54,
        "startColumnNumber" : 19,
        "endLineNumber" : 54,
        "endColumnNumber" : 58
      },
      "nodeContext" : "!Thread.currentThread().isInterrupted()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Thread"
  }, {
    "nodeContext" : "Thread",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 65,
      "startColumnNumber" : 16,
      "endLineNumber" : 65,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 65,
        "startColumnNumber" : 16,
        "endLineNumber" : 65,
        "endColumnNumber" : 34
      },
      "nodeContext" : "Thread.sleep(5000)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 65,
        "startColumnNumber" : 16,
        "endLineNumber" : 65,
        "endColumnNumber" : 35
      },
      "nodeContext" : "Thread.sleep(5000);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 282,
        "startLineNumber" : 61,
        "startColumnNumber" : 16,
        "endLineNumber" : 67,
        "endColumnNumber" : 15
      },
      "nodeContext" : "{\n  while (!in.readLine().equals(\"\")) {\n  }\n  Thread.sleep(5000);\n  out.write(\"HTTP/1.1 200 OK\\r\\nContent-Length: 6\\r\\n\\r\\nhello!\".getBytes(StandardCharsets.UTF_8));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 693,
        "startLineNumber" : 55,
        "startColumnNumber" : 14,
        "endLineNumber" : 70,
        "endColumnNumber" : 15
      },
      "nodeContext" : "try (Socket clientSocket=serverSocket.accept();BufferedReader in=new BufferedReader(new InputStreamReader(clientSocket.getInputStream(),StandardCharsets.UTF_8));OutputStream out=clientSocket.getOutputStream()){\n  while (!in.readLine().equals(\"\")) {\n  }\n  Thread.sleep(5000);\n  out.write(\"HTTP/1.1 200 OK\\r\\nContent-Length: 6\\r\\n\\r\\nhello!\".getBytes(StandardCharsets.UTF_8));\n}\n catch (Exception e) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 65,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 723,
        "startLineNumber" : 54,
        "startColumnNumber" : 60,
        "endLineNumber" : 71,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  try (Socket clientSocket=serverSocket.accept();BufferedReader in=new BufferedReader(new InputStreamReader(clientSocket.getInputStream(),StandardCharsets.UTF_8));OutputStream out=clientSocket.getOutputStream()){\n    while (!in.readLine().equals(\"\")) {\n    }\n    Thread.sleep(5000);\n    out.write(\"HTTP/1.1 200 OK\\r\\nContent-Length: 6\\r\\n\\r\\nhello!\".getBytes(StandardCharsets.UTF_8));\n  }\n catch (  Exception e) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 771,
        "startLineNumber" : 54,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (!Thread.currentThread().isInterrupted()) {\n  try (Socket clientSocket=serverSocket.accept();BufferedReader in=new BufferedReader(new InputStreamReader(clientSocket.getInputStream(),StandardCharsets.UTF_8));OutputStream out=clientSocket.getOutputStream()){\n    while (!in.readLine().equals(\"\")) {\n    }\n    Thread.sleep(5000);\n    out.write(\"HTTP/1.1 200 OK\\r\\nContent-Length: 6\\r\\n\\r\\nhello!\".getBytes(StandardCharsets.UTF_8));\n  }\n catch (  Exception e) {\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 73,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 797,
        "startLineNumber" : 53,
        "startColumnNumber" : 10,
        "endLineNumber" : 72,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  while (!Thread.currentThread().isInterrupted()) {\n    try (Socket clientSocket=serverSocket.accept();BufferedReader in=new BufferedReader(new InputStreamReader(clientSocket.getInputStream(),StandardCharsets.UTF_8));OutputStream out=clientSocket.getOutputStream()){\n      while (!in.readLine().equals(\"\")) {\n      }\n      Thread.sleep(5000);\n      out.write(\"HTTP/1.1 200 OK\\r\\nContent-Length: 6\\r\\n\\r\\nhello!\".getBytes(StandardCharsets.UTF_8));\n    }\n catch (    Exception e) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 845,
        "startLineNumber" : 51,
        "startColumnNumber" : 10,
        "endLineNumber" : 72,
        "endColumnNumber" : 11
      },
      "nodeContext" : "@Override public void run(){\n  while (!Thread.currentThread().isInterrupted()) {\n    try (Socket clientSocket=serverSocket.accept();BufferedReader in=new BufferedReader(new InputStreamReader(clientSocket.getInputStream(),StandardCharsets.UTF_8));OutputStream out=clientSocket.getOutputStream()){\n      while (!in.readLine().equals(\"\")) {\n      }\n      Thread.sleep(5000);\n      out.write(\"HTTP/1.1 200 OK\\r\\nContent-Length: 6\\r\\n\\r\\nhello!\".getBytes(StandardCharsets.UTF_8));\n    }\n catch (    Exception e) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 80,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 65,
        "startColumnNumber" : 16,
        "endLineNumber" : 65,
        "endColumnNumber" : 35
      },
      "nodeContext" : "Thread.sleep(5000);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.Thread"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 54,
    "startColumnNumber" : 20,
    "endLineNumber" : 54,
    "endColumnNumber" : 26
  }, {
    "charLength" : 6,
    "startLineNumber" : 65,
    "startColumnNumber" : 16,
    "endLineNumber" : 65,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}