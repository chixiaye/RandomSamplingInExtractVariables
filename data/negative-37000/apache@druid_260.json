{
  "id" : 260,
  "expression" : "EasyMock",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/extensions-core/azure-extensions/src/test/java/org/apache/druid/storage/azure/AzureCloudBlobHolderToCloudObjectLocationConverterTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "EasyMock",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 48,
      "startColumnNumber" : 4,
      "endLineNumber" : 48,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 49
      },
      "nodeContext" : "EasyMock.expect(cloudBlob.getContainerName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 71
      },
      "nodeContext" : "EasyMock.expect(cloudBlob.getContainerName()).andReturn(CONTAINER1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 72
      },
      "nodeContext" : "EasyMock.expect(cloudBlob.getContainerName()).andReturn(CONTAINER1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 482,
        "startLineNumber" : 47,
        "startColumnNumber" : 2,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  EasyMock.expect(cloudBlob.getContainerName()).andReturn(CONTAINER1);\n  EasyMock.expect(cloudBlob.getName()).andReturn(BLOB1);\n  replayAll();\n  CloudObjectLocation expectedLocation=new CloudObjectLocation(CONTAINER1,BLOB1);\n  converter=new AzureCloudBlobHolderToCloudObjectLocationConverter();\n  CloudObjectLocation actualLocation=converter.createCloudObjectLocation(cloudBlob);\n  Assert.assertEquals(expectedLocation,actualLocation);\n  verifyAll();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 578,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void test_createCloudObjectLocation_returnsExpectedLocation() throws Exception {\n  EasyMock.expect(cloudBlob.getContainerName()).andReturn(CONTAINER1);\n  EasyMock.expect(cloudBlob.getName()).andReturn(BLOB1);\n  replayAll();\n  CloudObjectLocation expectedLocation=new CloudObjectLocation(CONTAINER1,BLOB1);\n  converter=new AzureCloudBlobHolderToCloudObjectLocationConverter();\n  CloudObjectLocation actualLocation=converter.createCloudObjectLocation(cloudBlob);\n  Assert.assertEquals(expectedLocation,actualLocation);\n  verifyAll();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 66,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 72
      },
      "nodeContext" : "EasyMock.expect(cloudBlob.getContainerName()).andReturn(CONTAINER1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "EasyMock",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 49,
      "startColumnNumber" : 4,
      "endLineNumber" : 49,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 40
      },
      "nodeContext" : "EasyMock.expect(cloudBlob.getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 57
      },
      "nodeContext" : "EasyMock.expect(cloudBlob.getName()).andReturn(BLOB1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 58
      },
      "nodeContext" : "EasyMock.expect(cloudBlob.getName()).andReturn(BLOB1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 482,
        "startLineNumber" : 47,
        "startColumnNumber" : 2,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  EasyMock.expect(cloudBlob.getContainerName()).andReturn(CONTAINER1);\n  EasyMock.expect(cloudBlob.getName()).andReturn(BLOB1);\n  replayAll();\n  CloudObjectLocation expectedLocation=new CloudObjectLocation(CONTAINER1,BLOB1);\n  converter=new AzureCloudBlobHolderToCloudObjectLocationConverter();\n  CloudObjectLocation actualLocation=converter.createCloudObjectLocation(cloudBlob);\n  Assert.assertEquals(expectedLocation,actualLocation);\n  verifyAll();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 578,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void test_createCloudObjectLocation_returnsExpectedLocation() throws Exception {\n  EasyMock.expect(cloudBlob.getContainerName()).andReturn(CONTAINER1);\n  EasyMock.expect(cloudBlob.getName()).andReturn(BLOB1);\n  replayAll();\n  CloudObjectLocation expectedLocation=new CloudObjectLocation(CONTAINER1,BLOB1);\n  converter=new AzureCloudBlobHolderToCloudObjectLocationConverter();\n  CloudObjectLocation actualLocation=converter.createCloudObjectLocation(cloudBlob);\n  Assert.assertEquals(expectedLocation,actualLocation);\n  verifyAll();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 66,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 58
      },
      "nodeContext" : "EasyMock.expect(cloudBlob.getName()).andReturn(BLOB1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 48,
    "startColumnNumber" : 4,
    "endLineNumber" : 48,
    "endColumnNumber" : 12
  }, {
    "charLength" : 8,
    "startLineNumber" : 49,
    "startColumnNumber" : 4,
    "endLineNumber" : 49,
    "endColumnNumber" : 12
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}