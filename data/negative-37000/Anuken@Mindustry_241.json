{
  "id" : 241,
  "expression" : "table",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/world/meta/values/AmmoListValue.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "table",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 29,
      "startColumnNumber" : 8,
      "endLineNumber" : 29,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 29,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 19
      },
      "nodeContext" : "table.row()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 29,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 20
      },
      "nodeContext" : "table.row();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3028,
        "startLineNumber" : 27,
        "startColumnNumber" : 36,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  table.row();\n  for (  T t : map.keys()) {\n    boolean unit=t instanceof UnitType;\n    BulletType type=map.get(t);\n    if (!unit) {\n      table.image(icon(t)).size(3 * 8).padRight(4).right().top();\n      table.add(t.localizedName).padRight(10).left().top();\n    }\n    table.table(bt -> {\n      bt.left().defaults().padRight(3).left();\n      if (type.damage > 0 && (type.collides || type.splashDamage <= 0)) {\n        bt.add(Core.bundle.format(\"bullet.damage\",type.damage));\n      }\n      if (type.buildingDamageMultiplier != 1) {\n        sep(bt,Core.bundle.format(\"bullet.buildingdamage\",(int)(type.buildingDamageMultiplier * 100)));\n      }\n      if (type.splashDamage > 0) {\n        sep(bt,Core.bundle.format(\"bullet.splashdamage\",(int)type.splashDamage,Strings.fixed(type.splashDamageRadius / tilesize,1)));\n      }\n      if (!unit && !Mathf.equal(type.ammoMultiplier,1f) && !(type instanceof LiquidBulletType)) {\n        sep(bt,Core.bundle.format(\"bullet.multiplier\",(int)type.ammoMultiplier));\n      }\n      if (!Mathf.equal(type.reloadMultiplier,1f)) {\n        sep(bt,Core.bundle.format(\"bullet.reload\",Strings.autoFixed(type.reloadMultiplier,2)));\n      }\n      if (type.knockback > 0) {\n        sep(bt,Core.bundle.format(\"bullet.knockback\",Strings.autoFixed(type.knockback,2)));\n      }\n      if (type.healPercent > 0f) {\n        sep(bt,Core.bundle.format(\"bullet.healpercent\",(int)type.healPercent));\n      }\n      if (type.pierce || type.pierceCap != -1) {\n        sep(bt,type.pierceCap == -1 ? \"@bullet.infinitepierce\" : Core.bundle.format(\"bullet.pierce\",type.pierceCap));\n      }\n      if (type.status == StatusEffects.burning || type.status == StatusEffects.melting || type.incendAmount > 0) {\n        sep(bt,\"@bullet.incendiary\");\n      }\n      if (type.status == StatusEffects.freezing) {\n        sep(bt,\"@bullet.freezing\");\n      }\n      if (type.status == StatusEffects.tarred) {\n        sep(bt,\"@bullet.tarred\");\n      }\n      if (type.status == StatusEffects.sapped) {\n        sep(bt,\"@bullet.sapping\");\n      }\n      if (type.homingPower > 0.01f) {\n        sep(bt,\"@bullet.homing\");\n      }\n      if (type.lightning > 0) {\n        sep(bt,\"@bullet.shock\");\n      }\n      if (type.fragBullet != null) {\n        sep(bt,\"@bullet.frag\");\n      }\n    }\n).padTop(unit ? 0 : -9).left().get().background(unit ? null : Tex.underline);\n    table.row();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 443,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3074,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void display(Table table){\n  table.row();\n  for (  T t : map.keys()) {\n    boolean unit=t instanceof UnitType;\n    BulletType type=map.get(t);\n    if (!unit) {\n      table.image(icon(t)).size(3 * 8).padRight(4).right().top();\n      table.add(t.localizedName).padRight(10).left().top();\n    }\n    table.table(bt -> {\n      bt.left().defaults().padRight(3).left();\n      if (type.damage > 0 && (type.collides || type.splashDamage <= 0)) {\n        bt.add(Core.bundle.format(\"bullet.damage\",type.damage));\n      }\n      if (type.buildingDamageMultiplier != 1) {\n        sep(bt,Core.bundle.format(\"bullet.buildingdamage\",(int)(type.buildingDamageMultiplier * 100)));\n      }\n      if (type.splashDamage > 0) {\n        sep(bt,Core.bundle.format(\"bullet.splashdamage\",(int)type.splashDamage,Strings.fixed(type.splashDamageRadius / tilesize,1)));\n      }\n      if (!unit && !Mathf.equal(type.ammoMultiplier,1f) && !(type instanceof LiquidBulletType)) {\n        sep(bt,Core.bundle.format(\"bullet.multiplier\",(int)type.ammoMultiplier));\n      }\n      if (!Mathf.equal(type.reloadMultiplier,1f)) {\n        sep(bt,Core.bundle.format(\"bullet.reload\",Strings.autoFixed(type.reloadMultiplier,2)));\n      }\n      if (type.knockback > 0) {\n        sep(bt,Core.bundle.format(\"bullet.knockback\",Strings.autoFixed(type.knockback,2)));\n      }\n      if (type.healPercent > 0f) {\n        sep(bt,Core.bundle.format(\"bullet.healpercent\",(int)type.healPercent));\n      }\n      if (type.pierce || type.pierceCap != -1) {\n        sep(bt,type.pierceCap == -1 ? \"@bullet.infinitepierce\" : Core.bundle.format(\"bullet.pierce\",type.pierceCap));\n      }\n      if (type.status == StatusEffects.burning || type.status == StatusEffects.melting || type.incendAmount > 0) {\n        sep(bt,\"@bullet.incendiary\");\n      }\n      if (type.status == StatusEffects.freezing) {\n        sep(bt,\"@bullet.freezing\");\n      }\n      if (type.status == StatusEffects.tarred) {\n        sep(bt,\"@bullet.tarred\");\n      }\n      if (type.status == StatusEffects.sapped) {\n        sep(bt,\"@bullet.sapping\");\n      }\n      if (type.homingPower > 0.01f) {\n        sep(bt,\"@bullet.homing\");\n      }\n      if (type.lightning > 0) {\n        sep(bt,\"@bullet.shock\");\n      }\n      if (type.fragBullet != null) {\n        sep(bt,\"@bullet.frag\");\n      }\n    }\n).padTop(unit ? 0 : -9).left().get().background(unit ? null : Tex.underline);\n    table.row();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 453,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 29,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 20
      },
      "nodeContext" : "table.row();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "mindustry.world.meta.values.Table"
  }, {
    "nodeContext" : "table",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 38,
      "startColumnNumber" : 16,
      "endLineNumber" : 38,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 38,
        "startColumnNumber" : 16,
        "endLineNumber" : 38,
        "endColumnNumber" : 36
      },
      "nodeContext" : "table.image(icon(t))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 38,
        "startColumnNumber" : 16,
        "endLineNumber" : 38,
        "endColumnNumber" : 48
      },
      "nodeContext" : "table.image(icon(t)).size(3 * 8)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 38,
        "startColumnNumber" : 16,
        "endLineNumber" : 38,
        "endColumnNumber" : 60
      },
      "nodeContext" : "table.image(icon(t)).size(3 * 8).padRight(4)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 38,
        "startColumnNumber" : 16,
        "endLineNumber" : 38,
        "endColumnNumber" : 68
      },
      "nodeContext" : "table.image(icon(t)).size(3 * 8).padRight(4).right()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 38,
        "startColumnNumber" : 16,
        "endLineNumber" : 38,
        "endColumnNumber" : 74
      },
      "nodeContext" : "table.image(icon(t)).size(3 * 8).padRight(4).right().top()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 38,
        "startColumnNumber" : 16,
        "endLineNumber" : 38,
        "endColumnNumber" : 75
      },
      "nodeContext" : "table.image(icon(t)).size(3 * 8).padRight(4).right().top();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 161,
        "startLineNumber" : 37,
        "startColumnNumber" : 21,
        "endLineNumber" : 40,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  table.image(icon(t)).size(3 * 8).padRight(4).right().top();\n  table.add(t.localizedName).padRight(10).left().top();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 37,
        "startColumnNumber" : 12,
        "endLineNumber" : 40,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!unit) {\n  table.image(icon(t)).size(3 * 8).padRight(4).right().top();\n  table.add(t.localizedName).padRight(10).left().top();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 2968,
        "startLineNumber" : 31,
        "startColumnNumber" : 29,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  boolean unit=t instanceof UnitType;\n  BulletType type=map.get(t);\n  if (!unit) {\n    table.image(icon(t)).size(3 * 8).padRight(4).right().top();\n    table.add(t.localizedName).padRight(10).left().top();\n  }\n  table.table(bt -> {\n    bt.left().defaults().padRight(3).left();\n    if (type.damage > 0 && (type.collides || type.splashDamage <= 0)) {\n      bt.add(Core.bundle.format(\"bullet.damage\",type.damage));\n    }\n    if (type.buildingDamageMultiplier != 1) {\n      sep(bt,Core.bundle.format(\"bullet.buildingdamage\",(int)(type.buildingDamageMultiplier * 100)));\n    }\n    if (type.splashDamage > 0) {\n      sep(bt,Core.bundle.format(\"bullet.splashdamage\",(int)type.splashDamage,Strings.fixed(type.splashDamageRadius / tilesize,1)));\n    }\n    if (!unit && !Mathf.equal(type.ammoMultiplier,1f) && !(type instanceof LiquidBulletType)) {\n      sep(bt,Core.bundle.format(\"bullet.multiplier\",(int)type.ammoMultiplier));\n    }\n    if (!Mathf.equal(type.reloadMultiplier,1f)) {\n      sep(bt,Core.bundle.format(\"bullet.reload\",Strings.autoFixed(type.reloadMultiplier,2)));\n    }\n    if (type.knockback > 0) {\n      sep(bt,Core.bundle.format(\"bullet.knockback\",Strings.autoFixed(type.knockback,2)));\n    }\n    if (type.healPercent > 0f) {\n      sep(bt,Core.bundle.format(\"bullet.healpercent\",(int)type.healPercent));\n    }\n    if (type.pierce || type.pierceCap != -1) {\n      sep(bt,type.pierceCap == -1 ? \"@bullet.infinitepierce\" : Core.bundle.format(\"bullet.pierce\",type.pierceCap));\n    }\n    if (type.status == StatusEffects.burning || type.status == StatusEffects.melting || type.incendAmount > 0) {\n      sep(bt,\"@bullet.incendiary\");\n    }\n    if (type.status == StatusEffects.freezing) {\n      sep(bt,\"@bullet.freezing\");\n    }\n    if (type.status == StatusEffects.tarred) {\n      sep(bt,\"@bullet.tarred\");\n    }\n    if (type.status == StatusEffects.sapped) {\n      sep(bt,\"@bullet.sapping\");\n    }\n    if (type.homingPower > 0.01f) {\n      sep(bt,\"@bullet.homing\");\n    }\n    if (type.lightning > 0) {\n      sep(bt,\"@bullet.shock\");\n    }\n    if (type.fragBullet != null) {\n      sep(bt,\"@bullet.frag\");\n    }\n  }\n).padTop(unit ? 0 : -9).left().get().background(unit ? null : Tex.underline);\n  table.row();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 430,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2989,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (T t : map.keys()) {\n  boolean unit=t instanceof UnitType;\n  BulletType type=map.get(t);\n  if (!unit) {\n    table.image(icon(t)).size(3 * 8).padRight(4).right().top();\n    table.add(t.localizedName).padRight(10).left().top();\n  }\n  table.table(bt -> {\n    bt.left().defaults().padRight(3).left();\n    if (type.damage > 0 && (type.collides || type.splashDamage <= 0)) {\n      bt.add(Core.bundle.format(\"bullet.damage\",type.damage));\n    }\n    if (type.buildingDamageMultiplier != 1) {\n      sep(bt,Core.bundle.format(\"bullet.buildingdamage\",(int)(type.buildingDamageMultiplier * 100)));\n    }\n    if (type.splashDamage > 0) {\n      sep(bt,Core.bundle.format(\"bullet.splashdamage\",(int)type.splashDamage,Strings.fixed(type.splashDamageRadius / tilesize,1)));\n    }\n    if (!unit && !Mathf.equal(type.ammoMultiplier,1f) && !(type instanceof LiquidBulletType)) {\n      sep(bt,Core.bundle.format(\"bullet.multiplier\",(int)type.ammoMultiplier));\n    }\n    if (!Mathf.equal(type.reloadMultiplier,1f)) {\n      sep(bt,Core.bundle.format(\"bullet.reload\",Strings.autoFixed(type.reloadMultiplier,2)));\n    }\n    if (type.knockback > 0) {\n      sep(bt,Core.bundle.format(\"bullet.knockback\",Strings.autoFixed(type.knockback,2)));\n    }\n    if (type.healPercent > 0f) {\n      sep(bt,Core.bundle.format(\"bullet.healpercent\",(int)type.healPercent));\n    }\n    if (type.pierce || type.pierceCap != -1) {\n      sep(bt,type.pierceCap == -1 ? \"@bullet.infinitepierce\" : Core.bundle.format(\"bullet.pierce\",type.pierceCap));\n    }\n    if (type.status == StatusEffects.burning || type.status == StatusEffects.melting || type.incendAmount > 0) {\n      sep(bt,\"@bullet.incendiary\");\n    }\n    if (type.status == StatusEffects.freezing) {\n      sep(bt,\"@bullet.freezing\");\n    }\n    if (type.status == StatusEffects.tarred) {\n      sep(bt,\"@bullet.tarred\");\n    }\n    if (type.status == StatusEffects.sapped) {\n      sep(bt,\"@bullet.sapping\");\n    }\n    if (type.homingPower > 0.01f) {\n      sep(bt,\"@bullet.homing\");\n    }\n    if (type.lightning > 0) {\n      sep(bt,\"@bullet.shock\");\n    }\n    if (type.fragBullet != null) {\n      sep(bt,\"@bullet.frag\");\n    }\n  }\n).padTop(unit ? 0 : -9).left().get().background(unit ? null : Tex.underline);\n  table.row();\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 438,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3028,
        "startLineNumber" : 27,
        "startColumnNumber" : 36,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  table.row();\n  for (  T t : map.keys()) {\n    boolean unit=t instanceof UnitType;\n    BulletType type=map.get(t);\n    if (!unit) {\n      table.image(icon(t)).size(3 * 8).padRight(4).right().top();\n      table.add(t.localizedName).padRight(10).left().top();\n    }\n    table.table(bt -> {\n      bt.left().defaults().padRight(3).left();\n      if (type.damage > 0 && (type.collides || type.splashDamage <= 0)) {\n        bt.add(Core.bundle.format(\"bullet.damage\",type.damage));\n      }\n      if (type.buildingDamageMultiplier != 1) {\n        sep(bt,Core.bundle.format(\"bullet.buildingdamage\",(int)(type.buildingDamageMultiplier * 100)));\n      }\n      if (type.splashDamage > 0) {\n        sep(bt,Core.bundle.format(\"bullet.splashdamage\",(int)type.splashDamage,Strings.fixed(type.splashDamageRadius / tilesize,1)));\n      }\n      if (!unit && !Mathf.equal(type.ammoMultiplier,1f) && !(type instanceof LiquidBulletType)) {\n        sep(bt,Core.bundle.format(\"bullet.multiplier\",(int)type.ammoMultiplier));\n      }\n      if (!Mathf.equal(type.reloadMultiplier,1f)) {\n        sep(bt,Core.bundle.format(\"bullet.reload\",Strings.autoFixed(type.reloadMultiplier,2)));\n      }\n      if (type.knockback > 0) {\n        sep(bt,Core.bundle.format(\"bullet.knockback\",Strings.autoFixed(type.knockback,2)));\n      }\n      if (type.healPercent > 0f) {\n        sep(bt,Core.bundle.format(\"bullet.healpercent\",(int)type.healPercent));\n      }\n      if (type.pierce || type.pierceCap != -1) {\n        sep(bt,type.pierceCap == -1 ? \"@bullet.infinitepierce\" : Core.bundle.format(\"bullet.pierce\",type.pierceCap));\n      }\n      if (type.status == StatusEffects.burning || type.status == StatusEffects.melting || type.incendAmount > 0) {\n        sep(bt,\"@bullet.incendiary\");\n      }\n      if (type.status == StatusEffects.freezing) {\n        sep(bt,\"@bullet.freezing\");\n      }\n      if (type.status == StatusEffects.tarred) {\n        sep(bt,\"@bullet.tarred\");\n      }\n      if (type.status == StatusEffects.sapped) {\n        sep(bt,\"@bullet.sapping\");\n      }\n      if (type.homingPower > 0.01f) {\n        sep(bt,\"@bullet.homing\");\n      }\n      if (type.lightning > 0) {\n        sep(bt,\"@bullet.shock\");\n      }\n      if (type.fragBullet != null) {\n        sep(bt,\"@bullet.frag\");\n      }\n    }\n).padTop(unit ? 0 : -9).left().get().background(unit ? null : Tex.underline);\n    table.row();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 443,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3074,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void display(Table table){\n  table.row();\n  for (  T t : map.keys()) {\n    boolean unit=t instanceof UnitType;\n    BulletType type=map.get(t);\n    if (!unit) {\n      table.image(icon(t)).size(3 * 8).padRight(4).right().top();\n      table.add(t.localizedName).padRight(10).left().top();\n    }\n    table.table(bt -> {\n      bt.left().defaults().padRight(3).left();\n      if (type.damage > 0 && (type.collides || type.splashDamage <= 0)) {\n        bt.add(Core.bundle.format(\"bullet.damage\",type.damage));\n      }\n      if (type.buildingDamageMultiplier != 1) {\n        sep(bt,Core.bundle.format(\"bullet.buildingdamage\",(int)(type.buildingDamageMultiplier * 100)));\n      }\n      if (type.splashDamage > 0) {\n        sep(bt,Core.bundle.format(\"bullet.splashdamage\",(int)type.splashDamage,Strings.fixed(type.splashDamageRadius / tilesize,1)));\n      }\n      if (!unit && !Mathf.equal(type.ammoMultiplier,1f) && !(type instanceof LiquidBulletType)) {\n        sep(bt,Core.bundle.format(\"bullet.multiplier\",(int)type.ammoMultiplier));\n      }\n      if (!Mathf.equal(type.reloadMultiplier,1f)) {\n        sep(bt,Core.bundle.format(\"bullet.reload\",Strings.autoFixed(type.reloadMultiplier,2)));\n      }\n      if (type.knockback > 0) {\n        sep(bt,Core.bundle.format(\"bullet.knockback\",Strings.autoFixed(type.knockback,2)));\n      }\n      if (type.healPercent > 0f) {\n        sep(bt,Core.bundle.format(\"bullet.healpercent\",(int)type.healPercent));\n      }\n      if (type.pierce || type.pierceCap != -1) {\n        sep(bt,type.pierceCap == -1 ? \"@bullet.infinitepierce\" : Core.bundle.format(\"bullet.pierce\",type.pierceCap));\n      }\n      if (type.status == StatusEffects.burning || type.status == StatusEffects.melting || type.incendAmount > 0) {\n        sep(bt,\"@bullet.incendiary\");\n      }\n      if (type.status == StatusEffects.freezing) {\n        sep(bt,\"@bullet.freezing\");\n      }\n      if (type.status == StatusEffects.tarred) {\n        sep(bt,\"@bullet.tarred\");\n      }\n      if (type.status == StatusEffects.sapped) {\n        sep(bt,\"@bullet.sapping\");\n      }\n      if (type.homingPower > 0.01f) {\n        sep(bt,\"@bullet.homing\");\n      }\n      if (type.lightning > 0) {\n        sep(bt,\"@bullet.shock\");\n      }\n      if (type.fragBullet != null) {\n        sep(bt,\"@bullet.frag\");\n      }\n    }\n).padTop(unit ? 0 : -9).left().get().background(unit ? null : Tex.underline);\n    table.row();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 453,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 38,
        "startColumnNumber" : 16,
        "endLineNumber" : 38,
        "endColumnNumber" : 75
      },
      "nodeContext" : "table.image(icon(t)).size(3 * 8).padRight(4).right().top();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "mindustry.world.meta.values.Table"
  }, {
    "nodeContext" : "table",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 39,
      "startColumnNumber" : 16,
      "endLineNumber" : 39,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 39,
        "startColumnNumber" : 16,
        "endLineNumber" : 39,
        "endColumnNumber" : 42
      },
      "nodeContext" : "table.add(t.localizedName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 39,
        "startColumnNumber" : 16,
        "endLineNumber" : 39,
        "endColumnNumber" : 55
      },
      "nodeContext" : "table.add(t.localizedName).padRight(10)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 39,
        "startColumnNumber" : 16,
        "endLineNumber" : 39,
        "endColumnNumber" : 62
      },
      "nodeContext" : "table.add(t.localizedName).padRight(10).left()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 39,
        "startColumnNumber" : 16,
        "endLineNumber" : 39,
        "endColumnNumber" : 68
      },
      "nodeContext" : "table.add(t.localizedName).padRight(10).left().top()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 39,
        "startColumnNumber" : 16,
        "endLineNumber" : 39,
        "endColumnNumber" : 69
      },
      "nodeContext" : "table.add(t.localizedName).padRight(10).left().top();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 161,
        "startLineNumber" : 37,
        "startColumnNumber" : 21,
        "endLineNumber" : 40,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  table.image(icon(t)).size(3 * 8).padRight(4).right().top();\n  table.add(t.localizedName).padRight(10).left().top();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 37,
        "startColumnNumber" : 12,
        "endLineNumber" : 40,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!unit) {\n  table.image(icon(t)).size(3 * 8).padRight(4).right().top();\n  table.add(t.localizedName).padRight(10).left().top();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 2968,
        "startLineNumber" : 31,
        "startColumnNumber" : 29,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  boolean unit=t instanceof UnitType;\n  BulletType type=map.get(t);\n  if (!unit) {\n    table.image(icon(t)).size(3 * 8).padRight(4).right().top();\n    table.add(t.localizedName).padRight(10).left().top();\n  }\n  table.table(bt -> {\n    bt.left().defaults().padRight(3).left();\n    if (type.damage > 0 && (type.collides || type.splashDamage <= 0)) {\n      bt.add(Core.bundle.format(\"bullet.damage\",type.damage));\n    }\n    if (type.buildingDamageMultiplier != 1) {\n      sep(bt,Core.bundle.format(\"bullet.buildingdamage\",(int)(type.buildingDamageMultiplier * 100)));\n    }\n    if (type.splashDamage > 0) {\n      sep(bt,Core.bundle.format(\"bullet.splashdamage\",(int)type.splashDamage,Strings.fixed(type.splashDamageRadius / tilesize,1)));\n    }\n    if (!unit && !Mathf.equal(type.ammoMultiplier,1f) && !(type instanceof LiquidBulletType)) {\n      sep(bt,Core.bundle.format(\"bullet.multiplier\",(int)type.ammoMultiplier));\n    }\n    if (!Mathf.equal(type.reloadMultiplier,1f)) {\n      sep(bt,Core.bundle.format(\"bullet.reload\",Strings.autoFixed(type.reloadMultiplier,2)));\n    }\n    if (type.knockback > 0) {\n      sep(bt,Core.bundle.format(\"bullet.knockback\",Strings.autoFixed(type.knockback,2)));\n    }\n    if (type.healPercent > 0f) {\n      sep(bt,Core.bundle.format(\"bullet.healpercent\",(int)type.healPercent));\n    }\n    if (type.pierce || type.pierceCap != -1) {\n      sep(bt,type.pierceCap == -1 ? \"@bullet.infinitepierce\" : Core.bundle.format(\"bullet.pierce\",type.pierceCap));\n    }\n    if (type.status == StatusEffects.burning || type.status == StatusEffects.melting || type.incendAmount > 0) {\n      sep(bt,\"@bullet.incendiary\");\n    }\n    if (type.status == StatusEffects.freezing) {\n      sep(bt,\"@bullet.freezing\");\n    }\n    if (type.status == StatusEffects.tarred) {\n      sep(bt,\"@bullet.tarred\");\n    }\n    if (type.status == StatusEffects.sapped) {\n      sep(bt,\"@bullet.sapping\");\n    }\n    if (type.homingPower > 0.01f) {\n      sep(bt,\"@bullet.homing\");\n    }\n    if (type.lightning > 0) {\n      sep(bt,\"@bullet.shock\");\n    }\n    if (type.fragBullet != null) {\n      sep(bt,\"@bullet.frag\");\n    }\n  }\n).padTop(unit ? 0 : -9).left().get().background(unit ? null : Tex.underline);\n  table.row();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 430,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2989,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (T t : map.keys()) {\n  boolean unit=t instanceof UnitType;\n  BulletType type=map.get(t);\n  if (!unit) {\n    table.image(icon(t)).size(3 * 8).padRight(4).right().top();\n    table.add(t.localizedName).padRight(10).left().top();\n  }\n  table.table(bt -> {\n    bt.left().defaults().padRight(3).left();\n    if (type.damage > 0 && (type.collides || type.splashDamage <= 0)) {\n      bt.add(Core.bundle.format(\"bullet.damage\",type.damage));\n    }\n    if (type.buildingDamageMultiplier != 1) {\n      sep(bt,Core.bundle.format(\"bullet.buildingdamage\",(int)(type.buildingDamageMultiplier * 100)));\n    }\n    if (type.splashDamage > 0) {\n      sep(bt,Core.bundle.format(\"bullet.splashdamage\",(int)type.splashDamage,Strings.fixed(type.splashDamageRadius / tilesize,1)));\n    }\n    if (!unit && !Mathf.equal(type.ammoMultiplier,1f) && !(type instanceof LiquidBulletType)) {\n      sep(bt,Core.bundle.format(\"bullet.multiplier\",(int)type.ammoMultiplier));\n    }\n    if (!Mathf.equal(type.reloadMultiplier,1f)) {\n      sep(bt,Core.bundle.format(\"bullet.reload\",Strings.autoFixed(type.reloadMultiplier,2)));\n    }\n    if (type.knockback > 0) {\n      sep(bt,Core.bundle.format(\"bullet.knockback\",Strings.autoFixed(type.knockback,2)));\n    }\n    if (type.healPercent > 0f) {\n      sep(bt,Core.bundle.format(\"bullet.healpercent\",(int)type.healPercent));\n    }\n    if (type.pierce || type.pierceCap != -1) {\n      sep(bt,type.pierceCap == -1 ? \"@bullet.infinitepierce\" : Core.bundle.format(\"bullet.pierce\",type.pierceCap));\n    }\n    if (type.status == StatusEffects.burning || type.status == StatusEffects.melting || type.incendAmount > 0) {\n      sep(bt,\"@bullet.incendiary\");\n    }\n    if (type.status == StatusEffects.freezing) {\n      sep(bt,\"@bullet.freezing\");\n    }\n    if (type.status == StatusEffects.tarred) {\n      sep(bt,\"@bullet.tarred\");\n    }\n    if (type.status == StatusEffects.sapped) {\n      sep(bt,\"@bullet.sapping\");\n    }\n    if (type.homingPower > 0.01f) {\n      sep(bt,\"@bullet.homing\");\n    }\n    if (type.lightning > 0) {\n      sep(bt,\"@bullet.shock\");\n    }\n    if (type.fragBullet != null) {\n      sep(bt,\"@bullet.frag\");\n    }\n  }\n).padTop(unit ? 0 : -9).left().get().background(unit ? null : Tex.underline);\n  table.row();\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 438,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3028,
        "startLineNumber" : 27,
        "startColumnNumber" : 36,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  table.row();\n  for (  T t : map.keys()) {\n    boolean unit=t instanceof UnitType;\n    BulletType type=map.get(t);\n    if (!unit) {\n      table.image(icon(t)).size(3 * 8).padRight(4).right().top();\n      table.add(t.localizedName).padRight(10).left().top();\n    }\n    table.table(bt -> {\n      bt.left().defaults().padRight(3).left();\n      if (type.damage > 0 && (type.collides || type.splashDamage <= 0)) {\n        bt.add(Core.bundle.format(\"bullet.damage\",type.damage));\n      }\n      if (type.buildingDamageMultiplier != 1) {\n        sep(bt,Core.bundle.format(\"bullet.buildingdamage\",(int)(type.buildingDamageMultiplier * 100)));\n      }\n      if (type.splashDamage > 0) {\n        sep(bt,Core.bundle.format(\"bullet.splashdamage\",(int)type.splashDamage,Strings.fixed(type.splashDamageRadius / tilesize,1)));\n      }\n      if (!unit && !Mathf.equal(type.ammoMultiplier,1f) && !(type instanceof LiquidBulletType)) {\n        sep(bt,Core.bundle.format(\"bullet.multiplier\",(int)type.ammoMultiplier));\n      }\n      if (!Mathf.equal(type.reloadMultiplier,1f)) {\n        sep(bt,Core.bundle.format(\"bullet.reload\",Strings.autoFixed(type.reloadMultiplier,2)));\n      }\n      if (type.knockback > 0) {\n        sep(bt,Core.bundle.format(\"bullet.knockback\",Strings.autoFixed(type.knockback,2)));\n      }\n      if (type.healPercent > 0f) {\n        sep(bt,Core.bundle.format(\"bullet.healpercent\",(int)type.healPercent));\n      }\n      if (type.pierce || type.pierceCap != -1) {\n        sep(bt,type.pierceCap == -1 ? \"@bullet.infinitepierce\" : Core.bundle.format(\"bullet.pierce\",type.pierceCap));\n      }\n      if (type.status == StatusEffects.burning || type.status == StatusEffects.melting || type.incendAmount > 0) {\n        sep(bt,\"@bullet.incendiary\");\n      }\n      if (type.status == StatusEffects.freezing) {\n        sep(bt,\"@bullet.freezing\");\n      }\n      if (type.status == StatusEffects.tarred) {\n        sep(bt,\"@bullet.tarred\");\n      }\n      if (type.status == StatusEffects.sapped) {\n        sep(bt,\"@bullet.sapping\");\n      }\n      if (type.homingPower > 0.01f) {\n        sep(bt,\"@bullet.homing\");\n      }\n      if (type.lightning > 0) {\n        sep(bt,\"@bullet.shock\");\n      }\n      if (type.fragBullet != null) {\n        sep(bt,\"@bullet.frag\");\n      }\n    }\n).padTop(unit ? 0 : -9).left().get().background(unit ? null : Tex.underline);\n    table.row();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 443,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3074,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void display(Table table){\n  table.row();\n  for (  T t : map.keys()) {\n    boolean unit=t instanceof UnitType;\n    BulletType type=map.get(t);\n    if (!unit) {\n      table.image(icon(t)).size(3 * 8).padRight(4).right().top();\n      table.add(t.localizedName).padRight(10).left().top();\n    }\n    table.table(bt -> {\n      bt.left().defaults().padRight(3).left();\n      if (type.damage > 0 && (type.collides || type.splashDamage <= 0)) {\n        bt.add(Core.bundle.format(\"bullet.damage\",type.damage));\n      }\n      if (type.buildingDamageMultiplier != 1) {\n        sep(bt,Core.bundle.format(\"bullet.buildingdamage\",(int)(type.buildingDamageMultiplier * 100)));\n      }\n      if (type.splashDamage > 0) {\n        sep(bt,Core.bundle.format(\"bullet.splashdamage\",(int)type.splashDamage,Strings.fixed(type.splashDamageRadius / tilesize,1)));\n      }\n      if (!unit && !Mathf.equal(type.ammoMultiplier,1f) && !(type instanceof LiquidBulletType)) {\n        sep(bt,Core.bundle.format(\"bullet.multiplier\",(int)type.ammoMultiplier));\n      }\n      if (!Mathf.equal(type.reloadMultiplier,1f)) {\n        sep(bt,Core.bundle.format(\"bullet.reload\",Strings.autoFixed(type.reloadMultiplier,2)));\n      }\n      if (type.knockback > 0) {\n        sep(bt,Core.bundle.format(\"bullet.knockback\",Strings.autoFixed(type.knockback,2)));\n      }\n      if (type.healPercent > 0f) {\n        sep(bt,Core.bundle.format(\"bullet.healpercent\",(int)type.healPercent));\n      }\n      if (type.pierce || type.pierceCap != -1) {\n        sep(bt,type.pierceCap == -1 ? \"@bullet.infinitepierce\" : Core.bundle.format(\"bullet.pierce\",type.pierceCap));\n      }\n      if (type.status == StatusEffects.burning || type.status == StatusEffects.melting || type.incendAmount > 0) {\n        sep(bt,\"@bullet.incendiary\");\n      }\n      if (type.status == StatusEffects.freezing) {\n        sep(bt,\"@bullet.freezing\");\n      }\n      if (type.status == StatusEffects.tarred) {\n        sep(bt,\"@bullet.tarred\");\n      }\n      if (type.status == StatusEffects.sapped) {\n        sep(bt,\"@bullet.sapping\");\n      }\n      if (type.homingPower > 0.01f) {\n        sep(bt,\"@bullet.homing\");\n      }\n      if (type.lightning > 0) {\n        sep(bt,\"@bullet.shock\");\n      }\n      if (type.fragBullet != null) {\n        sep(bt,\"@bullet.frag\");\n      }\n    }\n).padTop(unit ? 0 : -9).left().get().background(unit ? null : Tex.underline);\n    table.row();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 453,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 39,
        "startColumnNumber" : 16,
        "endLineNumber" : 39,
        "endColumnNumber" : 69
      },
      "nodeContext" : "table.add(t.localizedName).padRight(10).left().top();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "mindustry.world.meta.values.Table"
  }, {
    "nodeContext" : "table",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 42,
      "startColumnNumber" : 12,
      "endLineNumber" : 42,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2511,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 14
      },
      "nodeContext" : "table.table(bt -> {\n  bt.left().defaults().padRight(3).left();\n  if (type.damage > 0 && (type.collides || type.splashDamage <= 0)) {\n    bt.add(Core.bundle.format(\"bullet.damage\",type.damage));\n  }\n  if (type.buildingDamageMultiplier != 1) {\n    sep(bt,Core.bundle.format(\"bullet.buildingdamage\",(int)(type.buildingDamageMultiplier * 100)));\n  }\n  if (type.splashDamage > 0) {\n    sep(bt,Core.bundle.format(\"bullet.splashdamage\",(int)type.splashDamage,Strings.fixed(type.splashDamageRadius / tilesize,1)));\n  }\n  if (!unit && !Mathf.equal(type.ammoMultiplier,1f) && !(type instanceof LiquidBulletType)) {\n    sep(bt,Core.bundle.format(\"bullet.multiplier\",(int)type.ammoMultiplier));\n  }\n  if (!Mathf.equal(type.reloadMultiplier,1f)) {\n    sep(bt,Core.bundle.format(\"bullet.reload\",Strings.autoFixed(type.reloadMultiplier,2)));\n  }\n  if (type.knockback > 0) {\n    sep(bt,Core.bundle.format(\"bullet.knockback\",Strings.autoFixed(type.knockback,2)));\n  }\n  if (type.healPercent > 0f) {\n    sep(bt,Core.bundle.format(\"bullet.healpercent\",(int)type.healPercent));\n  }\n  if (type.pierce || type.pierceCap != -1) {\n    sep(bt,type.pierceCap == -1 ? \"@bullet.infinitepierce\" : Core.bundle.format(\"bullet.pierce\",type.pierceCap));\n  }\n  if (type.status == StatusEffects.burning || type.status == StatusEffects.melting || type.incendAmount > 0) {\n    sep(bt,\"@bullet.incendiary\");\n  }\n  if (type.status == StatusEffects.freezing) {\n    sep(bt,\"@bullet.freezing\");\n  }\n  if (type.status == StatusEffects.tarred) {\n    sep(bt,\"@bullet.tarred\");\n  }\n  if (type.status == StatusEffects.sapped) {\n    sep(bt,\"@bullet.sapping\");\n  }\n  if (type.homingPower > 0.01f) {\n    sep(bt,\"@bullet.homing\");\n  }\n  if (type.lightning > 0) {\n    sep(bt,\"@bullet.shock\");\n  }\n  if (type.fragBullet != null) {\n    sep(bt,\"@bullet.frag\");\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 351,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2533,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 36
      },
      "nodeContext" : "table.table(bt -> {\n  bt.left().defaults().padRight(3).left();\n  if (type.damage > 0 && (type.collides || type.splashDamage <= 0)) {\n    bt.add(Core.bundle.format(\"bullet.damage\",type.damage));\n  }\n  if (type.buildingDamageMultiplier != 1) {\n    sep(bt,Core.bundle.format(\"bullet.buildingdamage\",(int)(type.buildingDamageMultiplier * 100)));\n  }\n  if (type.splashDamage > 0) {\n    sep(bt,Core.bundle.format(\"bullet.splashdamage\",(int)type.splashDamage,Strings.fixed(type.splashDamageRadius / tilesize,1)));\n  }\n  if (!unit && !Mathf.equal(type.ammoMultiplier,1f) && !(type instanceof LiquidBulletType)) {\n    sep(bt,Core.bundle.format(\"bullet.multiplier\",(int)type.ammoMultiplier));\n  }\n  if (!Mathf.equal(type.reloadMultiplier,1f)) {\n    sep(bt,Core.bundle.format(\"bullet.reload\",Strings.autoFixed(type.reloadMultiplier,2)));\n  }\n  if (type.knockback > 0) {\n    sep(bt,Core.bundle.format(\"bullet.knockback\",Strings.autoFixed(type.knockback,2)));\n  }\n  if (type.healPercent > 0f) {\n    sep(bt,Core.bundle.format(\"bullet.healpercent\",(int)type.healPercent));\n  }\n  if (type.pierce || type.pierceCap != -1) {\n    sep(bt,type.pierceCap == -1 ? \"@bullet.infinitepierce\" : Core.bundle.format(\"bullet.pierce\",type.pierceCap));\n  }\n  if (type.status == StatusEffects.burning || type.status == StatusEffects.melting || type.incendAmount > 0) {\n    sep(bt,\"@bullet.incendiary\");\n  }\n  if (type.status == StatusEffects.freezing) {\n    sep(bt,\"@bullet.freezing\");\n  }\n  if (type.status == StatusEffects.tarred) {\n    sep(bt,\"@bullet.tarred\");\n  }\n  if (type.status == StatusEffects.sapped) {\n    sep(bt,\"@bullet.sapping\");\n  }\n  if (type.homingPower > 0.01f) {\n    sep(bt,\"@bullet.homing\");\n  }\n  if (type.lightning > 0) {\n    sep(bt,\"@bullet.shock\");\n  }\n  if (type.fragBullet != null) {\n    sep(bt,\"@bullet.frag\");\n  }\n}\n).padTop(unit ? 0 : -9)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 358,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2540,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 43
      },
      "nodeContext" : "table.table(bt -> {\n  bt.left().defaults().padRight(3).left();\n  if (type.damage > 0 && (type.collides || type.splashDamage <= 0)) {\n    bt.add(Core.bundle.format(\"bullet.damage\",type.damage));\n  }\n  if (type.buildingDamageMultiplier != 1) {\n    sep(bt,Core.bundle.format(\"bullet.buildingdamage\",(int)(type.buildingDamageMultiplier * 100)));\n  }\n  if (type.splashDamage > 0) {\n    sep(bt,Core.bundle.format(\"bullet.splashdamage\",(int)type.splashDamage,Strings.fixed(type.splashDamageRadius / tilesize,1)));\n  }\n  if (!unit && !Mathf.equal(type.ammoMultiplier,1f) && !(type instanceof LiquidBulletType)) {\n    sep(bt,Core.bundle.format(\"bullet.multiplier\",(int)type.ammoMultiplier));\n  }\n  if (!Mathf.equal(type.reloadMultiplier,1f)) {\n    sep(bt,Core.bundle.format(\"bullet.reload\",Strings.autoFixed(type.reloadMultiplier,2)));\n  }\n  if (type.knockback > 0) {\n    sep(bt,Core.bundle.format(\"bullet.knockback\",Strings.autoFixed(type.knockback,2)));\n  }\n  if (type.healPercent > 0f) {\n    sep(bt,Core.bundle.format(\"bullet.healpercent\",(int)type.healPercent));\n  }\n  if (type.pierce || type.pierceCap != -1) {\n    sep(bt,type.pierceCap == -1 ? \"@bullet.infinitepierce\" : Core.bundle.format(\"bullet.pierce\",type.pierceCap));\n  }\n  if (type.status == StatusEffects.burning || type.status == StatusEffects.melting || type.incendAmount > 0) {\n    sep(bt,\"@bullet.incendiary\");\n  }\n  if (type.status == StatusEffects.freezing) {\n    sep(bt,\"@bullet.freezing\");\n  }\n  if (type.status == StatusEffects.tarred) {\n    sep(bt,\"@bullet.tarred\");\n  }\n  if (type.status == StatusEffects.sapped) {\n    sep(bt,\"@bullet.sapping\");\n  }\n  if (type.homingPower > 0.01f) {\n    sep(bt,\"@bullet.homing\");\n  }\n  if (type.lightning > 0) {\n    sep(bt,\"@bullet.shock\");\n  }\n  if (type.fragBullet != null) {\n    sep(bt,\"@bullet.frag\");\n  }\n}\n).padTop(unit ? 0 : -9).left()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 360,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2546,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 49
      },
      "nodeContext" : "table.table(bt -> {\n  bt.left().defaults().padRight(3).left();\n  if (type.damage > 0 && (type.collides || type.splashDamage <= 0)) {\n    bt.add(Core.bundle.format(\"bullet.damage\",type.damage));\n  }\n  if (type.buildingDamageMultiplier != 1) {\n    sep(bt,Core.bundle.format(\"bullet.buildingdamage\",(int)(type.buildingDamageMultiplier * 100)));\n  }\n  if (type.splashDamage > 0) {\n    sep(bt,Core.bundle.format(\"bullet.splashdamage\",(int)type.splashDamage,Strings.fixed(type.splashDamageRadius / tilesize,1)));\n  }\n  if (!unit && !Mathf.equal(type.ammoMultiplier,1f) && !(type instanceof LiquidBulletType)) {\n    sep(bt,Core.bundle.format(\"bullet.multiplier\",(int)type.ammoMultiplier));\n  }\n  if (!Mathf.equal(type.reloadMultiplier,1f)) {\n    sep(bt,Core.bundle.format(\"bullet.reload\",Strings.autoFixed(type.reloadMultiplier,2)));\n  }\n  if (type.knockback > 0) {\n    sep(bt,Core.bundle.format(\"bullet.knockback\",Strings.autoFixed(type.knockback,2)));\n  }\n  if (type.healPercent > 0f) {\n    sep(bt,Core.bundle.format(\"bullet.healpercent\",(int)type.healPercent));\n  }\n  if (type.pierce || type.pierceCap != -1) {\n    sep(bt,type.pierceCap == -1 ? \"@bullet.infinitepierce\" : Core.bundle.format(\"bullet.pierce\",type.pierceCap));\n  }\n  if (type.status == StatusEffects.burning || type.status == StatusEffects.melting || type.incendAmount > 0) {\n    sep(bt,\"@bullet.incendiary\");\n  }\n  if (type.status == StatusEffects.freezing) {\n    sep(bt,\"@bullet.freezing\");\n  }\n  if (type.status == StatusEffects.tarred) {\n    sep(bt,\"@bullet.tarred\");\n  }\n  if (type.status == StatusEffects.sapped) {\n    sep(bt,\"@bullet.sapping\");\n  }\n  if (type.homingPower > 0.01f) {\n    sep(bt,\"@bullet.homing\");\n  }\n  if (type.lightning > 0) {\n    sep(bt,\"@bullet.shock\");\n  }\n  if (type.fragBullet != null) {\n    sep(bt,\"@bullet.frag\");\n  }\n}\n).padTop(unit ? 0 : -9).left().get()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 362,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 2586,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 89
      },
      "nodeContext" : "table.table(bt -> {\n  bt.left().defaults().padRight(3).left();\n  if (type.damage > 0 && (type.collides || type.splashDamage <= 0)) {\n    bt.add(Core.bundle.format(\"bullet.damage\",type.damage));\n  }\n  if (type.buildingDamageMultiplier != 1) {\n    sep(bt,Core.bundle.format(\"bullet.buildingdamage\",(int)(type.buildingDamageMultiplier * 100)));\n  }\n  if (type.splashDamage > 0) {\n    sep(bt,Core.bundle.format(\"bullet.splashdamage\",(int)type.splashDamage,Strings.fixed(type.splashDamageRadius / tilesize,1)));\n  }\n  if (!unit && !Mathf.equal(type.ammoMultiplier,1f) && !(type instanceof LiquidBulletType)) {\n    sep(bt,Core.bundle.format(\"bullet.multiplier\",(int)type.ammoMultiplier));\n  }\n  if (!Mathf.equal(type.reloadMultiplier,1f)) {\n    sep(bt,Core.bundle.format(\"bullet.reload\",Strings.autoFixed(type.reloadMultiplier,2)));\n  }\n  if (type.knockback > 0) {\n    sep(bt,Core.bundle.format(\"bullet.knockback\",Strings.autoFixed(type.knockback,2)));\n  }\n  if (type.healPercent > 0f) {\n    sep(bt,Core.bundle.format(\"bullet.healpercent\",(int)type.healPercent));\n  }\n  if (type.pierce || type.pierceCap != -1) {\n    sep(bt,type.pierceCap == -1 ? \"@bullet.infinitepierce\" : Core.bundle.format(\"bullet.pierce\",type.pierceCap));\n  }\n  if (type.status == StatusEffects.burning || type.status == StatusEffects.melting || type.incendAmount > 0) {\n    sep(bt,\"@bullet.incendiary\");\n  }\n  if (type.status == StatusEffects.freezing) {\n    sep(bt,\"@bullet.freezing\");\n  }\n  if (type.status == StatusEffects.tarred) {\n    sep(bt,\"@bullet.tarred\");\n  }\n  if (type.status == StatusEffects.sapped) {\n    sep(bt,\"@bullet.sapping\");\n  }\n  if (type.homingPower > 0.01f) {\n    sep(bt,\"@bullet.homing\");\n  }\n  if (type.lightning > 0) {\n    sep(bt,\"@bullet.shock\");\n  }\n  if (type.fragBullet != null) {\n    sep(bt,\"@bullet.frag\");\n  }\n}\n).padTop(unit ? 0 : -9).left().get().background(unit ? null : Tex.underline)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 370,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2587,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 90
      },
      "nodeContext" : "table.table(bt -> {\n  bt.left().defaults().padRight(3).left();\n  if (type.damage > 0 && (type.collides || type.splashDamage <= 0)) {\n    bt.add(Core.bundle.format(\"bullet.damage\",type.damage));\n  }\n  if (type.buildingDamageMultiplier != 1) {\n    sep(bt,Core.bundle.format(\"bullet.buildingdamage\",(int)(type.buildingDamageMultiplier * 100)));\n  }\n  if (type.splashDamage > 0) {\n    sep(bt,Core.bundle.format(\"bullet.splashdamage\",(int)type.splashDamage,Strings.fixed(type.splashDamageRadius / tilesize,1)));\n  }\n  if (!unit && !Mathf.equal(type.ammoMultiplier,1f) && !(type instanceof LiquidBulletType)) {\n    sep(bt,Core.bundle.format(\"bullet.multiplier\",(int)type.ammoMultiplier));\n  }\n  if (!Mathf.equal(type.reloadMultiplier,1f)) {\n    sep(bt,Core.bundle.format(\"bullet.reload\",Strings.autoFixed(type.reloadMultiplier,2)));\n  }\n  if (type.knockback > 0) {\n    sep(bt,Core.bundle.format(\"bullet.knockback\",Strings.autoFixed(type.knockback,2)));\n  }\n  if (type.healPercent > 0f) {\n    sep(bt,Core.bundle.format(\"bullet.healpercent\",(int)type.healPercent));\n  }\n  if (type.pierce || type.pierceCap != -1) {\n    sep(bt,type.pierceCap == -1 ? \"@bullet.infinitepierce\" : Core.bundle.format(\"bullet.pierce\",type.pierceCap));\n  }\n  if (type.status == StatusEffects.burning || type.status == StatusEffects.melting || type.incendAmount > 0) {\n    sep(bt,\"@bullet.incendiary\");\n  }\n  if (type.status == StatusEffects.freezing) {\n    sep(bt,\"@bullet.freezing\");\n  }\n  if (type.status == StatusEffects.tarred) {\n    sep(bt,\"@bullet.tarred\");\n  }\n  if (type.status == StatusEffects.sapped) {\n    sep(bt,\"@bullet.sapping\");\n  }\n  if (type.homingPower > 0.01f) {\n    sep(bt,\"@bullet.homing\");\n  }\n  if (type.lightning > 0) {\n    sep(bt,\"@bullet.shock\");\n  }\n  if (type.fragBullet != null) {\n    sep(bt,\"@bullet.frag\");\n  }\n}\n).padTop(unit ? 0 : -9).left().get().background(unit ? null : Tex.underline);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 371,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 2968,
        "startLineNumber" : 31,
        "startColumnNumber" : 29,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  boolean unit=t instanceof UnitType;\n  BulletType type=map.get(t);\n  if (!unit) {\n    table.image(icon(t)).size(3 * 8).padRight(4).right().top();\n    table.add(t.localizedName).padRight(10).left().top();\n  }\n  table.table(bt -> {\n    bt.left().defaults().padRight(3).left();\n    if (type.damage > 0 && (type.collides || type.splashDamage <= 0)) {\n      bt.add(Core.bundle.format(\"bullet.damage\",type.damage));\n    }\n    if (type.buildingDamageMultiplier != 1) {\n      sep(bt,Core.bundle.format(\"bullet.buildingdamage\",(int)(type.buildingDamageMultiplier * 100)));\n    }\n    if (type.splashDamage > 0) {\n      sep(bt,Core.bundle.format(\"bullet.splashdamage\",(int)type.splashDamage,Strings.fixed(type.splashDamageRadius / tilesize,1)));\n    }\n    if (!unit && !Mathf.equal(type.ammoMultiplier,1f) && !(type instanceof LiquidBulletType)) {\n      sep(bt,Core.bundle.format(\"bullet.multiplier\",(int)type.ammoMultiplier));\n    }\n    if (!Mathf.equal(type.reloadMultiplier,1f)) {\n      sep(bt,Core.bundle.format(\"bullet.reload\",Strings.autoFixed(type.reloadMultiplier,2)));\n    }\n    if (type.knockback > 0) {\n      sep(bt,Core.bundle.format(\"bullet.knockback\",Strings.autoFixed(type.knockback,2)));\n    }\n    if (type.healPercent > 0f) {\n      sep(bt,Core.bundle.format(\"bullet.healpercent\",(int)type.healPercent));\n    }\n    if (type.pierce || type.pierceCap != -1) {\n      sep(bt,type.pierceCap == -1 ? \"@bullet.infinitepierce\" : Core.bundle.format(\"bullet.pierce\",type.pierceCap));\n    }\n    if (type.status == StatusEffects.burning || type.status == StatusEffects.melting || type.incendAmount > 0) {\n      sep(bt,\"@bullet.incendiary\");\n    }\n    if (type.status == StatusEffects.freezing) {\n      sep(bt,\"@bullet.freezing\");\n    }\n    if (type.status == StatusEffects.tarred) {\n      sep(bt,\"@bullet.tarred\");\n    }\n    if (type.status == StatusEffects.sapped) {\n      sep(bt,\"@bullet.sapping\");\n    }\n    if (type.homingPower > 0.01f) {\n      sep(bt,\"@bullet.homing\");\n    }\n    if (type.lightning > 0) {\n      sep(bt,\"@bullet.shock\");\n    }\n    if (type.fragBullet != null) {\n      sep(bt,\"@bullet.frag\");\n    }\n  }\n).padTop(unit ? 0 : -9).left().get().background(unit ? null : Tex.underline);\n  table.row();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 430,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2989,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (T t : map.keys()) {\n  boolean unit=t instanceof UnitType;\n  BulletType type=map.get(t);\n  if (!unit) {\n    table.image(icon(t)).size(3 * 8).padRight(4).right().top();\n    table.add(t.localizedName).padRight(10).left().top();\n  }\n  table.table(bt -> {\n    bt.left().defaults().padRight(3).left();\n    if (type.damage > 0 && (type.collides || type.splashDamage <= 0)) {\n      bt.add(Core.bundle.format(\"bullet.damage\",type.damage));\n    }\n    if (type.buildingDamageMultiplier != 1) {\n      sep(bt,Core.bundle.format(\"bullet.buildingdamage\",(int)(type.buildingDamageMultiplier * 100)));\n    }\n    if (type.splashDamage > 0) {\n      sep(bt,Core.bundle.format(\"bullet.splashdamage\",(int)type.splashDamage,Strings.fixed(type.splashDamageRadius / tilesize,1)));\n    }\n    if (!unit && !Mathf.equal(type.ammoMultiplier,1f) && !(type instanceof LiquidBulletType)) {\n      sep(bt,Core.bundle.format(\"bullet.multiplier\",(int)type.ammoMultiplier));\n    }\n    if (!Mathf.equal(type.reloadMultiplier,1f)) {\n      sep(bt,Core.bundle.format(\"bullet.reload\",Strings.autoFixed(type.reloadMultiplier,2)));\n    }\n    if (type.knockback > 0) {\n      sep(bt,Core.bundle.format(\"bullet.knockback\",Strings.autoFixed(type.knockback,2)));\n    }\n    if (type.healPercent > 0f) {\n      sep(bt,Core.bundle.format(\"bullet.healpercent\",(int)type.healPercent));\n    }\n    if (type.pierce || type.pierceCap != -1) {\n      sep(bt,type.pierceCap == -1 ? \"@bullet.infinitepierce\" : Core.bundle.format(\"bullet.pierce\",type.pierceCap));\n    }\n    if (type.status == StatusEffects.burning || type.status == StatusEffects.melting || type.incendAmount > 0) {\n      sep(bt,\"@bullet.incendiary\");\n    }\n    if (type.status == StatusEffects.freezing) {\n      sep(bt,\"@bullet.freezing\");\n    }\n    if (type.status == StatusEffects.tarred) {\n      sep(bt,\"@bullet.tarred\");\n    }\n    if (type.status == StatusEffects.sapped) {\n      sep(bt,\"@bullet.sapping\");\n    }\n    if (type.homingPower > 0.01f) {\n      sep(bt,\"@bullet.homing\");\n    }\n    if (type.lightning > 0) {\n      sep(bt,\"@bullet.shock\");\n    }\n    if (type.fragBullet != null) {\n      sep(bt,\"@bullet.frag\");\n    }\n  }\n).padTop(unit ? 0 : -9).left().get().background(unit ? null : Tex.underline);\n  table.row();\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 438,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3028,
        "startLineNumber" : 27,
        "startColumnNumber" : 36,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  table.row();\n  for (  T t : map.keys()) {\n    boolean unit=t instanceof UnitType;\n    BulletType type=map.get(t);\n    if (!unit) {\n      table.image(icon(t)).size(3 * 8).padRight(4).right().top();\n      table.add(t.localizedName).padRight(10).left().top();\n    }\n    table.table(bt -> {\n      bt.left().defaults().padRight(3).left();\n      if (type.damage > 0 && (type.collides || type.splashDamage <= 0)) {\n        bt.add(Core.bundle.format(\"bullet.damage\",type.damage));\n      }\n      if (type.buildingDamageMultiplier != 1) {\n        sep(bt,Core.bundle.format(\"bullet.buildingdamage\",(int)(type.buildingDamageMultiplier * 100)));\n      }\n      if (type.splashDamage > 0) {\n        sep(bt,Core.bundle.format(\"bullet.splashdamage\",(int)type.splashDamage,Strings.fixed(type.splashDamageRadius / tilesize,1)));\n      }\n      if (!unit && !Mathf.equal(type.ammoMultiplier,1f) && !(type instanceof LiquidBulletType)) {\n        sep(bt,Core.bundle.format(\"bullet.multiplier\",(int)type.ammoMultiplier));\n      }\n      if (!Mathf.equal(type.reloadMultiplier,1f)) {\n        sep(bt,Core.bundle.format(\"bullet.reload\",Strings.autoFixed(type.reloadMultiplier,2)));\n      }\n      if (type.knockback > 0) {\n        sep(bt,Core.bundle.format(\"bullet.knockback\",Strings.autoFixed(type.knockback,2)));\n      }\n      if (type.healPercent > 0f) {\n        sep(bt,Core.bundle.format(\"bullet.healpercent\",(int)type.healPercent));\n      }\n      if (type.pierce || type.pierceCap != -1) {\n        sep(bt,type.pierceCap == -1 ? \"@bullet.infinitepierce\" : Core.bundle.format(\"bullet.pierce\",type.pierceCap));\n      }\n      if (type.status == StatusEffects.burning || type.status == StatusEffects.melting || type.incendAmount > 0) {\n        sep(bt,\"@bullet.incendiary\");\n      }\n      if (type.status == StatusEffects.freezing) {\n        sep(bt,\"@bullet.freezing\");\n      }\n      if (type.status == StatusEffects.tarred) {\n        sep(bt,\"@bullet.tarred\");\n      }\n      if (type.status == StatusEffects.sapped) {\n        sep(bt,\"@bullet.sapping\");\n      }\n      if (type.homingPower > 0.01f) {\n        sep(bt,\"@bullet.homing\");\n      }\n      if (type.lightning > 0) {\n        sep(bt,\"@bullet.shock\");\n      }\n      if (type.fragBullet != null) {\n        sep(bt,\"@bullet.frag\");\n      }\n    }\n).padTop(unit ? 0 : -9).left().get().background(unit ? null : Tex.underline);\n    table.row();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 443,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3074,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void display(Table table){\n  table.row();\n  for (  T t : map.keys()) {\n    boolean unit=t instanceof UnitType;\n    BulletType type=map.get(t);\n    if (!unit) {\n      table.image(icon(t)).size(3 * 8).padRight(4).right().top();\n      table.add(t.localizedName).padRight(10).left().top();\n    }\n    table.table(bt -> {\n      bt.left().defaults().padRight(3).left();\n      if (type.damage > 0 && (type.collides || type.splashDamage <= 0)) {\n        bt.add(Core.bundle.format(\"bullet.damage\",type.damage));\n      }\n      if (type.buildingDamageMultiplier != 1) {\n        sep(bt,Core.bundle.format(\"bullet.buildingdamage\",(int)(type.buildingDamageMultiplier * 100)));\n      }\n      if (type.splashDamage > 0) {\n        sep(bt,Core.bundle.format(\"bullet.splashdamage\",(int)type.splashDamage,Strings.fixed(type.splashDamageRadius / tilesize,1)));\n      }\n      if (!unit && !Mathf.equal(type.ammoMultiplier,1f) && !(type instanceof LiquidBulletType)) {\n        sep(bt,Core.bundle.format(\"bullet.multiplier\",(int)type.ammoMultiplier));\n      }\n      if (!Mathf.equal(type.reloadMultiplier,1f)) {\n        sep(bt,Core.bundle.format(\"bullet.reload\",Strings.autoFixed(type.reloadMultiplier,2)));\n      }\n      if (type.knockback > 0) {\n        sep(bt,Core.bundle.format(\"bullet.knockback\",Strings.autoFixed(type.knockback,2)));\n      }\n      if (type.healPercent > 0f) {\n        sep(bt,Core.bundle.format(\"bullet.healpercent\",(int)type.healPercent));\n      }\n      if (type.pierce || type.pierceCap != -1) {\n        sep(bt,type.pierceCap == -1 ? \"@bullet.infinitepierce\" : Core.bundle.format(\"bullet.pierce\",type.pierceCap));\n      }\n      if (type.status == StatusEffects.burning || type.status == StatusEffects.melting || type.incendAmount > 0) {\n        sep(bt,\"@bullet.incendiary\");\n      }\n      if (type.status == StatusEffects.freezing) {\n        sep(bt,\"@bullet.freezing\");\n      }\n      if (type.status == StatusEffects.tarred) {\n        sep(bt,\"@bullet.tarred\");\n      }\n      if (type.status == StatusEffects.sapped) {\n        sep(bt,\"@bullet.sapping\");\n      }\n      if (type.homingPower > 0.01f) {\n        sep(bt,\"@bullet.homing\");\n      }\n      if (type.lightning > 0) {\n        sep(bt,\"@bullet.shock\");\n      }\n      if (type.fragBullet != null) {\n        sep(bt,\"@bullet.frag\");\n      }\n    }\n).padTop(unit ? 0 : -9).left().get().background(unit ? null : Tex.underline);\n    table.row();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 453,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 2511,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 14
      },
      "nodeContext" : "table.table(bt -> {\n  bt.left().defaults().padRight(3).left();\n  if (type.damage > 0 && (type.collides || type.splashDamage <= 0)) {\n    bt.add(Core.bundle.format(\"bullet.damage\",type.damage));\n  }\n  if (type.buildingDamageMultiplier != 1) {\n    sep(bt,Core.bundle.format(\"bullet.buildingdamage\",(int)(type.buildingDamageMultiplier * 100)));\n  }\n  if (type.splashDamage > 0) {\n    sep(bt,Core.bundle.format(\"bullet.splashdamage\",(int)type.splashDamage,Strings.fixed(type.splashDamageRadius / tilesize,1)));\n  }\n  if (!unit && !Mathf.equal(type.ammoMultiplier,1f) && !(type instanceof LiquidBulletType)) {\n    sep(bt,Core.bundle.format(\"bullet.multiplier\",(int)type.ammoMultiplier));\n  }\n  if (!Mathf.equal(type.reloadMultiplier,1f)) {\n    sep(bt,Core.bundle.format(\"bullet.reload\",Strings.autoFixed(type.reloadMultiplier,2)));\n  }\n  if (type.knockback > 0) {\n    sep(bt,Core.bundle.format(\"bullet.knockback\",Strings.autoFixed(type.knockback,2)));\n  }\n  if (type.healPercent > 0f) {\n    sep(bt,Core.bundle.format(\"bullet.healpercent\",(int)type.healPercent));\n  }\n  if (type.pierce || type.pierceCap != -1) {\n    sep(bt,type.pierceCap == -1 ? \"@bullet.infinitepierce\" : Core.bundle.format(\"bullet.pierce\",type.pierceCap));\n  }\n  if (type.status == StatusEffects.burning || type.status == StatusEffects.melting || type.incendAmount > 0) {\n    sep(bt,\"@bullet.incendiary\");\n  }\n  if (type.status == StatusEffects.freezing) {\n    sep(bt,\"@bullet.freezing\");\n  }\n  if (type.status == StatusEffects.tarred) {\n    sep(bt,\"@bullet.tarred\");\n  }\n  if (type.status == StatusEffects.sapped) {\n    sep(bt,\"@bullet.sapping\");\n  }\n  if (type.homingPower > 0.01f) {\n    sep(bt,\"@bullet.homing\");\n  }\n  if (type.lightning > 0) {\n    sep(bt,\"@bullet.shock\");\n  }\n  if (type.fragBullet != null) {\n    sep(bt,\"@bullet.frag\");\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 351,
      "astHeight" : 13
    },
    "tokenLength" : 1,
    "type" : "mindustry.world.meta.values.Table"
  }, {
    "nodeContext" : "table",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 106,
      "startColumnNumber" : 12,
      "endLineNumber" : 106,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 106,
        "startColumnNumber" : 12,
        "endLineNumber" : 106,
        "endColumnNumber" : 23
      },
      "nodeContext" : "table.row()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 106,
        "startColumnNumber" : 12,
        "endLineNumber" : 106,
        "endColumnNumber" : 24
      },
      "nodeContext" : "table.row();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 2968,
        "startLineNumber" : 31,
        "startColumnNumber" : 29,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  boolean unit=t instanceof UnitType;\n  BulletType type=map.get(t);\n  if (!unit) {\n    table.image(icon(t)).size(3 * 8).padRight(4).right().top();\n    table.add(t.localizedName).padRight(10).left().top();\n  }\n  table.table(bt -> {\n    bt.left().defaults().padRight(3).left();\n    if (type.damage > 0 && (type.collides || type.splashDamage <= 0)) {\n      bt.add(Core.bundle.format(\"bullet.damage\",type.damage));\n    }\n    if (type.buildingDamageMultiplier != 1) {\n      sep(bt,Core.bundle.format(\"bullet.buildingdamage\",(int)(type.buildingDamageMultiplier * 100)));\n    }\n    if (type.splashDamage > 0) {\n      sep(bt,Core.bundle.format(\"bullet.splashdamage\",(int)type.splashDamage,Strings.fixed(type.splashDamageRadius / tilesize,1)));\n    }\n    if (!unit && !Mathf.equal(type.ammoMultiplier,1f) && !(type instanceof LiquidBulletType)) {\n      sep(bt,Core.bundle.format(\"bullet.multiplier\",(int)type.ammoMultiplier));\n    }\n    if (!Mathf.equal(type.reloadMultiplier,1f)) {\n      sep(bt,Core.bundle.format(\"bullet.reload\",Strings.autoFixed(type.reloadMultiplier,2)));\n    }\n    if (type.knockback > 0) {\n      sep(bt,Core.bundle.format(\"bullet.knockback\",Strings.autoFixed(type.knockback,2)));\n    }\n    if (type.healPercent > 0f) {\n      sep(bt,Core.bundle.format(\"bullet.healpercent\",(int)type.healPercent));\n    }\n    if (type.pierce || type.pierceCap != -1) {\n      sep(bt,type.pierceCap == -1 ? \"@bullet.infinitepierce\" : Core.bundle.format(\"bullet.pierce\",type.pierceCap));\n    }\n    if (type.status == StatusEffects.burning || type.status == StatusEffects.melting || type.incendAmount > 0) {\n      sep(bt,\"@bullet.incendiary\");\n    }\n    if (type.status == StatusEffects.freezing) {\n      sep(bt,\"@bullet.freezing\");\n    }\n    if (type.status == StatusEffects.tarred) {\n      sep(bt,\"@bullet.tarred\");\n    }\n    if (type.status == StatusEffects.sapped) {\n      sep(bt,\"@bullet.sapping\");\n    }\n    if (type.homingPower > 0.01f) {\n      sep(bt,\"@bullet.homing\");\n    }\n    if (type.lightning > 0) {\n      sep(bt,\"@bullet.shock\");\n    }\n    if (type.fragBullet != null) {\n      sep(bt,\"@bullet.frag\");\n    }\n  }\n).padTop(unit ? 0 : -9).left().get().background(unit ? null : Tex.underline);\n  table.row();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 430,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2989,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (T t : map.keys()) {\n  boolean unit=t instanceof UnitType;\n  BulletType type=map.get(t);\n  if (!unit) {\n    table.image(icon(t)).size(3 * 8).padRight(4).right().top();\n    table.add(t.localizedName).padRight(10).left().top();\n  }\n  table.table(bt -> {\n    bt.left().defaults().padRight(3).left();\n    if (type.damage > 0 && (type.collides || type.splashDamage <= 0)) {\n      bt.add(Core.bundle.format(\"bullet.damage\",type.damage));\n    }\n    if (type.buildingDamageMultiplier != 1) {\n      sep(bt,Core.bundle.format(\"bullet.buildingdamage\",(int)(type.buildingDamageMultiplier * 100)));\n    }\n    if (type.splashDamage > 0) {\n      sep(bt,Core.bundle.format(\"bullet.splashdamage\",(int)type.splashDamage,Strings.fixed(type.splashDamageRadius / tilesize,1)));\n    }\n    if (!unit && !Mathf.equal(type.ammoMultiplier,1f) && !(type instanceof LiquidBulletType)) {\n      sep(bt,Core.bundle.format(\"bullet.multiplier\",(int)type.ammoMultiplier));\n    }\n    if (!Mathf.equal(type.reloadMultiplier,1f)) {\n      sep(bt,Core.bundle.format(\"bullet.reload\",Strings.autoFixed(type.reloadMultiplier,2)));\n    }\n    if (type.knockback > 0) {\n      sep(bt,Core.bundle.format(\"bullet.knockback\",Strings.autoFixed(type.knockback,2)));\n    }\n    if (type.healPercent > 0f) {\n      sep(bt,Core.bundle.format(\"bullet.healpercent\",(int)type.healPercent));\n    }\n    if (type.pierce || type.pierceCap != -1) {\n      sep(bt,type.pierceCap == -1 ? \"@bullet.infinitepierce\" : Core.bundle.format(\"bullet.pierce\",type.pierceCap));\n    }\n    if (type.status == StatusEffects.burning || type.status == StatusEffects.melting || type.incendAmount > 0) {\n      sep(bt,\"@bullet.incendiary\");\n    }\n    if (type.status == StatusEffects.freezing) {\n      sep(bt,\"@bullet.freezing\");\n    }\n    if (type.status == StatusEffects.tarred) {\n      sep(bt,\"@bullet.tarred\");\n    }\n    if (type.status == StatusEffects.sapped) {\n      sep(bt,\"@bullet.sapping\");\n    }\n    if (type.homingPower > 0.01f) {\n      sep(bt,\"@bullet.homing\");\n    }\n    if (type.lightning > 0) {\n      sep(bt,\"@bullet.shock\");\n    }\n    if (type.fragBullet != null) {\n      sep(bt,\"@bullet.frag\");\n    }\n  }\n).padTop(unit ? 0 : -9).left().get().background(unit ? null : Tex.underline);\n  table.row();\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 438,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3028,
        "startLineNumber" : 27,
        "startColumnNumber" : 36,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  table.row();\n  for (  T t : map.keys()) {\n    boolean unit=t instanceof UnitType;\n    BulletType type=map.get(t);\n    if (!unit) {\n      table.image(icon(t)).size(3 * 8).padRight(4).right().top();\n      table.add(t.localizedName).padRight(10).left().top();\n    }\n    table.table(bt -> {\n      bt.left().defaults().padRight(3).left();\n      if (type.damage > 0 && (type.collides || type.splashDamage <= 0)) {\n        bt.add(Core.bundle.format(\"bullet.damage\",type.damage));\n      }\n      if (type.buildingDamageMultiplier != 1) {\n        sep(bt,Core.bundle.format(\"bullet.buildingdamage\",(int)(type.buildingDamageMultiplier * 100)));\n      }\n      if (type.splashDamage > 0) {\n        sep(bt,Core.bundle.format(\"bullet.splashdamage\",(int)type.splashDamage,Strings.fixed(type.splashDamageRadius / tilesize,1)));\n      }\n      if (!unit && !Mathf.equal(type.ammoMultiplier,1f) && !(type instanceof LiquidBulletType)) {\n        sep(bt,Core.bundle.format(\"bullet.multiplier\",(int)type.ammoMultiplier));\n      }\n      if (!Mathf.equal(type.reloadMultiplier,1f)) {\n        sep(bt,Core.bundle.format(\"bullet.reload\",Strings.autoFixed(type.reloadMultiplier,2)));\n      }\n      if (type.knockback > 0) {\n        sep(bt,Core.bundle.format(\"bullet.knockback\",Strings.autoFixed(type.knockback,2)));\n      }\n      if (type.healPercent > 0f) {\n        sep(bt,Core.bundle.format(\"bullet.healpercent\",(int)type.healPercent));\n      }\n      if (type.pierce || type.pierceCap != -1) {\n        sep(bt,type.pierceCap == -1 ? \"@bullet.infinitepierce\" : Core.bundle.format(\"bullet.pierce\",type.pierceCap));\n      }\n      if (type.status == StatusEffects.burning || type.status == StatusEffects.melting || type.incendAmount > 0) {\n        sep(bt,\"@bullet.incendiary\");\n      }\n      if (type.status == StatusEffects.freezing) {\n        sep(bt,\"@bullet.freezing\");\n      }\n      if (type.status == StatusEffects.tarred) {\n        sep(bt,\"@bullet.tarred\");\n      }\n      if (type.status == StatusEffects.sapped) {\n        sep(bt,\"@bullet.sapping\");\n      }\n      if (type.homingPower > 0.01f) {\n        sep(bt,\"@bullet.homing\");\n      }\n      if (type.lightning > 0) {\n        sep(bt,\"@bullet.shock\");\n      }\n      if (type.fragBullet != null) {\n        sep(bt,\"@bullet.frag\");\n      }\n    }\n).padTop(unit ? 0 : -9).left().get().background(unit ? null : Tex.underline);\n    table.row();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 443,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3074,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void display(Table table){\n  table.row();\n  for (  T t : map.keys()) {\n    boolean unit=t instanceof UnitType;\n    BulletType type=map.get(t);\n    if (!unit) {\n      table.image(icon(t)).size(3 * 8).padRight(4).right().top();\n      table.add(t.localizedName).padRight(10).left().top();\n    }\n    table.table(bt -> {\n      bt.left().defaults().padRight(3).left();\n      if (type.damage > 0 && (type.collides || type.splashDamage <= 0)) {\n        bt.add(Core.bundle.format(\"bullet.damage\",type.damage));\n      }\n      if (type.buildingDamageMultiplier != 1) {\n        sep(bt,Core.bundle.format(\"bullet.buildingdamage\",(int)(type.buildingDamageMultiplier * 100)));\n      }\n      if (type.splashDamage > 0) {\n        sep(bt,Core.bundle.format(\"bullet.splashdamage\",(int)type.splashDamage,Strings.fixed(type.splashDamageRadius / tilesize,1)));\n      }\n      if (!unit && !Mathf.equal(type.ammoMultiplier,1f) && !(type instanceof LiquidBulletType)) {\n        sep(bt,Core.bundle.format(\"bullet.multiplier\",(int)type.ammoMultiplier));\n      }\n      if (!Mathf.equal(type.reloadMultiplier,1f)) {\n        sep(bt,Core.bundle.format(\"bullet.reload\",Strings.autoFixed(type.reloadMultiplier,2)));\n      }\n      if (type.knockback > 0) {\n        sep(bt,Core.bundle.format(\"bullet.knockback\",Strings.autoFixed(type.knockback,2)));\n      }\n      if (type.healPercent > 0f) {\n        sep(bt,Core.bundle.format(\"bullet.healpercent\",(int)type.healPercent));\n      }\n      if (type.pierce || type.pierceCap != -1) {\n        sep(bt,type.pierceCap == -1 ? \"@bullet.infinitepierce\" : Core.bundle.format(\"bullet.pierce\",type.pierceCap));\n      }\n      if (type.status == StatusEffects.burning || type.status == StatusEffects.melting || type.incendAmount > 0) {\n        sep(bt,\"@bullet.incendiary\");\n      }\n      if (type.status == StatusEffects.freezing) {\n        sep(bt,\"@bullet.freezing\");\n      }\n      if (type.status == StatusEffects.tarred) {\n        sep(bt,\"@bullet.tarred\");\n      }\n      if (type.status == StatusEffects.sapped) {\n        sep(bt,\"@bullet.sapping\");\n      }\n      if (type.homingPower > 0.01f) {\n        sep(bt,\"@bullet.homing\");\n      }\n      if (type.lightning > 0) {\n        sep(bt,\"@bullet.shock\");\n      }\n      if (type.fragBullet != null) {\n        sep(bt,\"@bullet.frag\");\n      }\n    }\n).padTop(unit ? 0 : -9).left().get().background(unit ? null : Tex.underline);\n    table.row();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 453,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 106,
        "startColumnNumber" : 12,
        "endLineNumber" : 106,
        "endColumnNumber" : 24
      },
      "nodeContext" : "table.row();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "mindustry.world.meta.values.Table"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 29,
    "startColumnNumber" : 8,
    "endLineNumber" : 29,
    "endColumnNumber" : 13
  }, {
    "charLength" : 5,
    "startLineNumber" : 38,
    "startColumnNumber" : 16,
    "endLineNumber" : 38,
    "endColumnNumber" : 21
  }, {
    "charLength" : 5,
    "startLineNumber" : 39,
    "startColumnNumber" : 16,
    "endLineNumber" : 39,
    "endColumnNumber" : 21
  }, {
    "charLength" : 5,
    "startLineNumber" : 42,
    "startColumnNumber" : 12,
    "endLineNumber" : 42,
    "endColumnNumber" : 17
  }, {
    "charLength" : 5,
    "startLineNumber" : 106,
    "startColumnNumber" : 12,
    "endLineNumber" : 106,
    "endColumnNumber" : 17
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 10
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  } ]
}