{
  "id" : 94,
  "expression" : "model.getType()",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-ml/src/main/java/com/facebook/presto/ml/MLFunctions.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "model.getType()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 47,
      "startColumnNumber" : 22,
      "endLineNumber" : 47,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 47,
        "startColumnNumber" : 22,
        "endLineNumber" : 47,
        "endColumnNumber" : 64
      },
      "nodeContext" : "model.getType().equals(VARCHAR_CLASSIFIER)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 103
      },
      "nodeContext" : "checkArgument(model.getType().equals(VARCHAR_CLASSIFIER),\"model is not a classifier<varchar>\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 104
      },
      "nodeContext" : "checkArgument(model.getType().equals(VARCHAR_CLASSIFIER),\"model is not a classifier<varchar>\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 369,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  FeatureVector features=ModelUtils.toFeatures(featuresMap);\n  Model model=getOrLoadModel(modelSlice);\n  checkArgument(model.getType().equals(VARCHAR_CLASSIFIER),\"model is not a classifier<varchar>\");\n  Classifier<String> varcharClassifier=(Classifier)model;\n  return Slices.utf8Slice(varcharClassifier.classify(features));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 574,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@ScalarFunction(\"classify\") @SqlType(StandardTypes.VARCHAR) public static Slice varcharClassify(@SqlType(MAP_BIGINT_DOUBLE) Block featuresMap,@SqlType(\"Classifier<varchar>\") Slice modelSlice){\n  FeatureVector features=ModelUtils.toFeatures(featuresMap);\n  Model model=getOrLoadModel(modelSlice);\n  checkArgument(model.getType().equals(VARCHAR_CLASSIFIER),\"model is not a classifier<varchar>\");\n  Classifier<String> varcharClassifier=(Classifier)model;\n  return Slices.utf8Slice(varcharClassifier.classify(features));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 76,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 104
      },
      "nodeContext" : "checkArgument(model.getType().equals(VARCHAR_CLASSIFIER),\"model is not a classifier<varchar>\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "com.facebook.presto.ml.type.ModelType"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 47,
    "startColumnNumber" : 22,
    "endLineNumber" : 47,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}