{
  "id" : 242,
  "expression" : "min(sequenceNumber,previousSequenceNumber) - max(sequenceNumber,previousSequenceNumber)",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/rtsp/src/main/java/com/google/android/exoplayer2/source/rtsp/RtpPacketReorderingQueue.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "min(sequenceNumber,previousSequenceNumber) - max(sequenceNumber,previousSequenceNumber)",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 103,
      "startLineNumber" : 194,
      "startColumnNumber" : 10,
      "endLineNumber" : 195,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 9,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 194,
        "startColumnNumber" : 10,
        "endLineNumber" : 196,
        "endColumnNumber" : 35
      },
      "nodeContext" : "min(sequenceNumber,previousSequenceNumber) - max(sequenceNumber,previousSequenceNumber) + MAX_SEQUENCE_NUMBER",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 193,
        "startColumnNumber" : 10,
        "endLineNumber" : 196,
        "endColumnNumber" : 35
      },
      "nodeContext" : "shift=min(sequenceNumber,previousSequenceNumber) - max(sequenceNumber,previousSequenceNumber) + MAX_SEQUENCE_NUMBER",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 193,
        "startColumnNumber" : 6,
        "endLineNumber" : 196,
        "endColumnNumber" : 36
      },
      "nodeContext" : "int shift=min(sequenceNumber,previousSequenceNumber) - max(sequenceNumber,previousSequenceNumber) + MAX_SEQUENCE_NUMBER;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 633,
        "startLineNumber" : 192,
        "startColumnNumber" : 56,
        "endLineNumber" : 205,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int shift=min(sequenceNumber,previousSequenceNumber) - max(sequenceNumber,previousSequenceNumber) + MAX_SEQUENCE_NUMBER;\n  if (shift < MAX_SEQUENCE_LEAP_ALLOWED) {\n    return sequenceNumber < previousSequenceNumber ? shift : -shift;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 685,
        "startLineNumber" : 192,
        "startColumnNumber" : 4,
        "endLineNumber" : 205,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (abs(sequenceShift) > MAX_SEQUENCE_LEAP_ALLOWED) {\n  int shift=min(sequenceNumber,previousSequenceNumber) - max(sequenceNumber,previousSequenceNumber) + MAX_SEQUENCE_NUMBER;\n  if (shift < MAX_SEQUENCE_LEAP_ALLOWED) {\n    return sequenceNumber < previousSequenceNumber ? shift : -shift;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 786,
        "startLineNumber" : 190,
        "startColumnNumber" : 98,
        "endLineNumber" : 207,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int sequenceShift=sequenceNumber - previousSequenceNumber;\n  if (abs(sequenceShift) > MAX_SEQUENCE_LEAP_ALLOWED) {\n    int shift=min(sequenceNumber,previousSequenceNumber) - max(sequenceNumber,previousSequenceNumber) + MAX_SEQUENCE_NUMBER;\n    if (shift < MAX_SEQUENCE_LEAP_ALLOWED) {\n      return sequenceNumber < previousSequenceNumber ? shift : -shift;\n    }\n  }\n  return sequenceShift;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1408,
        "startLineNumber" : 181,
        "startColumnNumber" : 2,
        "endLineNumber" : 207,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Calculates the sequence number shift, accounting for wrapping around.\n * @param sequenceNumber The currently received sequence number.\n * @param previousSequenceNumber The previous sequence number to compare against.\n * @return The shift in the sequence numbers. A positive shift indicates that {@code sequenceNumber} is logically after {@code previousSequenceNumber}, whereas a negative shift means that  {@code sequenceNumber} is logically before {@code previousSequenceNumber}.\n */\nprivate static int calculateSequenceNumberShift(int sequenceNumber,int previousSequenceNumber){\n  int sequenceShift=sequenceNumber - previousSequenceNumber;\n  if (abs(sequenceShift) > MAX_SEQUENCE_LEAP_ALLOWED) {\n    int shift=min(sequenceNumber,previousSequenceNumber) - max(sequenceNumber,previousSequenceNumber) + MAX_SEQUENCE_NUMBER;\n    if (shift < MAX_SEQUENCE_LEAP_ALLOWED) {\n      return sequenceNumber < previousSequenceNumber ? shift : -shift;\n    }\n  }\n  return sequenceShift;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 57,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 194,
        "startColumnNumber" : 10,
        "endLineNumber" : 196,
        "endColumnNumber" : 35
      },
      "nodeContext" : "min(sequenceNumber,previousSequenceNumber) - max(sequenceNumber,previousSequenceNumber) + MAX_SEQUENCE_NUMBER",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 7,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 103,
    "startLineNumber" : 194,
    "startColumnNumber" : 10,
    "endLineNumber" : 195,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ ]
}