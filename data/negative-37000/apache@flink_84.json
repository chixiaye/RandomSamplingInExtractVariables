{
  "id" : 84,
  "expression" : "new OrcColumnarRowSplitReader<>(new OrcNoHiveShim(),conf,convertToOrcTypeWithPart(fullFieldNames,fullFieldTypes,partitionSpec.keySet()),selectedOrcFields,gen,conjunctPredicates,batchSize,path,splitStart,splitLength)",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-formats/flink-orc-nohive/src/main/java/org/apache/flink/orc/nohive/OrcNoHiveSplitReaderUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new OrcColumnarRowSplitReader<>(new OrcNoHiveShim(),conf,convertToOrcTypeWithPart(fullFieldNames,fullFieldTypes,partitionSpec.keySet()),selectedOrcFields,gen,conjunctPredicates,batchSize,path,splitStart,splitLength)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 387,
      "startLineNumber" : 83,
      "startColumnNumber" : 15,
      "endLineNumber" : 93,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 22,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 395,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 29
      },
      "nodeContext" : "return new OrcColumnarRowSplitReader<>(new OrcNoHiveShim(),conf,convertToOrcTypeWithPart(fullFieldNames,fullFieldTypes,partitionSpec.keySet()),selectedOrcFields,gen,conjunctPredicates,batchSize,path,splitStart,splitLength);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 23,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1646,
        "startLineNumber" : 59,
        "startColumnNumber" : 31,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<String> nonPartNames=getNonPartNames(fullFieldNames,partitionSpec);\n  int[] selectedOrcFields=getSelectedOrcFields(fullFieldNames,selectedFields,nonPartNames);\n  OrcColumnarRowSplitReader.ColumnBatchGenerator<VectorizedRowBatch> gen=(  VectorizedRowBatch rowBatch) -> {\n    ColumnVector[] vectors=new ColumnVector[selectedFields.length];\n    for (int i=0; i < vectors.length; i++) {\n      String name=fullFieldNames[selectedFields[i]];\n      LogicalType type=fullFieldTypes[selectedFields[i]].getLogicalType();\n      vectors[i]=partitionSpec.containsKey(name) ? createFlinkVectorFromConstant(type,partitionSpec.get(name),batchSize) : createFlinkVector(rowBatch.cols[nonPartNames.indexOf(name)]);\n    }\n    return new VectorizedColumnBatch(vectors);\n  }\n;\n  return new OrcColumnarRowSplitReader<>(new OrcNoHiveShim(),conf,convertToOrcTypeWithPart(fullFieldNames,fullFieldTypes,partitionSpec.keySet()),selectedOrcFields,gen,conjunctPredicates,batchSize,path,splitStart,splitLength);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 147,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2198,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Util for generating partitioned  {@link OrcColumnarRowSplitReader}. \n */\npublic static OrcColumnarRowSplitReader<VectorizedRowBatch> genPartColumnarRowReader(Configuration conf,String[] fullFieldNames,DataType[] fullFieldTypes,Map<String,Object> partitionSpec,int[] selectedFields,List<OrcFilters.Predicate> conjunctPredicates,int batchSize,Path path,long splitStart,long splitLength) throws IOException {\n  List<String> nonPartNames=getNonPartNames(fullFieldNames,partitionSpec);\n  int[] selectedOrcFields=getSelectedOrcFields(fullFieldNames,selectedFields,nonPartNames);\n  OrcColumnarRowSplitReader.ColumnBatchGenerator<VectorizedRowBatch> gen=(  VectorizedRowBatch rowBatch) -> {\n    ColumnVector[] vectors=new ColumnVector[selectedFields.length];\n    for (int i=0; i < vectors.length; i++) {\n      String name=fullFieldNames[selectedFields[i]];\n      LogicalType type=fullFieldTypes[selectedFields[i]].getLogicalType();\n      vectors[i]=partitionSpec.containsKey(name) ? createFlinkVectorFromConstant(type,partitionSpec.get(name),batchSize) : createFlinkVector(rowBatch.cols[nonPartNames.indexOf(name)]);\n    }\n    return new VectorizedColumnBatch(vectors);\n  }\n;\n  return new OrcColumnarRowSplitReader<>(new OrcNoHiveShim(),conf,convertToOrcTypeWithPart(fullFieldNames,fullFieldTypes,partitionSpec.keySet()),selectedOrcFields,gen,conjunctPredicates,batchSize,path,splitStart,splitLength);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 211,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 395,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 29
      },
      "nodeContext" : "return new OrcColumnarRowSplitReader<>(new OrcNoHiveShim(),conf,convertToOrcTypeWithPart(fullFieldNames,fullFieldTypes,partitionSpec.keySet()),selectedOrcFields,gen,conjunctPredicates,batchSize,path,splitStart,splitLength);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 23,
      "astHeight" : 5
    },
    "tokenLength" : 15,
    "type" : "org.apache.flink.orc.OrcColumnarRowSplitReader"
  } ],
  "positionList" : [ {
    "charLength" : 387,
    "startLineNumber" : 83,
    "startColumnNumber" : 15,
    "endLineNumber" : 93,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ ]
}