{
  "id" : 510,
  "expression" : "pageDataOutput",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/main/java/com/facebook/presto/spiller/TempStorageStandaloneSpiller.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "pageDataOutput",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 88,
      "startColumnNumber" : 48,
      "endLineNumber" : 88,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 88,
        "startColumnNumber" : 48,
        "endLineNumber" : 88,
        "endColumnNumber" : 69
      },
      "nodeContext" : "pageDataOutput.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 88,
        "startColumnNumber" : 37,
        "endLineNumber" : 88,
        "endColumnNumber" : 70
      },
      "nodeContext" : "toIntExact(pageDataOutput.size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 88,
        "startColumnNumber" : 20,
        "endLineNumber" : 88,
        "endColumnNumber" : 70
      },
      "nodeContext" : "bufferedBytes+=toIntExact(pageDataOutput.size())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 88,
        "startColumnNumber" : 20,
        "endLineNumber" : 88,
        "endColumnNumber" : 71
      },
      "nodeContext" : "bufferedBytes+=toIntExact(pageDataOutput.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 606,
        "startLineNumber" : 84,
        "startColumnNumber" : 50,
        "endLineNumber" : 94,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  SerializedPage serializedPage=serde.serialize(splitPage);\n  spillerStats.addToTotalSpilledBytes(serializedPage.getSizeInBytes());\n  PageDataOutput pageDataOutput=new PageDataOutput(serializedPage);\n  bufferedBytes+=toIntExact(pageDataOutput.size());\n  bufferedPages.add(pageDataOutput);\n  if (bufferedBytes > maxBufferSizeInBytes) {\n    flushBufferedPages(tempDataSink,bufferedPages);\n    bufferedBytes=0;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 640,
        "startLineNumber" : 84,
        "startColumnNumber" : 16,
        "endLineNumber" : 94,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (Page splitPage : splitPages) {\n  SerializedPage serializedPage=serde.serialize(splitPage);\n  spillerStats.addToTotalSpilledBytes(serializedPage.getSizeInBytes());\n  PageDataOutput pageDataOutput=new PageDataOutput(serializedPage);\n  bufferedBytes+=toIntExact(pageDataOutput.size());\n  bufferedPages.add(pageDataOutput);\n  if (bufferedBytes > maxBufferSizeInBytes) {\n    flushBufferedPages(tempDataSink,bufferedPages);\n    bufferedBytes=0;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 59,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 810,
        "startLineNumber" : 81,
        "startColumnNumber" : 43,
        "endLineNumber" : 95,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Page page=pageIterator.next();\n  List<Page> splitPages=splitPage(page,DEFAULT_MAX_PAGE_SIZE_IN_BYTES);\n  for (  Page splitPage : splitPages) {\n    SerializedPage serializedPage=serde.serialize(splitPage);\n    spillerStats.addToTotalSpilledBytes(serializedPage.getSizeInBytes());\n    PageDataOutput pageDataOutput=new PageDataOutput(serializedPage);\n    bufferedBytes+=toIntExact(pageDataOutput.size());\n    bufferedPages.add(pageDataOutput);\n    if (bufferedBytes > maxBufferSizeInBytes) {\n      flushBufferedPages(tempDataSink,bufferedPages);\n      bufferedBytes=0;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 841,
        "startLineNumber" : 81,
        "startColumnNumber" : 12,
        "endLineNumber" : 95,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (pageIterator.hasNext()) {\n  Page page=pageIterator.next();\n  List<Page> splitPages=splitPage(page,DEFAULT_MAX_PAGE_SIZE_IN_BYTES);\n  for (  Page splitPage : splitPages) {\n    SerializedPage serializedPage=serde.serialize(splitPage);\n    spillerStats.addToTotalSpilledBytes(serializedPage.getSizeInBytes());\n    PageDataOutput pageDataOutput=new PageDataOutput(serializedPage);\n    bufferedBytes+=toIntExact(pageDataOutput.size());\n    bufferedPages.add(pageDataOutput);\n    if (bufferedBytes > maxBufferSizeInBytes) {\n      flushBufferedPages(tempDataSink,bufferedPages);\n      bufferedBytes=0;\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 84,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1277,
        "startLineNumber" : 79,
        "startColumnNumber" : 12,
        "endLineNumber" : 103,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  tempDataSink=tempStorage.create(tempDataOperationContext);\n  while (pageIterator.hasNext()) {\n    Page page=pageIterator.next();\n    List<Page> splitPages=splitPage(page,DEFAULT_MAX_PAGE_SIZE_IN_BYTES);\n    for (    Page splitPage : splitPages) {\n      SerializedPage serializedPage=serde.serialize(splitPage);\n      spillerStats.addToTotalSpilledBytes(serializedPage.getSizeInBytes());\n      PageDataOutput pageDataOutput=new PageDataOutput(serializedPage);\n      bufferedBytes+=toIntExact(pageDataOutput.size());\n      bufferedPages.add(pageDataOutput);\n      if (bufferedBytes > maxBufferSizeInBytes) {\n        flushBufferedPages(tempDataSink,bufferedPages);\n        bufferedBytes=0;\n      }\n    }\n  }\n  if (!bufferedPages.isEmpty()) {\n    flushBufferedPages(tempDataSink,bufferedPages);\n  }\n  TempStorageHandle tempStorageHandle=tempDataSink.commit();\n  return new SerializedStorageHandle(tempStorage.serializeHandle(tempStorageHandle));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2202,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 132,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  tempDataSink=tempStorage.create(tempDataOperationContext);\n  while (pageIterator.hasNext()) {\n    Page page=pageIterator.next();\n    List<Page> splitPages=splitPage(page,DEFAULT_MAX_PAGE_SIZE_IN_BYTES);\n    for (    Page splitPage : splitPages) {\n      SerializedPage serializedPage=serde.serialize(splitPage);\n      spillerStats.addToTotalSpilledBytes(serializedPage.getSizeInBytes());\n      PageDataOutput pageDataOutput=new PageDataOutput(serializedPage);\n      bufferedBytes+=toIntExact(pageDataOutput.size());\n      bufferedPages.add(pageDataOutput);\n      if (bufferedBytes > maxBufferSizeInBytes) {\n        flushBufferedPages(tempDataSink,bufferedPages);\n        bufferedBytes=0;\n      }\n    }\n  }\n  if (!bufferedPages.isEmpty()) {\n    flushBufferedPages(tempDataSink,bufferedPages);\n  }\n  TempStorageHandle tempStorageHandle=tempDataSink.commit();\n  return new SerializedStorageHandle(tempStorage.serializeHandle(tempStorageHandle));\n}\n catch (IOException e) {\n  ioException=e;\n  try {\n    if (tempDataSink != null) {\n      tempDataSink.rollback();\n    }\n  }\n catch (  IOException exception) {\n    if (ioException != exception) {\n      ioException.addSuppressed(exception);\n    }\n  }\n}\n finally {\n  try {\n    if (tempDataSink != null) {\n      tempDataSink.close();\n    }\n  }\n catch (  IOException e) {\n    if (ioException == null) {\n      ioException=e;\n    }\n else     if (ioException != e) {\n      ioException.addSuppressed(e);\n    }\n    throw new PrestoException(GENERIC_SPILL_FAILURE,\"Failed to spill pages\",ioException);\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 201,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2488,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<DataOutput> bufferedPages=new ArrayList<>();\n  int bufferedBytes=0;\n  IOException ioException=null;\n  TempDataSink tempDataSink=null;\n  try {\n    tempDataSink=tempStorage.create(tempDataOperationContext);\n    while (pageIterator.hasNext()) {\n      Page page=pageIterator.next();\n      List<Page> splitPages=splitPage(page,DEFAULT_MAX_PAGE_SIZE_IN_BYTES);\n      for (      Page splitPage : splitPages) {\n        SerializedPage serializedPage=serde.serialize(splitPage);\n        spillerStats.addToTotalSpilledBytes(serializedPage.getSizeInBytes());\n        PageDataOutput pageDataOutput=new PageDataOutput(serializedPage);\n        bufferedBytes+=toIntExact(pageDataOutput.size());\n        bufferedPages.add(pageDataOutput);\n        if (bufferedBytes > maxBufferSizeInBytes) {\n          flushBufferedPages(tempDataSink,bufferedPages);\n          bufferedBytes=0;\n        }\n      }\n    }\n    if (!bufferedPages.isEmpty()) {\n      flushBufferedPages(tempDataSink,bufferedPages);\n    }\n    TempStorageHandle tempStorageHandle=tempDataSink.commit();\n    return new SerializedStorageHandle(tempStorage.serializeHandle(tempStorageHandle));\n  }\n catch (  IOException e) {\n    ioException=e;\n    try {\n      if (tempDataSink != null) {\n        tempDataSink.rollback();\n      }\n    }\n catch (    IOException exception) {\n      if (ioException != exception) {\n        ioException.addSuppressed(exception);\n      }\n    }\n  }\n finally {\n    try {\n      if (tempDataSink != null) {\n        tempDataSink.close();\n      }\n    }\n catch (    IOException e) {\n      if (ioException == null) {\n        ioException=e;\n      }\n else       if (ioException != e) {\n        ioException.addSuppressed(e);\n      }\n      throw new PrestoException(GENERIC_SPILL_FAILURE,\"Failed to spill pages\",ioException);\n    }\n  }\n  throw new PrestoException(GENERIC_SPILL_FAILURE,\"Failed to spill pages\",ioException);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 238,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2558,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public SerializedStorageHandle spill(Iterator<Page> pageIterator){\n  List<DataOutput> bufferedPages=new ArrayList<>();\n  int bufferedBytes=0;\n  IOException ioException=null;\n  TempDataSink tempDataSink=null;\n  try {\n    tempDataSink=tempStorage.create(tempDataOperationContext);\n    while (pageIterator.hasNext()) {\n      Page page=pageIterator.next();\n      List<Page> splitPages=splitPage(page,DEFAULT_MAX_PAGE_SIZE_IN_BYTES);\n      for (      Page splitPage : splitPages) {\n        SerializedPage serializedPage=serde.serialize(splitPage);\n        spillerStats.addToTotalSpilledBytes(serializedPage.getSizeInBytes());\n        PageDataOutput pageDataOutput=new PageDataOutput(serializedPage);\n        bufferedBytes+=toIntExact(pageDataOutput.size());\n        bufferedPages.add(pageDataOutput);\n        if (bufferedBytes > maxBufferSizeInBytes) {\n          flushBufferedPages(tempDataSink,bufferedPages);\n          bufferedBytes=0;\n        }\n      }\n    }\n    if (!bufferedPages.isEmpty()) {\n      flushBufferedPages(tempDataSink,bufferedPages);\n    }\n    TempStorageHandle tempStorageHandle=tempDataSink.commit();\n    return new SerializedStorageHandle(tempStorage.serializeHandle(tempStorageHandle));\n  }\n catch (  IOException e) {\n    ioException=e;\n    try {\n      if (tempDataSink != null) {\n        tempDataSink.rollback();\n      }\n    }\n catch (    IOException exception) {\n      if (ioException != exception) {\n        ioException.addSuppressed(exception);\n      }\n    }\n  }\n finally {\n    try {\n      if (tempDataSink != null) {\n        tempDataSink.close();\n      }\n    }\n catch (    IOException e) {\n      if (ioException == null) {\n        ioException=e;\n      }\n else       if (ioException != e) {\n        ioException.addSuppressed(e);\n      }\n      throw new PrestoException(GENERIC_SPILL_FAILURE,\"Failed to spill pages\",ioException);\n    }\n  }\n  throw new PrestoException(GENERIC_SPILL_FAILURE,\"Failed to spill pages\",ioException);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 250,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 88,
        "startColumnNumber" : 20,
        "endLineNumber" : 88,
        "endColumnNumber" : 71
      },
      "nodeContext" : "bufferedBytes+=toIntExact(pageDataOutput.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.facebook.presto.spi.page.PageDataOutput"
  }, {
    "nodeContext" : "pageDataOutput",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 89,
      "startColumnNumber" : 38,
      "endLineNumber" : 89,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 89,
        "startColumnNumber" : 20,
        "endLineNumber" : 89,
        "endColumnNumber" : 53
      },
      "nodeContext" : "bufferedPages.add(pageDataOutput)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 89,
        "startColumnNumber" : 20,
        "endLineNumber" : 89,
        "endColumnNumber" : 54
      },
      "nodeContext" : "bufferedPages.add(pageDataOutput);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 606,
        "startLineNumber" : 84,
        "startColumnNumber" : 50,
        "endLineNumber" : 94,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  SerializedPage serializedPage=serde.serialize(splitPage);\n  spillerStats.addToTotalSpilledBytes(serializedPage.getSizeInBytes());\n  PageDataOutput pageDataOutput=new PageDataOutput(serializedPage);\n  bufferedBytes+=toIntExact(pageDataOutput.size());\n  bufferedPages.add(pageDataOutput);\n  if (bufferedBytes > maxBufferSizeInBytes) {\n    flushBufferedPages(tempDataSink,bufferedPages);\n    bufferedBytes=0;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 640,
        "startLineNumber" : 84,
        "startColumnNumber" : 16,
        "endLineNumber" : 94,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (Page splitPage : splitPages) {\n  SerializedPage serializedPage=serde.serialize(splitPage);\n  spillerStats.addToTotalSpilledBytes(serializedPage.getSizeInBytes());\n  PageDataOutput pageDataOutput=new PageDataOutput(serializedPage);\n  bufferedBytes+=toIntExact(pageDataOutput.size());\n  bufferedPages.add(pageDataOutput);\n  if (bufferedBytes > maxBufferSizeInBytes) {\n    flushBufferedPages(tempDataSink,bufferedPages);\n    bufferedBytes=0;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 59,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 810,
        "startLineNumber" : 81,
        "startColumnNumber" : 43,
        "endLineNumber" : 95,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Page page=pageIterator.next();\n  List<Page> splitPages=splitPage(page,DEFAULT_MAX_PAGE_SIZE_IN_BYTES);\n  for (  Page splitPage : splitPages) {\n    SerializedPage serializedPage=serde.serialize(splitPage);\n    spillerStats.addToTotalSpilledBytes(serializedPage.getSizeInBytes());\n    PageDataOutput pageDataOutput=new PageDataOutput(serializedPage);\n    bufferedBytes+=toIntExact(pageDataOutput.size());\n    bufferedPages.add(pageDataOutput);\n    if (bufferedBytes > maxBufferSizeInBytes) {\n      flushBufferedPages(tempDataSink,bufferedPages);\n      bufferedBytes=0;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 841,
        "startLineNumber" : 81,
        "startColumnNumber" : 12,
        "endLineNumber" : 95,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (pageIterator.hasNext()) {\n  Page page=pageIterator.next();\n  List<Page> splitPages=splitPage(page,DEFAULT_MAX_PAGE_SIZE_IN_BYTES);\n  for (  Page splitPage : splitPages) {\n    SerializedPage serializedPage=serde.serialize(splitPage);\n    spillerStats.addToTotalSpilledBytes(serializedPage.getSizeInBytes());\n    PageDataOutput pageDataOutput=new PageDataOutput(serializedPage);\n    bufferedBytes+=toIntExact(pageDataOutput.size());\n    bufferedPages.add(pageDataOutput);\n    if (bufferedBytes > maxBufferSizeInBytes) {\n      flushBufferedPages(tempDataSink,bufferedPages);\n      bufferedBytes=0;\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 84,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1277,
        "startLineNumber" : 79,
        "startColumnNumber" : 12,
        "endLineNumber" : 103,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  tempDataSink=tempStorage.create(tempDataOperationContext);\n  while (pageIterator.hasNext()) {\n    Page page=pageIterator.next();\n    List<Page> splitPages=splitPage(page,DEFAULT_MAX_PAGE_SIZE_IN_BYTES);\n    for (    Page splitPage : splitPages) {\n      SerializedPage serializedPage=serde.serialize(splitPage);\n      spillerStats.addToTotalSpilledBytes(serializedPage.getSizeInBytes());\n      PageDataOutput pageDataOutput=new PageDataOutput(serializedPage);\n      bufferedBytes+=toIntExact(pageDataOutput.size());\n      bufferedPages.add(pageDataOutput);\n      if (bufferedBytes > maxBufferSizeInBytes) {\n        flushBufferedPages(tempDataSink,bufferedPages);\n        bufferedBytes=0;\n      }\n    }\n  }\n  if (!bufferedPages.isEmpty()) {\n    flushBufferedPages(tempDataSink,bufferedPages);\n  }\n  TempStorageHandle tempStorageHandle=tempDataSink.commit();\n  return new SerializedStorageHandle(tempStorage.serializeHandle(tempStorageHandle));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2202,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 132,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  tempDataSink=tempStorage.create(tempDataOperationContext);\n  while (pageIterator.hasNext()) {\n    Page page=pageIterator.next();\n    List<Page> splitPages=splitPage(page,DEFAULT_MAX_PAGE_SIZE_IN_BYTES);\n    for (    Page splitPage : splitPages) {\n      SerializedPage serializedPage=serde.serialize(splitPage);\n      spillerStats.addToTotalSpilledBytes(serializedPage.getSizeInBytes());\n      PageDataOutput pageDataOutput=new PageDataOutput(serializedPage);\n      bufferedBytes+=toIntExact(pageDataOutput.size());\n      bufferedPages.add(pageDataOutput);\n      if (bufferedBytes > maxBufferSizeInBytes) {\n        flushBufferedPages(tempDataSink,bufferedPages);\n        bufferedBytes=0;\n      }\n    }\n  }\n  if (!bufferedPages.isEmpty()) {\n    flushBufferedPages(tempDataSink,bufferedPages);\n  }\n  TempStorageHandle tempStorageHandle=tempDataSink.commit();\n  return new SerializedStorageHandle(tempStorage.serializeHandle(tempStorageHandle));\n}\n catch (IOException e) {\n  ioException=e;\n  try {\n    if (tempDataSink != null) {\n      tempDataSink.rollback();\n    }\n  }\n catch (  IOException exception) {\n    if (ioException != exception) {\n      ioException.addSuppressed(exception);\n    }\n  }\n}\n finally {\n  try {\n    if (tempDataSink != null) {\n      tempDataSink.close();\n    }\n  }\n catch (  IOException e) {\n    if (ioException == null) {\n      ioException=e;\n    }\n else     if (ioException != e) {\n      ioException.addSuppressed(e);\n    }\n    throw new PrestoException(GENERIC_SPILL_FAILURE,\"Failed to spill pages\",ioException);\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 201,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2488,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<DataOutput> bufferedPages=new ArrayList<>();\n  int bufferedBytes=0;\n  IOException ioException=null;\n  TempDataSink tempDataSink=null;\n  try {\n    tempDataSink=tempStorage.create(tempDataOperationContext);\n    while (pageIterator.hasNext()) {\n      Page page=pageIterator.next();\n      List<Page> splitPages=splitPage(page,DEFAULT_MAX_PAGE_SIZE_IN_BYTES);\n      for (      Page splitPage : splitPages) {\n        SerializedPage serializedPage=serde.serialize(splitPage);\n        spillerStats.addToTotalSpilledBytes(serializedPage.getSizeInBytes());\n        PageDataOutput pageDataOutput=new PageDataOutput(serializedPage);\n        bufferedBytes+=toIntExact(pageDataOutput.size());\n        bufferedPages.add(pageDataOutput);\n        if (bufferedBytes > maxBufferSizeInBytes) {\n          flushBufferedPages(tempDataSink,bufferedPages);\n          bufferedBytes=0;\n        }\n      }\n    }\n    if (!bufferedPages.isEmpty()) {\n      flushBufferedPages(tempDataSink,bufferedPages);\n    }\n    TempStorageHandle tempStorageHandle=tempDataSink.commit();\n    return new SerializedStorageHandle(tempStorage.serializeHandle(tempStorageHandle));\n  }\n catch (  IOException e) {\n    ioException=e;\n    try {\n      if (tempDataSink != null) {\n        tempDataSink.rollback();\n      }\n    }\n catch (    IOException exception) {\n      if (ioException != exception) {\n        ioException.addSuppressed(exception);\n      }\n    }\n  }\n finally {\n    try {\n      if (tempDataSink != null) {\n        tempDataSink.close();\n      }\n    }\n catch (    IOException e) {\n      if (ioException == null) {\n        ioException=e;\n      }\n else       if (ioException != e) {\n        ioException.addSuppressed(e);\n      }\n      throw new PrestoException(GENERIC_SPILL_FAILURE,\"Failed to spill pages\",ioException);\n    }\n  }\n  throw new PrestoException(GENERIC_SPILL_FAILURE,\"Failed to spill pages\",ioException);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 238,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2558,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public SerializedStorageHandle spill(Iterator<Page> pageIterator){\n  List<DataOutput> bufferedPages=new ArrayList<>();\n  int bufferedBytes=0;\n  IOException ioException=null;\n  TempDataSink tempDataSink=null;\n  try {\n    tempDataSink=tempStorage.create(tempDataOperationContext);\n    while (pageIterator.hasNext()) {\n      Page page=pageIterator.next();\n      List<Page> splitPages=splitPage(page,DEFAULT_MAX_PAGE_SIZE_IN_BYTES);\n      for (      Page splitPage : splitPages) {\n        SerializedPage serializedPage=serde.serialize(splitPage);\n        spillerStats.addToTotalSpilledBytes(serializedPage.getSizeInBytes());\n        PageDataOutput pageDataOutput=new PageDataOutput(serializedPage);\n        bufferedBytes+=toIntExact(pageDataOutput.size());\n        bufferedPages.add(pageDataOutput);\n        if (bufferedBytes > maxBufferSizeInBytes) {\n          flushBufferedPages(tempDataSink,bufferedPages);\n          bufferedBytes=0;\n        }\n      }\n    }\n    if (!bufferedPages.isEmpty()) {\n      flushBufferedPages(tempDataSink,bufferedPages);\n    }\n    TempStorageHandle tempStorageHandle=tempDataSink.commit();\n    return new SerializedStorageHandle(tempStorage.serializeHandle(tempStorageHandle));\n  }\n catch (  IOException e) {\n    ioException=e;\n    try {\n      if (tempDataSink != null) {\n        tempDataSink.rollback();\n      }\n    }\n catch (    IOException exception) {\n      if (ioException != exception) {\n        ioException.addSuppressed(exception);\n      }\n    }\n  }\n finally {\n    try {\n      if (tempDataSink != null) {\n        tempDataSink.close();\n      }\n    }\n catch (    IOException e) {\n      if (ioException == null) {\n        ioException=e;\n      }\n else       if (ioException != e) {\n        ioException.addSuppressed(e);\n      }\n      throw new PrestoException(GENERIC_SPILL_FAILURE,\"Failed to spill pages\",ioException);\n    }\n  }\n  throw new PrestoException(GENERIC_SPILL_FAILURE,\"Failed to spill pages\",ioException);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 250,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 89,
        "startColumnNumber" : 20,
        "endLineNumber" : 89,
        "endColumnNumber" : 54
      },
      "nodeContext" : "bufferedPages.add(pageDataOutput);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.facebook.presto.spi.page.PageDataOutput"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 88,
    "startColumnNumber" : 48,
    "endLineNumber" : 88,
    "endColumnNumber" : 62
  }, {
    "charLength" : 14,
    "startLineNumber" : 89,
    "startColumnNumber" : 38,
    "endLineNumber" : 89,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}