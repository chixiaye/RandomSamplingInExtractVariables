{
  "id" : 79,
  "expression" : "temp",
  "projectName" : "bumptech@glide",
  "commitID" : "7d9c28ec2763e973775abd5c3e3c971728a48a56",
  "filePath" : "/third_party/gif_encoder/src/main/java/com/bumptech/glide/gifencoder/AnimatedGifEncoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "temp",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 321,
      "startColumnNumber" : 30,
      "endLineNumber" : 321,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 321,
        "startColumnNumber" : 12,
        "endLineNumber" : 321,
        "endColumnNumber" : 34
      },
      "nodeContext" : "colorTab[i + 2]=temp",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 321,
        "startColumnNumber" : 12,
        "endLineNumber" : 321,
        "endColumnNumber" : 35
      },
      "nodeContext" : "colorTab[i + 2]=temp;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 318,
        "startColumnNumber" : 53,
        "endLineNumber" : 323,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  byte temp=colorTab[i];\n  colorTab[i]=colorTab[i + 2];\n  colorTab[i + 2]=temp;\n  usedEntry[i / 3]=false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 210,
        "startLineNumber" : 318,
        "startColumnNumber" : 8,
        "endLineNumber" : 323,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < colorTab.length; i+=3) {\n  byte temp=colorTab[i];\n  colorTab[i]=colorTab[i + 2];\n  colorTab[i + 2]=temp;\n  usedEntry[i / 3]=false;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 48,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1128,
        "startLineNumber" : 310,
        "startColumnNumber" : 33,
        "endLineNumber" : 340,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int len=pixels.length;\n  int nPix=len / 3;\n  indexedPixels=new byte[nPix];\n  NeuQuant nq=new NeuQuant(pixels,len,sample);\n  colorTab=nq.process();\n  for (int i=0; i < colorTab.length; i+=3) {\n    byte temp=colorTab[i];\n    colorTab[i]=colorTab[i + 2];\n    colorTab[i + 2]=temp;\n    usedEntry[i / 3]=false;\n  }\n  int k=0;\n  for (int i=0; i < nPix; i++) {\n    int index=nq.map(pixels[k++] & 0xff,pixels[k++] & 0xff,pixels[k++] & 0xff);\n    usedEntry[index]=true;\n    indexedPixels[i]=(byte)index;\n  }\n  pixels=null;\n  colorDepth=8;\n  palSize=7;\n  if (transparent != null) {\n    transIndex=findClosest(transparent);\n  }\n else   if (hasTransparentPixels) {\n    transIndex=findClosest(Color.TRANSPARENT);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 178,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1225,
        "startLineNumber" : 307,
        "startColumnNumber" : 4,
        "endLineNumber" : 340,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Analyzes image colors and creates color map.\n */\nprivate void analyzePixels(){\n  int len=pixels.length;\n  int nPix=len / 3;\n  indexedPixels=new byte[nPix];\n  NeuQuant nq=new NeuQuant(pixels,len,sample);\n  colorTab=nq.process();\n  for (int i=0; i < colorTab.length; i+=3) {\n    byte temp=colorTab[i];\n    colorTab[i]=colorTab[i + 2];\n    colorTab[i + 2]=temp;\n    usedEntry[i / 3]=false;\n  }\n  int k=0;\n  for (int i=0; i < nPix; i++) {\n    int index=nq.map(pixels[k++] & 0xff,pixels[k++] & 0xff,pixels[k++] & 0xff);\n    usedEntry[index]=true;\n    indexedPixels[i]=(byte)index;\n  }\n  pixels=null;\n  colorDepth=8;\n  palSize=7;\n  if (transparent != null) {\n    transIndex=findClosest(transparent);\n  }\n else   if (hasTransparentPixels) {\n    transIndex=findClosest(Color.TRANSPARENT);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 321,
        "startColumnNumber" : 12,
        "endLineNumber" : 321,
        "endColumnNumber" : 35
      },
      "nodeContext" : "colorTab[i + 2]=temp;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "byte"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 321,
    "startColumnNumber" : 30,
    "endLineNumber" : 321,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}