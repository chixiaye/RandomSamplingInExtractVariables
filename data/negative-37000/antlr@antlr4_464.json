{
  "id" : 464,
  "expression" : "\"labels cannot be null\"",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/runtime/Java/src/org/antlr/v4/runtime/tree/pattern/ParseTreeMatch.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"labels cannot be null\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 64,
      "startColumnNumber" : 38,
      "endLineNumber" : 64,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 64,
        "startColumnNumber" : 9,
        "endLineNumber" : 64,
        "endColumnNumber" : 62
      },
      "nodeContext" : "new IllegalArgumentException(\"labels cannot be null\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 64,
        "startColumnNumber" : 3,
        "endLineNumber" : 64,
        "endColumnNumber" : 63
      },
      "nodeContext" : "throw new IllegalArgumentException(\"labels cannot be null\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 63,
        "startColumnNumber" : 22,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  throw new IllegalArgumentException(\"labels cannot be null\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (labels == null) {\n  throw new IllegalArgumentException(\"labels cannot be null\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 408,
        "startLineNumber" : 54,
        "startColumnNumber" : 127,
        "endLineNumber" : 71,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (tree == null) {\n    throw new IllegalArgumentException(\"tree cannot be null\");\n  }\n  if (pattern == null) {\n    throw new IllegalArgumentException(\"pattern cannot be null\");\n  }\n  if (labels == null) {\n    throw new IllegalArgumentException(\"labels cannot be null\");\n  }\n  this.tree=tree;\n  this.pattern=pattern;\n  this.labels=labels;\n  this.mismatchedNode=mismatchedNode;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1247,
        "startLineNumber" : 39,
        "startColumnNumber" : 1,
        "endLineNumber" : 71,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Constructs a new instance of  {@link ParseTreeMatch} from the specifiedparse tree and pattern.\n * @param tree The parse tree to match against the pattern.\n * @param pattern The parse tree pattern.\n * @param labels A mapping from label names to collections of{@link ParseTree} objects located by the tree pattern matching process.\n * @param mismatchedNode The first node which failed to match the treepattern during the matching process.\n * @exception IllegalArgumentException if {@code tree} is {@code null}\n * @exception IllegalArgumentException if {@code pattern} is {@code null}\n * @exception IllegalArgumentException if {@code labels} is {@code null}\n */\npublic ParseTreeMatch(ParseTree tree,ParseTreePattern pattern,MultiMap<String,ParseTree> labels,ParseTree mismatchedNode){\n  if (tree == null) {\n    throw new IllegalArgumentException(\"tree cannot be null\");\n  }\n  if (pattern == null) {\n    throw new IllegalArgumentException(\"pattern cannot be null\");\n  }\n  if (labels == null) {\n    throw new IllegalArgumentException(\"labels cannot be null\");\n  }\n  this.tree=tree;\n  this.pattern=pattern;\n  this.labels=labels;\n  this.mismatchedNode=mismatchedNode;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 80,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 64,
        "startColumnNumber" : 3,
        "endLineNumber" : 64,
        "endColumnNumber" : 63
      },
      "nodeContext" : "throw new IllegalArgumentException(\"labels cannot be null\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 64,
    "startColumnNumber" : 38,
    "endLineNumber" : 64,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}