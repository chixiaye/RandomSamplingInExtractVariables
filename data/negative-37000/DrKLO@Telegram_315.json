{
  "id" : 315,
  "expression" : "Arrays.copyOf(nalData,(nalLength + readLength) * 2)",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/com/google/android/exoplayer2/extractor/ts/NalUnitTargetBuffer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Arrays.copyOf(nalData,(nalLength + readLength) * 2)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 52,
      "startLineNumber" : 86,
      "startColumnNumber" : 16,
      "endLineNumber" : 86,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 10,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 86,
        "startColumnNumber" : 6,
        "endLineNumber" : 86,
        "endColumnNumber" : 68
      },
      "nodeContext" : "nalData=Arrays.copyOf(nalData,(nalLength + readLength) * 2)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 86,
        "startColumnNumber" : 6,
        "endLineNumber" : 86,
        "endColumnNumber" : 69
      },
      "nodeContext" : "nalData=Arrays.copyOf(nalData,(nalLength + readLength) * 2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 85,
        "startColumnNumber" : 49,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  nalData=Arrays.copyOf(nalData,(nalLength + readLength) * 2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 87,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (nalData.length < nalLength + readLength) {\n  nalData=Arrays.copyOf(nalData,(nalLength + readLength) * 2);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 308,
        "startLineNumber" : 80,
        "startColumnNumber" : 66,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!isFilling) {\n    return;\n  }\n  int readLength=limit - offset;\n  if (nalData.length < nalLength + readLength) {\n    nalData=Arrays.copyOf(nalData,(nalLength + readLength) * 2);\n  }\n  System.arraycopy(data,offset,nalData,nalLength,readLength);\n  nalLength+=readLength;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 654,
        "startLineNumber" : 73,
        "startColumnNumber" : 2,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Called to pass stream data. The data passed should not include the 3 byte start code.\n * @param data Holds the data being passed.\n * @param offset The offset of the data in {@code data}.\n * @param limit The limit (exclusive) of the data in {@code data}.\n */\npublic void appendToNalUnit(byte[] data,int offset,int limit){\n  if (!isFilling) {\n    return;\n  }\n  int readLength=limit - offset;\n  if (nalData.length < nalLength + readLength) {\n    nalData=Arrays.copyOf(nalData,(nalLength + readLength) * 2);\n  }\n  System.arraycopy(data,offset,nalData,nalLength,readLength);\n  nalLength+=readLength;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 64,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 86,
        "startColumnNumber" : 6,
        "endLineNumber" : 86,
        "endColumnNumber" : 69
      },
      "nodeContext" : "nalData=Arrays.copyOf(nalData,(nalLength + readLength) * 2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    },
    "tokenLength" : 8,
    "type" : "byte[]"
  } ],
  "positionList" : [ {
    "charLength" : 52,
    "startLineNumber" : 86,
    "startColumnNumber" : 16,
    "endLineNumber" : 86,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}