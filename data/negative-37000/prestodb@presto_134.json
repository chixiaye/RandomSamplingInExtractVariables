{
  "id" : 134,
  "expression" : "outputType == BIGINT",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-orc/src/main/java/com/facebook/presto/orc/reader/AbstractLongSelectiveStreamReader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "outputType == BIGINT",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 107,
      "startColumnNumber" : 12,
      "endLineNumber" : 107,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 299,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (outputType == BIGINT) {\n  if (positionCount < outputPositionCount) {\n    compactValues(positions,positionCount,includeNulls);\n  }\n  return newLease(new LongArrayBlock(positionCount,Optional.ofNullable(includeNulls ? nulls : null),values));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1993,
        "startLineNumber" : 104,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  checkState(!valuesInUse,\"BlockLease hasn't been closed yet\");\n  if (outputType == BIGINT) {\n    if (positionCount < outputPositionCount) {\n      compactValues(positions,positionCount,includeNulls);\n    }\n    return newLease(new LongArrayBlock(positionCount,Optional.ofNullable(includeNulls ? nulls : null),values));\n  }\n  if (outputType == INTEGER || outputType == DATE) {\n    if (!intValuesPopulated || positionCount < outputPositionCount) {\n      if (positionCount < outputPositionCount) {\n        compactValues(positions,positionCount,includeNulls);\n      }\n      if (intValues == null || intValues.length < positionCount) {\n        intValues=new int[positionCount];\n      }\n      for (int i=0; i < positionCount; i++) {\n        intValues[i]=(int)values[i];\n      }\n      intValuesPopulated=true;\n    }\n    return newLease(new IntArrayBlock(positionCount,Optional.ofNullable(includeNulls ? nulls : null),intValues));\n  }\n  if (outputType == SMALLINT) {\n    if (!shortValuesPopulated || positionCount < outputPositionCount) {\n      if (positionCount < outputPositionCount) {\n        compactValues(positions,positionCount,includeNulls);\n      }\n      if (shortValues == null || shortValues.length < positionCount) {\n        shortValues=new short[positionCount];\n      }\n      for (int i=0; i < positionCount; i++) {\n        shortValues[i]=(short)values[i];\n      }\n      shortValuesPopulated=true;\n    }\n    return newLease(new ShortArrayBlock(positionCount,Optional.ofNullable(includeNulls ? nulls : null),shortValues));\n  }\n  throw new UnsupportedOperationException(\"Unsupported type: \" + outputType);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 217,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2097,
        "startLineNumber" : 103,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected BlockLease buildOutputBlockView(int[] positions,int positionCount,boolean includeNulls){\n  checkState(!valuesInUse,\"BlockLease hasn't been closed yet\");\n  if (outputType == BIGINT) {\n    if (positionCount < outputPositionCount) {\n      compactValues(positions,positionCount,includeNulls);\n    }\n    return newLease(new LongArrayBlock(positionCount,Optional.ofNullable(includeNulls ? nulls : null),values));\n  }\n  if (outputType == INTEGER || outputType == DATE) {\n    if (!intValuesPopulated || positionCount < outputPositionCount) {\n      if (positionCount < outputPositionCount) {\n        compactValues(positions,positionCount,includeNulls);\n      }\n      if (intValues == null || intValues.length < positionCount) {\n        intValues=new int[positionCount];\n      }\n      for (int i=0; i < positionCount; i++) {\n        intValues[i]=(int)values[i];\n      }\n      intValuesPopulated=true;\n    }\n    return newLease(new IntArrayBlock(positionCount,Optional.ofNullable(includeNulls ? nulls : null),intValues));\n  }\n  if (outputType == SMALLINT) {\n    if (!shortValuesPopulated || positionCount < outputPositionCount) {\n      if (positionCount < outputPositionCount) {\n        compactValues(positions,positionCount,includeNulls);\n      }\n      if (shortValues == null || shortValues.length < positionCount) {\n        shortValues=new short[positionCount];\n      }\n      for (int i=0; i < positionCount; i++) {\n        shortValues[i]=(short)values[i];\n      }\n      shortValuesPopulated=true;\n    }\n    return newLease(new ShortArrayBlock(positionCount,Optional.ofNullable(includeNulls ? nulls : null),shortValues));\n  }\n  throw new UnsupportedOperationException(\"Unsupported type: \" + outputType);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 233,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 299,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (outputType == BIGINT) {\n  if (positionCount < outputPositionCount) {\n    compactValues(positions,positionCount,includeNulls);\n  }\n  return newLease(new LongArrayBlock(positionCount,Optional.ofNullable(includeNulls ? nulls : null),values));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 8
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 107,
    "startColumnNumber" : 12,
    "endLineNumber" : 107,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}