{
  "id" : 455,
  "expression" : "true",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/arduino-core/src/processing/app/zeroconf/jmdns/ArduinoDNSTaskStarter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "true",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 15,
      "startColumnNumber" : 160,
      "endLineNumber" : 15,
      "endColumnNumber" : 164
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 15,
        "startColumnNumber" : 65,
        "endLineNumber" : 15,
        "endColumnNumber" : 165
      },
      "nodeContext" : "new DNSTaskStarter.DNSTaskStarterImpl.StarterTimer(\"JmDNS(\" + jmDNSImpl.getName() + \").Timer\",true)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 15,
        "startColumnNumber" : 57,
        "endLineNumber" : 15,
        "endColumnNumber" : 165
      },
      "nodeContext" : "timer=new DNSTaskStarter.DNSTaskStarterImpl.StarterTimer(\"JmDNS(\" + jmDNSImpl.getName() + \").Timer\",true)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 15,
        "endColumnNumber" : 166
      },
      "nodeContext" : "final DNSTaskStarter.DNSTaskStarterImpl.StarterTimer timer=new DNSTaskStarter.DNSTaskStarterImpl.StarterTimer(\"JmDNS(\" + jmDNSImpl.getName() + \").Timer\",true);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1744,
        "startLineNumber" : 13,
        "startColumnNumber" : 69,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final DNSTaskStarter.DNSTaskStarterImpl delegate=new DNSTaskStarter.DNSTaskStarterImpl(jmDNSImpl);\n  final DNSTaskStarter.DNSTaskStarterImpl.StarterTimer timer=new DNSTaskStarter.DNSTaskStarterImpl.StarterTimer(\"JmDNS(\" + jmDNSImpl.getName() + \").Timer\",true);\n  return new DNSTaskStarter(){\n    public void purgeTimer(){\n      delegate.purgeTimer();\n      timer.purge();\n    }\n    public void purgeStateTimer(){\n      delegate.purgeStateTimer();\n    }\n    public void cancelTimer(){\n      delegate.cancelTimer();\n      timer.cancel();\n    }\n    public void cancelStateTimer(){\n      delegate.cancelStateTimer();\n    }\n    public void startProber(){\n      delegate.startProber();\n    }\n    public void startAnnouncer(){\n      delegate.startAnnouncer();\n    }\n    public void startRenewer(){\n      delegate.startRenewer();\n    }\n    public void startCanceler(){\n      delegate.startCanceler();\n    }\n    public void startReaper(){\n      new RecordReaper(jmDNSImpl){\n        @Override public void start(        Timer timer){\n          if (!this.getDns().isCanceling() && !this.getDns().isCanceled()) {\n            timer.schedule(this,0,500);\n          }\n        }\n      }\n.start(timer);\n    }\n    public void startServiceInfoResolver(    ServiceInfoImpl info){\n      delegate.startServiceInfoResolver(info);\n    }\n    public void startTypeResolver(){\n      delegate.startTypeResolver();\n    }\n    public void startServiceResolver(    String type){\n      delegate.startServiceResolver(type);\n    }\n    public void startResponder(    DNSIncoming in,    int port){\n      delegate.startResponder(in,port);\n    }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 226,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1823,
        "startLineNumber" : 12,
        "startColumnNumber" : 2,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public DNSTaskStarter newDNSTaskStarter(final JmDNSImpl jmDNSImpl){\n  final DNSTaskStarter.DNSTaskStarterImpl delegate=new DNSTaskStarter.DNSTaskStarterImpl(jmDNSImpl);\n  final DNSTaskStarter.DNSTaskStarterImpl.StarterTimer timer=new DNSTaskStarter.DNSTaskStarterImpl.StarterTimer(\"JmDNS(\" + jmDNSImpl.getName() + \").Timer\",true);\n  return new DNSTaskStarter(){\n    public void purgeTimer(){\n      delegate.purgeTimer();\n      timer.purge();\n    }\n    public void purgeStateTimer(){\n      delegate.purgeStateTimer();\n    }\n    public void cancelTimer(){\n      delegate.cancelTimer();\n      timer.cancel();\n    }\n    public void cancelStateTimer(){\n      delegate.cancelStateTimer();\n    }\n    public void startProber(){\n      delegate.startProber();\n    }\n    public void startAnnouncer(){\n      delegate.startAnnouncer();\n    }\n    public void startRenewer(){\n      delegate.startRenewer();\n    }\n    public void startCanceler(){\n      delegate.startCanceler();\n    }\n    public void startReaper(){\n      new RecordReaper(jmDNSImpl){\n        @Override public void start(        Timer timer){\n          if (!this.getDns().isCanceling() && !this.getDns().isCanceled()) {\n            timer.schedule(this,0,500);\n          }\n        }\n      }\n.start(timer);\n    }\n    public void startServiceInfoResolver(    ServiceInfoImpl info){\n      delegate.startServiceInfoResolver(info);\n    }\n    public void startTypeResolver(){\n      delegate.startTypeResolver();\n    }\n    public void startServiceResolver(    String type){\n      delegate.startServiceResolver(type);\n    }\n    public void startResponder(    DNSIncoming in,    int port){\n      delegate.startResponder(in,port);\n    }\n  }\n;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 238,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 15,
        "endColumnNumber" : 166
      },
      "nodeContext" : "final DNSTaskStarter.DNSTaskStarterImpl.StarterTimer timer=new DNSTaskStarter.DNSTaskStarterImpl.StarterTimer(\"JmDNS(\" + jmDNSImpl.getName() + \").Timer\",true);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 15,
    "startColumnNumber" : 160,
    "endLineNumber" : 15,
    "endColumnNumber" : 164
  } ],
  "layoutRelationDataList" : [ ]
}