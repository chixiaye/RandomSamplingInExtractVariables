{
  "id" : 278,
  "expression" : "Arrays.asList(args).iterator()",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-runtime/src/main/java/org/apache/flink/runtime/util/bash/FlinkConfigLoader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Arrays.asList(args).iterator()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 48,
      "startColumnNumber" : 38,
      "endLineNumber" : 48,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 48,
        "startColumnNumber" : 31,
        "endLineNumber" : 48,
        "endColumnNumber" : 68
      },
      "nodeContext" : "iter=Arrays.asList(args).iterator()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 69
      },
      "nodeContext" : "final Iterator<String> iter=Arrays.asList(args).iterator();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 649,
        "startLineNumber" : 46,
        "startColumnNumber" : 57,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final List<String> filteredArgs=new ArrayList<>();\n  final Iterator<String> iter=Arrays.asList(args).iterator();\n  while (iter.hasNext()) {\n    String token=iter.next();\n    if (CMD_OPTIONS.hasOption(token)) {\n      filteredArgs.add(token);\n      if (CMD_OPTIONS.getOption(token).hasArg() && iter.hasNext()) {\n        filteredArgs.add(iter.next());\n      }\n    }\n else     if (token.startsWith(\"-D\")) {\n      filteredArgs.add(token);\n    }\n  }\n  return filteredArgs.toArray(new String[0]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 702,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static String[] filterCmdArgs(String[] args){\n  final List<String> filteredArgs=new ArrayList<>();\n  final Iterator<String> iter=Arrays.asList(args).iterator();\n  while (iter.hasNext()) {\n    String token=iter.next();\n    if (CMD_OPTIONS.hasOption(token)) {\n      filteredArgs.add(token);\n      if (CMD_OPTIONS.getOption(token).hasArg() && iter.hasNext()) {\n        filteredArgs.add(iter.next());\n      }\n    }\n else     if (token.startsWith(\"-D\")) {\n      filteredArgs.add(token);\n    }\n  }\n  return filteredArgs.toArray(new String[0]);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 69
      },
      "nodeContext" : "final Iterator<String> iter=Arrays.asList(args).iterator();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "java.util.Iterator<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 48,
    "startColumnNumber" : 38,
    "endLineNumber" : 48,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}