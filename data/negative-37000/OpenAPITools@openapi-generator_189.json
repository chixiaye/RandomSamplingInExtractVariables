{
  "id" : 189,
  "expression" : "new MapSchema()",
  "projectName" : "OpenAPITools@openapi-generator",
  "commitID" : "9e1972bb1d3a4f1e3f47c87613f4050feada0146",
  "filePath" : "/modules/openapi-generator/src/test/java/org/openapitools/codegen/typescript/TypeScriptClientCodegenTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new MapSchema()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 40,
      "startColumnNumber" : 23,
      "endLineNumber" : 40,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 40,
        "startColumnNumber" : 23,
        "endLineNumber" : 40,
        "endColumnNumber" : 108
      },
      "nodeContext" : "new MapSchema().additionalProperties(new Schema().$ref(\"#/components/schemas/Child\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 108
      },
      "nodeContext" : "parentSchema=new MapSchema().additionalProperties(new Schema().$ref(\"#/components/schemas/Child\"))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 109
      },
      "nodeContext" : "parentSchema=new MapSchema().additionalProperties(new Schema().$ref(\"#/components/schemas/Child\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1216,
        "startLineNumber" : 19,
        "startColumnNumber" : 41,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Schema<?> childSchema=new ArraySchema().items(new StringSchema());\n  OpenAPI api=TestUtils.createOpenAPI();\n  api.getComponents().addSchemas(\"Child\",childSchema);\n  TypeScriptClientCodegen codegen=new TypeScriptClientCodegen();\n  codegen.setOpenAPI(api);\n  Schema<?> parentSchema=new ArraySchema().items(new Schema().$ref(\"#/components/schemas/Child\"));\n  ModelUtils.setGenerateAliasAsModel(false);\n  Assert.assertEquals(codegen.getTypeDeclaration(parentSchema),\"Array<Array<string>>\");\n  ModelUtils.setGenerateAliasAsModel(true);\n  Assert.assertEquals(codegen.getTypeDeclaration(parentSchema),\"Array<Child>\");\n  parentSchema=new MapSchema().additionalProperties(new Schema().$ref(\"#/components/schemas/Child\"));\n  ModelUtils.setGenerateAliasAsModel(false);\n  Assert.assertEquals(codegen.getTypeDeclaration(parentSchema),\"{ [key: string]: Array<string>; }\");\n  ModelUtils.setGenerateAliasAsModel(true);\n  Assert.assertEquals(codegen.getTypeDeclaration(parentSchema),\"{ [key: string]: Child; }\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1263,
        "startLineNumber" : 18,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void getTypeDeclarationTest(){\n  Schema<?> childSchema=new ArraySchema().items(new StringSchema());\n  OpenAPI api=TestUtils.createOpenAPI();\n  api.getComponents().addSchemas(\"Child\",childSchema);\n  TypeScriptClientCodegen codegen=new TypeScriptClientCodegen();\n  codegen.setOpenAPI(api);\n  Schema<?> parentSchema=new ArraySchema().items(new Schema().$ref(\"#/components/schemas/Child\"));\n  ModelUtils.setGenerateAliasAsModel(false);\n  Assert.assertEquals(codegen.getTypeDeclaration(parentSchema),\"Array<Array<string>>\");\n  ModelUtils.setGenerateAliasAsModel(true);\n  Assert.assertEquals(codegen.getTypeDeclaration(parentSchema),\"Array<Child>\");\n  parentSchema=new MapSchema().additionalProperties(new Schema().$ref(\"#/components/schemas/Child\"));\n  ModelUtils.setGenerateAliasAsModel(false);\n  Assert.assertEquals(codegen.getTypeDeclaration(parentSchema),\"{ [key: string]: Array<string>; }\");\n  ModelUtils.setGenerateAliasAsModel(true);\n  Assert.assertEquals(codegen.getTypeDeclaration(parentSchema),\"{ [key: string]: Child; }\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 139,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 109
      },
      "nodeContext" : "parentSchema=new MapSchema().additionalProperties(new Schema().$ref(\"#/components/schemas/Child\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "org.openapitools.codegen.typescript.MapSchema"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 40,
    "startColumnNumber" : 23,
    "endLineNumber" : 40,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}