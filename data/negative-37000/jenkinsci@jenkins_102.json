{
  "id" : 102,
  "expression" : "new Random(0)",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/test/java/jenkins/util/TreeStringBuilderTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Random(0)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 41,
      "startColumnNumber" : 19,
      "endLineNumber" : 41,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 41,
        "startColumnNumber" : 15,
        "endLineNumber" : 41,
        "endColumnNumber" : 32
      },
      "nodeContext" : "r=new Random(0)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 33
      },
      "nodeContext" : "Random r=new Random(0);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 958,
        "startLineNumber" : 38,
        "startColumnNumber" : 29,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String[] dict=new String[]{\"aa\",\"b\",\"aba\",\"ba\"};\n  TreeStringBuilder x=new TreeStringBuilder();\n  Random r=new Random(0);\n  List<String> a=new ArrayList<String>();\n  List<TreeString> o=new ArrayList<TreeString>();\n  for (int i=0; i < 1000; i++) {\n    StringBuilder b=new StringBuilder();\n    for (int j=0; j < r.nextInt(10) + 3; j++) {\n      b.append(dict[r.nextInt(4)]);\n    }\n    String s=b.toString();\n    a.add(s);\n    TreeString p=x.intern(s);\n    verify(s,p);\n    o.add(p);\n  }\n  for (int i=0; i < a.size(); i++) {\n    verify(a.get(i),o.get(i));\n  }\n  x.dedup();\n  for (int i=0; i < a.size(); i++) {\n    verify(a.get(i),o.get(i));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 196,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1060,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Pseudo random (but deterministic) test.\n */\n@Test public void testRandom(){\n  String[] dict=new String[]{\"aa\",\"b\",\"aba\",\"ba\"};\n  TreeStringBuilder x=new TreeStringBuilder();\n  Random r=new Random(0);\n  List<String> a=new ArrayList<String>();\n  List<TreeString> o=new ArrayList<TreeString>();\n  for (int i=0; i < 1000; i++) {\n    StringBuilder b=new StringBuilder();\n    for (int j=0; j < r.nextInt(10) + 3; j++) {\n      b.append(dict[r.nextInt(4)]);\n    }\n    String s=b.toString();\n    a.add(s);\n    TreeString p=x.intern(s);\n    verify(s,p);\n    o.add(p);\n  }\n  for (int i=0; i < a.size(); i++) {\n    verify(a.get(i),o.get(i));\n  }\n  x.dedup();\n  for (int i=0; i < a.size(); i++) {\n    verify(a.get(i),o.get(i));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 203,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 33
      },
      "nodeContext" : "Random r=new Random(0);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.util.Random"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 41,
    "startColumnNumber" : 19,
    "endLineNumber" : 41,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}