{
  "id" : 109,
  "expression" : "MediaType",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-devtools/src/main/java/org/springframework/boot/devtools/tunnel/payload/HttpTunnelPayload.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "MediaType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 86,
      "startColumnNumber" : 25,
      "endLineNumber" : 86,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 86,
        "startColumnNumber" : 25,
        "endLineNumber" : 86,
        "endColumnNumber" : 59
      },
      "nodeContext" : "MediaType.APPLICATION_OCTET_STREAM",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 86,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 60
      },
      "nodeContext" : "headers.setContentType(MediaType.APPLICATION_OCTET_STREAM)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 86,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 61
      },
      "nodeContext" : "headers.setContentType(MediaType.APPLICATION_OCTET_STREAM);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 427,
        "startLineNumber" : 81,
        "startColumnNumber" : 68,
        "endLineNumber" : 92,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Assert.notNull(message,\"Message must not be null\");\n  HttpHeaders headers=message.getHeaders();\n  headers.setContentLength(this.data.remaining());\n  headers.add(SEQ_HEADER,Long.toString(getSequence()));\n  headers.setContentType(MediaType.APPLICATION_OCTET_STREAM);\n  WritableByteChannel body=Channels.newChannel(message.getBody());\n  while (this.data.hasRemaining()) {\n    body.write(this.data);\n  }\n  body.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 671,
        "startLineNumber" : 76,
        "startColumnNumber" : 1,
        "endLineNumber" : 92,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Assign this payload to the given  {@link HttpOutputMessage}.\n * @param message the message to assign this payload to\n * @throws IOException in case of I/O errors\n */\npublic void assignTo(HttpOutputMessage message) throws IOException {\n  Assert.notNull(message,\"Message must not be null\");\n  HttpHeaders headers=message.getHeaders();\n  headers.setContentLength(this.data.remaining());\n  headers.add(SEQ_HEADER,Long.toString(getSequence()));\n  headers.setContentType(MediaType.APPLICATION_OCTET_STREAM);\n  WritableByteChannel body=Channels.newChannel(message.getBody());\n  while (this.data.hasRemaining()) {\n    body.write(this.data);\n  }\n  body.close();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 81,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 86,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 61
      },
      "nodeContext" : "headers.setContentType(MediaType.APPLICATION_OCTET_STREAM);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 86,
    "startColumnNumber" : 25,
    "endLineNumber" : 86,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}