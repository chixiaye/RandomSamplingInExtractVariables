{
  "id" : 24,
  "expression" : "USES_SUPPORT_FRAGMENTS",
  "projectName" : "ReactiveX@RxAndroid",
  "commitID" : "6b7cfe2a0acb8903ea10014d2f66386954a37813",
  "filePath" : "/src/main/java/rx/android/observables/AndroidObservable.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "USES_SUPPORT_FRAGMENTS",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 110,
      "startColumnNumber" : 12,
      "endLineNumber" : 110,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 110,
        "startColumnNumber" : 12,
        "endLineNumber" : 110,
        "endColumnNumber" : 89
      },
      "nodeContext" : "USES_SUPPORT_FRAGMENTS && fragment instanceof android.support.v4.app.Fragment",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 689,
        "startLineNumber" : 110,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (USES_SUPPORT_FRAGMENTS && fragment instanceof android.support.v4.app.Fragment) {\n  android.support.v4.app.Fragment f=(android.support.v4.app.Fragment)fragment;\n  return o.lift(new OperatorConditionalBinding<T,android.support.v4.app.Fragment>(f,FRAGMENTV4_VALIDATOR));\n}\n else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB && fragment instanceof Fragment) {\n  Fragment f=(Fragment)fragment;\n  return o.lift(new OperatorConditionalBinding<T,Fragment>(f,FRAGMENT_VALIDATOR));\n}\n else {\n  throw new IllegalArgumentException(\"Target fragment is neither a native nor support library Fragment\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 110,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 806,
        "startLineNumber" : 107,
        "startColumnNumber" : 88,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assertions.assertUiThread();\n  final Observable<T> o=source.observeOn(mainThread());\n  if (USES_SUPPORT_FRAGMENTS && fragment instanceof android.support.v4.app.Fragment) {\n    android.support.v4.app.Fragment f=(android.support.v4.app.Fragment)fragment;\n    return o.lift(new OperatorConditionalBinding<T,android.support.v4.app.Fragment>(f,FRAGMENTV4_VALIDATOR));\n  }\n else   if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB && fragment instanceof Fragment) {\n    Fragment f=(Fragment)fragment;\n    return o.lift(new OperatorConditionalBinding<T,Fragment>(f,FRAGMENT_VALIDATOR));\n  }\n else {\n    throw new IllegalArgumentException(\"Target fragment is neither a native nor support library Fragment\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1653,
        "startLineNumber" : 93,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Binds the given source sequence to a fragment (native or support-v4). <p/> This helper will schedule the given sequence to be observed on the main UI thread and ensure that no notifications will be forwarded to the fragment in case it gets detached from its activity or the activity is scheduled to finish. <p/> You should unsubscribe from the returned Observable in onDestroy for normal fragments, or in onDestroyView for retained fragments, in order to not leak any references to the host activity or the fragment. Refer to the samples project for actual examples.\n * @param fragment the fragment to bind the source sequence to\n * @param source   the source sequence\n */\npublic static <T>Observable<T> bindFragment(Object fragment,Observable<T> source){\n  Assertions.assertUiThread();\n  final Observable<T> o=source.observeOn(mainThread());\n  if (USES_SUPPORT_FRAGMENTS && fragment instanceof android.support.v4.app.Fragment) {\n    android.support.v4.app.Fragment f=(android.support.v4.app.Fragment)fragment;\n    return o.lift(new OperatorConditionalBinding<T,android.support.v4.app.Fragment>(f,FRAGMENTV4_VALIDATOR));\n  }\n else   if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB && fragment instanceof Fragment) {\n    Fragment f=(Fragment)fragment;\n    return o.lift(new OperatorConditionalBinding<T,Fragment>(f,FRAGMENT_VALIDATOR));\n  }\n else {\n    throw new IllegalArgumentException(\"Target fragment is neither a native nor support library Fragment\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 110,
        "startColumnNumber" : 12,
        "endLineNumber" : 110,
        "endColumnNumber" : 89
      },
      "nodeContext" : "USES_SUPPORT_FRAGMENTS && fragment instanceof android.support.v4.app.Fragment",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 8
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 110,
    "startColumnNumber" : 12,
    "endLineNumber" : 110,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}