{
  "id" : 13,
  "expression" : "\"fallback\"",
  "projectName" : "winterbe@java8-tutorial",
  "commitID" : "89a257129873974e4beb658115e854649b9204b2",
  "filePath" : "/src/com/winterbe/java8/samples/stream/Optional1.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"fallback\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 15,
      "startColumnNumber" : 24,
      "endLineNumber" : 15,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 15,
        "startColumnNumber" : 8,
        "endLineNumber" : 15,
        "endColumnNumber" : 35
      },
      "nodeContext" : "optional.orElse(\"fallback\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 15,
        "startColumnNumber" : 8,
        "endLineNumber" : 15,
        "endColumnNumber" : 36
      },
      "nodeContext" : "optional.orElse(\"fallback\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 290,
        "startLineNumber" : 10,
        "startColumnNumber" : 43,
        "endLineNumber" : 18,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Optional<String> optional=Optional.of(\"bam\");\n  optional.isPresent();\n  optional.get();\n  optional.orElse(\"fallback\");\n  optional.ifPresent((s) -> System.out.println(s.charAt(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 329,
        "startLineNumber" : 10,
        "startColumnNumber" : 4,
        "endLineNumber" : 18,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args){\n  Optional<String> optional=Optional.of(\"bam\");\n  optional.isPresent();\n  optional.get();\n  optional.orElse(\"fallback\");\n  optional.ifPresent((s) -> System.out.println(s.charAt(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 53,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 15,
        "startColumnNumber" : 8,
        "endLineNumber" : 15,
        "endColumnNumber" : 36
      },
      "nodeContext" : "optional.orElse(\"fallback\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 15,
    "startColumnNumber" : 24,
    "endLineNumber" : 15,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}