{
  "id" : 95,
  "expression" : "expected[i]",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/memory-types/simple/src/test/java/com/facebook/imagepipeline/memory/MemoryPooledByteBufferFactoryTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "expected[i]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 163,
      "startColumnNumber" : 26,
      "endLineNumber" : 163,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 163,
        "startColumnNumber" : 6,
        "endLineNumber" : 163,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Assert.assertEquals(expected[i],actual[i],i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 163,
        "startColumnNumber" : 6,
        "endLineNumber" : 163,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Assert.assertEquals(expected[i],actual[i],i);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 162,
        "startColumnNumber" : 37,
        "endLineNumber" : 164,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertEquals(expected[i],actual[i],i);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 162,
        "startColumnNumber" : 4,
        "endLineNumber" : 164,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < length; i++) {\n  Assert.assertEquals(expected[i],actual[i],i);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 159,
        "startColumnNumber" : 84,
        "endLineNumber" : 165,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Assert.assertTrue(expected.length >= length);\n  Assert.assertTrue(actual.length >= length);\n  for (int i=0; i < length; i++) {\n    Assert.assertEquals(expected[i],actual[i],i);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 284,
        "startLineNumber" : 159,
        "startColumnNumber" : 2,
        "endLineNumber" : 165,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void assertArrayEquals(byte[] expected,byte[] actual,int length){\n  Assert.assertTrue(expected.length >= length);\n  Assert.assertTrue(actual.length >= length);\n  for (int i=0; i < length; i++) {\n    Assert.assertEquals(expected[i],actual[i],i);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 60,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 163,
        "startColumnNumber" : 6,
        "endLineNumber" : 163,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Assert.assertEquals(expected[i],actual[i],i);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "byte"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 163,
    "startColumnNumber" : 26,
    "endLineNumber" : 163,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}