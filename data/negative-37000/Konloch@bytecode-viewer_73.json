{
  "id" : 73,
  "expression" : "\".ear\"",
  "projectName" : "Konloch@bytecode-viewer",
  "commitID" : "9ab8ec7f8c061fb1d9b1db3e901034d162a211ff",
  "filePath" : "/src/main/java/the/bytecode/club/bytecodeviewer/resources/importing/impl/DirectoryResourceImporter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\".ear\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 63,
      "startColumnNumber" : 114,
      "endLineNumber" : 63,
      "endColumnNumber" : 120
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 63,
        "startColumnNumber" : 96,
        "endLineNumber" : 63,
        "endColumnNumber" : 121
      },
      "nodeContext" : "fileName.endsWith(\".ear\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 63,
        "startColumnNumber" : 9,
        "endLineNumber" : 63,
        "endColumnNumber" : 121
      },
      "nodeContext" : "fileName.endsWith(\".jar\") || fileName.endsWith(\".zip\") || fileName.endsWith(\".war\")|| fileName.endsWith(\".ear\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 17,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 861,
        "startLineNumber" : 63,
        "startColumnNumber" : 5,
        "endLineNumber" : 88,
        "endColumnNumber" : 6
      },
      "nodeContext" : "if (fileName.endsWith(\".jar\") || fileName.endsWith(\".zip\") || fileName.endsWith(\".war\")|| fileName.endsWith(\".ear\")) {\n  Import.ZIP.getImporter().open(child);\n}\n else if (fileName.endsWith(\".apk\")) {\n  Import.APK.getImporter().open(child);\n}\n else if (fileName.endsWith(\".dex\")) {\n  Import.DEX.getImporter().open(child);\n}\n else if (fileName.endsWith(\".class\")) {\n  byte[] bytes=Files.readAllBytes(Paths.get(child.getAbsolutePath()));\n  if (MiscUtils.getFileHeader(bytes).equalsIgnoreCase(\"cafebabe\")) {\n    final ClassNode cn=JarUtils.getNode(bytes);\n    allDirectoryClasses.put(trimmedPath,cn);\n  }\n}\n else {\n  allDirectoryFiles.put(trimmedPath,Files.readAllBytes(Paths.get(child.getAbsolutePath())));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 119,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1140,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!child.isFile())   continue;\n  final String trimmedPath=child.getAbsolutePath().substring(dir.length() + 1).replaceAll(\"\\\\\\\\\",\"\\\\/\");\n  final String fileName=child.getName();\n  if (fileName.endsWith(\".jar\") || fileName.endsWith(\".zip\") || fileName.endsWith(\".war\")|| fileName.endsWith(\".ear\")) {\n    Import.ZIP.getImporter().open(child);\n  }\n else   if (fileName.endsWith(\".apk\")) {\n    Import.APK.getImporter().open(child);\n  }\n else   if (fileName.endsWith(\".dex\")) {\n    Import.DEX.getImporter().open(child);\n  }\n else   if (fileName.endsWith(\".class\")) {\n    byte[] bytes=Files.readAllBytes(Paths.get(child.getAbsolutePath()));\n    if (MiscUtils.getFileHeader(bytes).equalsIgnoreCase(\"cafebabe\")) {\n      final ClassNode cn=JarUtils.getNode(bytes);\n      allDirectoryClasses.put(trimmedPath,cn);\n    }\n  }\n else {\n    allDirectoryFiles.put(trimmedPath,Files.readAllBytes(Paths.get(child.getAbsolutePath())));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 155,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1174,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (File child : totalFiles) {\n  if (!child.isFile())   continue;\n  final String trimmedPath=child.getAbsolutePath().substring(dir.length() + 1).replaceAll(\"\\\\\\\\\",\"\\\\/\");\n  final String fileName=child.getName();\n  if (fileName.endsWith(\".jar\") || fileName.endsWith(\".zip\") || fileName.endsWith(\".war\")|| fileName.endsWith(\".ear\")) {\n    Import.ZIP.getImporter().open(child);\n  }\n else   if (fileName.endsWith(\".apk\")) {\n    Import.APK.getImporter().open(child);\n  }\n else   if (fileName.endsWith(\".dex\")) {\n    Import.DEX.getImporter().open(child);\n  }\n else   if (fileName.endsWith(\".class\")) {\n    byte[] bytes=Files.readAllBytes(Paths.get(child.getAbsolutePath()));\n    if (MiscUtils.getFileHeader(bytes).equalsIgnoreCase(\"cafebabe\")) {\n      final ClassNode cn=JarUtils.getNode(bytes);\n      allDirectoryClasses.put(trimmedPath,cn);\n    }\n  }\n else {\n    allDirectoryFiles.put(trimmedPath,Files.readAllBytes(Paths.get(child.getAbsolutePath())));\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 161,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1211,
        "startLineNumber" : 52,
        "startColumnNumber" : 3,
        "endLineNumber" : 92,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  for (  File child : totalFiles) {\n    if (!child.isFile())     continue;\n    final String trimmedPath=child.getAbsolutePath().substring(dir.length() + 1).replaceAll(\"\\\\\\\\\",\"\\\\/\");\n    final String fileName=child.getName();\n    if (fileName.endsWith(\".jar\") || fileName.endsWith(\".zip\") || fileName.endsWith(\".war\")|| fileName.endsWith(\".ear\")) {\n      Import.ZIP.getImporter().open(child);\n    }\n else     if (fileName.endsWith(\".apk\")) {\n      Import.APK.getImporter().open(child);\n    }\n else     if (fileName.endsWith(\".dex\")) {\n      Import.DEX.getImporter().open(child);\n    }\n else     if (fileName.endsWith(\".class\")) {\n      byte[] bytes=Files.readAllBytes(Paths.get(child.getAbsolutePath()));\n      if (MiscUtils.getFileHeader(bytes).equalsIgnoreCase(\"cafebabe\")) {\n        final ClassNode cn=JarUtils.getNode(bytes);\n        allDirectoryClasses.put(trimmedPath,cn);\n      }\n    }\n else {\n      allDirectoryFiles.put(trimmedPath,Files.readAllBytes(Paths.get(child.getAbsolutePath())));\n    }\n  }\n  finished=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1226,
        "startLineNumber" : 51,
        "startColumnNumber" : 3,
        "endLineNumber" : 92,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (!added) {\n  for (  File child : totalFiles) {\n    if (!child.isFile())     continue;\n    final String trimmedPath=child.getAbsolutePath().substring(dir.length() + 1).replaceAll(\"\\\\\\\\\",\"\\\\/\");\n    final String fileName=child.getName();\n    if (fileName.endsWith(\".jar\") || fileName.endsWith(\".zip\") || fileName.endsWith(\".war\")|| fileName.endsWith(\".ear\")) {\n      Import.ZIP.getImporter().open(child);\n    }\n else     if (fileName.endsWith(\".apk\")) {\n      Import.APK.getImporter().open(child);\n    }\n else     if (fileName.endsWith(\".dex\")) {\n      Import.DEX.getImporter().open(child);\n    }\n else     if (fileName.endsWith(\".class\")) {\n      byte[] bytes=Files.readAllBytes(Paths.get(child.getAbsolutePath()));\n      if (MiscUtils.getFileHeader(bytes).equalsIgnoreCase(\"cafebabe\")) {\n        final ClassNode cn=JarUtils.getNode(bytes);\n        allDirectoryClasses.put(trimmedPath,cn);\n      }\n    }\n else {\n      allDirectoryFiles.put(trimmedPath,Files.readAllBytes(Paths.get(child.getAbsolutePath())));\n    }\n  }\n  finished=true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 169,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1568,
        "startLineNumber" : 37,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  boolean added=false;\n  for (int i=0; i < totalFiles.size(); i++) {\n    File child=totalFiles.get(i);\n    if (child.listFiles() != null)     for (    File rocket : Objects.requireNonNull(child.listFiles()))     if (!totalFiles.contains(rocket)) {\n      totalFiles.add(rocket);\n      added=true;\n    }\n  }\n  if (!added) {\n    for (    File child : totalFiles) {\n      if (!child.isFile())       continue;\n      final String trimmedPath=child.getAbsolutePath().substring(dir.length() + 1).replaceAll(\"\\\\\\\\\",\"\\\\/\");\n      final String fileName=child.getName();\n      if (fileName.endsWith(\".jar\") || fileName.endsWith(\".zip\") || fileName.endsWith(\".war\")|| fileName.endsWith(\".ear\")) {\n        Import.ZIP.getImporter().open(child);\n      }\n else       if (fileName.endsWith(\".apk\")) {\n        Import.APK.getImporter().open(child);\n      }\n else       if (fileName.endsWith(\".dex\")) {\n        Import.DEX.getImporter().open(child);\n      }\n else       if (fileName.endsWith(\".class\")) {\n        byte[] bytes=Files.readAllBytes(Paths.get(child.getAbsolutePath()));\n        if (MiscUtils.getFileHeader(bytes).equalsIgnoreCase(\"cafebabe\")) {\n          final ClassNode cn=JarUtils.getNode(bytes);\n          allDirectoryClasses.put(trimmedPath,cn);\n        }\n      }\n else {\n        allDirectoryFiles.put(trimmedPath,Files.readAllBytes(Paths.get(child.getAbsolutePath())));\n      }\n    }\n    finished=true;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 231,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1588,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "while (!finished) {\n  boolean added=false;\n  for (int i=0; i < totalFiles.size(); i++) {\n    File child=totalFiles.get(i);\n    if (child.listFiles() != null)     for (    File rocket : Objects.requireNonNull(child.listFiles()))     if (!totalFiles.contains(rocket)) {\n      totalFiles.add(rocket);\n      added=true;\n    }\n  }\n  if (!added) {\n    for (    File child : totalFiles) {\n      if (!child.isFile())       continue;\n      final String trimmedPath=child.getAbsolutePath().substring(dir.length() + 1).replaceAll(\"\\\\\\\\\",\"\\\\/\");\n      final String fileName=child.getName();\n      if (fileName.endsWith(\".jar\") || fileName.endsWith(\".zip\") || fileName.endsWith(\".war\")|| fileName.endsWith(\".ear\")) {\n        Import.ZIP.getImporter().open(child);\n      }\n else       if (fileName.endsWith(\".apk\")) {\n        Import.APK.getImporter().open(child);\n      }\n else       if (fileName.endsWith(\".dex\")) {\n        Import.DEX.getImporter().open(child);\n      }\n else       if (fileName.endsWith(\".class\")) {\n        byte[] bytes=Files.readAllBytes(Paths.get(child.getAbsolutePath()));\n        if (MiscUtils.getFileHeader(bytes).equalsIgnoreCase(\"cafebabe\")) {\n          final ClassNode cn=JarUtils.getNode(bytes);\n          allDirectoryClasses.put(trimmedPath,cn);\n        }\n      }\n else {\n        allDirectoryFiles.put(trimmedPath,Files.readAllBytes(Paths.get(child.getAbsolutePath())));\n      }\n    }\n    finished=true;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 234,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2080,
        "startLineNumber" : 26,
        "startColumnNumber" : 1,
        "endLineNumber" : 99,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  FileContainer container=new FileContainer(file);\n  HashMap<String,byte[]> allDirectoryFiles=new HashMap<>();\n  HashMap<String,ClassNode> allDirectoryClasses=new HashMap<>();\n  boolean finished=false;\n  ArrayList<File> totalFiles=new ArrayList<>();\n  totalFiles.add(file);\n  String dir=file.getAbsolutePath();\n  while (!finished) {\n    boolean added=false;\n    for (int i=0; i < totalFiles.size(); i++) {\n      File child=totalFiles.get(i);\n      if (child.listFiles() != null)       for (      File rocket : Objects.requireNonNull(child.listFiles()))       if (!totalFiles.contains(rocket)) {\n        totalFiles.add(rocket);\n        added=true;\n      }\n    }\n    if (!added) {\n      for (      File child : totalFiles) {\n        if (!child.isFile())         continue;\n        final String trimmedPath=child.getAbsolutePath().substring(dir.length() + 1).replaceAll(\"\\\\\\\\\",\"\\\\/\");\n        final String fileName=child.getName();\n        if (fileName.endsWith(\".jar\") || fileName.endsWith(\".zip\") || fileName.endsWith(\".war\")|| fileName.endsWith(\".ear\")) {\n          Import.ZIP.getImporter().open(child);\n        }\n else         if (fileName.endsWith(\".apk\")) {\n          Import.APK.getImporter().open(child);\n        }\n else         if (fileName.endsWith(\".dex\")) {\n          Import.DEX.getImporter().open(child);\n        }\n else         if (fileName.endsWith(\".class\")) {\n          byte[] bytes=Files.readAllBytes(Paths.get(child.getAbsolutePath()));\n          if (MiscUtils.getFileHeader(bytes).equalsIgnoreCase(\"cafebabe\")) {\n            final ClassNode cn=JarUtils.getNode(bytes);\n            allDirectoryClasses.put(trimmedPath,cn);\n          }\n        }\n else {\n          allDirectoryFiles.put(trimmedPath,Files.readAllBytes(Paths.get(child.getAbsolutePath())));\n        }\n      }\n      finished=true;\n    }\n  }\n  container.classes.addAll(allDirectoryClasses.values());\n  container.files=allDirectoryFiles;\n  BytecodeViewer.files.add(container);\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 327,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2140,
        "startLineNumber" : 24,
        "startColumnNumber" : 1,
        "endLineNumber" : 99,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public boolean open(File file) throws Exception {\n  FileContainer container=new FileContainer(file);\n  HashMap<String,byte[]> allDirectoryFiles=new HashMap<>();\n  HashMap<String,ClassNode> allDirectoryClasses=new HashMap<>();\n  boolean finished=false;\n  ArrayList<File> totalFiles=new ArrayList<>();\n  totalFiles.add(file);\n  String dir=file.getAbsolutePath();\n  while (!finished) {\n    boolean added=false;\n    for (int i=0; i < totalFiles.size(); i++) {\n      File child=totalFiles.get(i);\n      if (child.listFiles() != null)       for (      File rocket : Objects.requireNonNull(child.listFiles()))       if (!totalFiles.contains(rocket)) {\n        totalFiles.add(rocket);\n        added=true;\n      }\n    }\n    if (!added) {\n      for (      File child : totalFiles) {\n        if (!child.isFile())         continue;\n        final String trimmedPath=child.getAbsolutePath().substring(dir.length() + 1).replaceAll(\"\\\\\\\\\",\"\\\\/\");\n        final String fileName=child.getName();\n        if (fileName.endsWith(\".jar\") || fileName.endsWith(\".zip\") || fileName.endsWith(\".war\")|| fileName.endsWith(\".ear\")) {\n          Import.ZIP.getImporter().open(child);\n        }\n else         if (fileName.endsWith(\".apk\")) {\n          Import.APK.getImporter().open(child);\n        }\n else         if (fileName.endsWith(\".dex\")) {\n          Import.DEX.getImporter().open(child);\n        }\n else         if (fileName.endsWith(\".class\")) {\n          byte[] bytes=Files.readAllBytes(Paths.get(child.getAbsolutePath()));\n          if (MiscUtils.getFileHeader(bytes).equalsIgnoreCase(\"cafebabe\")) {\n            final ClassNode cn=JarUtils.getNode(bytes);\n            allDirectoryClasses.put(trimmedPath,cn);\n          }\n        }\n else {\n          allDirectoryFiles.put(trimmedPath,Files.readAllBytes(Paths.get(child.getAbsolutePath())));\n        }\n      }\n      finished=true;\n    }\n  }\n  container.classes.addAll(allDirectoryClasses.values());\n  container.files=allDirectoryFiles;\n  BytecodeViewer.files.add(container);\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 339,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 63,
        "startColumnNumber" : 9,
        "endLineNumber" : 63,
        "endColumnNumber" : 121
      },
      "nodeContext" : "fileName.endsWith(\".jar\") || fileName.endsWith(\".zip\") || fileName.endsWith(\".war\")|| fileName.endsWith(\".ear\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 17,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 63,
    "startColumnNumber" : 114,
    "endLineNumber" : 63,
    "endColumnNumber" : 120
  } ],
  "layoutRelationDataList" : [ ]
}