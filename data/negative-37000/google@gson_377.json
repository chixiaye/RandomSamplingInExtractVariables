{
  "id" : 377,
  "expression" : "TypeAdapters.JSON_ELEMENT",
  "projectName" : "google@gson",
  "commitID" : "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
  "filePath" : "/gson/src/main/java/com/google/gson/internal/Streams.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TypeAdapters.JSON_ELEMENT",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 44,
      "startColumnNumber" : 13,
      "endLineNumber" : 44,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 44,
        "startColumnNumber" : 13,
        "endLineNumber" : 44,
        "endColumnNumber" : 51
      },
      "nodeContext" : "TypeAdapters.JSON_ELEMENT.read(reader)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 44,
        "startColumnNumber" : 6,
        "endLineNumber" : 44,
        "endColumnNumber" : 52
      },
      "nodeContext" : "return TypeAdapters.JSON_ELEMENT.read(reader);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  reader.peek();\n  isEmpty=false;\n  return TypeAdapters.JSON_ELEMENT.read(reader);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 683,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  reader.peek();\n  isEmpty=false;\n  return TypeAdapters.JSON_ELEMENT.read(reader);\n}\n catch (EOFException e) {\n  if (isEmpty) {\n    return JsonNull.INSTANCE;\n  }\n  throw new JsonSyntaxException(e);\n}\ncatch (MalformedJsonException e) {\n  throw new JsonSyntaxException(e);\n}\ncatch (IOException e) {\n  throw new JsonIOException(e);\n}\ncatch (NumberFormatException e) {\n  throw new JsonSyntaxException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 68,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 721,
        "startLineNumber" : 39,
        "startColumnNumber" : 79,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  boolean isEmpty=true;\n  try {\n    reader.peek();\n    isEmpty=false;\n    return TypeAdapters.JSON_ELEMENT.read(reader);\n  }\n catch (  EOFException e) {\n    if (isEmpty) {\n      return JsonNull.INSTANCE;\n    }\n    throw new JsonSyntaxException(e);\n  }\ncatch (  MalformedJsonException e) {\n    throw new JsonSyntaxException(e);\n  }\ncatch (  IOException e) {\n    throw new JsonIOException(e);\n  }\ncatch (  NumberFormatException e) {\n    throw new JsonSyntaxException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 888,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Takes a reader in any state and returns the next value as a JsonElement.\n */\npublic static JsonElement parse(JsonReader reader) throws JsonParseException {\n  boolean isEmpty=true;\n  try {\n    reader.peek();\n    isEmpty=false;\n    return TypeAdapters.JSON_ELEMENT.read(reader);\n  }\n catch (  EOFException e) {\n    if (isEmpty) {\n      return JsonNull.INSTANCE;\n    }\n    throw new JsonSyntaxException(e);\n  }\ncatch (  MalformedJsonException e) {\n    throw new JsonSyntaxException(e);\n  }\ncatch (  IOException e) {\n    throw new JsonIOException(e);\n  }\ncatch (  NumberFormatException e) {\n    throw new JsonSyntaxException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 87,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 44,
        "startColumnNumber" : 6,
        "endLineNumber" : 44,
        "endColumnNumber" : 52
      },
      "nodeContext" : "return TypeAdapters.JSON_ELEMENT.read(reader);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "com.google.gson.TypeAdapter<com.google.gson.JsonElement>"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 44,
    "startColumnNumber" : 13,
    "endLineNumber" : 44,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}