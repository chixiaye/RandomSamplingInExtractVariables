{
  "id" : 261,
  "expression" : "json.getValue(\"pipelining\")",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/generated/io/vertx/core/http/HttpClientOptionsConverter.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "json.getValue(\"pipelining\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 65,
      "startColumnNumber" : 8,
      "endLineNumber" : 65,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 54
      },
      "nodeContext" : "json.getValue(\"pipelining\") instanceof Boolean",
      "nodeType" : "InstanceofExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (json.getValue(\"pipelining\") instanceof Boolean) {\n  obj.setPipelining((Boolean)json.getValue(\"pipelining\"));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2279,
        "startLineNumber" : 29,
        "startColumnNumber" : 70,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (json.getValue(\"alpnVersions\") instanceof JsonArray) {\n    java.util.ArrayList<io.vertx.core.http.HttpVersion> list=new java.util.ArrayList<>();\n    json.getJsonArray(\"alpnVersions\").forEach(item -> {\n      if (item instanceof String)       list.add(io.vertx.core.http.HttpVersion.valueOf((String)item));\n    }\n);\n    obj.setAlpnVersions(list);\n  }\n  if (json.getValue(\"defaultHost\") instanceof String) {\n    obj.setDefaultHost((String)json.getValue(\"defaultHost\"));\n  }\n  if (json.getValue(\"defaultPort\") instanceof Number) {\n    obj.setDefaultPort(((Number)json.getValue(\"defaultPort\")).intValue());\n  }\n  if (json.getValue(\"h2cUpgrade\") instanceof Boolean) {\n    obj.setH2cUpgrade((Boolean)json.getValue(\"h2cUpgrade\"));\n  }\n  if (json.getValue(\"initialSettings\") instanceof JsonObject) {\n    obj.setInitialSettings(new io.vertx.core.http.Http2Settings((JsonObject)json.getValue(\"initialSettings\")));\n  }\n  if (json.getValue(\"keepAlive\") instanceof Boolean) {\n    obj.setKeepAlive((Boolean)json.getValue(\"keepAlive\"));\n  }\n  if (json.getValue(\"maxChunkSize\") instanceof Number) {\n    obj.setMaxChunkSize(((Number)json.getValue(\"maxChunkSize\")).intValue());\n  }\n  if (json.getValue(\"maxPoolSize\") instanceof Number) {\n    obj.setMaxPoolSize(((Number)json.getValue(\"maxPoolSize\")).intValue());\n  }\n  if (json.getValue(\"maxWaitQueueSize\") instanceof Number) {\n    obj.setMaxWaitQueueSize(((Number)json.getValue(\"maxWaitQueueSize\")).intValue());\n  }\n  if (json.getValue(\"maxWebsocketFrameSize\") instanceof Number) {\n    obj.setMaxWebsocketFrameSize(((Number)json.getValue(\"maxWebsocketFrameSize\")).intValue());\n  }\n  if (json.getValue(\"pipelining\") instanceof Boolean) {\n    obj.setPipelining((Boolean)json.getValue(\"pipelining\"));\n  }\n  if (json.getValue(\"protocolVersion\") instanceof String) {\n    obj.setProtocolVersion(io.vertx.core.http.HttpVersion.valueOf((String)json.getValue(\"protocolVersion\")));\n  }\n  if (json.getValue(\"tryUseCompression\") instanceof Boolean) {\n    obj.setTryUseCompression((Boolean)json.getValue(\"tryUseCompression\"));\n  }\n  if (json.getValue(\"verifyHost\") instanceof Boolean) {\n    obj.setVerifyHost((Boolean)json.getValue(\"verifyHost\"));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 375,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2347,
        "startLineNumber" : 29,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static void fromJson(JsonObject json,HttpClientOptions obj){\n  if (json.getValue(\"alpnVersions\") instanceof JsonArray) {\n    java.util.ArrayList<io.vertx.core.http.HttpVersion> list=new java.util.ArrayList<>();\n    json.getJsonArray(\"alpnVersions\").forEach(item -> {\n      if (item instanceof String)       list.add(io.vertx.core.http.HttpVersion.valueOf((String)item));\n    }\n);\n    obj.setAlpnVersions(list);\n  }\n  if (json.getValue(\"defaultHost\") instanceof String) {\n    obj.setDefaultHost((String)json.getValue(\"defaultHost\"));\n  }\n  if (json.getValue(\"defaultPort\") instanceof Number) {\n    obj.setDefaultPort(((Number)json.getValue(\"defaultPort\")).intValue());\n  }\n  if (json.getValue(\"h2cUpgrade\") instanceof Boolean) {\n    obj.setH2cUpgrade((Boolean)json.getValue(\"h2cUpgrade\"));\n  }\n  if (json.getValue(\"initialSettings\") instanceof JsonObject) {\n    obj.setInitialSettings(new io.vertx.core.http.Http2Settings((JsonObject)json.getValue(\"initialSettings\")));\n  }\n  if (json.getValue(\"keepAlive\") instanceof Boolean) {\n    obj.setKeepAlive((Boolean)json.getValue(\"keepAlive\"));\n  }\n  if (json.getValue(\"maxChunkSize\") instanceof Number) {\n    obj.setMaxChunkSize(((Number)json.getValue(\"maxChunkSize\")).intValue());\n  }\n  if (json.getValue(\"maxPoolSize\") instanceof Number) {\n    obj.setMaxPoolSize(((Number)json.getValue(\"maxPoolSize\")).intValue());\n  }\n  if (json.getValue(\"maxWaitQueueSize\") instanceof Number) {\n    obj.setMaxWaitQueueSize(((Number)json.getValue(\"maxWaitQueueSize\")).intValue());\n  }\n  if (json.getValue(\"maxWebsocketFrameSize\") instanceof Number) {\n    obj.setMaxWebsocketFrameSize(((Number)json.getValue(\"maxWebsocketFrameSize\")).intValue());\n  }\n  if (json.getValue(\"pipelining\") instanceof Boolean) {\n    obj.setPipelining((Boolean)json.getValue(\"pipelining\"));\n  }\n  if (json.getValue(\"protocolVersion\") instanceof String) {\n    obj.setProtocolVersion(io.vertx.core.http.HttpVersion.valueOf((String)json.getValue(\"protocolVersion\")));\n  }\n  if (json.getValue(\"tryUseCompression\") instanceof Boolean) {\n    obj.setTryUseCompression((Boolean)json.getValue(\"tryUseCompression\"));\n  }\n  if (json.getValue(\"verifyHost\") instanceof Boolean) {\n    obj.setVerifyHost((Boolean)json.getValue(\"verifyHost\"));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 388,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 54
      },
      "nodeContext" : "json.getValue(\"pipelining\") instanceof Boolean",
      "nodeType" : "InstanceofExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "java.lang.Object"
  }, {
    "nodeContext" : "json.getValue(\"pipelining\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 66,
      "startColumnNumber" : 33,
      "endLineNumber" : 66,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 66,
        "startColumnNumber" : 24,
        "endLineNumber" : 66,
        "endColumnNumber" : 60
      },
      "nodeContext" : "(Boolean)json.getValue(\"pipelining\")",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 66,
        "startColumnNumber" : 6,
        "endLineNumber" : 66,
        "endColumnNumber" : 61
      },
      "nodeContext" : "obj.setPipelining((Boolean)json.getValue(\"pipelining\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 66,
        "startColumnNumber" : 6,
        "endLineNumber" : 66,
        "endColumnNumber" : 62
      },
      "nodeContext" : "obj.setPipelining((Boolean)json.getValue(\"pipelining\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 65,
        "startColumnNumber" : 56,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  obj.setPipelining((Boolean)json.getValue(\"pipelining\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (json.getValue(\"pipelining\") instanceof Boolean) {\n  obj.setPipelining((Boolean)json.getValue(\"pipelining\"));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2279,
        "startLineNumber" : 29,
        "startColumnNumber" : 70,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (json.getValue(\"alpnVersions\") instanceof JsonArray) {\n    java.util.ArrayList<io.vertx.core.http.HttpVersion> list=new java.util.ArrayList<>();\n    json.getJsonArray(\"alpnVersions\").forEach(item -> {\n      if (item instanceof String)       list.add(io.vertx.core.http.HttpVersion.valueOf((String)item));\n    }\n);\n    obj.setAlpnVersions(list);\n  }\n  if (json.getValue(\"defaultHost\") instanceof String) {\n    obj.setDefaultHost((String)json.getValue(\"defaultHost\"));\n  }\n  if (json.getValue(\"defaultPort\") instanceof Number) {\n    obj.setDefaultPort(((Number)json.getValue(\"defaultPort\")).intValue());\n  }\n  if (json.getValue(\"h2cUpgrade\") instanceof Boolean) {\n    obj.setH2cUpgrade((Boolean)json.getValue(\"h2cUpgrade\"));\n  }\n  if (json.getValue(\"initialSettings\") instanceof JsonObject) {\n    obj.setInitialSettings(new io.vertx.core.http.Http2Settings((JsonObject)json.getValue(\"initialSettings\")));\n  }\n  if (json.getValue(\"keepAlive\") instanceof Boolean) {\n    obj.setKeepAlive((Boolean)json.getValue(\"keepAlive\"));\n  }\n  if (json.getValue(\"maxChunkSize\") instanceof Number) {\n    obj.setMaxChunkSize(((Number)json.getValue(\"maxChunkSize\")).intValue());\n  }\n  if (json.getValue(\"maxPoolSize\") instanceof Number) {\n    obj.setMaxPoolSize(((Number)json.getValue(\"maxPoolSize\")).intValue());\n  }\n  if (json.getValue(\"maxWaitQueueSize\") instanceof Number) {\n    obj.setMaxWaitQueueSize(((Number)json.getValue(\"maxWaitQueueSize\")).intValue());\n  }\n  if (json.getValue(\"maxWebsocketFrameSize\") instanceof Number) {\n    obj.setMaxWebsocketFrameSize(((Number)json.getValue(\"maxWebsocketFrameSize\")).intValue());\n  }\n  if (json.getValue(\"pipelining\") instanceof Boolean) {\n    obj.setPipelining((Boolean)json.getValue(\"pipelining\"));\n  }\n  if (json.getValue(\"protocolVersion\") instanceof String) {\n    obj.setProtocolVersion(io.vertx.core.http.HttpVersion.valueOf((String)json.getValue(\"protocolVersion\")));\n  }\n  if (json.getValue(\"tryUseCompression\") instanceof Boolean) {\n    obj.setTryUseCompression((Boolean)json.getValue(\"tryUseCompression\"));\n  }\n  if (json.getValue(\"verifyHost\") instanceof Boolean) {\n    obj.setVerifyHost((Boolean)json.getValue(\"verifyHost\"));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 375,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2347,
        "startLineNumber" : 29,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static void fromJson(JsonObject json,HttpClientOptions obj){\n  if (json.getValue(\"alpnVersions\") instanceof JsonArray) {\n    java.util.ArrayList<io.vertx.core.http.HttpVersion> list=new java.util.ArrayList<>();\n    json.getJsonArray(\"alpnVersions\").forEach(item -> {\n      if (item instanceof String)       list.add(io.vertx.core.http.HttpVersion.valueOf((String)item));\n    }\n);\n    obj.setAlpnVersions(list);\n  }\n  if (json.getValue(\"defaultHost\") instanceof String) {\n    obj.setDefaultHost((String)json.getValue(\"defaultHost\"));\n  }\n  if (json.getValue(\"defaultPort\") instanceof Number) {\n    obj.setDefaultPort(((Number)json.getValue(\"defaultPort\")).intValue());\n  }\n  if (json.getValue(\"h2cUpgrade\") instanceof Boolean) {\n    obj.setH2cUpgrade((Boolean)json.getValue(\"h2cUpgrade\"));\n  }\n  if (json.getValue(\"initialSettings\") instanceof JsonObject) {\n    obj.setInitialSettings(new io.vertx.core.http.Http2Settings((JsonObject)json.getValue(\"initialSettings\")));\n  }\n  if (json.getValue(\"keepAlive\") instanceof Boolean) {\n    obj.setKeepAlive((Boolean)json.getValue(\"keepAlive\"));\n  }\n  if (json.getValue(\"maxChunkSize\") instanceof Number) {\n    obj.setMaxChunkSize(((Number)json.getValue(\"maxChunkSize\")).intValue());\n  }\n  if (json.getValue(\"maxPoolSize\") instanceof Number) {\n    obj.setMaxPoolSize(((Number)json.getValue(\"maxPoolSize\")).intValue());\n  }\n  if (json.getValue(\"maxWaitQueueSize\") instanceof Number) {\n    obj.setMaxWaitQueueSize(((Number)json.getValue(\"maxWaitQueueSize\")).intValue());\n  }\n  if (json.getValue(\"maxWebsocketFrameSize\") instanceof Number) {\n    obj.setMaxWebsocketFrameSize(((Number)json.getValue(\"maxWebsocketFrameSize\")).intValue());\n  }\n  if (json.getValue(\"pipelining\") instanceof Boolean) {\n    obj.setPipelining((Boolean)json.getValue(\"pipelining\"));\n  }\n  if (json.getValue(\"protocolVersion\") instanceof String) {\n    obj.setProtocolVersion(io.vertx.core.http.HttpVersion.valueOf((String)json.getValue(\"protocolVersion\")));\n  }\n  if (json.getValue(\"tryUseCompression\") instanceof Boolean) {\n    obj.setTryUseCompression((Boolean)json.getValue(\"tryUseCompression\"));\n  }\n  if (json.getValue(\"verifyHost\") instanceof Boolean) {\n    obj.setVerifyHost((Boolean)json.getValue(\"verifyHost\"));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 388,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 66,
        "startColumnNumber" : 6,
        "endLineNumber" : 66,
        "endColumnNumber" : 62
      },
      "nodeContext" : "obj.setPipelining((Boolean)json.getValue(\"pipelining\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.Object"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 65,
    "startColumnNumber" : 8,
    "endLineNumber" : 65,
    "endColumnNumber" : 35
  }, {
    "charLength" : 27,
    "startLineNumber" : 66,
    "startColumnNumber" : 33,
    "endLineNumber" : 66,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}