{
  "id" : 427,
  "expression" : "topicCounterMap.computeIfAbsent(topic,k -> new AtomicInteger(0))",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/main/java/org/apache/kafka/clients/producer/RoundRobinPartitioner.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "topicCounterMap.computeIfAbsent(topic,k -> new AtomicInteger(0))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 65,
      "startLineNumber" : 68,
      "startColumnNumber" : 32,
      "endLineNumber" : 68,
      "endColumnNumber" : 97
    },
    "astNodeNumber" : 11,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 68,
        "startColumnNumber" : 22,
        "endLineNumber" : 68,
        "endColumnNumber" : 97
      },
      "nodeContext" : "counter=topicCounterMap.computeIfAbsent(topic,k -> new AtomicInteger(0))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 98
      },
      "nodeContext" : "AtomicInteger counter=topicCounterMap.computeIfAbsent(topic,k -> new AtomicInteger(0));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 67,
        "startColumnNumber" : 40,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  AtomicInteger counter=topicCounterMap.computeIfAbsent(topic,k -> new AtomicInteger(0));\n  return counter.getAndIncrement();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private int nextValue(String topic){\n  AtomicInteger counter=topicCounterMap.computeIfAbsent(topic,k -> new AtomicInteger(0));\n  return counter.getAndIncrement();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 29,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 98
      },
      "nodeContext" : "AtomicInteger counter=topicCounterMap.computeIfAbsent(topic,k -> new AtomicInteger(0));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 7,
    "type" : "java.util.concurrent.atomic.AtomicInteger"
  } ],
  "positionList" : [ {
    "charLength" : 65,
    "startLineNumber" : 68,
    "startColumnNumber" : 32,
    "endLineNumber" : 68,
    "endColumnNumber" : 97
  } ],
  "layoutRelationDataList" : [ ]
}