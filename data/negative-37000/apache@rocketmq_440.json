{
  "id" : 440,
  "expression" : "1000 * 60",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/store/src/main/java/org/apache/rocketmq/store/MappedFileQueue.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1000 * 60",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 411,
      "startColumnNumber" : 50,
      "endLineNumber" : 411,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 411,
        "startColumnNumber" : 31,
        "endLineNumber" : 411,
        "endColumnNumber" : 60
      },
      "nodeContext" : "mappedFile.destroy(1000 * 60)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 411,
        "startColumnNumber" : 20,
        "endLineNumber" : 411,
        "endColumnNumber" : 60
      },
      "nodeContext" : "destroy && mappedFile.destroy(1000 * 60)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 195,
        "startLineNumber" : 411,
        "startColumnNumber" : 16,
        "endLineNumber" : 416,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (destroy && mappedFile.destroy(1000 * 60)) {\n  files.add(mappedFile);\n  deleteCount++;\n}\n else {\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1237,
        "startLineNumber" : 391,
        "startColumnNumber" : 48,
        "endLineNumber" : 417,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  boolean destroy;\n  MappedFile mappedFile=(MappedFile)mfs[i];\n  SelectMappedBufferResult result=mappedFile.selectMappedBuffer(this.mappedFileSize - unitSize);\n  if (result != null) {\n    long maxOffsetInLogicQueue=result.getByteBuffer().getLong();\n    result.release();\n    destroy=maxOffsetInLogicQueue < offset;\n    if (destroy) {\n      log.info(\"physic min offset \" + offset + \", logics in current mappedFile max offset \"+ maxOffsetInLogicQueue+ \", delete it\");\n    }\n  }\n else   if (!mappedFile.isAvailable()) {\n    log.warn(\"Found a hanged consume queue file, attempting to delete it.\");\n    destroy=true;\n  }\n else {\n    log.warn(\"this being not executed forever.\");\n    break;\n  }\n  if (destroy && mappedFile.destroy(1000 * 60)) {\n    files.add(mappedFile);\n    deleteCount++;\n  }\n else {\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1273,
        "startLineNumber" : 391,
        "startColumnNumber" : 12,
        "endLineNumber" : 417,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < mfsLength; i++) {\n  boolean destroy;\n  MappedFile mappedFile=(MappedFile)mfs[i];\n  SelectMappedBufferResult result=mappedFile.selectMappedBuffer(this.mappedFileSize - unitSize);\n  if (result != null) {\n    long maxOffsetInLogicQueue=result.getByteBuffer().getLong();\n    result.release();\n    destroy=maxOffsetInLogicQueue < offset;\n    if (destroy) {\n      log.info(\"physic min offset \" + offset + \", logics in current mappedFile max offset \"+ maxOffsetInLogicQueue+ \", delete it\");\n    }\n  }\n else   if (!mappedFile.isAvailable()) {\n    log.warn(\"Found a hanged consume queue file, attempting to delete it.\");\n    destroy=true;\n  }\n else {\n    log.warn(\"this being not executed forever.\");\n    break;\n  }\n  if (destroy && mappedFile.destroy(1000 * 60)) {\n    files.add(mappedFile);\n    deleteCount++;\n  }\n else {\n    break;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 119,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1343,
        "startLineNumber" : 387,
        "startColumnNumber" : 25,
        "endLineNumber" : 418,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int mfsLength=mfs.length - 1;\n  for (int i=0; i < mfsLength; i++) {\n    boolean destroy;\n    MappedFile mappedFile=(MappedFile)mfs[i];\n    SelectMappedBufferResult result=mappedFile.selectMappedBuffer(this.mappedFileSize - unitSize);\n    if (result != null) {\n      long maxOffsetInLogicQueue=result.getByteBuffer().getLong();\n      result.release();\n      destroy=maxOffsetInLogicQueue < offset;\n      if (destroy) {\n        log.info(\"physic min offset \" + offset + \", logics in current mappedFile max offset \"+ maxOffsetInLogicQueue+ \", delete it\");\n      }\n    }\n else     if (!mappedFile.isAvailable()) {\n      log.warn(\"Found a hanged consume queue file, attempting to delete it.\");\n      destroy=true;\n    }\n else {\n      log.warn(\"this being not executed forever.\");\n      break;\n    }\n    if (destroy && mappedFile.destroy(1000 * 60)) {\n      files.add(mappedFile);\n      deleteCount++;\n    }\n else {\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1360,
        "startLineNumber" : 387,
        "startColumnNumber" : 8,
        "endLineNumber" : 418,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (null != mfs) {\n  int mfsLength=mfs.length - 1;\n  for (int i=0; i < mfsLength; i++) {\n    boolean destroy;\n    MappedFile mappedFile=(MappedFile)mfs[i];\n    SelectMappedBufferResult result=mappedFile.selectMappedBuffer(this.mappedFileSize - unitSize);\n    if (result != null) {\n      long maxOffsetInLogicQueue=result.getByteBuffer().getLong();\n      result.release();\n      destroy=maxOffsetInLogicQueue < offset;\n      if (destroy) {\n        log.info(\"physic min offset \" + offset + \", logics in current mappedFile max offset \"+ maxOffsetInLogicQueue+ \", delete it\");\n      }\n    }\n else     if (!mappedFile.isAvailable()) {\n      log.warn(\"Found a hanged consume queue file, attempting to delete it.\");\n      destroy=true;\n    }\n else {\n      log.warn(\"this being not executed forever.\");\n      break;\n    }\n    if (destroy && mappedFile.destroy(1000 * 60)) {\n      files.add(mappedFile);\n      deleteCount++;\n    }\n else {\n      break;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 133,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1580,
        "startLineNumber" : 382,
        "startColumnNumber" : 68,
        "endLineNumber" : 423,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Object[] mfs=this.copyMappedFiles(0);\n  List<MappedFile> files=new ArrayList<MappedFile>();\n  int deleteCount=0;\n  if (null != mfs) {\n    int mfsLength=mfs.length - 1;\n    for (int i=0; i < mfsLength; i++) {\n      boolean destroy;\n      MappedFile mappedFile=(MappedFile)mfs[i];\n      SelectMappedBufferResult result=mappedFile.selectMappedBuffer(this.mappedFileSize - unitSize);\n      if (result != null) {\n        long maxOffsetInLogicQueue=result.getByteBuffer().getLong();\n        result.release();\n        destroy=maxOffsetInLogicQueue < offset;\n        if (destroy) {\n          log.info(\"physic min offset \" + offset + \", logics in current mappedFile max offset \"+ maxOffsetInLogicQueue+ \", delete it\");\n        }\n      }\n else       if (!mappedFile.isAvailable()) {\n        log.warn(\"Found a hanged consume queue file, attempting to delete it.\");\n        destroy=true;\n      }\n else {\n        log.warn(\"this being not executed forever.\");\n        break;\n      }\n      if (destroy && mappedFile.destroy(1000 * 60)) {\n        files.add(mappedFile);\n        deleteCount++;\n      }\n else {\n        break;\n      }\n    }\n  }\n  deleteExpiredFile(files);\n  return deleteCount;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1644,
        "startLineNumber" : 382,
        "startColumnNumber" : 4,
        "endLineNumber" : 423,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public int deleteExpiredFileByOffset(long offset,int unitSize){\n  Object[] mfs=this.copyMappedFiles(0);\n  List<MappedFile> files=new ArrayList<MappedFile>();\n  int deleteCount=0;\n  if (null != mfs) {\n    int mfsLength=mfs.length - 1;\n    for (int i=0; i < mfsLength; i++) {\n      boolean destroy;\n      MappedFile mappedFile=(MappedFile)mfs[i];\n      SelectMappedBufferResult result=mappedFile.selectMappedBuffer(this.mappedFileSize - unitSize);\n      if (result != null) {\n        long maxOffsetInLogicQueue=result.getByteBuffer().getLong();\n        result.release();\n        destroy=maxOffsetInLogicQueue < offset;\n        if (destroy) {\n          log.info(\"physic min offset \" + offset + \", logics in current mappedFile max offset \"+ maxOffsetInLogicQueue+ \", delete it\");\n        }\n      }\n else       if (!mappedFile.isAvailable()) {\n        log.warn(\"Found a hanged consume queue file, attempting to delete it.\");\n        destroy=true;\n      }\n else {\n        log.warn(\"this being not executed forever.\");\n        break;\n      }\n      if (destroy && mappedFile.destroy(1000 * 60)) {\n        files.add(mappedFile);\n        deleteCount++;\n      }\n else {\n        break;\n      }\n    }\n  }\n  deleteExpiredFile(files);\n  return deleteCount;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 411,
        "startColumnNumber" : 20,
        "endLineNumber" : 411,
        "endColumnNumber" : 60
      },
      "nodeContext" : "destroy && mappedFile.destroy(1000 * 60)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 411,
    "startColumnNumber" : 50,
    "endLineNumber" : 411,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ ]
}