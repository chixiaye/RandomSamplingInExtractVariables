{
  "id" : 294,
  "expression" : "\"Close\"",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Features/Base/src/main/java/ghidra/app/plugin/core/progmgr/MultiTabPanel.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Close\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 226,
      "startColumnNumber" : 27,
      "endLineNumber" : 226,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 226,
        "startColumnNumber" : 2,
        "endLineNumber" : 226,
        "endColumnNumber" : 35
      },
      "nodeContext" : "iconLabel.setToolTipText(\"Close\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 226,
        "startColumnNumber" : 2,
        "endLineNumber" : 226,
        "endColumnNumber" : 36
      },
      "nodeContext" : "iconLabel.setToolTipText(\"Close\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3422,
        "startLineNumber" : 211,
        "startColumnNumber" : 78,
        "endLineNumber" : 322,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  final JPanel labelPanel=new JPanel(new FlowLayout(FlowLayout.LEFT,0,1));\n  labelPanel.setBorder(BorderFactory.createEmptyBorder(0,5,0,10));\n  JLabel nameLabel=new GDLabel();\n  nameLabel.setIconTextGap(1);\n  nameLabel.setName(\"objectName\");\n  nameLabel.setFont(LABEL_FONT);\n  Color foregroundColor=isSelected ? TEXT_SELECTION_COLOR : TEXT_NON_SELECTION_COLOR;\n  nameLabel.setForeground(foregroundColor);\n  labelPanel.add(nameLabel);\n  JLabel iconLabel=new GIconLabel(isSelected ? CLOSE_ICON : EMPTY16_ICON);\n  iconLabel.setToolTipText(\"Close\");\n  iconLabel.setName(\"Close\");\n  MouseListener iconSwitcherMouseListener=new MouseAdapter(){\n    @Override public void mouseEntered(    MouseEvent e){\n      if (e.getSource() == iconLabel) {\n        iconLabel.setIcon(HIGHLIGHT_CLOSE_ICON);\n      }\n else {\n        iconLabel.setIcon(CLOSE_ICON);\n      }\n    }\n    @Override public void mouseExited(    MouseEvent e){\n      if (program == currentProgram) {\n        iconLabel.setIcon(CLOSE_ICON);\n      }\n else {\n        iconLabel.setIcon(EMPTY16_ICON);\n      }\n    }\n  }\n;\n  Color backgroundColor=isSelected ? BG_SELECTION_COLOR : BG_NON_SELECTION_COLOR;\n  labelPanel.setBackground(backgroundColor);\n  iconLabel.setBackground(backgroundColor);\n  TabPanel tabPanel=null;\n  if (isSelected) {\n    tabPanel=new SelectedPanel(backgroundColor,program,nameLabel,labelPanel,iconLabel);\n  }\n else {\n    tabPanel=new TabPanel(backgroundColor,program,nameLabel,labelPanel,iconLabel);\n  }\n  tabPanel.refresh();\n  GridBagLayout gbl=new GridBagLayout();\n  tabPanel.setLayout(gbl);\n  GridBagConstraints gbc=new GridBagConstraints();\n  gbc.gridx=0;\n  gbc.gridy=0;\n  gbc.anchor=GridBagConstraints.WEST;\n  gbc.weightx=1.0;\n  gbl.setConstraints(labelPanel,gbc);\n  tabPanel.add(labelPanel);\n  gbc=new GridBagConstraints();\n  gbc.gridx=1;\n  gbc.gridy=0;\n  gbc.anchor=GridBagConstraints.NORTHEAST;\n  gbl.setConstraints(iconLabel,gbc);\n  tabPanel.add(iconLabel);\n  tabPanel.setBorder(new BottomlessBevelBorder());\n  MouseListener tabSelectionMouseListener=new MouseAdapter(){\n    @Override public void mousePressed(    MouseEvent e){\n      if (!(e.getSource() instanceof JList)) {\n        hideListWindow();\n      }\n      if (e.isPopupTrigger()) {\n        return;\n      }\n      if (e.getSource() == iconLabel) {\n        doRemoveProgram(program);\n        return;\n      }\n      if (!linkedProgramMap.containsKey(program) || currentProgram == program) {\n        return;\n      }\n      clearSelectedProgram();\n      setSelectedProgram(program);\n      hideListWindow();\n      multiTabPlugin.programSelected(currentProgram);\n    }\n  }\n;\n  addMouseListener(tabPanel,tabSelectionMouseListener);\n  addMouseListener(tabPanel,iconSwitcherMouseListener);\n  linkedProgramMap.put(program,tabPanel);\n  tabPanel.setMinimumSize(new Dimension(20,20));\n  return tabPanel;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 420,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3499,
        "startLineNumber" : 211,
        "startColumnNumber" : 1,
        "endLineNumber" : 322,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private TabPanel createProgramTab(final Program program,boolean isSelected){\n  final JPanel labelPanel=new JPanel(new FlowLayout(FlowLayout.LEFT,0,1));\n  labelPanel.setBorder(BorderFactory.createEmptyBorder(0,5,0,10));\n  JLabel nameLabel=new GDLabel();\n  nameLabel.setIconTextGap(1);\n  nameLabel.setName(\"objectName\");\n  nameLabel.setFont(LABEL_FONT);\n  Color foregroundColor=isSelected ? TEXT_SELECTION_COLOR : TEXT_NON_SELECTION_COLOR;\n  nameLabel.setForeground(foregroundColor);\n  labelPanel.add(nameLabel);\n  JLabel iconLabel=new GIconLabel(isSelected ? CLOSE_ICON : EMPTY16_ICON);\n  iconLabel.setToolTipText(\"Close\");\n  iconLabel.setName(\"Close\");\n  MouseListener iconSwitcherMouseListener=new MouseAdapter(){\n    @Override public void mouseEntered(    MouseEvent e){\n      if (e.getSource() == iconLabel) {\n        iconLabel.setIcon(HIGHLIGHT_CLOSE_ICON);\n      }\n else {\n        iconLabel.setIcon(CLOSE_ICON);\n      }\n    }\n    @Override public void mouseExited(    MouseEvent e){\n      if (program == currentProgram) {\n        iconLabel.setIcon(CLOSE_ICON);\n      }\n else {\n        iconLabel.setIcon(EMPTY16_ICON);\n      }\n    }\n  }\n;\n  Color backgroundColor=isSelected ? BG_SELECTION_COLOR : BG_NON_SELECTION_COLOR;\n  labelPanel.setBackground(backgroundColor);\n  iconLabel.setBackground(backgroundColor);\n  TabPanel tabPanel=null;\n  if (isSelected) {\n    tabPanel=new SelectedPanel(backgroundColor,program,nameLabel,labelPanel,iconLabel);\n  }\n else {\n    tabPanel=new TabPanel(backgroundColor,program,nameLabel,labelPanel,iconLabel);\n  }\n  tabPanel.refresh();\n  GridBagLayout gbl=new GridBagLayout();\n  tabPanel.setLayout(gbl);\n  GridBagConstraints gbc=new GridBagConstraints();\n  gbc.gridx=0;\n  gbc.gridy=0;\n  gbc.anchor=GridBagConstraints.WEST;\n  gbc.weightx=1.0;\n  gbl.setConstraints(labelPanel,gbc);\n  tabPanel.add(labelPanel);\n  gbc=new GridBagConstraints();\n  gbc.gridx=1;\n  gbc.gridy=0;\n  gbc.anchor=GridBagConstraints.NORTHEAST;\n  gbl.setConstraints(iconLabel,gbc);\n  tabPanel.add(iconLabel);\n  tabPanel.setBorder(new BottomlessBevelBorder());\n  MouseListener tabSelectionMouseListener=new MouseAdapter(){\n    @Override public void mousePressed(    MouseEvent e){\n      if (!(e.getSource() instanceof JList)) {\n        hideListWindow();\n      }\n      if (e.isPopupTrigger()) {\n        return;\n      }\n      if (e.getSource() == iconLabel) {\n        doRemoveProgram(program);\n        return;\n      }\n      if (!linkedProgramMap.containsKey(program) || currentProgram == program) {\n        return;\n      }\n      clearSelectedProgram();\n      setSelectedProgram(program);\n      hideListWindow();\n      multiTabPlugin.programSelected(currentProgram);\n    }\n  }\n;\n  addMouseListener(tabPanel,tabSelectionMouseListener);\n  addMouseListener(tabPanel,iconSwitcherMouseListener);\n  linkedProgramMap.put(program,tabPanel);\n  tabPanel.setMinimumSize(new Dimension(20,20));\n  return tabPanel;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 433,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 226,
        "startColumnNumber" : 2,
        "endLineNumber" : 226,
        "endColumnNumber" : 36
      },
      "nodeContext" : "iconLabel.setToolTipText(\"Close\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"Close\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 227,
      "startColumnNumber" : 20,
      "endLineNumber" : 227,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 227,
        "startColumnNumber" : 2,
        "endLineNumber" : 227,
        "endColumnNumber" : 28
      },
      "nodeContext" : "iconLabel.setName(\"Close\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 227,
        "startColumnNumber" : 2,
        "endLineNumber" : 227,
        "endColumnNumber" : 29
      },
      "nodeContext" : "iconLabel.setName(\"Close\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3422,
        "startLineNumber" : 211,
        "startColumnNumber" : 78,
        "endLineNumber" : 322,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  final JPanel labelPanel=new JPanel(new FlowLayout(FlowLayout.LEFT,0,1));\n  labelPanel.setBorder(BorderFactory.createEmptyBorder(0,5,0,10));\n  JLabel nameLabel=new GDLabel();\n  nameLabel.setIconTextGap(1);\n  nameLabel.setName(\"objectName\");\n  nameLabel.setFont(LABEL_FONT);\n  Color foregroundColor=isSelected ? TEXT_SELECTION_COLOR : TEXT_NON_SELECTION_COLOR;\n  nameLabel.setForeground(foregroundColor);\n  labelPanel.add(nameLabel);\n  JLabel iconLabel=new GIconLabel(isSelected ? CLOSE_ICON : EMPTY16_ICON);\n  iconLabel.setToolTipText(\"Close\");\n  iconLabel.setName(\"Close\");\n  MouseListener iconSwitcherMouseListener=new MouseAdapter(){\n    @Override public void mouseEntered(    MouseEvent e){\n      if (e.getSource() == iconLabel) {\n        iconLabel.setIcon(HIGHLIGHT_CLOSE_ICON);\n      }\n else {\n        iconLabel.setIcon(CLOSE_ICON);\n      }\n    }\n    @Override public void mouseExited(    MouseEvent e){\n      if (program == currentProgram) {\n        iconLabel.setIcon(CLOSE_ICON);\n      }\n else {\n        iconLabel.setIcon(EMPTY16_ICON);\n      }\n    }\n  }\n;\n  Color backgroundColor=isSelected ? BG_SELECTION_COLOR : BG_NON_SELECTION_COLOR;\n  labelPanel.setBackground(backgroundColor);\n  iconLabel.setBackground(backgroundColor);\n  TabPanel tabPanel=null;\n  if (isSelected) {\n    tabPanel=new SelectedPanel(backgroundColor,program,nameLabel,labelPanel,iconLabel);\n  }\n else {\n    tabPanel=new TabPanel(backgroundColor,program,nameLabel,labelPanel,iconLabel);\n  }\n  tabPanel.refresh();\n  GridBagLayout gbl=new GridBagLayout();\n  tabPanel.setLayout(gbl);\n  GridBagConstraints gbc=new GridBagConstraints();\n  gbc.gridx=0;\n  gbc.gridy=0;\n  gbc.anchor=GridBagConstraints.WEST;\n  gbc.weightx=1.0;\n  gbl.setConstraints(labelPanel,gbc);\n  tabPanel.add(labelPanel);\n  gbc=new GridBagConstraints();\n  gbc.gridx=1;\n  gbc.gridy=0;\n  gbc.anchor=GridBagConstraints.NORTHEAST;\n  gbl.setConstraints(iconLabel,gbc);\n  tabPanel.add(iconLabel);\n  tabPanel.setBorder(new BottomlessBevelBorder());\n  MouseListener tabSelectionMouseListener=new MouseAdapter(){\n    @Override public void mousePressed(    MouseEvent e){\n      if (!(e.getSource() instanceof JList)) {\n        hideListWindow();\n      }\n      if (e.isPopupTrigger()) {\n        return;\n      }\n      if (e.getSource() == iconLabel) {\n        doRemoveProgram(program);\n        return;\n      }\n      if (!linkedProgramMap.containsKey(program) || currentProgram == program) {\n        return;\n      }\n      clearSelectedProgram();\n      setSelectedProgram(program);\n      hideListWindow();\n      multiTabPlugin.programSelected(currentProgram);\n    }\n  }\n;\n  addMouseListener(tabPanel,tabSelectionMouseListener);\n  addMouseListener(tabPanel,iconSwitcherMouseListener);\n  linkedProgramMap.put(program,tabPanel);\n  tabPanel.setMinimumSize(new Dimension(20,20));\n  return tabPanel;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 420,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3499,
        "startLineNumber" : 211,
        "startColumnNumber" : 1,
        "endLineNumber" : 322,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private TabPanel createProgramTab(final Program program,boolean isSelected){\n  final JPanel labelPanel=new JPanel(new FlowLayout(FlowLayout.LEFT,0,1));\n  labelPanel.setBorder(BorderFactory.createEmptyBorder(0,5,0,10));\n  JLabel nameLabel=new GDLabel();\n  nameLabel.setIconTextGap(1);\n  nameLabel.setName(\"objectName\");\n  nameLabel.setFont(LABEL_FONT);\n  Color foregroundColor=isSelected ? TEXT_SELECTION_COLOR : TEXT_NON_SELECTION_COLOR;\n  nameLabel.setForeground(foregroundColor);\n  labelPanel.add(nameLabel);\n  JLabel iconLabel=new GIconLabel(isSelected ? CLOSE_ICON : EMPTY16_ICON);\n  iconLabel.setToolTipText(\"Close\");\n  iconLabel.setName(\"Close\");\n  MouseListener iconSwitcherMouseListener=new MouseAdapter(){\n    @Override public void mouseEntered(    MouseEvent e){\n      if (e.getSource() == iconLabel) {\n        iconLabel.setIcon(HIGHLIGHT_CLOSE_ICON);\n      }\n else {\n        iconLabel.setIcon(CLOSE_ICON);\n      }\n    }\n    @Override public void mouseExited(    MouseEvent e){\n      if (program == currentProgram) {\n        iconLabel.setIcon(CLOSE_ICON);\n      }\n else {\n        iconLabel.setIcon(EMPTY16_ICON);\n      }\n    }\n  }\n;\n  Color backgroundColor=isSelected ? BG_SELECTION_COLOR : BG_NON_SELECTION_COLOR;\n  labelPanel.setBackground(backgroundColor);\n  iconLabel.setBackground(backgroundColor);\n  TabPanel tabPanel=null;\n  if (isSelected) {\n    tabPanel=new SelectedPanel(backgroundColor,program,nameLabel,labelPanel,iconLabel);\n  }\n else {\n    tabPanel=new TabPanel(backgroundColor,program,nameLabel,labelPanel,iconLabel);\n  }\n  tabPanel.refresh();\n  GridBagLayout gbl=new GridBagLayout();\n  tabPanel.setLayout(gbl);\n  GridBagConstraints gbc=new GridBagConstraints();\n  gbc.gridx=0;\n  gbc.gridy=0;\n  gbc.anchor=GridBagConstraints.WEST;\n  gbc.weightx=1.0;\n  gbl.setConstraints(labelPanel,gbc);\n  tabPanel.add(labelPanel);\n  gbc=new GridBagConstraints();\n  gbc.gridx=1;\n  gbc.gridy=0;\n  gbc.anchor=GridBagConstraints.NORTHEAST;\n  gbl.setConstraints(iconLabel,gbc);\n  tabPanel.add(iconLabel);\n  tabPanel.setBorder(new BottomlessBevelBorder());\n  MouseListener tabSelectionMouseListener=new MouseAdapter(){\n    @Override public void mousePressed(    MouseEvent e){\n      if (!(e.getSource() instanceof JList)) {\n        hideListWindow();\n      }\n      if (e.isPopupTrigger()) {\n        return;\n      }\n      if (e.getSource() == iconLabel) {\n        doRemoveProgram(program);\n        return;\n      }\n      if (!linkedProgramMap.containsKey(program) || currentProgram == program) {\n        return;\n      }\n      clearSelectedProgram();\n      setSelectedProgram(program);\n      hideListWindow();\n      multiTabPlugin.programSelected(currentProgram);\n    }\n  }\n;\n  addMouseListener(tabPanel,tabSelectionMouseListener);\n  addMouseListener(tabPanel,iconSwitcherMouseListener);\n  linkedProgramMap.put(program,tabPanel);\n  tabPanel.setMinimumSize(new Dimension(20,20));\n  return tabPanel;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 433,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 227,
        "startColumnNumber" : 2,
        "endLineNumber" : 227,
        "endColumnNumber" : 29
      },
      "nodeContext" : "iconLabel.setName(\"Close\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 226,
    "startColumnNumber" : 27,
    "endLineNumber" : 226,
    "endColumnNumber" : 34
  }, {
    "charLength" : 7,
    "startLineNumber" : 227,
    "startColumnNumber" : 20,
    "endLineNumber" : 227,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}