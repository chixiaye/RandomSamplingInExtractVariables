{
  "id" : 244,
  "expression" : "\"1.0\"",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-libraries/flink-cep/src/test/java/org/apache/flink/cep/nfa/DeweyNumberTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"1.0\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 44,
      "startColumnNumber" : 44,
      "endLineNumber" : 44,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 44,
        "startColumnNumber" : 21,
        "endLineNumber" : 44,
        "endColumnNumber" : 50
      },
      "nodeContext" : "DeweyNumber.fromString(\"1.0\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertEquals(DeweyNumber.fromString(\"1.0\"),startAddStage)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 67
      },
      "nodeContext" : "assertEquals(DeweyNumber.fromString(\"1.0\"),startAddStage);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1353,
        "startLineNumber" : 33,
        "startColumnNumber" : 44,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DeweyNumber start=new DeweyNumber(1);\n  DeweyNumber increased=start.increase();\n  DeweyNumber increaseAddStage=increased.addStage();\n  DeweyNumber startAddStage=start.addStage();\n  DeweyNumber startAddStageIncreased=startAddStage.increase();\n  DeweyNumber startAddStageIncreasedAddStage=startAddStageIncreased.addStage();\n  assertEquals(DeweyNumber.fromString(\"1\"),start);\n  assertEquals(DeweyNumber.fromString(\"2\"),increased);\n  assertEquals(DeweyNumber.fromString(\"2.0\"),increaseAddStage);\n  assertEquals(DeweyNumber.fromString(\"1.0\"),startAddStage);\n  assertEquals(DeweyNumber.fromString(\"1.1\"),startAddStageIncreased);\n  assertEquals(DeweyNumber.fromString(\"1.1.0\"),startAddStageIncreasedAddStage);\n  assertTrue(startAddStage.isCompatibleWith(start));\n  assertTrue(startAddStageIncreased.isCompatibleWith(startAddStage));\n  assertTrue(startAddStageIncreasedAddStage.isCompatibleWith(startAddStageIncreased));\n  assertFalse(startAddStageIncreasedAddStage.isCompatibleWith(startAddStage));\n  assertFalse(increaseAddStage.isCompatibleWith(startAddStage));\n  assertFalse(startAddStage.isCompatibleWith(increaseAddStage));\n  assertFalse(startAddStageIncreased.isCompatibleWith(startAddStageIncreasedAddStage));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 147,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1403,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testDeweyNumberGeneration(){\n  DeweyNumber start=new DeweyNumber(1);\n  DeweyNumber increased=start.increase();\n  DeweyNumber increaseAddStage=increased.addStage();\n  DeweyNumber startAddStage=start.addStage();\n  DeweyNumber startAddStageIncreased=startAddStage.increase();\n  DeweyNumber startAddStageIncreasedAddStage=startAddStageIncreased.addStage();\n  assertEquals(DeweyNumber.fromString(\"1\"),start);\n  assertEquals(DeweyNumber.fromString(\"2\"),increased);\n  assertEquals(DeweyNumber.fromString(\"2.0\"),increaseAddStage);\n  assertEquals(DeweyNumber.fromString(\"1.0\"),startAddStage);\n  assertEquals(DeweyNumber.fromString(\"1.1\"),startAddStageIncreased);\n  assertEquals(DeweyNumber.fromString(\"1.1.0\"),startAddStageIncreasedAddStage);\n  assertTrue(startAddStage.isCompatibleWith(start));\n  assertTrue(startAddStageIncreased.isCompatibleWith(startAddStage));\n  assertTrue(startAddStageIncreasedAddStage.isCompatibleWith(startAddStageIncreased));\n  assertFalse(startAddStageIncreasedAddStage.isCompatibleWith(startAddStage));\n  assertFalse(increaseAddStage.isCompatibleWith(startAddStage));\n  assertFalse(startAddStage.isCompatibleWith(increaseAddStage));\n  assertFalse(startAddStageIncreased.isCompatibleWith(startAddStageIncreasedAddStage));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 153,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 67
      },
      "nodeContext" : "assertEquals(DeweyNumber.fromString(\"1.0\"),startAddStage);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 44,
    "startColumnNumber" : 44,
    "endLineNumber" : 44,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}