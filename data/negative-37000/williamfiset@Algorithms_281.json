{
  "id" : 281,
  "expression" : "i < n",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/graphtheory/treealgorithms/TreeCenterLongestPathImpl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i < n",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 97,
      "startColumnNumber" : 20,
      "endLineNumber" : 97,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 97,
        "endColumnNumber" : 61
      },
      "nodeContext" : "for (int i=0; i < n; i++) tree.add(new LinkedList<>());\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 95,
        "startColumnNumber" : 59,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<List<Integer>> tree=new ArrayList<>(n);\n  for (int i=0; i < n; i++)   tree.add(new LinkedList<>());\n  return tree;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 278,
        "startLineNumber" : 92,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * ********** TESTING ********* \n */\npublic static List<List<Integer>> createEmptyTree(int n){\n  List<List<Integer>> tree=new ArrayList<>(n);\n  for (int i=0; i < n; i++)   tree.add(new LinkedList<>());\n  return tree;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 54,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 97,
        "endColumnNumber" : 61
      },
      "nodeContext" : "for (int i=0; i < n; i++) tree.add(new LinkedList<>());\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 97,
    "startColumnNumber" : 20,
    "endLineNumber" : 97,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ ]
}