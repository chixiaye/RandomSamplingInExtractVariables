{
  "id" : 162,
  "expression" : "clazz.getMethod(\"main\",String[].class)",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/src/contrib/fatjar/src/java/org/apache/zookeeper/util/FatJarMain.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "clazz.getMethod(\"main\",String[].class)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 39,
      "startLineNumber" : 98,
      "startColumnNumber" : 22,
      "endLineNumber" : 98,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 9,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 98,
        "startColumnNumber" : 15,
        "endLineNumber" : 98,
        "endColumnNumber" : 61
      },
      "nodeContext" : "main=clazz.getMethod(\"main\",String[].class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Method main=clazz.getMethod(\"main\",String[].class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1713,
        "startLineNumber" : 65,
        "startColumnNumber" : 178,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  InputStream is=FatJarMain.class.getResourceAsStream(\"/mainClasses\");\n  if (is == null) {\n    System.err.println(\"Couldn't find /mainClasses in classpath.\");\n    System.exit(3);\n  }\n  BufferedReader br=new BufferedReader(new InputStreamReader(is));\n  String line;\n  while ((line=br.readLine()) != null) {\n    String parts[]=line.split(\":\",3);\n    if (parts.length != 3 || (parts[0].length() > 0 && parts[0].charAt(0) == '#')) {\n      continue;\n    }\n    if (parts[0].length() > 0) {\n      cmds.put(parts[0],new Cmd(parts[0],parts[1],parts[2]));\n      order.add(parts[0]);\n    }\n else {\n      order.add(parts[2]);\n    }\n  }\n  if (args.length == 0) {\n    doHelp();\n    return;\n  }\n  Cmd cmd=cmds.get(args[0]);\n  if (cmd == null) {\n    doHelp();\n    return;\n  }\n  Class<?> clazz=Class.forName(cmd.clazz);\n  Method main=clazz.getMethod(\"main\",String[].class);\n  String newArgs[]=new String[args.length - 1];\n  System.arraycopy(args,1,newArgs,0,newArgs.length);\n  try {\n    main.invoke(null,(Object)newArgs);\n  }\n catch (  InvocationTargetException e) {\n    if (e.getCause() != null) {\n      e.getCause().printStackTrace();\n    }\n else {\n      e.printStackTrace();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 256,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2289,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @param args the first parameter of args will be used as anindex into the /mainClasses resource. The rest will be passed to the mainClass to run.\n * @throws IOException \n * @throws ClassNotFoundException \n * @throws NoSuchMethodException \n * @throws SecurityException \n * @throws IllegalAccessException \n * @throws IllegalArgumentException \n */\npublic static void main(String[] args) throws IOException, ClassNotFoundException, SecurityException, NoSuchMethodException, IllegalArgumentException, IllegalAccessException {\n  InputStream is=FatJarMain.class.getResourceAsStream(\"/mainClasses\");\n  if (is == null) {\n    System.err.println(\"Couldn't find /mainClasses in classpath.\");\n    System.exit(3);\n  }\n  BufferedReader br=new BufferedReader(new InputStreamReader(is));\n  String line;\n  while ((line=br.readLine()) != null) {\n    String parts[]=line.split(\":\",3);\n    if (parts.length != 3 || (parts[0].length() > 0 && parts[0].charAt(0) == '#')) {\n      continue;\n    }\n    if (parts[0].length() > 0) {\n      cmds.put(parts[0],new Cmd(parts[0],parts[1],parts[2]));\n      order.add(parts[0]);\n    }\n else {\n      order.add(parts[2]);\n    }\n  }\n  if (args.length == 0) {\n    doHelp();\n    return;\n  }\n  Cmd cmd=cmds.get(args[0]);\n  if (cmd == null) {\n    doHelp();\n    return;\n  }\n  Class<?> clazz=Class.forName(cmd.clazz);\n  Method main=clazz.getMethod(\"main\",String[].class);\n  String newArgs[]=new String[args.length - 1];\n  System.arraycopy(args,1,newArgs,0,newArgs.length);\n  try {\n    main.invoke(null,(Object)newArgs);\n  }\n catch (  InvocationTargetException e) {\n    if (e.getCause() != null) {\n      e.getCause().printStackTrace();\n    }\n else {\n      e.printStackTrace();\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 280,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Method main=clazz.getMethod(\"main\",String[].class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 4,
    "type" : "java.lang.reflect.Method"
  } ],
  "positionList" : [ {
    "charLength" : 39,
    "startLineNumber" : 98,
    "startColumnNumber" : 22,
    "endLineNumber" : 98,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}