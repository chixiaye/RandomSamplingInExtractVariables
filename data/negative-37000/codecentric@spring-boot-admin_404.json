{
  "id" : 404,
  "expression" : "StepVerifier",
  "projectName" : "codecentric@spring-boot-admin",
  "commitID" : "cc544df47d4bcdf7138ca3e264797778fb39920a",
  "filePath" : "/spring-boot-admin-server/src/test/java/de/codecentric/boot/admin/server/notify/HipchatNotifierTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "StepVerifier",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 76,
      "startColumnNumber" : 8,
      "endLineNumber" : 76,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 186,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 46
      },
      "nodeContext" : "StepVerifier.create(notifier.notify(new ClientApplicationStatusChangedEvent(application.getId(),application.getVersion(),StatusInfo.ofDown())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 203,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 63
      },
      "nodeContext" : "StepVerifier.create(notifier.notify(new ClientApplicationStatusChangedEvent(application.getId(),application.getVersion(),StatusInfo.ofDown()))).verifyComplete()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 64
      },
      "nodeContext" : "StepVerifier.create(notifier.notify(new ClientApplicationStatusChangedEvent(application.getId(),application.getVersion(),StatusInfo.ofDown()))).verifyComplete();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1316,
        "startLineNumber" : 69,
        "startColumnNumber" : 50,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  @SuppressWarnings(\"unchecked\") ArgumentCaptor<HttpEntity<Map<String,Object>>> httpRequest=ArgumentCaptor.forClass((Class<HttpEntity<Map<String,Object>>>)(Class<?>)HttpEntity.class);\n  when(restTemplate.postForEntity(isA(String.class),httpRequest.capture(),eq(Void.class))).thenReturn(ResponseEntity.ok().build());\n  StepVerifier.create(notifier.notify(new ClientApplicationStatusChangedEvent(application.getId(),application.getVersion(),StatusInfo.ofDown()))).verifyComplete();\n  StepVerifier.create(notifier.notify(new ClientApplicationStatusChangedEvent(application.getId(),application.getVersion(),StatusInfo.ofUp()))).verifyComplete();\n  assertThat(httpRequest.getValue().getHeaders()).containsEntry(\"Content-Type\",Collections.singletonList(\"application/json\"));\n  Map<String,Object> body=httpRequest.getValue().getBody();\n  assertThat(body).containsEntry(\"color\",\"green\");\n  assertThat(body).containsEntry(\"message\",\"<strong>App</strong>/-id- is <strong>UP</strong>\");\n  assertThat(body).containsEntry(\"notify\",Boolean.TRUE);\n  assertThat(body).containsEntry(\"message_format\",\"html\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1372,
        "startLineNumber" : 68,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void test_onApplicationEvent_resolve(){\n  @SuppressWarnings(\"unchecked\") ArgumentCaptor<HttpEntity<Map<String,Object>>> httpRequest=ArgumentCaptor.forClass((Class<HttpEntity<Map<String,Object>>>)(Class<?>)HttpEntity.class);\n  when(restTemplate.postForEntity(isA(String.class),httpRequest.capture(),eq(Void.class))).thenReturn(ResponseEntity.ok().build());\n  StepVerifier.create(notifier.notify(new ClientApplicationStatusChangedEvent(application.getId(),application.getVersion(),StatusInfo.ofDown()))).verifyComplete();\n  StepVerifier.create(notifier.notify(new ClientApplicationStatusChangedEvent(application.getId(),application.getVersion(),StatusInfo.ofUp()))).verifyComplete();\n  assertThat(httpRequest.getValue().getHeaders()).containsEntry(\"Content-Type\",Collections.singletonList(\"application/json\"));\n  Map<String,Object> body=httpRequest.getValue().getBody();\n  assertThat(body).containsEntry(\"color\",\"green\");\n  assertThat(body).containsEntry(\"message\",\"<strong>App</strong>/-id- is <strong>UP</strong>\");\n  assertThat(body).containsEntry(\"notify\",Boolean.TRUE);\n  assertThat(body).containsEntry(\"message_format\",\"html\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 186,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 46
      },
      "nodeContext" : "StepVerifier.create(notifier.notify(new ClientApplicationStatusChangedEvent(application.getId(),application.getVersion(),StatusInfo.ofDown())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "StepVerifier",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 79,
      "startColumnNumber" : 8,
      "endLineNumber" : 79,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 44
      },
      "nodeContext" : "StepVerifier.create(notifier.notify(new ClientApplicationStatusChangedEvent(application.getId(),application.getVersion(),StatusInfo.ofUp())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 201,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 61
      },
      "nodeContext" : "StepVerifier.create(notifier.notify(new ClientApplicationStatusChangedEvent(application.getId(),application.getVersion(),StatusInfo.ofUp()))).verifyComplete()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 62
      },
      "nodeContext" : "StepVerifier.create(notifier.notify(new ClientApplicationStatusChangedEvent(application.getId(),application.getVersion(),StatusInfo.ofUp()))).verifyComplete();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1316,
        "startLineNumber" : 69,
        "startColumnNumber" : 50,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  @SuppressWarnings(\"unchecked\") ArgumentCaptor<HttpEntity<Map<String,Object>>> httpRequest=ArgumentCaptor.forClass((Class<HttpEntity<Map<String,Object>>>)(Class<?>)HttpEntity.class);\n  when(restTemplate.postForEntity(isA(String.class),httpRequest.capture(),eq(Void.class))).thenReturn(ResponseEntity.ok().build());\n  StepVerifier.create(notifier.notify(new ClientApplicationStatusChangedEvent(application.getId(),application.getVersion(),StatusInfo.ofDown()))).verifyComplete();\n  StepVerifier.create(notifier.notify(new ClientApplicationStatusChangedEvent(application.getId(),application.getVersion(),StatusInfo.ofUp()))).verifyComplete();\n  assertThat(httpRequest.getValue().getHeaders()).containsEntry(\"Content-Type\",Collections.singletonList(\"application/json\"));\n  Map<String,Object> body=httpRequest.getValue().getBody();\n  assertThat(body).containsEntry(\"color\",\"green\");\n  assertThat(body).containsEntry(\"message\",\"<strong>App</strong>/-id- is <strong>UP</strong>\");\n  assertThat(body).containsEntry(\"notify\",Boolean.TRUE);\n  assertThat(body).containsEntry(\"message_format\",\"html\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1372,
        "startLineNumber" : 68,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void test_onApplicationEvent_resolve(){\n  @SuppressWarnings(\"unchecked\") ArgumentCaptor<HttpEntity<Map<String,Object>>> httpRequest=ArgumentCaptor.forClass((Class<HttpEntity<Map<String,Object>>>)(Class<?>)HttpEntity.class);\n  when(restTemplate.postForEntity(isA(String.class),httpRequest.capture(),eq(Void.class))).thenReturn(ResponseEntity.ok().build());\n  StepVerifier.create(notifier.notify(new ClientApplicationStatusChangedEvent(application.getId(),application.getVersion(),StatusInfo.ofDown()))).verifyComplete();\n  StepVerifier.create(notifier.notify(new ClientApplicationStatusChangedEvent(application.getId(),application.getVersion(),StatusInfo.ofUp()))).verifyComplete();\n  assertThat(httpRequest.getValue().getHeaders()).containsEntry(\"Content-Type\",Collections.singletonList(\"application/json\"));\n  Map<String,Object> body=httpRequest.getValue().getBody();\n  assertThat(body).containsEntry(\"color\",\"green\");\n  assertThat(body).containsEntry(\"message\",\"<strong>App</strong>/-id- is <strong>UP</strong>\");\n  assertThat(body).containsEntry(\"notify\",Boolean.TRUE);\n  assertThat(body).containsEntry(\"message_format\",\"html\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 44
      },
      "nodeContext" : "StepVerifier.create(notifier.notify(new ClientApplicationStatusChangedEvent(application.getId(),application.getVersion(),StatusInfo.ofUp())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 76,
    "startColumnNumber" : 8,
    "endLineNumber" : 76,
    "endColumnNumber" : 20
  }, {
    "charLength" : 12,
    "startLineNumber" : 79,
    "startColumnNumber" : 8,
    "endLineNumber" : 79,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}