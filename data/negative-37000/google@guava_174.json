{
  "id" : 174,
  "expression" : "serialClone(a)",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava-tests/test/com/google/common/util/concurrent/AtomicDoubleTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "serialClone(a)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 277,
      "startColumnNumber" : 21,
      "endLineNumber" : 277,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 277,
        "startColumnNumber" : 17,
        "endLineNumber" : 277,
        "endColumnNumber" : 35
      },
      "nodeContext" : "b=serialClone(a)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 277,
        "startColumnNumber" : 4,
        "endLineNumber" : 277,
        "endColumnNumber" : 36
      },
      "nodeContext" : "AtomicDouble b=serialClone(a);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 445,
        "startLineNumber" : 275,
        "startColumnNumber" : 51,
        "endLineNumber" : 289,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  AtomicDouble a=new AtomicDouble();\n  AtomicDouble b=serialClone(a);\n  assertNotSame(a,b);\n  a.set(-22.0);\n  AtomicDouble c=serialClone(a);\n  assertNotSame(b,c);\n  assertBitEquals(-22.0,a.get());\n  assertBitEquals(0.0,b.get());\n  assertBitEquals(-22.0,c.get());\n  for (  double x : VALUES) {\n    AtomicDouble d=new AtomicDouble(x);\n    assertBitEquals(serialClone(d).get(),d.get());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 554,
        "startLineNumber" : 274,
        "startColumnNumber" : 2,
        "endLineNumber" : 289,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * a deserialized serialized atomic holds same value \n */\npublic void testSerialization() throws Exception {\n  AtomicDouble a=new AtomicDouble();\n  AtomicDouble b=serialClone(a);\n  assertNotSame(a,b);\n  a.set(-22.0);\n  AtomicDouble c=serialClone(a);\n  assertNotSame(b,c);\n  assertBitEquals(-22.0,a.get());\n  assertBitEquals(0.0,b.get());\n  assertBitEquals(-22.0,c.get());\n  for (  double x : VALUES) {\n    AtomicDouble d=new AtomicDouble(x);\n    assertBitEquals(serialClone(d).get(),d.get());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 277,
        "startColumnNumber" : 4,
        "endLineNumber" : 277,
        "endColumnNumber" : 36
      },
      "nodeContext" : "AtomicDouble b=serialClone(a);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "com.google.common.util.concurrent.AtomicDouble"
  }, {
    "nodeContext" : "serialClone(a)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 280,
      "startColumnNumber" : 21,
      "endLineNumber" : 280,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 280,
        "startColumnNumber" : 17,
        "endLineNumber" : 280,
        "endColumnNumber" : 35
      },
      "nodeContext" : "c=serialClone(a)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 280,
        "startColumnNumber" : 4,
        "endLineNumber" : 280,
        "endColumnNumber" : 36
      },
      "nodeContext" : "AtomicDouble c=serialClone(a);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 445,
        "startLineNumber" : 275,
        "startColumnNumber" : 51,
        "endLineNumber" : 289,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  AtomicDouble a=new AtomicDouble();\n  AtomicDouble b=serialClone(a);\n  assertNotSame(a,b);\n  a.set(-22.0);\n  AtomicDouble c=serialClone(a);\n  assertNotSame(b,c);\n  assertBitEquals(-22.0,a.get());\n  assertBitEquals(0.0,b.get());\n  assertBitEquals(-22.0,c.get());\n  for (  double x : VALUES) {\n    AtomicDouble d=new AtomicDouble(x);\n    assertBitEquals(serialClone(d).get(),d.get());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 554,
        "startLineNumber" : 274,
        "startColumnNumber" : 2,
        "endLineNumber" : 289,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * a deserialized serialized atomic holds same value \n */\npublic void testSerialization() throws Exception {\n  AtomicDouble a=new AtomicDouble();\n  AtomicDouble b=serialClone(a);\n  assertNotSame(a,b);\n  a.set(-22.0);\n  AtomicDouble c=serialClone(a);\n  assertNotSame(b,c);\n  assertBitEquals(-22.0,a.get());\n  assertBitEquals(0.0,b.get());\n  assertBitEquals(-22.0,c.get());\n  for (  double x : VALUES) {\n    AtomicDouble d=new AtomicDouble(x);\n    assertBitEquals(serialClone(d).get(),d.get());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 280,
        "startColumnNumber" : 4,
        "endLineNumber" : 280,
        "endColumnNumber" : 36
      },
      "nodeContext" : "AtomicDouble c=serialClone(a);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "com.google.common.util.concurrent.AtomicDouble"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 277,
    "startColumnNumber" : 21,
    "endLineNumber" : 277,
    "endColumnNumber" : 35
  }, {
    "charLength" : 14,
    "startLineNumber" : 280,
    "startColumnNumber" : 21,
    "endLineNumber" : 280,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}