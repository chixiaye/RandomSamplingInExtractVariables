{
  "id" : 296,
  "expression" : "ERROR",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/app/src/main/java/org/thoughtcrime/securesms/components/reminder/ReminderView.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ERROR",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 88,
      "startColumnNumber" : 11,
      "endLineNumber" : 88,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 88,
        "startColumnNumber" : 6,
        "endLineNumber" : 88,
        "endColumnNumber" : 17
      },
      "nodeContext" : "case ERROR:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 528,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (reminder.getImportance()) {\ncase NORMAL:  container.setBackgroundResource(R.drawable.reminder_background_normal);\nbreak;\ncase ERROR:container.setBackgroundResource(R.drawable.reminder_background_error);\ntext.setTextColor(ContextCompat.getColor(getContext(),R.color.core_black));\nbreak;\ncase TERMINAL:container.setBackgroundResource(R.drawable.reminder_background_terminal);\nbreak;\ndefault:throw new IllegalStateException();\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 59,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2195,
        "startLineNumber" : 66,
        "startColumnNumber" : 52,
        "endLineNumber" : 131,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!TextUtils.isEmpty(reminder.getTitle())) {\n    title.setText(reminder.getTitle());\n    title.setVisibility(VISIBLE);\n    space.setVisibility(GONE);\n  }\n else {\n    title.setText(\"\");\n    title.setVisibility(GONE);\n    space.setVisibility(VISIBLE);\n  }\n  if (!reminder.isDismissable()) {\n    space.setVisibility(GONE);\n  }\n  text.setText(reminder.getText());\n  text.setTextColor(ContextCompat.getColor(getContext(),R.color.signal_button_primary_text));\nswitch (reminder.getImportance()) {\ncase NORMAL:    container.setBackgroundResource(R.drawable.reminder_background_normal);\n  break;\ncase ERROR:container.setBackgroundResource(R.drawable.reminder_background_error);\ntext.setTextColor(ContextCompat.getColor(getContext(),R.color.core_black));\nbreak;\ncase TERMINAL:container.setBackgroundResource(R.drawable.reminder_background_terminal);\nbreak;\ndefault:throw new IllegalStateException();\n}\nsetOnClickListener(reminder.getOkListener());\ncloseButton.setVisibility(reminder.isDismissable() ? View.VISIBLE : View.GONE);\ncloseButton.setOnClickListener(new OnClickListener(){\n@Override public void onClick(View v){\nhide();\nif (reminder.getDismissListener() != null) reminder.getDismissListener().onClick(v);\nif (dismissListener != null) dismissListener.onDismiss();\n}\n}\n);\nint progress=reminder.getProgress();\nif (progress != -1) {\nprogressBar.setProgress(progress);\nprogressBar.setVisibility(VISIBLE);\nprogressText.setText(getContext().getString(R.string.reminder_header_progress,progress));\nprogressText.setVisibility(VISIBLE);\n}\n else {\nprogressBar.setVisibility(GONE);\nprogressText.setVisibility(GONE);\n}\nList<Reminder.Action> actions=reminder.getActions();\nif (actions.isEmpty()) {\nactionsRecycler.setVisibility(GONE);\n}\n else {\nactionsRecycler.setVisibility(VISIBLE);\nactionsRecycler.setAdapter(new ReminderActionsAdapter(actions,this::handleActionClicked));\n}\ncontainer.setVisibility(View.VISIBLE);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 297,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2245,
        "startLineNumber" : 66,
        "startColumnNumber" : 2,
        "endLineNumber" : 131,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void showReminder(final Reminder reminder){\n  if (!TextUtils.isEmpty(reminder.getTitle())) {\n    title.setText(reminder.getTitle());\n    title.setVisibility(VISIBLE);\n    space.setVisibility(GONE);\n  }\n else {\n    title.setText(\"\");\n    title.setVisibility(GONE);\n    space.setVisibility(VISIBLE);\n  }\n  if (!reminder.isDismissable()) {\n    space.setVisibility(GONE);\n  }\n  text.setText(reminder.getText());\n  text.setTextColor(ContextCompat.getColor(getContext(),R.color.signal_button_primary_text));\nswitch (reminder.getImportance()) {\ncase NORMAL:    container.setBackgroundResource(R.drawable.reminder_background_normal);\n  break;\ncase ERROR:container.setBackgroundResource(R.drawable.reminder_background_error);\ntext.setTextColor(ContextCompat.getColor(getContext(),R.color.core_black));\nbreak;\ncase TERMINAL:container.setBackgroundResource(R.drawable.reminder_background_terminal);\nbreak;\ndefault:throw new IllegalStateException();\n}\nsetOnClickListener(reminder.getOkListener());\ncloseButton.setVisibility(reminder.isDismissable() ? View.VISIBLE : View.GONE);\ncloseButton.setOnClickListener(new OnClickListener(){\n@Override public void onClick(View v){\nhide();\nif (reminder.getDismissListener() != null) reminder.getDismissListener().onClick(v);\nif (dismissListener != null) dismissListener.onDismiss();\n}\n}\n);\nint progress=reminder.getProgress();\nif (progress != -1) {\nprogressBar.setProgress(progress);\nprogressBar.setVisibility(VISIBLE);\nprogressText.setText(getContext().getString(R.string.reminder_header_progress,progress));\nprogressText.setVisibility(VISIBLE);\n}\n else {\nprogressBar.setVisibility(GONE);\nprogressText.setVisibility(GONE);\n}\nList<Reminder.Action> actions=reminder.getActions();\nif (actions.isEmpty()) {\nactionsRecycler.setVisibility(GONE);\n}\n else {\nactionsRecycler.setVisibility(VISIBLE);\nactionsRecycler.setAdapter(new ReminderActionsAdapter(actions,this::handleActionClicked));\n}\ncontainer.setVisibility(View.VISIBLE);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 306,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 88,
        "startColumnNumber" : 6,
        "endLineNumber" : 88,
        "endColumnNumber" : 17
      },
      "nodeContext" : "case ERROR:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.thoughtcrime.securesms.components.reminder.Reminder.Importance"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 88,
    "startColumnNumber" : 11,
    "endLineNumber" : 88,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ ]
}