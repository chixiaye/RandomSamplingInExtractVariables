{
  "id" : 144,
  "expression" : "lerpTarget",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/tests/gdx-tests/src/com/badlogic/gdx/tests/Vector2dTest.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "lerpTarget",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 72,
      "startColumnNumber" : 23,
      "endLineNumber" : 72,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 72,
        "startColumnNumber" : 23,
        "endLineNumber" : 72,
        "endColumnNumber" : 35
      },
      "nodeContext" : "lerpTarget.x",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 72,
        "startColumnNumber" : 18,
        "endLineNumber" : 72,
        "endColumnNumber" : 35
      },
      "nodeContext" : "-2 + lerpTarget.x",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 72,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 65
      },
      "nodeContext" : "renderer.circle(-2 + lerpTarget.x,2 + lerpTarget.y,0.08f,16)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 72,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 66
      },
      "nodeContext" : "renderer.circle(-2 + lerpTarget.x,2 + lerpTarget.y,0.08f,16);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1900,
        "startLineNumber" : 63,
        "startColumnNumber" : 23,
        "endLineNumber" : 120,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Gdx.gl.glClearColor(0,0,0,0);\n  Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n  renderer.setProjectionMatrix(camera.combined);\n  renderer.begin(ShapeType.Filled);\n  renderer.setColor(1.0f,0,0,0.3f);\n  renderer.circle(-2 + lerpTarget.x,2 + lerpTarget.y,0.08f,16);\n  renderer.circle(-4 + lerpTarget2.x,0 + lerpTarget2.y,0.08f,16);\n  renderer.end();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.RED);\n  renderVectorAt(0,0,Vector2.X);\n  renderer.setColor(Color.GREEN);\n  renderVectorAt(0,0,Vector2.Y);\n  renderer.setColor(Color.YELLOW);\n  renderVectorAt(0,0,sum);\n  final float changeRate=Gdx.graphics.getDeltaTime();\n  renderer.setColor(Color.WHITE);\n  renderVectorAt(2,2,rotating);\n  rotating.rotateDeg(93 * changeRate);\n  renderVectorAt(2,-2,scalingX);\n  scalingX.set(0,MathUtils.sin((System.currentTimeMillis() - start) / 520.0f));\n  renderVectorAt(2,-2,scalingY);\n  scalingY.set(MathUtils.cos((System.currentTimeMillis() - start) / 260.0f),0);\n  renderVectorAt(-2,2,lerping1);\n  lerping1.lerp(lerpTarget,0.025f);\n  if (lerping1.epsilonEquals(lerpTarget,0.05f)) {\n    lerpTarget.set(-1.0f + MathUtils.random(2.0f),-1.0f + MathUtils.random(2.0f)).nor();\n  }\n  timePassed+=Gdx.graphics.getDeltaTime();\n  renderVectorAt(-4,0,lerping2);\n  lerping2.set(lerpStart2);\n  lerping2.interpolate(lerpTarget2,MathUtils.clamp(timePassed / DURATION,0,1),interpolator);\n  if (lerping2.epsilonEquals(lerpTarget2,0.025f)) {\n    lerpTarget2.set(-1.0f + MathUtils.random(2.0f),-1.0f + MathUtils.random(2.0f)).nor();\n    lerpStart2.set(lerping2);\n    timePassed=0;\n  }\n  renderVectorAt(-2,-2,mash);\n  mash.set(0,0).add(rotating).add(scalingX).add(scalingY).add(lerping1);\n  renderer.end();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 346,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1934,
        "startLineNumber" : 62,
        "startColumnNumber" : 1,
        "endLineNumber" : 120,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void render(){\n  Gdx.gl.glClearColor(0,0,0,0);\n  Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n  renderer.setProjectionMatrix(camera.combined);\n  renderer.begin(ShapeType.Filled);\n  renderer.setColor(1.0f,0,0,0.3f);\n  renderer.circle(-2 + lerpTarget.x,2 + lerpTarget.y,0.08f,16);\n  renderer.circle(-4 + lerpTarget2.x,0 + lerpTarget2.y,0.08f,16);\n  renderer.end();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.RED);\n  renderVectorAt(0,0,Vector2.X);\n  renderer.setColor(Color.GREEN);\n  renderVectorAt(0,0,Vector2.Y);\n  renderer.setColor(Color.YELLOW);\n  renderVectorAt(0,0,sum);\n  final float changeRate=Gdx.graphics.getDeltaTime();\n  renderer.setColor(Color.WHITE);\n  renderVectorAt(2,2,rotating);\n  rotating.rotateDeg(93 * changeRate);\n  renderVectorAt(2,-2,scalingX);\n  scalingX.set(0,MathUtils.sin((System.currentTimeMillis() - start) / 520.0f));\n  renderVectorAt(2,-2,scalingY);\n  scalingY.set(MathUtils.cos((System.currentTimeMillis() - start) / 260.0f),0);\n  renderVectorAt(-2,2,lerping1);\n  lerping1.lerp(lerpTarget,0.025f);\n  if (lerping1.epsilonEquals(lerpTarget,0.05f)) {\n    lerpTarget.set(-1.0f + MathUtils.random(2.0f),-1.0f + MathUtils.random(2.0f)).nor();\n  }\n  timePassed+=Gdx.graphics.getDeltaTime();\n  renderVectorAt(-4,0,lerping2);\n  lerping2.set(lerpStart2);\n  lerping2.interpolate(lerpTarget2,MathUtils.clamp(timePassed / DURATION,0,1),interpolator);\n  if (lerping2.epsilonEquals(lerpTarget2,0.025f)) {\n    lerpTarget2.set(-1.0f + MathUtils.random(2.0f),-1.0f + MathUtils.random(2.0f)).nor();\n    lerpStart2.set(lerping2);\n    timePassed=0;\n  }\n  renderVectorAt(-2,-2,mash);\n  mash.set(0,0).add(rotating).add(scalingX).add(scalingY).add(lerping1);\n  renderer.end();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 352,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 72,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 66
      },
      "nodeContext" : "renderer.circle(-2 + lerpTarget.x,2 + lerpTarget.y,0.08f,16);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.badlogic.gdx.math.Vector2"
  }, {
    "nodeContext" : "lerpTarget",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 72,
      "startColumnNumber" : 41,
      "endLineNumber" : 72,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 72,
        "startColumnNumber" : 41,
        "endLineNumber" : 72,
        "endColumnNumber" : 53
      },
      "nodeContext" : "lerpTarget.y",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 72,
        "startColumnNumber" : 37,
        "endLineNumber" : 72,
        "endColumnNumber" : 53
      },
      "nodeContext" : "2 + lerpTarget.y",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 72,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 65
      },
      "nodeContext" : "renderer.circle(-2 + lerpTarget.x,2 + lerpTarget.y,0.08f,16)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 72,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 66
      },
      "nodeContext" : "renderer.circle(-2 + lerpTarget.x,2 + lerpTarget.y,0.08f,16);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1900,
        "startLineNumber" : 63,
        "startColumnNumber" : 23,
        "endLineNumber" : 120,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Gdx.gl.glClearColor(0,0,0,0);\n  Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n  renderer.setProjectionMatrix(camera.combined);\n  renderer.begin(ShapeType.Filled);\n  renderer.setColor(1.0f,0,0,0.3f);\n  renderer.circle(-2 + lerpTarget.x,2 + lerpTarget.y,0.08f,16);\n  renderer.circle(-4 + lerpTarget2.x,0 + lerpTarget2.y,0.08f,16);\n  renderer.end();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.RED);\n  renderVectorAt(0,0,Vector2.X);\n  renderer.setColor(Color.GREEN);\n  renderVectorAt(0,0,Vector2.Y);\n  renderer.setColor(Color.YELLOW);\n  renderVectorAt(0,0,sum);\n  final float changeRate=Gdx.graphics.getDeltaTime();\n  renderer.setColor(Color.WHITE);\n  renderVectorAt(2,2,rotating);\n  rotating.rotateDeg(93 * changeRate);\n  renderVectorAt(2,-2,scalingX);\n  scalingX.set(0,MathUtils.sin((System.currentTimeMillis() - start) / 520.0f));\n  renderVectorAt(2,-2,scalingY);\n  scalingY.set(MathUtils.cos((System.currentTimeMillis() - start) / 260.0f),0);\n  renderVectorAt(-2,2,lerping1);\n  lerping1.lerp(lerpTarget,0.025f);\n  if (lerping1.epsilonEquals(lerpTarget,0.05f)) {\n    lerpTarget.set(-1.0f + MathUtils.random(2.0f),-1.0f + MathUtils.random(2.0f)).nor();\n  }\n  timePassed+=Gdx.graphics.getDeltaTime();\n  renderVectorAt(-4,0,lerping2);\n  lerping2.set(lerpStart2);\n  lerping2.interpolate(lerpTarget2,MathUtils.clamp(timePassed / DURATION,0,1),interpolator);\n  if (lerping2.epsilonEquals(lerpTarget2,0.025f)) {\n    lerpTarget2.set(-1.0f + MathUtils.random(2.0f),-1.0f + MathUtils.random(2.0f)).nor();\n    lerpStart2.set(lerping2);\n    timePassed=0;\n  }\n  renderVectorAt(-2,-2,mash);\n  mash.set(0,0).add(rotating).add(scalingX).add(scalingY).add(lerping1);\n  renderer.end();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 346,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1934,
        "startLineNumber" : 62,
        "startColumnNumber" : 1,
        "endLineNumber" : 120,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void render(){\n  Gdx.gl.glClearColor(0,0,0,0);\n  Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n  renderer.setProjectionMatrix(camera.combined);\n  renderer.begin(ShapeType.Filled);\n  renderer.setColor(1.0f,0,0,0.3f);\n  renderer.circle(-2 + lerpTarget.x,2 + lerpTarget.y,0.08f,16);\n  renderer.circle(-4 + lerpTarget2.x,0 + lerpTarget2.y,0.08f,16);\n  renderer.end();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.RED);\n  renderVectorAt(0,0,Vector2.X);\n  renderer.setColor(Color.GREEN);\n  renderVectorAt(0,0,Vector2.Y);\n  renderer.setColor(Color.YELLOW);\n  renderVectorAt(0,0,sum);\n  final float changeRate=Gdx.graphics.getDeltaTime();\n  renderer.setColor(Color.WHITE);\n  renderVectorAt(2,2,rotating);\n  rotating.rotateDeg(93 * changeRate);\n  renderVectorAt(2,-2,scalingX);\n  scalingX.set(0,MathUtils.sin((System.currentTimeMillis() - start) / 520.0f));\n  renderVectorAt(2,-2,scalingY);\n  scalingY.set(MathUtils.cos((System.currentTimeMillis() - start) / 260.0f),0);\n  renderVectorAt(-2,2,lerping1);\n  lerping1.lerp(lerpTarget,0.025f);\n  if (lerping1.epsilonEquals(lerpTarget,0.05f)) {\n    lerpTarget.set(-1.0f + MathUtils.random(2.0f),-1.0f + MathUtils.random(2.0f)).nor();\n  }\n  timePassed+=Gdx.graphics.getDeltaTime();\n  renderVectorAt(-4,0,lerping2);\n  lerping2.set(lerpStart2);\n  lerping2.interpolate(lerpTarget2,MathUtils.clamp(timePassed / DURATION,0,1),interpolator);\n  if (lerping2.epsilonEquals(lerpTarget2,0.025f)) {\n    lerpTarget2.set(-1.0f + MathUtils.random(2.0f),-1.0f + MathUtils.random(2.0f)).nor();\n    lerpStart2.set(lerping2);\n    timePassed=0;\n  }\n  renderVectorAt(-2,-2,mash);\n  mash.set(0,0).add(rotating).add(scalingX).add(scalingY).add(lerping1);\n  renderer.end();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 352,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 72,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 66
      },
      "nodeContext" : "renderer.circle(-2 + lerpTarget.x,2 + lerpTarget.y,0.08f,16);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.badlogic.gdx.math.Vector2"
  }, {
    "nodeContext" : "lerpTarget",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 98,
      "startColumnNumber" : 16,
      "endLineNumber" : 98,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 98,
        "startColumnNumber" : 2,
        "endLineNumber" : 98,
        "endColumnNumber" : 35
      },
      "nodeContext" : "lerping1.lerp(lerpTarget,0.025f)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 98,
        "startColumnNumber" : 2,
        "endLineNumber" : 98,
        "endColumnNumber" : 36
      },
      "nodeContext" : "lerping1.lerp(lerpTarget,0.025f);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1900,
        "startLineNumber" : 63,
        "startColumnNumber" : 23,
        "endLineNumber" : 120,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Gdx.gl.glClearColor(0,0,0,0);\n  Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n  renderer.setProjectionMatrix(camera.combined);\n  renderer.begin(ShapeType.Filled);\n  renderer.setColor(1.0f,0,0,0.3f);\n  renderer.circle(-2 + lerpTarget.x,2 + lerpTarget.y,0.08f,16);\n  renderer.circle(-4 + lerpTarget2.x,0 + lerpTarget2.y,0.08f,16);\n  renderer.end();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.RED);\n  renderVectorAt(0,0,Vector2.X);\n  renderer.setColor(Color.GREEN);\n  renderVectorAt(0,0,Vector2.Y);\n  renderer.setColor(Color.YELLOW);\n  renderVectorAt(0,0,sum);\n  final float changeRate=Gdx.graphics.getDeltaTime();\n  renderer.setColor(Color.WHITE);\n  renderVectorAt(2,2,rotating);\n  rotating.rotateDeg(93 * changeRate);\n  renderVectorAt(2,-2,scalingX);\n  scalingX.set(0,MathUtils.sin((System.currentTimeMillis() - start) / 520.0f));\n  renderVectorAt(2,-2,scalingY);\n  scalingY.set(MathUtils.cos((System.currentTimeMillis() - start) / 260.0f),0);\n  renderVectorAt(-2,2,lerping1);\n  lerping1.lerp(lerpTarget,0.025f);\n  if (lerping1.epsilonEquals(lerpTarget,0.05f)) {\n    lerpTarget.set(-1.0f + MathUtils.random(2.0f),-1.0f + MathUtils.random(2.0f)).nor();\n  }\n  timePassed+=Gdx.graphics.getDeltaTime();\n  renderVectorAt(-4,0,lerping2);\n  lerping2.set(lerpStart2);\n  lerping2.interpolate(lerpTarget2,MathUtils.clamp(timePassed / DURATION,0,1),interpolator);\n  if (lerping2.epsilonEquals(lerpTarget2,0.025f)) {\n    lerpTarget2.set(-1.0f + MathUtils.random(2.0f),-1.0f + MathUtils.random(2.0f)).nor();\n    lerpStart2.set(lerping2);\n    timePassed=0;\n  }\n  renderVectorAt(-2,-2,mash);\n  mash.set(0,0).add(rotating).add(scalingX).add(scalingY).add(lerping1);\n  renderer.end();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 346,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1934,
        "startLineNumber" : 62,
        "startColumnNumber" : 1,
        "endLineNumber" : 120,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void render(){\n  Gdx.gl.glClearColor(0,0,0,0);\n  Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n  renderer.setProjectionMatrix(camera.combined);\n  renderer.begin(ShapeType.Filled);\n  renderer.setColor(1.0f,0,0,0.3f);\n  renderer.circle(-2 + lerpTarget.x,2 + lerpTarget.y,0.08f,16);\n  renderer.circle(-4 + lerpTarget2.x,0 + lerpTarget2.y,0.08f,16);\n  renderer.end();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.RED);\n  renderVectorAt(0,0,Vector2.X);\n  renderer.setColor(Color.GREEN);\n  renderVectorAt(0,0,Vector2.Y);\n  renderer.setColor(Color.YELLOW);\n  renderVectorAt(0,0,sum);\n  final float changeRate=Gdx.graphics.getDeltaTime();\n  renderer.setColor(Color.WHITE);\n  renderVectorAt(2,2,rotating);\n  rotating.rotateDeg(93 * changeRate);\n  renderVectorAt(2,-2,scalingX);\n  scalingX.set(0,MathUtils.sin((System.currentTimeMillis() - start) / 520.0f));\n  renderVectorAt(2,-2,scalingY);\n  scalingY.set(MathUtils.cos((System.currentTimeMillis() - start) / 260.0f),0);\n  renderVectorAt(-2,2,lerping1);\n  lerping1.lerp(lerpTarget,0.025f);\n  if (lerping1.epsilonEquals(lerpTarget,0.05f)) {\n    lerpTarget.set(-1.0f + MathUtils.random(2.0f),-1.0f + MathUtils.random(2.0f)).nor();\n  }\n  timePassed+=Gdx.graphics.getDeltaTime();\n  renderVectorAt(-4,0,lerping2);\n  lerping2.set(lerpStart2);\n  lerping2.interpolate(lerpTarget2,MathUtils.clamp(timePassed / DURATION,0,1),interpolator);\n  if (lerping2.epsilonEquals(lerpTarget2,0.025f)) {\n    lerpTarget2.set(-1.0f + MathUtils.random(2.0f),-1.0f + MathUtils.random(2.0f)).nor();\n    lerpStart2.set(lerping2);\n    timePassed=0;\n  }\n  renderVectorAt(-2,-2,mash);\n  mash.set(0,0).add(rotating).add(scalingX).add(scalingY).add(lerping1);\n  renderer.end();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 352,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 98,
        "startColumnNumber" : 2,
        "endLineNumber" : 98,
        "endColumnNumber" : 36
      },
      "nodeContext" : "lerping1.lerp(lerpTarget,0.025f);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.badlogic.gdx.math.Vector2"
  }, {
    "nodeContext" : "lerpTarget",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 100,
      "startColumnNumber" : 29,
      "endLineNumber" : 100,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 100,
        "startColumnNumber" : 6,
        "endLineNumber" : 100,
        "endColumnNumber" : 47
      },
      "nodeContext" : "lerping1.epsilonEquals(lerpTarget,0.05f)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 100,
        "startColumnNumber" : 2,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (lerping1.epsilonEquals(lerpTarget,0.05f)) {\n  lerpTarget.set(-1.0f + MathUtils.random(2.0f),-1.0f + MathUtils.random(2.0f)).nor();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1900,
        "startLineNumber" : 63,
        "startColumnNumber" : 23,
        "endLineNumber" : 120,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Gdx.gl.glClearColor(0,0,0,0);\n  Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n  renderer.setProjectionMatrix(camera.combined);\n  renderer.begin(ShapeType.Filled);\n  renderer.setColor(1.0f,0,0,0.3f);\n  renderer.circle(-2 + lerpTarget.x,2 + lerpTarget.y,0.08f,16);\n  renderer.circle(-4 + lerpTarget2.x,0 + lerpTarget2.y,0.08f,16);\n  renderer.end();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.RED);\n  renderVectorAt(0,0,Vector2.X);\n  renderer.setColor(Color.GREEN);\n  renderVectorAt(0,0,Vector2.Y);\n  renderer.setColor(Color.YELLOW);\n  renderVectorAt(0,0,sum);\n  final float changeRate=Gdx.graphics.getDeltaTime();\n  renderer.setColor(Color.WHITE);\n  renderVectorAt(2,2,rotating);\n  rotating.rotateDeg(93 * changeRate);\n  renderVectorAt(2,-2,scalingX);\n  scalingX.set(0,MathUtils.sin((System.currentTimeMillis() - start) / 520.0f));\n  renderVectorAt(2,-2,scalingY);\n  scalingY.set(MathUtils.cos((System.currentTimeMillis() - start) / 260.0f),0);\n  renderVectorAt(-2,2,lerping1);\n  lerping1.lerp(lerpTarget,0.025f);\n  if (lerping1.epsilonEquals(lerpTarget,0.05f)) {\n    lerpTarget.set(-1.0f + MathUtils.random(2.0f),-1.0f + MathUtils.random(2.0f)).nor();\n  }\n  timePassed+=Gdx.graphics.getDeltaTime();\n  renderVectorAt(-4,0,lerping2);\n  lerping2.set(lerpStart2);\n  lerping2.interpolate(lerpTarget2,MathUtils.clamp(timePassed / DURATION,0,1),interpolator);\n  if (lerping2.epsilonEquals(lerpTarget2,0.025f)) {\n    lerpTarget2.set(-1.0f + MathUtils.random(2.0f),-1.0f + MathUtils.random(2.0f)).nor();\n    lerpStart2.set(lerping2);\n    timePassed=0;\n  }\n  renderVectorAt(-2,-2,mash);\n  mash.set(0,0).add(rotating).add(scalingX).add(scalingY).add(lerping1);\n  renderer.end();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 346,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1934,
        "startLineNumber" : 62,
        "startColumnNumber" : 1,
        "endLineNumber" : 120,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void render(){\n  Gdx.gl.glClearColor(0,0,0,0);\n  Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n  renderer.setProjectionMatrix(camera.combined);\n  renderer.begin(ShapeType.Filled);\n  renderer.setColor(1.0f,0,0,0.3f);\n  renderer.circle(-2 + lerpTarget.x,2 + lerpTarget.y,0.08f,16);\n  renderer.circle(-4 + lerpTarget2.x,0 + lerpTarget2.y,0.08f,16);\n  renderer.end();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.RED);\n  renderVectorAt(0,0,Vector2.X);\n  renderer.setColor(Color.GREEN);\n  renderVectorAt(0,0,Vector2.Y);\n  renderer.setColor(Color.YELLOW);\n  renderVectorAt(0,0,sum);\n  final float changeRate=Gdx.graphics.getDeltaTime();\n  renderer.setColor(Color.WHITE);\n  renderVectorAt(2,2,rotating);\n  rotating.rotateDeg(93 * changeRate);\n  renderVectorAt(2,-2,scalingX);\n  scalingX.set(0,MathUtils.sin((System.currentTimeMillis() - start) / 520.0f));\n  renderVectorAt(2,-2,scalingY);\n  scalingY.set(MathUtils.cos((System.currentTimeMillis() - start) / 260.0f),0);\n  renderVectorAt(-2,2,lerping1);\n  lerping1.lerp(lerpTarget,0.025f);\n  if (lerping1.epsilonEquals(lerpTarget,0.05f)) {\n    lerpTarget.set(-1.0f + MathUtils.random(2.0f),-1.0f + MathUtils.random(2.0f)).nor();\n  }\n  timePassed+=Gdx.graphics.getDeltaTime();\n  renderVectorAt(-4,0,lerping2);\n  lerping2.set(lerpStart2);\n  lerping2.interpolate(lerpTarget2,MathUtils.clamp(timePassed / DURATION,0,1),interpolator);\n  if (lerping2.epsilonEquals(lerpTarget2,0.025f)) {\n    lerpTarget2.set(-1.0f + MathUtils.random(2.0f),-1.0f + MathUtils.random(2.0f)).nor();\n    lerpStart2.set(lerping2);\n    timePassed=0;\n  }\n  renderVectorAt(-2,-2,mash);\n  mash.set(0,0).add(rotating).add(scalingX).add(scalingY).add(lerping1);\n  renderer.end();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 352,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 100,
        "startColumnNumber" : 6,
        "endLineNumber" : 100,
        "endColumnNumber" : 47
      },
      "nodeContext" : "lerping1.epsilonEquals(lerpTarget,0.05f)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.badlogic.gdx.math.Vector2"
  }, {
    "nodeContext" : "lerpTarget",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 101,
      "startColumnNumber" : 3,
      "endLineNumber" : 101,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 101,
        "startColumnNumber" : 3,
        "endLineNumber" : 101,
        "endColumnNumber" : 81
      },
      "nodeContext" : "lerpTarget.set(-1.0f + MathUtils.random(2.0f),-1.0f + MathUtils.random(2.0f))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 101,
        "startColumnNumber" : 3,
        "endLineNumber" : 101,
        "endColumnNumber" : 87
      },
      "nodeContext" : "lerpTarget.set(-1.0f + MathUtils.random(2.0f),-1.0f + MathUtils.random(2.0f)).nor()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 101,
        "startColumnNumber" : 3,
        "endLineNumber" : 101,
        "endColumnNumber" : 88
      },
      "nodeContext" : "lerpTarget.set(-1.0f + MathUtils.random(2.0f),-1.0f + MathUtils.random(2.0f)).nor();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 100,
        "startColumnNumber" : 49,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  lerpTarget.set(-1.0f + MathUtils.random(2.0f),-1.0f + MathUtils.random(2.0f)).nor();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 100,
        "startColumnNumber" : 2,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (lerping1.epsilonEquals(lerpTarget,0.05f)) {\n  lerpTarget.set(-1.0f + MathUtils.random(2.0f),-1.0f + MathUtils.random(2.0f)).nor();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1900,
        "startLineNumber" : 63,
        "startColumnNumber" : 23,
        "endLineNumber" : 120,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Gdx.gl.glClearColor(0,0,0,0);\n  Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n  renderer.setProjectionMatrix(camera.combined);\n  renderer.begin(ShapeType.Filled);\n  renderer.setColor(1.0f,0,0,0.3f);\n  renderer.circle(-2 + lerpTarget.x,2 + lerpTarget.y,0.08f,16);\n  renderer.circle(-4 + lerpTarget2.x,0 + lerpTarget2.y,0.08f,16);\n  renderer.end();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.RED);\n  renderVectorAt(0,0,Vector2.X);\n  renderer.setColor(Color.GREEN);\n  renderVectorAt(0,0,Vector2.Y);\n  renderer.setColor(Color.YELLOW);\n  renderVectorAt(0,0,sum);\n  final float changeRate=Gdx.graphics.getDeltaTime();\n  renderer.setColor(Color.WHITE);\n  renderVectorAt(2,2,rotating);\n  rotating.rotateDeg(93 * changeRate);\n  renderVectorAt(2,-2,scalingX);\n  scalingX.set(0,MathUtils.sin((System.currentTimeMillis() - start) / 520.0f));\n  renderVectorAt(2,-2,scalingY);\n  scalingY.set(MathUtils.cos((System.currentTimeMillis() - start) / 260.0f),0);\n  renderVectorAt(-2,2,lerping1);\n  lerping1.lerp(lerpTarget,0.025f);\n  if (lerping1.epsilonEquals(lerpTarget,0.05f)) {\n    lerpTarget.set(-1.0f + MathUtils.random(2.0f),-1.0f + MathUtils.random(2.0f)).nor();\n  }\n  timePassed+=Gdx.graphics.getDeltaTime();\n  renderVectorAt(-4,0,lerping2);\n  lerping2.set(lerpStart2);\n  lerping2.interpolate(lerpTarget2,MathUtils.clamp(timePassed / DURATION,0,1),interpolator);\n  if (lerping2.epsilonEquals(lerpTarget2,0.025f)) {\n    lerpTarget2.set(-1.0f + MathUtils.random(2.0f),-1.0f + MathUtils.random(2.0f)).nor();\n    lerpStart2.set(lerping2);\n    timePassed=0;\n  }\n  renderVectorAt(-2,-2,mash);\n  mash.set(0,0).add(rotating).add(scalingX).add(scalingY).add(lerping1);\n  renderer.end();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 346,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1934,
        "startLineNumber" : 62,
        "startColumnNumber" : 1,
        "endLineNumber" : 120,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void render(){\n  Gdx.gl.glClearColor(0,0,0,0);\n  Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n  renderer.setProjectionMatrix(camera.combined);\n  renderer.begin(ShapeType.Filled);\n  renderer.setColor(1.0f,0,0,0.3f);\n  renderer.circle(-2 + lerpTarget.x,2 + lerpTarget.y,0.08f,16);\n  renderer.circle(-4 + lerpTarget2.x,0 + lerpTarget2.y,0.08f,16);\n  renderer.end();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.RED);\n  renderVectorAt(0,0,Vector2.X);\n  renderer.setColor(Color.GREEN);\n  renderVectorAt(0,0,Vector2.Y);\n  renderer.setColor(Color.YELLOW);\n  renderVectorAt(0,0,sum);\n  final float changeRate=Gdx.graphics.getDeltaTime();\n  renderer.setColor(Color.WHITE);\n  renderVectorAt(2,2,rotating);\n  rotating.rotateDeg(93 * changeRate);\n  renderVectorAt(2,-2,scalingX);\n  scalingX.set(0,MathUtils.sin((System.currentTimeMillis() - start) / 520.0f));\n  renderVectorAt(2,-2,scalingY);\n  scalingY.set(MathUtils.cos((System.currentTimeMillis() - start) / 260.0f),0);\n  renderVectorAt(-2,2,lerping1);\n  lerping1.lerp(lerpTarget,0.025f);\n  if (lerping1.epsilonEquals(lerpTarget,0.05f)) {\n    lerpTarget.set(-1.0f + MathUtils.random(2.0f),-1.0f + MathUtils.random(2.0f)).nor();\n  }\n  timePassed+=Gdx.graphics.getDeltaTime();\n  renderVectorAt(-4,0,lerping2);\n  lerping2.set(lerpStart2);\n  lerping2.interpolate(lerpTarget2,MathUtils.clamp(timePassed / DURATION,0,1),interpolator);\n  if (lerping2.epsilonEquals(lerpTarget2,0.025f)) {\n    lerpTarget2.set(-1.0f + MathUtils.random(2.0f),-1.0f + MathUtils.random(2.0f)).nor();\n    lerpStart2.set(lerping2);\n    timePassed=0;\n  }\n  renderVectorAt(-2,-2,mash);\n  mash.set(0,0).add(rotating).add(scalingX).add(scalingY).add(lerping1);\n  renderer.end();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 352,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 101,
        "startColumnNumber" : 3,
        "endLineNumber" : 101,
        "endColumnNumber" : 88
      },
      "nodeContext" : "lerpTarget.set(-1.0f + MathUtils.random(2.0f),-1.0f + MathUtils.random(2.0f)).nor();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "com.badlogic.gdx.math.Vector2"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 72,
    "startColumnNumber" : 23,
    "endLineNumber" : 72,
    "endColumnNumber" : 33
  }, {
    "charLength" : 10,
    "startLineNumber" : 72,
    "startColumnNumber" : 41,
    "endLineNumber" : 72,
    "endColumnNumber" : 51
  }, {
    "charLength" : 10,
    "startLineNumber" : 98,
    "startColumnNumber" : 16,
    "endLineNumber" : 98,
    "endColumnNumber" : 26
  }, {
    "charLength" : 10,
    "startLineNumber" : 100,
    "startColumnNumber" : 29,
    "endLineNumber" : 100,
    "endColumnNumber" : 39
  }, {
    "charLength" : 10,
    "startLineNumber" : 101,
    "startColumnNumber" : 3,
    "endLineNumber" : 101,
    "endColumnNumber" : 13
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  } ]
}