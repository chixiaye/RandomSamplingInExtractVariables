{
  "id" : 281,
  "expression" : "ClientConfig.defaultConfig()",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/client/src/org/openqa/selenium/chromium/ChromiumDevToolsLocator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ClientConfig.defaultConfig()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 81,
      "startColumnNumber" : 26,
      "endLineNumber" : 81,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 81,
        "startColumnNumber" : 26,
        "endLineNumber" : 81,
        "endColumnNumber" : 75
      },
      "nodeContext" : "ClientConfig.defaultConfig().baseUri(reportedUri)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 81,
        "startColumnNumber" : 17,
        "endLineNumber" : 81,
        "endColumnNumber" : 75
      },
      "nodeContext" : "config=ClientConfig.defaultConfig().baseUri(reportedUri)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 76
      },
      "nodeContext" : "ClientConfig config=ClientConfig.defaultConfig().baseUri(reportedUri);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 839,
        "startLineNumber" : 77,
        "startColumnNumber" : 21,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Require.nonNull(\"HTTP client factory\",clientFactory);\n  Require.nonNull(\"DevTools URI\",reportedUri);\n  ClientConfig config=ClientConfig.defaultConfig().baseUri(reportedUri);\n  HttpClient client=clientFactory.createClient(config);\n  HttpResponse res=client.execute(new HttpRequest(GET,\"/json/version\"));\n  if (res.getStatus() != HTTP_OK) {\n    return Optional.empty();\n  }\n  Map<String,Object> versionData=JSON.toType(string(res),MAP_TYPE);\n  Object raw=versionData.get(\"webSocketDebuggerUrl\");\n  if (!(raw instanceof String)) {\n    return Optional.empty();\n  }\n  String debuggerUrl=(String)raw;\n  try {\n    return Optional.of(new URI(debuggerUrl));\n  }\n catch (  URISyntaxException e) {\n    LOG.warning(\"Invalid URI for endpoint \" + raw);\n    return Optional.empty();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 131,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 942,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static Optional<URI> getCdpEndPoint(HttpClient.Factory clientFactory,URI reportedUri){\n  Require.nonNull(\"HTTP client factory\",clientFactory);\n  Require.nonNull(\"DevTools URI\",reportedUri);\n  ClientConfig config=ClientConfig.defaultConfig().baseUri(reportedUri);\n  HttpClient client=clientFactory.createClient(config);\n  HttpResponse res=client.execute(new HttpRequest(GET,\"/json/version\"));\n  if (res.getStatus() != HTTP_OK) {\n    return Optional.empty();\n  }\n  Map<String,Object> versionData=JSON.toType(string(res),MAP_TYPE);\n  Object raw=versionData.get(\"webSocketDebuggerUrl\");\n  if (!(raw instanceof String)) {\n    return Optional.empty();\n  }\n  String debuggerUrl=(String)raw;\n  try {\n    return Optional.of(new URI(debuggerUrl));\n  }\n catch (  URISyntaxException e) {\n    LOG.warning(\"Invalid URI for endpoint \" + raw);\n    return Optional.empty();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 150,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 76
      },
      "nodeContext" : "ClientConfig config=ClientConfig.defaultConfig().baseUri(reportedUri);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "org.openqa.selenium.remote.http.ClientConfig"
  } ],
  "positionList" : [ {
    "charLength" : 28,
    "startLineNumber" : 81,
    "startColumnNumber" : 26,
    "endLineNumber" : 81,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}