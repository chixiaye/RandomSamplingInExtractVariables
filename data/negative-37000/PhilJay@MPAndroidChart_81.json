{
  "id" : 81,
  "expression" : "(entryPoint.getVal() - startEntry.getVal()) * (xDiffEndStart)",
  "projectName" : "PhilJay@MPAndroidChart",
  "commitID" : "43046425fc2ed73d0d3f177759706116e02a9053",
  "filePath" : "/MPChartLib/src/com/github/mikephil/charting/data/filter/Approximator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(entryPoint.getVal() - startEntry.getVal()) * (xDiffEndStart)",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 77,
      "startLineNumber" : 226,
      "startColumnNumber" : 18,
      "endLineNumber" : 227,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 11,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 173,
        "startLineNumber" : 224,
        "startColumnNumber" : 24,
        "endLineNumber" : 227,
        "endColumnNumber" : 33
      },
      "nodeContext" : "(xDiffEntryStart) * (endEntry.getVal() - startEntry.getVal()) - (entryPoint.getVal() - startEntry.getVal()) * (xDiffEndStart)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 224,
        "startColumnNumber" : 15,
        "endLineNumber" : 227,
        "endColumnNumber" : 34
      },
      "nodeContext" : "Math.abs((xDiffEntryStart) * (endEntry.getVal() - startEntry.getVal()) - (entryPoint.getVal() - startEntry.getVal()) * (xDiffEndStart))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 214,
        "startLineNumber" : 224,
        "startColumnNumber" : 15,
        "endLineNumber" : 228,
        "endColumnNumber" : 30
      },
      "nodeContext" : "Math.abs((xDiffEntryStart) * (endEntry.getVal() - startEntry.getVal()) - (entryPoint.getVal() - startEntry.getVal()) * (xDiffEndStart)) / normalLength",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 222,
        "startLineNumber" : 224,
        "startColumnNumber" : 8,
        "endLineNumber" : 228,
        "endColumnNumber" : 31
      },
      "nodeContext" : "return Math.abs((xDiffEntryStart) * (endEntry.getVal() - startEntry.getVal()) - (entryPoint.getVal() - startEntry.getVal()) * (xDiffEndStart)) / normalLength;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 29,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 642,
        "startLineNumber" : 215,
        "startColumnNumber" : 94,
        "endLineNumber" : 229,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  float xDiffEndStart=(float)endEntry.getXIndex() - (float)startEntry.getXIndex();\n  float xDiffEntryStart=(float)entryPoint.getXIndex() - (float)startEntry.getXIndex();\n  double normalLength=Math.sqrt((xDiffEndStart) * (xDiffEndStart) + (endEntry.getVal() - startEntry.getVal()) * (endEntry.getVal() - startEntry.getVal()));\n  return Math.abs((xDiffEntryStart) * (endEntry.getVal() - startEntry.getVal()) - (entryPoint.getVal() - startEntry.getVal()) * (xDiffEndStart)) / normalLength;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1043,
        "startLineNumber" : 205,
        "startColumnNumber" : 4,
        "endLineNumber" : 229,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * calculate the distance between a line between two entries and an entry (point)\n * @param startEntry line startpoint\n * @param endEntry line endpoint\n * @param entryPoint the point to which the distance is measured from theline\n * @return\n */\npublic double calcPointToLineDistance(Entry startEntry,Entry endEntry,Entry entryPoint){\n  float xDiffEndStart=(float)endEntry.getXIndex() - (float)startEntry.getXIndex();\n  float xDiffEntryStart=(float)entryPoint.getXIndex() - (float)startEntry.getXIndex();\n  double normalLength=Math.sqrt((xDiffEndStart) * (xDiffEndStart) + (endEntry.getVal() - startEntry.getVal()) * (endEntry.getVal() - startEntry.getVal()));\n  return Math.abs((xDiffEntryStart) * (endEntry.getVal() - startEntry.getVal()) - (entryPoint.getVal() - startEntry.getVal()) * (xDiffEndStart)) / normalLength;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 173,
        "startLineNumber" : 224,
        "startColumnNumber" : 24,
        "endLineNumber" : 227,
        "endColumnNumber" : 33
      },
      "nodeContext" : "(xDiffEntryStart) * (endEntry.getVal() - startEntry.getVal()) - (entryPoint.getVal() - startEntry.getVal()) * (xDiffEndStart)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 23,
      "astHeight" : 6
    },
    "tokenLength" : 7,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 77,
    "startLineNumber" : 226,
    "startColumnNumber" : 18,
    "endLineNumber" : 227,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}