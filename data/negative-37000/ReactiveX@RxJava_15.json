{
  "id" : 15,
  "expression" : "new AtomicBoolean()",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableSwitchTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new AtomicBoolean()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 491,
      "startColumnNumber" : 45,
      "endLineNumber" : 491,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 491,
        "startColumnNumber" : 28,
        "endLineNumber" : 491,
        "endColumnNumber" : 64
      },
      "nodeContext" : "isUnsubscribed=new AtomicBoolean()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 491,
        "startColumnNumber" : 8,
        "endLineNumber" : 491,
        "endColumnNumber" : 65
      },
      "nodeContext" : "final AtomicBoolean isUnsubscribed=new AtomicBoolean();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 724,
        "startLineNumber" : 490,
        "startColumnNumber" : 34,
        "endLineNumber" : 504,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final AtomicBoolean isUnsubscribed=new AtomicBoolean();\n  Flowable.switchOnNext(Flowable.create(new Publisher<Flowable<Integer>>(){\n    @Override public void subscribe(    final Subscriber<? super Flowable<Integer>> subscriber){\n      BooleanSubscription bs=new BooleanSubscription();\n      subscriber.onSubscribe(bs);\n      subscriber.onNext(Flowable.just(1));\n      isUnsubscribed.set(bs.isCancelled());\n    }\n  }\n)).take(1).subscribe();\n  assertTrue(\"Switch doesn't propagate 'unsubscribe'\",isUnsubscribed.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 765,
        "startLineNumber" : 489,
        "startColumnNumber" : 4,
        "endLineNumber" : 504,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testUnsubscribe(){\n  final AtomicBoolean isUnsubscribed=new AtomicBoolean();\n  Flowable.switchOnNext(Flowable.create(new Publisher<Flowable<Integer>>(){\n    @Override public void subscribe(    final Subscriber<? super Flowable<Integer>> subscriber){\n      BooleanSubscription bs=new BooleanSubscription();\n      subscriber.onSubscribe(bs);\n      subscriber.onNext(Flowable.just(1));\n      isUnsubscribed.set(bs.isCancelled());\n    }\n  }\n)).take(1).subscribe();\n  assertTrue(\"Switch doesn't propagate 'unsubscribe'\",isUnsubscribed.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 491,
        "startColumnNumber" : 8,
        "endLineNumber" : 491,
        "endColumnNumber" : 65
      },
      "nodeContext" : "final AtomicBoolean isUnsubscribed=new AtomicBoolean();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.atomic.AtomicBoolean"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 491,
    "startColumnNumber" : 45,
    "endLineNumber" : 491,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ ]
}