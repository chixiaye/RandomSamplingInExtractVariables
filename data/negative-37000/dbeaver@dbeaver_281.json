{
  "id" : 281,
  "expression" : "0",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ext.hana/src/org/jkiss/dbeaver/ext/hana/edit/HANATableColumnManager.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 36,
      "startColumnNumber" : 24,
      "endLineNumber" : 36,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 36,
        "startColumnNumber" : 12,
        "endLineNumber" : 36,
        "endColumnNumber" : 31
      },
      "nodeContext" : "decl.insert(0,\"(\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 36,
        "startColumnNumber" : 12,
        "endLineNumber" : 36,
        "endColumnNumber" : 32
      },
      "nodeContext" : "decl.insert(0,\"(\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 35,
        "startColumnNumber" : 33,
        "endLineNumber" : 38,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  decl.insert(0,\"(\");\n  decl.append(\")\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (owner.isPersisted()) {\n  decl.insert(0,\"(\");\n  decl.append(\")\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 227,
        "startLineNumber" : 33,
        "startColumnNumber" : 175,
        "endLineNumber" : 40,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringBuilder decl=super.getNestedDeclaration(monitor,owner,command,options);\n  if (owner.isPersisted()) {\n    decl.insert(0,\"(\");\n    decl.append(\")\");\n  }\n  return decl;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 412,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public StringBuilder getNestedDeclaration(DBRProgressMonitor monitor,GenericTableBase owner,DBECommandAbstract<GenericTableColumn> command,Map<String,Object> options){\n  StringBuilder decl=super.getNestedDeclaration(monitor,owner,command,options);\n  if (owner.isPersisted()) {\n    decl.insert(0,\"(\");\n    decl.append(\")\");\n  }\n  return decl;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 61,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 36,
        "startColumnNumber" : 12,
        "endLineNumber" : 36,
        "endColumnNumber" : 32
      },
      "nodeContext" : "decl.insert(0,\"(\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 36,
    "startColumnNumber" : 24,
    "endLineNumber" : 36,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ ]
}