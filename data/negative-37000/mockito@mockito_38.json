{
  "id" : 38,
  "expression" : "gt(new BigDecimal(\"1\"))",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitousage/matchers/MatchersTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "gt(new BigDecimal(\"1\"))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 235,
      "startColumnNumber" : 25,
      "endLineNumber" : 235,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 235,
        "startColumnNumber" : 13,
        "endLineNumber" : 235,
        "endColumnNumber" : 49
      },
      "nodeContext" : "mock.oneArg(gt(new BigDecimal(\"1\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 235,
        "startColumnNumber" : 8,
        "endLineNumber" : 235,
        "endColumnNumber" : 50
      },
      "nodeContext" : "when(mock.oneArg(gt(new BigDecimal(\"1\"))))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 235,
        "startColumnNumber" : 8,
        "endLineNumber" : 235,
        "endColumnNumber" : 66
      },
      "nodeContext" : "when(mock.oneArg(gt(new BigDecimal(\"1\")))).thenReturn(\"8\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 235,
        "startColumnNumber" : 8,
        "endLineNumber" : 235,
        "endColumnNumber" : 67
      },
      "nodeContext" : "when(mock.oneArg(gt(new BigDecimal(\"1\")))).thenReturn(\"8\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 870,
        "startLineNumber" : 228,
        "startColumnNumber" : 50,
        "endLineNumber" : 248,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  when(mock.oneArg(gt((byte)1))).thenReturn(\"1\");\n  when(mock.oneArg(gt(1D))).thenReturn(\"3\");\n  when(mock.oneArg(gt(1F))).thenReturn(\"4\");\n  when(mock.oneArg(gt(1))).thenReturn(\"5\");\n  when(mock.oneArg(gt(1L))).thenReturn(\"6\");\n  when(mock.oneArg(gt((short)1))).thenReturn(\"7\");\n  when(mock.oneArg(gt(new BigDecimal(\"1\")))).thenReturn(\"8\");\n  assertEquals(\"1\",mock.oneArg((byte)2));\n  assertEquals(null,mock.oneArg((byte)1));\n  assertEquals(\"3\",mock.oneArg(2D));\n  assertEquals(\"7\",mock.oneArg((short)2));\n  assertEquals(\"4\",mock.oneArg(3F));\n  assertEquals(\"5\",mock.oneArg(2));\n  assertEquals(\"6\",mock.oneArg(5L));\n  assertEquals(\"8\",mock.oneArg(new BigDecimal(\"1.5\")));\n  assertEquals(null,mock.oneArg(new BigDecimal(\"0.9\")));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 176,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 927,
        "startLineNumber" : 227,
        "startColumnNumber" : 4,
        "endLineNumber" : 248,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void greater_than_matcher_overloaded(){\n  when(mock.oneArg(gt((byte)1))).thenReturn(\"1\");\n  when(mock.oneArg(gt(1D))).thenReturn(\"3\");\n  when(mock.oneArg(gt(1F))).thenReturn(\"4\");\n  when(mock.oneArg(gt(1))).thenReturn(\"5\");\n  when(mock.oneArg(gt(1L))).thenReturn(\"6\");\n  when(mock.oneArg(gt((short)1))).thenReturn(\"7\");\n  when(mock.oneArg(gt(new BigDecimal(\"1\")))).thenReturn(\"8\");\n  assertEquals(\"1\",mock.oneArg((byte)2));\n  assertEquals(null,mock.oneArg((byte)1));\n  assertEquals(\"3\",mock.oneArg(2D));\n  assertEquals(\"7\",mock.oneArg((short)2));\n  assertEquals(\"4\",mock.oneArg(3F));\n  assertEquals(\"5\",mock.oneArg(2));\n  assertEquals(\"6\",mock.oneArg(5L));\n  assertEquals(\"8\",mock.oneArg(new BigDecimal(\"1.5\")));\n  assertEquals(null,mock.oneArg(new BigDecimal(\"0.9\")));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 182,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 235,
        "startColumnNumber" : 8,
        "endLineNumber" : 235,
        "endColumnNumber" : 67
      },
      "nodeContext" : "when(mock.oneArg(gt(new BigDecimal(\"1\")))).thenReturn(\"8\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 8
    },
    "tokenLength" : 3,
    "type" : "java.math.BigDecimal"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 235,
    "startColumnNumber" : 25,
    "endLineNumber" : 235,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}