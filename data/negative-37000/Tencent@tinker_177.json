{
  "id" : 177,
  "expression" : "oldVer.equals(\"\")",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/shareutil/SharePatchInfo.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "oldVer.equals(\"\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 157,
      "startColumnNumber" : 18,
      "endLineNumber" : 157,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 157,
        "startColumnNumber" : 17,
        "endLineNumber" : 157,
        "endColumnNumber" : 35
      },
      "nodeContext" : "!oldVer.equals(\"\")",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 157,
        "startColumnNumber" : 17,
        "endLineNumber" : 157,
        "endColumnNumber" : 82
      },
      "nodeContext" : "!oldVer.equals(\"\") && !SharePatchFileUtil.checkIfMd5Valid(oldVer)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 157,
        "startColumnNumber" : 16,
        "endLineNumber" : 157,
        "endColumnNumber" : 83
      },
      "nodeContext" : "(!oldVer.equals(\"\") && !SharePatchFileUtil.checkIfMd5Valid(oldVer))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 157,
        "startColumnNumber" : 16,
        "endLineNumber" : 158,
        "endColumnNumber" : 62
      },
      "nodeContext" : "(!oldVer.equals(\"\") && !SharePatchFileUtil.checkIfMd5Valid(oldVer)) || !SharePatchFileUtil.checkIfMd5Valid(newVer)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 346,
        "startLineNumber" : 157,
        "startColumnNumber" : 12,
        "endLineNumber" : 163,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((!oldVer.equals(\"\") && !SharePatchFileUtil.checkIfMd5Valid(oldVer)) || !SharePatchFileUtil.checkIfMd5Valid(newVer)) {\n  ShareTinkerLog.w(TAG,\"path info file  corrupted:\" + pathInfoFile.getAbsolutePath());\n  continue;\n}\n else {\n  isReadPatchSuccessful=true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1963,
        "startLineNumber" : 130,
        "startColumnNumber" : 77,
        "endLineNumber" : 164,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  numAttempts++;\n  Properties properties=new Properties();\n  FileInputStream inputStream=null;\n  try {\n    inputStream=new FileInputStream(pathInfoFile);\n    properties.load(inputStream);\n    oldVer=properties.getProperty(OLD_VERSION);\n    newVer=properties.getProperty(NEW_VERSION);\n    final String isProtectedAppStr=properties.getProperty(IS_PROTECTED_APP);\n    isProtectedApp=(isProtectedAppStr != null && !isProtectedAppStr.isEmpty() && !\"0\".equals(isProtectedAppStr));\n    final String isRemoveNewVersionStr=properties.getProperty(IS_REMOVE_NEW_VERSION);\n    isRemoveNewVersion=(isRemoveNewVersionStr != null && !isRemoveNewVersionStr.isEmpty() && !\"0\".equals(isRemoveNewVersionStr));\n    lastFingerPrint=properties.getProperty(FINGER_PRINT);\n    oatDir=properties.getProperty(OAT_DIR);\n    final String isRemoveInterpretOATDirStr=properties.getProperty(IS_REMOVE_INTERPRET_OAT_DIR);\n    isRemoveInterpretOATDir=(isRemoveInterpretOATDirStr != null && !isRemoveInterpretOATDirStr.isEmpty() && !\"0\".equals(isRemoveInterpretOATDirStr));\n  }\n catch (  IOException e) {\n    ShareTinkerLog.w(TAG,\"read property failed, e:\" + e);\n  }\n finally {\n    SharePatchFileUtil.closeQuietly(inputStream);\n  }\n  if (oldVer == null || newVer == null) {\n    continue;\n  }\n  if ((!oldVer.equals(\"\") && !SharePatchFileUtil.checkIfMd5Valid(oldVer)) || !SharePatchFileUtil.checkIfMd5Valid(newVer)) {\n    ShareTinkerLog.w(TAG,\"path info file  corrupted:\" + pathInfoFile.getAbsolutePath());\n    continue;\n  }\n else {\n    isReadPatchSuccessful=true;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 210,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2032,
        "startLineNumber" : 130,
        "startColumnNumber" : 8,
        "endLineNumber" : 164,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (numAttempts < MAX_EXTRACT_ATTEMPTS && !isReadPatchSuccessful) {\n  numAttempts++;\n  Properties properties=new Properties();\n  FileInputStream inputStream=null;\n  try {\n    inputStream=new FileInputStream(pathInfoFile);\n    properties.load(inputStream);\n    oldVer=properties.getProperty(OLD_VERSION);\n    newVer=properties.getProperty(NEW_VERSION);\n    final String isProtectedAppStr=properties.getProperty(IS_PROTECTED_APP);\n    isProtectedApp=(isProtectedAppStr != null && !isProtectedAppStr.isEmpty() && !\"0\".equals(isProtectedAppStr));\n    final String isRemoveNewVersionStr=properties.getProperty(IS_REMOVE_NEW_VERSION);\n    isRemoveNewVersion=(isRemoveNewVersionStr != null && !isRemoveNewVersionStr.isEmpty() && !\"0\".equals(isRemoveNewVersionStr));\n    lastFingerPrint=properties.getProperty(FINGER_PRINT);\n    oatDir=properties.getProperty(OAT_DIR);\n    final String isRemoveInterpretOATDirStr=properties.getProperty(IS_REMOVE_INTERPRET_OAT_DIR);\n    isRemoveInterpretOATDir=(isRemoveInterpretOATDirStr != null && !isRemoveInterpretOATDirStr.isEmpty() && !\"0\".equals(isRemoveInterpretOATDirStr));\n  }\n catch (  IOException e) {\n    ShareTinkerLog.w(TAG,\"read property failed, e:\" + e);\n  }\n finally {\n    SharePatchFileUtil.closeQuietly(inputStream);\n  }\n  if (oldVer == null || newVer == null) {\n    continue;\n  }\n  if ((!oldVer.equals(\"\") && !SharePatchFileUtil.checkIfMd5Valid(oldVer)) || !SharePatchFileUtil.checkIfMd5Valid(newVer)) {\n    ShareTinkerLog.w(TAG,\"path info file  corrupted:\" + pathInfoFile.getAbsolutePath());\n    continue;\n  }\n else {\n    isReadPatchSuccessful=true;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 217,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2597,
        "startLineNumber" : 120,
        "startColumnNumber" : 74,
        "endLineNumber" : 171,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  boolean isReadPatchSuccessful=false;\n  int numAttempts=0;\n  String oldVer=null;\n  String newVer=null;\n  String lastFingerPrint=null;\n  boolean isProtectedApp=false;\n  boolean isRemoveNewVersion=false;\n  String oatDir=null;\n  boolean isRemoveInterpretOATDir=false;\n  while (numAttempts < MAX_EXTRACT_ATTEMPTS && !isReadPatchSuccessful) {\n    numAttempts++;\n    Properties properties=new Properties();\n    FileInputStream inputStream=null;\n    try {\n      inputStream=new FileInputStream(pathInfoFile);\n      properties.load(inputStream);\n      oldVer=properties.getProperty(OLD_VERSION);\n      newVer=properties.getProperty(NEW_VERSION);\n      final String isProtectedAppStr=properties.getProperty(IS_PROTECTED_APP);\n      isProtectedApp=(isProtectedAppStr != null && !isProtectedAppStr.isEmpty() && !\"0\".equals(isProtectedAppStr));\n      final String isRemoveNewVersionStr=properties.getProperty(IS_REMOVE_NEW_VERSION);\n      isRemoveNewVersion=(isRemoveNewVersionStr != null && !isRemoveNewVersionStr.isEmpty() && !\"0\".equals(isRemoveNewVersionStr));\n      lastFingerPrint=properties.getProperty(FINGER_PRINT);\n      oatDir=properties.getProperty(OAT_DIR);\n      final String isRemoveInterpretOATDirStr=properties.getProperty(IS_REMOVE_INTERPRET_OAT_DIR);\n      isRemoveInterpretOATDir=(isRemoveInterpretOATDirStr != null && !isRemoveInterpretOATDirStr.isEmpty() && !\"0\".equals(isRemoveInterpretOATDirStr));\n    }\n catch (    IOException e) {\n      ShareTinkerLog.w(TAG,\"read property failed, e:\" + e);\n    }\n finally {\n      SharePatchFileUtil.closeQuietly(inputStream);\n    }\n    if (oldVer == null || newVer == null) {\n      continue;\n    }\n    if ((!oldVer.equals(\"\") && !SharePatchFileUtil.checkIfMd5Valid(oldVer)) || !SharePatchFileUtil.checkIfMd5Valid(newVer)) {\n      ShareTinkerLog.w(TAG,\"path info file  corrupted:\" + pathInfoFile.getAbsolutePath());\n      continue;\n    }\n else {\n      isReadPatchSuccessful=true;\n    }\n  }\n  if (isReadPatchSuccessful) {\n    return new SharePatchInfo(oldVer,newVer,isProtectedApp,isRemoveNewVersion,lastFingerPrint,oatDir,isRemoveInterpretOATDir);\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2667,
        "startLineNumber" : 120,
        "startColumnNumber" : 4,
        "endLineNumber" : 171,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static SharePatchInfo readAndCheckProperty(File pathInfoFile){\n  boolean isReadPatchSuccessful=false;\n  int numAttempts=0;\n  String oldVer=null;\n  String newVer=null;\n  String lastFingerPrint=null;\n  boolean isProtectedApp=false;\n  boolean isRemoveNewVersion=false;\n  String oatDir=null;\n  boolean isRemoveInterpretOATDir=false;\n  while (numAttempts < MAX_EXTRACT_ATTEMPTS && !isReadPatchSuccessful) {\n    numAttempts++;\n    Properties properties=new Properties();\n    FileInputStream inputStream=null;\n    try {\n      inputStream=new FileInputStream(pathInfoFile);\n      properties.load(inputStream);\n      oldVer=properties.getProperty(OLD_VERSION);\n      newVer=properties.getProperty(NEW_VERSION);\n      final String isProtectedAppStr=properties.getProperty(IS_PROTECTED_APP);\n      isProtectedApp=(isProtectedAppStr != null && !isProtectedAppStr.isEmpty() && !\"0\".equals(isProtectedAppStr));\n      final String isRemoveNewVersionStr=properties.getProperty(IS_REMOVE_NEW_VERSION);\n      isRemoveNewVersion=(isRemoveNewVersionStr != null && !isRemoveNewVersionStr.isEmpty() && !\"0\".equals(isRemoveNewVersionStr));\n      lastFingerPrint=properties.getProperty(FINGER_PRINT);\n      oatDir=properties.getProperty(OAT_DIR);\n      final String isRemoveInterpretOATDirStr=properties.getProperty(IS_REMOVE_INTERPRET_OAT_DIR);\n      isRemoveInterpretOATDir=(isRemoveInterpretOATDirStr != null && !isRemoveInterpretOATDirStr.isEmpty() && !\"0\".equals(isRemoveInterpretOATDirStr));\n    }\n catch (    IOException e) {\n      ShareTinkerLog.w(TAG,\"read property failed, e:\" + e);\n    }\n finally {\n      SharePatchFileUtil.closeQuietly(inputStream);\n    }\n    if (oldVer == null || newVer == null) {\n      continue;\n    }\n    if ((!oldVer.equals(\"\") && !SharePatchFileUtil.checkIfMd5Valid(oldVer)) || !SharePatchFileUtil.checkIfMd5Valid(newVer)) {\n      ShareTinkerLog.w(TAG,\"path info file  corrupted:\" + pathInfoFile.getAbsolutePath());\n      continue;\n    }\n else {\n      isReadPatchSuccessful=true;\n    }\n  }\n  if (isReadPatchSuccessful) {\n    return new SharePatchInfo(oldVer,newVer,isProtectedApp,isRemoveNewVersion,lastFingerPrint,oatDir,isRemoveInterpretOATDir);\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 293,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 157,
        "startColumnNumber" : 16,
        "endLineNumber" : 157,
        "endColumnNumber" : 83
      },
      "nodeContext" : "(!oldVer.equals(\"\") && !SharePatchFileUtil.checkIfMd5Valid(oldVer))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 157,
    "startColumnNumber" : 18,
    "endLineNumber" : 157,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}