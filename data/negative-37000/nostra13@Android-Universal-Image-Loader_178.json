{
  "id" : 178,
  "expression" : "\"unexpected journal line: \"",
  "projectName" : "nostra13@Android-Universal-Image-Loader",
  "commitID" : "7637abf7df1394f71dbc04644be86791959d1313",
  "filePath" : "/library/src/com/nostra13/universalimageloader/cache/disc/impl/ext/DiskLruCache.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"unexpected journal line: \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 268,
      "startColumnNumber" : 25,
      "endLineNumber" : 268,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 268,
        "startColumnNumber" : 25,
        "endLineNumber" : 268,
        "endColumnNumber" : 59
      },
      "nodeContext" : "\"unexpected journal line: \" + line",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 268,
        "startColumnNumber" : 9,
        "endLineNumber" : 268,
        "endColumnNumber" : 60
      },
      "nodeContext" : "new IOException(\"unexpected journal line: \" + line)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 268,
        "startColumnNumber" : 3,
        "endLineNumber" : 268,
        "endColumnNumber" : 61
      },
      "nodeContext" : "throw new IOException(\"unexpected journal line: \" + line);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 267,
        "startColumnNumber" : 24,
        "endLineNumber" : 269,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  throw new IOException(\"unexpected journal line: \" + line);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 267,
        "startColumnNumber" : 2,
        "endLineNumber" : 269,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (firstSpace == -1) {\n  throw new IOException(\"unexpected journal line: \" + line);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1197,
        "startLineNumber" : 265,
        "startColumnNumber" : 62,
        "endLineNumber" : 302,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int firstSpace=line.indexOf(' ');\n  if (firstSpace == -1) {\n    throw new IOException(\"unexpected journal line: \" + line);\n  }\n  int keyBegin=firstSpace + 1;\n  int secondSpace=line.indexOf(' ',keyBegin);\n  final String key;\n  if (secondSpace == -1) {\n    key=line.substring(keyBegin);\n    if (firstSpace == REMOVE.length() && line.startsWith(REMOVE)) {\n      lruEntries.remove(key);\n      return;\n    }\n  }\n else {\n    key=line.substring(keyBegin,secondSpace);\n  }\n  Entry entry=lruEntries.get(key);\n  if (entry == null) {\n    entry=new Entry(key);\n    lruEntries.put(key,entry);\n  }\n  if (secondSpace != -1 && firstSpace == CLEAN.length() && line.startsWith(CLEAN)) {\n    String[] parts=line.substring(secondSpace + 1).split(\" \");\n    entry.readable=true;\n    entry.currentEditor=null;\n    entry.setLengths(parts);\n  }\n else   if (secondSpace == -1 && firstSpace == DIRTY.length() && line.startsWith(DIRTY)) {\n    entry.currentEditor=new Editor(entry);\n  }\n else   if (secondSpace == -1 && firstSpace == READ.length() && line.startsWith(READ)) {\n  }\n else {\n    throw new IOException(\"unexpected journal line: \" + line);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 212,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1258,
        "startLineNumber" : 265,
        "startColumnNumber" : 1,
        "endLineNumber" : 302,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private void readJournalLine(String line) throws IOException {\n  int firstSpace=line.indexOf(' ');\n  if (firstSpace == -1) {\n    throw new IOException(\"unexpected journal line: \" + line);\n  }\n  int keyBegin=firstSpace + 1;\n  int secondSpace=line.indexOf(' ',keyBegin);\n  final String key;\n  if (secondSpace == -1) {\n    key=line.substring(keyBegin);\n    if (firstSpace == REMOVE.length() && line.startsWith(REMOVE)) {\n      lruEntries.remove(key);\n      return;\n    }\n  }\n else {\n    key=line.substring(keyBegin,secondSpace);\n  }\n  Entry entry=lruEntries.get(key);\n  if (entry == null) {\n    entry=new Entry(key);\n    lruEntries.put(key,entry);\n  }\n  if (secondSpace != -1 && firstSpace == CLEAN.length() && line.startsWith(CLEAN)) {\n    String[] parts=line.substring(secondSpace + 1).split(\" \");\n    entry.readable=true;\n    entry.currentEditor=null;\n    entry.setLengths(parts);\n  }\n else   if (secondSpace == -1 && firstSpace == DIRTY.length() && line.startsWith(DIRTY)) {\n    entry.currentEditor=new Editor(entry);\n  }\n else   if (secondSpace == -1 && firstSpace == READ.length() && line.startsWith(READ)) {\n  }\n else {\n    throw new IOException(\"unexpected journal line: \" + line);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 222,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 268,
        "startColumnNumber" : 3,
        "endLineNumber" : 268,
        "endColumnNumber" : 61
      },
      "nodeContext" : "throw new IOException(\"unexpected journal line: \" + line);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"unexpected journal line: \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 300,
      "startColumnNumber" : 25,
      "endLineNumber" : 300,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 300,
        "startColumnNumber" : 25,
        "endLineNumber" : 300,
        "endColumnNumber" : 59
      },
      "nodeContext" : "\"unexpected journal line: \" + line",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 300,
        "startColumnNumber" : 9,
        "endLineNumber" : 300,
        "endColumnNumber" : 60
      },
      "nodeContext" : "new IOException(\"unexpected journal line: \" + line)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 300,
        "startColumnNumber" : 3,
        "endLineNumber" : 300,
        "endColumnNumber" : 61
      },
      "nodeContext" : "throw new IOException(\"unexpected journal line: \" + line);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 299,
        "startColumnNumber" : 9,
        "endLineNumber" : 301,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  throw new IOException(\"unexpected journal line: \" + line);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 219,
        "startLineNumber" : 297,
        "startColumnNumber" : 9,
        "endLineNumber" : 301,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (secondSpace == -1 && firstSpace == READ.length() && line.startsWith(READ)) {\n}\n else {\n  throw new IOException(\"unexpected journal line: \" + line);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 355,
        "startLineNumber" : 295,
        "startColumnNumber" : 9,
        "endLineNumber" : 301,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (secondSpace == -1 && firstSpace == DIRTY.length() && line.startsWith(DIRTY)) {\n  entry.currentEditor=new Editor(entry);\n}\n else if (secondSpace == -1 && firstSpace == READ.length() && line.startsWith(READ)) {\n}\n else {\n  throw new IOException(\"unexpected journal line: \" + line);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 51,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 596,
        "startLineNumber" : 290,
        "startColumnNumber" : 2,
        "endLineNumber" : 301,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (secondSpace != -1 && firstSpace == CLEAN.length() && line.startsWith(CLEAN)) {\n  String[] parts=line.substring(secondSpace + 1).split(\" \");\n  entry.readable=true;\n  entry.currentEditor=null;\n  entry.setLengths(parts);\n}\n else if (secondSpace == -1 && firstSpace == DIRTY.length() && line.startsWith(DIRTY)) {\n  entry.currentEditor=new Editor(entry);\n}\n else if (secondSpace == -1 && firstSpace == READ.length() && line.startsWith(READ)) {\n}\n else {\n  throw new IOException(\"unexpected journal line: \" + line);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 101,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1197,
        "startLineNumber" : 265,
        "startColumnNumber" : 62,
        "endLineNumber" : 302,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int firstSpace=line.indexOf(' ');\n  if (firstSpace == -1) {\n    throw new IOException(\"unexpected journal line: \" + line);\n  }\n  int keyBegin=firstSpace + 1;\n  int secondSpace=line.indexOf(' ',keyBegin);\n  final String key;\n  if (secondSpace == -1) {\n    key=line.substring(keyBegin);\n    if (firstSpace == REMOVE.length() && line.startsWith(REMOVE)) {\n      lruEntries.remove(key);\n      return;\n    }\n  }\n else {\n    key=line.substring(keyBegin,secondSpace);\n  }\n  Entry entry=lruEntries.get(key);\n  if (entry == null) {\n    entry=new Entry(key);\n    lruEntries.put(key,entry);\n  }\n  if (secondSpace != -1 && firstSpace == CLEAN.length() && line.startsWith(CLEAN)) {\n    String[] parts=line.substring(secondSpace + 1).split(\" \");\n    entry.readable=true;\n    entry.currentEditor=null;\n    entry.setLengths(parts);\n  }\n else   if (secondSpace == -1 && firstSpace == DIRTY.length() && line.startsWith(DIRTY)) {\n    entry.currentEditor=new Editor(entry);\n  }\n else   if (secondSpace == -1 && firstSpace == READ.length() && line.startsWith(READ)) {\n  }\n else {\n    throw new IOException(\"unexpected journal line: \" + line);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 212,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1258,
        "startLineNumber" : 265,
        "startColumnNumber" : 1,
        "endLineNumber" : 302,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private void readJournalLine(String line) throws IOException {\n  int firstSpace=line.indexOf(' ');\n  if (firstSpace == -1) {\n    throw new IOException(\"unexpected journal line: \" + line);\n  }\n  int keyBegin=firstSpace + 1;\n  int secondSpace=line.indexOf(' ',keyBegin);\n  final String key;\n  if (secondSpace == -1) {\n    key=line.substring(keyBegin);\n    if (firstSpace == REMOVE.length() && line.startsWith(REMOVE)) {\n      lruEntries.remove(key);\n      return;\n    }\n  }\n else {\n    key=line.substring(keyBegin,secondSpace);\n  }\n  Entry entry=lruEntries.get(key);\n  if (entry == null) {\n    entry=new Entry(key);\n    lruEntries.put(key,entry);\n  }\n  if (secondSpace != -1 && firstSpace == CLEAN.length() && line.startsWith(CLEAN)) {\n    String[] parts=line.substring(secondSpace + 1).split(\" \");\n    entry.readable=true;\n    entry.currentEditor=null;\n    entry.setLengths(parts);\n  }\n else   if (secondSpace == -1 && firstSpace == DIRTY.length() && line.startsWith(DIRTY)) {\n    entry.currentEditor=new Editor(entry);\n  }\n else   if (secondSpace == -1 && firstSpace == READ.length() && line.startsWith(READ)) {\n  }\n else {\n    throw new IOException(\"unexpected journal line: \" + line);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 222,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 300,
        "startColumnNumber" : 3,
        "endLineNumber" : 300,
        "endColumnNumber" : 61
      },
      "nodeContext" : "throw new IOException(\"unexpected journal line: \" + line);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 268,
    "startColumnNumber" : 25,
    "endLineNumber" : 268,
    "endColumnNumber" : 52
  }, {
    "charLength" : 27,
    "startLineNumber" : 300,
    "startColumnNumber" : 25,
    "endLineNumber" : 300,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 7
  } ]
}