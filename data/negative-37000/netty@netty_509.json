{
  "id" : 509,
  "expression" : "a",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/handler/src/main/java/io/netty/handler/ssl/OpenSslSessionContext.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "a",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 129,
      "startColumnNumber" : 51,
      "endLineNumber" : 129,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 129,
        "startColumnNumber" : 26,
        "endLineNumber" : 129,
        "endColumnNumber" : 81
      },
      "nodeContext" : "Arrays.copyOfRange(keys,a,SessionTicketKey.NAME_SIZE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 129,
        "startColumnNumber" : 19,
        "endLineNumber" : 129,
        "endColumnNumber" : 81
      },
      "nodeContext" : "name=Arrays.copyOfRange(keys,a,SessionTicketKey.NAME_SIZE)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 129,
        "startColumnNumber" : 12,
        "endLineNumber" : 129,
        "endColumnNumber" : 82
      },
      "nodeContext" : "byte[] name=Arrays.copyOfRange(keys,a,SessionTicketKey.NAME_SIZE);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 492,
        "startLineNumber" : 128,
        "startColumnNumber" : 56,
        "endLineNumber" : 136,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  byte[] name=Arrays.copyOfRange(keys,a,SessionTicketKey.NAME_SIZE);\n  a+=SessionTicketKey.NAME_SIZE;\n  byte[] hmacKey=Arrays.copyOfRange(keys,a,SessionTicketKey.HMAC_KEY_SIZE);\n  i+=SessionTicketKey.HMAC_KEY_SIZE;\n  byte[] aesKey=Arrays.copyOfRange(keys,a,SessionTicketKey.AES_KEY_SIZE);\n  a+=SessionTicketKey.AES_KEY_SIZE;\n  tickets[i]=new SessionTicketKey(name,hmacKey,aesKey);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 540,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 136,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0, a=0; i < tickets.length; i++) {\n  byte[] name=Arrays.copyOfRange(keys,a,SessionTicketKey.NAME_SIZE);\n  a+=SessionTicketKey.NAME_SIZE;\n  byte[] hmacKey=Arrays.copyOfRange(keys,a,SessionTicketKey.HMAC_KEY_SIZE);\n  i+=SessionTicketKey.HMAC_KEY_SIZE;\n  byte[] aesKey=Arrays.copyOfRange(keys,a,SessionTicketKey.AES_KEY_SIZE);\n  a+=SessionTicketKey.AES_KEY_SIZE;\n  tickets[i]=new SessionTicketKey(name,hmacKey,aesKey);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 88,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1164,
        "startLineNumber" : 123,
        "startColumnNumber" : 43,
        "endLineNumber" : 145,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (keys.length % SessionTicketKey.TICKET_KEY_SIZE != 0) {\n    throw new IllegalArgumentException(\"keys.length % \" + SessionTicketKey.TICKET_KEY_SIZE + \" != 0\");\n  }\n  SessionTicketKey[] tickets=new SessionTicketKey[keys.length / SessionTicketKey.TICKET_KEY_SIZE];\n  for (int i=0, a=0; i < tickets.length; i++) {\n    byte[] name=Arrays.copyOfRange(keys,a,SessionTicketKey.NAME_SIZE);\n    a+=SessionTicketKey.NAME_SIZE;\n    byte[] hmacKey=Arrays.copyOfRange(keys,a,SessionTicketKey.HMAC_KEY_SIZE);\n    i+=SessionTicketKey.HMAC_KEY_SIZE;\n    byte[] aesKey=Arrays.copyOfRange(keys,a,SessionTicketKey.AES_KEY_SIZE);\n    a+=SessionTicketKey.AES_KEY_SIZE;\n    tickets[i]=new SessionTicketKey(name,hmacKey,aesKey);\n  }\n  Lock writerLock=context.ctxLock.writeLock();\n  writerLock.lock();\n  try {\n    SSLContext.clearOptions(context.ctx,SSL.SSL_OP_NO_TICKET);\n    SSLContext.setSessionTicketKeys(context.ctx,tickets);\n  }\n  finally {\n    writerLock.unlock();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 168,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1372,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 145,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Sets the SSL session ticket keys of this context.\n * @deprecated use {@link #setTicketKeys(OpenSslSessionTicketKey...)}.\n */\n@Deprecated public void setTicketKeys(byte[] keys){\n  if (keys.length % SessionTicketKey.TICKET_KEY_SIZE != 0) {\n    throw new IllegalArgumentException(\"keys.length % \" + SessionTicketKey.TICKET_KEY_SIZE + \" != 0\");\n  }\n  SessionTicketKey[] tickets=new SessionTicketKey[keys.length / SessionTicketKey.TICKET_KEY_SIZE];\n  for (int i=0, a=0; i < tickets.length; i++) {\n    byte[] name=Arrays.copyOfRange(keys,a,SessionTicketKey.NAME_SIZE);\n    a+=SessionTicketKey.NAME_SIZE;\n    byte[] hmacKey=Arrays.copyOfRange(keys,a,SessionTicketKey.HMAC_KEY_SIZE);\n    i+=SessionTicketKey.HMAC_KEY_SIZE;\n    byte[] aesKey=Arrays.copyOfRange(keys,a,SessionTicketKey.AES_KEY_SIZE);\n    a+=SessionTicketKey.AES_KEY_SIZE;\n    tickets[i]=new SessionTicketKey(name,hmacKey,aesKey);\n  }\n  Lock writerLock=context.ctxLock.writeLock();\n  writerLock.lock();\n  try {\n    SSLContext.clearOptions(context.ctx,SSL.SSL_OP_NO_TICKET);\n    SSLContext.setSessionTicketKeys(context.ctx,tickets);\n  }\n  finally {\n    writerLock.unlock();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 129,
        "startColumnNumber" : 12,
        "endLineNumber" : 129,
        "endColumnNumber" : 82
      },
      "nodeContext" : "byte[] name=Arrays.copyOfRange(keys,a,SessionTicketKey.NAME_SIZE);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "a",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 131,
      "startColumnNumber" : 54,
      "endLineNumber" : 131,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 131,
        "startColumnNumber" : 29,
        "endLineNumber" : 131,
        "endColumnNumber" : 88
      },
      "nodeContext" : "Arrays.copyOfRange(keys,a,SessionTicketKey.HMAC_KEY_SIZE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 131,
        "startColumnNumber" : 19,
        "endLineNumber" : 131,
        "endColumnNumber" : 88
      },
      "nodeContext" : "hmacKey=Arrays.copyOfRange(keys,a,SessionTicketKey.HMAC_KEY_SIZE)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 131,
        "startColumnNumber" : 12,
        "endLineNumber" : 131,
        "endColumnNumber" : 89
      },
      "nodeContext" : "byte[] hmacKey=Arrays.copyOfRange(keys,a,SessionTicketKey.HMAC_KEY_SIZE);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 492,
        "startLineNumber" : 128,
        "startColumnNumber" : 56,
        "endLineNumber" : 136,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  byte[] name=Arrays.copyOfRange(keys,a,SessionTicketKey.NAME_SIZE);\n  a+=SessionTicketKey.NAME_SIZE;\n  byte[] hmacKey=Arrays.copyOfRange(keys,a,SessionTicketKey.HMAC_KEY_SIZE);\n  i+=SessionTicketKey.HMAC_KEY_SIZE;\n  byte[] aesKey=Arrays.copyOfRange(keys,a,SessionTicketKey.AES_KEY_SIZE);\n  a+=SessionTicketKey.AES_KEY_SIZE;\n  tickets[i]=new SessionTicketKey(name,hmacKey,aesKey);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 540,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 136,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0, a=0; i < tickets.length; i++) {\n  byte[] name=Arrays.copyOfRange(keys,a,SessionTicketKey.NAME_SIZE);\n  a+=SessionTicketKey.NAME_SIZE;\n  byte[] hmacKey=Arrays.copyOfRange(keys,a,SessionTicketKey.HMAC_KEY_SIZE);\n  i+=SessionTicketKey.HMAC_KEY_SIZE;\n  byte[] aesKey=Arrays.copyOfRange(keys,a,SessionTicketKey.AES_KEY_SIZE);\n  a+=SessionTicketKey.AES_KEY_SIZE;\n  tickets[i]=new SessionTicketKey(name,hmacKey,aesKey);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 88,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1164,
        "startLineNumber" : 123,
        "startColumnNumber" : 43,
        "endLineNumber" : 145,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (keys.length % SessionTicketKey.TICKET_KEY_SIZE != 0) {\n    throw new IllegalArgumentException(\"keys.length % \" + SessionTicketKey.TICKET_KEY_SIZE + \" != 0\");\n  }\n  SessionTicketKey[] tickets=new SessionTicketKey[keys.length / SessionTicketKey.TICKET_KEY_SIZE];\n  for (int i=0, a=0; i < tickets.length; i++) {\n    byte[] name=Arrays.copyOfRange(keys,a,SessionTicketKey.NAME_SIZE);\n    a+=SessionTicketKey.NAME_SIZE;\n    byte[] hmacKey=Arrays.copyOfRange(keys,a,SessionTicketKey.HMAC_KEY_SIZE);\n    i+=SessionTicketKey.HMAC_KEY_SIZE;\n    byte[] aesKey=Arrays.copyOfRange(keys,a,SessionTicketKey.AES_KEY_SIZE);\n    a+=SessionTicketKey.AES_KEY_SIZE;\n    tickets[i]=new SessionTicketKey(name,hmacKey,aesKey);\n  }\n  Lock writerLock=context.ctxLock.writeLock();\n  writerLock.lock();\n  try {\n    SSLContext.clearOptions(context.ctx,SSL.SSL_OP_NO_TICKET);\n    SSLContext.setSessionTicketKeys(context.ctx,tickets);\n  }\n  finally {\n    writerLock.unlock();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 168,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1372,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 145,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Sets the SSL session ticket keys of this context.\n * @deprecated use {@link #setTicketKeys(OpenSslSessionTicketKey...)}.\n */\n@Deprecated public void setTicketKeys(byte[] keys){\n  if (keys.length % SessionTicketKey.TICKET_KEY_SIZE != 0) {\n    throw new IllegalArgumentException(\"keys.length % \" + SessionTicketKey.TICKET_KEY_SIZE + \" != 0\");\n  }\n  SessionTicketKey[] tickets=new SessionTicketKey[keys.length / SessionTicketKey.TICKET_KEY_SIZE];\n  for (int i=0, a=0; i < tickets.length; i++) {\n    byte[] name=Arrays.copyOfRange(keys,a,SessionTicketKey.NAME_SIZE);\n    a+=SessionTicketKey.NAME_SIZE;\n    byte[] hmacKey=Arrays.copyOfRange(keys,a,SessionTicketKey.HMAC_KEY_SIZE);\n    i+=SessionTicketKey.HMAC_KEY_SIZE;\n    byte[] aesKey=Arrays.copyOfRange(keys,a,SessionTicketKey.AES_KEY_SIZE);\n    a+=SessionTicketKey.AES_KEY_SIZE;\n    tickets[i]=new SessionTicketKey(name,hmacKey,aesKey);\n  }\n  Lock writerLock=context.ctxLock.writeLock();\n  writerLock.lock();\n  try {\n    SSLContext.clearOptions(context.ctx,SSL.SSL_OP_NO_TICKET);\n    SSLContext.setSessionTicketKeys(context.ctx,tickets);\n  }\n  finally {\n    writerLock.unlock();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 131,
        "startColumnNumber" : 12,
        "endLineNumber" : 131,
        "endColumnNumber" : 89
      },
      "nodeContext" : "byte[] hmacKey=Arrays.copyOfRange(keys,a,SessionTicketKey.HMAC_KEY_SIZE);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "a",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 133,
      "startColumnNumber" : 53,
      "endLineNumber" : 133,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 133,
        "startColumnNumber" : 28,
        "endLineNumber" : 133,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Arrays.copyOfRange(keys,a,SessionTicketKey.AES_KEY_SIZE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 133,
        "startColumnNumber" : 19,
        "endLineNumber" : 133,
        "endColumnNumber" : 86
      },
      "nodeContext" : "aesKey=Arrays.copyOfRange(keys,a,SessionTicketKey.AES_KEY_SIZE)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 133,
        "startColumnNumber" : 12,
        "endLineNumber" : 133,
        "endColumnNumber" : 87
      },
      "nodeContext" : "byte[] aesKey=Arrays.copyOfRange(keys,a,SessionTicketKey.AES_KEY_SIZE);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 492,
        "startLineNumber" : 128,
        "startColumnNumber" : 56,
        "endLineNumber" : 136,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  byte[] name=Arrays.copyOfRange(keys,a,SessionTicketKey.NAME_SIZE);\n  a+=SessionTicketKey.NAME_SIZE;\n  byte[] hmacKey=Arrays.copyOfRange(keys,a,SessionTicketKey.HMAC_KEY_SIZE);\n  i+=SessionTicketKey.HMAC_KEY_SIZE;\n  byte[] aesKey=Arrays.copyOfRange(keys,a,SessionTicketKey.AES_KEY_SIZE);\n  a+=SessionTicketKey.AES_KEY_SIZE;\n  tickets[i]=new SessionTicketKey(name,hmacKey,aesKey);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 540,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 136,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0, a=0; i < tickets.length; i++) {\n  byte[] name=Arrays.copyOfRange(keys,a,SessionTicketKey.NAME_SIZE);\n  a+=SessionTicketKey.NAME_SIZE;\n  byte[] hmacKey=Arrays.copyOfRange(keys,a,SessionTicketKey.HMAC_KEY_SIZE);\n  i+=SessionTicketKey.HMAC_KEY_SIZE;\n  byte[] aesKey=Arrays.copyOfRange(keys,a,SessionTicketKey.AES_KEY_SIZE);\n  a+=SessionTicketKey.AES_KEY_SIZE;\n  tickets[i]=new SessionTicketKey(name,hmacKey,aesKey);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 88,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1164,
        "startLineNumber" : 123,
        "startColumnNumber" : 43,
        "endLineNumber" : 145,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (keys.length % SessionTicketKey.TICKET_KEY_SIZE != 0) {\n    throw new IllegalArgumentException(\"keys.length % \" + SessionTicketKey.TICKET_KEY_SIZE + \" != 0\");\n  }\n  SessionTicketKey[] tickets=new SessionTicketKey[keys.length / SessionTicketKey.TICKET_KEY_SIZE];\n  for (int i=0, a=0; i < tickets.length; i++) {\n    byte[] name=Arrays.copyOfRange(keys,a,SessionTicketKey.NAME_SIZE);\n    a+=SessionTicketKey.NAME_SIZE;\n    byte[] hmacKey=Arrays.copyOfRange(keys,a,SessionTicketKey.HMAC_KEY_SIZE);\n    i+=SessionTicketKey.HMAC_KEY_SIZE;\n    byte[] aesKey=Arrays.copyOfRange(keys,a,SessionTicketKey.AES_KEY_SIZE);\n    a+=SessionTicketKey.AES_KEY_SIZE;\n    tickets[i]=new SessionTicketKey(name,hmacKey,aesKey);\n  }\n  Lock writerLock=context.ctxLock.writeLock();\n  writerLock.lock();\n  try {\n    SSLContext.clearOptions(context.ctx,SSL.SSL_OP_NO_TICKET);\n    SSLContext.setSessionTicketKeys(context.ctx,tickets);\n  }\n  finally {\n    writerLock.unlock();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 168,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1372,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 145,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Sets the SSL session ticket keys of this context.\n * @deprecated use {@link #setTicketKeys(OpenSslSessionTicketKey...)}.\n */\n@Deprecated public void setTicketKeys(byte[] keys){\n  if (keys.length % SessionTicketKey.TICKET_KEY_SIZE != 0) {\n    throw new IllegalArgumentException(\"keys.length % \" + SessionTicketKey.TICKET_KEY_SIZE + \" != 0\");\n  }\n  SessionTicketKey[] tickets=new SessionTicketKey[keys.length / SessionTicketKey.TICKET_KEY_SIZE];\n  for (int i=0, a=0; i < tickets.length; i++) {\n    byte[] name=Arrays.copyOfRange(keys,a,SessionTicketKey.NAME_SIZE);\n    a+=SessionTicketKey.NAME_SIZE;\n    byte[] hmacKey=Arrays.copyOfRange(keys,a,SessionTicketKey.HMAC_KEY_SIZE);\n    i+=SessionTicketKey.HMAC_KEY_SIZE;\n    byte[] aesKey=Arrays.copyOfRange(keys,a,SessionTicketKey.AES_KEY_SIZE);\n    a+=SessionTicketKey.AES_KEY_SIZE;\n    tickets[i]=new SessionTicketKey(name,hmacKey,aesKey);\n  }\n  Lock writerLock=context.ctxLock.writeLock();\n  writerLock.lock();\n  try {\n    SSLContext.clearOptions(context.ctx,SSL.SSL_OP_NO_TICKET);\n    SSLContext.setSessionTicketKeys(context.ctx,tickets);\n  }\n  finally {\n    writerLock.unlock();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 133,
        "startColumnNumber" : 12,
        "endLineNumber" : 133,
        "endColumnNumber" : 87
      },
      "nodeContext" : "byte[] aesKey=Arrays.copyOfRange(keys,a,SessionTicketKey.AES_KEY_SIZE);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 129,
    "startColumnNumber" : 51,
    "endLineNumber" : 129,
    "endColumnNumber" : 52
  }, {
    "charLength" : 1,
    "startLineNumber" : 131,
    "startColumnNumber" : 54,
    "endLineNumber" : 131,
    "endColumnNumber" : 55
  }, {
    "charLength" : 1,
    "startLineNumber" : 133,
    "startColumnNumber" : 53,
    "endLineNumber" : 133,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}