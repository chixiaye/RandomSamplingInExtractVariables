{
  "id" : 77,
  "expression" : "offset + length",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/extractor/src/test/java/com/google/android/exoplayer2/extractor/ExtractorUtilTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "offset + length",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 57,
      "startColumnNumber" : 50,
      "endLineNumber" : 57,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 57,
        "startColumnNumber" : 15,
        "endLineNumber" : 57,
        "endColumnNumber" : 66
      },
      "nodeContext" : "Arrays.copyOfRange(target,offset,offset + length)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 67
      },
      "nodeContext" : "assertThat(Arrays.copyOfRange(target,offset,offset + length))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertThat(Arrays.copyOfRange(target,offset,offset + length)).isEqualTo(Arrays.copyOf(TEST_DATA,length))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertThat(Arrays.copyOfRange(target,offset,offset + length)).isEqualTo(Arrays.copyOf(TEST_DATA,length));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 854,
        "startLineNumber" : 39,
        "startColumnNumber" : 60,
        "endLineNumber" : 59,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  FakeDataSource testDataSource=new FakeDataSource();\n  testDataSource.getDataSet().newDefaultData().appendReadData(Arrays.copyOf(TEST_DATA,3)).appendReadData(Arrays.copyOfRange(TEST_DATA,3,6)).appendReadData(Arrays.copyOfRange(TEST_DATA,6,9));\n  testDataSource.open(new DataSpec(Uri.parse(TEST_URI)));\n  ExtractorInput input=new DefaultExtractorInput(testDataSource,0,C.LENGTH_UNSET);\n  byte[] target=new byte[TEST_DATA.length];\n  int offset=2;\n  int length=4;\n  int bytesPeeked=ExtractorUtil.peekToLength(input,target,offset,length);\n  assertThat(bytesPeeked).isEqualTo(length);\n  assertThat(input.getPeekPosition()).isEqualTo(length);\n  assertThat(Arrays.copyOfRange(target,offset,offset + length)).isEqualTo(Arrays.copyOf(TEST_DATA,length));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 920,
        "startLineNumber" : 38,
        "startColumnNumber" : 2,
        "endLineNumber" : 59,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void peekToLength_endNotReached() throws Exception {\n  FakeDataSource testDataSource=new FakeDataSource();\n  testDataSource.getDataSet().newDefaultData().appendReadData(Arrays.copyOf(TEST_DATA,3)).appendReadData(Arrays.copyOfRange(TEST_DATA,3,6)).appendReadData(Arrays.copyOfRange(TEST_DATA,6,9));\n  testDataSource.open(new DataSpec(Uri.parse(TEST_URI)));\n  ExtractorInput input=new DefaultExtractorInput(testDataSource,0,C.LENGTH_UNSET);\n  byte[] target=new byte[TEST_DATA.length];\n  int offset=2;\n  int length=4;\n  int bytesPeeked=ExtractorUtil.peekToLength(input,target,offset,length);\n  assertThat(bytesPeeked).isEqualTo(length);\n  assertThat(input.getPeekPosition()).isEqualTo(length);\n  assertThat(Arrays.copyOfRange(target,offset,offset + length)).isEqualTo(Arrays.copyOf(TEST_DATA,length));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 138,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 67
      },
      "nodeContext" : "assertThat(Arrays.copyOfRange(target,offset,offset + length))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 57,
    "startColumnNumber" : 50,
    "endLineNumber" : 57,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}