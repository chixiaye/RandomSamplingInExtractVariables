{
  "id" : 170,
  "expression" : "delayTime <= 0",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/main/java/io/reactivex/internal/schedulers/NewThreadWorker.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "delayTime <= 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 63,
      "startColumnNumber" : 16,
      "endLineNumber" : 63,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 67,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (delayTime <= 0) {\n  f=executor.submit(decoratedRun);\n}\n else {\n  f=executor.schedule(decoratedRun,delayTime,unit);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 274,
        "startLineNumber" : 61,
        "startColumnNumber" : 12,
        "endLineNumber" : 69,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Future<?> f;\n  if (delayTime <= 0) {\n    f=executor.submit(decoratedRun);\n  }\n else {\n    f=executor.schedule(decoratedRun,delayTime,unit);\n  }\n  return Disposables.from(f);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 415,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Future<?> f;\n  if (delayTime <= 0) {\n    f=executor.submit(decoratedRun);\n  }\n else {\n    f=executor.schedule(decoratedRun,delayTime,unit);\n  }\n  return Disposables.from(f);\n}\n catch (RejectedExecutionException ex) {\n  RxJavaPlugins.onError(ex);\n  return EmptyDisposable.INSTANCE;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 51,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 497,
        "startLineNumber" : 59,
        "startColumnNumber" : 88,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Runnable decoratedRun=RxJavaPlugins.onSchedule(run);\n  try {\n    Future<?> f;\n    if (delayTime <= 0) {\n      f=executor.submit(decoratedRun);\n    }\n else {\n      f=executor.schedule(decoratedRun,delayTime,unit);\n    }\n    return Disposables.from(f);\n  }\n catch (  RejectedExecutionException ex) {\n    RxJavaPlugins.onError(ex);\n    return EmptyDisposable.INSTANCE;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 841,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Schedules the given runnable on the underlying executor directly and returns its future wrapped into a Disposable.\n * @param run\n * @param delayTime\n * @param unit\n * @return the ScheduledRunnable instance\n */\npublic Disposable scheduleDirect(final Runnable run,long delayTime,TimeUnit unit){\n  Runnable decoratedRun=RxJavaPlugins.onSchedule(run);\n  try {\n    Future<?> f;\n    if (delayTime <= 0) {\n      f=executor.submit(decoratedRun);\n    }\n else {\n      f=executor.schedule(decoratedRun,delayTime,unit);\n    }\n    return Disposables.from(f);\n  }\n catch (  RejectedExecutionException ex) {\n    RxJavaPlugins.onError(ex);\n    return EmptyDisposable.INSTANCE;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 67,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (delayTime <= 0) {\n  f=executor.submit(decoratedRun);\n}\n else {\n  f=executor.schedule(decoratedRun,delayTime,unit);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 63,
    "startColumnNumber" : 16,
    "endLineNumber" : 63,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}