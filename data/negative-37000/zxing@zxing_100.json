{
  "id" : 100,
  "expression" : "b == 1 && encodingMode == TEXT_COMPACTION",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/pdf417/encoder/PDF417HighLevelEncoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "b == 1 && encodingMode == TEXT_COMPACTION",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 41,
      "startLineNumber" : 203,
      "startColumnNumber" : 16,
      "endLineNumber" : 203,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 431,
        "startLineNumber" : 203,
        "startColumnNumber" : 12,
        "endLineNumber" : 211,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (b == 1 && encodingMode == TEXT_COMPACTION) {\n  encodeBinary(bytes,p,1,TEXT_COMPACTION,sb);\n}\n else {\n  encodeBinary(bytes,p,b,encodingMode,sb);\n  encodingMode=BYTE_COMPACTION;\n  textSubMode=SUBMODE_ALPHA;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 710,
        "startLineNumber" : 195,
        "startColumnNumber" : 17,
        "endLineNumber" : 213,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  if (bytes == null) {\n    bytes=getBytesForMessage(msg);\n  }\n  int b=determineConsecutiveBinaryCount(msg,bytes,p);\n  if (b == 0) {\n    b=1;\n  }\n  if (b == 1 && encodingMode == TEXT_COMPACTION) {\n    encodeBinary(bytes,p,1,TEXT_COMPACTION,sb);\n  }\n else {\n    encodeBinary(bytes,p,b,encodingMode,sb);\n    encodingMode=BYTE_COMPACTION;\n    textSubMode=SUBMODE_ALPHA;\n  }\n  p+=b;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1087,
        "startLineNumber" : 187,
        "startColumnNumber" : 10,
        "endLineNumber" : 213,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (t >= 5 || n == len) {\n  if (encodingMode != TEXT_COMPACTION) {\n    sb.append((char)LATCH_TO_TEXT);\n    encodingMode=TEXT_COMPACTION;\n    textSubMode=SUBMODE_ALPHA;\n  }\n  textSubMode=encodeText(msg,p,t,sb,textSubMode);\n  p+=t;\n}\n else {\n  if (bytes == null) {\n    bytes=getBytesForMessage(msg);\n  }\n  int b=determineConsecutiveBinaryCount(msg,bytes,p);\n  if (b == 0) {\n    b=1;\n  }\n  if (b == 1 && encodingMode == TEXT_COMPACTION) {\n    encodeBinary(bytes,p,1,TEXT_COMPACTION,sb);\n  }\n else {\n    encodeBinary(bytes,p,b,encodingMode,sb);\n    encodingMode=BYTE_COMPACTION;\n    textSubMode=SUBMODE_ALPHA;\n  }\n  p+=b;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 111,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1169,
        "startLineNumber" : 185,
        "startColumnNumber" : 15,
        "endLineNumber" : 214,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int t=determineConsecutiveTextCount(msg,p);\n  if (t >= 5 || n == len) {\n    if (encodingMode != TEXT_COMPACTION) {\n      sb.append((char)LATCH_TO_TEXT);\n      encodingMode=TEXT_COMPACTION;\n      textSubMode=SUBMODE_ALPHA;\n    }\n    textSubMode=encodeText(msg,p,t,sb,textSubMode);\n    p+=t;\n  }\n else {\n    if (bytes == null) {\n      bytes=getBytesForMessage(msg);\n    }\n    int b=determineConsecutiveBinaryCount(msg,bytes,p);\n    if (b == 0) {\n      b=1;\n    }\n    if (b == 1 && encodingMode == TEXT_COMPACTION) {\n      encodeBinary(bytes,p,1,TEXT_COMPACTION,sb);\n    }\n else {\n      encodeBinary(bytes,p,b,encodingMode,sb);\n      encodingMode=BYTE_COMPACTION;\n      textSubMode=SUBMODE_ALPHA;\n    }\n    p+=b;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1413,
        "startLineNumber" : 179,
        "startColumnNumber" : 8,
        "endLineNumber" : 214,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (n >= 13) {\n  sb.append((char)LATCH_TO_NUMERIC);\n  encodingMode=NUMERIC_COMPACTION;\n  textSubMode=SUBMODE_ALPHA;\n  encodeNumeric(msg,p,n,sb);\n  p+=n;\n}\n else {\n  int t=determineConsecutiveTextCount(msg,p);\n  if (t >= 5 || n == len) {\n    if (encodingMode != TEXT_COMPACTION) {\n      sb.append((char)LATCH_TO_TEXT);\n      encodingMode=TEXT_COMPACTION;\n      textSubMode=SUBMODE_ALPHA;\n    }\n    textSubMode=encodeText(msg,p,t,sb,textSubMode);\n    p+=t;\n  }\n else {\n    if (bytes == null) {\n      bytes=getBytesForMessage(msg);\n    }\n    int b=determineConsecutiveBinaryCount(msg,bytes,p);\n    if (b == 0) {\n      b=1;\n    }\n    if (b == 1 && encodingMode == TEXT_COMPACTION) {\n      encodeBinary(bytes,p,1,TEXT_COMPACTION,sb);\n    }\n else {\n      encodeBinary(bytes,p,b,encodingMode,sb);\n      encodingMode=BYTE_COMPACTION;\n      textSubMode=SUBMODE_ALPHA;\n    }\n    p+=b;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 151,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1490,
        "startLineNumber" : 177,
        "startColumnNumber" : 22,
        "endLineNumber" : 215,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  int n=determineConsecutiveDigitCount(msg,p);\n  if (n >= 13) {\n    sb.append((char)LATCH_TO_NUMERIC);\n    encodingMode=NUMERIC_COMPACTION;\n    textSubMode=SUBMODE_ALPHA;\n    encodeNumeric(msg,p,n,sb);\n    p+=n;\n  }\n else {\n    int t=determineConsecutiveTextCount(msg,p);\n    if (t >= 5 || n == len) {\n      if (encodingMode != TEXT_COMPACTION) {\n        sb.append((char)LATCH_TO_TEXT);\n        encodingMode=TEXT_COMPACTION;\n        textSubMode=SUBMODE_ALPHA;\n      }\n      textSubMode=encodeText(msg,p,t,sb,textSubMode);\n      p+=t;\n    }\n else {\n      if (bytes == null) {\n        bytes=getBytesForMessage(msg);\n      }\n      int b=determineConsecutiveBinaryCount(msg,bytes,p);\n      if (b == 0) {\n        b=1;\n      }\n      if (b == 1 && encodingMode == TEXT_COMPACTION) {\n        encodeBinary(bytes,p,1,TEXT_COMPACTION,sb);\n      }\n else {\n        encodeBinary(bytes,p,b,encodingMode,sb);\n        encodingMode=BYTE_COMPACTION;\n        textSubMode=SUBMODE_ALPHA;\n      }\n      p+=b;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1506,
        "startLineNumber" : 177,
        "startColumnNumber" : 6,
        "endLineNumber" : 215,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (p < len) {\n  int n=determineConsecutiveDigitCount(msg,p);\n  if (n >= 13) {\n    sb.append((char)LATCH_TO_NUMERIC);\n    encodingMode=NUMERIC_COMPACTION;\n    textSubMode=SUBMODE_ALPHA;\n    encodeNumeric(msg,p,n,sb);\n    p+=n;\n  }\n else {\n    int t=determineConsecutiveTextCount(msg,p);\n    if (t >= 5 || n == len) {\n      if (encodingMode != TEXT_COMPACTION) {\n        sb.append((char)LATCH_TO_TEXT);\n        encodingMode=TEXT_COMPACTION;\n        textSubMode=SUBMODE_ALPHA;\n      }\n      textSubMode=encodeText(msg,p,t,sb,textSubMode);\n      p+=t;\n    }\n else {\n      if (bytes == null) {\n        bytes=getBytesForMessage(msg);\n      }\n      int b=determineConsecutiveBinaryCount(msg,bytes,p);\n      if (b == 0) {\n        b=1;\n      }\n      if (b == 1 && encodingMode == TEXT_COMPACTION) {\n        encodeBinary(bytes,p,1,TEXT_COMPACTION,sb);\n      }\n else {\n        encodeBinary(bytes,p,b,encodingMode,sb);\n        encodingMode=BYTE_COMPACTION;\n        textSubMode=SUBMODE_ALPHA;\n      }\n      p+=b;\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 164,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1522,
        "startLineNumber" : 176,
        "startColumnNumber" : 11,
        "endLineNumber" : 216,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  while (p < len) {\n    int n=determineConsecutiveDigitCount(msg,p);\n    if (n >= 13) {\n      sb.append((char)LATCH_TO_NUMERIC);\n      encodingMode=NUMERIC_COMPACTION;\n      textSubMode=SUBMODE_ALPHA;\n      encodeNumeric(msg,p,n,sb);\n      p+=n;\n    }\n else {\n      int t=determineConsecutiveTextCount(msg,p);\n      if (t >= 5 || n == len) {\n        if (encodingMode != TEXT_COMPACTION) {\n          sb.append((char)LATCH_TO_TEXT);\n          encodingMode=TEXT_COMPACTION;\n          textSubMode=SUBMODE_ALPHA;\n        }\n        textSubMode=encodeText(msg,p,t,sb,textSubMode);\n        p+=t;\n      }\n else {\n        if (bytes == null) {\n          bytes=getBytesForMessage(msg);\n        }\n        int b=determineConsecutiveBinaryCount(msg,bytes,p);\n        if (b == 0) {\n          b=1;\n        }\n        if (b == 1 && encodingMode == TEXT_COMPACTION) {\n          encodeBinary(bytes,p,1,TEXT_COMPACTION,sb);\n        }\n else {\n          encodeBinary(bytes,p,b,encodingMode,sb);\n          encodingMode=BYTE_COMPACTION;\n          textSubMode=SUBMODE_ALPHA;\n        }\n        p+=b;\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 165,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1700,
        "startLineNumber" : 171,
        "startColumnNumber" : 11,
        "endLineNumber" : 216,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (compaction == Compaction.NUMERIC) {\n  encodingMode=NUMERIC_COMPACTION;\n  sb.append((char)LATCH_TO_NUMERIC);\n  encodeNumeric(msg,p,len,sb);\n}\n else {\n  while (p < len) {\n    int n=determineConsecutiveDigitCount(msg,p);\n    if (n >= 13) {\n      sb.append((char)LATCH_TO_NUMERIC);\n      encodingMode=NUMERIC_COMPACTION;\n      textSubMode=SUBMODE_ALPHA;\n      encodeNumeric(msg,p,n,sb);\n      p+=n;\n    }\n else {\n      int t=determineConsecutiveTextCount(msg,p);\n      if (t >= 5 || n == len) {\n        if (encodingMode != TEXT_COMPACTION) {\n          sb.append((char)LATCH_TO_TEXT);\n          encodingMode=TEXT_COMPACTION;\n          textSubMode=SUBMODE_ALPHA;\n        }\n        textSubMode=encodeText(msg,p,t,sb,textSubMode);\n        p+=t;\n      }\n else {\n        if (bytes == null) {\n          bytes=getBytesForMessage(msg);\n        }\n        int b=determineConsecutiveBinaryCount(msg,bytes,p);\n        if (b == 0) {\n          b=1;\n        }\n        if (b == 1 && encodingMode == TEXT_COMPACTION) {\n          encodeBinary(bytes,p,1,TEXT_COMPACTION,sb);\n        }\n else {\n          encodeBinary(bytes,p,b,encodingMode,sb);\n          encodingMode=BYTE_COMPACTION;\n          textSubMode=SUBMODE_ALPHA;\n        }\n        p+=b;\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 190,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1893,
        "startLineNumber" : 166,
        "startColumnNumber" : 11,
        "endLineNumber" : 216,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (compaction == Compaction.BYTE) {\n  encodingMode=BYTE_COMPACTION;\n  bytes=getBytesForMessage(msg);\n  encodeBinary(bytes,p,bytes.length,encodingMode,sb);\n}\n else if (compaction == Compaction.NUMERIC) {\n  encodingMode=NUMERIC_COMPACTION;\n  sb.append((char)LATCH_TO_NUMERIC);\n  encodeNumeric(msg,p,len,sb);\n}\n else {\n  while (p < len) {\n    int n=determineConsecutiveDigitCount(msg,p);\n    if (n >= 13) {\n      sb.append((char)LATCH_TO_NUMERIC);\n      encodingMode=NUMERIC_COMPACTION;\n      textSubMode=SUBMODE_ALPHA;\n      encodeNumeric(msg,p,n,sb);\n      p+=n;\n    }\n else {\n      int t=determineConsecutiveTextCount(msg,p);\n      if (t >= 5 || n == len) {\n        if (encodingMode != TEXT_COMPACTION) {\n          sb.append((char)LATCH_TO_TEXT);\n          encodingMode=TEXT_COMPACTION;\n          textSubMode=SUBMODE_ALPHA;\n        }\n        textSubMode=encodeText(msg,p,t,sb,textSubMode);\n        p+=t;\n      }\n else {\n        if (bytes == null) {\n          bytes=getBytesForMessage(msg);\n        }\n        int b=determineConsecutiveBinaryCount(msg,bytes,p);\n        if (b == 0) {\n          b=1;\n        }\n        if (b == 1 && encodingMode == TEXT_COMPACTION) {\n          encodeBinary(bytes,p,1,TEXT_COMPACTION,sb);\n        }\n else {\n          encodeBinary(bytes,p,b,encodingMode,sb);\n          encodingMode=BYTE_COMPACTION;\n          textSubMode=SUBMODE_ALPHA;\n        }\n        p+=b;\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 217,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1993,
        "startLineNumber" : 163,
        "startColumnNumber" : 4,
        "endLineNumber" : 216,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (compaction == Compaction.TEXT) {\n  encodeText(msg,p,len,sb,textSubMode);\n}\n else if (compaction == Compaction.BYTE) {\n  encodingMode=BYTE_COMPACTION;\n  bytes=getBytesForMessage(msg);\n  encodeBinary(bytes,p,bytes.length,encodingMode,sb);\n}\n else if (compaction == Compaction.NUMERIC) {\n  encodingMode=NUMERIC_COMPACTION;\n  sb.append((char)LATCH_TO_NUMERIC);\n  encodeNumeric(msg,p,len,sb);\n}\n else {\n  while (p < len) {\n    int n=determineConsecutiveDigitCount(msg,p);\n    if (n >= 13) {\n      sb.append((char)LATCH_TO_NUMERIC);\n      encodingMode=NUMERIC_COMPACTION;\n      textSubMode=SUBMODE_ALPHA;\n      encodeNumeric(msg,p,n,sb);\n      p+=n;\n    }\n else {\n      int t=determineConsecutiveTextCount(msg,p);\n      if (t >= 5 || n == len) {\n        if (encodingMode != TEXT_COMPACTION) {\n          sb.append((char)LATCH_TO_TEXT);\n          encodingMode=TEXT_COMPACTION;\n          textSubMode=SUBMODE_ALPHA;\n        }\n        textSubMode=encodeText(msg,p,t,sb,textSubMode);\n        p+=t;\n      }\n else {\n        if (bytes == null) {\n          bytes=getBytesForMessage(msg);\n        }\n        int b=determineConsecutiveBinaryCount(msg,bytes,p);\n        if (b == 0) {\n          b=1;\n        }\n        if (b == 1 && encodingMode == TEXT_COMPACTION) {\n          encodeBinary(bytes,p,1,TEXT_COMPACTION,sb);\n        }\n else {\n          encodeBinary(bytes,p,b,encodingMode,sb);\n          encodingMode=BYTE_COMPACTION;\n          textSubMode=SUBMODE_ALPHA;\n        }\n        p+=b;\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 232,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2405,
        "startLineNumber" : 151,
        "startColumnNumber" : 90,
        "endLineNumber" : 219,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  byte[] bytes=null;\n  StringBuilder sb=new StringBuilder(msg.length());\n  int len=msg.length();\n  int p=0;\n  int encodingMode=TEXT_COMPACTION;\n  int textSubMode=SUBMODE_ALPHA;\n  if (compaction == Compaction.TEXT) {\n    encodeText(msg,p,len,sb,textSubMode);\n  }\n else   if (compaction == Compaction.BYTE) {\n    encodingMode=BYTE_COMPACTION;\n    bytes=getBytesForMessage(msg);\n    encodeBinary(bytes,p,bytes.length,encodingMode,sb);\n  }\n else   if (compaction == Compaction.NUMERIC) {\n    encodingMode=NUMERIC_COMPACTION;\n    sb.append((char)LATCH_TO_NUMERIC);\n    encodeNumeric(msg,p,len,sb);\n  }\n else {\n    while (p < len) {\n      int n=determineConsecutiveDigitCount(msg,p);\n      if (n >= 13) {\n        sb.append((char)LATCH_TO_NUMERIC);\n        encodingMode=NUMERIC_COMPACTION;\n        textSubMode=SUBMODE_ALPHA;\n        encodeNumeric(msg,p,n,sb);\n        p+=n;\n      }\n else {\n        int t=determineConsecutiveTextCount(msg,p);\n        if (t >= 5 || n == len) {\n          if (encodingMode != TEXT_COMPACTION) {\n            sb.append((char)LATCH_TO_TEXT);\n            encodingMode=TEXT_COMPACTION;\n            textSubMode=SUBMODE_ALPHA;\n          }\n          textSubMode=encodeText(msg,p,t,sb,textSubMode);\n          p+=t;\n        }\n else {\n          if (bytes == null) {\n            bytes=getBytesForMessage(msg);\n          }\n          int b=determineConsecutiveBinaryCount(msg,bytes,p);\n          if (b == 0) {\n            b=1;\n          }\n          if (b == 1 && encodingMode == TEXT_COMPACTION) {\n            encodeBinary(bytes,p,1,TEXT_COMPACTION,sb);\n          }\n else {\n            encodeBinary(bytes,p,b,encodingMode,sb);\n            encodingMode=BYTE_COMPACTION;\n            textSubMode=SUBMODE_ALPHA;\n          }\n          p+=b;\n        }\n      }\n    }\n  }\n  return sb.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 277,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2821,
        "startLineNumber" : 143,
        "startColumnNumber" : 2,
        "endLineNumber" : 219,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Performs high-level encoding of a PDF417 message using the algorithm described in annex P of ISO/IEC 15438:2001(E). If byte compaction has been selected, then only byte compaction is used.\n * @param msg the message\n * @return the encoded message (the char values range from 0 to 928)\n */\nstatic String encodeHighLevel(String msg,Compaction compaction) throws WriterException {\n  byte[] bytes=null;\n  StringBuilder sb=new StringBuilder(msg.length());\n  int len=msg.length();\n  int p=0;\n  int encodingMode=TEXT_COMPACTION;\n  int textSubMode=SUBMODE_ALPHA;\n  if (compaction == Compaction.TEXT) {\n    encodeText(msg,p,len,sb,textSubMode);\n  }\n else   if (compaction == Compaction.BYTE) {\n    encodingMode=BYTE_COMPACTION;\n    bytes=getBytesForMessage(msg);\n    encodeBinary(bytes,p,bytes.length,encodingMode,sb);\n  }\n else   if (compaction == Compaction.NUMERIC) {\n    encodingMode=NUMERIC_COMPACTION;\n    sb.append((char)LATCH_TO_NUMERIC);\n    encodeNumeric(msg,p,len,sb);\n  }\n else {\n    while (p < len) {\n      int n=determineConsecutiveDigitCount(msg,p);\n      if (n >= 13) {\n        sb.append((char)LATCH_TO_NUMERIC);\n        encodingMode=NUMERIC_COMPACTION;\n        textSubMode=SUBMODE_ALPHA;\n        encodeNumeric(msg,p,n,sb);\n        p+=n;\n      }\n else {\n        int t=determineConsecutiveTextCount(msg,p);\n        if (t >= 5 || n == len) {\n          if (encodingMode != TEXT_COMPACTION) {\n            sb.append((char)LATCH_TO_TEXT);\n            encodingMode=TEXT_COMPACTION;\n            textSubMode=SUBMODE_ALPHA;\n          }\n          textSubMode=encodeText(msg,p,t,sb,textSubMode);\n          p+=t;\n        }\n else {\n          if (bytes == null) {\n            bytes=getBytesForMessage(msg);\n          }\n          int b=determineConsecutiveBinaryCount(msg,bytes,p);\n          if (b == 0) {\n            b=1;\n          }\n          if (b == 1 && encodingMode == TEXT_COMPACTION) {\n            encodeBinary(bytes,p,1,TEXT_COMPACTION,sb);\n          }\n else {\n            encodeBinary(bytes,p,b,encodingMode,sb);\n            encodingMode=BYTE_COMPACTION;\n            textSubMode=SUBMODE_ALPHA;\n          }\n          p+=b;\n        }\n      }\n    }\n  }\n  return sb.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 293,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 431,
        "startLineNumber" : 203,
        "startColumnNumber" : 12,
        "endLineNumber" : 211,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (b == 1 && encodingMode == TEXT_COMPACTION) {\n  encodeBinary(bytes,p,1,TEXT_COMPACTION,sb);\n}\n else {\n  encodeBinary(bytes,p,b,encodingMode,sb);\n  encodingMode=BYTE_COMPACTION;\n  textSubMode=SUBMODE_ALPHA;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 5
    },
    "tokenLength" : 8,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 41,
    "startLineNumber" : 203,
    "startColumnNumber" : 16,
    "endLineNumber" : 203,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}