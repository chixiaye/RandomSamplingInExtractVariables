{
  "id" : 69,
  "expression" : "buffer",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/app/src/processing/app/tools/ZipDeflater.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "buffer",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 53,
      "startColumnNumber" : 44,
      "endLineNumber" : 53,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 53,
        "startColumnNumber" : 24,
        "endLineNumber" : 53,
        "endColumnNumber" : 51
      },
      "nodeContext" : "zipInputStream.read(buffer)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 53,
        "startColumnNumber" : 18,
        "endLineNumber" : 53,
        "endColumnNumber" : 51
      },
      "nodeContext" : "len=zipInputStream.read(buffer)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 53,
        "startColumnNumber" : 17,
        "endLineNumber" : 53,
        "endColumnNumber" : 52
      },
      "nodeContext" : "(len=zipInputStream.read(buffer))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 53,
        "startColumnNumber" : 17,
        "endLineNumber" : 53,
        "endColumnNumber" : 58
      },
      "nodeContext" : "(len=zipInputStream.read(buffer)) != -1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 53,
        "startColumnNumber" : 10,
        "endLineNumber" : 55,
        "endColumnNumber" : 11
      },
      "nodeContext" : "while ((len=zipInputStream.read(buffer)) != -1) {\n  fos.write(buffer,0,len);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 301,
        "startLineNumber" : 48,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  fos=new FileOutputStream(entryFile);\n  zipInputStream=zipFile.getInputStream(entry);\n  byte[] buffer=new byte[1024 * 4];\n  int len=-1;\n  while ((len=zipInputStream.read(buffer)) != -1) {\n    fos.write(buffer,0,len);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 479,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  fos=new FileOutputStream(entryFile);\n  zipInputStream=zipFile.getInputStream(entry);\n  byte[] buffer=new byte[1024 * 4];\n  int len=-1;\n  while ((len=zipInputStream.read(buffer)) != -1) {\n    fos.write(buffer,0,len);\n  }\n}\n  finally {\n  if (fos != null) {\n    fos.close();\n  }\n  if (zipInputStream != null) {\n    zipInputStream.close();\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 73,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 577,
        "startLineNumber" : 45,
        "startColumnNumber" : 13,
        "endLineNumber" : 64,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  FileOutputStream fos=null;\n  InputStream zipInputStream=null;\n  try {\n    fos=new FileOutputStream(entryFile);\n    zipInputStream=zipFile.getInputStream(entry);\n    byte[] buffer=new byte[1024 * 4];\n    int len=-1;\n    while ((len=zipInputStream.read(buffer)) != -1) {\n      fos.write(buffer,0,len);\n    }\n  }\n  finally {\n    if (fos != null) {\n      fos.close();\n    }\n    if (zipInputStream != null) {\n      zipInputStream.close();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 644,
        "startLineNumber" : 43,
        "startColumnNumber" : 6,
        "endLineNumber" : 64,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (entry.isDirectory()) {\n  entryFile.mkdir();\n}\n else {\n  FileOutputStream fos=null;\n  InputStream zipInputStream=null;\n  try {\n    fos=new FileOutputStream(entryFile);\n    zipInputStream=zipFile.getInputStream(entry);\n    byte[] buffer=new byte[1024 * 4];\n    int len=-1;\n    while ((len=zipInputStream.read(buffer)) != -1) {\n      fos.write(buffer,0,len);\n    }\n  }\n  finally {\n    if (fos != null) {\n      fos.close();\n    }\n    if (zipInputStream != null) {\n      zipInputStream.close();\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 95,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 816,
        "startLineNumber" : 39,
        "startColumnNumber" : 38,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ZipEntry entry=entries.nextElement();\n  ensureFoldersOfEntryExist(tmpFolder,entry);\n  File entryFile=new File(tmpFolder,entry.getName());\n  if (entry.isDirectory()) {\n    entryFile.mkdir();\n  }\n else {\n    FileOutputStream fos=null;\n    InputStream zipInputStream=null;\n    try {\n      fos=new FileOutputStream(entryFile);\n      zipInputStream=zipFile.getInputStream(entry);\n      byte[] buffer=new byte[1024 * 4];\n      int len=-1;\n      while ((len=zipInputStream.read(buffer)) != -1) {\n        fos.write(buffer,0,len);\n      }\n    }\n  finally {\n      if (fos != null) {\n        fos.close();\n      }\n      if (zipInputStream != null) {\n        zipInputStream.close();\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 850,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (entries.hasMoreElements()) {\n  ZipEntry entry=entries.nextElement();\n  ensureFoldersOfEntryExist(tmpFolder,entry);\n  File entryFile=new File(tmpFolder,entry.getName());\n  if (entry.isDirectory()) {\n    entryFile.mkdir();\n  }\n else {\n    FileOutputStream fos=null;\n    InputStream zipInputStream=null;\n    try {\n      fos=new FileOutputStream(entryFile);\n      zipInputStream=zipFile.getInputStream(entry);\n      byte[] buffer=new byte[1024 * 4];\n      int len=-1;\n      while ((len=zipInputStream.read(buffer)) != -1) {\n        fos.write(buffer,0,len);\n      }\n    }\n  finally {\n      if (fos != null) {\n        fos.close();\n      }\n      if (zipInputStream != null) {\n        zipInputStream.close();\n      }\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 125,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1356,
        "startLineNumber" : 29,
        "startColumnNumber" : 43,
        "endLineNumber" : 71,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String tmpFolderName=folderNameFromZip() + random.nextInt(1000000);\n  File tmpFolder=new File(destFolder,tmpFolderName);\n  if (!tmpFolder.mkdir()) {\n    throw new IOException(\"Unable to create folder \" + tmpFolderName);\n  }\n  Enumeration<? extends ZipEntry> entries=zipFile.entries();\n  while (entries.hasMoreElements()) {\n    ZipEntry entry=entries.nextElement();\n    ensureFoldersOfEntryExist(tmpFolder,entry);\n    File entryFile=new File(tmpFolder,entry.getName());\n    if (entry.isDirectory()) {\n      entryFile.mkdir();\n    }\n else {\n      FileOutputStream fos=null;\n      InputStream zipInputStream=null;\n      try {\n        fos=new FileOutputStream(entryFile);\n        zipInputStream=zipFile.getInputStream(entry);\n        byte[] buffer=new byte[1024 * 4];\n        int len=-1;\n        while ((len=zipInputStream.read(buffer)) != -1) {\n          fos.write(buffer,0,len);\n        }\n      }\n  finally {\n        if (fos != null) {\n          fos.close();\n        }\n        if (zipInputStream != null) {\n          zipInputStream.close();\n        }\n      }\n    }\n  }\n  deleteUndesiredFoldersAndFiles(tmpFolder);\n  ensureOneLevelFolder(tmpFolder);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 181,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1397,
        "startLineNumber" : 29,
        "startColumnNumber" : 2,
        "endLineNumber" : 71,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void deflate() throws IOException {\n  String tmpFolderName=folderNameFromZip() + random.nextInt(1000000);\n  File tmpFolder=new File(destFolder,tmpFolderName);\n  if (!tmpFolder.mkdir()) {\n    throw new IOException(\"Unable to create folder \" + tmpFolderName);\n  }\n  Enumeration<? extends ZipEntry> entries=zipFile.entries();\n  while (entries.hasMoreElements()) {\n    ZipEntry entry=entries.nextElement();\n    ensureFoldersOfEntryExist(tmpFolder,entry);\n    File entryFile=new File(tmpFolder,entry.getName());\n    if (entry.isDirectory()) {\n      entryFile.mkdir();\n    }\n else {\n      FileOutputStream fos=null;\n      InputStream zipInputStream=null;\n      try {\n        fos=new FileOutputStream(entryFile);\n        zipInputStream=zipFile.getInputStream(entry);\n        byte[] buffer=new byte[1024 * 4];\n        int len=-1;\n        while ((len=zipInputStream.read(buffer)) != -1) {\n          fos.write(buffer,0,len);\n        }\n      }\n  finally {\n        if (fos != null) {\n          fos.close();\n        }\n        if (zipInputStream != null) {\n          zipInputStream.close();\n        }\n      }\n    }\n  }\n  deleteUndesiredFoldersAndFiles(tmpFolder);\n  ensureOneLevelFolder(tmpFolder);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 187,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 53,
        "startColumnNumber" : 17,
        "endLineNumber" : 53,
        "endColumnNumber" : 58
      },
      "nodeContext" : "(len=zipInputStream.read(buffer)) != -1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "byte[]"
  }, {
    "nodeContext" : "buffer",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 54,
      "startColumnNumber" : 22,
      "endLineNumber" : 54,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 54,
        "startColumnNumber" : 12,
        "endLineNumber" : 54,
        "endColumnNumber" : 37
      },
      "nodeContext" : "fos.write(buffer,0,len)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 54,
        "startColumnNumber" : 12,
        "endLineNumber" : 54,
        "endColumnNumber" : 38
      },
      "nodeContext" : "fos.write(buffer,0,len);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 53,
        "startColumnNumber" : 60,
        "endLineNumber" : 55,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  fos.write(buffer,0,len);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 53,
        "startColumnNumber" : 10,
        "endLineNumber" : 55,
        "endColumnNumber" : 11
      },
      "nodeContext" : "while ((len=zipInputStream.read(buffer)) != -1) {\n  fos.write(buffer,0,len);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 301,
        "startLineNumber" : 48,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  fos=new FileOutputStream(entryFile);\n  zipInputStream=zipFile.getInputStream(entry);\n  byte[] buffer=new byte[1024 * 4];\n  int len=-1;\n  while ((len=zipInputStream.read(buffer)) != -1) {\n    fos.write(buffer,0,len);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 479,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  fos=new FileOutputStream(entryFile);\n  zipInputStream=zipFile.getInputStream(entry);\n  byte[] buffer=new byte[1024 * 4];\n  int len=-1;\n  while ((len=zipInputStream.read(buffer)) != -1) {\n    fos.write(buffer,0,len);\n  }\n}\n  finally {\n  if (fos != null) {\n    fos.close();\n  }\n  if (zipInputStream != null) {\n    zipInputStream.close();\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 73,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 577,
        "startLineNumber" : 45,
        "startColumnNumber" : 13,
        "endLineNumber" : 64,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  FileOutputStream fos=null;\n  InputStream zipInputStream=null;\n  try {\n    fos=new FileOutputStream(entryFile);\n    zipInputStream=zipFile.getInputStream(entry);\n    byte[] buffer=new byte[1024 * 4];\n    int len=-1;\n    while ((len=zipInputStream.read(buffer)) != -1) {\n      fos.write(buffer,0,len);\n    }\n  }\n  finally {\n    if (fos != null) {\n      fos.close();\n    }\n    if (zipInputStream != null) {\n      zipInputStream.close();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 644,
        "startLineNumber" : 43,
        "startColumnNumber" : 6,
        "endLineNumber" : 64,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (entry.isDirectory()) {\n  entryFile.mkdir();\n}\n else {\n  FileOutputStream fos=null;\n  InputStream zipInputStream=null;\n  try {\n    fos=new FileOutputStream(entryFile);\n    zipInputStream=zipFile.getInputStream(entry);\n    byte[] buffer=new byte[1024 * 4];\n    int len=-1;\n    while ((len=zipInputStream.read(buffer)) != -1) {\n      fos.write(buffer,0,len);\n    }\n  }\n  finally {\n    if (fos != null) {\n      fos.close();\n    }\n    if (zipInputStream != null) {\n      zipInputStream.close();\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 95,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 816,
        "startLineNumber" : 39,
        "startColumnNumber" : 38,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ZipEntry entry=entries.nextElement();\n  ensureFoldersOfEntryExist(tmpFolder,entry);\n  File entryFile=new File(tmpFolder,entry.getName());\n  if (entry.isDirectory()) {\n    entryFile.mkdir();\n  }\n else {\n    FileOutputStream fos=null;\n    InputStream zipInputStream=null;\n    try {\n      fos=new FileOutputStream(entryFile);\n      zipInputStream=zipFile.getInputStream(entry);\n      byte[] buffer=new byte[1024 * 4];\n      int len=-1;\n      while ((len=zipInputStream.read(buffer)) != -1) {\n        fos.write(buffer,0,len);\n      }\n    }\n  finally {\n      if (fos != null) {\n        fos.close();\n      }\n      if (zipInputStream != null) {\n        zipInputStream.close();\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 850,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (entries.hasMoreElements()) {\n  ZipEntry entry=entries.nextElement();\n  ensureFoldersOfEntryExist(tmpFolder,entry);\n  File entryFile=new File(tmpFolder,entry.getName());\n  if (entry.isDirectory()) {\n    entryFile.mkdir();\n  }\n else {\n    FileOutputStream fos=null;\n    InputStream zipInputStream=null;\n    try {\n      fos=new FileOutputStream(entryFile);\n      zipInputStream=zipFile.getInputStream(entry);\n      byte[] buffer=new byte[1024 * 4];\n      int len=-1;\n      while ((len=zipInputStream.read(buffer)) != -1) {\n        fos.write(buffer,0,len);\n      }\n    }\n  finally {\n      if (fos != null) {\n        fos.close();\n      }\n      if (zipInputStream != null) {\n        zipInputStream.close();\n      }\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 125,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1356,
        "startLineNumber" : 29,
        "startColumnNumber" : 43,
        "endLineNumber" : 71,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String tmpFolderName=folderNameFromZip() + random.nextInt(1000000);\n  File tmpFolder=new File(destFolder,tmpFolderName);\n  if (!tmpFolder.mkdir()) {\n    throw new IOException(\"Unable to create folder \" + tmpFolderName);\n  }\n  Enumeration<? extends ZipEntry> entries=zipFile.entries();\n  while (entries.hasMoreElements()) {\n    ZipEntry entry=entries.nextElement();\n    ensureFoldersOfEntryExist(tmpFolder,entry);\n    File entryFile=new File(tmpFolder,entry.getName());\n    if (entry.isDirectory()) {\n      entryFile.mkdir();\n    }\n else {\n      FileOutputStream fos=null;\n      InputStream zipInputStream=null;\n      try {\n        fos=new FileOutputStream(entryFile);\n        zipInputStream=zipFile.getInputStream(entry);\n        byte[] buffer=new byte[1024 * 4];\n        int len=-1;\n        while ((len=zipInputStream.read(buffer)) != -1) {\n          fos.write(buffer,0,len);\n        }\n      }\n  finally {\n        if (fos != null) {\n          fos.close();\n        }\n        if (zipInputStream != null) {\n          zipInputStream.close();\n        }\n      }\n    }\n  }\n  deleteUndesiredFoldersAndFiles(tmpFolder);\n  ensureOneLevelFolder(tmpFolder);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 181,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1397,
        "startLineNumber" : 29,
        "startColumnNumber" : 2,
        "endLineNumber" : 71,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void deflate() throws IOException {\n  String tmpFolderName=folderNameFromZip() + random.nextInt(1000000);\n  File tmpFolder=new File(destFolder,tmpFolderName);\n  if (!tmpFolder.mkdir()) {\n    throw new IOException(\"Unable to create folder \" + tmpFolderName);\n  }\n  Enumeration<? extends ZipEntry> entries=zipFile.entries();\n  while (entries.hasMoreElements()) {\n    ZipEntry entry=entries.nextElement();\n    ensureFoldersOfEntryExist(tmpFolder,entry);\n    File entryFile=new File(tmpFolder,entry.getName());\n    if (entry.isDirectory()) {\n      entryFile.mkdir();\n    }\n else {\n      FileOutputStream fos=null;\n      InputStream zipInputStream=null;\n      try {\n        fos=new FileOutputStream(entryFile);\n        zipInputStream=zipFile.getInputStream(entry);\n        byte[] buffer=new byte[1024 * 4];\n        int len=-1;\n        while ((len=zipInputStream.read(buffer)) != -1) {\n          fos.write(buffer,0,len);\n        }\n      }\n  finally {\n        if (fos != null) {\n          fos.close();\n        }\n        if (zipInputStream != null) {\n          zipInputStream.close();\n        }\n      }\n    }\n  }\n  deleteUndesiredFoldersAndFiles(tmpFolder);\n  ensureOneLevelFolder(tmpFolder);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 187,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 54,
        "startColumnNumber" : 12,
        "endLineNumber" : 54,
        "endColumnNumber" : 38
      },
      "nodeContext" : "fos.write(buffer,0,len);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "byte[]"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 53,
    "startColumnNumber" : 44,
    "endLineNumber" : 53,
    "endColumnNumber" : 50
  }, {
    "charLength" : 6,
    "startLineNumber" : 54,
    "startColumnNumber" : 22,
    "endLineNumber" : 54,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}