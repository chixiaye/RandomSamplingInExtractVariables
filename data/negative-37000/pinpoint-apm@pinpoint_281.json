{
  "id" : 281,
  "expression" : "\"testGenerate_AroundInterceptor0:{}\"",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/profiler/src/test/java/com/navercorp/pinpoint/profiler/instrument/interceptor/InvokeAfterCodeGeneratorTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"testGenerate_AroundInterceptor0:{}\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 175,
      "startColumnNumber" : 21,
      "endLineNumber" : 175,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 175,
        "startColumnNumber" : 8,
        "endLineNumber" : 175,
        "endColumnNumber" : 68
      },
      "nodeContext" : "logger.debug(\"testGenerate_AroundInterceptor0:{}\",generate)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 175,
        "startColumnNumber" : 8,
        "endLineNumber" : 175,
        "endColumnNumber" : 69
      },
      "nodeContext" : "logger.debug(\"testGenerate_AroundInterceptor0:{}\",generate);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1281,
        "startLineNumber" : 157,
        "startColumnNumber" : 67,
        "endLineNumber" : 182,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Class<AroundInterceptor0> aroundInterceptor3Class=AroundInterceptor0.class;\n  final InterceptorDefinition interceptorDefinition=interceptorDefinitionFactory.createInterceptorDefinition(aroundInterceptor3Class);\n  final InstrumentClass mockClass=mock(InstrumentClass.class);\n  Mockito.when(mockClass.getName()).thenReturn(\"TestClass\");\n  final InstrumentMethod mockMethod=mock(InstrumentMethod.class);\n  Mockito.when(mockMethod.getName()).thenReturn(\"TestMethod\");\n  Mockito.when(mockMethod.getParameterTypes()).thenReturn(new String[]{});\n  Mockito.when(mockMethod.getReturnType()).thenReturn(\"java.lang.Object\");\n  TraceContext context=mock(TraceContext.class);\n  final InvokeAfterCodeGenerator invokeAfterCodeGenerator=new InvokeAfterCodeGenerator(100,interceptorDefinition,mockClass,mockMethod,context,false,true);\n  final String generate=invokeAfterCodeGenerator.generate();\n  logger.debug(\"testGenerate_AroundInterceptor0:{}\",generate);\n  Assert.assertFalse(generate.contains(\"($w)$1\"));\n  Assert.assertFalse(generate.contains(\"($w)$2\"));\n  Assert.assertFalse(generate.contains(\"($w)$3\"));\n  Assert.assertTrue(generate.contains(\"$e\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1354,
        "startLineNumber" : 156,
        "startColumnNumber" : 4,
        "endLineNumber" : 182,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testGenerate_AroundInterceptor0() throws Exception {\n  final Class<AroundInterceptor0> aroundInterceptor3Class=AroundInterceptor0.class;\n  final InterceptorDefinition interceptorDefinition=interceptorDefinitionFactory.createInterceptorDefinition(aroundInterceptor3Class);\n  final InstrumentClass mockClass=mock(InstrumentClass.class);\n  Mockito.when(mockClass.getName()).thenReturn(\"TestClass\");\n  final InstrumentMethod mockMethod=mock(InstrumentMethod.class);\n  Mockito.when(mockMethod.getName()).thenReturn(\"TestMethod\");\n  Mockito.when(mockMethod.getParameterTypes()).thenReturn(new String[]{});\n  Mockito.when(mockMethod.getReturnType()).thenReturn(\"java.lang.Object\");\n  TraceContext context=mock(TraceContext.class);\n  final InvokeAfterCodeGenerator invokeAfterCodeGenerator=new InvokeAfterCodeGenerator(100,interceptorDefinition,mockClass,mockMethod,context,false,true);\n  final String generate=invokeAfterCodeGenerator.generate();\n  logger.debug(\"testGenerate_AroundInterceptor0:{}\",generate);\n  Assert.assertFalse(generate.contains(\"($w)$1\"));\n  Assert.assertFalse(generate.contains(\"($w)$2\"));\n  Assert.assertFalse(generate.contains(\"($w)$3\"));\n  Assert.assertTrue(generate.contains(\"$e\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 171,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 175,
        "startColumnNumber" : 8,
        "endLineNumber" : 175,
        "endColumnNumber" : 69
      },
      "nodeContext" : "logger.debug(\"testGenerate_AroundInterceptor0:{}\",generate);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 175,
    "startColumnNumber" : 21,
    "endLineNumber" : 175,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}