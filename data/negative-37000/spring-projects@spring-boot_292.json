{
  "id" : 292,
  "expression" : "snake.getTail().contains(this.head)",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-samples/spring-boot-sample-websocket-tomcat/src/main/java/samples/websocket/tomcat/snake/Snake.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "snake.getTail().contains(this.head)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 110,
      "startColumnNumber" : 27,
      "endLineNumber" : 110,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 8,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 110,
        "startColumnNumber" : 11,
        "endLineNumber" : 110,
        "endColumnNumber" : 62
      },
      "nodeContext" : "tailCollision=snake.getTail().contains(this.head)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 110,
        "startColumnNumber" : 3,
        "endLineNumber" : 110,
        "endColumnNumber" : 63
      },
      "nodeContext" : "boolean tailCollision=snake.getTail().contains(this.head);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 275,
        "startLineNumber" : 107,
        "startColumnNumber" : 29,
        "endLineNumber" : 117,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  boolean headCollision=this.id != snake.id && snake.getHead().equals(this.head);\n  boolean tailCollision=snake.getTail().contains(this.head);\n  if (headCollision || tailCollision) {\n    kill();\n    if (this.id != snake.id) {\n      snake.reward();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 302,
        "startLineNumber" : 107,
        "startColumnNumber" : 2,
        "endLineNumber" : 117,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (Snake snake : snakes) {\n  boolean headCollision=this.id != snake.id && snake.getHead().equals(this.head);\n  boolean tailCollision=snake.getTail().contains(this.head);\n  if (headCollision || tailCollision) {\n    kill();\n    if (this.id != snake.id) {\n      snake.reward();\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 60,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 309,
        "startLineNumber" : 106,
        "startColumnNumber" : 74,
        "endLineNumber" : 118,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  for (  Snake snake : snakes) {\n    boolean headCollision=this.id != snake.id && snake.getHead().equals(this.head);\n    boolean tailCollision=snake.getTail().contains(this.head);\n    if (headCollision || tailCollision) {\n      kill();\n      if (this.id != snake.id) {\n        snake.reward();\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 382,
        "startLineNumber" : 106,
        "startColumnNumber" : 1,
        "endLineNumber" : 118,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private void handleCollisions(Collection<Snake> snakes) throws Exception {\n  for (  Snake snake : snakes) {\n    boolean headCollision=this.id != snake.id && snake.getHead().equals(this.head);\n    boolean tailCollision=snake.getTail().contains(this.head);\n    if (headCollision || tailCollision) {\n      kill();\n      if (this.id != snake.id) {\n        snake.reward();\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 110,
        "startColumnNumber" : 3,
        "endLineNumber" : 110,
        "endColumnNumber" : 63
      },
      "nodeContext" : "boolean tailCollision=snake.getTail().contains(this.head);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 110,
    "startColumnNumber" : 27,
    "endLineNumber" : 110,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}