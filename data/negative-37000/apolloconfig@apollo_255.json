{
  "id" : 255,
  "expression" : "i",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-client/src/main/java/com/ctrip/framework/apollo/internals/ConfigServiceLocator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 111,
      "startColumnNumber" : 20,
      "endLineNumber" : 111,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 111,
        "startColumnNumber" : 20,
        "endLineNumber" : 111,
        "endColumnNumber" : 34
      },
      "nodeContext" : "i < maxRetries",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 909,
        "startLineNumber" : 111,
        "startColumnNumber" : 4,
        "endLineNumber" : 138,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < maxRetries; i++) {\n  Transaction transaction=Cat.newTransaction(\"Apollo.MetaService\",\"getConfigService\");\n  transaction.addData(\"Url\",url);\n  try {\n    HttpResponse<List<ServiceDTO>> response=m_httpUtil.doGet(request,m_responseType);\n    transaction.setStatus(Message.SUCCESS);\n    List<ServiceDTO> services=response.getBody();\n    if (services == null || services.isEmpty()) {\n      logConfigServiceToCat(\"Empty response!\");\n      continue;\n    }\n    m_configServices.set(services);\n    logConfigServicesToCat(services);\n    return;\n  }\n catch (  Throwable ex) {\n    Cat.logError(ex);\n    transaction.setStatus(ex);\n    exception=ex;\n  }\n finally {\n    transaction.complete();\n  }\n  try {\n    TimeUnit.SECONDS.sleep(1);\n  }\n catch (  InterruptedException ex) {\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 128,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1184,
        "startLineNumber" : 104,
        "startColumnNumber" : 51,
        "endLineNumber" : 142,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String url=assembleMetaServiceUrl();\n  HttpRequest request=new HttpRequest(url);\n  int maxRetries=5;\n  Throwable exception=null;\n  for (int i=0; i < maxRetries; i++) {\n    Transaction transaction=Cat.newTransaction(\"Apollo.MetaService\",\"getConfigService\");\n    transaction.addData(\"Url\",url);\n    try {\n      HttpResponse<List<ServiceDTO>> response=m_httpUtil.doGet(request,m_responseType);\n      transaction.setStatus(Message.SUCCESS);\n      List<ServiceDTO> services=response.getBody();\n      if (services == null || services.isEmpty()) {\n        logConfigServiceToCat(\"Empty response!\");\n        continue;\n      }\n      m_configServices.set(services);\n      logConfigServicesToCat(services);\n      return;\n    }\n catch (    Throwable ex) {\n      Cat.logError(ex);\n      transaction.setStatus(ex);\n      exception=ex;\n    }\n finally {\n      transaction.complete();\n    }\n    try {\n      TimeUnit.SECONDS.sleep(1);\n    }\n catch (    InterruptedException ex) {\n    }\n  }\n  throw new ApolloConfigException(String.format(\"Get config services failed from %s\",url),exception);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1233,
        "startLineNumber" : 104,
        "startColumnNumber" : 2,
        "endLineNumber" : 142,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private synchronized void updateConfigServices(){\n  String url=assembleMetaServiceUrl();\n  HttpRequest request=new HttpRequest(url);\n  int maxRetries=5;\n  Throwable exception=null;\n  for (int i=0; i < maxRetries; i++) {\n    Transaction transaction=Cat.newTransaction(\"Apollo.MetaService\",\"getConfigService\");\n    transaction.addData(\"Url\",url);\n    try {\n      HttpResponse<List<ServiceDTO>> response=m_httpUtil.doGet(request,m_responseType);\n      transaction.setStatus(Message.SUCCESS);\n      List<ServiceDTO> services=response.getBody();\n      if (services == null || services.isEmpty()) {\n        logConfigServiceToCat(\"Empty response!\");\n        continue;\n      }\n      m_configServices.set(services);\n      logConfigServicesToCat(services);\n      return;\n    }\n catch (    Throwable ex) {\n      Cat.logError(ex);\n      transaction.setStatus(ex);\n      exception=ex;\n    }\n finally {\n      transaction.complete();\n    }\n    try {\n      TimeUnit.SECONDS.sleep(1);\n    }\n catch (    InterruptedException ex) {\n    }\n  }\n  throw new ApolloConfigException(String.format(\"Get config services failed from %s\",url),exception);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 171,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 111,
        "startColumnNumber" : 20,
        "endLineNumber" : 111,
        "endColumnNumber" : 34
      },
      "nodeContext" : "i < maxRetries",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 111,
    "startColumnNumber" : 20,
    "endLineNumber" : 111,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ ]
}