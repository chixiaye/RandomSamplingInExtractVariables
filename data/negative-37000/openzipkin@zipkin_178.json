{
  "id" : 178,
  "expression" : "new SampleRateCalculatorInput(new ZooKeeperCollectorSampler.Builder().windowSize(1).updateFrequency(1).sufficientWindowSize(1).outlierThreshold(1),new AtomicInteger(1))",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin-sampler/zookeeper/src/test/java/zipkin/sampler/zookeeper/SampleRateCalculatorInputTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new SampleRateCalculatorInput(new ZooKeeperCollectorSampler.Builder().windowSize(1).updateFrequency(1).sufficientWindowSize(1).outlierThreshold(1),new AtomicInteger(1))",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 205,
      "startLineNumber" : 26,
      "startColumnNumber" : 38,
      "endLineNumber" : 30,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 24,
    "astHeight" : 9,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 213,
        "startLineNumber" : 26,
        "startColumnNumber" : 30,
        "endLineNumber" : 30,
        "endColumnNumber" : 51
      },
      "nodeContext" : "rates=new SampleRateCalculatorInput(new ZooKeeperCollectorSampler.Builder().windowSize(1).updateFrequency(1).sufficientWindowSize(1).outlierThreshold(1),new AtomicInteger(1))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 26,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 240,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 30,
        "endColumnNumber" : 52
      },
      "nodeContext" : "SampleRateCalculatorInput rates=new SampleRateCalculatorInput(new ZooKeeperCollectorSampler.Builder().windowSize(1).updateFrequency(1).sufficientWindowSize(1).outlierThreshold(1),new AtomicInteger(1));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 29,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 472,
        "startLineNumber" : 25,
        "startColumnNumber" : 50,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  SampleRateCalculatorInput rates=new SampleRateCalculatorInput(new ZooKeeperCollectorSampler.Builder().windowSize(1).updateFrequency(1).sufficientWindowSize(1).outlierThreshold(1),new AtomicInteger(1));\n  assertThat(rates.apply(ImmutableMap.of(\"zipkin-server@host:8080\",10))).isPresent();\n  rates.target.set(0);\n  assertThat(rates.apply(ImmutableMap.of(\"zipkin-server@host:8080\",10))).isEmpty();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 520,
        "startLineNumber" : 25,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void presentWhenTargetIsPositive(){\n  SampleRateCalculatorInput rates=new SampleRateCalculatorInput(new ZooKeeperCollectorSampler.Builder().windowSize(1).updateFrequency(1).sufficientWindowSize(1).outlierThreshold(1),new AtomicInteger(1));\n  assertThat(rates.apply(ImmutableMap.of(\"zipkin-server@host:8080\",10))).isPresent();\n  rates.target.set(0);\n  assertThat(rates.apply(ImmutableMap.of(\"zipkin-server@host:8080\",10))).isEmpty();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 240,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 30,
        "endColumnNumber" : 52
      },
      "nodeContext" : "SampleRateCalculatorInput rates=new SampleRateCalculatorInput(new ZooKeeperCollectorSampler.Builder().windowSize(1).updateFrequency(1).sufficientWindowSize(1).outlierThreshold(1),new AtomicInteger(1));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 29,
      "astHeight" : 11
    },
    "tokenLength" : 13,
    "type" : "zipkin.sampler.zookeeper.SampleRateCalculatorInput"
  } ],
  "positionList" : [ {
    "charLength" : 205,
    "startLineNumber" : 26,
    "startColumnNumber" : 38,
    "endLineNumber" : 30,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}