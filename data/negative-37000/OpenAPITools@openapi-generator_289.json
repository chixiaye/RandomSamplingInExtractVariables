{
  "id" : 289,
  "expression" : "result",
  "projectName" : "OpenAPITools@openapi-generator",
  "commitID" : "9e1972bb1d3a4f1e3f47c87613f4050feada0146",
  "filePath" : "/modules/openapi-generator/src/main/java/org/openapitools/codegen/validations/oas/OpenApiParameterValidations.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "result",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 43,
      "startColumnNumber" : 12,
      "endLineNumber" : 43,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 43,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 99
      },
      "nodeContext" : "result.setDetails(String.format(Locale.ROOT,\"%s contains an underscore.\",headerName))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 43,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 100
      },
      "nodeContext" : "result.setDetails(String.format(Locale.ROOT,\"%s contains an underscore.\",headerName));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 160,
        "startLineNumber" : 41,
        "startColumnNumber" : 89,
        "endLineNumber" : 44,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  result=new ValidationRule.Fail();\n  result.setDetails(String.format(Locale.ROOT,\"%s contains an underscore.\",headerName));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 241,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (StringUtils.isNotEmpty(headerName) && StringUtils.contains(headerName,'_')) {\n  result=new ValidationRule.Fail();\n  result.setDetails(String.format(Locale.ROOT,\"%s contains an underscore.\",headerName));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 568,
        "startLineNumber" : 35,
        "startColumnNumber" : 99,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Parameter parameter=parameterWrapper.getParameter();\n  if (parameter == null || !\"header\".equals(parameter.getIn()))   return ValidationRule.Pass.empty();\n  ValidationRule.Result result=ValidationRule.Pass.empty();\n  String headerName=parameter.getName();\n  if (StringUtils.isNotEmpty(headerName) && StringUtils.contains(headerName,'_')) {\n    result=new ValidationRule.Fail();\n    result.setDetails(String.format(Locale.ROOT,\"%s contains an underscore.\",headerName));\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1080,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Apache and Nginx default to legacy CGI behavior in which header with underscore are ignored. Raise this for awareness to the user.\n * @param parameter Any spec doc parameter. The method will handle {@link HeaderParameter} evaluation.\n * @return {@link ValidationRule.Pass} if the check succeeds, otherwise {@link ValidationRule.Fail} with details \"[key] contains an underscore.\"\n */\nprivate static ValidationRule.Result apacheNginxHeaderCheck(ParameterWrapper parameterWrapper){\n  Parameter parameter=parameterWrapper.getParameter();\n  if (parameter == null || !\"header\".equals(parameter.getIn()))   return ValidationRule.Pass.empty();\n  ValidationRule.Result result=ValidationRule.Pass.empty();\n  String headerName=parameter.getName();\n  if (StringUtils.isNotEmpty(headerName) && StringUtils.contains(headerName,'_')) {\n    result=new ValidationRule.Fail();\n    result.setDetails(String.format(Locale.ROOT,\"%s contains an underscore.\",headerName));\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 94,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 43,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 100
      },
      "nodeContext" : "result.setDetails(String.format(Locale.ROOT,\"%s contains an underscore.\",headerName));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.openapitools.codegen.validation.ValidationRule.Result"
  }, {
    "nodeContext" : "result",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 46,
      "startColumnNumber" : 15,
      "endLineNumber" : 46,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 22
      },
      "nodeContext" : "return result;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 568,
        "startLineNumber" : 35,
        "startColumnNumber" : 99,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Parameter parameter=parameterWrapper.getParameter();\n  if (parameter == null || !\"header\".equals(parameter.getIn()))   return ValidationRule.Pass.empty();\n  ValidationRule.Result result=ValidationRule.Pass.empty();\n  String headerName=parameter.getName();\n  if (StringUtils.isNotEmpty(headerName) && StringUtils.contains(headerName,'_')) {\n    result=new ValidationRule.Fail();\n    result.setDetails(String.format(Locale.ROOT,\"%s contains an underscore.\",headerName));\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1080,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Apache and Nginx default to legacy CGI behavior in which header with underscore are ignored. Raise this for awareness to the user.\n * @param parameter Any spec doc parameter. The method will handle {@link HeaderParameter} evaluation.\n * @return {@link ValidationRule.Pass} if the check succeeds, otherwise {@link ValidationRule.Fail} with details \"[key] contains an underscore.\"\n */\nprivate static ValidationRule.Result apacheNginxHeaderCheck(ParameterWrapper parameterWrapper){\n  Parameter parameter=parameterWrapper.getParameter();\n  if (parameter == null || !\"header\".equals(parameter.getIn()))   return ValidationRule.Pass.empty();\n  ValidationRule.Result result=ValidationRule.Pass.empty();\n  String headerName=parameter.getName();\n  if (StringUtils.isNotEmpty(headerName) && StringUtils.contains(headerName,'_')) {\n    result=new ValidationRule.Fail();\n    result.setDetails(String.format(Locale.ROOT,\"%s contains an underscore.\",headerName));\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 94,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 22
      },
      "nodeContext" : "return result;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.openapitools.codegen.validation.ValidationRule.Result"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 43,
    "startColumnNumber" : 12,
    "endLineNumber" : 43,
    "endColumnNumber" : 18
  }, {
    "charLength" : 6,
    "startLineNumber" : 46,
    "startColumnNumber" : 15,
    "endLineNumber" : 46,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}