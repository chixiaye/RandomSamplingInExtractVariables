{
  "id" : 181,
  "expression" : "\"2002:0506:0708::1\"",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava-tests/test/com/google/common/net/InetAddressesTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"2002:0506:0708::1\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 625,
      "startColumnNumber" : 72,
      "endLineNumber" : 625,
      "endColumnNumber" : 91
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 625,
        "startColumnNumber" : 48,
        "endLineNumber" : 625,
        "endColumnNumber" : 92
      },
      "nodeContext" : "InetAddresses.forString(\"2002:0506:0708::1\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 625,
        "startColumnNumber" : 12,
        "endLineNumber" : 625,
        "endColumnNumber" : 93
      },
      "nodeContext" : "InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"2002:0506:0708::1\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 213,
        "startLineNumber" : 623,
        "startColumnNumber" : 4,
        "endLineNumber" : 625,
        "endColumnNumber" : 94
      },
      "nodeContext" : "assertThat(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"2002:0102:0304::1\"))).isNotEqualTo(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"2002:0506:0708::1\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 214,
        "startLineNumber" : 623,
        "startColumnNumber" : 4,
        "endLineNumber" : 625,
        "endColumnNumber" : 95
      },
      "nodeContext" : "assertThat(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"2002:0102:0304::1\"))).isNotEqualTo(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"2002:0506:0708::1\")));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3064,
        "startLineNumber" : 600,
        "startColumnNumber" : 42,
        "endLineNumber" : 663,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertThat(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"127.0.0.1\"))).isEqualTo(InetAddresses.forString(\"127.0.0.1\"));\n  assertThat(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"::1\"))).isEqualTo(InetAddresses.forString(\"127.0.0.1\"));\n  assertThat(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"::\"))).isEqualTo(InetAddresses.forString(\"0.0.0.0\"));\n  assertThat(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"::1.2.3.4\"))).isNotEqualTo(InetAddresses.forString(\"1.2.3.4\"));\n  assertThat(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"2002:0102:0304::1\"))).isNotEqualTo(InetAddresses.forString(\"1.2.3.4\"));\n  assertThat(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"2002:0102:0304::1\"))).isNotEqualTo(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"2002:0506:0708::1\")));\n  assertThat(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"2002:0102:0304::1\"))).isEqualTo(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"2002:0102:0304::2\")));\n  assertThat(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"2001:0000:4136:e378:8000:63bf:3fff:fdd2\"))).isNotEqualTo(InetAddresses.forString(\"192.0.2.45\"));\n  assertThat(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"2001:0000:4136:e378:8000:63bf:3fff:fdd2\"))).isNotEqualTo(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"2001:0000:4136:e378:8000:63bf:3fff:fdd3\")));\n  assertThat(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"2001:0000:4136:e378:8000:63bf:3fff:fdd2\"))).isEqualTo(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"2001:0000:5136:f378:9000:73bf:3fff:fdd2\")));\n  int coercedInt=InetAddresses.coerceToInteger(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"2001:4860::1\")));\n  assertThat(coercedInt).isAtLeast(0xe0000000);\n  assertThat(coercedInt).isAtMost(0xfffffffe);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 201,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3104,
        "startLineNumber" : 600,
        "startColumnNumber" : 2,
        "endLineNumber" : 663,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testGetCoercedIPv4Address(){\n  assertThat(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"127.0.0.1\"))).isEqualTo(InetAddresses.forString(\"127.0.0.1\"));\n  assertThat(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"::1\"))).isEqualTo(InetAddresses.forString(\"127.0.0.1\"));\n  assertThat(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"::\"))).isEqualTo(InetAddresses.forString(\"0.0.0.0\"));\n  assertThat(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"::1.2.3.4\"))).isNotEqualTo(InetAddresses.forString(\"1.2.3.4\"));\n  assertThat(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"2002:0102:0304::1\"))).isNotEqualTo(InetAddresses.forString(\"1.2.3.4\"));\n  assertThat(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"2002:0102:0304::1\"))).isNotEqualTo(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"2002:0506:0708::1\")));\n  assertThat(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"2002:0102:0304::1\"))).isEqualTo(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"2002:0102:0304::2\")));\n  assertThat(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"2001:0000:4136:e378:8000:63bf:3fff:fdd2\"))).isNotEqualTo(InetAddresses.forString(\"192.0.2.45\"));\n  assertThat(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"2001:0000:4136:e378:8000:63bf:3fff:fdd2\"))).isNotEqualTo(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"2001:0000:4136:e378:8000:63bf:3fff:fdd3\")));\n  assertThat(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"2001:0000:4136:e378:8000:63bf:3fff:fdd2\"))).isEqualTo(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"2001:0000:5136:f378:9000:73bf:3fff:fdd2\")));\n  int coercedInt=InetAddresses.coerceToInteger(InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"2001:4860::1\")));\n  assertThat(coercedInt).isAtLeast(0xe0000000);\n  assertThat(coercedInt).isAtMost(0xfffffffe);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 205,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 625,
        "startColumnNumber" : 12,
        "endLineNumber" : 625,
        "endColumnNumber" : 93
      },
      "nodeContext" : "InetAddresses.getCoercedIPv4Address(InetAddresses.forString(\"2002:0506:0708::1\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 625,
    "startColumnNumber" : 72,
    "endLineNumber" : 625,
    "endColumnNumber" : 91
  } ],
  "layoutRelationDataList" : [ ]
}