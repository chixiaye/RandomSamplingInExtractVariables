{
  "id" : 34,
  "expression" : "new BufferedReader(new InputStreamReader(sock.getInputStream()))",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/src/java/test/org/apache/zookeeper/test/ClientBase.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new BufferedReader(new InputStreamReader(sock.getInputStream()))",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 97,
      "startLineNumber" : 156,
      "startColumnNumber" : 24,
      "endLineNumber" : 157,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 155,
        "startColumnNumber" : 20,
        "endLineNumber" : 157,
        "endColumnNumber" : 77
      },
      "nodeContext" : "reader=new BufferedReader(new InputStreamReader(sock.getInputStream()))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 155,
        "startColumnNumber" : 20,
        "endLineNumber" : 157,
        "endColumnNumber" : 78
      },
      "nodeContext" : "reader=new BufferedReader(new InputStreamReader(sock.getInputStream()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 529,
        "startLineNumber" : 150,
        "startColumnNumber" : 20,
        "endLineNumber" : 162,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  OutputStream outstream=sock.getOutputStream();\n  outstream.write(\"stat\".getBytes());\n  outstream.flush();\n  reader=new BufferedReader(new InputStreamReader(sock.getInputStream()));\n  String line=reader.readLine();\n  if (line != null && line.startsWith(\"Zookeeper version:\")) {\n    return true;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 699,
        "startLineNumber" : 150,
        "startColumnNumber" : 16,
        "endLineNumber" : 167,
        "endColumnNumber" : 17
      },
      "nodeContext" : "try {\n  OutputStream outstream=sock.getOutputStream();\n  outstream.write(\"stat\".getBytes());\n  outstream.flush();\n  reader=new BufferedReader(new InputStreamReader(sock.getInputStream()));\n  String line=reader.readLine();\n  if (line != null && line.startsWith(\"Zookeeper version:\")) {\n    return true;\n  }\n}\n  finally {\n  sock.close();\n  if (reader != null) {\n    reader.close();\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 67,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 831,
        "startLineNumber" : 147,
        "startColumnNumber" : 16,
        "endLineNumber" : 168,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Socket sock=new Socket(host,port);\n  BufferedReader reader=null;\n  try {\n    OutputStream outstream=sock.getOutputStream();\n    outstream.write(\"stat\".getBytes());\n    outstream.flush();\n    reader=new BufferedReader(new InputStreamReader(sock.getInputStream()));\n    String line=reader.readLine();\n    if (line != null && line.startsWith(\"Zookeeper version:\")) {\n      return true;\n    }\n  }\n  finally {\n    sock.close();\n    if (reader != null) {\n      reader.close();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 978,
        "startLineNumber" : 147,
        "startColumnNumber" : 12,
        "endLineNumber" : 171,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  Socket sock=new Socket(host,port);\n  BufferedReader reader=null;\n  try {\n    OutputStream outstream=sock.getOutputStream();\n    outstream.write(\"stat\".getBytes());\n    outstream.flush();\n    reader=new BufferedReader(new InputStreamReader(sock.getInputStream()));\n    String line=reader.readLine();\n    if (line != null && line.startsWith(\"Zookeeper version:\")) {\n      return true;\n    }\n  }\n  finally {\n    sock.close();\n    if (reader != null) {\n      reader.close();\n    }\n  }\n}\n catch (IOException e) {\n  LOG.info(\"server \" + hp + \" not up \"+ e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 100,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1244,
        "startLineNumber" : 146,
        "startColumnNumber" : 21,
        "endLineNumber" : 181,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    Socket sock=new Socket(host,port);\n    BufferedReader reader=null;\n    try {\n      OutputStream outstream=sock.getOutputStream();\n      outstream.write(\"stat\".getBytes());\n      outstream.flush();\n      reader=new BufferedReader(new InputStreamReader(sock.getInputStream()));\n      String line=reader.readLine();\n      if (line != null && line.startsWith(\"Zookeeper version:\")) {\n        return true;\n      }\n    }\n  finally {\n      sock.close();\n      if (reader != null) {\n        reader.close();\n      }\n    }\n  }\n catch (  IOException e) {\n    LOG.info(\"server \" + hp + \" not up \"+ e);\n  }\n  if (System.currentTimeMillis() > start + timeout) {\n    break;\n  }\n  try {\n    Thread.sleep(250);\n  }\n catch (  InterruptedException e) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1257,
        "startLineNumber" : 146,
        "startColumnNumber" : 8,
        "endLineNumber" : 181,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (true) {\n  try {\n    Socket sock=new Socket(host,port);\n    BufferedReader reader=null;\n    try {\n      OutputStream outstream=sock.getOutputStream();\n      outstream.write(\"stat\".getBytes());\n      outstream.flush();\n      reader=new BufferedReader(new InputStreamReader(sock.getInputStream()));\n      String line=reader.readLine();\n      if (line != null && line.startsWith(\"Zookeeper version:\")) {\n        return true;\n      }\n    }\n  finally {\n      sock.close();\n      if (reader != null) {\n        reader.close();\n      }\n    }\n  }\n catch (  IOException e) {\n    LOG.info(\"server \" + hp + \" not up \"+ e);\n  }\n  if (System.currentTimeMillis() > start + timeout) {\n    break;\n  }\n  try {\n    Thread.sleep(250);\n  }\n catch (  InterruptedException e) {\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 126,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1463,
        "startLineNumber" : 141,
        "startColumnNumber" : 67,
        "endLineNumber" : 183,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long start=System.currentTimeMillis();\n  String split[]=hp.split(\":\");\n  String host=split[0];\n  int port=Integer.parseInt(split[1]);\n  while (true) {\n    try {\n      Socket sock=new Socket(host,port);\n      BufferedReader reader=null;\n      try {\n        OutputStream outstream=sock.getOutputStream();\n        outstream.write(\"stat\".getBytes());\n        outstream.flush();\n        reader=new BufferedReader(new InputStreamReader(sock.getInputStream()));\n        String line=reader.readLine();\n        if (line != null && line.startsWith(\"Zookeeper version:\")) {\n          return true;\n        }\n      }\n  finally {\n        sock.close();\n        if (reader != null) {\n          reader.close();\n        }\n      }\n    }\n catch (    IOException e) {\n      LOG.info(\"server \" + hp + \" not up \"+ e);\n    }\n    if (System.currentTimeMillis() > start + timeout) {\n      break;\n    }\n    try {\n      Thread.sleep(250);\n    }\n catch (    InterruptedException e) {\n    }\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 164,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1526,
        "startLineNumber" : 141,
        "startColumnNumber" : 4,
        "endLineNumber" : 183,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static boolean waitForServerUp(String hp,long timeout){\n  long start=System.currentTimeMillis();\n  String split[]=hp.split(\":\");\n  String host=split[0];\n  int port=Integer.parseInt(split[1]);\n  while (true) {\n    try {\n      Socket sock=new Socket(host,port);\n      BufferedReader reader=null;\n      try {\n        OutputStream outstream=sock.getOutputStream();\n        outstream.write(\"stat\".getBytes());\n        outstream.flush();\n        reader=new BufferedReader(new InputStreamReader(sock.getInputStream()));\n        String line=reader.readLine();\n        if (line != null && line.startsWith(\"Zookeeper version:\")) {\n          return true;\n        }\n      }\n  finally {\n        sock.close();\n        if (reader != null) {\n          reader.close();\n        }\n      }\n    }\n catch (    IOException e) {\n      LOG.info(\"server \" + hp + \" not up \"+ e);\n    }\n    if (System.currentTimeMillis() > start + timeout) {\n      break;\n    }\n    try {\n      Thread.sleep(250);\n    }\n catch (    InterruptedException e) {\n    }\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 155,
        "startColumnNumber" : 20,
        "endLineNumber" : 157,
        "endColumnNumber" : 77
      },
      "nodeContext" : "reader=new BufferedReader(new InputStreamReader(sock.getInputStream()))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "java.io.BufferedReader"
  } ],
  "positionList" : [ {
    "charLength" : 97,
    "startLineNumber" : 156,
    "startColumnNumber" : 24,
    "endLineNumber" : 157,
    "endColumnNumber" : 77
  } ],
  "layoutRelationDataList" : [ ]
}