{
  "id" : 86,
  "expression" : "new InstanceOf(double.class)",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockito/internal/matchers/InstanceOfTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new InstanceOf(double.class)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 39,
      "startColumnNumber" : 19,
      "endLineNumber" : 39,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 39,
        "startColumnNumber" : 19,
        "endLineNumber" : 39,
        "endColumnNumber" : 63
      },
      "nodeContext" : "new InstanceOf(double.class).matches(1000.1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 64
      },
      "nodeContext" : "assertThat(new InstanceOf(double.class).matches(1000.1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 73
      },
      "nodeContext" : "assertThat(new InstanceOf(double.class).matches(1000.1)).isTrue()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 74
      },
      "nodeContext" : "assertThat(new InstanceOf(double.class).matches(1000.1)).isTrue();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1608,
        "startLineNumber" : 33,
        "startColumnNumber" : 59,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertThat(new InstanceOf(int.class).matches(1000)).isTrue();\n  assertThat(new InstanceOf(Integer.class).matches(1000)).isTrue();\n  assertThat(new InstanceOf(int.class).matches(new Integer(1000))).isTrue();\n  assertThat(new InstanceOf(Integer.class).matches(new Integer(1000))).isTrue();\n  assertThat(new InstanceOf(double.class).matches(1000.1)).isTrue();\n  assertThat(new InstanceOf(Double.class).matches(1000.1)).isTrue();\n  assertThat(new InstanceOf(double.class).matches(new Double(1000.1))).isTrue();\n  assertThat(new InstanceOf(Double.class).matches(new Double(1000.1))).isTrue();\n  assertThat(new InstanceOf(int.class).matches(1000L)).isFalse();\n  assertThat(new InstanceOf(Integer.class).matches(1000L)).isFalse();\n  assertThat(new InstanceOf(int.class).matches(new Long(1000))).isFalse();\n  assertThat(new InstanceOf(Integer.class).matches(new Long(1000))).isFalse();\n  assertThat(new InstanceOf(long.class).matches(1000L)).isTrue();\n  assertThat(new InstanceOf(Long.class).matches(1000L)).isTrue();\n  assertThat(new InstanceOf(long.class).matches(new Long(1000))).isTrue();\n  assertThat(new InstanceOf(Long.class).matches(new Long(1000))).isTrue();\n  assertThat(new InstanceOf(long.class).matches(1000)).isFalse();\n  assertThat(new InstanceOf(Long.class).matches(1000)).isFalse();\n  assertThat(new InstanceOf(long.class).matches(new Integer(1000))).isFalse();\n  assertThat(new InstanceOf(Long.class).matches(new Integer(1000))).isFalse();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 301,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1674,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void should_check_for_primitive_wrapper_types(){\n  assertThat(new InstanceOf(int.class).matches(1000)).isTrue();\n  assertThat(new InstanceOf(Integer.class).matches(1000)).isTrue();\n  assertThat(new InstanceOf(int.class).matches(new Integer(1000))).isTrue();\n  assertThat(new InstanceOf(Integer.class).matches(new Integer(1000))).isTrue();\n  assertThat(new InstanceOf(double.class).matches(1000.1)).isTrue();\n  assertThat(new InstanceOf(Double.class).matches(1000.1)).isTrue();\n  assertThat(new InstanceOf(double.class).matches(new Double(1000.1))).isTrue();\n  assertThat(new InstanceOf(Double.class).matches(new Double(1000.1))).isTrue();\n  assertThat(new InstanceOf(int.class).matches(1000L)).isFalse();\n  assertThat(new InstanceOf(Integer.class).matches(1000L)).isFalse();\n  assertThat(new InstanceOf(int.class).matches(new Long(1000))).isFalse();\n  assertThat(new InstanceOf(Integer.class).matches(new Long(1000))).isFalse();\n  assertThat(new InstanceOf(long.class).matches(1000L)).isTrue();\n  assertThat(new InstanceOf(Long.class).matches(1000L)).isTrue();\n  assertThat(new InstanceOf(long.class).matches(new Long(1000))).isTrue();\n  assertThat(new InstanceOf(Long.class).matches(new Long(1000))).isTrue();\n  assertThat(new InstanceOf(long.class).matches(1000)).isFalse();\n  assertThat(new InstanceOf(Long.class).matches(1000)).isFalse();\n  assertThat(new InstanceOf(long.class).matches(new Integer(1000))).isFalse();\n  assertThat(new InstanceOf(Long.class).matches(new Integer(1000))).isFalse();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 307,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 74
      },
      "nodeContext" : "assertThat(new InstanceOf(double.class).matches(1000.1)).isTrue();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "org.mockito.internal.matchers.InstanceOf"
  }, {
    "nodeContext" : "new InstanceOf(double.class)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 41,
      "startColumnNumber" : 19,
      "endLineNumber" : 41,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 41,
        "startColumnNumber" : 19,
        "endLineNumber" : 41,
        "endColumnNumber" : 75
      },
      "nodeContext" : "new InstanceOf(double.class).matches(new Double(1000.1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertThat(new InstanceOf(double.class).matches(new Double(1000.1)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 85
      },
      "nodeContext" : "assertThat(new InstanceOf(double.class).matches(new Double(1000.1))).isTrue()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 86
      },
      "nodeContext" : "assertThat(new InstanceOf(double.class).matches(new Double(1000.1))).isTrue();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1608,
        "startLineNumber" : 33,
        "startColumnNumber" : 59,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertThat(new InstanceOf(int.class).matches(1000)).isTrue();\n  assertThat(new InstanceOf(Integer.class).matches(1000)).isTrue();\n  assertThat(new InstanceOf(int.class).matches(new Integer(1000))).isTrue();\n  assertThat(new InstanceOf(Integer.class).matches(new Integer(1000))).isTrue();\n  assertThat(new InstanceOf(double.class).matches(1000.1)).isTrue();\n  assertThat(new InstanceOf(Double.class).matches(1000.1)).isTrue();\n  assertThat(new InstanceOf(double.class).matches(new Double(1000.1))).isTrue();\n  assertThat(new InstanceOf(Double.class).matches(new Double(1000.1))).isTrue();\n  assertThat(new InstanceOf(int.class).matches(1000L)).isFalse();\n  assertThat(new InstanceOf(Integer.class).matches(1000L)).isFalse();\n  assertThat(new InstanceOf(int.class).matches(new Long(1000))).isFalse();\n  assertThat(new InstanceOf(Integer.class).matches(new Long(1000))).isFalse();\n  assertThat(new InstanceOf(long.class).matches(1000L)).isTrue();\n  assertThat(new InstanceOf(Long.class).matches(1000L)).isTrue();\n  assertThat(new InstanceOf(long.class).matches(new Long(1000))).isTrue();\n  assertThat(new InstanceOf(Long.class).matches(new Long(1000))).isTrue();\n  assertThat(new InstanceOf(long.class).matches(1000)).isFalse();\n  assertThat(new InstanceOf(Long.class).matches(1000)).isFalse();\n  assertThat(new InstanceOf(long.class).matches(new Integer(1000))).isFalse();\n  assertThat(new InstanceOf(Long.class).matches(new Integer(1000))).isFalse();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 301,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1674,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void should_check_for_primitive_wrapper_types(){\n  assertThat(new InstanceOf(int.class).matches(1000)).isTrue();\n  assertThat(new InstanceOf(Integer.class).matches(1000)).isTrue();\n  assertThat(new InstanceOf(int.class).matches(new Integer(1000))).isTrue();\n  assertThat(new InstanceOf(Integer.class).matches(new Integer(1000))).isTrue();\n  assertThat(new InstanceOf(double.class).matches(1000.1)).isTrue();\n  assertThat(new InstanceOf(Double.class).matches(1000.1)).isTrue();\n  assertThat(new InstanceOf(double.class).matches(new Double(1000.1))).isTrue();\n  assertThat(new InstanceOf(Double.class).matches(new Double(1000.1))).isTrue();\n  assertThat(new InstanceOf(int.class).matches(1000L)).isFalse();\n  assertThat(new InstanceOf(Integer.class).matches(1000L)).isFalse();\n  assertThat(new InstanceOf(int.class).matches(new Long(1000))).isFalse();\n  assertThat(new InstanceOf(Integer.class).matches(new Long(1000))).isFalse();\n  assertThat(new InstanceOf(long.class).matches(1000L)).isTrue();\n  assertThat(new InstanceOf(Long.class).matches(1000L)).isTrue();\n  assertThat(new InstanceOf(long.class).matches(new Long(1000))).isTrue();\n  assertThat(new InstanceOf(Long.class).matches(new Long(1000))).isTrue();\n  assertThat(new InstanceOf(long.class).matches(1000)).isFalse();\n  assertThat(new InstanceOf(Long.class).matches(1000)).isFalse();\n  assertThat(new InstanceOf(long.class).matches(new Integer(1000))).isFalse();\n  assertThat(new InstanceOf(Long.class).matches(new Integer(1000))).isFalse();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 307,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 86
      },
      "nodeContext" : "assertThat(new InstanceOf(double.class).matches(new Double(1000.1))).isTrue();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "org.mockito.internal.matchers.InstanceOf"
  } ],
  "positionList" : [ {
    "charLength" : 28,
    "startLineNumber" : 39,
    "startColumnNumber" : 19,
    "endLineNumber" : 39,
    "endColumnNumber" : 47
  }, {
    "charLength" : 28,
    "startLineNumber" : 41,
    "startColumnNumber" : 19,
    "endLineNumber" : 41,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}