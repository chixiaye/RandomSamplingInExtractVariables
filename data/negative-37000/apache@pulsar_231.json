{
  "id" : 231,
  "expression" : "\"My test application\"",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-io/dynamodb/src/test/java/org/apache/pulsar/io/dynamodb/DynamoDBSourceConfigTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"My test application\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 64,
      "startColumnNumber" : 50,
      "endLineNumber" : 64,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 72
      },
      "nodeContext" : "assertEquals(config.getApplicationName(),\"My test application\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 73
      },
      "nodeContext" : "assertEquals(config.getApplicationName(),\"My test application\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1312,
        "startLineNumber" : 55,
        "startColumnNumber" : 64,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  File yamlFile=getFile(\"sourceConfig.yaml\");\n  DynamoDBSourceConfig config=DynamoDBSourceConfig.load(yamlFile.getAbsolutePath());\n  assertNotNull(config);\n  assertEquals(config.getAwsEndpoint(),\"https://some.endpoint.aws\");\n  assertEquals(config.getAwsRegion(),\"us-east-1\");\n  assertEquals(config.getAwsDynamodbStreamArn(),\"arn:aws:dynamodb:us-west-2:111122223333:table/TestTable/stream/2015-05-11T21:21:33.291\");\n  assertEquals(config.getAwsCredentialPluginParam(),\"{\\\"accessKey\\\":\\\"myKey\\\",\\\"secretKey\\\":\\\"my-Secret\\\"}\");\n  assertEquals(config.getApplicationName(),\"My test application\");\n  assertEquals(config.getCheckpointInterval(),30000);\n  assertEquals(config.getBackoffTime(),4000);\n  assertEquals(config.getNumRetries(),3);\n  assertEquals(config.getReceiveQueueSize(),2000);\n  assertEquals(config.getInitialPositionInStream(),InitialPositionInStream.TRIM_HORIZON);\n  Calendar cal=Calendar.getInstance();\n  cal.setTime(config.getStartAtTime());\n  ZonedDateTime actual=ZonedDateTime.ofInstant(cal.toInstant(),ZoneOffset.UTC);\n  ZonedDateTime expected=ZonedDateTime.ofInstant(DAY.toInstant(),ZoneOffset.UTC);\n  assertEquals(actual,expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1382,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public final void loadFromYamlFileTest() throws IOException {\n  File yamlFile=getFile(\"sourceConfig.yaml\");\n  DynamoDBSourceConfig config=DynamoDBSourceConfig.load(yamlFile.getAbsolutePath());\n  assertNotNull(config);\n  assertEquals(config.getAwsEndpoint(),\"https://some.endpoint.aws\");\n  assertEquals(config.getAwsRegion(),\"us-east-1\");\n  assertEquals(config.getAwsDynamodbStreamArn(),\"arn:aws:dynamodb:us-west-2:111122223333:table/TestTable/stream/2015-05-11T21:21:33.291\");\n  assertEquals(config.getAwsCredentialPluginParam(),\"{\\\"accessKey\\\":\\\"myKey\\\",\\\"secretKey\\\":\\\"my-Secret\\\"}\");\n  assertEquals(config.getApplicationName(),\"My test application\");\n  assertEquals(config.getCheckpointInterval(),30000);\n  assertEquals(config.getBackoffTime(),4000);\n  assertEquals(config.getNumRetries(),3);\n  assertEquals(config.getReceiveQueueSize(),2000);\n  assertEquals(config.getInitialPositionInStream(),InitialPositionInStream.TRIM_HORIZON);\n  Calendar cal=Calendar.getInstance();\n  cal.setTime(config.getStartAtTime());\n  ZonedDateTime actual=ZonedDateTime.ofInstant(cal.toInstant(),ZoneOffset.UTC);\n  ZonedDateTime expected=ZonedDateTime.ofInstant(DAY.toInstant(),ZoneOffset.UTC);\n  assertEquals(actual,expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 153,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 73
      },
      "nodeContext" : "assertEquals(config.getApplicationName(),\"My test application\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 64,
    "startColumnNumber" : 50,
    "endLineNumber" : 64,
    "endColumnNumber" : 71
  } ],
  "layoutRelationDataList" : [ ]
}