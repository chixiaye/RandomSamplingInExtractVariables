{
  "id" : 117,
  "expression" : "2",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/codec/src/test/java/io/netty/handler/codec/CodecOutputListTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "2",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 39,
      "startColumnNumber" : 25,
      "endLineNumber" : 39,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 39,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertEquals(2,codecOutputList.size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 39,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertEquals(2,codecOutputList.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 886,
        "startLineNumber" : 29,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  assertEquals(0,codecOutputList.size());\n  assertTrue(codecOutputList.isEmpty());\n  codecOutputList.add(1);\n  assertEquals(1,codecOutputList.size());\n  assertFalse(codecOutputList.isEmpty());\n  assertEquals(1,codecOutputList.get(0));\n  codecOutputList.add(0,0);\n  assertEquals(2,codecOutputList.size());\n  assertFalse(codecOutputList.isEmpty());\n  assertEquals(0,codecOutputList.get(0));\n  assertEquals(1,codecOutputList.get(1));\n  codecOutputList.add(1,2);\n  assertEquals(3,codecOutputList.size());\n  assertFalse(codecOutputList.isEmpty());\n  assertEquals(0,codecOutputList.get(0));\n  assertEquals(2,codecOutputList.get(1));\n  assertEquals(1,codecOutputList.get(2));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 951,
        "startLineNumber" : 29,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  assertEquals(0,codecOutputList.size());\n  assertTrue(codecOutputList.isEmpty());\n  codecOutputList.add(1);\n  assertEquals(1,codecOutputList.size());\n  assertFalse(codecOutputList.isEmpty());\n  assertEquals(1,codecOutputList.get(0));\n  codecOutputList.add(0,0);\n  assertEquals(2,codecOutputList.size());\n  assertFalse(codecOutputList.isEmpty());\n  assertEquals(0,codecOutputList.get(0));\n  assertEquals(1,codecOutputList.get(1));\n  codecOutputList.add(1,2);\n  assertEquals(3,codecOutputList.size());\n  assertFalse(codecOutputList.isEmpty());\n  assertEquals(0,codecOutputList.get(0));\n  assertEquals(2,codecOutputList.get(1));\n  assertEquals(1,codecOutputList.get(2));\n}\n  finally {\n  codecOutputList.recycle();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 124,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1043,
        "startLineNumber" : 27,
        "startColumnNumber" : 41,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CodecOutputList codecOutputList=CodecOutputList.newInstance();\n  try {\n    assertEquals(0,codecOutputList.size());\n    assertTrue(codecOutputList.isEmpty());\n    codecOutputList.add(1);\n    assertEquals(1,codecOutputList.size());\n    assertFalse(codecOutputList.isEmpty());\n    assertEquals(1,codecOutputList.get(0));\n    codecOutputList.add(0,0);\n    assertEquals(2,codecOutputList.size());\n    assertFalse(codecOutputList.isEmpty());\n    assertEquals(0,codecOutputList.get(0));\n    assertEquals(1,codecOutputList.get(1));\n    codecOutputList.add(1,2);\n    assertEquals(3,codecOutputList.size());\n    assertFalse(codecOutputList.isEmpty());\n    assertEquals(0,codecOutputList.get(0));\n    assertEquals(2,codecOutputList.get(1));\n    assertEquals(1,codecOutputList.get(2));\n  }\n  finally {\n    codecOutputList.recycle();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCodecOutputListAdd(){\n  CodecOutputList codecOutputList=CodecOutputList.newInstance();\n  try {\n    assertEquals(0,codecOutputList.size());\n    assertTrue(codecOutputList.isEmpty());\n    codecOutputList.add(1);\n    assertEquals(1,codecOutputList.size());\n    assertFalse(codecOutputList.isEmpty());\n    assertEquals(1,codecOutputList.get(0));\n    codecOutputList.add(0,0);\n    assertEquals(2,codecOutputList.size());\n    assertFalse(codecOutputList.isEmpty());\n    assertEquals(0,codecOutputList.get(0));\n    assertEquals(1,codecOutputList.get(1));\n    codecOutputList.add(1,2);\n    assertEquals(3,codecOutputList.size());\n    assertFalse(codecOutputList.isEmpty());\n    assertEquals(0,codecOutputList.get(0));\n    assertEquals(2,codecOutputList.get(1));\n    assertEquals(1,codecOutputList.get(2));\n  }\n  finally {\n    codecOutputList.recycle();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 139,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 39,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertEquals(2,codecOutputList.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "2",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 44,
      "startColumnNumber" : 35,
      "endLineNumber" : 44,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 37
      },
      "nodeContext" : "codecOutputList.add(1,2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 38
      },
      "nodeContext" : "codecOutputList.add(1,2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 886,
        "startLineNumber" : 29,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  assertEquals(0,codecOutputList.size());\n  assertTrue(codecOutputList.isEmpty());\n  codecOutputList.add(1);\n  assertEquals(1,codecOutputList.size());\n  assertFalse(codecOutputList.isEmpty());\n  assertEquals(1,codecOutputList.get(0));\n  codecOutputList.add(0,0);\n  assertEquals(2,codecOutputList.size());\n  assertFalse(codecOutputList.isEmpty());\n  assertEquals(0,codecOutputList.get(0));\n  assertEquals(1,codecOutputList.get(1));\n  codecOutputList.add(1,2);\n  assertEquals(3,codecOutputList.size());\n  assertFalse(codecOutputList.isEmpty());\n  assertEquals(0,codecOutputList.get(0));\n  assertEquals(2,codecOutputList.get(1));\n  assertEquals(1,codecOutputList.get(2));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 951,
        "startLineNumber" : 29,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  assertEquals(0,codecOutputList.size());\n  assertTrue(codecOutputList.isEmpty());\n  codecOutputList.add(1);\n  assertEquals(1,codecOutputList.size());\n  assertFalse(codecOutputList.isEmpty());\n  assertEquals(1,codecOutputList.get(0));\n  codecOutputList.add(0,0);\n  assertEquals(2,codecOutputList.size());\n  assertFalse(codecOutputList.isEmpty());\n  assertEquals(0,codecOutputList.get(0));\n  assertEquals(1,codecOutputList.get(1));\n  codecOutputList.add(1,2);\n  assertEquals(3,codecOutputList.size());\n  assertFalse(codecOutputList.isEmpty());\n  assertEquals(0,codecOutputList.get(0));\n  assertEquals(2,codecOutputList.get(1));\n  assertEquals(1,codecOutputList.get(2));\n}\n  finally {\n  codecOutputList.recycle();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 124,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1043,
        "startLineNumber" : 27,
        "startColumnNumber" : 41,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CodecOutputList codecOutputList=CodecOutputList.newInstance();\n  try {\n    assertEquals(0,codecOutputList.size());\n    assertTrue(codecOutputList.isEmpty());\n    codecOutputList.add(1);\n    assertEquals(1,codecOutputList.size());\n    assertFalse(codecOutputList.isEmpty());\n    assertEquals(1,codecOutputList.get(0));\n    codecOutputList.add(0,0);\n    assertEquals(2,codecOutputList.size());\n    assertFalse(codecOutputList.isEmpty());\n    assertEquals(0,codecOutputList.get(0));\n    assertEquals(1,codecOutputList.get(1));\n    codecOutputList.add(1,2);\n    assertEquals(3,codecOutputList.size());\n    assertFalse(codecOutputList.isEmpty());\n    assertEquals(0,codecOutputList.get(0));\n    assertEquals(2,codecOutputList.get(1));\n    assertEquals(1,codecOutputList.get(2));\n  }\n  finally {\n    codecOutputList.recycle();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCodecOutputListAdd(){\n  CodecOutputList codecOutputList=CodecOutputList.newInstance();\n  try {\n    assertEquals(0,codecOutputList.size());\n    assertTrue(codecOutputList.isEmpty());\n    codecOutputList.add(1);\n    assertEquals(1,codecOutputList.size());\n    assertFalse(codecOutputList.isEmpty());\n    assertEquals(1,codecOutputList.get(0));\n    codecOutputList.add(0,0);\n    assertEquals(2,codecOutputList.size());\n    assertFalse(codecOutputList.isEmpty());\n    assertEquals(0,codecOutputList.get(0));\n    assertEquals(1,codecOutputList.get(1));\n    codecOutputList.add(1,2);\n    assertEquals(3,codecOutputList.size());\n    assertFalse(codecOutputList.isEmpty());\n    assertEquals(0,codecOutputList.get(0));\n    assertEquals(2,codecOutputList.get(1));\n    assertEquals(1,codecOutputList.get(2));\n  }\n  finally {\n    codecOutputList.recycle();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 139,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 38
      },
      "nodeContext" : "codecOutputList.add(1,2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "2",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 48,
      "startColumnNumber" : 25,
      "endLineNumber" : 48,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 48,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertEquals(2,codecOutputList.get(1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 48,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertEquals(2,codecOutputList.get(1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 886,
        "startLineNumber" : 29,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  assertEquals(0,codecOutputList.size());\n  assertTrue(codecOutputList.isEmpty());\n  codecOutputList.add(1);\n  assertEquals(1,codecOutputList.size());\n  assertFalse(codecOutputList.isEmpty());\n  assertEquals(1,codecOutputList.get(0));\n  codecOutputList.add(0,0);\n  assertEquals(2,codecOutputList.size());\n  assertFalse(codecOutputList.isEmpty());\n  assertEquals(0,codecOutputList.get(0));\n  assertEquals(1,codecOutputList.get(1));\n  codecOutputList.add(1,2);\n  assertEquals(3,codecOutputList.size());\n  assertFalse(codecOutputList.isEmpty());\n  assertEquals(0,codecOutputList.get(0));\n  assertEquals(2,codecOutputList.get(1));\n  assertEquals(1,codecOutputList.get(2));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 951,
        "startLineNumber" : 29,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  assertEquals(0,codecOutputList.size());\n  assertTrue(codecOutputList.isEmpty());\n  codecOutputList.add(1);\n  assertEquals(1,codecOutputList.size());\n  assertFalse(codecOutputList.isEmpty());\n  assertEquals(1,codecOutputList.get(0));\n  codecOutputList.add(0,0);\n  assertEquals(2,codecOutputList.size());\n  assertFalse(codecOutputList.isEmpty());\n  assertEquals(0,codecOutputList.get(0));\n  assertEquals(1,codecOutputList.get(1));\n  codecOutputList.add(1,2);\n  assertEquals(3,codecOutputList.size());\n  assertFalse(codecOutputList.isEmpty());\n  assertEquals(0,codecOutputList.get(0));\n  assertEquals(2,codecOutputList.get(1));\n  assertEquals(1,codecOutputList.get(2));\n}\n  finally {\n  codecOutputList.recycle();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 124,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1043,
        "startLineNumber" : 27,
        "startColumnNumber" : 41,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CodecOutputList codecOutputList=CodecOutputList.newInstance();\n  try {\n    assertEquals(0,codecOutputList.size());\n    assertTrue(codecOutputList.isEmpty());\n    codecOutputList.add(1);\n    assertEquals(1,codecOutputList.size());\n    assertFalse(codecOutputList.isEmpty());\n    assertEquals(1,codecOutputList.get(0));\n    codecOutputList.add(0,0);\n    assertEquals(2,codecOutputList.size());\n    assertFalse(codecOutputList.isEmpty());\n    assertEquals(0,codecOutputList.get(0));\n    assertEquals(1,codecOutputList.get(1));\n    codecOutputList.add(1,2);\n    assertEquals(3,codecOutputList.size());\n    assertFalse(codecOutputList.isEmpty());\n    assertEquals(0,codecOutputList.get(0));\n    assertEquals(2,codecOutputList.get(1));\n    assertEquals(1,codecOutputList.get(2));\n  }\n  finally {\n    codecOutputList.recycle();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCodecOutputListAdd(){\n  CodecOutputList codecOutputList=CodecOutputList.newInstance();\n  try {\n    assertEquals(0,codecOutputList.size());\n    assertTrue(codecOutputList.isEmpty());\n    codecOutputList.add(1);\n    assertEquals(1,codecOutputList.size());\n    assertFalse(codecOutputList.isEmpty());\n    assertEquals(1,codecOutputList.get(0));\n    codecOutputList.add(0,0);\n    assertEquals(2,codecOutputList.size());\n    assertFalse(codecOutputList.isEmpty());\n    assertEquals(0,codecOutputList.get(0));\n    assertEquals(1,codecOutputList.get(1));\n    codecOutputList.add(1,2);\n    assertEquals(3,codecOutputList.size());\n    assertFalse(codecOutputList.isEmpty());\n    assertEquals(0,codecOutputList.get(0));\n    assertEquals(2,codecOutputList.get(1));\n    assertEquals(1,codecOutputList.get(2));\n  }\n  finally {\n    codecOutputList.recycle();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 139,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 48,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertEquals(2,codecOutputList.get(1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "2",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 49,
      "startColumnNumber" : 48,
      "endLineNumber" : 49,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 49,
        "startColumnNumber" : 28,
        "endLineNumber" : 49,
        "endColumnNumber" : 50
      },
      "nodeContext" : "codecOutputList.get(2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertEquals(1,codecOutputList.get(2))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertEquals(1,codecOutputList.get(2));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 886,
        "startLineNumber" : 29,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  assertEquals(0,codecOutputList.size());\n  assertTrue(codecOutputList.isEmpty());\n  codecOutputList.add(1);\n  assertEquals(1,codecOutputList.size());\n  assertFalse(codecOutputList.isEmpty());\n  assertEquals(1,codecOutputList.get(0));\n  codecOutputList.add(0,0);\n  assertEquals(2,codecOutputList.size());\n  assertFalse(codecOutputList.isEmpty());\n  assertEquals(0,codecOutputList.get(0));\n  assertEquals(1,codecOutputList.get(1));\n  codecOutputList.add(1,2);\n  assertEquals(3,codecOutputList.size());\n  assertFalse(codecOutputList.isEmpty());\n  assertEquals(0,codecOutputList.get(0));\n  assertEquals(2,codecOutputList.get(1));\n  assertEquals(1,codecOutputList.get(2));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 951,
        "startLineNumber" : 29,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  assertEquals(0,codecOutputList.size());\n  assertTrue(codecOutputList.isEmpty());\n  codecOutputList.add(1);\n  assertEquals(1,codecOutputList.size());\n  assertFalse(codecOutputList.isEmpty());\n  assertEquals(1,codecOutputList.get(0));\n  codecOutputList.add(0,0);\n  assertEquals(2,codecOutputList.size());\n  assertFalse(codecOutputList.isEmpty());\n  assertEquals(0,codecOutputList.get(0));\n  assertEquals(1,codecOutputList.get(1));\n  codecOutputList.add(1,2);\n  assertEquals(3,codecOutputList.size());\n  assertFalse(codecOutputList.isEmpty());\n  assertEquals(0,codecOutputList.get(0));\n  assertEquals(2,codecOutputList.get(1));\n  assertEquals(1,codecOutputList.get(2));\n}\n  finally {\n  codecOutputList.recycle();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 124,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1043,
        "startLineNumber" : 27,
        "startColumnNumber" : 41,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CodecOutputList codecOutputList=CodecOutputList.newInstance();\n  try {\n    assertEquals(0,codecOutputList.size());\n    assertTrue(codecOutputList.isEmpty());\n    codecOutputList.add(1);\n    assertEquals(1,codecOutputList.size());\n    assertFalse(codecOutputList.isEmpty());\n    assertEquals(1,codecOutputList.get(0));\n    codecOutputList.add(0,0);\n    assertEquals(2,codecOutputList.size());\n    assertFalse(codecOutputList.isEmpty());\n    assertEquals(0,codecOutputList.get(0));\n    assertEquals(1,codecOutputList.get(1));\n    codecOutputList.add(1,2);\n    assertEquals(3,codecOutputList.size());\n    assertFalse(codecOutputList.isEmpty());\n    assertEquals(0,codecOutputList.get(0));\n    assertEquals(2,codecOutputList.get(1));\n    assertEquals(1,codecOutputList.get(2));\n  }\n  finally {\n    codecOutputList.recycle();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCodecOutputListAdd(){\n  CodecOutputList codecOutputList=CodecOutputList.newInstance();\n  try {\n    assertEquals(0,codecOutputList.size());\n    assertTrue(codecOutputList.isEmpty());\n    codecOutputList.add(1);\n    assertEquals(1,codecOutputList.size());\n    assertFalse(codecOutputList.isEmpty());\n    assertEquals(1,codecOutputList.get(0));\n    codecOutputList.add(0,0);\n    assertEquals(2,codecOutputList.size());\n    assertFalse(codecOutputList.isEmpty());\n    assertEquals(0,codecOutputList.get(0));\n    assertEquals(1,codecOutputList.get(1));\n    codecOutputList.add(1,2);\n    assertEquals(3,codecOutputList.size());\n    assertFalse(codecOutputList.isEmpty());\n    assertEquals(0,codecOutputList.get(0));\n    assertEquals(2,codecOutputList.get(1));\n    assertEquals(1,codecOutputList.get(2));\n  }\n  finally {\n    codecOutputList.recycle();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 139,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertEquals(1,codecOutputList.get(2));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 39,
    "startColumnNumber" : 25,
    "endLineNumber" : 39,
    "endColumnNumber" : 26
  }, {
    "charLength" : 1,
    "startLineNumber" : 44,
    "startColumnNumber" : 35,
    "endLineNumber" : 44,
    "endColumnNumber" : 36
  }, {
    "charLength" : 1,
    "startLineNumber" : 48,
    "startColumnNumber" : 25,
    "endLineNumber" : 48,
    "endColumnNumber" : 26
  }, {
    "charLength" : 1,
    "startLineNumber" : 49,
    "startColumnNumber" : 48,
    "endLineNumber" : 49,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}