{
  "id" : 19,
  "expression" : "clazz.getDeclaredField(\"INSTANCE\")",
  "projectName" : "android10@Android-CleanArchitecture",
  "commitID" : "aa9c9c0aecc7f4bd14974e5d7e672f19327f2bfe",
  "filePath" : "/data-test/src/test/java/com/fernandocejas/android10/sample/data/ApplicationTestCase.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "clazz.getDeclaredField(\"INSTANCE\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 28,
      "startColumnNumber" : 17,
      "endLineNumber" : 28,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 28,
        "startColumnNumber" : 6,
        "endLineNumber" : 28,
        "endColumnNumber" : 51
      },
      "nodeContext" : "instance=clazz.getDeclaredField(\"INSTANCE\")",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 28,
        "startColumnNumber" : 6,
        "endLineNumber" : 28,
        "endColumnNumber" : 52
      },
      "nodeContext" : "instance=clazz.getDeclaredField(\"INSTANCE\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  instance=clazz.getDeclaredField(\"INSTANCE\");\n  instance.setAccessible(true);\n  instance.set(null,null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 321,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 37,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  instance=clazz.getDeclaredField(\"INSTANCE\");\n  instance.setAccessible(true);\n  instance.set(null,null);\n}\n catch (NoSuchFieldException e) {\n  e.printStackTrace();\n}\ncatch (IllegalAccessException e) {\n  e.printStackTrace();\n}\ncatch (Exception e) {\n  e.printStackTrace();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 50,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 351,
        "startLineNumber" : 25,
        "startColumnNumber" : 45,
        "endLineNumber" : 38,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Field instance;\n  try {\n    instance=clazz.getDeclaredField(\"INSTANCE\");\n    instance.setAccessible(true);\n    instance.set(null,null);\n  }\n catch (  NoSuchFieldException e) {\n    e.printStackTrace();\n  }\ncatch (  IllegalAccessException e) {\n    e.printStackTrace();\n  }\ncatch (  Exception e) {\n    e.printStackTrace();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 676,
        "startLineNumber" : 17,
        "startColumnNumber" : 2,
        "endLineNumber" : 38,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Resets a Singleton class. This works using reflection and looking for a private field in the singleton called \"INSTANCE\". It is actually a workaround (hack?) to avoid global state when testing in isolation.\n * @param clazz The class to reset.\n */\nprotected void resetSingleton(Class clazz){\n  Field instance;\n  try {\n    instance=clazz.getDeclaredField(\"INSTANCE\");\n    instance.setAccessible(true);\n    instance.set(null,null);\n  }\n catch (  NoSuchFieldException e) {\n    e.printStackTrace();\n  }\ncatch (  IllegalAccessException e) {\n    e.printStackTrace();\n  }\ncatch (  Exception e) {\n    e.printStackTrace();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 65,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 28,
        "startColumnNumber" : 6,
        "endLineNumber" : 28,
        "endColumnNumber" : 52
      },
      "nodeContext" : "instance=clazz.getDeclaredField(\"INSTANCE\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.reflect.Field"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 28,
    "startColumnNumber" : 17,
    "endLineNumber" : 28,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}