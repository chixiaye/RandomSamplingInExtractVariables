{
  "id" : 490,
  "expression" : "ErrorLogTagKeys",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-agent/shardingsphere-agent-plugins/shardingsphere-agent-plugin-tracing/shardingsphere-agent-tracing-opentracing/src/test/java/org/apache/shardingsphere/agent/plugin/tracing/opentracing/advice/SQLParserEngineAdviceTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ErrorLogTagKeys",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 87,
      "startColumnNumber" : 30,
      "endLineNumber" : 87,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 87,
        "startColumnNumber" : 30,
        "endLineNumber" : 87,
        "endColumnNumber" : 51
      },
      "nodeContext" : "ErrorLogTagKeys.EVENT",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 87,
        "startColumnNumber" : 19,
        "endLineNumber" : 87,
        "endColumnNumber" : 52
      },
      "nodeContext" : "fields.get(ErrorLogTagKeys.EVENT)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertThat(fields.get(ErrorLogTagKeys.EVENT),is(\"error\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 67
      },
      "nodeContext" : "assertThat(fields.get(ErrorLogTagKeys.EVENT),is(\"error\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 969,
        "startLineNumber" : 75,
        "startColumnNumber" : 40,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MockAdviceTargetObject targetObject=new MockAdviceTargetObject();\n  ADVICE.beforeMethod(targetObject,parserMethod,new Object[]{\"select 1\"},new MethodInvocationResult());\n  ADVICE.onThrowing(targetObject,parserMethod,new Object[]{},new IOException());\n  ADVICE.afterMethod(targetObject,parserMethod,new Object[]{},new MethodInvocationResult());\n  List<MockSpan> spans=tracer.finishedSpans();\n  assertThat(spans.size(),is(1));\n  MockSpan span=spans.get(0);\n  assertTrue((boolean)span.tags().get(\"error\"));\n  List<MockSpan.LogEntry> entries=span.logEntries();\n  assertThat(entries.size(),is(1));\n  Map<String,?> fields=entries.get(0).fields();\n  assertThat(fields.get(ErrorLogTagKeys.EVENT),is(\"error\"));\n  assertThat(fields.get(ErrorLogTagKeys.ERROR_KIND),is(\"java.io.IOException\"));\n  assertThat(span.operationName(),is(\"/ShardingSphere/parseSQL/\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 165,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1015,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void assertExceptionHandle(){\n  MockAdviceTargetObject targetObject=new MockAdviceTargetObject();\n  ADVICE.beforeMethod(targetObject,parserMethod,new Object[]{\"select 1\"},new MethodInvocationResult());\n  ADVICE.onThrowing(targetObject,parserMethod,new Object[]{},new IOException());\n  ADVICE.afterMethod(targetObject,parserMethod,new Object[]{},new MethodInvocationResult());\n  List<MockSpan> spans=tracer.finishedSpans();\n  assertThat(spans.size(),is(1));\n  MockSpan span=spans.get(0);\n  assertTrue((boolean)span.tags().get(\"error\"));\n  List<MockSpan.LogEntry> entries=span.logEntries();\n  assertThat(entries.size(),is(1));\n  Map<String,?> fields=entries.get(0).fields();\n  assertThat(fields.get(ErrorLogTagKeys.EVENT),is(\"error\"));\n  assertThat(fields.get(ErrorLogTagKeys.ERROR_KIND),is(\"java.io.IOException\"));\n  assertThat(span.operationName(),is(\"/ShardingSphere/parseSQL/\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 171,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 67
      },
      "nodeContext" : "assertThat(fields.get(ErrorLogTagKeys.EVENT),is(\"error\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.shardingsphere.agent.plugin.tracing.opentracing.constant.ErrorLogTagKeys"
  }, {
    "nodeContext" : "ErrorLogTagKeys",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 88,
      "startColumnNumber" : 30,
      "endLineNumber" : 88,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 88,
        "startColumnNumber" : 30,
        "endLineNumber" : 88,
        "endColumnNumber" : 56
      },
      "nodeContext" : "ErrorLogTagKeys.ERROR_KIND",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 88,
        "startColumnNumber" : 19,
        "endLineNumber" : 88,
        "endColumnNumber" : 57
      },
      "nodeContext" : "fields.get(ErrorLogTagKeys.ERROR_KIND)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 85
      },
      "nodeContext" : "assertThat(fields.get(ErrorLogTagKeys.ERROR_KIND),is(\"java.io.IOException\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 86
      },
      "nodeContext" : "assertThat(fields.get(ErrorLogTagKeys.ERROR_KIND),is(\"java.io.IOException\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 969,
        "startLineNumber" : 75,
        "startColumnNumber" : 40,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MockAdviceTargetObject targetObject=new MockAdviceTargetObject();\n  ADVICE.beforeMethod(targetObject,parserMethod,new Object[]{\"select 1\"},new MethodInvocationResult());\n  ADVICE.onThrowing(targetObject,parserMethod,new Object[]{},new IOException());\n  ADVICE.afterMethod(targetObject,parserMethod,new Object[]{},new MethodInvocationResult());\n  List<MockSpan> spans=tracer.finishedSpans();\n  assertThat(spans.size(),is(1));\n  MockSpan span=spans.get(0);\n  assertTrue((boolean)span.tags().get(\"error\"));\n  List<MockSpan.LogEntry> entries=span.logEntries();\n  assertThat(entries.size(),is(1));\n  Map<String,?> fields=entries.get(0).fields();\n  assertThat(fields.get(ErrorLogTagKeys.EVENT),is(\"error\"));\n  assertThat(fields.get(ErrorLogTagKeys.ERROR_KIND),is(\"java.io.IOException\"));\n  assertThat(span.operationName(),is(\"/ShardingSphere/parseSQL/\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 165,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1015,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void assertExceptionHandle(){\n  MockAdviceTargetObject targetObject=new MockAdviceTargetObject();\n  ADVICE.beforeMethod(targetObject,parserMethod,new Object[]{\"select 1\"},new MethodInvocationResult());\n  ADVICE.onThrowing(targetObject,parserMethod,new Object[]{},new IOException());\n  ADVICE.afterMethod(targetObject,parserMethod,new Object[]{},new MethodInvocationResult());\n  List<MockSpan> spans=tracer.finishedSpans();\n  assertThat(spans.size(),is(1));\n  MockSpan span=spans.get(0);\n  assertTrue((boolean)span.tags().get(\"error\"));\n  List<MockSpan.LogEntry> entries=span.logEntries();\n  assertThat(entries.size(),is(1));\n  Map<String,?> fields=entries.get(0).fields();\n  assertThat(fields.get(ErrorLogTagKeys.EVENT),is(\"error\"));\n  assertThat(fields.get(ErrorLogTagKeys.ERROR_KIND),is(\"java.io.IOException\"));\n  assertThat(span.operationName(),is(\"/ShardingSphere/parseSQL/\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 171,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 86
      },
      "nodeContext" : "assertThat(fields.get(ErrorLogTagKeys.ERROR_KIND),is(\"java.io.IOException\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.shardingsphere.agent.plugin.tracing.opentracing.constant.ErrorLogTagKeys"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 87,
    "startColumnNumber" : 30,
    "endLineNumber" : 87,
    "endColumnNumber" : 45
  }, {
    "charLength" : 15,
    "startLineNumber" : 88,
    "startColumnNumber" : 30,
    "endLineNumber" : 88,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}