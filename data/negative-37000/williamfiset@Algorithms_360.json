{
  "id" : 360,
  "expression" : "j < bCols",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/linearalgebra/MatrixMultiplication.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "j < bCols",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 20,
      "startColumnNumber" : 22,
      "endLineNumber" : 20,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 20,
        "startColumnNumber" : 6,
        "endLineNumber" : 20,
        "endColumnNumber" : 99
      },
      "nodeContext" : "for (int j=0; j < bCols; j++) for (int k=0; k < aCols; k++) c[i][j]+=a[i][k] * b[k][j];\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 40,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 19,
        "startColumnNumber" : 4,
        "endLineNumber" : 20,
        "endColumnNumber" : 99
      },
      "nodeContext" : "for (int i=0; i < aRows; i++) for (int j=0; j < bCols; j++) for (int k=0; k < aCols; k++) c[i][j]+=a[i][k] * b[k][j];\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 51,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 331,
        "startLineNumber" : 14,
        "startColumnNumber" : 57,
        "endLineNumber" : 22,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int aRows=a.length, aCols=a[0].length;\n  int bRows=b.length, bCols=b[0].length;\n  if (aCols != bRows)   return null;\n  double[][] c=new double[aRows][bCols];\n  for (int i=0; i < aRows; i++)   for (int j=0; j < bCols; j++)   for (int k=0; k < aCols; k++)   c[i][j]+=a[i][k] * b[k][j];\n  return c;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 386,
        "startLineNumber" : 14,
        "startColumnNumber" : 2,
        "endLineNumber" : 22,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static double[][] multiply(double[][] a,double[][] b){\n  int aRows=a.length, aCols=a[0].length;\n  int bRows=b.length, bCols=b[0].length;\n  if (aCols != bRows)   return null;\n  double[][] c=new double[aRows][bCols];\n  for (int i=0; i < aRows; i++)   for (int j=0; j < bCols; j++)   for (int k=0; k < aCols; k++)   c[i][j]+=a[i][k] * b[k][j];\n  return c;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 121,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 20,
        "startColumnNumber" : 6,
        "endLineNumber" : 20,
        "endColumnNumber" : 99
      },
      "nodeContext" : "for (int j=0; j < bCols; j++) for (int k=0; k < aCols; k++) c[i][j]+=a[i][k] * b[k][j];\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 40,
      "astHeight" : 8
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 20,
    "startColumnNumber" : 22,
    "endLineNumber" : 20,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}