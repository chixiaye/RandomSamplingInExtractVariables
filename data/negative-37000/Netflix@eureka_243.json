{
  "id" : 243,
  "expression" : "1000",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-server/src/main/java/com/netflix/eureka2/server/AbstractEurekaServer.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1000",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 151,
      "startColumnNumber" : 38,
      "endLineNumber" : 151,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 151,
        "startColumnNumber" : 29,
        "endLineNumber" : 151,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Math.min(1000,waitTimeMs * 2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 151,
        "startColumnNumber" : 16,
        "endLineNumber" : 151,
        "endColumnNumber" : 59
      },
      "nodeContext" : "waitTimeMs=Math.min(1000,waitTimeMs * 2)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 151,
        "startColumnNumber" : 16,
        "endLineNumber" : 151,
        "endColumnNumber" : 60
      },
      "nodeContext" : "waitTimeMs=Math.min(1000,waitTimeMs * 2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 149,
        "startColumnNumber" : 16,
        "endLineNumber" : 152,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Thread.sleep(waitTimeMs);\n  waitTimeMs=Math.min(1000,waitTimeMs * 2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 229,
        "startLineNumber" : 149,
        "startColumnNumber" : 12,
        "endLineNumber" : 154,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  Thread.sleep(waitTimeMs);\n  waitTimeMs=Math.min(1000,waitTimeMs * 2);\n}\n catch (InterruptedException e) {\n  logger.error(\"Unexpected interruption\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 29,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 396,
        "startLineNumber" : 148,
        "startColumnNumber" : 85,
        "endLineNumber" : 158,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    Thread.sleep(waitTimeMs);\n    waitTimeMs=Math.min(1000,waitTimeMs * 2);\n  }\n catch (  InterruptedException e) {\n    logger.error(\"Unexpected interruption\",e);\n  }\n  if (waitTimeMs == 1000) {\n    logger.info(\"Waiting for the container to complete the shutdown process\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 473,
        "startLineNumber" : 148,
        "startColumnNumber" : 8,
        "endLineNumber" : 158,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (lifecycleManager.getState(lifecycleManager) != LifecycleState.LATENT) {\n  try {\n    Thread.sleep(waitTimeMs);\n    waitTimeMs=Math.min(1000,waitTimeMs * 2);\n  }\n catch (  InterruptedException e) {\n    logger.error(\"Unexpected interruption\",e);\n  }\n  if (waitTimeMs == 1000) {\n    logger.info(\"Waiting for the container to complete the shutdown process\");\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 130,
        "startColumnNumber" : 35,
        "endLineNumber" : 160,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Runtime.getRuntime().addShutdownHook(new Thread(){\n    @Override public void run(){\n      if (injectorShutdown.getCount() > 0) {\n        logger.info(\"Shutdown hook triggered - terminating the application\");\n        shutdown();\n      }\n    }\n  }\n);\n  while (injectorShutdown.getCount() > 0) {\n    try {\n      injectorShutdown.await();\n    }\n catch (    InterruptedException e) {\n      logger.error(\"Unexpected interruption\",e);\n    }\n  }\n  long waitTimeMs=1;\n  while (lifecycleManager.getState(lifecycleManager) != LifecycleState.LATENT) {\n    try {\n      Thread.sleep(waitTimeMs);\n      waitTimeMs=Math.min(1000,waitTimeMs * 2);\n    }\n catch (    InterruptedException e) {\n      logger.error(\"Unexpected interruption\",e);\n    }\n    if (waitTimeMs == 1000) {\n      logger.info(\"Waiting for the container to complete the shutdown process\");\n    }\n  }\n  logger.info(\"All services stopped; quitting\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 117,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1180,
        "startLineNumber" : 130,
        "startColumnNumber" : 4,
        "endLineNumber" : 160,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void waitTillShutdown(){\n  Runtime.getRuntime().addShutdownHook(new Thread(){\n    @Override public void run(){\n      if (injectorShutdown.getCount() > 0) {\n        logger.info(\"Shutdown hook triggered - terminating the application\");\n        shutdown();\n      }\n    }\n  }\n);\n  while (injectorShutdown.getCount() > 0) {\n    try {\n      injectorShutdown.await();\n    }\n catch (    InterruptedException e) {\n      logger.error(\"Unexpected interruption\",e);\n    }\n  }\n  long waitTimeMs=1;\n  while (lifecycleManager.getState(lifecycleManager) != LifecycleState.LATENT) {\n    try {\n      Thread.sleep(waitTimeMs);\n      waitTimeMs=Math.min(1000,waitTimeMs * 2);\n    }\n catch (    InterruptedException e) {\n      logger.error(\"Unexpected interruption\",e);\n    }\n    if (waitTimeMs == 1000) {\n      logger.info(\"Waiting for the container to complete the shutdown process\");\n    }\n  }\n  logger.info(\"All services stopped; quitting\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 121,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 151,
        "startColumnNumber" : 16,
        "endLineNumber" : 151,
        "endColumnNumber" : 60
      },
      "nodeContext" : "waitTimeMs=Math.min(1000,waitTimeMs * 2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1000",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 155,
      "startColumnNumber" : 30,
      "endLineNumber" : 155,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 155,
        "startColumnNumber" : 16,
        "endLineNumber" : 155,
        "endColumnNumber" : 34
      },
      "nodeContext" : "waitTimeMs == 1000",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 155,
        "startColumnNumber" : 12,
        "endLineNumber" : 157,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (waitTimeMs == 1000) {\n  logger.info(\"Waiting for the container to complete the shutdown process\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 396,
        "startLineNumber" : 148,
        "startColumnNumber" : 85,
        "endLineNumber" : 158,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    Thread.sleep(waitTimeMs);\n    waitTimeMs=Math.min(1000,waitTimeMs * 2);\n  }\n catch (  InterruptedException e) {\n    logger.error(\"Unexpected interruption\",e);\n  }\n  if (waitTimeMs == 1000) {\n    logger.info(\"Waiting for the container to complete the shutdown process\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 473,
        "startLineNumber" : 148,
        "startColumnNumber" : 8,
        "endLineNumber" : 158,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (lifecycleManager.getState(lifecycleManager) != LifecycleState.LATENT) {\n  try {\n    Thread.sleep(waitTimeMs);\n    waitTimeMs=Math.min(1000,waitTimeMs * 2);\n  }\n catch (  InterruptedException e) {\n    logger.error(\"Unexpected interruption\",e);\n  }\n  if (waitTimeMs == 1000) {\n    logger.info(\"Waiting for the container to complete the shutdown process\");\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 130,
        "startColumnNumber" : 35,
        "endLineNumber" : 160,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Runtime.getRuntime().addShutdownHook(new Thread(){\n    @Override public void run(){\n      if (injectorShutdown.getCount() > 0) {\n        logger.info(\"Shutdown hook triggered - terminating the application\");\n        shutdown();\n      }\n    }\n  }\n);\n  while (injectorShutdown.getCount() > 0) {\n    try {\n      injectorShutdown.await();\n    }\n catch (    InterruptedException e) {\n      logger.error(\"Unexpected interruption\",e);\n    }\n  }\n  long waitTimeMs=1;\n  while (lifecycleManager.getState(lifecycleManager) != LifecycleState.LATENT) {\n    try {\n      Thread.sleep(waitTimeMs);\n      waitTimeMs=Math.min(1000,waitTimeMs * 2);\n    }\n catch (    InterruptedException e) {\n      logger.error(\"Unexpected interruption\",e);\n    }\n    if (waitTimeMs == 1000) {\n      logger.info(\"Waiting for the container to complete the shutdown process\");\n    }\n  }\n  logger.info(\"All services stopped; quitting\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 117,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1180,
        "startLineNumber" : 130,
        "startColumnNumber" : 4,
        "endLineNumber" : 160,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void waitTillShutdown(){\n  Runtime.getRuntime().addShutdownHook(new Thread(){\n    @Override public void run(){\n      if (injectorShutdown.getCount() > 0) {\n        logger.info(\"Shutdown hook triggered - terminating the application\");\n        shutdown();\n      }\n    }\n  }\n);\n  while (injectorShutdown.getCount() > 0) {\n    try {\n      injectorShutdown.await();\n    }\n catch (    InterruptedException e) {\n      logger.error(\"Unexpected interruption\",e);\n    }\n  }\n  long waitTimeMs=1;\n  while (lifecycleManager.getState(lifecycleManager) != LifecycleState.LATENT) {\n    try {\n      Thread.sleep(waitTimeMs);\n      waitTimeMs=Math.min(1000,waitTimeMs * 2);\n    }\n catch (    InterruptedException e) {\n      logger.error(\"Unexpected interruption\",e);\n    }\n    if (waitTimeMs == 1000) {\n      logger.info(\"Waiting for the container to complete the shutdown process\");\n    }\n  }\n  logger.info(\"All services stopped; quitting\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 121,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 155,
        "startColumnNumber" : 16,
        "endLineNumber" : 155,
        "endColumnNumber" : 34
      },
      "nodeContext" : "waitTimeMs == 1000",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 151,
    "startColumnNumber" : 38,
    "endLineNumber" : 151,
    "endColumnNumber" : 42
  }, {
    "charLength" : 4,
    "startLineNumber" : 155,
    "startColumnNumber" : 30,
    "endLineNumber" : 155,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}