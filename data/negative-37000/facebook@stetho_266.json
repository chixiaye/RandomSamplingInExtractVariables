{
  "id" : 266,
  "expression" : "N",
  "projectName" : "facebook@stetho",
  "commitID" : "fee68519d93899dc5cfe6b992f56916a03b279f2",
  "filePath" : "/stetho/src/main/java/com/facebook/stetho/inspector/protocol/module/DOM.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "N",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 247,
      "startColumnNumber" : 58,
      "endLineNumber" : 247,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 247,
        "startColumnNumber" : 54,
        "endLineNumber" : 247,
        "endColumnNumber" : 59
      },
      "nodeContext" : "i < N",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 247,
        "startColumnNumber" : 6,
        "endLineNumber" : 249,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=0, N=childrenAccumulator.size(); i < N; ++i) {\n  queue.add(childrenAccumulator.get(i));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 457,
        "startLineNumber" : 241,
        "startColumnNumber" : 29,
        "endLineNumber" : 251,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Object element=queue.remove();\n  NodeDescriptor descriptor=mDOMProvider.getNodeDescriptor(element);\n  mObjectIdMapper.putObject(element);\n  descriptor.getChildren(element,childrenAccumulator);\n  updateBuilder.setElementChildren(element,childrenAccumulator);\n  for (int i=0, N=childrenAccumulator.size(); i < N; ++i) {\n    queue.add(childrenAccumulator.get(i));\n  }\n  childrenAccumulator.clear();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 482,
        "startLineNumber" : 241,
        "startColumnNumber" : 4,
        "endLineNumber" : 251,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (!queue.isEmpty()) {\n  final Object element=queue.remove();\n  NodeDescriptor descriptor=mDOMProvider.getNodeDescriptor(element);\n  mObjectIdMapper.putObject(element);\n  descriptor.getChildren(element,childrenAccumulator);\n  updateBuilder.setElementChildren(element,childrenAccumulator);\n  for (int i=0, N=childrenAccumulator.size(); i < N; ++i) {\n    queue.add(childrenAccumulator.get(i));\n  }\n  childrenAccumulator.clear();\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 70,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 990,
        "startLineNumber" : 228,
        "startColumnNumber" : 51,
        "endLineNumber" : 256,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  mDOMProvider.verifyThreadAccess();\n  if (mDOMProvider.getRootElement() != mShadowDOM.getRootElement()) {\n    throw new IllegalStateException();\n  }\n  ArrayListAccumulator<Object> childrenAccumulator=acquireChildrenAccumulator();\n  ShadowDOM.UpdateBuilder updateBuilder=mShadowDOM.beginUpdate();\n  Queue<Object> queue=new ArrayDeque<>();\n  queue.add(mDOMProvider.getRootElement());\n  while (!queue.isEmpty()) {\n    final Object element=queue.remove();\n    NodeDescriptor descriptor=mDOMProvider.getNodeDescriptor(element);\n    mObjectIdMapper.putObject(element);\n    descriptor.getChildren(element,childrenAccumulator);\n    updateBuilder.setElementChildren(element,childrenAccumulator);\n    for (int i=0, N=childrenAccumulator.size(); i < N; ++i) {\n      queue.add(childrenAccumulator.get(i));\n    }\n    childrenAccumulator.clear();\n  }\n  releaseChildrenAccumulator(childrenAccumulator);\n  return updateBuilder.build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1039,
        "startLineNumber" : 228,
        "startColumnNumber" : 2,
        "endLineNumber" : 256,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private ShadowDOM.Update createShadowDOMUpdate(){\n  mDOMProvider.verifyThreadAccess();\n  if (mDOMProvider.getRootElement() != mShadowDOM.getRootElement()) {\n    throw new IllegalStateException();\n  }\n  ArrayListAccumulator<Object> childrenAccumulator=acquireChildrenAccumulator();\n  ShadowDOM.UpdateBuilder updateBuilder=mShadowDOM.beginUpdate();\n  Queue<Object> queue=new ArrayDeque<>();\n  queue.add(mDOMProvider.getRootElement());\n  while (!queue.isEmpty()) {\n    final Object element=queue.remove();\n    NodeDescriptor descriptor=mDOMProvider.getNodeDescriptor(element);\n    mObjectIdMapper.putObject(element);\n    descriptor.getChildren(element,childrenAccumulator);\n    updateBuilder.setElementChildren(element,childrenAccumulator);\n    for (int i=0, N=childrenAccumulator.size(); i < N; ++i) {\n      queue.add(childrenAccumulator.get(i));\n    }\n    childrenAccumulator.clear();\n  }\n  releaseChildrenAccumulator(childrenAccumulator);\n  return updateBuilder.build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 142,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 247,
        "startColumnNumber" : 54,
        "endLineNumber" : 247,
        "endColumnNumber" : 59
      },
      "nodeContext" : "i < N",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 247,
    "startColumnNumber" : 58,
    "endLineNumber" : 247,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ ]
}