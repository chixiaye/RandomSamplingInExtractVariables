{
  "id" : 452,
  "expression" : "formattedText",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/app/src/cc/arduino/packages/formatter/AStyle.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "formattedText",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 82,
      "startColumnNumber" : 8,
      "endLineNumber" : 82,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 42
      },
      "nodeContext" : "formattedText.equals(originalText)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (formattedText.equals(originalText)) {\n  editor.statusNotice(_(\"No changes necessary for Auto Format.\"));\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 774,
        "startLineNumber" : 78,
        "startColumnNumber" : 20,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String originalText=editor.getText();\n  String formattedText=aStyleInterface.AStyleMain(originalText,formatterConfiguration);\n  if (formattedText.equals(originalText)) {\n    editor.statusNotice(_(\"No changes necessary for Auto Format.\"));\n    return;\n  }\n  JEditTextArea textArea=editor.getTextArea();\n  int line=textArea.getLineOfOffset(textArea.getCaretPosition());\n  int lineOffset=textArea.getCaretPosition() - textArea.getLineStartOffset(line);\n  editor.setText(formattedText);\n  editor.getSketch().setModified(true);\n  textArea.setCaretPosition(Math.min(textArea.getLineStartOffset(line) + lineOffset,textArea.getSafeLineStopOffset(line) - 1));\n  editor.statusNotice(_(\"Auto Format finished.\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 804,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void run(){\n  String originalText=editor.getText();\n  String formattedText=aStyleInterface.AStyleMain(originalText,formatterConfiguration);\n  if (formattedText.equals(originalText)) {\n    editor.statusNotice(_(\"No changes necessary for Auto Format.\"));\n    return;\n  }\n  JEditTextArea textArea=editor.getTextArea();\n  int line=textArea.getLineOfOffset(textArea.getCaretPosition());\n  int lineOffset=textArea.getCaretPosition() - textArea.getLineStartOffset(line);\n  editor.setText(formattedText);\n  editor.getSketch().setModified(true);\n  textArea.setCaretPosition(Math.min(textArea.getLineStartOffset(line) + lineOffset,textArea.getSafeLineStopOffset(line) - 1));\n  editor.statusNotice(_(\"Auto Format finished.\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 42
      },
      "nodeContext" : "formattedText.equals(originalText)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "formattedText",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 91,
      "startColumnNumber" : 19,
      "endLineNumber" : 91,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 91,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 33
      },
      "nodeContext" : "editor.setText(formattedText)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 91,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 34
      },
      "nodeContext" : "editor.setText(formattedText);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 774,
        "startLineNumber" : 78,
        "startColumnNumber" : 20,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String originalText=editor.getText();\n  String formattedText=aStyleInterface.AStyleMain(originalText,formatterConfiguration);\n  if (formattedText.equals(originalText)) {\n    editor.statusNotice(_(\"No changes necessary for Auto Format.\"));\n    return;\n  }\n  JEditTextArea textArea=editor.getTextArea();\n  int line=textArea.getLineOfOffset(textArea.getCaretPosition());\n  int lineOffset=textArea.getCaretPosition() - textArea.getLineStartOffset(line);\n  editor.setText(formattedText);\n  editor.getSketch().setModified(true);\n  textArea.setCaretPosition(Math.min(textArea.getLineStartOffset(line) + lineOffset,textArea.getSafeLineStopOffset(line) - 1));\n  editor.statusNotice(_(\"Auto Format finished.\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 804,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void run(){\n  String originalText=editor.getText();\n  String formattedText=aStyleInterface.AStyleMain(originalText,formatterConfiguration);\n  if (formattedText.equals(originalText)) {\n    editor.statusNotice(_(\"No changes necessary for Auto Format.\"));\n    return;\n  }\n  JEditTextArea textArea=editor.getTextArea();\n  int line=textArea.getLineOfOffset(textArea.getCaretPosition());\n  int lineOffset=textArea.getCaretPosition() - textArea.getLineStartOffset(line);\n  editor.setText(formattedText);\n  editor.getSketch().setModified(true);\n  textArea.setCaretPosition(Math.min(textArea.getLineStartOffset(line) + lineOffset,textArea.getSafeLineStopOffset(line) - 1));\n  editor.statusNotice(_(\"Auto Format finished.\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 91,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 34
      },
      "nodeContext" : "editor.setText(formattedText);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 82,
    "startColumnNumber" : 8,
    "endLineNumber" : 82,
    "endColumnNumber" : 21
  }, {
    "charLength" : 13,
    "startLineNumber" : 91,
    "startColumnNumber" : 19,
    "endLineNumber" : 91,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}