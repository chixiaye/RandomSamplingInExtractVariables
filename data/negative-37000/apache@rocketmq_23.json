{
  "id" : 23,
  "expression" : "config.getConsumerId()",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/openmessaging/src/test/java/io/openmessaging/rocketmq/utils/BeanUtilsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "config.getConsumerId()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 97,
      "startColumnNumber" : 28,
      "endLineNumber" : 97,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 68
      },
      "nodeContext" : "Assert.assertEquals(config.getConsumerId(),\"NewConsumerId\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Assert.assertEquals(config.getConsumerId(),\"NewConsumerId\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 752,
        "startLineNumber" : 93,
        "startColumnNumber" : 40,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CustomizedConfig config=new CustomizedConfig();\n  config.setConsumerId(\"NewConsumerId\");\n  Assert.assertEquals(config.getConsumerId(),\"NewConsumerId\");\n  config=BeanUtils.populate(properties,config);\n  Assert.assertEquals(config.getRmqMaxRedeliveryTimes(),120);\n  Assert.assertEquals(config.getStringTest(),\"kaka\");\n  Assert.assertEquals(config.getRmqConsumerGroup(),\"Default_Consumer_Group\");\n  Assert.assertEquals(config.getRmqMessageConsumeTimeout(),101);\n  Assert.assertEquals(config.getLongTest(),1234567890L);\n  Assert.assertEquals(config.getDoubleTest(),10.234,0.000001);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 798,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testPopulate_ExistObj(){\n  CustomizedConfig config=new CustomizedConfig();\n  config.setConsumerId(\"NewConsumerId\");\n  Assert.assertEquals(config.getConsumerId(),\"NewConsumerId\");\n  config=BeanUtils.populate(properties,config);\n  Assert.assertEquals(config.getRmqMaxRedeliveryTimes(),120);\n  Assert.assertEquals(config.getStringTest(),\"kaka\");\n  Assert.assertEquals(config.getRmqConsumerGroup(),\"Default_Consumer_Group\");\n  Assert.assertEquals(config.getRmqMessageConsumeTimeout(),101);\n  Assert.assertEquals(config.getLongTest(),1234567890L);\n  Assert.assertEquals(config.getDoubleTest(),10.234,0.000001);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 85,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Assert.assertEquals(config.getConsumerId(),\"NewConsumerId\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 97,
    "startColumnNumber" : 28,
    "endLineNumber" : 97,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ ]
}