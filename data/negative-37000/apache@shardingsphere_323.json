{
  "id" : 323,
  "expression" : "new RouteUnit(new RouteMapper(each.getDataSourceMapper().getLogicName(),actualDataSourceName),each.getTableMappers())",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-core/src/main/java/org/apache/shardingsphere/readwritesplitting/route/ReadwriteSplittingSQLRouter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new RouteUnit(new RouteMapper(each.getDataSourceMapper().getLogicName(),actualDataSourceName),each.getTableMappers())",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 119,
      "startLineNumber" : 62,
      "startColumnNumber" : 30,
      "endLineNumber" : 62,
      "endColumnNumber" : 149
    },
    "astNodeNumber" : 15,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 62,
        "startColumnNumber" : 16,
        "endLineNumber" : 62,
        "endColumnNumber" : 150
      },
      "nodeContext" : "toBeAdded.add(new RouteUnit(new RouteMapper(each.getDataSourceMapper().getLogicName(),actualDataSourceName),each.getTableMappers()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 62,
        "startColumnNumber" : 16,
        "endLineNumber" : 62,
        "endColumnNumber" : 151
      },
      "nodeContext" : "toBeAdded.add(new RouteUnit(new RouteMapper(each.getDataSourceMapper().getLogicName(),actualDataSourceName),each.getTableMappers()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 355,
        "startLineNumber" : 59,
        "startColumnNumber" : 139,
        "endLineNumber" : 63,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  toBeRemoved.add(each);\n  String actualDataSourceName=new ReadwriteSplittingDataSourceRouter(dataSourceRule.get()).route(logicSQL.getSqlStatementContext());\n  toBeAdded.add(new RouteUnit(new RouteMapper(each.getDataSourceMapper().getLogicName(),actualDataSourceName),each.getTableMappers()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 482,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 63,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (dataSourceRule.isPresent() && dataSourceRule.get().getName().equalsIgnoreCase(each.getDataSourceMapper().getActualName())) {\n  toBeRemoved.add(each);\n  String actualDataSourceName=new ReadwriteSplittingDataSourceRouter(dataSourceRule.get()).route(logicSQL.getSqlStatementContext());\n  toBeAdded.add(new RouteUnit(new RouteMapper(each.getDataSourceMapper().getLogicName(),actualDataSourceName),each.getTableMappers()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 58,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 698,
        "startLineNumber" : 56,
        "startColumnNumber" : 60,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String dataSourceName=each.getDataSourceMapper().getLogicName();\n  Optional<ReadwriteSplittingDataSourceRule> dataSourceRule=rule.findDataSourceRule(dataSourceName);\n  if (dataSourceRule.isPresent() && dataSourceRule.get().getName().equalsIgnoreCase(each.getDataSourceMapper().getActualName())) {\n    toBeRemoved.add(each);\n    String actualDataSourceName=new ReadwriteSplittingDataSourceRouter(dataSourceRule.get()).route(logicSQL.getSqlStatementContext());\n    toBeAdded.add(new RouteUnit(new RouteMapper(each.getDataSourceMapper().getLogicName(),actualDataSourceName),each.getTableMappers()));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 750,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (RouteUnit each : routeContext.getRouteUnits()) {\n  String dataSourceName=each.getDataSourceMapper().getLogicName();\n  Optional<ReadwriteSplittingDataSourceRule> dataSourceRule=rule.findDataSourceRule(dataSourceName);\n  if (dataSourceRule.isPresent() && dataSourceRule.get().getName().equalsIgnoreCase(each.getDataSourceMapper().getActualName())) {\n    toBeRemoved.add(each);\n    String actualDataSourceName=new ReadwriteSplittingDataSourceRouter(dataSourceRule.get()).route(logicSQL.getSqlStatementContext());\n    toBeAdded.add(new RouteUnit(new RouteMapper(each.getDataSourceMapper().getLogicName(),actualDataSourceName),each.getTableMappers()));\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 89,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1009,
        "startLineNumber" : 53,
        "startColumnNumber" : 173,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Collection<RouteUnit> toBeRemoved=new LinkedList<>();\n  Collection<RouteUnit> toBeAdded=new LinkedList<>();\n  for (  RouteUnit each : routeContext.getRouteUnits()) {\n    String dataSourceName=each.getDataSourceMapper().getLogicName();\n    Optional<ReadwriteSplittingDataSourceRule> dataSourceRule=rule.findDataSourceRule(dataSourceName);\n    if (dataSourceRule.isPresent() && dataSourceRule.get().getName().equalsIgnoreCase(each.getDataSourceMapper().getActualName())) {\n      toBeRemoved.add(each);\n      String actualDataSourceName=new ReadwriteSplittingDataSourceRouter(dataSourceRule.get()).route(logicSQL.getSqlStatementContext());\n      toBeAdded.add(new RouteUnit(new RouteMapper(each.getDataSourceMapper().getLogicName(),actualDataSourceName),each.getTableMappers()));\n    }\n  }\n  routeContext.getRouteUnits().removeAll(toBeRemoved);\n  routeContext.getRouteUnits().addAll(toBeAdded);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1262,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void decorateRouteContext(final RouteContext routeContext,final LogicSQL logicSQL,final ShardingSphereMetaData metaData,final ReadwriteSplittingRule rule,final ConfigurationProperties props){\n  Collection<RouteUnit> toBeRemoved=new LinkedList<>();\n  Collection<RouteUnit> toBeAdded=new LinkedList<>();\n  for (  RouteUnit each : routeContext.getRouteUnits()) {\n    String dataSourceName=each.getDataSourceMapper().getLogicName();\n    Optional<ReadwriteSplittingDataSourceRule> dataSourceRule=rule.findDataSourceRule(dataSourceName);\n    if (dataSourceRule.isPresent() && dataSourceRule.get().getName().equalsIgnoreCase(each.getDataSourceMapper().getActualName())) {\n      toBeRemoved.add(each);\n      String actualDataSourceName=new ReadwriteSplittingDataSourceRouter(dataSourceRule.get()).route(logicSQL.getSqlStatementContext());\n      toBeAdded.add(new RouteUnit(new RouteMapper(each.getDataSourceMapper().getLogicName(),actualDataSourceName),each.getTableMappers()));\n    }\n  }\n  routeContext.getRouteUnits().removeAll(toBeRemoved);\n  routeContext.getRouteUnits().addAll(toBeAdded);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 62,
        "startColumnNumber" : 16,
        "endLineNumber" : 62,
        "endColumnNumber" : 151
      },
      "nodeContext" : "toBeAdded.add(new RouteUnit(new RouteMapper(each.getDataSourceMapper().getLogicName(),actualDataSourceName),each.getTableMappers()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    },
    "tokenLength" : 8,
    "type" : "org.apache.shardingsphere.infra.route.context.RouteUnit"
  } ],
  "positionList" : [ {
    "charLength" : 119,
    "startLineNumber" : 62,
    "startColumnNumber" : 30,
    "endLineNumber" : 62,
    "endColumnNumber" : 149
  } ],
  "layoutRelationDataList" : [ ]
}