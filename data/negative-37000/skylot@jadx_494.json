{
  "id" : 494,
  "expression" : "ErrorsCounter",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/main/java/jadx/core/codegen/MethodGen.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ErrorsCounter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 115,
      "startColumnNumber" : 13,
      "endLineNumber" : 115,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 115,
        "startColumnNumber" : 13,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "ErrorsCounter.formatMsg(mth,\"Incorrect number of args for enum constructor: \" + args.size() + \" (expected >= 2)\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 115,
        "startColumnNumber" : 4,
        "endLineNumber" : 118,
        "endColumnNumber" : 6
      },
      "nodeContext" : "LOG.warn(ErrorsCounter.formatMsg(mth,\"Incorrect number of args for enum constructor: \" + args.size() + \" (expected >= 2)\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 115,
        "startColumnNumber" : 4,
        "endLineNumber" : 118,
        "endColumnNumber" : 7
      },
      "nodeContext" : "LOG.warn(ErrorsCounter.formatMsg(mth,\"Incorrect number of args for enum constructor: \" + args.size() + \" (expected >= 2)\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 155,
        "startLineNumber" : 114,
        "startColumnNumber" : 10,
        "endLineNumber" : 119,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  LOG.warn(ErrorsCounter.formatMsg(mth,\"Incorrect number of args for enum constructor: \" + args.size() + \" (expected >= 2)\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 229,
        "startLineNumber" : 112,
        "startColumnNumber" : 10,
        "endLineNumber" : 119,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (args.size() > 2) {\n  args=args.subList(2,args.size());\n}\n else {\n  LOG.warn(ErrorsCounter.formatMsg(mth,\"Incorrect number of args for enum constructor: \" + args.size() + \" (expected >= 2)\"));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 281,
        "startLineNumber" : 110,
        "startColumnNumber" : 3,
        "endLineNumber" : 119,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (args.size() == 2) {\n  args.clear();\n}\n else if (args.size() > 2) {\n  args=args.subList(2,args.size());\n}\n else {\n  LOG.warn(ErrorsCounter.formatMsg(mth,\"Incorrect number of args for enum constructor: \" + args.size() + \" (expected >= 2)\"));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 290,
        "startLineNumber" : 109,
        "startColumnNumber" : 56,
        "endLineNumber" : 120,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (args.size() == 2) {\n    args.clear();\n  }\n else   if (args.size() > 2) {\n    args=args.subList(2,args.size());\n  }\n else {\n    LOG.warn(ErrorsCounter.formatMsg(mth,\"Incorrect number of args for enum constructor: \" + args.size() + \" (expected >= 2)\"));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 386,
        "startLineNumber" : 108,
        "startColumnNumber" : 2,
        "endLineNumber" : 120,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (mth.getMethodInfo().isConstructor() && mth.getParentClass().contains(AType.ENUM_CLASS)) {\n  if (args.size() == 2) {\n    args.clear();\n  }\n else   if (args.size() > 2) {\n    args=args.subList(2,args.size());\n  }\n else {\n    LOG.warn(ErrorsCounter.formatMsg(mth,\"Incorrect number of args for enum constructor: \" + args.size() + \" (expected >= 2)\"));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 59,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1982,
        "startLineNumber" : 58,
        "startColumnNumber" : 47,
        "endLineNumber" : 126,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (mth.getMethodInfo().isClassInit()) {\n    code.attachDefinition(mth);\n    code.startLine(\"static\");\n    return true;\n  }\n  if (mth.contains(AFlag.ANONYMOUS_CONSTRUCTOR)) {\n    code.startLine();\n    code.attachDefinition(mth);\n    return false;\n  }\n  annotationGen.addForMethod(code,mth);\n  AccessInfo clsAccFlags=mth.getParentClass().getAccessFlags();\n  AccessInfo ai=mth.getAccessFlags();\n  if (clsAccFlags.isInterface()) {\n    ai=ai.remove(AccessFlags.ACC_ABSTRACT);\n    ai=ai.remove(AccessFlags.ACC_PUBLIC);\n  }\n  if (clsAccFlags.isAnnotation()) {\n    ai=ai.remove(AccessFlags.ACC_PUBLIC);\n  }\n  if (mth.getMethodInfo().isRenamed() && !ai.isConstructor()) {\n    code.startLine(\"/* renamed from: \").add(mth.getName()).add(\" */\");\n  }\n  code.startLineWithNum(mth.getSourceLine());\n  code.add(ai.makeString());\n  if (Consts.DEBUG) {\n    code.add(mth.isVirtual() ? \"/* virtual */ \" : \"/* direct */ \");\n  }\n  if (classGen.addGenericMap(code,mth.getGenericMap(),false)) {\n    code.add(' ');\n  }\n  if (ai.isConstructor()) {\n    code.attachDefinition(mth);\n    code.add(classGen.getClassNode().getShortName());\n  }\n else {\n    classGen.useType(code,mth.getReturnType());\n    code.add(' ');\n    code.attachDefinition(mth);\n    code.add(mth.getAlias());\n  }\n  code.add('(');\n  List<RegisterArg> args=mth.getArguments(false);\n  if (mth.getMethodInfo().isConstructor() && mth.getParentClass().contains(AType.ENUM_CLASS)) {\n    if (args.size() == 2) {\n      args.clear();\n    }\n else     if (args.size() > 2) {\n      args=args.subList(2,args.size());\n    }\n else {\n      LOG.warn(ErrorsCounter.formatMsg(mth,\"Incorrect number of args for enum constructor: \" + args.size() + \" (expected >= 2)\"));\n    }\n  }\n  addMethodArguments(code,args);\n  code.add(')');\n  annotationGen.addThrows(mth,code);\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 308,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2028,
        "startLineNumber" : 58,
        "startColumnNumber" : 1,
        "endLineNumber" : 126,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public boolean addDefinition(CodeWriter code){\n  if (mth.getMethodInfo().isClassInit()) {\n    code.attachDefinition(mth);\n    code.startLine(\"static\");\n    return true;\n  }\n  if (mth.contains(AFlag.ANONYMOUS_CONSTRUCTOR)) {\n    code.startLine();\n    code.attachDefinition(mth);\n    return false;\n  }\n  annotationGen.addForMethod(code,mth);\n  AccessInfo clsAccFlags=mth.getParentClass().getAccessFlags();\n  AccessInfo ai=mth.getAccessFlags();\n  if (clsAccFlags.isInterface()) {\n    ai=ai.remove(AccessFlags.ACC_ABSTRACT);\n    ai=ai.remove(AccessFlags.ACC_PUBLIC);\n  }\n  if (clsAccFlags.isAnnotation()) {\n    ai=ai.remove(AccessFlags.ACC_PUBLIC);\n  }\n  if (mth.getMethodInfo().isRenamed() && !ai.isConstructor()) {\n    code.startLine(\"/* renamed from: \").add(mth.getName()).add(\" */\");\n  }\n  code.startLineWithNum(mth.getSourceLine());\n  code.add(ai.makeString());\n  if (Consts.DEBUG) {\n    code.add(mth.isVirtual() ? \"/* virtual */ \" : \"/* direct */ \");\n  }\n  if (classGen.addGenericMap(code,mth.getGenericMap(),false)) {\n    code.add(' ');\n  }\n  if (ai.isConstructor()) {\n    code.attachDefinition(mth);\n    code.add(classGen.getClassNode().getShortName());\n  }\n else {\n    classGen.useType(code,mth.getReturnType());\n    code.add(' ');\n    code.attachDefinition(mth);\n    code.add(mth.getAlias());\n  }\n  code.add('(');\n  List<RegisterArg> args=mth.getArguments(false);\n  if (mth.getMethodInfo().isConstructor() && mth.getParentClass().contains(AType.ENUM_CLASS)) {\n    if (args.size() == 2) {\n      args.clear();\n    }\n else     if (args.size() > 2) {\n      args=args.subList(2,args.size());\n    }\n else {\n      LOG.warn(ErrorsCounter.formatMsg(mth,\"Incorrect number of args for enum constructor: \" + args.size() + \" (expected >= 2)\"));\n    }\n  }\n  addMethodArguments(code,args);\n  code.add(')');\n  annotationGen.addThrows(mth,code);\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 316,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 115,
        "startColumnNumber" : 13,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "ErrorsCounter.formatMsg(mth,\"Incorrect number of args for enum constructor: \" + args.size() + \" (expected >= 2)\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "jadx.core.utils.ErrorsCounter"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 115,
    "startColumnNumber" : 13,
    "endLineNumber" : 115,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}