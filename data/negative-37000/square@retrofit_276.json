{
  "id" : 276,
  "expression" : "\"Content-Type: \"",
  "projectName" : "square@retrofit",
  "commitID" : "757278c7ab7f6c8e5a40d16a5707c35e0f61c5ab",
  "filePath" : "/retrofit/src/main/java/retrofit/RestAdapter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Content-Type: \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 409,
      "startColumnNumber" : 18,
      "endLineNumber" : 409,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 409,
        "startColumnNumber" : 18,
        "endLineNumber" : 409,
        "endColumnNumber" : 45
      },
      "nodeContext" : "\"Content-Type: \" + bodyMime",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 409,
        "startColumnNumber" : 10,
        "endLineNumber" : 409,
        "endColumnNumber" : 46
      },
      "nodeContext" : "log.log(\"Content-Type: \" + bodyMime)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 409,
        "startColumnNumber" : 10,
        "endLineNumber" : 409,
        "endColumnNumber" : 47
      },
      "nodeContext" : "log.log(\"Content-Type: \" + bodyMime);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 408,
        "startColumnNumber" : 30,
        "endLineNumber" : 410,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  log.log(\"Content-Type: \" + bodyMime);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 408,
        "startColumnNumber" : 8,
        "endLineNumber" : 410,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (bodyMime != null) {\n  log.log(\"Content-Type: \" + bodyMime);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1228,
        "startLineNumber" : 406,
        "startColumnNumber" : 24,
        "endLineNumber" : 439,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  String bodyMime=body.mimeType();\n  if (bodyMime != null) {\n    log.log(\"Content-Type: \" + bodyMime);\n  }\n  long bodyLength=body.length();\n  bodySize=bodyLength + \"-byte\";\n  if (bodyLength != -1) {\n    log.log(\"Content-Length: \" + bodyLength);\n  }\n  if (logLevel.ordinal() >= LogLevel.FULL.ordinal()) {\n    if (!request.getHeaders().isEmpty()) {\n      log.log(\"\");\n    }\n    if (!(body instanceof TypedByteArray)) {\n      request=Utils.readBodyToBytesIfNecessary(request);\n      body=request.getBody();\n    }\n    byte[] bodyBytes=((TypedByteArray)body).getBytes();\n    String bodyCharset=MimeUtil.parseCharset(body.mimeType(),\"UTF-8\");\n    log.log(new String(bodyBytes,bodyCharset));\n  }\n else   if (logLevel.ordinal() >= LogLevel.HEADERS_AND_ARGS.ordinal()) {\n    if (!request.getHeaders().isEmpty()) {\n      log.log(\"---> REQUEST:\");\n    }\n    for (int i=0; i < args.length; i++) {\n      log.log(\"#\" + i + \": \"+ args[i]);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 175,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1246,
        "startLineNumber" : 406,
        "startColumnNumber" : 6,
        "endLineNumber" : 439,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (body != null) {\n  String bodyMime=body.mimeType();\n  if (bodyMime != null) {\n    log.log(\"Content-Type: \" + bodyMime);\n  }\n  long bodyLength=body.length();\n  bodySize=bodyLength + \"-byte\";\n  if (bodyLength != -1) {\n    log.log(\"Content-Length: \" + bodyLength);\n  }\n  if (logLevel.ordinal() >= LogLevel.FULL.ordinal()) {\n    if (!request.getHeaders().isEmpty()) {\n      log.log(\"\");\n    }\n    if (!(body instanceof TypedByteArray)) {\n      request=Utils.readBodyToBytesIfNecessary(request);\n      body=request.getBody();\n    }\n    byte[] bodyBytes=((TypedByteArray)body).getBytes();\n    String bodyCharset=MimeUtil.parseCharset(body.mimeType(),\"UTF-8\");\n    log.log(new String(bodyBytes,bodyCharset));\n  }\n else   if (logLevel.ordinal() >= LogLevel.HEADERS_AND_ARGS.ordinal()) {\n    if (!request.getHeaders().isEmpty()) {\n      log.log(\"---> REQUEST:\");\n    }\n    for (int i=0; i < args.length; i++) {\n      log.log(\"#\" + i + \": \"+ args[i]);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 179,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1502,
        "startLineNumber" : 399,
        "startColumnNumber" : 58,
        "endLineNumber" : 442,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (  Header header : request.getHeaders()) {\n    log.log(header.toString());\n  }\n  String bodySize=\"no\";\n  TypedOutput body=request.getBody();\n  if (body != null) {\n    String bodyMime=body.mimeType();\n    if (bodyMime != null) {\n      log.log(\"Content-Type: \" + bodyMime);\n    }\n    long bodyLength=body.length();\n    bodySize=bodyLength + \"-byte\";\n    if (bodyLength != -1) {\n      log.log(\"Content-Length: \" + bodyLength);\n    }\n    if (logLevel.ordinal() >= LogLevel.FULL.ordinal()) {\n      if (!request.getHeaders().isEmpty()) {\n        log.log(\"\");\n      }\n      if (!(body instanceof TypedByteArray)) {\n        request=Utils.readBodyToBytesIfNecessary(request);\n        body=request.getBody();\n      }\n      byte[] bodyBytes=((TypedByteArray)body).getBytes();\n      String bodyCharset=MimeUtil.parseCharset(body.mimeType(),\"UTF-8\");\n      log.log(new String(bodyBytes,bodyCharset));\n    }\n else     if (logLevel.ordinal() >= LogLevel.HEADERS_AND_ARGS.ordinal()) {\n      if (!request.getHeaders().isEmpty()) {\n        log.log(\"---> REQUEST:\");\n      }\n      for (int i=0; i < args.length; i++) {\n        log.log(\"#\" + i + \": \"+ args[i]);\n      }\n    }\n  }\n  log.log(String.format(\"---> END %s (%s body)\",name,bodySize));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 220,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1556,
        "startLineNumber" : 399,
        "startColumnNumber" : 4,
        "endLineNumber" : 442,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (logLevel.ordinal() >= LogLevel.HEADERS.ordinal()) {\n  for (  Header header : request.getHeaders()) {\n    log.log(header.toString());\n  }\n  String bodySize=\"no\";\n  TypedOutput body=request.getBody();\n  if (body != null) {\n    String bodyMime=body.mimeType();\n    if (bodyMime != null) {\n      log.log(\"Content-Type: \" + bodyMime);\n    }\n    long bodyLength=body.length();\n    bodySize=bodyLength + \"-byte\";\n    if (bodyLength != -1) {\n      log.log(\"Content-Length: \" + bodyLength);\n    }\n    if (logLevel.ordinal() >= LogLevel.FULL.ordinal()) {\n      if (!request.getHeaders().isEmpty()) {\n        log.log(\"\");\n      }\n      if (!(body instanceof TypedByteArray)) {\n        request=Utils.readBodyToBytesIfNecessary(request);\n        body=request.getBody();\n      }\n      byte[] bodyBytes=((TypedByteArray)body).getBytes();\n      String bodyCharset=MimeUtil.parseCharset(body.mimeType(),\"UTF-8\");\n      log.log(new String(bodyBytes,bodyCharset));\n    }\n else     if (logLevel.ordinal() >= LogLevel.HEADERS_AND_ARGS.ordinal()) {\n      if (!request.getHeaders().isEmpty()) {\n        log.log(\"---> REQUEST:\");\n      }\n      for (int i=0; i < args.length; i++) {\n        log.log(\"#\" + i + \": \"+ args[i]);\n      }\n    }\n  }\n  log.log(String.format(\"---> END %s (%s body)\",name,bodySize));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 230,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1678,
        "startLineNumber" : 396,
        "startColumnNumber" : 95,
        "endLineNumber" : 445,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  log.log(String.format(\"---> %s %s %s\",name,request.getMethod(),request.getUrl()));\n  if (logLevel.ordinal() >= LogLevel.HEADERS.ordinal()) {\n    for (    Header header : request.getHeaders()) {\n      log.log(header.toString());\n    }\n    String bodySize=\"no\";\n    TypedOutput body=request.getBody();\n    if (body != null) {\n      String bodyMime=body.mimeType();\n      if (bodyMime != null) {\n        log.log(\"Content-Type: \" + bodyMime);\n      }\n      long bodyLength=body.length();\n      bodySize=bodyLength + \"-byte\";\n      if (bodyLength != -1) {\n        log.log(\"Content-Length: \" + bodyLength);\n      }\n      if (logLevel.ordinal() >= LogLevel.FULL.ordinal()) {\n        if (!request.getHeaders().isEmpty()) {\n          log.log(\"\");\n        }\n        if (!(body instanceof TypedByteArray)) {\n          request=Utils.readBodyToBytesIfNecessary(request);\n          body=request.getBody();\n        }\n        byte[] bodyBytes=((TypedByteArray)body).getBytes();\n        String bodyCharset=MimeUtil.parseCharset(body.mimeType(),\"UTF-8\");\n        log.log(new String(bodyBytes,bodyCharset));\n      }\n else       if (logLevel.ordinal() >= LogLevel.HEADERS_AND_ARGS.ordinal()) {\n        if (!request.getHeaders().isEmpty()) {\n          log.log(\"---> REQUEST:\");\n        }\n        for (int i=0; i < args.length; i++) {\n          log.log(\"#\" + i + \": \"+ args[i]);\n        }\n      }\n    }\n    log.log(String.format(\"---> END %s (%s body)\",name,bodySize));\n  }\n  return request;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1867,
        "startLineNumber" : 395,
        "startColumnNumber" : 2,
        "endLineNumber" : 445,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Log request headers and body. Consumes request body and returns identical replacement. \n */\nRequest logAndReplaceRequest(String name,Request request,Object[] args) throws IOException {\n  log.log(String.format(\"---> %s %s %s\",name,request.getMethod(),request.getUrl()));\n  if (logLevel.ordinal() >= LogLevel.HEADERS.ordinal()) {\n    for (    Header header : request.getHeaders()) {\n      log.log(header.toString());\n    }\n    String bodySize=\"no\";\n    TypedOutput body=request.getBody();\n    if (body != null) {\n      String bodyMime=body.mimeType();\n      if (bodyMime != null) {\n        log.log(\"Content-Type: \" + bodyMime);\n      }\n      long bodyLength=body.length();\n      bodySize=bodyLength + \"-byte\";\n      if (bodyLength != -1) {\n        log.log(\"Content-Length: \" + bodyLength);\n      }\n      if (logLevel.ordinal() >= LogLevel.FULL.ordinal()) {\n        if (!request.getHeaders().isEmpty()) {\n          log.log(\"\");\n        }\n        if (!(body instanceof TypedByteArray)) {\n          request=Utils.readBodyToBytesIfNecessary(request);\n          body=request.getBody();\n        }\n        byte[] bodyBytes=((TypedByteArray)body).getBytes();\n        String bodyCharset=MimeUtil.parseCharset(body.mimeType(),\"UTF-8\");\n        log.log(new String(bodyBytes,bodyCharset));\n      }\n else       if (logLevel.ordinal() >= LogLevel.HEADERS_AND_ARGS.ordinal()) {\n        if (!request.getHeaders().isEmpty()) {\n          log.log(\"---> REQUEST:\");\n        }\n        for (int i=0; i < args.length; i++) {\n          log.log(\"#\" + i + \": \"+ args[i]);\n        }\n      }\n    }\n    log.log(String.format(\"---> END %s (%s body)\",name,bodySize));\n  }\n  return request;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 269,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 409,
        "startColumnNumber" : 10,
        "endLineNumber" : 409,
        "endColumnNumber" : 47
      },
      "nodeContext" : "log.log(\"Content-Type: \" + bodyMime);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 409,
    "startColumnNumber" : 18,
    "endLineNumber" : 409,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}