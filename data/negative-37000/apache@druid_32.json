{
  "id" : 32,
  "expression" : "isRowsWithinIndex",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/processing/src/main/java/org/apache/druid/query/aggregation/any/DoubleAnyVectorAggregator.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "isRowsWithinIndex",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 47,
      "startColumnNumber" : 8,
      "endLineNumber" : 47,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (isRowsWithinIndex) {\n  buf.putDouble(position,values[startRow]);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 259,
        "startLineNumber" : 44,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  double[] values=vectorValueSelector.getDoubleVector();\n  boolean isRowsWithinIndex=startRow < endRow && startRow < values.length;\n  if (isRowsWithinIndex) {\n    buf.putDouble(position,values[startRow]);\n  }\n  return isRowsWithinIndex;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 356,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override boolean putAnyValueFromRow(ByteBuffer buf,int position,int startRow,int endRow){\n  double[] values=vectorValueSelector.getDoubleVector();\n  boolean isRowsWithinIndex=startRow < endRow && startRow < values.length;\n  if (isRowsWithinIndex) {\n    buf.putDouble(position,values[startRow]);\n  }\n  return isRowsWithinIndex;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 54,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (isRowsWithinIndex) {\n  buf.putDouble(position,values[startRow]);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "boolean"
  }, {
    "nodeContext" : "isRowsWithinIndex",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 50,
      "startColumnNumber" : 11,
      "endLineNumber" : 50,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 29
      },
      "nodeContext" : "return isRowsWithinIndex;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 259,
        "startLineNumber" : 44,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  double[] values=vectorValueSelector.getDoubleVector();\n  boolean isRowsWithinIndex=startRow < endRow && startRow < values.length;\n  if (isRowsWithinIndex) {\n    buf.putDouble(position,values[startRow]);\n  }\n  return isRowsWithinIndex;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 356,
        "startLineNumber" : 42,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override boolean putAnyValueFromRow(ByteBuffer buf,int position,int startRow,int endRow){\n  double[] values=vectorValueSelector.getDoubleVector();\n  boolean isRowsWithinIndex=startRow < endRow && startRow < values.length;\n  if (isRowsWithinIndex) {\n    buf.putDouble(position,values[startRow]);\n  }\n  return isRowsWithinIndex;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 54,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 29
      },
      "nodeContext" : "return isRowsWithinIndex;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 47,
    "startColumnNumber" : 8,
    "endLineNumber" : 47,
    "endColumnNumber" : 25
  }, {
    "charLength" : 17,
    "startLineNumber" : 50,
    "startColumnNumber" : 11,
    "endLineNumber" : 50,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}