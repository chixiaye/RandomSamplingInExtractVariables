{
  "id" : 266,
  "expression" : "\"Type token cache after invoking \"",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/third_party/java/proguard/proguard6.2.2/src/proguard/optimize/gson/GsonInstrumentationAdder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Type token cache after invoking \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 94,
      "startColumnNumber" : 21,
      "endLineNumber" : 94,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 94,
        "startColumnNumber" : 21,
        "endLineNumber" : 94,
        "endColumnNumber" : 88
      },
      "nodeContext" : "\"Type token cache after invoking \" + fullyQualifiedMethodName + \":\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 94,
        "endColumnNumber" : 89
      },
      "nodeContext" : "____.ldc(\"Type token cache after invoking \" + fullyQualifiedMethodName + \":\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 95,
        "endColumnNumber" : 26
      },
      "nodeContext" : "____.ldc(\"Type token cache after invoking \" + fullyQualifiedMethodName + \":\").aload_0()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 295,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 98,
        "endColumnNumber" : 73
      },
      "nodeContext" : "____.ldc(\"Type token cache after invoking \" + fullyQualifiedMethodName + \":\").aload_0().getfield(clazz.getName(),GsonClassConstants.FIELD_NAME_TYPE_TOKEN_CACHE,GsonClassConstants.FIELD_TYPE_TYPE_TOKEN_CACHE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 543,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 101,
        "endColumnNumber" : 88
      },
      "nodeContext" : "____.ldc(\"Type token cache after invoking \" + fullyQualifiedMethodName + \":\").aload_0().getfield(clazz.getName(),GsonClassConstants.FIELD_NAME_TYPE_TOKEN_CACHE,GsonClassConstants.FIELD_TYPE_TYPE_TOKEN_CACHE).invokestatic(OptimizedClassConstants.NAME_GSON_UTIL,OptimizedClassConstants.METHOD_NAME_DUMP_TYPE_TOKEN_CACHE,OptimizedClassConstants.METHOD_TYPE_DUMP_TYPE_TOKEN_CACHE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 544,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 101,
        "endColumnNumber" : 89
      },
      "nodeContext" : "____.ldc(\"Type token cache after invoking \" + fullyQualifiedMethodName + \":\").aload_0().getfield(clazz.getName(),GsonClassConstants.FIELD_NAME_TYPE_TOKEN_CACHE,GsonClassConstants.FIELD_TYPE_TYPE_TOKEN_CACHE).invokestatic(OptimizedClassConstants.NAME_GSON_UTIL,OptimizedClassConstants.METHOD_NAME_DUMP_TYPE_TOKEN_CACHE,OptimizedClassConstants.METHOD_TYPE_DUMP_TYPE_TOKEN_CACHE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1307,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String fullyQualifiedMethodName=clazz.getName() + \"#\" + method.getName(clazz)+ method.getDescriptor(clazz);\n  if (DEBUG) {\n    System.out.println(\"GsonInstrumentationAdder: instrumenting \" + fullyQualifiedMethodName);\n  }\n  InstructionSequenceBuilder ____=new InstructionSequenceBuilder((ProgramClass)clazz,programClassPool,libraryClassPool);\n  ____.ldc(\"Type token cache after invoking \" + fullyQualifiedMethodName + \":\").aload_0().getfield(clazz.getName(),GsonClassConstants.FIELD_NAME_TYPE_TOKEN_CACHE,GsonClassConstants.FIELD_TYPE_TYPE_TOKEN_CACHE).invokestatic(OptimizedClassConstants.NAME_GSON_UTIL,OptimizedClassConstants.METHOD_NAME_DUMP_TYPE_TOKEN_CACHE,OptimizedClassConstants.METHOD_TYPE_DUMP_TYPE_TOKEN_CACHE);\n  codeAttributeEditor.insertBeforeInstruction(offset,____.instructions());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1416,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (instruction.actualOpcode() == OP_RETURN || instruction.actualOpcode() == OP_ARETURN) {\n  String fullyQualifiedMethodName=clazz.getName() + \"#\" + method.getName(clazz)+ method.getDescriptor(clazz);\n  if (DEBUG) {\n    System.out.println(\"GsonInstrumentationAdder: instrumenting \" + fullyQualifiedMethodName);\n  }\n  InstructionSequenceBuilder ____=new InstructionSequenceBuilder((ProgramClass)clazz,programClassPool,libraryClassPool);\n  ____.ldc(\"Type token cache after invoking \" + fullyQualifiedMethodName + \":\").aload_0().getfield(clazz.getName(),GsonClassConstants.FIELD_NAME_TYPE_TOKEN_CACHE,GsonClassConstants.FIELD_TYPE_TYPE_TOKEN_CACHE).invokestatic(OptimizedClassConstants.NAME_GSON_UTIL,OptimizedClassConstants.METHOD_NAME_DUMP_TYPE_TOKEN_CACHE,OptimizedClassConstants.METHOD_TYPE_DUMP_TYPE_TOKEN_CACHE);\n  codeAttributeEditor.insertBeforeInstruction(offset,____.instructions());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 97,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1432,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (instruction.actualOpcode() == OP_RETURN || instruction.actualOpcode() == OP_ARETURN) {\n    String fullyQualifiedMethodName=clazz.getName() + \"#\" + method.getName(clazz)+ method.getDescriptor(clazz);\n    if (DEBUG) {\n      System.out.println(\"GsonInstrumentationAdder: instrumenting \" + fullyQualifiedMethodName);\n    }\n    InstructionSequenceBuilder ____=new InstructionSequenceBuilder((ProgramClass)clazz,programClassPool,libraryClassPool);\n    ____.ldc(\"Type token cache after invoking \" + fullyQualifiedMethodName + \":\").aload_0().getfield(clazz.getName(),GsonClassConstants.FIELD_NAME_TYPE_TOKEN_CACHE,GsonClassConstants.FIELD_TYPE_TYPE_TOKEN_CACHE).invokestatic(OptimizedClassConstants.NAME_GSON_UTIL,OptimizedClassConstants.METHOD_NAME_DUMP_TYPE_TOKEN_CACHE,OptimizedClassConstants.METHOD_TYPE_DUMP_TYPE_TOKEN_CACHE);\n    codeAttributeEditor.insertBeforeInstruction(offset,____.instructions());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1747,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void visitAnyInstruction(Clazz clazz,Method method,CodeAttribute codeAttribute,int offset,Instruction instruction){\n  if (instruction.actualOpcode() == OP_RETURN || instruction.actualOpcode() == OP_ARETURN) {\n    String fullyQualifiedMethodName=clazz.getName() + \"#\" + method.getName(clazz)+ method.getDescriptor(clazz);\n    if (DEBUG) {\n      System.out.println(\"GsonInstrumentationAdder: instrumenting \" + fullyQualifiedMethodName);\n    }\n    InstructionSequenceBuilder ____=new InstructionSequenceBuilder((ProgramClass)clazz,programClassPool,libraryClassPool);\n    ____.ldc(\"Type token cache after invoking \" + fullyQualifiedMethodName + \":\").aload_0().getfield(clazz.getName(),GsonClassConstants.FIELD_NAME_TYPE_TOKEN_CACHE,GsonClassConstants.FIELD_TYPE_TYPE_TOKEN_CACHE).invokestatic(OptimizedClassConstants.NAME_GSON_UTIL,OptimizedClassConstants.METHOD_NAME_DUMP_TYPE_TOKEN_CACHE,OptimizedClassConstants.METHOD_TYPE_DUMP_TYPE_TOKEN_CACHE);\n    codeAttributeEditor.insertBeforeInstruction(offset,____.instructions());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 123,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 94,
        "endColumnNumber" : 89
      },
      "nodeContext" : "____.ldc(\"Type token cache after invoking \" + fullyQualifiedMethodName + \":\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 94,
    "startColumnNumber" : 21,
    "endLineNumber" : 94,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}