{
  "id" : 343,
  "expression" : "fixed",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-write-server/src/main/java/com/netflix/eureka2/server/ReplicationPeerAddressesProvider.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "fixed",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 55,
      "startColumnNumber" : 21,
      "endLineNumber" : 55,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 55,
        "startColumnNumber" : 16,
        "endLineNumber" : 55,
        "endColumnNumber" : 27
      },
      "nodeContext" : "case fixed:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 233,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 57,
        "endColumnNumber" : 13
      },
      "nodeContext" : "switch (resolverType) {\ncase dns:  addressStream=fromDns(bootstraps);\nbreak;\ncase fixed:addressStream=fromList(bootstraps);\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 674,
        "startLineNumber" : 44,
        "startColumnNumber" : 28,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  EurekaCommonConfig.ResolverType resolverType=config.getServerResolverType();\n  if (resolverType == null) {\n    throw new IllegalArgumentException(\"Write cluster resolver type not defined\");\n  }\n  EurekaCommonConfig.ServerBootstrap[] bootstraps=EurekaCommonConfig.ServerBootstrap.from(config.getServerList());\nswitch (resolverType) {\ncase dns:    addressStream=fromDns(bootstraps);\n  break;\ncase fixed:addressStream=fromList(bootstraps);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 694,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (config != null) {\n  EurekaCommonConfig.ResolverType resolverType=config.getServerResolverType();\n  if (resolverType == null) {\n    throw new IllegalArgumentException(\"Write cluster resolver type not defined\");\n  }\n  EurekaCommonConfig.ServerBootstrap[] bootstraps=EurekaCommonConfig.ServerBootstrap.from(config.getServerList());\nswitch (resolverType) {\ncase dns:    addressStream=fromDns(bootstraps);\n  break;\ncase fixed:addressStream=fromList(bootstraps);\n}\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 61,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 710,
        "startLineNumber" : 43,
        "startColumnNumber" : 33,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (config != null) {\n    EurekaCommonConfig.ResolverType resolverType=config.getServerResolverType();\n    if (resolverType == null) {\n      throw new IllegalArgumentException(\"Write cluster resolver type not defined\");\n    }\n    EurekaCommonConfig.ServerBootstrap[] bootstraps=EurekaCommonConfig.ServerBootstrap.from(config.getServerList());\nswitch (resolverType) {\ncase dns:      addressStream=fromDns(bootstraps);\n    break;\ncase fixed:  addressStream=fromList(bootstraps);\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 758,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@PostConstruct public void createResolver(){\n  if (config != null) {\n    EurekaCommonConfig.ResolverType resolverType=config.getServerResolverType();\n    if (resolverType == null) {\n      throw new IllegalArgumentException(\"Write cluster resolver type not defined\");\n    }\n    EurekaCommonConfig.ServerBootstrap[] bootstraps=EurekaCommonConfig.ServerBootstrap.from(config.getServerList());\nswitch (resolverType) {\ncase dns:      addressStream=fromDns(bootstraps);\n    break;\ncase fixed:  addressStream=fromList(bootstraps);\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 68,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 55,
        "startColumnNumber" : 16,
        "endLineNumber" : 55,
        "endColumnNumber" : 27
      },
      "nodeContext" : "case fixed:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.netflix.eureka2.server.config.EurekaCommonConfig.ResolverType"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 55,
    "startColumnNumber" : 21,
    "endLineNumber" : 55,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}