{
  "id" : 204,
  "expression" : "items",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "d7574973e97fa7a3a21aa59967311f6091941830",
  "filePath" : "/app/src/main/java/org/schabi/newpipe/database/playlist/PlaylistLocalItem.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "items",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 18,
      "startColumnNumber" : 8,
      "endLineNumber" : 18,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 18,
        "endColumnNumber" : 36
      },
      "nodeContext" : "items.addAll(localPlaylists)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 18,
        "endColumnNumber" : 37
      },
      "nodeContext" : "items.addAll(localPlaylists);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 592,
        "startLineNumber" : 15,
        "startColumnNumber" : 62,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final List<PlaylistLocalItem> items=new ArrayList<>(localPlaylists.size() + remotePlaylists.size());\n  items.addAll(localPlaylists);\n  items.addAll(remotePlaylists);\n  Collections.sort(items,(left,right) -> {\n    final String on1=left.getOrderingName();\n    final String on2=right.getOrderingName();\n    if (on1 == null) {\n      return on2 == null ? 0 : 1;\n    }\n else {\n      return on2 == null ? -1 : on1.compareToIgnoreCase(on2);\n    }\n  }\n);\n  return items;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 754,
        "startLineNumber" : 13,
        "startColumnNumber" : 4,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static List<PlaylistLocalItem> merge(final List<PlaylistMetadataEntry> localPlaylists,final List<PlaylistRemoteEntity> remotePlaylists){\n  final List<PlaylistLocalItem> items=new ArrayList<>(localPlaylists.size() + remotePlaylists.size());\n  items.addAll(localPlaylists);\n  items.addAll(remotePlaylists);\n  Collections.sort(items,(left,right) -> {\n    final String on1=left.getOrderingName();\n    final String on2=right.getOrderingName();\n    if (on1 == null) {\n      return on2 == null ? 0 : 1;\n    }\n else {\n      return on2 == null ? -1 : on1.compareToIgnoreCase(on2);\n    }\n  }\n);\n  return items;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 110,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 18,
        "endColumnNumber" : 37
      },
      "nodeContext" : "items.addAll(localPlaylists);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.List<org.schabi.newpipe.database.playlist.PlaylistLocalItem>"
  }, {
    "nodeContext" : "items",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 19,
      "startColumnNumber" : 8,
      "endLineNumber" : 19,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 19,
        "startColumnNumber" : 8,
        "endLineNumber" : 19,
        "endColumnNumber" : 37
      },
      "nodeContext" : "items.addAll(remotePlaylists)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 19,
        "startColumnNumber" : 8,
        "endLineNumber" : 19,
        "endColumnNumber" : 38
      },
      "nodeContext" : "items.addAll(remotePlaylists);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 592,
        "startLineNumber" : 15,
        "startColumnNumber" : 62,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final List<PlaylistLocalItem> items=new ArrayList<>(localPlaylists.size() + remotePlaylists.size());\n  items.addAll(localPlaylists);\n  items.addAll(remotePlaylists);\n  Collections.sort(items,(left,right) -> {\n    final String on1=left.getOrderingName();\n    final String on2=right.getOrderingName();\n    if (on1 == null) {\n      return on2 == null ? 0 : 1;\n    }\n else {\n      return on2 == null ? -1 : on1.compareToIgnoreCase(on2);\n    }\n  }\n);\n  return items;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 754,
        "startLineNumber" : 13,
        "startColumnNumber" : 4,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static List<PlaylistLocalItem> merge(final List<PlaylistMetadataEntry> localPlaylists,final List<PlaylistRemoteEntity> remotePlaylists){\n  final List<PlaylistLocalItem> items=new ArrayList<>(localPlaylists.size() + remotePlaylists.size());\n  items.addAll(localPlaylists);\n  items.addAll(remotePlaylists);\n  Collections.sort(items,(left,right) -> {\n    final String on1=left.getOrderingName();\n    final String on2=right.getOrderingName();\n    if (on1 == null) {\n      return on2 == null ? 0 : 1;\n    }\n else {\n      return on2 == null ? -1 : on1.compareToIgnoreCase(on2);\n    }\n  }\n);\n  return items;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 110,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 19,
        "startColumnNumber" : 8,
        "endLineNumber" : 19,
        "endColumnNumber" : 38
      },
      "nodeContext" : "items.addAll(remotePlaylists);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.List<org.schabi.newpipe.database.playlist.PlaylistLocalItem>"
  }, {
    "nodeContext" : "items",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 21,
      "startColumnNumber" : 25,
      "endLineNumber" : 21,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 346,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 10
      },
      "nodeContext" : "Collections.sort(items,(left,right) -> {\n  final String on1=left.getOrderingName();\n  final String on2=right.getOrderingName();\n  if (on1 == null) {\n    return on2 == null ? 0 : 1;\n  }\n else {\n    return on2 == null ? -1 : on1.compareToIgnoreCase(on2);\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 52,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 347,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 11
      },
      "nodeContext" : "Collections.sort(items,(left,right) -> {\n  final String on1=left.getOrderingName();\n  final String on2=right.getOrderingName();\n  if (on1 == null) {\n    return on2 == null ? 0 : 1;\n  }\n else {\n    return on2 == null ? -1 : on1.compareToIgnoreCase(on2);\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 53,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 592,
        "startLineNumber" : 15,
        "startColumnNumber" : 62,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final List<PlaylistLocalItem> items=new ArrayList<>(localPlaylists.size() + remotePlaylists.size());\n  items.addAll(localPlaylists);\n  items.addAll(remotePlaylists);\n  Collections.sort(items,(left,right) -> {\n    final String on1=left.getOrderingName();\n    final String on2=right.getOrderingName();\n    if (on1 == null) {\n      return on2 == null ? 0 : 1;\n    }\n else {\n      return on2 == null ? -1 : on1.compareToIgnoreCase(on2);\n    }\n  }\n);\n  return items;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 754,
        "startLineNumber" : 13,
        "startColumnNumber" : 4,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static List<PlaylistLocalItem> merge(final List<PlaylistMetadataEntry> localPlaylists,final List<PlaylistRemoteEntity> remotePlaylists){\n  final List<PlaylistLocalItem> items=new ArrayList<>(localPlaylists.size() + remotePlaylists.size());\n  items.addAll(localPlaylists);\n  items.addAll(remotePlaylists);\n  Collections.sort(items,(left,right) -> {\n    final String on1=left.getOrderingName();\n    final String on2=right.getOrderingName();\n    if (on1 == null) {\n      return on2 == null ? 0 : 1;\n    }\n else {\n      return on2 == null ? -1 : on1.compareToIgnoreCase(on2);\n    }\n  }\n);\n  return items;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 110,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 346,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 10
      },
      "nodeContext" : "Collections.sort(items,(left,right) -> {\n  final String on1=left.getOrderingName();\n  final String on2=right.getOrderingName();\n  if (on1 == null) {\n    return on2 == null ? 0 : 1;\n  }\n else {\n    return on2 == null ? -1 : on1.compareToIgnoreCase(on2);\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 52,
      "astHeight" : 9
    },
    "tokenLength" : 1,
    "type" : "java.util.List<org.schabi.newpipe.database.playlist.PlaylistLocalItem>"
  }, {
    "nodeContext" : "items",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 31,
      "startColumnNumber" : 15,
      "endLineNumber" : 31,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 21
      },
      "nodeContext" : "return items;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 592,
        "startLineNumber" : 15,
        "startColumnNumber" : 62,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final List<PlaylistLocalItem> items=new ArrayList<>(localPlaylists.size() + remotePlaylists.size());\n  items.addAll(localPlaylists);\n  items.addAll(remotePlaylists);\n  Collections.sort(items,(left,right) -> {\n    final String on1=left.getOrderingName();\n    final String on2=right.getOrderingName();\n    if (on1 == null) {\n      return on2 == null ? 0 : 1;\n    }\n else {\n      return on2 == null ? -1 : on1.compareToIgnoreCase(on2);\n    }\n  }\n);\n  return items;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 754,
        "startLineNumber" : 13,
        "startColumnNumber" : 4,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static List<PlaylistLocalItem> merge(final List<PlaylistMetadataEntry> localPlaylists,final List<PlaylistRemoteEntity> remotePlaylists){\n  final List<PlaylistLocalItem> items=new ArrayList<>(localPlaylists.size() + remotePlaylists.size());\n  items.addAll(localPlaylists);\n  items.addAll(remotePlaylists);\n  Collections.sort(items,(left,right) -> {\n    final String on1=left.getOrderingName();\n    final String on2=right.getOrderingName();\n    if (on1 == null) {\n      return on2 == null ? 0 : 1;\n    }\n else {\n      return on2 == null ? -1 : on1.compareToIgnoreCase(on2);\n    }\n  }\n);\n  return items;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 110,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 21
      },
      "nodeContext" : "return items;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.List<org.schabi.newpipe.database.playlist.PlaylistLocalItem>"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 18,
    "startColumnNumber" : 8,
    "endLineNumber" : 18,
    "endColumnNumber" : 13
  }, {
    "charLength" : 5,
    "startLineNumber" : 19,
    "startColumnNumber" : 8,
    "endLineNumber" : 19,
    "endColumnNumber" : 13
  }, {
    "charLength" : 5,
    "startLineNumber" : 21,
    "startColumnNumber" : 25,
    "endLineNumber" : 21,
    "endColumnNumber" : 30
  }, {
    "charLength" : 5,
    "startLineNumber" : 31,
    "startColumnNumber" : 15,
    "endLineNumber" : 31,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 1
  } ]
}