{
  "id" : 500,
  "expression" : "Opcodes.APUT_WIDE",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/third-party/aosp-dexutils/src/main/java/com/tencent/tinker/android/dx/instruction/InstructionWriter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Opcodes.APUT_WIDE",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 497,
      "startColumnNumber" : 17,
      "endLineNumber" : 497,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 497,
        "startColumnNumber" : 12,
        "endLineNumber" : 497,
        "endColumnNumber" : 35
      },
      "nodeContext" : "case Opcodes.APUT_WIDE:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2841,
        "startLineNumber" : 483,
        "startColumnNumber" : 8,
        "endLineNumber" : 561,
        "endColumnNumber" : 9
      },
      "nodeContext" : "switch (opcode) {\ncase Opcodes.CMPL_FLOAT:case Opcodes.CMPG_FLOAT:case Opcodes.CMPL_DOUBLE:case Opcodes.CMPG_DOUBLE:case Opcodes.CMP_LONG:case Opcodes.AGET:case Opcodes.AGET_WIDE:case Opcodes.AGET_OBJECT:case Opcodes.AGET_BOOLEAN:case Opcodes.AGET_BYTE:case Opcodes.AGET_CHAR:case Opcodes.AGET_SHORT:case Opcodes.APUT:case Opcodes.APUT_WIDE:case Opcodes.APUT_OBJECT:case Opcodes.APUT_BOOLEAN:case Opcodes.APUT_BYTE:case Opcodes.APUT_CHAR:case Opcodes.APUT_SHORT:case Opcodes.ADD_INT:case Opcodes.SUB_INT:case Opcodes.MUL_INT:case Opcodes.DIV_INT:case Opcodes.REM_INT:case Opcodes.AND_INT:case Opcodes.OR_INT:case Opcodes.XOR_INT:case Opcodes.SHL_INT:case Opcodes.SHR_INT:case Opcodes.USHR_INT:case Opcodes.ADD_LONG:case Opcodes.SUB_LONG:case Opcodes.MUL_LONG:case Opcodes.DIV_LONG:case Opcodes.REM_LONG:case Opcodes.AND_LONG:case Opcodes.OR_LONG:case Opcodes.XOR_LONG:case Opcodes.SHL_LONG:case Opcodes.SHR_LONG:case Opcodes.USHR_LONG:case Opcodes.ADD_FLOAT:case Opcodes.SUB_FLOAT:case Opcodes.MUL_FLOAT:case Opcodes.DIV_FLOAT:case Opcodes.REM_FLOAT:case Opcodes.ADD_DOUBLE:case Opcodes.SUB_DOUBLE:case Opcodes.MUL_DOUBLE:case Opcodes.DIV_DOUBLE:case Opcodes.REM_DOUBLE:{\n    codeOut.write(InstructionCodec.codeUnit(opcode,a),InstructionCodec.codeUnit(b,c));\n    break;\n  }\ncase Opcodes.FILLED_NEW_ARRAY:case Opcodes.INVOKE_VIRTUAL:case Opcodes.INVOKE_SUPER:case Opcodes.INVOKE_DIRECT:case Opcodes.INVOKE_STATIC:case Opcodes.INVOKE_INTERFACE:{\n  short indexUnit=(short)index;\n  codeOut.write(InstructionCodec.codeUnit(opcode,InstructionCodec.makeByte(0,3)),indexUnit,InstructionCodec.codeUnit(a,b,c,0));\n  break;\n}\ndefault:{\nthrow new IllegalStateException(\"unexpected opcode: \" + Hex.u2or4(opcode));\n}\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 288,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2857,
        "startLineNumber" : 482,
        "startColumnNumber" : 144,
        "endLineNumber" : 562,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (opcode) {\ncase Opcodes.CMPL_FLOAT:case Opcodes.CMPG_FLOAT:case Opcodes.CMPL_DOUBLE:case Opcodes.CMPG_DOUBLE:case Opcodes.CMP_LONG:case Opcodes.AGET:case Opcodes.AGET_WIDE:case Opcodes.AGET_OBJECT:case Opcodes.AGET_BOOLEAN:case Opcodes.AGET_BYTE:case Opcodes.AGET_CHAR:case Opcodes.AGET_SHORT:case Opcodes.APUT:case Opcodes.APUT_WIDE:case Opcodes.APUT_OBJECT:case Opcodes.APUT_BOOLEAN:case Opcodes.APUT_BYTE:case Opcodes.APUT_CHAR:case Opcodes.APUT_SHORT:case Opcodes.ADD_INT:case Opcodes.SUB_INT:case Opcodes.MUL_INT:case Opcodes.DIV_INT:case Opcodes.REM_INT:case Opcodes.AND_INT:case Opcodes.OR_INT:case Opcodes.XOR_INT:case Opcodes.SHL_INT:case Opcodes.SHR_INT:case Opcodes.USHR_INT:case Opcodes.ADD_LONG:case Opcodes.SUB_LONG:case Opcodes.MUL_LONG:case Opcodes.DIV_LONG:case Opcodes.REM_LONG:case Opcodes.AND_LONG:case Opcodes.OR_LONG:case Opcodes.XOR_LONG:case Opcodes.SHL_LONG:case Opcodes.SHR_LONG:case Opcodes.USHR_LONG:case Opcodes.ADD_FLOAT:case Opcodes.SUB_FLOAT:case Opcodes.MUL_FLOAT:case Opcodes.DIV_FLOAT:case Opcodes.REM_FLOAT:case Opcodes.ADD_DOUBLE:case Opcodes.SUB_DOUBLE:case Opcodes.MUL_DOUBLE:case Opcodes.DIV_DOUBLE:case Opcodes.REM_DOUBLE:{\n      codeOut.write(InstructionCodec.codeUnit(opcode,a),InstructionCodec.codeUnit(b,c));\n      break;\n    }\ncase Opcodes.FILLED_NEW_ARRAY:case Opcodes.INVOKE_VIRTUAL:case Opcodes.INVOKE_SUPER:case Opcodes.INVOKE_DIRECT:case Opcodes.INVOKE_STATIC:case Opcodes.INVOKE_INTERFACE:{\n    short indexUnit=(short)index;\n    codeOut.write(InstructionCodec.codeUnit(opcode,InstructionCodec.makeByte(0,3)),indexUnit,InstructionCodec.codeUnit(a,b,c,0));\n    break;\n  }\ndefault:{\n  throw new IllegalStateException(\"unexpected opcode: \" + Hex.u2or4(opcode));\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 289,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2997,
        "startLineNumber" : 482,
        "startColumnNumber" : 4,
        "endLineNumber" : 562,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void visitThreeRegisterInsn(int currentAddress,int opcode,int index,int indexType,int target,long literal,int a,int b,int c){\nswitch (opcode) {\ncase Opcodes.CMPL_FLOAT:case Opcodes.CMPG_FLOAT:case Opcodes.CMPL_DOUBLE:case Opcodes.CMPG_DOUBLE:case Opcodes.CMP_LONG:case Opcodes.AGET:case Opcodes.AGET_WIDE:case Opcodes.AGET_OBJECT:case Opcodes.AGET_BOOLEAN:case Opcodes.AGET_BYTE:case Opcodes.AGET_CHAR:case Opcodes.AGET_SHORT:case Opcodes.APUT:case Opcodes.APUT_WIDE:case Opcodes.APUT_OBJECT:case Opcodes.APUT_BOOLEAN:case Opcodes.APUT_BYTE:case Opcodes.APUT_CHAR:case Opcodes.APUT_SHORT:case Opcodes.ADD_INT:case Opcodes.SUB_INT:case Opcodes.MUL_INT:case Opcodes.DIV_INT:case Opcodes.REM_INT:case Opcodes.AND_INT:case Opcodes.OR_INT:case Opcodes.XOR_INT:case Opcodes.SHL_INT:case Opcodes.SHR_INT:case Opcodes.USHR_INT:case Opcodes.ADD_LONG:case Opcodes.SUB_LONG:case Opcodes.MUL_LONG:case Opcodes.DIV_LONG:case Opcodes.REM_LONG:case Opcodes.AND_LONG:case Opcodes.OR_LONG:case Opcodes.XOR_LONG:case Opcodes.SHL_LONG:case Opcodes.SHR_LONG:case Opcodes.USHR_LONG:case Opcodes.ADD_FLOAT:case Opcodes.SUB_FLOAT:case Opcodes.MUL_FLOAT:case Opcodes.DIV_FLOAT:case Opcodes.REM_FLOAT:case Opcodes.ADD_DOUBLE:case Opcodes.SUB_DOUBLE:case Opcodes.MUL_DOUBLE:case Opcodes.DIV_DOUBLE:case Opcodes.REM_DOUBLE:{\n      codeOut.write(InstructionCodec.codeUnit(opcode,a),InstructionCodec.codeUnit(b,c));\n      break;\n    }\ncase Opcodes.FILLED_NEW_ARRAY:case Opcodes.INVOKE_VIRTUAL:case Opcodes.INVOKE_SUPER:case Opcodes.INVOKE_DIRECT:case Opcodes.INVOKE_STATIC:case Opcodes.INVOKE_INTERFACE:{\n    short indexUnit=(short)index;\n    codeOut.write(InstructionCodec.codeUnit(opcode,InstructionCodec.makeByte(0,3)),indexUnit,InstructionCodec.codeUnit(a,b,c,0));\n    break;\n  }\ndefault:{\n  throw new IllegalStateException(\"unexpected opcode: \" + Hex.u2or4(opcode));\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 320,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 497,
        "startColumnNumber" : 12,
        "endLineNumber" : 497,
        "endColumnNumber" : 35
      },
      "nodeContext" : "case Opcodes.APUT_WIDE:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 497,
    "startColumnNumber" : 17,
    "endLineNumber" : 497,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}