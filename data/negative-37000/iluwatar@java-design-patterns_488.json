{
  "id" : 488,
  "expression" : "Event::toString",
  "projectName" : "iluwatar@java-design-patterns",
  "commitID" : "428efc7d53449a51d25dfda4141742629ecbb0b2",
  "filePath" : "/event-aggregator/src/test/java/com/iluwatar/event/aggregator/EventTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Event::toString",
    "nodeType" : "ExpressionMethodReference",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 44,
      "startColumnNumber" : 38,
      "endLineNumber" : 44,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 44,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Arrays.stream(Event.values()).map(Event::toString)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 6
      },
      "nodeContext" : "Arrays.stream(Event.values()).map(Event::toString).forEach(toString -> {\n  assertNotNull(toString);\n  assertFalse(toString.trim().isEmpty());\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 7
      },
      "nodeContext" : "Arrays.stream(Event.values()).map(Event::toString).forEach(toString -> {\n  assertNotNull(toString);\n  assertFalse(toString.trim().isEmpty());\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 30,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 43,
        "startColumnNumber" : 29,
        "endLineNumber" : 48,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Arrays.stream(Event.values()).map(Event::toString).forEach(toString -> {\n    assertNotNull(toString);\n    assertFalse(toString.trim().isEmpty());\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 279,
        "startLineNumber" : 39,
        "startColumnNumber" : 2,
        "endLineNumber" : 48,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Verify if every event has a non-null, non-empty description\n */\n@Test public void testToString(){\n  Arrays.stream(Event.values()).map(Event::toString).forEach(toString -> {\n    assertNotNull(toString);\n    assertFalse(toString.trim().isEmpty());\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 38,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 44,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Arrays.stream(Event.values()).map(Event::toString)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.util.function.Function<? super com.iluwatar.event.aggregator.Event,? extends java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 44,
    "startColumnNumber" : 38,
    "endLineNumber" : 44,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ ]
}