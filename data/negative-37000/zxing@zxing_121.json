{
  "id" : 121,
  "expression" : "Integer.MAX_VALUE",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/android/src/com/google/zxing/client/android/camera/CameraConfigurationManager.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Integer.MAX_VALUE",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 167,
      "startColumnNumber" : 15,
      "endLineNumber" : 167,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 167,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 32
      },
      "nodeContext" : "diff=Integer.MAX_VALUE",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 167,
        "startColumnNumber" : 4,
        "endLineNumber" : 167,
        "endColumnNumber" : 33
      },
      "nodeContext" : "int diff=Integer.MAX_VALUE;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2332,
        "startLineNumber" : 137,
        "startColumnNumber" : 95,
        "endLineNumber" : 195,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<Camera.Size> supportedPreviewSizes=parameters.getSupportedPreviewSizes();\n  if (Log.isLoggable(TAG,Log.INFO)) {\n    StringBuilder previewSizesString=new StringBuilder();\n    for (    Camera.Size supportedPreviewSize : supportedPreviewSizes) {\n      previewSizesString.append(supportedPreviewSize.width).append('x').append(supportedPreviewSize.height).append(' ');\n    }\n    Log.i(TAG,\"Supported preview sizes: \" + previewSizesString);\n  }\n  for (  Camera.Size supportedPreviewSize : supportedPreviewSizes) {\n    int realWidth=supportedPreviewSize.width;\n    int realHeight=supportedPreviewSize.height;\n    int pixels=realWidth * realHeight;\n    if (pixels < MIN_PREVIEW_PIXELS || pixels > MAX_PREVIEW_PIXELS) {\n      continue;\n    }\n    boolean isCandidatePortrait=realWidth < realHeight;\n    int maybeFlippedWidth=isCandidatePortrait ? realHeight : realWidth;\n    int maybeFlippedHeight=isCandidatePortrait ? realWidth : realHeight;\n    if (maybeFlippedWidth == screenResolution.x && maybeFlippedHeight == screenResolution.y) {\n      return new Point(realWidth,realHeight);\n    }\n  }\n  Point bestSize=null;\n  int diff=Integer.MAX_VALUE;\n  for (  Camera.Size supportedPreviewSize : supportedPreviewSizes) {\n    int realWidth=supportedPreviewSize.width;\n    int realHeight=supportedPreviewSize.height;\n    int pixels=realWidth * realHeight;\n    if (pixels < MIN_PREVIEW_PIXELS || pixels > MAX_PREVIEW_PIXELS) {\n      continue;\n    }\n    boolean isCandidatePortrait=realWidth < realHeight;\n    int maybeFlippedWidth=isCandidatePortrait ? realHeight : realWidth;\n    int maybeFlippedHeight=isCandidatePortrait ? realWidth : realHeight;\n    int newDiff=Math.abs(screenResolution.x * maybeFlippedHeight - screenResolution.y * maybeFlippedWidth);\n    if (newDiff == 0) {\n      return new Point(realWidth,realHeight);\n    }\n    if (newDiff < diff) {\n      bestSize=new Point(realWidth,realHeight);\n      diff=newDiff;\n    }\n  }\n  if (bestSize == null) {\n    Camera.Size defaultSize=parameters.getPreviewSize();\n    bestSize=new Point(defaultSize.width,defaultSize.height);\n    Log.i(TAG,\"No suitable preview sizes, using default: \" + bestSize);\n  }\n  return bestSize;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 307,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2425,
        "startLineNumber" : 137,
        "startColumnNumber" : 2,
        "endLineNumber" : 195,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private Point findBestPreviewSizeValue(Camera.Parameters parameters,Point screenResolution){\n  List<Camera.Size> supportedPreviewSizes=parameters.getSupportedPreviewSizes();\n  if (Log.isLoggable(TAG,Log.INFO)) {\n    StringBuilder previewSizesString=new StringBuilder();\n    for (    Camera.Size supportedPreviewSize : supportedPreviewSizes) {\n      previewSizesString.append(supportedPreviewSize.width).append('x').append(supportedPreviewSize.height).append(' ');\n    }\n    Log.i(TAG,\"Supported preview sizes: \" + previewSizesString);\n  }\n  for (  Camera.Size supportedPreviewSize : supportedPreviewSizes) {\n    int realWidth=supportedPreviewSize.width;\n    int realHeight=supportedPreviewSize.height;\n    int pixels=realWidth * realHeight;\n    if (pixels < MIN_PREVIEW_PIXELS || pixels > MAX_PREVIEW_PIXELS) {\n      continue;\n    }\n    boolean isCandidatePortrait=realWidth < realHeight;\n    int maybeFlippedWidth=isCandidatePortrait ? realHeight : realWidth;\n    int maybeFlippedHeight=isCandidatePortrait ? realWidth : realHeight;\n    if (maybeFlippedWidth == screenResolution.x && maybeFlippedHeight == screenResolution.y) {\n      return new Point(realWidth,realHeight);\n    }\n  }\n  Point bestSize=null;\n  int diff=Integer.MAX_VALUE;\n  for (  Camera.Size supportedPreviewSize : supportedPreviewSizes) {\n    int realWidth=supportedPreviewSize.width;\n    int realHeight=supportedPreviewSize.height;\n    int pixels=realWidth * realHeight;\n    if (pixels < MIN_PREVIEW_PIXELS || pixels > MAX_PREVIEW_PIXELS) {\n      continue;\n    }\n    boolean isCandidatePortrait=realWidth < realHeight;\n    int maybeFlippedWidth=isCandidatePortrait ? realHeight : realWidth;\n    int maybeFlippedHeight=isCandidatePortrait ? realWidth : realHeight;\n    int newDiff=Math.abs(screenResolution.x * maybeFlippedHeight - screenResolution.y * maybeFlippedWidth);\n    if (newDiff == 0) {\n      return new Point(realWidth,realHeight);\n    }\n    if (newDiff < diff) {\n      bestSize=new Point(realWidth,realHeight);\n      diff=newDiff;\n    }\n  }\n  if (bestSize == null) {\n    Camera.Size defaultSize=parameters.getPreviewSize();\n    bestSize=new Point(defaultSize.width,defaultSize.height);\n    Log.i(TAG,\"No suitable preview sizes, using default: \" + bestSize);\n  }\n  return bestSize;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 322,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 167,
        "startColumnNumber" : 4,
        "endLineNumber" : 167,
        "endColumnNumber" : 33
      },
      "nodeContext" : "int diff=Integer.MAX_VALUE;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 167,
    "startColumnNumber" : 15,
    "endLineNumber" : 167,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}