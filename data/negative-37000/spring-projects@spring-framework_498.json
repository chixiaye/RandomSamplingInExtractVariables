{
  "id" : 498,
  "expression" : "get(\"/path?foo\")",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-webflux/src/test/java/org/springframework/web/reactive/result/condition/ParamsRequestConditionTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "get(\"/path?foo\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 53,
      "startColumnNumber" : 74,
      "endLineNumber" : 53,
      "endColumnNumber" : 90
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 53,
        "startColumnNumber" : 47,
        "endLineNumber" : 53,
        "endColumnNumber" : 91
      },
      "nodeContext" : "MockServerWebExchange.from(get(\"/path?foo\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 53,
        "startColumnNumber" : 16,
        "endLineNumber" : 53,
        "endColumnNumber" : 92
      },
      "nodeContext" : "condition.getMatchingCondition(MockServerWebExchange.from(get(\"/path?foo\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 53,
        "endColumnNumber" : 93
      },
      "nodeContext" : "assertNotNull(condition.getMatchingCondition(MockServerWebExchange.from(get(\"/path?foo\"))))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 53,
        "endColumnNumber" : 94
      },
      "nodeContext" : "assertNotNull(condition.getMatchingCondition(MockServerWebExchange.from(get(\"/path?foo\"))));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 171,
        "startLineNumber" : 51,
        "startColumnNumber" : 54,
        "endLineNumber" : 54,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ParamsRequestCondition condition=new ParamsRequestCondition(\"foo\");\n  assertNotNull(condition.getMatchingCondition(MockServerWebExchange.from(get(\"/path?foo\"))));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 244,
        "startLineNumber" : 50,
        "startColumnNumber" : 1,
        "endLineNumber" : 54,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void paramPresentNullValue() throws Exception {\n  ParamsRequestCondition condition=new ParamsRequestCondition(\"foo\");\n  assertNotNull(condition.getMatchingCondition(MockServerWebExchange.from(get(\"/path?foo\"))));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 30,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 53,
        "endColumnNumber" : 94
      },
      "nodeContext" : "assertNotNull(condition.getMatchingCondition(MockServerWebExchange.from(get(\"/path?foo\"))));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "org.springframework.mock.http.server.reactive.test.MockServerHttpRequest.BaseBuilder<>"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 53,
    "startColumnNumber" : 74,
    "endLineNumber" : 53,
    "endColumnNumber" : 90
  } ],
  "layoutRelationDataList" : [ ]
}