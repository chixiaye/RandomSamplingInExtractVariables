{
  "id" : 200,
  "expression" : "11",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/graphtheory/networkflow/Dinics.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "11",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 128,
      "startColumnNumber" : 12,
      "endLineNumber" : 128,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 14
      },
      "nodeContext" : "n=11",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 128,
        "startColumnNumber" : 4,
        "endLineNumber" : 128,
        "endColumnNumber" : 15
      },
      "nodeContext" : "int n=11;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 798,
        "startLineNumber" : 127,
        "startColumnNumber" : 44,
        "endLineNumber" : 160,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int n=11;\n  int s=n - 1;\n  int t=n - 2;\n  NetworkFlowSolverBase solver;\n  solver=new Dinics(n,s,t);\n  solver.addEdge(s,0,5);\n  solver.addEdge(s,1,10);\n  solver.addEdge(s,2,15);\n  solver.addEdge(0,3,10);\n  solver.addEdge(1,0,15);\n  solver.addEdge(1,4,20);\n  solver.addEdge(2,5,25);\n  solver.addEdge(3,4,25);\n  solver.addEdge(3,6,10);\n  solver.addEdge(3,7,20);\n  solver.addEdge(4,2,5);\n  solver.addEdge(4,7,30);\n  solver.addEdge(5,7,20);\n  solver.addEdge(5,8,10);\n  solver.addEdge(7,8,15);\n  solver.addEdge(6,t,5);\n  solver.addEdge(7,t,15);\n  solver.addEdge(8,t,10);\n  System.out.printf(\"Maximum flow %d\\n\",solver.getMaxFlow());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 840,
        "startLineNumber" : 127,
        "startColumnNumber" : 2,
        "endLineNumber" : 160,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void testGraphFromSlides(){\n  int n=11;\n  int s=n - 1;\n  int t=n - 2;\n  NetworkFlowSolverBase solver;\n  solver=new Dinics(n,s,t);\n  solver.addEdge(s,0,5);\n  solver.addEdge(s,1,10);\n  solver.addEdge(s,2,15);\n  solver.addEdge(0,3,10);\n  solver.addEdge(1,0,15);\n  solver.addEdge(1,4,20);\n  solver.addEdge(2,5,25);\n  solver.addEdge(3,4,25);\n  solver.addEdge(3,6,10);\n  solver.addEdge(3,7,20);\n  solver.addEdge(4,2,5);\n  solver.addEdge(4,7,30);\n  solver.addEdge(5,7,20);\n  solver.addEdge(5,8,10);\n  solver.addEdge(7,8,15);\n  solver.addEdge(6,t,5);\n  solver.addEdge(7,t,15);\n  solver.addEdge(8,t,10);\n  System.out.printf(\"Maximum flow %d\\n\",solver.getMaxFlow());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 175,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 128,
        "startColumnNumber" : 4,
        "endLineNumber" : 128,
        "endColumnNumber" : 15
      },
      "nodeContext" : "int n=11;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 128,
    "startColumnNumber" : 12,
    "endLineNumber" : 128,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ ]
}