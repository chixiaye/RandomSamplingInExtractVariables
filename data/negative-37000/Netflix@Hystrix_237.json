{
  "id" : 237,
  "expression" : "\"ARG : \" + written",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-contrib/hystrix-metrics-event-stream/src/test/java/com/netflix/hystrix/contrib/sample/stream/HystrixConfigSseServletTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"ARG : \" + written",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 132,
      "startColumnNumber" : 35,
      "endLineNumber" : 132,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 132,
        "startColumnNumber" : 16,
        "endLineNumber" : 132,
        "endColumnNumber" : 54
      },
      "nodeContext" : "System.out.println(\"ARG : \" + written)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 132,
        "startColumnNumber" : 16,
        "endLineNumber" : 132,
        "endColumnNumber" : 55
      },
      "nodeContext" : "System.out.println(\"ARG : \" + written);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 286,
        "startLineNumber" : 130,
        "startColumnNumber" : 77,
        "endLineNumber" : 138,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String written=(String)invocation.getArguments()[0];\n  System.out.println(\"ARG : \" + written);\n  if (!written.contains(\"ping\")) {\n    writes.incrementAndGet();\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 373,
        "startLineNumber" : 129,
        "startColumnNumber" : 12,
        "endLineNumber" : 138,
        "endColumnNumber" : 13
      },
      "nodeContext" : "@Override public Void answer(InvocationOnMock invocation) throws Throwable {\n  String written=(String)invocation.getArguments()[0];\n  System.out.println(\"ARG : \" + written);\n  if (!written.contains(\"ping\")) {\n    writes.incrementAndGet();\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 49,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 132,
        "startColumnNumber" : 16,
        "endLineNumber" : 132,
        "endColumnNumber" : 55
      },
      "nodeContext" : "System.out.println(\"ARG : \" + written);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"ARG : \" + written",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 194,
      "startColumnNumber" : 35,
      "endLineNumber" : 194,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 194,
        "startColumnNumber" : 16,
        "endLineNumber" : 194,
        "endColumnNumber" : 54
      },
      "nodeContext" : "System.out.println(\"ARG : \" + written)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 194,
        "startColumnNumber" : 16,
        "endLineNumber" : 194,
        "endColumnNumber" : 55
      },
      "nodeContext" : "System.out.println(\"ARG : \" + written);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 286,
        "startLineNumber" : 192,
        "startColumnNumber" : 77,
        "endLineNumber" : 200,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String written=(String)invocation.getArguments()[0];\n  System.out.println(\"ARG : \" + written);\n  if (!written.contains(\"ping\")) {\n    writes.incrementAndGet();\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 373,
        "startLineNumber" : 191,
        "startColumnNumber" : 12,
        "endLineNumber" : 200,
        "endColumnNumber" : 13
      },
      "nodeContext" : "@Override public Void answer(InvocationOnMock invocation) throws Throwable {\n  String written=(String)invocation.getArguments()[0];\n  System.out.println(\"ARG : \" + written);\n  if (!written.contains(\"ping\")) {\n    writes.incrementAndGet();\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 49,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 194,
        "startColumnNumber" : 16,
        "endLineNumber" : 194,
        "endColumnNumber" : 55
      },
      "nodeContext" : "System.out.println(\"ARG : \" + written);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"ARG : \" + written",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 247,
      "startColumnNumber" : 35,
      "endLineNumber" : 247,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 247,
        "startColumnNumber" : 16,
        "endLineNumber" : 247,
        "endColumnNumber" : 54
      },
      "nodeContext" : "System.out.println(\"ARG : \" + written)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 247,
        "startColumnNumber" : 16,
        "endLineNumber" : 247,
        "endColumnNumber" : 55
      },
      "nodeContext" : "System.out.println(\"ARG : \" + written);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 286,
        "startLineNumber" : 245,
        "startColumnNumber" : 77,
        "endLineNumber" : 253,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String written=(String)invocation.getArguments()[0];\n  System.out.println(\"ARG : \" + written);\n  if (!written.contains(\"ping\")) {\n    writes.incrementAndGet();\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 373,
        "startLineNumber" : 244,
        "startColumnNumber" : 12,
        "endLineNumber" : 253,
        "endColumnNumber" : 13
      },
      "nodeContext" : "@Override public Void answer(InvocationOnMock invocation) throws Throwable {\n  String written=(String)invocation.getArguments()[0];\n  System.out.println(\"ARG : \" + written);\n  if (!written.contains(\"ping\")) {\n    writes.incrementAndGet();\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 49,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 247,
        "startColumnNumber" : 16,
        "endLineNumber" : 247,
        "endColumnNumber" : 55
      },
      "nodeContext" : "System.out.println(\"ARG : \" + written);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 132,
    "startColumnNumber" : 35,
    "endLineNumber" : 132,
    "endColumnNumber" : 53
  }, {
    "charLength" : 18,
    "startLineNumber" : 194,
    "startColumnNumber" : 35,
    "endLineNumber" : 194,
    "endColumnNumber" : 53
  }, {
    "charLength" : 18,
    "startLineNumber" : 247,
    "startColumnNumber" : 35,
    "endLineNumber" : 247,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : -1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : -1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : -1
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : -1
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : -1
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : -1
  } ]
}