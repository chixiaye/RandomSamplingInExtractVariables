{
  "id" : 172,
  "expression" : "strInstant",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/test/java/io/vertx/test/core/JsonArrayTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "strInstant",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 855,
      "startColumnNumber" : 79,
      "endLineNumber" : 855,
      "endColumnNumber" : 89
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 855,
        "startColumnNumber" : 18,
        "endLineNumber" : 855,
        "endColumnNumber" : 134
      },
      "nodeContext" : "\"[\\\"foo\\\",123,1234,1.23,2.34,true,\\\"\" + strBytes + \"\\\",\\\"\"+ strInstant+ \"\\\",null,{\\\"foo\\\":\\\"bar\\\"},[\\\"foo\\\",123]]\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 855,
        "startColumnNumber" : 11,
        "endLineNumber" : 855,
        "endColumnNumber" : 134
      },
      "nodeContext" : "json=\"[\\\"foo\\\",123,1234,1.23,2.34,true,\\\"\" + strBytes + \"\\\",\\\"\"+ strInstant+ \"\\\",null,{\\\"foo\\\":\\\"bar\\\"},[\\\"foo\\\",123]]\"",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 855,
        "startColumnNumber" : 4,
        "endLineNumber" : 855,
        "endColumnNumber" : 135
      },
      "nodeContext" : "String json=\"[\\\"foo\\\",123,1234,1.23,2.34,true,\\\"\" + strBytes + \"\\\",\\\"\"+ strInstant+ \"\\\",null,{\\\"foo\\\":\\\"bar\\\"},[\\\"foo\\\",123]]\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1074,
        "startLineNumber" : 850,
        "startColumnNumber" : 27,
        "endLineNumber" : 871,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  byte[] bytes=TestUtils.randomByteArray(10);\n  String strBytes=Base64.getEncoder().encodeToString(bytes);\n  Instant now=Instant.now();\n  String strInstant=ISO_INSTANT.format(now);\n  String json=\"[\\\"foo\\\",123,1234,1.23,2.34,true,\\\"\" + strBytes + \"\\\",\\\"\"+ strInstant+ \"\\\",null,{\\\"foo\\\":\\\"bar\\\"},[\\\"foo\\\",123]]\";\n  JsonArray arr=new JsonArray(json);\n  assertEquals(\"foo\",arr.getString(0));\n  assertEquals(Integer.valueOf(123),arr.getInteger(1));\n  assertEquals(Long.valueOf(1234l),arr.getLong(2));\n  assertEquals(Float.valueOf(1.23f),arr.getFloat(3));\n  assertEquals(Double.valueOf(2.34d),arr.getDouble(4));\n  assertEquals(true,arr.getBoolean(5));\n  assertTrue(TestUtils.byteArraysEqual(bytes,arr.getBinary(6)));\n  assertEquals(now,arr.getInstant(7));\n  assertTrue(arr.hasNull(8));\n  JsonObject obj=arr.getJsonObject(9);\n  assertEquals(\"bar\",obj.getString(\"foo\"));\n  JsonArray arr2=arr.getJsonArray(10);\n  assertEquals(\"foo\",arr2.getString(0));\n  assertEquals(Integer.valueOf(123),arr2.getInteger(1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 190,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1107,
        "startLineNumber" : 849,
        "startColumnNumber" : 2,
        "endLineNumber" : 871,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testDecode(){\n  byte[] bytes=TestUtils.randomByteArray(10);\n  String strBytes=Base64.getEncoder().encodeToString(bytes);\n  Instant now=Instant.now();\n  String strInstant=ISO_INSTANT.format(now);\n  String json=\"[\\\"foo\\\",123,1234,1.23,2.34,true,\\\"\" + strBytes + \"\\\",\\\"\"+ strInstant+ \"\\\",null,{\\\"foo\\\":\\\"bar\\\"},[\\\"foo\\\",123]]\";\n  JsonArray arr=new JsonArray(json);\n  assertEquals(\"foo\",arr.getString(0));\n  assertEquals(Integer.valueOf(123),arr.getInteger(1));\n  assertEquals(Long.valueOf(1234l),arr.getLong(2));\n  assertEquals(Float.valueOf(1.23f),arr.getFloat(3));\n  assertEquals(Double.valueOf(2.34d),arr.getDouble(4));\n  assertEquals(true,arr.getBoolean(5));\n  assertTrue(TestUtils.byteArraysEqual(bytes,arr.getBinary(6)));\n  assertEquals(now,arr.getInstant(7));\n  assertTrue(arr.hasNull(8));\n  JsonObject obj=arr.getJsonObject(9);\n  assertEquals(\"bar\",obj.getString(\"foo\"));\n  JsonArray arr2=arr.getJsonArray(10);\n  assertEquals(\"foo\",arr2.getString(0));\n  assertEquals(Integer.valueOf(123),arr2.getInteger(1));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 196,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 855,
        "startColumnNumber" : 4,
        "endLineNumber" : 855,
        "endColumnNumber" : 135
      },
      "nodeContext" : "String json=\"[\\\"foo\\\",123,1234,1.23,2.34,true,\\\"\" + strBytes + \"\\\",\\\"\"+ strInstant+ \"\\\",null,{\\\"foo\\\":\\\"bar\\\"},[\\\"foo\\\",123]]\";\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 855,
    "startColumnNumber" : 79,
    "endLineNumber" : 855,
    "endColumnNumber" : 89
  } ],
  "layoutRelationDataList" : [ ]
}