{
  "id" : 344,
  "expression" : "\"nodeHistogramDataSource must not be null\"",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/web/src/main/java/com/navercorp/pinpoint/web/applicationmap/ApplicationMapBuilder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"nodeHistogramDataSource must not be null\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 42,
      "startLineNumber" : 347,
      "startColumnNumber" : 43,
      "endLineNumber" : 347,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 347,
        "startColumnNumber" : 18,
        "endLineNumber" : 347,
        "endColumnNumber" : 86
      },
      "nodeContext" : "new NullPointerException(\"nodeHistogramDataSource must not be null\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 347,
        "startColumnNumber" : 12,
        "endLineNumber" : 347,
        "endColumnNumber" : 87
      },
      "nodeContext" : "throw new NullPointerException(\"nodeHistogramDataSource must not be null\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 346,
        "startColumnNumber" : 45,
        "endLineNumber" : 348,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new NullPointerException(\"nodeHistogramDataSource must not be null\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 346,
        "startColumnNumber" : 8,
        "endLineNumber" : 348,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (nodeHistogramDataSource == null) {\n  throw new NullPointerException(\"nodeHistogramDataSource must not be null\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2461,
        "startLineNumber" : 345,
        "startColumnNumber" : 61,
        "endLineNumber" : 394,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (nodeHistogramDataSource == null) {\n    throw new NullPointerException(\"nodeHistogramDataSource must not be null\");\n  }\n  final Collection<Node> nodes=nodeList.getNodeList();\n  for (  Node node : nodes) {\n    final ServiceType nodeType=node.getServiceType();\n    if (nodeType.isWas()) {\n      final Application wasNode=node.getApplication();\n      final NodeHistogram nodeHistogram=nodeHistogramDataSource.createNodeHistogram(wasNode);\n      node.setNodeHistogram(nodeHistogram);\n    }\n else     if (nodeType.isTerminal() || nodeType.isUnknown()) {\n      final NodeHistogram nodeHistogram=createTerminalNodeHistogram(node,linkList);\n      node.setNodeHistogram(nodeHistogram);\n    }\n else     if (nodeType.isQueue()) {\n      final NodeHistogram nodeHistogram=createTerminalNodeHistogram(node,linkList);\n      node.setNodeHistogram(nodeHistogram);\n    }\n else     if (nodeType.isUser()) {\n      Application userNode=node.getApplication();\n      final NodeHistogram nodeHistogram=new NodeHistogram(userNode,range);\n      final List<Link> fromLink=linkList.findFromLink(userNode);\n      if (fromLink.size() > 1) {\n        logger.warn(\"Invalid from UserNode:{}\",linkList.getLinkList());\n      }\n else       if (fromLink.isEmpty()) {\n        logger.warn(\"from UserNode not found:{}\",userNode);\n        continue;\n      }\n      final Link sourceLink=fromLink.get(0);\n      nodeHistogram.setApplicationHistogram(sourceLink.getHistogram());\n      ApplicationTimeHistogram histogramData=sourceLink.getTargetApplicationTimeSeriesHistogramData();\n      nodeHistogram.setApplicationTimeHistogram(histogramData);\n      node.setNodeHistogram(nodeHistogram);\n    }\n else {\n      NodeHistogram dummy=new NodeHistogram(node.getApplication(),range);\n      node.setNodeHistogram(dummy);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 229,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2595,
        "startLineNumber" : 344,
        "startColumnNumber" : 4,
        "endLineNumber" : 394,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void appendNodeResponseTime(NodeList nodeList,LinkList linkList,NodeHistogramDataSource nodeHistogramDataSource){\n  if (nodeHistogramDataSource == null) {\n    throw new NullPointerException(\"nodeHistogramDataSource must not be null\");\n  }\n  final Collection<Node> nodes=nodeList.getNodeList();\n  for (  Node node : nodes) {\n    final ServiceType nodeType=node.getServiceType();\n    if (nodeType.isWas()) {\n      final Application wasNode=node.getApplication();\n      final NodeHistogram nodeHistogram=nodeHistogramDataSource.createNodeHistogram(wasNode);\n      node.setNodeHistogram(nodeHistogram);\n    }\n else     if (nodeType.isTerminal() || nodeType.isUnknown()) {\n      final NodeHistogram nodeHistogram=createTerminalNodeHistogram(node,linkList);\n      node.setNodeHistogram(nodeHistogram);\n    }\n else     if (nodeType.isQueue()) {\n      final NodeHistogram nodeHistogram=createTerminalNodeHistogram(node,linkList);\n      node.setNodeHistogram(nodeHistogram);\n    }\n else     if (nodeType.isUser()) {\n      Application userNode=node.getApplication();\n      final NodeHistogram nodeHistogram=new NodeHistogram(userNode,range);\n      final List<Link> fromLink=linkList.findFromLink(userNode);\n      if (fromLink.size() > 1) {\n        logger.warn(\"Invalid from UserNode:{}\",linkList.getLinkList());\n      }\n else       if (fromLink.isEmpty()) {\n        logger.warn(\"from UserNode not found:{}\",userNode);\n        continue;\n      }\n      final Link sourceLink=fromLink.get(0);\n      nodeHistogram.setApplicationHistogram(sourceLink.getHistogram());\n      ApplicationTimeHistogram histogramData=sourceLink.getTargetApplicationTimeSeriesHistogramData();\n      nodeHistogram.setApplicationTimeHistogram(histogramData);\n      node.setNodeHistogram(nodeHistogram);\n    }\n else {\n      NodeHistogram dummy=new NodeHistogram(node.getApplication(),range);\n      node.setNodeHistogram(dummy);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 245,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 347,
        "startColumnNumber" : 12,
        "endLineNumber" : 347,
        "endColumnNumber" : 87
      },
      "nodeContext" : "throw new NullPointerException(\"nodeHistogramDataSource must not be null\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 42,
    "startLineNumber" : 347,
    "startColumnNumber" : 43,
    "endLineNumber" : 347,
    "endColumnNumber" : 85
  } ],
  "layoutRelationDataList" : [ ]
}