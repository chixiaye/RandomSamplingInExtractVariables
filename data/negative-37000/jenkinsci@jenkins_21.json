{
  "id" : 21,
  "expression" : "logastext.contains(\"(\" + AbstractProject.WorkspaceOfflineReason.all_suitable_nodes_are_offline.name() + \")\")",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/test/src/test/java/hudson/model/ProjectTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "logastext.contains(\"(\" + AbstractProject.WorkspaceOfflineReason.all_suitable_nodes_are_offline.name() + \")\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 108,
      "startLineNumber" : 775,
      "startColumnNumber" : 19,
      "endLineNumber" : 775,
      "endColumnNumber" : 127
    },
    "astNodeNumber" : 13,
    "astHeight" : 6,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 775,
        "startColumnNumber" : 8,
        "endLineNumber" : 775,
        "endColumnNumber" : 128
      },
      "nodeContext" : "assertTrue(logastext.contains(\"(\" + AbstractProject.WorkspaceOfflineReason.all_suitable_nodes_are_offline.name() + \")\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 775,
        "startColumnNumber" : 8,
        "endLineNumber" : 775,
        "endColumnNumber" : 129
      },
      "nodeContext" : "assertTrue(logastext.contains(\"(\" + AbstractProject.WorkspaceOfflineReason.all_suitable_nodes_are_offline.name() + \")\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1747,
        "startLineNumber" : 739,
        "startColumnNumber" : 76,
        "endLineNumber" : 777,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertTrue(j.jenkins.clouds.isEmpty());\n  Slave s1=j.createOnlineSlave();\n  FreeStyleProject proj=j.createFreeStyleProject(\"JENKINS-21394-noqueue\");\n  proj.setAssignedLabel(s1.getSelfLabel());\n  RequiresWorkspaceSCM requiresWorkspaceScm=new RequiresWorkspaceSCM(true);\n  proj.setScm(requiresWorkspaceScm);\n  j.buildAndAssertSuccess(proj);\n  Slave s2=j.createSlave();\n  proj.setAssignedLabel(s2.getSelfLabel());\n  requiresWorkspaceScm.hasChange=true;\n  PollingResult pr=proj.poll(j.createTaskListener());\n  assertFalse(pr.hasChanges());\n  SCMTrigger t=new SCMTrigger(\"@daily\",true);\n  t.start(proj,true);\n  proj.addTrigger(t);\n  t.new Runner().run();\n  HtmlPage log=j.createWebClient().getPage(proj,\"scmPollLog\");\n  String logastext=log.asText();\n  assertTrue(logastext.contains(\"(\" + AbstractProject.WorkspaceOfflineReason.all_suitable_nodes_are_offline.name() + \")\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2022,
        "startLineNumber" : 734,
        "startColumnNumber" : 4,
        "endLineNumber" : 777,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Job is restricted, but label can not be provided by any cloud, only normal agents. Then job will not submit, because no slave is available.\n * @throws Exception\n */\n@Test public void testUnrestrictedJobNoLabelByCloudNoQueue() throws Exception {\n  assertTrue(j.jenkins.clouds.isEmpty());\n  Slave s1=j.createOnlineSlave();\n  FreeStyleProject proj=j.createFreeStyleProject(\"JENKINS-21394-noqueue\");\n  proj.setAssignedLabel(s1.getSelfLabel());\n  RequiresWorkspaceSCM requiresWorkspaceScm=new RequiresWorkspaceSCM(true);\n  proj.setScm(requiresWorkspaceScm);\n  j.buildAndAssertSuccess(proj);\n  Slave s2=j.createSlave();\n  proj.setAssignedLabel(s2.getSelfLabel());\n  requiresWorkspaceScm.hasChange=true;\n  PollingResult pr=proj.poll(j.createTaskListener());\n  assertFalse(pr.hasChanges());\n  SCMTrigger t=new SCMTrigger(\"@daily\",true);\n  t.start(proj,true);\n  proj.addTrigger(t);\n  t.new Runner().run();\n  HtmlPage log=j.createWebClient().getPage(proj,\"scmPollLog\");\n  String logastext=log.asText();\n  assertTrue(logastext.contains(\"(\" + AbstractProject.WorkspaceOfflineReason.all_suitable_nodes_are_offline.name() + \")\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 165,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 775,
        "startColumnNumber" : 8,
        "endLineNumber" : 775,
        "endColumnNumber" : 129
      },
      "nodeContext" : "assertTrue(logastext.contains(\"(\" + AbstractProject.WorkspaceOfflineReason.all_suitable_nodes_are_offline.name() + \")\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 8
    },
    "tokenLength" : 12,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 108,
    "startLineNumber" : 775,
    "startColumnNumber" : 19,
    "endLineNumber" : 775,
    "endColumnNumber" : 127
  } ],
  "layoutRelationDataList" : [ ]
}