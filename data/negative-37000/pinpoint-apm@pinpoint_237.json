{
  "id" : 237,
  "expression" : "buf.length",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/thrift/src/main/java/com/navercorp/pinpoint/thrift/io/UnsafeByteArrayOutputStream.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "buf.length",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 68,
      "startColumnNumber" : 44,
      "endLineNumber" : 68,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 68,
        "startColumnNumber" : 44,
        "endLineNumber" : 68,
        "endColumnNumber" : 59
      },
      "nodeContext" : "buf.length << 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 68,
        "startColumnNumber" : 35,
        "endLineNumber" : 68,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Math.max(buf.length << 1,newcount)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 68,
        "startColumnNumber" : 16,
        "endLineNumber" : 68,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Arrays.copyOf(buf,Math.max(buf.length << 1,newcount))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 68,
        "startColumnNumber" : 10,
        "endLineNumber" : 68,
        "endColumnNumber" : 71
      },
      "nodeContext" : "buf=Arrays.copyOf(buf,Math.max(buf.length << 1,newcount))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 68,
        "startColumnNumber" : 10,
        "endLineNumber" : 68,
        "endColumnNumber" : 72
      },
      "nodeContext" : "buf=Arrays.copyOf(buf,Math.max(buf.length << 1,newcount));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 67,
        "startColumnNumber" : 25,
        "endLineNumber" : 69,
        "endColumnNumber" : 10
      },
      "nodeContext" : "{\n  buf=Arrays.copyOf(buf,Math.max(buf.length << 1,newcount));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 246,
        "startLineNumber" : 67,
        "startColumnNumber" : 9,
        "endLineNumber" : 71,
        "endColumnNumber" : 10
      },
      "nodeContext" : "if (autoExpand) {\n  buf=Arrays.copyOf(buf,Math.max(buf.length << 1,newcount));\n}\n else {\n  throw new BufferOverflowException(\"Buffer size cannot exceed \" + buf.length + \". (now:\"+ count+ \", input-size:1\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 267,
        "startLineNumber" : 66,
        "startColumnNumber" : 34,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (autoExpand) {\n    buf=Arrays.copyOf(buf,Math.max(buf.length << 1,newcount));\n  }\n else {\n    throw new BufferOverflowException(\"Buffer size cannot exceed \" + buf.length + \". (now:\"+ count+ \", input-size:1\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 293,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (isOverflow(newcount)) {\n  if (autoExpand) {\n    buf=Arrays.copyOf(buf,Math.max(buf.length << 1,newcount));\n  }\n else {\n    throw new BufferOverflowException(\"Buffer size cannot exceed \" + buf.length + \". (now:\"+ count+ \", input-size:1\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 409,
        "startLineNumber" : 64,
        "startColumnNumber" : 29,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int newcount=count + 1;\n  if (isOverflow(newcount)) {\n    if (autoExpand) {\n      buf=Arrays.copyOf(buf,Math.max(buf.length << 1,newcount));\n    }\n else {\n      throw new BufferOverflowException(\"Buffer size cannot exceed \" + buf.length + \". (now:\"+ count+ \", input-size:1\");\n    }\n  }\n  buf[count]=(byte)b;\n  count=newcount;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Writes the specified byte to this byte array output stream.\n * @param b the byte to be written.\n */\npublic void write(int b){\n  int newcount=count + 1;\n  if (isOverflow(newcount)) {\n    if (autoExpand) {\n      buf=Arrays.copyOf(buf,Math.max(buf.length << 1,newcount));\n    }\n else {\n      throw new BufferOverflowException(\"Buffer size cannot exceed \" + buf.length + \". (now:\"+ count+ \", input-size:1\");\n    }\n  }\n  buf[count]=(byte)b;\n  count=newcount;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 65,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 68,
        "startColumnNumber" : 10,
        "endLineNumber" : 68,
        "endColumnNumber" : 72
      },
      "nodeContext" : "buf=Arrays.copyOf(buf,Math.max(buf.length << 1,newcount));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "buf.length",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 70,
      "startColumnNumber" : 75,
      "endLineNumber" : 70,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 70,
        "startColumnNumber" : 44,
        "endLineNumber" : 70,
        "endColumnNumber" : 124
      },
      "nodeContext" : "\"Buffer size cannot exceed \" + buf.length + \". (now:\"+ count+ \", input-size:1\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 70,
        "startColumnNumber" : 16,
        "endLineNumber" : 70,
        "endColumnNumber" : 125
      },
      "nodeContext" : "new BufferOverflowException(\"Buffer size cannot exceed \" + buf.length + \". (now:\"+ count+ \", input-size:1\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 70,
        "startColumnNumber" : 10,
        "endLineNumber" : 70,
        "endColumnNumber" : 126
      },
      "nodeContext" : "throw new BufferOverflowException(\"Buffer size cannot exceed \" + buf.length + \". (now:\"+ count+ \", input-size:1\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 69,
        "startColumnNumber" : 16,
        "endLineNumber" : 71,
        "endColumnNumber" : 10
      },
      "nodeContext" : "{\n  throw new BufferOverflowException(\"Buffer size cannot exceed \" + buf.length + \". (now:\"+ count+ \", input-size:1\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 246,
        "startLineNumber" : 67,
        "startColumnNumber" : 9,
        "endLineNumber" : 71,
        "endColumnNumber" : 10
      },
      "nodeContext" : "if (autoExpand) {\n  buf=Arrays.copyOf(buf,Math.max(buf.length << 1,newcount));\n}\n else {\n  throw new BufferOverflowException(\"Buffer size cannot exceed \" + buf.length + \". (now:\"+ count+ \", input-size:1\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 267,
        "startLineNumber" : 66,
        "startColumnNumber" : 34,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (autoExpand) {\n    buf=Arrays.copyOf(buf,Math.max(buf.length << 1,newcount));\n  }\n else {\n    throw new BufferOverflowException(\"Buffer size cannot exceed \" + buf.length + \". (now:\"+ count+ \", input-size:1\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 293,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (isOverflow(newcount)) {\n  if (autoExpand) {\n    buf=Arrays.copyOf(buf,Math.max(buf.length << 1,newcount));\n  }\n else {\n    throw new BufferOverflowException(\"Buffer size cannot exceed \" + buf.length + \". (now:\"+ count+ \", input-size:1\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 409,
        "startLineNumber" : 64,
        "startColumnNumber" : 29,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int newcount=count + 1;\n  if (isOverflow(newcount)) {\n    if (autoExpand) {\n      buf=Arrays.copyOf(buf,Math.max(buf.length << 1,newcount));\n    }\n else {\n      throw new BufferOverflowException(\"Buffer size cannot exceed \" + buf.length + \". (now:\"+ count+ \", input-size:1\");\n    }\n  }\n  buf[count]=(byte)b;\n  count=newcount;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Writes the specified byte to this byte array output stream.\n * @param b the byte to be written.\n */\npublic void write(int b){\n  int newcount=count + 1;\n  if (isOverflow(newcount)) {\n    if (autoExpand) {\n      buf=Arrays.copyOf(buf,Math.max(buf.length << 1,newcount));\n    }\n else {\n      throw new BufferOverflowException(\"Buffer size cannot exceed \" + buf.length + \". (now:\"+ count+ \", input-size:1\");\n    }\n  }\n  buf[count]=(byte)b;\n  count=newcount;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 65,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 70,
        "startColumnNumber" : 10,
        "endLineNumber" : 70,
        "endColumnNumber" : 126
      },
      "nodeContext" : "throw new BufferOverflowException(\"Buffer size cannot exceed \" + buf.length + \". (now:\"+ count+ \", input-size:1\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 68,
    "startColumnNumber" : 44,
    "endLineNumber" : 68,
    "endColumnNumber" : 54
  }, {
    "charLength" : 10,
    "startLineNumber" : 70,
    "startColumnNumber" : 75,
    "endLineNumber" : 70,
    "endColumnNumber" : 85
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}