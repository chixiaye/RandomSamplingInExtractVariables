{
  "id" : 288,
  "expression" : "DatabaseNavigatorTreeFilterObjectType.connection",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ui.navigator/src/org/jkiss/dbeaver/ui/navigator/database/DatabaseNavigatorTree.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "DatabaseNavigatorTreeFilterObjectType.connection",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 48,
      "startLineNumber" : 718,
      "startColumnNumber" : 41,
      "endLineNumber" : 718,
      "endColumnNumber" : 89
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 718,
        "startColumnNumber" : 16,
        "endLineNumber" : 718,
        "endColumnNumber" : 89
      },
      "nodeContext" : "getFilterObjectType() == DatabaseNavigatorTreeFilterObjectType.connection",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 717,
        "startColumnNumber" : 17,
        "endLineNumber" : 718,
        "endColumnNumber" : 89
      },
      "nodeContext" : "filterShowConnected || getFilterObjectType() == DatabaseNavigatorTreeFilterObjectType.connection",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 717,
        "startColumnNumber" : 17,
        "endLineNumber" : 719,
        "endColumnNumber" : 54
      },
      "nodeContext" : "filterShowConnected || getFilterObjectType() == DatabaseNavigatorTreeFilterObjectType.connection || (hasPattern && filter.filterFolders())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 717,
        "startColumnNumber" : 16,
        "endLineNumber" : 719,
        "endColumnNumber" : 55
      },
      "nodeContext" : "(filterShowConnected || getFilterObjectType() == DatabaseNavigatorTreeFilterObjectType.connection || (hasPattern && filter.filterFolders()))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 209,
        "startLineNumber" : 717,
        "startColumnNumber" : 16,
        "endLineNumber" : 719,
        "endColumnNumber" : 92
      },
      "nodeContext" : "(filterShowConnected || getFilterObjectType() == DatabaseNavigatorTreeFilterObjectType.connection || (hasPattern && filter.filterFolders())) && element instanceof DBNLocalFolder",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 321,
        "startLineNumber" : 717,
        "startColumnNumber" : 12,
        "endLineNumber" : 722,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((filterShowConnected || getFilterObjectType() == DatabaseNavigatorTreeFilterObjectType.connection || (hasPattern && filter.filterFolders())) && element instanceof DBNLocalFolder) {\n  return hasVisibleConnections(viewer,(DBNLocalFolder)element);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1841,
        "startLineNumber" : 713,
        "startColumnNumber" : 70,
        "endLineNumber" : 753,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (filterShowConnected && element instanceof DBNDataSource && !((DBNDataSource)element).getDataSourceContainer().isConnected()) {\n    return false;\n  }\n  if ((filterShowConnected || getFilterObjectType() == DatabaseNavigatorTreeFilterObjectType.connection || (hasPattern && filter.filterFolders())) && element instanceof DBNLocalFolder) {\n    return hasVisibleConnections(viewer,(DBNLocalFolder)element);\n  }\n  if (!filter.select(element)) {\n    return false;\n  }\n  boolean needToMatch=filter.filterObjectByPattern(element);\n  if (!needToMatch && element instanceof DBNDatabaseNode) {\n    DBSObject object=((DBNDatabaseNode)element).getObject();\nswitch (filterObjectType) {\ncase connection:      needToMatch=(object instanceof DBPDataSourceContainer);\n    break;\ncase container:  needToMatch=object instanceof DBSSchema || object instanceof DBSCatalog;\nbreak;\ndefault:needToMatch=object instanceof DBSEntity || object instanceof DBSProcedure || object instanceof DBSTableIndex|| object instanceof DBSPackage|| object instanceof DBSSequence|| object instanceof DBAUser;\nbreak;\n}\n}\nif (!needToMatch) {\nreturn true;\n}\nreturn super.isLeafMatch(viewer,element);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 159,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1903,
        "startLineNumber" : 713,
        "startColumnNumber" : 8,
        "endLineNumber" : 753,
        "endColumnNumber" : 9
      },
      "nodeContext" : "public boolean isElementVisible(Viewer viewer,Object element){\n  if (filterShowConnected && element instanceof DBNDataSource && !((DBNDataSource)element).getDataSourceContainer().isConnected()) {\n    return false;\n  }\n  if ((filterShowConnected || getFilterObjectType() == DatabaseNavigatorTreeFilterObjectType.connection || (hasPattern && filter.filterFolders())) && element instanceof DBNLocalFolder) {\n    return hasVisibleConnections(viewer,(DBNLocalFolder)element);\n  }\n  if (!filter.select(element)) {\n    return false;\n  }\n  boolean needToMatch=filter.filterObjectByPattern(element);\n  if (!needToMatch && element instanceof DBNDatabaseNode) {\n    DBSObject object=((DBNDatabaseNode)element).getObject();\nswitch (filterObjectType) {\ncase connection:      needToMatch=(object instanceof DBPDataSourceContainer);\n    break;\ncase container:  needToMatch=object instanceof DBSSchema || object instanceof DBSCatalog;\nbreak;\ndefault:needToMatch=object instanceof DBSEntity || object instanceof DBSProcedure || object instanceof DBSTableIndex|| object instanceof DBSPackage|| object instanceof DBSSequence|| object instanceof DBAUser;\nbreak;\n}\n}\nif (!needToMatch) {\nreturn true;\n}\nreturn super.isLeafMatch(viewer,element);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 171,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 718,
        "startColumnNumber" : 16,
        "endLineNumber" : 718,
        "endColumnNumber" : 89
      },
      "nodeContext" : "getFilterObjectType() == DatabaseNavigatorTreeFilterObjectType.connection",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "org.jkiss.dbeaver.ui.navigator.database.DatabaseNavigatorTreeFilterObjectType"
  } ],
  "positionList" : [ {
    "charLength" : 48,
    "startLineNumber" : 718,
    "startColumnNumber" : 41,
    "endLineNumber" : 718,
    "endColumnNumber" : 89
  } ],
  "layoutRelationDataList" : [ ]
}