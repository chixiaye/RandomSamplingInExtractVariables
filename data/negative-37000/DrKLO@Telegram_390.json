{
  "id" : 390,
  "expression" : "originalHeight",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/telegram/messenger/VideoEditedInfo.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "originalHeight",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 247,
      "startColumnNumber" : 133,
      "endLineNumber" : 247,
      "endColumnNumber" : 147
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 221,
        "startLineNumber" : 247,
        "startColumnNumber" : 15,
        "endLineNumber" : 247,
        "endColumnNumber" : 236
      },
      "nodeContext" : "String.format(Locale.US,\"-1_%d_%d_%d_%d_%d_%d_%d_%d_%d_%d_-%s_%s\",startTime,endTime,rotationValue,originalWidth,originalHeight,bitrate,resultWidth,resultHeight,originalDuration,framerate,filters,originalPath)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 229,
        "startLineNumber" : 247,
        "startColumnNumber" : 8,
        "endLineNumber" : 247,
        "endColumnNumber" : 237
      },
      "nodeContext" : "return String.format(Locale.US,\"-1_%d_%d_%d_%d_%d_%d_%d_%d_%d_%d_-%s_%s\",startTime,endTime,rotationValue,originalWidth,originalHeight,bitrate,resultWidth,resultHeight,originalDuration,framerate,filters,originalPath);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 20,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5442,
        "startLineNumber" : 145,
        "startColumnNumber" : 30,
        "endLineNumber" : 248,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String filters;\n  if (avatarStartTime != -1 || filterState != null || paintPath != null || mediaEntities != null && !mediaEntities.isEmpty() || cropState != null) {\n    int len=10;\n    if (filterState != null) {\n      len+=160;\n    }\n    byte[] paintPathBytes;\n    if (paintPath != null) {\n      paintPathBytes=paintPath.getBytes();\n      len+=paintPathBytes.length;\n    }\n else {\n      paintPathBytes=null;\n    }\n    SerializedData serializedData=new SerializedData(len);\n    serializedData.writeInt32(5);\n    serializedData.writeInt64(avatarStartTime);\n    serializedData.writeInt32(originalBitrate);\n    if (filterState != null) {\n      serializedData.writeByte(1);\n      serializedData.writeFloat(filterState.enhanceValue);\n      serializedData.writeFloat(filterState.softenSkinValue);\n      serializedData.writeFloat(filterState.exposureValue);\n      serializedData.writeFloat(filterState.contrastValue);\n      serializedData.writeFloat(filterState.warmthValue);\n      serializedData.writeFloat(filterState.saturationValue);\n      serializedData.writeFloat(filterState.fadeValue);\n      serializedData.writeInt32(filterState.tintShadowsColor);\n      serializedData.writeInt32(filterState.tintHighlightsColor);\n      serializedData.writeFloat(filterState.highlightsValue);\n      serializedData.writeFloat(filterState.shadowsValue);\n      serializedData.writeFloat(filterState.vignetteValue);\n      serializedData.writeFloat(filterState.grainValue);\n      serializedData.writeInt32(filterState.blurType);\n      serializedData.writeFloat(filterState.sharpenValue);\n      serializedData.writeFloat(filterState.blurExcludeSize);\n      if (filterState.blurExcludePoint != null) {\n        serializedData.writeFloat(filterState.blurExcludePoint.x);\n        serializedData.writeFloat(filterState.blurExcludePoint.y);\n      }\n else {\n        serializedData.writeFloat(0);\n        serializedData.writeFloat(0);\n      }\n      serializedData.writeFloat(filterState.blurExcludeBlurSize);\n      serializedData.writeFloat(filterState.blurAngle);\n      for (int a=0; a < 4; a++) {\n        PhotoFilterView.CurvesValue curvesValue;\n        if (a == 0) {\n          curvesValue=filterState.curvesToolValue.luminanceCurve;\n        }\n else         if (a == 1) {\n          curvesValue=filterState.curvesToolValue.redCurve;\n        }\n else         if (a == 2) {\n          curvesValue=filterState.curvesToolValue.greenCurve;\n        }\n else {\n          curvesValue=filterState.curvesToolValue.blueCurve;\n        }\n        serializedData.writeFloat(curvesValue.blacksLevel);\n        serializedData.writeFloat(curvesValue.shadowsLevel);\n        serializedData.writeFloat(curvesValue.midtonesLevel);\n        serializedData.writeFloat(curvesValue.highlightsLevel);\n        serializedData.writeFloat(curvesValue.whitesLevel);\n      }\n    }\n else {\n      serializedData.writeByte(0);\n    }\n    if (paintPathBytes != null) {\n      serializedData.writeByte(1);\n      serializedData.writeByteArray(paintPathBytes);\n    }\n else {\n      serializedData.writeByte(0);\n    }\n    if (mediaEntities != null && !mediaEntities.isEmpty()) {\n      serializedData.writeByte(1);\n      serializedData.writeInt32(mediaEntities.size());\n      for (int a=0, N=mediaEntities.size(); a < N; a++) {\n        mediaEntities.get(a).serializeTo(serializedData);\n      }\n      serializedData.writeByte(isPhoto ? 1 : 0);\n    }\n else {\n      serializedData.writeByte(0);\n    }\n    if (cropState != null) {\n      serializedData.writeByte(1);\n      serializedData.writeFloat(cropState.cropPx);\n      serializedData.writeFloat(cropState.cropPy);\n      serializedData.writeFloat(cropState.cropPw);\n      serializedData.writeFloat(cropState.cropPh);\n      serializedData.writeFloat(cropState.cropScale);\n      serializedData.writeFloat(cropState.cropRotate);\n      serializedData.writeInt32(cropState.transformWidth);\n      serializedData.writeInt32(cropState.transformHeight);\n      serializedData.writeInt32(cropState.transformRotation);\n      serializedData.writeBool(cropState.mirrored);\n    }\n else {\n      serializedData.writeByte(0);\n    }\n    filters=Utilities.bytesToHex(serializedData.toByteArray());\n    serializedData.cleanup();\n  }\n else {\n    filters=\"\";\n  }\n  return String.format(Locale.US,\"-1_%d_%d_%d_%d_%d_%d_%d_%d_%d_%d_-%s_%s\",startTime,endTime,rotationValue,originalWidth,originalHeight,bitrate,resultWidth,resultHeight,originalDuration,framerate,filters,originalPath);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 585,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5468,
        "startLineNumber" : 145,
        "startColumnNumber" : 4,
        "endLineNumber" : 248,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public String getString(){\n  String filters;\n  if (avatarStartTime != -1 || filterState != null || paintPath != null || mediaEntities != null && !mediaEntities.isEmpty() || cropState != null) {\n    int len=10;\n    if (filterState != null) {\n      len+=160;\n    }\n    byte[] paintPathBytes;\n    if (paintPath != null) {\n      paintPathBytes=paintPath.getBytes();\n      len+=paintPathBytes.length;\n    }\n else {\n      paintPathBytes=null;\n    }\n    SerializedData serializedData=new SerializedData(len);\n    serializedData.writeInt32(5);\n    serializedData.writeInt64(avatarStartTime);\n    serializedData.writeInt32(originalBitrate);\n    if (filterState != null) {\n      serializedData.writeByte(1);\n      serializedData.writeFloat(filterState.enhanceValue);\n      serializedData.writeFloat(filterState.softenSkinValue);\n      serializedData.writeFloat(filterState.exposureValue);\n      serializedData.writeFloat(filterState.contrastValue);\n      serializedData.writeFloat(filterState.warmthValue);\n      serializedData.writeFloat(filterState.saturationValue);\n      serializedData.writeFloat(filterState.fadeValue);\n      serializedData.writeInt32(filterState.tintShadowsColor);\n      serializedData.writeInt32(filterState.tintHighlightsColor);\n      serializedData.writeFloat(filterState.highlightsValue);\n      serializedData.writeFloat(filterState.shadowsValue);\n      serializedData.writeFloat(filterState.vignetteValue);\n      serializedData.writeFloat(filterState.grainValue);\n      serializedData.writeInt32(filterState.blurType);\n      serializedData.writeFloat(filterState.sharpenValue);\n      serializedData.writeFloat(filterState.blurExcludeSize);\n      if (filterState.blurExcludePoint != null) {\n        serializedData.writeFloat(filterState.blurExcludePoint.x);\n        serializedData.writeFloat(filterState.blurExcludePoint.y);\n      }\n else {\n        serializedData.writeFloat(0);\n        serializedData.writeFloat(0);\n      }\n      serializedData.writeFloat(filterState.blurExcludeBlurSize);\n      serializedData.writeFloat(filterState.blurAngle);\n      for (int a=0; a < 4; a++) {\n        PhotoFilterView.CurvesValue curvesValue;\n        if (a == 0) {\n          curvesValue=filterState.curvesToolValue.luminanceCurve;\n        }\n else         if (a == 1) {\n          curvesValue=filterState.curvesToolValue.redCurve;\n        }\n else         if (a == 2) {\n          curvesValue=filterState.curvesToolValue.greenCurve;\n        }\n else {\n          curvesValue=filterState.curvesToolValue.blueCurve;\n        }\n        serializedData.writeFloat(curvesValue.blacksLevel);\n        serializedData.writeFloat(curvesValue.shadowsLevel);\n        serializedData.writeFloat(curvesValue.midtonesLevel);\n        serializedData.writeFloat(curvesValue.highlightsLevel);\n        serializedData.writeFloat(curvesValue.whitesLevel);\n      }\n    }\n else {\n      serializedData.writeByte(0);\n    }\n    if (paintPathBytes != null) {\n      serializedData.writeByte(1);\n      serializedData.writeByteArray(paintPathBytes);\n    }\n else {\n      serializedData.writeByte(0);\n    }\n    if (mediaEntities != null && !mediaEntities.isEmpty()) {\n      serializedData.writeByte(1);\n      serializedData.writeInt32(mediaEntities.size());\n      for (int a=0, N=mediaEntities.size(); a < N; a++) {\n        mediaEntities.get(a).serializeTo(serializedData);\n      }\n      serializedData.writeByte(isPhoto ? 1 : 0);\n    }\n else {\n      serializedData.writeByte(0);\n    }\n    if (cropState != null) {\n      serializedData.writeByte(1);\n      serializedData.writeFloat(cropState.cropPx);\n      serializedData.writeFloat(cropState.cropPy);\n      serializedData.writeFloat(cropState.cropPw);\n      serializedData.writeFloat(cropState.cropPh);\n      serializedData.writeFloat(cropState.cropScale);\n      serializedData.writeFloat(cropState.cropRotate);\n      serializedData.writeInt32(cropState.transformWidth);\n      serializedData.writeInt32(cropState.transformHeight);\n      serializedData.writeInt32(cropState.transformRotation);\n      serializedData.writeBool(cropState.mirrored);\n    }\n else {\n      serializedData.writeByte(0);\n    }\n    filters=Utilities.bytesToHex(serializedData.toByteArray());\n    serializedData.cleanup();\n  }\n else {\n    filters=\"\";\n  }\n  return String.format(Locale.US,\"-1_%d_%d_%d_%d_%d_%d_%d_%d_%d_%d_-%s_%s\",startTime,endTime,rotationValue,originalWidth,originalHeight,bitrate,resultWidth,resultHeight,originalDuration,framerate,filters,originalPath);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 590,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 229,
        "startLineNumber" : 247,
        "startColumnNumber" : 8,
        "endLineNumber" : 247,
        "endColumnNumber" : 237
      },
      "nodeContext" : "return String.format(Locale.US,\"-1_%d_%d_%d_%d_%d_%d_%d_%d_%d_%d_-%s_%s\",startTime,endTime,rotationValue,originalWidth,originalHeight,bitrate,resultWidth,resultHeight,originalDuration,framerate,filters,originalPath);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 20,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 247,
    "startColumnNumber" : 133,
    "endLineNumber" : 247,
    "endColumnNumber" : 147
  } ],
  "layoutRelationDataList" : [ ]
}