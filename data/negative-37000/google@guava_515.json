{
  "id" : 515,
  "expression" : "resetOnFinalize",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava-tests/test/com/google/common/io/FileBackedOutputStreamTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "resetOnFinalize",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 49,
      "startColumnNumber" : 75,
      "endLineNumber" : 49,
      "endColumnNumber" : 90
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 49,
        "startColumnNumber" : 33,
        "endLineNumber" : 49,
        "endColumnNumber" : 91
      },
      "nodeContext" : "new FileBackedOutputStream(fileThreshold,resetOnFinalize)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 49,
        "startColumnNumber" : 27,
        "endLineNumber" : 49,
        "endColumnNumber" : 91
      },
      "nodeContext" : "out=new FileBackedOutputStream(fileThreshold,resetOnFinalize)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 92
      },
      "nodeContext" : "FileBackedOutputStream out=new FileBackedOutputStream(fileThreshold,resetOnFinalize);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1048,
        "startLineNumber" : 47,
        "startColumnNumber" : 25,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  byte[] data=newPreFilledByteArray(dataSize);\n  FileBackedOutputStream out=new FileBackedOutputStream(fileThreshold,resetOnFinalize);\n  ByteSource source=out.asByteSource();\n  int chunk1=Math.min(dataSize,fileThreshold);\n  int chunk2=dataSize - chunk1;\n  if (chunk1 > 0) {\n    write(out,data,0,chunk1,singleByte);\n    assertTrue(ByteSource.wrap(data).slice(0,chunk1).contentEquals(source));\n  }\n  File file=out.getFile();\n  assertNull(file);\n  if (chunk2 > 0) {\n    write(out,data,chunk1,chunk2,singleByte);\n    file=out.getFile();\n    assertEquals(dataSize,file.length());\n    assertTrue(file.exists());\n  }\n  out.close();\n  assertTrue(Arrays.equals(data,source.read()));\n  out.reset();\n  if (file != null) {\n    assertFalse(file.exists());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1187,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void testThreshold(int fileThreshold,int dataSize,boolean singleByte,boolean resetOnFinalize) throws IOException {\n  byte[] data=newPreFilledByteArray(dataSize);\n  FileBackedOutputStream out=new FileBackedOutputStream(fileThreshold,resetOnFinalize);\n  ByteSource source=out.asByteSource();\n  int chunk1=Math.min(dataSize,fileThreshold);\n  int chunk2=dataSize - chunk1;\n  if (chunk1 > 0) {\n    write(out,data,0,chunk1,singleByte);\n    assertTrue(ByteSource.wrap(data).slice(0,chunk1).contentEquals(source));\n  }\n  File file=out.getFile();\n  assertNull(file);\n  if (chunk2 > 0) {\n    write(out,data,chunk1,chunk2,singleByte);\n    file=out.getFile();\n    assertEquals(dataSize,file.length());\n    assertTrue(file.exists());\n  }\n  out.close();\n  assertTrue(Arrays.equals(data,source.read()));\n  out.reset();\n  if (file != null) {\n    assertFalse(file.exists());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 162,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 92
      },
      "nodeContext" : "FileBackedOutputStream out=new FileBackedOutputStream(fileThreshold,resetOnFinalize);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 49,
    "startColumnNumber" : 75,
    "endLineNumber" : 49,
    "endColumnNumber" : 90
  } ],
  "layoutRelationDataList" : [ ]
}