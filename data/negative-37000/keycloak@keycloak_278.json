{
  "id" : 278,
  "expression" : "this.session.getProvider(TokenIntrospectionProvider.class,tokenTypeHint)",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/services/src/main/java/org/keycloak/protocol/oidc/endpoints/TokenIntrospectionEndpoint.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this.session.getProvider(TokenIntrospectionProvider.class,tokenTypeHint)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 73,
      "startLineNumber" : 96,
      "startColumnNumber" : 46,
      "endLineNumber" : 96,
      "endColumnNumber" : 119
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 96,
        "startColumnNumber" : 35,
        "endLineNumber" : 96,
        "endColumnNumber" : 119
      },
      "nodeContext" : "provider=this.session.getProvider(TokenIntrospectionProvider.class,tokenTypeHint)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 120
      },
      "nodeContext" : "TokenIntrospectionProvider provider=this.session.getProvider(TokenIntrospectionProvider.class,tokenTypeHint);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1642,
        "startLineNumber" : 73,
        "startColumnNumber" : 33,
        "endLineNumber" : 120,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  event.event(EventType.INTROSPECT_TOKEN);\n  checkSsl();\n  checkRealm();\n  authorizeClient();\n  MultivaluedMap<String,String> formParams=request.getDecodedFormParameters();\n  checkParameterDuplicated(formParams);\n  String tokenTypeHint=formParams.getFirst(PARAM_TOKEN_TYPE_HINT);\n  if (tokenTypeHint == null) {\n    tokenTypeHint=AccessTokenIntrospectionProviderFactory.ACCESS_TOKEN_TYPE;\n  }\n  String token=formParams.getFirst(PARAM_TOKEN);\n  if (token == null) {\n    throw throwErrorResponseException(Errors.INVALID_REQUEST,\"Token not provided.\",Status.BAD_REQUEST);\n  }\n  TokenIntrospectionProvider provider=this.session.getProvider(TokenIntrospectionProvider.class,tokenTypeHint);\n  if (provider == null) {\n    throw throwErrorResponseException(Errors.INVALID_REQUEST,\"Unsupported token type [\" + tokenTypeHint + \"].\",Status.BAD_REQUEST);\n  }\n  try {\n    session.clientPolicy().triggerOnEvent(new TokenIntrospectContext(formParams));\n  }\n catch (  ClientPolicyException cpe) {\n    throw throwErrorResponseException(Errors.INVALID_REQUEST,cpe.getErrorDetail(),Status.BAD_REQUEST);\n  }\n  try {\n    Response response=provider.introspect(token);\n    this.event.success();\n    return response;\n  }\n catch (  ErrorResponseException ere) {\n    throw ere;\n  }\ncatch (  Exception e) {\n    throw throwErrorResponseException(Errors.INVALID_REQUEST,\"Failed to introspect token.\",Status.BAD_REQUEST);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 183,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1694,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 120,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@POST @NoCache public Response introspect(){\n  event.event(EventType.INTROSPECT_TOKEN);\n  checkSsl();\n  checkRealm();\n  authorizeClient();\n  MultivaluedMap<String,String> formParams=request.getDecodedFormParameters();\n  checkParameterDuplicated(formParams);\n  String tokenTypeHint=formParams.getFirst(PARAM_TOKEN_TYPE_HINT);\n  if (tokenTypeHint == null) {\n    tokenTypeHint=AccessTokenIntrospectionProviderFactory.ACCESS_TOKEN_TYPE;\n  }\n  String token=formParams.getFirst(PARAM_TOKEN);\n  if (token == null) {\n    throw throwErrorResponseException(Errors.INVALID_REQUEST,\"Token not provided.\",Status.BAD_REQUEST);\n  }\n  TokenIntrospectionProvider provider=this.session.getProvider(TokenIntrospectionProvider.class,tokenTypeHint);\n  if (provider == null) {\n    throw throwErrorResponseException(Errors.INVALID_REQUEST,\"Unsupported token type [\" + tokenTypeHint + \"].\",Status.BAD_REQUEST);\n  }\n  try {\n    session.clientPolicy().triggerOnEvent(new TokenIntrospectContext(formParams));\n  }\n catch (  ClientPolicyException cpe) {\n    throw throwErrorResponseException(Errors.INVALID_REQUEST,cpe.getErrorDetail(),Status.BAD_REQUEST);\n  }\n  try {\n    Response response=provider.introspect(token);\n    this.event.success();\n    return response;\n  }\n catch (  ErrorResponseException ere) {\n    throw ere;\n  }\ncatch (  Exception e) {\n    throw throwErrorResponseException(Errors.INVALID_REQUEST,\"Failed to introspect token.\",Status.BAD_REQUEST);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 192,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 120
      },
      "nodeContext" : "TokenIntrospectionProvider provider=this.session.getProvider(TokenIntrospectionProvider.class,tokenTypeHint);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "org.keycloak.protocol.oidc.TokenIntrospectionProvider"
  } ],
  "positionList" : [ {
    "charLength" : 73,
    "startLineNumber" : 96,
    "startColumnNumber" : 46,
    "endLineNumber" : 96,
    "endColumnNumber" : 119
  } ],
  "layoutRelationDataList" : [ ]
}