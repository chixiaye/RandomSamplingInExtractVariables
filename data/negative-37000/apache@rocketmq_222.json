{
  "id" : 222,
  "expression" : "result.contains(\"debug\")",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/logging/src/test/java/org/apache/rocketmq/logging/inner/LoggerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "result.contains(\"debug\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 77,
      "startColumnNumber" : 27,
      "endLineNumber" : 77,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 77,
        "startColumnNumber" : 26,
        "endLineNumber" : 77,
        "endColumnNumber" : 51
      },
      "nodeContext" : "!result.contains(\"debug\")",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Assert.assertTrue(!result.contains(\"debug\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Assert.assertTrue(!result.contains(\"debug\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1726,
        "startLineNumber" : 42,
        "startColumnNumber" : 60,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PrintStream out=System.out;\n  ByteArrayOutputStream byteArrayOutputStream=new ByteArrayOutputStream();\n  System.setOut(new PrintStream(byteArrayOutputStream));\n  Appender consoleAppender=LoggingBuilder.newAppenderBuilder().withConsoleAppender(LoggingBuilder.SYSTEM_OUT).withLayout(LoggingBuilder.newLayoutBuilder().withDefaultLayout().build()).build();\n  Logger.getLogger(\"ConsoleLogger\").addAppender(consoleAppender);\n  Logger.getLogger(\"ConsoleLogger\").setLevel(Level.INFO);\n  InternalLogger consoleLogger1=InternalLoggerFactory.getLogger(\"ConsoleLogger\");\n  consoleLogger1.info(\"console info Message\");\n  consoleLogger1.error(\"console error Message\",new RuntimeException());\n  consoleLogger1.debug(\"console debug message\");\n  consoleLogger1.info(\"console {} test\",\"simple\");\n  consoleLogger1.info(\"[WATERMARK] Send Queue Size: {} SlowTimeMills: {}\",1,300);\n  consoleLogger1.info(\"new consumer connected, group: {} {} {} channel: {}\",\"mygroup\",\"orderly\",\"broudcast\",new RuntimeException(\"simple object\"));\n  System.setOut(out);\n  consoleAppender.close();\n  String result=new String(byteArrayOutputStream.toByteArray());\n  System.out.println(result);\n  Assert.assertTrue(result.contains(\"info\"));\n  Assert.assertTrue(result.contains(\"RuntimeException\"));\n  Assert.assertTrue(result.contains(\"WATERMARK\"));\n  Assert.assertTrue(result.contains(\"consumer\"));\n  Assert.assertTrue(result.contains(\"broudcast\"));\n  Assert.assertTrue(result.contains(\"simple test\"));\n  Assert.assertTrue(!result.contains(\"debug\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 203,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1792,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testInnerConsoleLogger() throws IOException {\n  PrintStream out=System.out;\n  ByteArrayOutputStream byteArrayOutputStream=new ByteArrayOutputStream();\n  System.setOut(new PrintStream(byteArrayOutputStream));\n  Appender consoleAppender=LoggingBuilder.newAppenderBuilder().withConsoleAppender(LoggingBuilder.SYSTEM_OUT).withLayout(LoggingBuilder.newLayoutBuilder().withDefaultLayout().build()).build();\n  Logger.getLogger(\"ConsoleLogger\").addAppender(consoleAppender);\n  Logger.getLogger(\"ConsoleLogger\").setLevel(Level.INFO);\n  InternalLogger consoleLogger1=InternalLoggerFactory.getLogger(\"ConsoleLogger\");\n  consoleLogger1.info(\"console info Message\");\n  consoleLogger1.error(\"console error Message\",new RuntimeException());\n  consoleLogger1.debug(\"console debug message\");\n  consoleLogger1.info(\"console {} test\",\"simple\");\n  consoleLogger1.info(\"[WATERMARK] Send Queue Size: {} SlowTimeMills: {}\",1,300);\n  consoleLogger1.info(\"new consumer connected, group: {} {} {} channel: {}\",\"mygroup\",\"orderly\",\"broudcast\",new RuntimeException(\"simple object\"));\n  System.setOut(out);\n  consoleAppender.close();\n  String result=new String(byteArrayOutputStream.toByteArray());\n  System.out.println(result);\n  Assert.assertTrue(result.contains(\"info\"));\n  Assert.assertTrue(result.contains(\"RuntimeException\"));\n  Assert.assertTrue(result.contains(\"WATERMARK\"));\n  Assert.assertTrue(result.contains(\"consumer\"));\n  Assert.assertTrue(result.contains(\"broudcast\"));\n  Assert.assertTrue(result.contains(\"simple test\"));\n  Assert.assertTrue(!result.contains(\"debug\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 211,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Assert.assertTrue(!result.contains(\"debug\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 77,
    "startColumnNumber" : 27,
    "endLineNumber" : 77,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}