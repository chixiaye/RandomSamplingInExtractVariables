{
  "id" : 153,
  "expression" : "nq.map(pixels[k++] & 0xff,pixels[k++] & 0xff,pixels[k++] & 0xff)",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/main/java/cn/hutool/core/img/gif/AnimatedGifEncoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "nq.map(pixels[k++] & 0xff,pixels[k++] & 0xff,pixels[k++] & 0xff)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 82,
      "startLineNumber" : 333,
      "startColumnNumber" : 5,
      "endLineNumber" : 335,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 21,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 332,
        "startColumnNumber" : 7,
        "endLineNumber" : 335,
        "endColumnNumber" : 26
      },
      "nodeContext" : "index=nq.map(pixels[k++] & 0xff,pixels[k++] & 0xff,pixels[k++] & 0xff)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 332,
        "startColumnNumber" : 3,
        "endLineNumber" : 335,
        "endColumnNumber" : 27
      },
      "nodeContext" : "int index=nq.map(pixels[k++] & 0xff,pixels[k++] & 0xff,pixels[k++] & 0xff);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 178,
        "startLineNumber" : 331,
        "startColumnNumber" : 33,
        "endLineNumber" : 338,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int index=nq.map(pixels[k++] & 0xff,pixels[k++] & 0xff,pixels[k++] & 0xff);\n  usedEntry[index]=true;\n  indexedPixels[i]=(byte)index;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 209,
        "startLineNumber" : 331,
        "startColumnNumber" : 2,
        "endLineNumber" : 338,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < nPix; i++) {\n  int index=nq.map(pixels[k++] & 0xff,pixels[k++] & 0xff,pixels[k++] & 0xff);\n  usedEntry[index]=true;\n  indexedPixels[i]=(byte)index;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 51,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 938,
        "startLineNumber" : 315,
        "startColumnNumber" : 32,
        "endLineNumber" : 346,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int len=pixels.length;\n  int nPix=len / 3;\n  indexedPixels=new byte[nPix];\n  NeuQuant nq=new NeuQuant(pixels,len,sample);\n  colorTab=nq.process();\n  for (int i=0; i < colorTab.length; i+=3) {\n    byte temp=colorTab[i];\n    colorTab[i]=colorTab[i + 2];\n    colorTab[i + 2]=temp;\n    usedEntry[i / 3]=false;\n  }\n  int k=0;\n  for (int i=0; i < nPix; i++) {\n    int index=nq.map(pixels[k++] & 0xff,pixels[k++] & 0xff,pixels[k++] & 0xff);\n    usedEntry[index]=true;\n    indexedPixels[i]=(byte)index;\n  }\n  pixels=null;\n  colorDepth=8;\n  palSize=7;\n  if (transparent != null) {\n    transIndex=transparentExactMatch ? findExact(transparent) : findClosest(transparent);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 172,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1031,
        "startLineNumber" : 312,
        "startColumnNumber" : 1,
        "endLineNumber" : 346,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Analyzes image colors and creates color map.\n */\nprotected void analyzePixels(){\n  int len=pixels.length;\n  int nPix=len / 3;\n  indexedPixels=new byte[nPix];\n  NeuQuant nq=new NeuQuant(pixels,len,sample);\n  colorTab=nq.process();\n  for (int i=0; i < colorTab.length; i+=3) {\n    byte temp=colorTab[i];\n    colorTab[i]=colorTab[i + 2];\n    colorTab[i + 2]=temp;\n    usedEntry[i / 3]=false;\n  }\n  int k=0;\n  for (int i=0; i < nPix; i++) {\n    int index=nq.map(pixels[k++] & 0xff,pixels[k++] & 0xff,pixels[k++] & 0xff);\n    usedEntry[index]=true;\n    indexedPixels[i]=(byte)index;\n  }\n  pixels=null;\n  colorDepth=8;\n  palSize=7;\n  if (transparent != null) {\n    transIndex=transparentExactMatch ? findExact(transparent) : findClosest(transparent);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 177,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 332,
        "startColumnNumber" : 7,
        "endLineNumber" : 335,
        "endColumnNumber" : 26
      },
      "nodeContext" : "index=nq.map(pixels[k++] & 0xff,pixels[k++] & 0xff,pixels[k++] & 0xff)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 23,
      "astHeight" : 6
    },
    "tokenLength" : 14,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 82,
    "startLineNumber" : 333,
    "startColumnNumber" : 5,
    "endLineNumber" : 335,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}