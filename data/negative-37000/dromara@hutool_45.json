{
  "id" : 45,
  "expression" : "width",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/main/java/cn/hutool/core/lang/ConsoleTable.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "width",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 89,
      "startColumnNumber" : 7,
      "endLineNumber" : 89,
      "endColumnNumber" : 12
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 89,
        "startColumnNumber" : 7,
        "endLineNumber" : 89,
        "endColumnNumber" : 38
      },
      "nodeContext" : "width > columnCharNumber.get(i)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 89,
        "startColumnNumber" : 3,
        "endLineNumber" : 91,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (width > columnCharNumber.get(i)) {\n  columnCharNumber.set(i,width);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 84,
        "startColumnNumber" : 43,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String column=columns[i];\n  String col=Convert.toSBC(column);\n  l.add(col);\n  int width=col.length();\n  if (width > columnCharNumber.get(i)) {\n    columnCharNumber.set(i,width);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 84,
        "startColumnNumber" : 2,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < columns.length; i++) {\n  String column=columns[i];\n  String col=Convert.toSBC(column);\n  l.add(col);\n  int width=col.length();\n  if (width > columnCharNumber.get(i)) {\n    columnCharNumber.set(i,width);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 57,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 250,
        "startLineNumber" : 83,
        "startColumnNumber" : 60,
        "endLineNumber" : 93,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  for (int i=0; i < columns.length; i++) {\n    String column=columns[i];\n    String col=Convert.toSBC(column);\n    l.add(col);\n    int width=col.length();\n    if (width > columnCharNumber.get(i)) {\n      columnCharNumber.set(i,width);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 385,
        "startLineNumber" : 77,
        "startColumnNumber" : 1,
        "endLineNumber" : 93,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 填充表格头或者体\n * @param l       被填充列表\n * @param columns 填充内容\n */\nprivate void fillColumns(List<String> l,String[] columns){\n  for (int i=0; i < columns.length; i++) {\n    String column=columns[i];\n    String col=Convert.toSBC(column);\n    l.add(col);\n    int width=col.length();\n    if (width > columnCharNumber.get(i)) {\n      columnCharNumber.set(i,width);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 76,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 89,
        "startColumnNumber" : 7,
        "endLineNumber" : 89,
        "endColumnNumber" : 38
      },
      "nodeContext" : "width > columnCharNumber.get(i)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "width",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 90,
      "startColumnNumber" : 28,
      "endLineNumber" : 90,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 34
      },
      "nodeContext" : "columnCharNumber.set(i,width)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 35
      },
      "nodeContext" : "columnCharNumber.set(i,width);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 89,
        "startColumnNumber" : 40,
        "endLineNumber" : 91,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  columnCharNumber.set(i,width);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 89,
        "startColumnNumber" : 3,
        "endLineNumber" : 91,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (width > columnCharNumber.get(i)) {\n  columnCharNumber.set(i,width);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 84,
        "startColumnNumber" : 43,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String column=columns[i];\n  String col=Convert.toSBC(column);\n  l.add(col);\n  int width=col.length();\n  if (width > columnCharNumber.get(i)) {\n    columnCharNumber.set(i,width);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 84,
        "startColumnNumber" : 2,
        "endLineNumber" : 92,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < columns.length; i++) {\n  String column=columns[i];\n  String col=Convert.toSBC(column);\n  l.add(col);\n  int width=col.length();\n  if (width > columnCharNumber.get(i)) {\n    columnCharNumber.set(i,width);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 57,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 250,
        "startLineNumber" : 83,
        "startColumnNumber" : 60,
        "endLineNumber" : 93,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  for (int i=0; i < columns.length; i++) {\n    String column=columns[i];\n    String col=Convert.toSBC(column);\n    l.add(col);\n    int width=col.length();\n    if (width > columnCharNumber.get(i)) {\n      columnCharNumber.set(i,width);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 385,
        "startLineNumber" : 77,
        "startColumnNumber" : 1,
        "endLineNumber" : 93,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 填充表格头或者体\n * @param l       被填充列表\n * @param columns 填充内容\n */\nprivate void fillColumns(List<String> l,String[] columns){\n  for (int i=0; i < columns.length; i++) {\n    String column=columns[i];\n    String col=Convert.toSBC(column);\n    l.add(col);\n    int width=col.length();\n    if (width > columnCharNumber.get(i)) {\n      columnCharNumber.set(i,width);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 76,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 35
      },
      "nodeContext" : "columnCharNumber.set(i,width);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 89,
    "startColumnNumber" : 7,
    "endLineNumber" : 89,
    "endColumnNumber" : 12
  }, {
    "charLength" : 5,
    "startLineNumber" : 90,
    "startColumnNumber" : 28,
    "endLineNumber" : 90,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}