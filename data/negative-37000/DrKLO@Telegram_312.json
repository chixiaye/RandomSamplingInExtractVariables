{
  "id" : 312,
  "expression" : "i * segmentWidth",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/telegram/ui/Components/PhotoFilterCurvesControl.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i * segmentWidth",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 252,
      "startColumnNumber" : 58,
      "endLineNumber" : 252,
      "endColumnNumber" : 74
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 252,
        "startColumnNumber" : 28,
        "endLineNumber" : 252,
        "endColumnNumber" : 74
      },
      "nodeContext" : "actualArea.x + segmentWidth + i * segmentWidth",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 166,
        "startLineNumber" : 252,
        "startColumnNumber" : 12,
        "endLineNumber" : 252,
        "endColumnNumber" : 178
      },
      "nodeContext" : "canvas.drawLine(actualArea.x + segmentWidth + i * segmentWidth,actualArea.y,actualArea.x + segmentWidth + i * segmentWidth,actualArea.y + actualArea.height,paint)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 30,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 252,
        "startColumnNumber" : 12,
        "endLineNumber" : 252,
        "endColumnNumber" : 179
      },
      "nodeContext" : "canvas.drawLine(actualArea.x + segmentWidth + i * segmentWidth,actualArea.y,actualArea.x + segmentWidth + i * segmentWidth,actualArea.y + actualArea.height,paint);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 31,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 191,
        "startLineNumber" : 251,
        "startColumnNumber" : 36,
        "endLineNumber" : 253,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  canvas.drawLine(actualArea.x + segmentWidth + i * segmentWidth,actualArea.y,actualArea.x + segmentWidth + i * segmentWidth,actualArea.y + actualArea.height,paint);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 219,
        "startLineNumber" : 251,
        "startColumnNumber" : 8,
        "endLineNumber" : 253,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 4; i++) {\n  canvas.drawLine(actualArea.x + segmentWidth + i * segmentWidth,actualArea.y,actualArea.x + segmentWidth + i * segmentWidth,actualArea.y + actualArea.height,paint);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 43,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3043,
        "startLineNumber" : 248,
        "startColumnNumber" : 41,
        "endLineNumber" : 321,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  float segmentWidth=actualArea.width / 5.0f;\n  for (int i=0; i < 4; i++) {\n    canvas.drawLine(actualArea.x + segmentWidth + i * segmentWidth,actualArea.y,actualArea.x + segmentWidth + i * segmentWidth,actualArea.y + actualArea.height,paint);\n  }\n  canvas.drawLine(actualArea.x,actualArea.y + actualArea.height,actualArea.x + actualArea.width,actualArea.y,paintDash);\n  PhotoFilterView.CurvesValue curvesValue=null;\nswitch (curveValue.activeType) {\ncase PhotoFilterView.CurvesToolValue.CurvesTypeLuminance:    paintCurve.setColor(0xffffffff);\n  curvesValue=curveValue.luminanceCurve;\nbreak;\ncase PhotoFilterView.CurvesToolValue.CurvesTypeRed:paintCurve.setColor(0xffed3d4c);\ncurvesValue=curveValue.redCurve;\nbreak;\ncase PhotoFilterView.CurvesToolValue.CurvesTypeGreen:paintCurve.setColor(0xff10ee9d);\ncurvesValue=curveValue.greenCurve;\nbreak;\ncase PhotoFilterView.CurvesToolValue.CurvesTypeBlue:paintCurve.setColor(0xff3377fb);\ncurvesValue=curveValue.blueCurve;\nbreak;\ndefault:break;\n}\nfor (int a=0; a < 5; a++) {\nString str;\nswitch (a) {\ncase 0:str=String.format(Locale.US,\"%.2f\",curvesValue.blacksLevel / 100.0f);\nbreak;\ncase 1:str=String.format(Locale.US,\"%.2f\",curvesValue.shadowsLevel / 100.0f);\nbreak;\ncase 2:str=String.format(Locale.US,\"%.2f\",curvesValue.midtonesLevel / 100.0f);\nbreak;\ncase 3:str=String.format(Locale.US,\"%.2f\",curvesValue.highlightsLevel / 100.0f);\nbreak;\ncase 4:str=String.format(Locale.US,\"%.2f\",curvesValue.whitesLevel / 100.0f);\nbreak;\ndefault:str=\"\";\nbreak;\n}\nfloat width=textPaint.measureText(str);\ncanvas.drawText(str,actualArea.x + (segmentWidth - width) / 2 + segmentWidth * a,actualArea.y + actualArea.height - AndroidUtilities.dp(4),textPaint);\n}\nfloat[] points=curvesValue.interpolateCurve();\ninvalidate();\npath.reset();\nfor (int a=0; a < points.length / 2; a++) {\nif (a == 0) {\npath.moveTo(actualArea.x + points[a * 2] * actualArea.width,actualArea.y + (1.0f - points[a * 2 + 1]) * actualArea.height);\n}\n else {\npath.lineTo(actualArea.x + points[a * 2] * actualArea.width,actualArea.y + (1.0f - points[a * 2 + 1]) * actualArea.height);\n}\n}\ncanvas.drawPath(path,paintCurve);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 433,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3130,
        "startLineNumber" : 246,
        "startColumnNumber" : 4,
        "endLineNumber" : 321,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressLint(\"DrawAllocation\") @Override protected void onDraw(Canvas canvas){\n  float segmentWidth=actualArea.width / 5.0f;\n  for (int i=0; i < 4; i++) {\n    canvas.drawLine(actualArea.x + segmentWidth + i * segmentWidth,actualArea.y,actualArea.x + segmentWidth + i * segmentWidth,actualArea.y + actualArea.height,paint);\n  }\n  canvas.drawLine(actualArea.x,actualArea.y + actualArea.height,actualArea.x + actualArea.width,actualArea.y,paintDash);\n  PhotoFilterView.CurvesValue curvesValue=null;\nswitch (curveValue.activeType) {\ncase PhotoFilterView.CurvesToolValue.CurvesTypeLuminance:    paintCurve.setColor(0xffffffff);\n  curvesValue=curveValue.luminanceCurve;\nbreak;\ncase PhotoFilterView.CurvesToolValue.CurvesTypeRed:paintCurve.setColor(0xffed3d4c);\ncurvesValue=curveValue.redCurve;\nbreak;\ncase PhotoFilterView.CurvesToolValue.CurvesTypeGreen:paintCurve.setColor(0xff10ee9d);\ncurvesValue=curveValue.greenCurve;\nbreak;\ncase PhotoFilterView.CurvesToolValue.CurvesTypeBlue:paintCurve.setColor(0xff3377fb);\ncurvesValue=curveValue.blueCurve;\nbreak;\ndefault:break;\n}\nfor (int a=0; a < 5; a++) {\nString str;\nswitch (a) {\ncase 0:str=String.format(Locale.US,\"%.2f\",curvesValue.blacksLevel / 100.0f);\nbreak;\ncase 1:str=String.format(Locale.US,\"%.2f\",curvesValue.shadowsLevel / 100.0f);\nbreak;\ncase 2:str=String.format(Locale.US,\"%.2f\",curvesValue.midtonesLevel / 100.0f);\nbreak;\ncase 3:str=String.format(Locale.US,\"%.2f\",curvesValue.highlightsLevel / 100.0f);\nbreak;\ncase 4:str=String.format(Locale.US,\"%.2f\",curvesValue.whitesLevel / 100.0f);\nbreak;\ndefault:str=\"\";\nbreak;\n}\nfloat width=textPaint.measureText(str);\ncanvas.drawText(str,actualArea.x + (segmentWidth - width) / 2 + segmentWidth * a,actualArea.y + actualArea.height - AndroidUtilities.dp(4),textPaint);\n}\nfloat[] points=curvesValue.interpolateCurve();\ninvalidate();\npath.reset();\nfor (int a=0; a < points.length / 2; a++) {\nif (a == 0) {\npath.moveTo(actualArea.x + points[a * 2] * actualArea.width,actualArea.y + (1.0f - points[a * 2 + 1]) * actualArea.height);\n}\n else {\npath.lineTo(actualArea.x + points[a * 2] * actualArea.width,actualArea.y + (1.0f - points[a * 2 + 1]) * actualArea.height);\n}\n}\ncanvas.drawPath(path,paintCurve);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 446,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 252,
        "startColumnNumber" : 12,
        "endLineNumber" : 252,
        "endColumnNumber" : 179
      },
      "nodeContext" : "canvas.drawLine(actualArea.x + segmentWidth + i * segmentWidth,actualArea.y,actualArea.x + segmentWidth + i * segmentWidth,actualArea.y + actualArea.height,paint);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 31,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "float"
  }, {
    "nodeContext" : "i * segmentWidth",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 252,
      "startColumnNumber" : 120,
      "endLineNumber" : 252,
      "endColumnNumber" : 136
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 252,
        "startColumnNumber" : 90,
        "endLineNumber" : 252,
        "endColumnNumber" : 136
      },
      "nodeContext" : "actualArea.x + segmentWidth + i * segmentWidth",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 166,
        "startLineNumber" : 252,
        "startColumnNumber" : 12,
        "endLineNumber" : 252,
        "endColumnNumber" : 178
      },
      "nodeContext" : "canvas.drawLine(actualArea.x + segmentWidth + i * segmentWidth,actualArea.y,actualArea.x + segmentWidth + i * segmentWidth,actualArea.y + actualArea.height,paint)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 30,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 252,
        "startColumnNumber" : 12,
        "endLineNumber" : 252,
        "endColumnNumber" : 179
      },
      "nodeContext" : "canvas.drawLine(actualArea.x + segmentWidth + i * segmentWidth,actualArea.y,actualArea.x + segmentWidth + i * segmentWidth,actualArea.y + actualArea.height,paint);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 31,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 191,
        "startLineNumber" : 251,
        "startColumnNumber" : 36,
        "endLineNumber" : 253,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  canvas.drawLine(actualArea.x + segmentWidth + i * segmentWidth,actualArea.y,actualArea.x + segmentWidth + i * segmentWidth,actualArea.y + actualArea.height,paint);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 219,
        "startLineNumber" : 251,
        "startColumnNumber" : 8,
        "endLineNumber" : 253,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 4; i++) {\n  canvas.drawLine(actualArea.x + segmentWidth + i * segmentWidth,actualArea.y,actualArea.x + segmentWidth + i * segmentWidth,actualArea.y + actualArea.height,paint);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 43,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3043,
        "startLineNumber" : 248,
        "startColumnNumber" : 41,
        "endLineNumber" : 321,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  float segmentWidth=actualArea.width / 5.0f;\n  for (int i=0; i < 4; i++) {\n    canvas.drawLine(actualArea.x + segmentWidth + i * segmentWidth,actualArea.y,actualArea.x + segmentWidth + i * segmentWidth,actualArea.y + actualArea.height,paint);\n  }\n  canvas.drawLine(actualArea.x,actualArea.y + actualArea.height,actualArea.x + actualArea.width,actualArea.y,paintDash);\n  PhotoFilterView.CurvesValue curvesValue=null;\nswitch (curveValue.activeType) {\ncase PhotoFilterView.CurvesToolValue.CurvesTypeLuminance:    paintCurve.setColor(0xffffffff);\n  curvesValue=curveValue.luminanceCurve;\nbreak;\ncase PhotoFilterView.CurvesToolValue.CurvesTypeRed:paintCurve.setColor(0xffed3d4c);\ncurvesValue=curveValue.redCurve;\nbreak;\ncase PhotoFilterView.CurvesToolValue.CurvesTypeGreen:paintCurve.setColor(0xff10ee9d);\ncurvesValue=curveValue.greenCurve;\nbreak;\ncase PhotoFilterView.CurvesToolValue.CurvesTypeBlue:paintCurve.setColor(0xff3377fb);\ncurvesValue=curveValue.blueCurve;\nbreak;\ndefault:break;\n}\nfor (int a=0; a < 5; a++) {\nString str;\nswitch (a) {\ncase 0:str=String.format(Locale.US,\"%.2f\",curvesValue.blacksLevel / 100.0f);\nbreak;\ncase 1:str=String.format(Locale.US,\"%.2f\",curvesValue.shadowsLevel / 100.0f);\nbreak;\ncase 2:str=String.format(Locale.US,\"%.2f\",curvesValue.midtonesLevel / 100.0f);\nbreak;\ncase 3:str=String.format(Locale.US,\"%.2f\",curvesValue.highlightsLevel / 100.0f);\nbreak;\ncase 4:str=String.format(Locale.US,\"%.2f\",curvesValue.whitesLevel / 100.0f);\nbreak;\ndefault:str=\"\";\nbreak;\n}\nfloat width=textPaint.measureText(str);\ncanvas.drawText(str,actualArea.x + (segmentWidth - width) / 2 + segmentWidth * a,actualArea.y + actualArea.height - AndroidUtilities.dp(4),textPaint);\n}\nfloat[] points=curvesValue.interpolateCurve();\ninvalidate();\npath.reset();\nfor (int a=0; a < points.length / 2; a++) {\nif (a == 0) {\npath.moveTo(actualArea.x + points[a * 2] * actualArea.width,actualArea.y + (1.0f - points[a * 2 + 1]) * actualArea.height);\n}\n else {\npath.lineTo(actualArea.x + points[a * 2] * actualArea.width,actualArea.y + (1.0f - points[a * 2 + 1]) * actualArea.height);\n}\n}\ncanvas.drawPath(path,paintCurve);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 433,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3130,
        "startLineNumber" : 246,
        "startColumnNumber" : 4,
        "endLineNumber" : 321,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressLint(\"DrawAllocation\") @Override protected void onDraw(Canvas canvas){\n  float segmentWidth=actualArea.width / 5.0f;\n  for (int i=0; i < 4; i++) {\n    canvas.drawLine(actualArea.x + segmentWidth + i * segmentWidth,actualArea.y,actualArea.x + segmentWidth + i * segmentWidth,actualArea.y + actualArea.height,paint);\n  }\n  canvas.drawLine(actualArea.x,actualArea.y + actualArea.height,actualArea.x + actualArea.width,actualArea.y,paintDash);\n  PhotoFilterView.CurvesValue curvesValue=null;\nswitch (curveValue.activeType) {\ncase PhotoFilterView.CurvesToolValue.CurvesTypeLuminance:    paintCurve.setColor(0xffffffff);\n  curvesValue=curveValue.luminanceCurve;\nbreak;\ncase PhotoFilterView.CurvesToolValue.CurvesTypeRed:paintCurve.setColor(0xffed3d4c);\ncurvesValue=curveValue.redCurve;\nbreak;\ncase PhotoFilterView.CurvesToolValue.CurvesTypeGreen:paintCurve.setColor(0xff10ee9d);\ncurvesValue=curveValue.greenCurve;\nbreak;\ncase PhotoFilterView.CurvesToolValue.CurvesTypeBlue:paintCurve.setColor(0xff3377fb);\ncurvesValue=curveValue.blueCurve;\nbreak;\ndefault:break;\n}\nfor (int a=0; a < 5; a++) {\nString str;\nswitch (a) {\ncase 0:str=String.format(Locale.US,\"%.2f\",curvesValue.blacksLevel / 100.0f);\nbreak;\ncase 1:str=String.format(Locale.US,\"%.2f\",curvesValue.shadowsLevel / 100.0f);\nbreak;\ncase 2:str=String.format(Locale.US,\"%.2f\",curvesValue.midtonesLevel / 100.0f);\nbreak;\ncase 3:str=String.format(Locale.US,\"%.2f\",curvesValue.highlightsLevel / 100.0f);\nbreak;\ncase 4:str=String.format(Locale.US,\"%.2f\",curvesValue.whitesLevel / 100.0f);\nbreak;\ndefault:str=\"\";\nbreak;\n}\nfloat width=textPaint.measureText(str);\ncanvas.drawText(str,actualArea.x + (segmentWidth - width) / 2 + segmentWidth * a,actualArea.y + actualArea.height - AndroidUtilities.dp(4),textPaint);\n}\nfloat[] points=curvesValue.interpolateCurve();\ninvalidate();\npath.reset();\nfor (int a=0; a < points.length / 2; a++) {\nif (a == 0) {\npath.moveTo(actualArea.x + points[a * 2] * actualArea.width,actualArea.y + (1.0f - points[a * 2 + 1]) * actualArea.height);\n}\n else {\npath.lineTo(actualArea.x + points[a * 2] * actualArea.width,actualArea.y + (1.0f - points[a * 2 + 1]) * actualArea.height);\n}\n}\ncanvas.drawPath(path,paintCurve);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 446,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 252,
        "startColumnNumber" : 12,
        "endLineNumber" : 252,
        "endColumnNumber" : 179
      },
      "nodeContext" : "canvas.drawLine(actualArea.x + segmentWidth + i * segmentWidth,actualArea.y,actualArea.x + segmentWidth + i * segmentWidth,actualArea.y + actualArea.height,paint);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 31,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 252,
    "startColumnNumber" : 58,
    "endLineNumber" : 252,
    "endColumnNumber" : 74
  }, {
    "charLength" : 16,
    "startLineNumber" : 252,
    "startColumnNumber" : 120,
    "endLineNumber" : 252,
    "endColumnNumber" : 136
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}