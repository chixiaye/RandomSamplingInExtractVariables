{
  "id" : 32,
  "expression" : "parent.exists()",
  "projectName" : "Konloch@bytecode-viewer",
  "commitID" : "9ab8ec7f8c061fb1d9b1db3e901034d162a211ff",
  "filePath" : "/src/main/java/the/bytecode/club/bytecodeviewer/util/ZipUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "parent.exists()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 71,
      "startColumnNumber" : 17,
      "endLineNumber" : 71,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 71,
        "startColumnNumber" : 16,
        "endLineNumber" : 71,
        "endColumnNumber" : 32
      },
      "nodeContext" : "!parent.exists()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 73,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!parent.exists()) {\n  parent.mkdirs();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 710,
        "startLineNumber" : 64,
        "startColumnNumber" : 85,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  JarEntry entry=enums.nextElement();\n  String fileName=destinationDir + File.separator + entry.getName();\n  File f=new File(fileName);\n  File parent=f.getParentFile();\n  if (!parent.exists()) {\n    parent.mkdirs();\n  }\n  if (!fileName.endsWith(\"/\")) {\n    InputStream is=jar.getInputStream(entry);\n    FileOutputStream fos=new FileOutputStream(f);\n    while (is.available() > 0) {\n      fos.write(is.read());\n    }\n    fos.close();\n    is.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 96,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 787,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Enumeration<JarEntry> enums=jar.entries(); enums.hasMoreElements(); ) {\n  JarEntry entry=enums.nextElement();\n  String fileName=destinationDir + File.separator + entry.getName();\n  File f=new File(fileName);\n  File parent=f.getParentFile();\n  if (!parent.exists()) {\n    parent.mkdirs();\n  }\n  if (!fileName.endsWith(\"/\")) {\n    InputStream is=jar.getInputStream(entry);\n    FileOutputStream fos=new FileOutputStream(f);\n    while (is.available() > 0) {\n      fos.write(is.read());\n    }\n    fos.close();\n    is.close();\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 111,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1474,
        "startLineNumber" : 45,
        "startColumnNumber" : 98,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  File file=new File(jarPath);\n  JarFile jar=new JarFile(file);\n  for (Enumeration<JarEntry> enums=jar.entries(); enums.hasMoreElements(); ) {\n    JarEntry entry=enums.nextElement();\n    String fileName=destinationDir + File.separator + entry.getName();\n    File f=new File(fileName);\n    File parent=f.getParentFile();\n    if (!parent.exists()) {\n      parent.mkdirs();\n    }\n    if (!fileName.endsWith(\"/\")) {\n      InputStream is=jar.getInputStream(entry);\n      FileOutputStream fos=new FileOutputStream(f);\n      while (is.available() > 0) {\n        fos.write(is.read());\n      }\n      fos.close();\n      is.close();\n    }\n  }\n  try {\n    jar.close();\n  }\n catch (  Exception ignored) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1788,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Unzip files to path.\n * @param jarPath        the zip file name\n * @param destinationDir the file extract path\n * @throws IOException Signals that an I/O exception has occurred.\n */\npublic static void unzipFilesToPath(String jarPath,String destinationDir) throws IOException {\n  File file=new File(jarPath);\n  JarFile jar=new JarFile(file);\n  for (Enumeration<JarEntry> enums=jar.entries(); enums.hasMoreElements(); ) {\n    JarEntry entry=enums.nextElement();\n    String fileName=destinationDir + File.separator + entry.getName();\n    File f=new File(fileName);\n    File parent=f.getParentFile();\n    if (!parent.exists()) {\n      parent.mkdirs();\n    }\n    if (!fileName.endsWith(\"/\")) {\n      InputStream is=jar.getInputStream(entry);\n      FileOutputStream fos=new FileOutputStream(f);\n      while (is.available() > 0) {\n        fos.write(is.read());\n      }\n      fos.close();\n      is.close();\n    }\n  }\n  try {\n    jar.close();\n  }\n catch (  Exception ignored) {\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 158,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 71,
        "startColumnNumber" : 16,
        "endLineNumber" : 71,
        "endColumnNumber" : 32
      },
      "nodeContext" : "!parent.exists()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 71,
    "startColumnNumber" : 17,
    "endLineNumber" : 71,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}