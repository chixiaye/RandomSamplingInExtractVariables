{
  "id" : 386,
  "expression" : "mock",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitousage/bugs/ConfusedSignatureTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mock",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 23,
      "startColumnNumber" : 13,
      "endLineNumber" : 23,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 23,
        "startColumnNumber" : 13,
        "endLineNumber" : 23,
        "endColumnNumber" : 26
      },
      "nodeContext" : "mock.getFoo()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 23,
        "startColumnNumber" : 8,
        "endLineNumber" : 23,
        "endColumnNumber" : 27
      },
      "nodeContext" : "when(mock.getFoo())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 23,
        "startColumnNumber" : 8,
        "endLineNumber" : 23,
        "endColumnNumber" : 47
      },
      "nodeContext" : "when(mock.getFoo()).thenReturn(\"Hello\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 23,
        "startColumnNumber" : 8,
        "endLineNumber" : 23,
        "endColumnNumber" : 48
      },
      "nodeContext" : "when(mock.getFoo()).thenReturn(\"Hello\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 17,
        "startColumnNumber" : 107,
        "endLineNumber" : 26,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Sub mock=mock(Sub.class);\n  when(mock.getFoo()).thenReturn(\"Hello\");\n  assertThat(mock.getFoo()).isEqualTo(\"Hello\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 559,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 26,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void should_mock_method_which_has_generic_return_type_in_superclass_and_concrete_one_in_interface(){\n  Sub mock=mock(Sub.class);\n  when(mock.getFoo()).thenReturn(\"Hello\");\n  assertThat(mock.getFoo()).isEqualTo(\"Hello\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 35,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 23,
        "startColumnNumber" : 8,
        "endLineNumber" : 23,
        "endColumnNumber" : 48
      },
      "nodeContext" : "when(mock.getFoo()).thenReturn(\"Hello\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.mockitousage.bugs.ConfusedSignatureTest.Sub"
  }, {
    "nodeContext" : "mock",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 25,
      "startColumnNumber" : 19,
      "endLineNumber" : 25,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 25,
        "startColumnNumber" : 19,
        "endLineNumber" : 25,
        "endColumnNumber" : 32
      },
      "nodeContext" : "mock.getFoo()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 33
      },
      "nodeContext" : "assertThat(mock.getFoo())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertThat(mock.getFoo()).isEqualTo(\"Hello\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertThat(mock.getFoo()).isEqualTo(\"Hello\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 17,
        "startColumnNumber" : 107,
        "endLineNumber" : 26,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Sub mock=mock(Sub.class);\n  when(mock.getFoo()).thenReturn(\"Hello\");\n  assertThat(mock.getFoo()).isEqualTo(\"Hello\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 559,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 26,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void should_mock_method_which_has_generic_return_type_in_superclass_and_concrete_one_in_interface(){\n  Sub mock=mock(Sub.class);\n  when(mock.getFoo()).thenReturn(\"Hello\");\n  assertThat(mock.getFoo()).isEqualTo(\"Hello\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 35,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertThat(mock.getFoo()).isEqualTo(\"Hello\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.mockitousage.bugs.ConfusedSignatureTest.Sub"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 23,
    "startColumnNumber" : 13,
    "endLineNumber" : 23,
    "endColumnNumber" : 17
  }, {
    "charLength" : 4,
    "startLineNumber" : 25,
    "startColumnNumber" : 19,
    "endLineNumber" : 25,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}