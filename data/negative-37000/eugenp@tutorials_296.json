{
  "id" : 296,
  "expression" : "new LinkedList<>()",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/algorithms-miscellaneous-2/src/main/java/com/baeldung/algorithms/maze/solver/BFSMazeSolver.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new LinkedList<>()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 12,
      "startColumnNumber" : 45,
      "endLineNumber" : 12,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 4,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 12,
        "startColumnNumber" : 31,
        "endLineNumber" : 12,
        "endColumnNumber" : 63
      },
      "nodeContext" : "nextToVisit=new LinkedList<>()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 12,
        "startColumnNumber" : 8,
        "endLineNumber" : 12,
        "endColumnNumber" : 64
      },
      "nodeContext" : "LinkedList<Coordinate> nextToVisit=new LinkedList<>();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 999,
        "startLineNumber" : 11,
        "startColumnNumber" : 45,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  LinkedList<Coordinate> nextToVisit=new LinkedList<>();\n  Coordinate start=maze.getEntry();\n  nextToVisit.add(start);\n  while (!nextToVisit.isEmpty()) {\n    Coordinate cur=nextToVisit.remove();\n    if (!maze.isValidLocation(cur.getX(),cur.getY()) || maze.isExplored(cur.getX(),cur.getY())) {\n      continue;\n    }\n    if (maze.isWall(cur.getX(),cur.getY())) {\n      maze.setVisited(cur.getX(),cur.getY(),true);\n      continue;\n    }\n    if (maze.isExit(cur.getX(),cur.getY())) {\n      return backtrackPath(cur);\n    }\n    for (    int[] direction : DIRECTIONS) {\n      Coordinate coordinate=new Coordinate(cur.getX() + direction[0],cur.getY() + direction[1],cur);\n      nextToVisit.add(coordinate);\n      maze.setVisited(cur.getX(),cur.getY(),true);\n    }\n  }\n  return Collections.emptyList();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1040,
        "startLineNumber" : 11,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public List<Coordinate> solve(Maze maze){\n  LinkedList<Coordinate> nextToVisit=new LinkedList<>();\n  Coordinate start=maze.getEntry();\n  nextToVisit.add(start);\n  while (!nextToVisit.isEmpty()) {\n    Coordinate cur=nextToVisit.remove();\n    if (!maze.isValidLocation(cur.getX(),cur.getY()) || maze.isExplored(cur.getX(),cur.getY())) {\n      continue;\n    }\n    if (maze.isWall(cur.getX(),cur.getY())) {\n      maze.setVisited(cur.getX(),cur.getY(),true);\n      continue;\n    }\n    if (maze.isExit(cur.getX(),cur.getY())) {\n      return backtrackPath(cur);\n    }\n    for (    int[] direction : DIRECTIONS) {\n      Coordinate coordinate=new Coordinate(cur.getX() + direction[0],cur.getY() + direction[1],cur);\n      nextToVisit.add(coordinate);\n      maze.setVisited(cur.getX(),cur.getY(),true);\n    }\n  }\n  return Collections.emptyList();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 164,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 12,
        "startColumnNumber" : 8,
        "endLineNumber" : 12,
        "endColumnNumber" : 64
      },
      "nodeContext" : "LinkedList<Coordinate> nextToVisit=new LinkedList<>();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.LinkedList<com.baeldung.algorithms.maze.solver.Coordinate>"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 12,
    "startColumnNumber" : 45,
    "endLineNumber" : 12,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ]
}