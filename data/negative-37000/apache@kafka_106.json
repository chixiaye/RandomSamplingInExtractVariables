{
  "id" : 106,
  "expression" : "new ScramCredentialInfo(scramSha256,iterations)",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/test/java/org/apache/kafka/clients/admin/DescribeUserScramCredentialsResultTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ScramCredentialInfo(scramSha256,iterations)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 48,
      "startLineNumber" : 79,
      "startColumnNumber" : 81,
      "endLineNumber" : 79,
      "endColumnNumber" : 129
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 79,
        "startColumnNumber" : 67,
        "endLineNumber" : 79,
        "endColumnNumber" : 130
      },
      "nodeContext" : "Arrays.asList(new ScramCredentialInfo(scramSha256,iterations))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 79,
        "startColumnNumber" : 21,
        "endLineNumber" : 79,
        "endColumnNumber" : 131
      },
      "nodeContext" : "new UserScramCredentialsDescription(goodUser,Arrays.asList(new ScramCredentialInfo(scramSha256,iterations)))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 153
      },
      "nodeContext" : "assertEquals(new UserScramCredentialsDescription(goodUser,Arrays.asList(new ScramCredentialInfo(scramSha256,iterations))),goodUserDescription)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 154
      },
      "nodeContext" : "assertEquals(new UserScramCredentialsDescription(goodUser,Arrays.asList(new ScramCredentialInfo(scramSha256,iterations))),goodUserDescription);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2262,
        "startLineNumber" : 58,
        "startColumnNumber" : 55,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String goodUser=\"goodUser\";\n  String unknownUser=\"unknownUser\";\n  String failedUser=\"failedUser\";\n  KafkaFutureImpl<DescribeUserScramCredentialsResponseData> dataFuture=new KafkaFutureImpl<>();\n  ScramMechanism scramSha256=ScramMechanism.SCRAM_SHA_256;\n  int iterations=4096;\n  dataFuture.complete(new DescribeUserScramCredentialsResponseData().setErrorCode(Errors.NONE.code()).setResults(Arrays.asList(new DescribeUserScramCredentialsResponseData.DescribeUserScramCredentialsResult().setUser(goodUser).setCredentialInfos(Arrays.asList(new DescribeUserScramCredentialsResponseData.CredentialInfo().setMechanism(scramSha256.type()).setIterations(iterations))),new DescribeUserScramCredentialsResponseData.DescribeUserScramCredentialsResult().setUser(unknownUser).setErrorCode(Errors.RESOURCE_NOT_FOUND.code()),new DescribeUserScramCredentialsResponseData.DescribeUserScramCredentialsResult().setUser(failedUser).setErrorCode(Errors.DUPLICATE_RESOURCE.code()))));\n  DescribeUserScramCredentialsResult results=new DescribeUserScramCredentialsResult(dataFuture);\n  try {\n    results.all().get();\n    fail(\"expected all() to fail when there is a user-level error\");\n  }\n catch (  Exception expected) {\n  }\n  assertEquals(Arrays.asList(goodUser,failedUser),results.users().get(),\"Expected 2 users with credentials\");\n  UserScramCredentialsDescription goodUserDescription=results.description(goodUser).get();\n  assertEquals(new UserScramCredentialsDescription(goodUser,Arrays.asList(new ScramCredentialInfo(scramSha256,iterations))),goodUserDescription);\n  try {\n    results.description(failedUser).get();\n    fail(\"expected description(failedUser) to fail when there is a user-level error\");\n  }\n catch (  Exception expected) {\n  }\n  try {\n    results.description(unknownUser).get();\n    fail(\"expected description(unknownUser) to fail when there is no such user\");\n  }\n catch (  Exception expected) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 225,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2323,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testUserLevelErrors() throws Exception {\n  String goodUser=\"goodUser\";\n  String unknownUser=\"unknownUser\";\n  String failedUser=\"failedUser\";\n  KafkaFutureImpl<DescribeUserScramCredentialsResponseData> dataFuture=new KafkaFutureImpl<>();\n  ScramMechanism scramSha256=ScramMechanism.SCRAM_SHA_256;\n  int iterations=4096;\n  dataFuture.complete(new DescribeUserScramCredentialsResponseData().setErrorCode(Errors.NONE.code()).setResults(Arrays.asList(new DescribeUserScramCredentialsResponseData.DescribeUserScramCredentialsResult().setUser(goodUser).setCredentialInfos(Arrays.asList(new DescribeUserScramCredentialsResponseData.CredentialInfo().setMechanism(scramSha256.type()).setIterations(iterations))),new DescribeUserScramCredentialsResponseData.DescribeUserScramCredentialsResult().setUser(unknownUser).setErrorCode(Errors.RESOURCE_NOT_FOUND.code()),new DescribeUserScramCredentialsResponseData.DescribeUserScramCredentialsResult().setUser(failedUser).setErrorCode(Errors.DUPLICATE_RESOURCE.code()))));\n  DescribeUserScramCredentialsResult results=new DescribeUserScramCredentialsResult(dataFuture);\n  try {\n    results.all().get();\n    fail(\"expected all() to fail when there is a user-level error\");\n  }\n catch (  Exception expected) {\n  }\n  assertEquals(Arrays.asList(goodUser,failedUser),results.users().get(),\"Expected 2 users with credentials\");\n  UserScramCredentialsDescription goodUserDescription=results.description(goodUser).get();\n  assertEquals(new UserScramCredentialsDescription(goodUser,Arrays.asList(new ScramCredentialInfo(scramSha256,iterations))),goodUserDescription);\n  try {\n    results.description(failedUser).get();\n    fail(\"expected description(failedUser) to fail when there is a user-level error\");\n  }\n catch (  Exception expected) {\n  }\n  try {\n    results.description(unknownUser).get();\n    fail(\"expected description(unknownUser) to fail when there is no such user\");\n  }\n catch (  Exception expected) {\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 233,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 154
      },
      "nodeContext" : "assertEquals(new UserScramCredentialsDescription(goodUser,Arrays.asList(new ScramCredentialInfo(scramSha256,iterations))),goodUserDescription);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "org.apache.kafka.clients.admin.ScramCredentialInfo"
  } ],
  "positionList" : [ {
    "charLength" : 48,
    "startLineNumber" : 79,
    "startColumnNumber" : 81,
    "endLineNumber" : 79,
    "endColumnNumber" : 129
  } ],
  "layoutRelationDataList" : [ ]
}