{
  "id" : 59,
  "expression" : "true",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/codec-http/src/test/java/io/netty/handler/codec/http/multipart/HttpPostRequestEncoderTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "true",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 74,
      "startColumnNumber" : 77,
      "endLineNumber" : 74,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 74,
        "startColumnNumber" : 41,
        "endLineNumber" : 74,
        "endColumnNumber" : 82
      },
      "nodeContext" : "new HttpPostRequestEncoder(request,true)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 74,
        "startColumnNumber" : 31,
        "endLineNumber" : 74,
        "endColumnNumber" : 82
      },
      "nodeContext" : "encoder=new HttpPostRequestEncoder(request,true)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 83
      },
      "nodeContext" : "HttpPostRequestEncoder encoder=new HttpPostRequestEncoder(request,true);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1468,
        "startLineNumber" : 70,
        "startColumnNumber" : 86,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DefaultFullHttpRequest request=new DefaultFullHttpRequest(HttpVersion.HTTP_1_1,method,\"http://localhost\");\n  HttpPostRequestEncoder encoder=new HttpPostRequestEncoder(request,true);\n  File file1=new File(getClass().getResource(\"/file-01.txt\").toURI());\n  encoder.addBodyAttribute(\"foo\",\"bar\");\n  encoder.addBodyFileUpload(\"quux\",file1,\"text/plain\",false);\n  String multipartDataBoundary=encoder.multipartDataBoundary;\n  String content=getRequestBody(encoder);\n  String expected=\"--\" + multipartDataBoundary + \"\\r\\n\"+ CONTENT_DISPOSITION+ \": form-data; name=\\\"foo\\\"\"+ \"\\r\\n\"+ CONTENT_LENGTH+ \": 3\"+ \"\\r\\n\"+ CONTENT_TYPE+ \": text/plain; charset=UTF-8\"+ \"\\r\\n\"+ \"\\r\\n\"+ \"bar\"+ \"\\r\\n\"+ \"--\"+ multipartDataBoundary+ \"\\r\\n\"+ CONTENT_DISPOSITION+ \": form-data; name=\\\"quux\\\"; filename=\\\"file-01.txt\\\"\"+ \"\\r\\n\"+ CONTENT_LENGTH+ \": \"+ file1.length()+ \"\\r\\n\"+ CONTENT_TYPE+ \": text/plain\"+ \"\\r\\n\"+ CONTENT_TRANSFER_ENCODING+ \": binary\"+ \"\\r\\n\"+ \"\\r\\n\"+ \"File 01\"+ StringUtil.NEWLINE+ \"\\r\\n\"+ \"--\"+ multipartDataBoundary+ \"--\"+ \"\\r\\n\";\n  assertEquals(expected,content);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 123,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1550,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void shouldThrowExceptionIfNotAllowed(HttpMethod method) throws Exception {\n  DefaultFullHttpRequest request=new DefaultFullHttpRequest(HttpVersion.HTTP_1_1,method,\"http://localhost\");\n  HttpPostRequestEncoder encoder=new HttpPostRequestEncoder(request,true);\n  File file1=new File(getClass().getResource(\"/file-01.txt\").toURI());\n  encoder.addBodyAttribute(\"foo\",\"bar\");\n  encoder.addBodyFileUpload(\"quux\",file1,\"text/plain\",false);\n  String multipartDataBoundary=encoder.multipartDataBoundary;\n  String content=getRequestBody(encoder);\n  String expected=\"--\" + multipartDataBoundary + \"\\r\\n\"+ CONTENT_DISPOSITION+ \": form-data; name=\\\"foo\\\"\"+ \"\\r\\n\"+ CONTENT_LENGTH+ \": 3\"+ \"\\r\\n\"+ CONTENT_TYPE+ \": text/plain; charset=UTF-8\"+ \"\\r\\n\"+ \"\\r\\n\"+ \"bar\"+ \"\\r\\n\"+ \"--\"+ multipartDataBoundary+ \"\\r\\n\"+ CONTENT_DISPOSITION+ \": form-data; name=\\\"quux\\\"; filename=\\\"file-01.txt\\\"\"+ \"\\r\\n\"+ CONTENT_LENGTH+ \": \"+ file1.length()+ \"\\r\\n\"+ CONTENT_TYPE+ \": text/plain\"+ \"\\r\\n\"+ CONTENT_TRANSFER_ENCODING+ \": binary\"+ \"\\r\\n\"+ \"\\r\\n\"+ \"File 01\"+ StringUtil.NEWLINE+ \"\\r\\n\"+ \"--\"+ multipartDataBoundary+ \"--\"+ \"\\r\\n\";\n  assertEquals(expected,content);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 133,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 83
      },
      "nodeContext" : "HttpPostRequestEncoder encoder=new HttpPostRequestEncoder(request,true);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 74,
    "startColumnNumber" : 77,
    "endLineNumber" : 74,
    "endColumnNumber" : 81
  } ],
  "layoutRelationDataList" : [ ]
}