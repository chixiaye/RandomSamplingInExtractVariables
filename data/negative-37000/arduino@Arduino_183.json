{
  "id" : 183,
  "expression" : "'\\u00A0'",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/app/src/processing/app/tools/DiscourseFormat.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "'\\u00A0'",
    "nodeType" : "CharacterLiteral",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 221,
      "startColumnNumber" : 40,
      "endLineNumber" : 221,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 221,
        "startColumnNumber" : 22,
        "endLineNumber" : 221,
        "endColumnNumber" : 48
      },
      "nodeContext" : "html ? \"&nbsp;\" : '\\u00A0'",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 221,
        "startColumnNumber" : 12,
        "endLineNumber" : 221,
        "endColumnNumber" : 49
      },
      "nodeContext" : "cf.append(html ? \"&nbsp;\" : '\\u00A0')",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 221,
        "startColumnNumber" : 12,
        "endLineNumber" : 221,
        "endColumnNumber" : 50
      },
      "nodeContext" : "cf.append(html ? \"&nbsp;\" : '\\u00A0');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 300,
        "startLineNumber" : 219,
        "startColumnNumber" : 39,
        "endLineNumber" : 227,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  cf.append(html ? \"&nbsp;\" : '\\u00A0');\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 381,
        "startLineNumber" : 219,
        "startColumnNumber" : 10,
        "endLineNumber" : 229,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (offset == 0 && c == ' ') {\n  cf.append(html ? \"&nbsp;\" : '\\u00A0');\n}\n else {\n  appendToHTML(c,cf);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 987,
        "startLineNumber" : 217,
        "startColumnNumber" : 41,
        "endLineNumber" : 244,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  char c=segmentArray[segmentOffset + offset + j];\n  if (offset == 0 && c == ' ') {\n    cf.append(html ? \"&nbsp;\" : '\\u00A0');\n  }\n else {\n    appendToHTML(c,cf);\n  }\n  if (html && j == (length - 1) && id != Token.NULL && styles[id].isBold())   cf.append(\"</b>\");\n  if (html && j == (length - 1) && id != Token.NULL)   cf.append(\"</span>\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1020,
        "startLineNumber" : 217,
        "startColumnNumber" : 8,
        "endLineNumber" : 244,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int j=0; j < length; j++) {\n  char c=segmentArray[segmentOffset + offset + j];\n  if (offset == 0 && c == ' ') {\n    cf.append(html ? \"&nbsp;\" : '\\u00A0');\n  }\n else {\n    appendToHTML(c,cf);\n  }\n  if (html && j == (length - 1) && id != Token.NULL && styles[id].isBold())   cf.append(\"</b>\");\n  if (html && j == (length - 1) && id != Token.NULL)   cf.append(\"</span>\");\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 91,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1897,
        "startLineNumber" : 189,
        "startColumnNumber" : 15,
        "endLineNumber" : 247,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  byte id=tokens.id;\n  if (id == Token.END) {\n    char c=segmentArray[segmentOffset + offset];\n    if (segmentOffset + offset < limit) {\n      appendToHTML(c,cf);\n    }\n else {\n      cf.append('\\n');\n    }\n    return;\n  }\n  if (id == Token.NULL) {\n  }\n else {\n    if (html) {\n      cf.append(\"<span style=\\\"color: #\");\n      cf.append(PApplet.hex(styles[id].getColor().getRGB() & 0xFFFFFF,6));\n      cf.append(\";\\\">\");\n    }\n    if (html && styles[id].isBold())     cf.append(\"<b>\");\n  }\n  int length=tokens.length;\n  for (int j=0; j < length; j++) {\n    char c=segmentArray[segmentOffset + offset + j];\n    if (offset == 0 && c == ' ') {\n      cf.append(html ? \"&nbsp;\" : '\\u00A0');\n    }\n else {\n      appendToHTML(c,cf);\n    }\n    if (html && j == (length - 1) && id != Token.NULL && styles[id].isBold())     cf.append(\"</b>\");\n    if (html && j == (length - 1) && id != Token.NULL)     cf.append(\"</span>\");\n  }\n  offset+=length;\n  tokens=tokens.next;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 202,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1906,
        "startLineNumber" : 189,
        "startColumnNumber" : 6,
        "endLineNumber" : 247,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (; ; ) {\n  byte id=tokens.id;\n  if (id == Token.END) {\n    char c=segmentArray[segmentOffset + offset];\n    if (segmentOffset + offset < limit) {\n      appendToHTML(c,cf);\n    }\n else {\n      cf.append('\\n');\n    }\n    return;\n  }\n  if (id == Token.NULL) {\n  }\n else {\n    if (html) {\n      cf.append(\"<span style=\\\"color: #\");\n      cf.append(PApplet.hex(styles[id].getColor().getRGB() & 0xFFFFFF,6));\n      cf.append(\";\\\">\");\n    }\n    if (html && styles[id].isBold())     cf.append(\"<b>\");\n  }\n  int length=tokens.length;\n  for (int j=0; j < length; j++) {\n    char c=segmentArray[segmentOffset + offset + j];\n    if (offset == 0 && c == ' ') {\n      cf.append(html ? \"&nbsp;\" : '\\u00A0');\n    }\n else {\n      appendToHTML(c,cf);\n    }\n    if (html && j == (length - 1) && id != Token.NULL && styles[id].isBold())     cf.append(\"</b>\");\n    if (html && j == (length - 1) && id != Token.NULL)     cf.append(\"</span>\");\n  }\n  offset+=length;\n  tokens=tokens.next;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 203,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2510,
        "startLineNumber" : 171,
        "startColumnNumber" : 11,
        "endLineNumber" : 248,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Token tokens;\n  if ((painter.getCurrentLineIndex() == line) && (painter.getCurrentLineTokens() != null)) {\n    tokens=painter.getCurrentLineTokens();\n  }\n else {\n    painter.setCurrentLineIndex(line);\n    painter.setCurrentLineTokens(tokenMarker.markTokens(segment,line));\n    tokens=painter.getCurrentLineTokens();\n  }\n  int offset=0;\n  SyntaxStyle[] styles=painter.getStyles();\n  for (; ; ) {\n    byte id=tokens.id;\n    if (id == Token.END) {\n      char c=segmentArray[segmentOffset + offset];\n      if (segmentOffset + offset < limit) {\n        appendToHTML(c,cf);\n      }\n else {\n        cf.append('\\n');\n      }\n      return;\n    }\n    if (id == Token.NULL) {\n    }\n else {\n      if (html) {\n        cf.append(\"<span style=\\\"color: #\");\n        cf.append(PApplet.hex(styles[id].getColor().getRGB() & 0xFFFFFF,6));\n        cf.append(\";\\\">\");\n      }\n      if (html && styles[id].isBold())       cf.append(\"<b>\");\n    }\n    int length=tokens.length;\n    for (int j=0; j < length; j++) {\n      char c=segmentArray[segmentOffset + offset + j];\n      if (offset == 0 && c == ' ') {\n        cf.append(html ? \"&nbsp;\" : '\\u00A0');\n      }\n else {\n        appendToHTML(c,cf);\n      }\n      if (html && j == (length - 1) && id != Token.NULL && styles[id].isBold())       cf.append(\"</b>\");\n      if (html && j == (length - 1) && id != Token.NULL)       cf.append(\"</span>\");\n    }\n    offset+=length;\n    tokens=tokens.next;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 266,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2906,
        "startLineNumber" : 158,
        "startColumnNumber" : 4,
        "endLineNumber" : 248,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (tokenMarker == null) {\n  for (int j=0; j < segmentCount; j++) {\n    char c=segmentArray[j + segmentOffset];\n    appendToHTML(c,cf);\n  }\n}\n else {\n  Token tokens;\n  if ((painter.getCurrentLineIndex() == line) && (painter.getCurrentLineTokens() != null)) {\n    tokens=painter.getCurrentLineTokens();\n  }\n else {\n    painter.setCurrentLineIndex(line);\n    painter.setCurrentLineTokens(tokenMarker.markTokens(segment,line));\n    tokens=painter.getCurrentLineTokens();\n  }\n  int offset=0;\n  SyntaxStyle[] styles=painter.getStyles();\n  for (; ; ) {\n    byte id=tokens.id;\n    if (id == Token.END) {\n      char c=segmentArray[segmentOffset + offset];\n      if (segmentOffset + offset < limit) {\n        appendToHTML(c,cf);\n      }\n else {\n        cf.append('\\n');\n      }\n      return;\n    }\n    if (id == Token.NULL) {\n    }\n else {\n      if (html) {\n        cf.append(\"<span style=\\\"color: #\");\n        cf.append(PApplet.hex(styles[id].getColor().getRGB() & 0xFFFFFF,6));\n        cf.append(\";\\\">\");\n      }\n      if (html && styles[id].isBold())       cf.append(\"<b>\");\n    }\n    int length=tokens.length;\n    for (int j=0; j < length; j++) {\n      char c=segmentArray[segmentOffset + offset + j];\n      if (offset == 0 && c == ' ') {\n        cf.append(html ? \"&nbsp;\" : '\\u00A0');\n      }\n else {\n        appendToHTML(c,cf);\n      }\n      if (html && j == (length - 1) && id != Token.NULL && styles[id].isBold())       cf.append(\"</b>\");\n      if (html && j == (length - 1) && id != Token.NULL)       cf.append(\"</span>\");\n    }\n    offset+=length;\n    tokens=tokens.next;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 297,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3484,
        "startLineNumber" : 139,
        "startColumnNumber" : 62,
        "endLineNumber" : 249,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Segment segment=new Segment();\n  TextAreaPainter painter=textarea.getPainter();\n  TokenMarker tokenMarker=textarea.getTokenMarker();\n  textarea.getLineText(line,segment);\n  char[] segmentArray=segment.array;\n  int limit=segment.getEndIndex();\n  int segmentOffset=segment.offset;\n  int segmentCount=segment.count;\n  if (tokenMarker == null) {\n    for (int j=0; j < segmentCount; j++) {\n      char c=segmentArray[j + segmentOffset];\n      appendToHTML(c,cf);\n    }\n  }\n else {\n    Token tokens;\n    if ((painter.getCurrentLineIndex() == line) && (painter.getCurrentLineTokens() != null)) {\n      tokens=painter.getCurrentLineTokens();\n    }\n else {\n      painter.setCurrentLineIndex(line);\n      painter.setCurrentLineTokens(tokenMarker.markTokens(segment,line));\n      tokens=painter.getCurrentLineTokens();\n    }\n    int offset=0;\n    SyntaxStyle[] styles=painter.getStyles();\n    for (; ; ) {\n      byte id=tokens.id;\n      if (id == Token.END) {\n        char c=segmentArray[segmentOffset + offset];\n        if (segmentOffset + offset < limit) {\n          appendToHTML(c,cf);\n        }\n else {\n          cf.append('\\n');\n        }\n        return;\n      }\n      if (id == Token.NULL) {\n      }\n else {\n        if (html) {\n          cf.append(\"<span style=\\\"color: #\");\n          cf.append(PApplet.hex(styles[id].getColor().getRGB() & 0xFFFFFF,6));\n          cf.append(\";\\\">\");\n        }\n        if (html && styles[id].isBold())         cf.append(\"<b>\");\n      }\n      int length=tokens.length;\n      for (int j=0; j < length; j++) {\n        char c=segmentArray[segmentOffset + offset + j];\n        if (offset == 0 && c == ' ') {\n          cf.append(html ? \"&nbsp;\" : '\\u00A0');\n        }\n else {\n          appendToHTML(c,cf);\n        }\n        if (html && j == (length - 1) && id != Token.NULL && styles[id].isBold())         cf.append(\"</b>\");\n        if (html && j == (length - 1) && id != Token.NULL)         cf.append(\"</span>\");\n      }\n      offset+=length;\n      tokens=tokens.next;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 358,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3544,
        "startLineNumber" : 139,
        "startColumnNumber" : 2,
        "endLineNumber" : 249,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void appendFormattedLine(StringBuilder cf,int line){\n  Segment segment=new Segment();\n  TextAreaPainter painter=textarea.getPainter();\n  TokenMarker tokenMarker=textarea.getTokenMarker();\n  textarea.getLineText(line,segment);\n  char[] segmentArray=segment.array;\n  int limit=segment.getEndIndex();\n  int segmentOffset=segment.offset;\n  int segmentCount=segment.count;\n  if (tokenMarker == null) {\n    for (int j=0; j < segmentCount; j++) {\n      char c=segmentArray[j + segmentOffset];\n      appendToHTML(c,cf);\n    }\n  }\n else {\n    Token tokens;\n    if ((painter.getCurrentLineIndex() == line) && (painter.getCurrentLineTokens() != null)) {\n      tokens=painter.getCurrentLineTokens();\n    }\n else {\n      painter.setCurrentLineIndex(line);\n      painter.setCurrentLineTokens(tokenMarker.markTokens(segment,line));\n      tokens=painter.getCurrentLineTokens();\n    }\n    int offset=0;\n    SyntaxStyle[] styles=painter.getStyles();\n    for (; ; ) {\n      byte id=tokens.id;\n      if (id == Token.END) {\n        char c=segmentArray[segmentOffset + offset];\n        if (segmentOffset + offset < limit) {\n          appendToHTML(c,cf);\n        }\n else {\n          cf.append('\\n');\n        }\n        return;\n      }\n      if (id == Token.NULL) {\n      }\n else {\n        if (html) {\n          cf.append(\"<span style=\\\"color: #\");\n          cf.append(PApplet.hex(styles[id].getColor().getRGB() & 0xFFFFFF,6));\n          cf.append(\";\\\">\");\n        }\n        if (html && styles[id].isBold())         cf.append(\"<b>\");\n      }\n      int length=tokens.length;\n      for (int j=0; j < length; j++) {\n        char c=segmentArray[segmentOffset + offset + j];\n        if (offset == 0 && c == ' ') {\n          cf.append(html ? \"&nbsp;\" : '\\u00A0');\n        }\n else {\n          appendToHTML(c,cf);\n        }\n        if (html && j == (length - 1) && id != Token.NULL && styles[id].isBold())         cf.append(\"</b>\");\n        if (html && j == (length - 1) && id != Token.NULL)         cf.append(\"</span>\");\n      }\n      offset+=length;\n      tokens=tokens.next;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 369,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 221,
        "startColumnNumber" : 12,
        "endLineNumber" : 221,
        "endColumnNumber" : 50
      },
      "nodeContext" : "cf.append(html ? \"&nbsp;\" : '\\u00A0');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "char"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 221,
    "startColumnNumber" : 40,
    "endLineNumber" : 221,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}