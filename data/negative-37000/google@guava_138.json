{
  "id" : 138,
  "expression" : "\"putIfAbsent(present, value) should return existing value\"",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava-testlib/src/com/google/common/collect/testing/testers/ConcurrentMapPutIfAbsentTester.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"putIfAbsent(present, value) should return existing value\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 58,
      "startLineNumber" : 57,
      "startColumnNumber" : 8,
      "endLineNumber" : 57,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 41
      },
      "nodeContext" : "assertEquals(\"putIfAbsent(present, value) should return existing value\",v0(),getMap().putIfAbsent(k0(),v3()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 42
      },
      "nodeContext" : "assertEquals(\"putIfAbsent(present, value) should return existing value\",v0(),getMap().putIfAbsent(k0(),v3()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 55,
        "startColumnNumber" : 49,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertEquals(\"putIfAbsent(present, value) should return existing value\",v0(),getMap().putIfAbsent(k0(),v3()));\n  expectUnchanged();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 303,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@MapFeature.Require(SUPPORTS_PUT) @CollectionSize.Require(absent=ZERO) public void testPutIfAbsent_supportedPresent(){\n  assertEquals(\"putIfAbsent(present, value) should return existing value\",v0(),getMap().putIfAbsent(k0(),v3()));\n  expectUnchanged();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 34,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 41
      },
      "nodeContext" : "assertEquals(\"putIfAbsent(present, value) should return existing value\",v0(),getMap().putIfAbsent(k0(),v3()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 6,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 58,
    "startLineNumber" : 57,
    "startColumnNumber" : 8,
    "endLineNumber" : 57,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ ]
}