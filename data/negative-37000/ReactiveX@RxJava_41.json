{
  "id" : 41,
  "expression" : "as.hasValue()",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/subjects/AsyncSubjectTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "as.hasValue()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 323,
      "startColumnNumber" : 20,
      "endLineNumber" : 323,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 323,
        "startColumnNumber" : 8,
        "endLineNumber" : 323,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertFalse(as.hasValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 323,
        "startColumnNumber" : 8,
        "endLineNumber" : 323,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertFalse(as.hasValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 744,
        "startLineNumber" : 320,
        "startColumnNumber" : 48,
        "endLineNumber" : 343,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  AsyncSubject<Object> as=AsyncSubject.create();\n  assertFalse(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertFalse(as.hasComplete());\n  assertNull(as.getValue());\n  assertNull(as.getThrowable());\n  as.onNext(1);\n  assertTrue(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertFalse(as.hasComplete());\n  assertEquals(1,as.getValue());\n  assertNull(as.getThrowable());\n  as.onComplete();\n  assertTrue(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertTrue(as.hasComplete());\n  assertEquals(1,as.getValue());\n  assertNull(as.getThrowable());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 799,
        "startLineNumber" : 319,
        "startColumnNumber" : 4,
        "endLineNumber" : 343,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCurrentStateMethodsNormal(){\n  AsyncSubject<Object> as=AsyncSubject.create();\n  assertFalse(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertFalse(as.hasComplete());\n  assertNull(as.getValue());\n  assertNull(as.getThrowable());\n  as.onNext(1);\n  assertTrue(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertFalse(as.hasComplete());\n  assertEquals(1,as.getValue());\n  assertNull(as.getThrowable());\n  as.onComplete();\n  assertTrue(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertTrue(as.hasComplete());\n  assertEquals(1,as.getValue());\n  assertNull(as.getThrowable());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 119,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 323,
        "startColumnNumber" : 8,
        "endLineNumber" : 323,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertFalse(as.hasValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  }, {
    "nodeContext" : "as.hasValue()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 331,
      "startColumnNumber" : 19,
      "endLineNumber" : 331,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 331,
        "startColumnNumber" : 8,
        "endLineNumber" : 331,
        "endColumnNumber" : 33
      },
      "nodeContext" : "assertTrue(as.hasValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 331,
        "startColumnNumber" : 8,
        "endLineNumber" : 331,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertTrue(as.hasValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 744,
        "startLineNumber" : 320,
        "startColumnNumber" : 48,
        "endLineNumber" : 343,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  AsyncSubject<Object> as=AsyncSubject.create();\n  assertFalse(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertFalse(as.hasComplete());\n  assertNull(as.getValue());\n  assertNull(as.getThrowable());\n  as.onNext(1);\n  assertTrue(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertFalse(as.hasComplete());\n  assertEquals(1,as.getValue());\n  assertNull(as.getThrowable());\n  as.onComplete();\n  assertTrue(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertTrue(as.hasComplete());\n  assertEquals(1,as.getValue());\n  assertNull(as.getThrowable());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 799,
        "startLineNumber" : 319,
        "startColumnNumber" : 4,
        "endLineNumber" : 343,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCurrentStateMethodsNormal(){\n  AsyncSubject<Object> as=AsyncSubject.create();\n  assertFalse(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertFalse(as.hasComplete());\n  assertNull(as.getValue());\n  assertNull(as.getThrowable());\n  as.onNext(1);\n  assertTrue(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertFalse(as.hasComplete());\n  assertEquals(1,as.getValue());\n  assertNull(as.getThrowable());\n  as.onComplete();\n  assertTrue(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertTrue(as.hasComplete());\n  assertEquals(1,as.getValue());\n  assertNull(as.getThrowable());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 119,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 331,
        "startColumnNumber" : 8,
        "endLineNumber" : 331,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertTrue(as.hasValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  }, {
    "nodeContext" : "as.hasValue()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 338,
      "startColumnNumber" : 19,
      "endLineNumber" : 338,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 338,
        "startColumnNumber" : 8,
        "endLineNumber" : 338,
        "endColumnNumber" : 33
      },
      "nodeContext" : "assertTrue(as.hasValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 338,
        "startColumnNumber" : 8,
        "endLineNumber" : 338,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertTrue(as.hasValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 744,
        "startLineNumber" : 320,
        "startColumnNumber" : 48,
        "endLineNumber" : 343,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  AsyncSubject<Object> as=AsyncSubject.create();\n  assertFalse(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertFalse(as.hasComplete());\n  assertNull(as.getValue());\n  assertNull(as.getThrowable());\n  as.onNext(1);\n  assertTrue(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertFalse(as.hasComplete());\n  assertEquals(1,as.getValue());\n  assertNull(as.getThrowable());\n  as.onComplete();\n  assertTrue(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertTrue(as.hasComplete());\n  assertEquals(1,as.getValue());\n  assertNull(as.getThrowable());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 799,
        "startLineNumber" : 319,
        "startColumnNumber" : 4,
        "endLineNumber" : 343,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCurrentStateMethodsNormal(){\n  AsyncSubject<Object> as=AsyncSubject.create();\n  assertFalse(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertFalse(as.hasComplete());\n  assertNull(as.getValue());\n  assertNull(as.getThrowable());\n  as.onNext(1);\n  assertTrue(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertFalse(as.hasComplete());\n  assertEquals(1,as.getValue());\n  assertNull(as.getThrowable());\n  as.onComplete();\n  assertTrue(as.hasValue());\n  assertFalse(as.hasThrowable());\n  assertTrue(as.hasComplete());\n  assertEquals(1,as.getValue());\n  assertNull(as.getThrowable());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 119,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 338,
        "startColumnNumber" : 8,
        "endLineNumber" : 338,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertTrue(as.hasValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 323,
    "startColumnNumber" : 20,
    "endLineNumber" : 323,
    "endColumnNumber" : 33
  }, {
    "charLength" : 13,
    "startLineNumber" : 331,
    "startColumnNumber" : 19,
    "endLineNumber" : 331,
    "endColumnNumber" : 32
  }, {
    "charLength" : 13,
    "startLineNumber" : 338,
    "startColumnNumber" : 19,
    "endLineNumber" : 338,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}