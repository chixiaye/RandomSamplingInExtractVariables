{
  "id" : 9,
  "expression" : "ROARING",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/processing/src/test/java/org/apache/druid/collections/bitmap/BitmapOperationAgainstUniformDistributionTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ROARING",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 61,
      "startColumnNumber" : 6,
      "endLineNumber" : 61,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 61,
        "startColumnNumber" : 6,
        "endLineNumber" : 61,
        "endColumnNumber" : 16
      },
      "nodeContext" : "ROARING[i]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 61,
        "startColumnNumber" : 6,
        "endLineNumber" : 61,
        "endColumnNumber" : 20
      },
      "nodeContext" : "ROARING[i]=r",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 61,
        "startColumnNumber" : 6,
        "endLineNumber" : 61,
        "endColumnNumber" : 21
      },
      "nodeContext" : "ROARING[i]=r;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 812,
        "startLineNumber" : 44,
        "startColumnNumber" : 42,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ConciseSet c=new ConciseSet();\n  MutableRoaringBitmap r=new MutableRoaringBitmap();\n  for (int k=0; k < BITMAP_LENGTH; ++k) {\n    if (rand.nextDouble() < DENSITY) {\n      c.add(k);\n      r.add(k);\n      expectedUnion.set(k);\n    }\n  }\n  for (  int k : knownTrue) {\n    c.add(k);\n    r.add(k);\n    expectedUnion.set(k);\n  }\n  CONCISE[i]=ImmutableConciseSet.newImmutableFromMutable(c);\n  OFF_HEAP_CONCISE[i]=makeOffheapConcise(CONCISE[i]);\n  ROARING[i]=r;\n  IMMUTABLE_ROARING[i]=makeImmutableRoaring(r);\n  OFF_HEAP_ROARING[i]=makeOffheapRoaring(r);\n  GENERIC_CONCISE[i]=new WrappedImmutableConciseBitmap(OFF_HEAP_CONCISE[i]);\n  GENERIC_ROARING[i]=new WrappedImmutableRoaringBitmap(OFF_HEAP_ROARING[i]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 850,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < NUM_BITMAPS; ++i) {\n  ConciseSet c=new ConciseSet();\n  MutableRoaringBitmap r=new MutableRoaringBitmap();\n  for (int k=0; k < BITMAP_LENGTH; ++k) {\n    if (rand.nextDouble() < DENSITY) {\n      c.add(k);\n      r.add(k);\n      expectedUnion.set(k);\n    }\n  }\n  for (  int k : knownTrue) {\n    c.add(k);\n    r.add(k);\n    expectedUnion.set(k);\n  }\n  CONCISE[i]=ImmutableConciseSet.newImmutableFromMutable(c);\n  OFF_HEAP_CONCISE[i]=makeOffheapConcise(CONCISE[i]);\n  ROARING[i]=r;\n  IMMUTABLE_ROARING[i]=makeImmutableRoaring(r);\n  OFF_HEAP_ROARING[i]=makeOffheapRoaring(r);\n  GENERIC_CONCISE[i]=new WrappedImmutableConciseBitmap(OFF_HEAP_CONCISE[i]);\n  GENERIC_ROARING[i]=new WrappedImmutableRoaringBitmap(OFF_HEAP_ROARING[i]);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 146,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1211,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 70,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  reset();\n  final BitSet expectedUnion=new BitSet();\n  final int[] knownTrue=new int[MIN_INTERSECT];\n  for (int i=0; i < knownTrue.length; ++i) {\n    knownTrue[i]=rand.nextInt(BITMAP_LENGTH);\n  }\n  for (int i=0; i < NUM_BITMAPS; ++i) {\n    ConciseSet c=new ConciseSet();\n    MutableRoaringBitmap r=new MutableRoaringBitmap();\n    for (int k=0; k < BITMAP_LENGTH; ++k) {\n      if (rand.nextDouble() < DENSITY) {\n        c.add(k);\n        r.add(k);\n        expectedUnion.set(k);\n      }\n    }\n    for (    int k : knownTrue) {\n      c.add(k);\n      r.add(k);\n      expectedUnion.set(k);\n    }\n    CONCISE[i]=ImmutableConciseSet.newImmutableFromMutable(c);\n    OFF_HEAP_CONCISE[i]=makeOffheapConcise(CONCISE[i]);\n    ROARING[i]=r;\n    IMMUTABLE_ROARING[i]=makeImmutableRoaring(r);\n    OFF_HEAP_ROARING[i]=makeOffheapRoaring(r);\n    GENERIC_CONCISE[i]=new WrappedImmutableConciseBitmap(OFF_HEAP_CONCISE[i]);\n    GENERIC_ROARING[i]=new WrappedImmutableRoaringBitmap(OFF_HEAP_ROARING[i]);\n  }\n  unionCount=expectedUnion.cardinality();\n  minIntersection=knownTrue.length;\n  printSizeStats(DENSITY,\"Uniform Bitmap\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 211,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1287,
        "startLineNumber" : 34,
        "startColumnNumber" : 2,
        "endLineNumber" : 70,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@BeforeClass public static void prepareMostlyUniform() throws Exception {\n  reset();\n  final BitSet expectedUnion=new BitSet();\n  final int[] knownTrue=new int[MIN_INTERSECT];\n  for (int i=0; i < knownTrue.length; ++i) {\n    knownTrue[i]=rand.nextInt(BITMAP_LENGTH);\n  }\n  for (int i=0; i < NUM_BITMAPS; ++i) {\n    ConciseSet c=new ConciseSet();\n    MutableRoaringBitmap r=new MutableRoaringBitmap();\n    for (int k=0; k < BITMAP_LENGTH; ++k) {\n      if (rand.nextDouble() < DENSITY) {\n        c.add(k);\n        r.add(k);\n        expectedUnion.set(k);\n      }\n    }\n    for (    int k : knownTrue) {\n      c.add(k);\n      r.add(k);\n      expectedUnion.set(k);\n    }\n    CONCISE[i]=ImmutableConciseSet.newImmutableFromMutable(c);\n    OFF_HEAP_CONCISE[i]=makeOffheapConcise(CONCISE[i]);\n    ROARING[i]=r;\n    IMMUTABLE_ROARING[i]=makeImmutableRoaring(r);\n    OFF_HEAP_ROARING[i]=makeOffheapRoaring(r);\n    GENERIC_CONCISE[i]=new WrappedImmutableConciseBitmap(OFF_HEAP_CONCISE[i]);\n    GENERIC_ROARING[i]=new WrappedImmutableRoaringBitmap(OFF_HEAP_ROARING[i]);\n  }\n  unionCount=expectedUnion.cardinality();\n  minIntersection=knownTrue.length;\n  printSizeStats(DENSITY,\"Uniform Bitmap\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 220,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 61,
        "startColumnNumber" : 6,
        "endLineNumber" : 61,
        "endColumnNumber" : 21
      },
      "nodeContext" : "ROARING[i]=r;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.collections.bitmap.ImmutableRoaringBitmap[]"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 61,
    "startColumnNumber" : 6,
    "endLineNumber" : 61,
    "endColumnNumber" : 13
  } ],
  "layoutRelationDataList" : [ ]
}