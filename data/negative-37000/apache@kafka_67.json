{
  "id" : 67,
  "expression" : "metricsRecordingLevel",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/connect/runtime/src/main/java/org/apache/kafka/connect/runtime/ConnectMetrics.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "metricsRecordingLevel",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 83,
      "startColumnNumber" : 54,
      "endLineNumber" : 83,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 83,
        "startColumnNumber" : 24,
        "endLineNumber" : 83,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Sensor.RecordingLevel.forName(metricsRecordingLevel)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 81,
        "startColumnNumber" : 36,
        "endLineNumber" : 83,
        "endColumnNumber" : 77
      },
      "nodeContext" : "new MetricConfig().samples(numSamples).timeWindow(sampleWindowMs,TimeUnit.MILLISECONDS).recordLevel(Sensor.RecordingLevel.forName(metricsRecordingLevel))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 211,
        "startLineNumber" : 81,
        "startColumnNumber" : 21,
        "endLineNumber" : 83,
        "endColumnNumber" : 77
      },
      "nodeContext" : "metricConfig=new MetricConfig().samples(numSamples).timeWindow(sampleWindowMs,TimeUnit.MILLISECONDS).recordLevel(Sensor.RecordingLevel.forName(metricsRecordingLevel))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 225,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 83,
        "endColumnNumber" : 78
      },
      "nodeContext" : "MetricConfig metricConfig=new MetricConfig().samples(numSamples).timeWindow(sampleWindowMs,TimeUnit.MILLISECONDS).recordLevel(Sensor.RecordingLevel.forName(metricsRecordingLevel));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1676,
        "startLineNumber" : 72,
        "startColumnNumber" : 93,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.workerId=workerId;\n  this.time=time;\n  int numSamples=config.getInt(CommonClientConfigs.METRICS_NUM_SAMPLES_CONFIG);\n  long sampleWindowMs=config.getLong(CommonClientConfigs.METRICS_SAMPLE_WINDOW_MS_CONFIG);\n  String metricsRecordingLevel=config.getString(CommonClientConfigs.METRICS_RECORDING_LEVEL_CONFIG);\n  List<MetricsReporter> reporters=config.getConfiguredInstances(CommonClientConfigs.METRIC_REPORTER_CLASSES_CONFIG,MetricsReporter.class);\n  MetricConfig metricConfig=new MetricConfig().samples(numSamples).timeWindow(sampleWindowMs,TimeUnit.MILLISECONDS).recordLevel(Sensor.RecordingLevel.forName(metricsRecordingLevel));\n  JmxReporter jmxReporter=new JmxReporter();\n  jmxReporter.configure(config.originals());\n  reporters.add(jmxReporter);\n  Map<String,Object> contextLabels=new HashMap<>();\n  contextLabels.putAll(config.originalsWithPrefix(CommonClientConfigs.METRICS_CONTEXT_PREFIX));\n  contextLabels.put(WorkerConfig.CONNECT_KAFKA_CLUSTER_ID,clusterId);\n  Object groupId=config.originals().get(DistributedConfig.GROUP_ID_CONFIG);\n  if (groupId != null) {\n    contextLabels.put(WorkerConfig.CONNECT_GROUP_ID,groupId);\n  }\n  MetricsContext metricsContext=new KafkaMetricsContext(JMX_PREFIX,contextLabels);\n  this.metrics=new Metrics(metricConfig,reporters,time,metricsContext);\n  LOG.debug(\"Registering Connect metrics with JMX for worker '{}'\",workerId);\n  AppInfoParser.registerAppInfo(JMX_PREFIX,workerId,metrics,time.milliseconds());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 202,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2036,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Create an instance.\n * @param workerId the worker identifier; may not be null\n * @param config   the worker configuration; may not be null\n * @param time     the time; may not be null\n * @param clusterId the Kafka cluster ID\n */\npublic ConnectMetrics(String workerId,WorkerConfig config,Time time,String clusterId){\n  this.workerId=workerId;\n  this.time=time;\n  int numSamples=config.getInt(CommonClientConfigs.METRICS_NUM_SAMPLES_CONFIG);\n  long sampleWindowMs=config.getLong(CommonClientConfigs.METRICS_SAMPLE_WINDOW_MS_CONFIG);\n  String metricsRecordingLevel=config.getString(CommonClientConfigs.METRICS_RECORDING_LEVEL_CONFIG);\n  List<MetricsReporter> reporters=config.getConfiguredInstances(CommonClientConfigs.METRIC_REPORTER_CLASSES_CONFIG,MetricsReporter.class);\n  MetricConfig metricConfig=new MetricConfig().samples(numSamples).timeWindow(sampleWindowMs,TimeUnit.MILLISECONDS).recordLevel(Sensor.RecordingLevel.forName(metricsRecordingLevel));\n  JmxReporter jmxReporter=new JmxReporter();\n  jmxReporter.configure(config.originals());\n  reporters.add(jmxReporter);\n  Map<String,Object> contextLabels=new HashMap<>();\n  contextLabels.putAll(config.originalsWithPrefix(CommonClientConfigs.METRICS_CONTEXT_PREFIX));\n  contextLabels.put(WorkerConfig.CONNECT_KAFKA_CLUSTER_ID,clusterId);\n  Object groupId=config.originals().get(DistributedConfig.GROUP_ID_CONFIG);\n  if (groupId != null) {\n    contextLabels.put(WorkerConfig.CONNECT_GROUP_ID,groupId);\n  }\n  MetricsContext metricsContext=new KafkaMetricsContext(JMX_PREFIX,contextLabels);\n  this.metrics=new Metrics(metricConfig,reporters,time,metricsContext);\n  LOG.debug(\"Registering Connect metrics with JMX for worker '{}'\",workerId);\n  AppInfoParser.registerAppInfo(JMX_PREFIX,workerId,metrics,time.milliseconds());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 222,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 83,
        "startColumnNumber" : 24,
        "endLineNumber" : 83,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Sensor.RecordingLevel.forName(metricsRecordingLevel)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 83,
    "startColumnNumber" : 54,
    "endLineNumber" : 83,
    "endColumnNumber" : 75
  } ],
  "layoutRelationDataList" : [ ]
}