{
  "id" : 60,
  "expression" : "entry.getValue()",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/microbench/src/main/java/io/netty/handler/codec/http2/HpackEncoderBenchmark.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "entry.getValue()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 90,
      "startColumnNumber" : 53,
      "endLineNumber" : 90,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 90,
        "startColumnNumber" : 20,
        "endLineNumber" : 90,
        "endColumnNumber" : 70
      },
      "nodeContext" : "http2Headers.add(entry.getKey(),entry.getValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 90,
        "startColumnNumber" : 20,
        "endLineNumber" : 90,
        "endColumnNumber" : 71
      },
      "nodeContext" : "http2Headers.add(entry.getKey(),entry.getValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 89,
        "startColumnNumber" : 47,
        "endLineNumber" : 91,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  http2Headers.add(entry.getKey(),entry.getValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 89,
        "startColumnNumber" : 16,
        "endLineNumber" : 91,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (int i=0; i < size; ++i) {\n  http2Headers.add(entry.getKey(),entry.getValue());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 368,
        "startLineNumber" : 85,
        "startColumnNumber" : 26,
        "endLineNumber" : 92,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Iterator<Map.Entry<CharSequence,CharSequence>> itr=http2Headers.iterator();\n  Map.Entry<CharSequence,CharSequence> entry=itr.next();\n  http2Headers.clear();\n  for (int i=0; i < size; ++i) {\n    http2Headers.add(entry.getKey(),entry.getValue());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 382,
        "startLineNumber" : 85,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (size > 0) {\n  Iterator<Map.Entry<CharSequence,CharSequence>> itr=http2Headers.iterator();\n  Map.Entry<CharSequence,CharSequence> entry=itr.next();\n  http2Headers.clear();\n  for (int i=0; i < size; ++i) {\n    http2Headers.add(entry.getKey(),entry.getValue());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 64,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 453,
        "startLineNumber" : 83,
        "startColumnNumber" : 24,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int size=http2Headers.size();\n  if (size > 0) {\n    Iterator<Map.Entry<CharSequence,CharSequence>> itr=http2Headers.iterator();\n    Map.Entry<CharSequence,CharSequence> entry=itr.next();\n    http2Headers.clear();\n    for (int i=0; i < size; ++i) {\n      http2Headers.add(entry.getKey(),entry.getValue());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 469,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (duplicates) {\n  int size=http2Headers.size();\n  if (size > 0) {\n    Iterator<Map.Entry<CharSequence,CharSequence>> itr=http2Headers.iterator();\n    Map.Entry<CharSequence,CharSequence> entry=itr.next();\n    http2Headers.clear();\n    for (int i=0; i < size; ++i) {\n      http2Headers.add(entry.getKey(),entry.getValue());\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 74,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 722,
        "startLineNumber" : 81,
        "startColumnNumber" : 24,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  http2Headers=HpackBenchmarkUtil.http2Headers(size,limitToAscii);\n  if (duplicates) {\n    int size=http2Headers.size();\n    if (size > 0) {\n      Iterator<Map.Entry<CharSequence,CharSequence>> itr=http2Headers.iterator();\n      Map.Entry<CharSequence,CharSequence> entry=itr.next();\n      http2Headers.clear();\n      for (int i=0; i < size; ++i) {\n        http2Headers.add(entry.getKey(),entry.getValue());\n      }\n    }\n  }\n  output=size.newOutBuffer();\n  sensitivityDetector=sensitive ? Http2HeadersEncoder.ALWAYS_SENSITIVE : Http2HeadersEncoder.NEVER_SENSITIVE;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 767,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Setup(Level.Trial) public void setup(){\n  http2Headers=HpackBenchmarkUtil.http2Headers(size,limitToAscii);\n  if (duplicates) {\n    int size=http2Headers.size();\n    if (size > 0) {\n      Iterator<Map.Entry<CharSequence,CharSequence>> itr=http2Headers.iterator();\n      Map.Entry<CharSequence,CharSequence> entry=itr.next();\n      http2Headers.clear();\n      for (int i=0; i < size; ++i) {\n        http2Headers.add(entry.getKey(),entry.getValue());\n      }\n    }\n  }\n  output=size.newOutBuffer();\n  sensitivityDetector=sensitive ? Http2HeadersEncoder.ALWAYS_SENSITIVE : Http2HeadersEncoder.NEVER_SENSITIVE;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 109,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 90,
        "startColumnNumber" : 20,
        "endLineNumber" : 90,
        "endColumnNumber" : 71
      },
      "nodeContext" : "http2Headers.add(entry.getKey(),entry.getValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.CharSequence"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 90,
    "startColumnNumber" : 53,
    "endLineNumber" : 90,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ ]
}