{
  "id" : 100,
  "expression" : "mth.getParameterTypes()[0]",
  "projectName" : "android-hacker@VirtualXposed",
  "commitID" : "8e98dd20e6a751089d4eb2642fa6bf088a3e7a79",
  "filePath" : "/VirtualApp/lib/src/main/java/com/lody/virtual/client/natives/NativeMethods.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mth.getParameterTypes()[0]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 77,
      "startColumnNumber" : 23,
      "endLineNumber" : 77,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 77,
        "startColumnNumber" : 23,
        "endLineNumber" : 77,
        "endColumnNumber" : 65
      },
      "nodeContext" : "mth.getParameterTypes()[0] == String.class",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 75,
        "startColumnNumber" : 16,
        "endLineNumber" : 77,
        "endColumnNumber" : 65
      },
      "nodeContext" : "mth.getName().equals(\"native_check_permission\") && mth.getParameterTypes().length == 1 && mth.getParameterTypes()[0] == String.class",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 314,
        "startLineNumber" : 75,
        "startColumnNumber" : 12,
        "endLineNumber" : 81,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (mth.getName().equals(\"native_check_permission\") && mth.getParameterTypes().length == 1 && mth.getParameterTypes()[0] == String.class) {\n  gAudioRecordNativeCheckPermission=mth;\n  mth.setAccessible(true);\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 338,
        "startLineNumber" : 74,
        "startColumnNumber" : 66,
        "endLineNumber" : 82,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (mth.getName().equals(\"native_check_permission\") && mth.getParameterTypes().length == 1 && mth.getParameterTypes()[0] == String.class) {\n    gAudioRecordNativeCheckPermission=mth;\n    mth.setAccessible(true);\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 396,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Method mth : AudioRecord.class.getDeclaredMethods()) {\n  if (mth.getName().equals(\"native_check_permission\") && mth.getParameterTypes().length == 1 && mth.getParameterTypes()[0] == String.class) {\n    gAudioRecordNativeCheckPermission=mth;\n    mth.setAccessible(true);\n    break;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 47,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2399,
        "startLineNumber" : 23,
        "startColumnNumber" : 30,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String methodName=Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT ? \"openDexFileNative\" : \"openDexFile\";\n  for (  Method method : DexFile.class.getDeclaredMethods()) {\n    if (method.getName().equals(methodName)) {\n      gOpenDexFileNative=method;\n      break;\n    }\n  }\n  if (gOpenDexFileNative == null) {\n    throw new RuntimeException(\"Unable to find method : \" + methodName);\n  }\n  gOpenDexFileNative.setAccessible(true);\n  gCameraMethodType=-1;\n  try {\n    gCameraNativeSetup=Camera.class.getDeclaredMethod(\"native_setup\",Object.class,int.class,String.class);\n    gCameraMethodType=1;\n  }\n catch (  NoSuchMethodException e) {\n  }\n  if (gCameraNativeSetup == null) {\n    try {\n      gCameraNativeSetup=Camera.class.getDeclaredMethod(\"native_setup\",Object.class,int.class,int.class,String.class);\n      gCameraMethodType=2;\n    }\n catch (    NoSuchMethodException e) {\n    }\n  }\n  if (gCameraNativeSetup == null) {\n    try {\n      gCameraNativeSetup=Camera.class.getDeclaredMethod(\"native_setup\",Object.class,int.class,int.class,String.class,boolean.class);\n      gCameraMethodType=3;\n    }\n catch (    NoSuchMethodException e) {\n    }\n  }\n  if (gCameraNativeSetup == null) {\n    try {\n      gCameraNativeSetup=Camera.class.getDeclaredMethod(\"native_setup\",Object.class,int.class,String.class,boolean.class);\n      gCameraMethodType=4;\n    }\n catch (    NoSuchMethodException e) {\n    }\n  }\n  if (gCameraNativeSetup != null) {\n    gCameraNativeSetup.setAccessible(true);\n  }\n  for (  Method mth : AudioRecord.class.getDeclaredMethods()) {\n    if (mth.getName().equals(\"native_check_permission\") && mth.getParameterTypes().length == 1 && mth.getParameterTypes()[0] == String.class) {\n      gAudioRecordNativeCheckPermission=mth;\n      mth.setAccessible(true);\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 262,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2425,
        "startLineNumber" : 23,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void init(){\n  String methodName=Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT ? \"openDexFileNative\" : \"openDexFile\";\n  for (  Method method : DexFile.class.getDeclaredMethods()) {\n    if (method.getName().equals(methodName)) {\n      gOpenDexFileNative=method;\n      break;\n    }\n  }\n  if (gOpenDexFileNative == null) {\n    throw new RuntimeException(\"Unable to find method : \" + methodName);\n  }\n  gOpenDexFileNative.setAccessible(true);\n  gCameraMethodType=-1;\n  try {\n    gCameraNativeSetup=Camera.class.getDeclaredMethod(\"native_setup\",Object.class,int.class,String.class);\n    gCameraMethodType=1;\n  }\n catch (  NoSuchMethodException e) {\n  }\n  if (gCameraNativeSetup == null) {\n    try {\n      gCameraNativeSetup=Camera.class.getDeclaredMethod(\"native_setup\",Object.class,int.class,int.class,String.class);\n      gCameraMethodType=2;\n    }\n catch (    NoSuchMethodException e) {\n    }\n  }\n  if (gCameraNativeSetup == null) {\n    try {\n      gCameraNativeSetup=Camera.class.getDeclaredMethod(\"native_setup\",Object.class,int.class,int.class,String.class,boolean.class);\n      gCameraMethodType=3;\n    }\n catch (    NoSuchMethodException e) {\n    }\n  }\n  if (gCameraNativeSetup == null) {\n    try {\n      gCameraNativeSetup=Camera.class.getDeclaredMethod(\"native_setup\",Object.class,int.class,String.class,boolean.class);\n      gCameraMethodType=4;\n    }\n catch (    NoSuchMethodException e) {\n    }\n  }\n  if (gCameraNativeSetup != null) {\n    gCameraNativeSetup.setAccessible(true);\n  }\n  for (  Method mth : AudioRecord.class.getDeclaredMethods()) {\n    if (mth.getName().equals(\"native_check_permission\") && mth.getParameterTypes().length == 1 && mth.getParameterTypes()[0] == String.class) {\n      gAudioRecordNativeCheckPermission=mth;\n      mth.setAccessible(true);\n      break;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 267,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 77,
        "startColumnNumber" : 23,
        "endLineNumber" : 77,
        "endColumnNumber" : 65
      },
      "nodeContext" : "mth.getParameterTypes()[0] == String.class",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.Class<>"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 77,
    "startColumnNumber" : 23,
    "endLineNumber" : 77,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}