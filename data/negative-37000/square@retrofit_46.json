{
  "id" : 46,
  "expression" : "response.getReason()",
  "projectName" : "square@retrofit",
  "commitID" : "757278c7ab7f6c8e5a40d16a5707c35e0f61c5ab",
  "filePath" : "/retrofit/src/test/java/retrofit/client/OkClientTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "response.getReason()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 81,
      "startColumnNumber" : 15,
      "endLineNumber" : 81,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 36
      },
      "nodeContext" : "assertThat(response.getReason())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertThat(response.getReason()).isEqualTo(\"OK\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertThat(response.getReason()).isEqualTo(\"OK\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 978,
        "startLineNumber" : 65,
        "startColumnNumber" : 50,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  com.squareup.okhttp.Response okResponse=new com.squareup.okhttp.Response.Builder().code(200).message(\"OK\").body(new TestResponseBody(\"hello\",\"text/plain\")).addHeader(\"foo\",\"bar\").addHeader(\"kit\",\"kat\").protocol(Protocol.HTTP_1_1).request(new com.squareup.okhttp.Request.Builder().url(HOST + \"/foo/bar/\").get().build()).build();\n  Response response=OkClient.parseResponse(okResponse);\n  assertThat(response.getUrl()).isEqualTo(HOST + \"/foo/bar/\");\n  assertThat(response.getStatus()).isEqualTo(200);\n  assertThat(response.getReason()).isEqualTo(\"OK\");\n  assertThat(response.getHeaders()).containsOnly(new Header(\"foo\",\"bar\"),new Header(\"kit\",\"kat\"));\n  TypedInput responseBody=response.getBody();\n  assertThat(responseBody.mimeType()).isEqualTo(\"text/plain\");\n  assertBytes(ByteStreams.toByteArray(responseBody.in()),\"hello\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1026,
        "startLineNumber" : 65,
        "startColumnNumber" : 2,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void response() throws IOException {\n  com.squareup.okhttp.Response okResponse=new com.squareup.okhttp.Response.Builder().code(200).message(\"OK\").body(new TestResponseBody(\"hello\",\"text/plain\")).addHeader(\"foo\",\"bar\").addHeader(\"kit\",\"kat\").protocol(Protocol.HTTP_1_1).request(new com.squareup.okhttp.Request.Builder().url(HOST + \"/foo/bar/\").get().build()).build();\n  Response response=OkClient.parseResponse(okResponse);\n  assertThat(response.getUrl()).isEqualTo(HOST + \"/foo/bar/\");\n  assertThat(response.getStatus()).isEqualTo(200);\n  assertThat(response.getReason()).isEqualTo(\"OK\");\n  assertThat(response.getHeaders()).containsOnly(new Header(\"foo\",\"bar\"),new Header(\"kit\",\"kat\"));\n  TypedInput responseBody=response.getBody();\n  assertThat(responseBody.mimeType()).isEqualTo(\"text/plain\");\n  assertBytes(ByteStreams.toByteArray(responseBody.in()),\"hello\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 164,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertThat(response.getReason()).isEqualTo(\"OK\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 81,
    "startColumnNumber" : 15,
    "endLineNumber" : 81,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}