{
  "id" : 345,
  "expression" : "remoteaddr",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/app/src/processing/app/debug/EasySSLProtocolSocketFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "remoteaddr",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 191,
      "startColumnNumber" : 21,
      "endLineNumber" : 191,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 191,
        "startColumnNumber" : 6,
        "endLineNumber" : 191,
        "endColumnNumber" : 41
      },
      "nodeContext" : "socket.connect(remoteaddr,timeout)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 191,
        "startColumnNumber" : 6,
        "endLineNumber" : 191,
        "endColumnNumber" : 42
      },
      "nodeContext" : "socket.connect(remoteaddr,timeout);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 273,
        "startLineNumber" : 186,
        "startColumnNumber" : 11,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  socket=socketfactory.createSocket();\n  SocketAddress localaddr=new InetSocketAddress(localAddress,localPort);\n  SocketAddress remoteaddr=new InetSocketAddress(host,port);\n  socket.bind(localaddr);\n  socket.connect(remoteaddr,timeout);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 384,
        "startLineNumber" : 184,
        "startColumnNumber" : 4,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (timeout == 0) {\n  socket=socketfactory.createSocket(host,port,localAddress,localPort);\n}\n else {\n  socket=socketfactory.createSocket();\n  SocketAddress localaddr=new InetSocketAddress(localAddress,localPort);\n  SocketAddress remoteaddr=new InetSocketAddress(host,port);\n  socket.bind(localaddr);\n  socket.connect(remoteaddr,timeout);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 53,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 810,
        "startLineNumber" : 177,
        "startColumnNumber" : 70,
        "endLineNumber" : 199,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (params == null) {\n    throw new IllegalArgumentException(\"Parameters may not be null\");\n  }\n  int timeout=params.getConnectionTimeout();\n  SocketFactory socketfactory=getSSLContext().getSocketFactory();\n  Socket socket;\n  if (timeout == 0) {\n    socket=socketfactory.createSocket(host,port,localAddress,localPort);\n  }\n else {\n    socket=socketfactory.createSocket();\n    SocketAddress localaddr=new InetSocketAddress(localAddress,localPort);\n    SocketAddress remoteaddr=new InetSocketAddress(host,port);\n    socket.bind(localaddr);\n    socket.connect(remoteaddr,timeout);\n  }\n  SSLSocket sslSocket=(SSLSocket)socket;\n  sslSocket.setEnabledProtocols(SSL_PROTOCOLS);\n  sslSocket.setEnabledCipherSuites(SSL_CYPHER_SUITES);\n  return socket;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2083,
        "startLineNumber" : 152,
        "startColumnNumber" : 2,
        "endLineNumber" : 199,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Attempts to get a new socket connection to the given host within the given time limit. <p> To circumvent the limitations of older JREs that do not support connect timeout a controller thread is executed. The controller thread attempts to create a new socket within the given limit of time. If socket constructor does not return until the timeout expires, the controller terminates and throws an  {@link ConnectTimeoutException}</p>\n * @param host       the host name/IP\n * @param port       the port on the host\n * @param clientHost the local host name/IP to bind the socket to\n * @param clientPort the port on the local machine\n * @param params     {@link HttpConnectionParams Http connection parameters}\n * @return Socket a new socket\n * @throws IOException          if an I/O error occurs while creating the socket\n * @throws UnknownHostException if the IP address of the host cannot bedetermined\n */\npublic Socket createSocket(final String host,final int port,final InetAddress localAddress,final int localPort,final HttpConnectionParams params) throws IOException, UnknownHostException, ConnectTimeoutException {\n  if (params == null) {\n    throw new IllegalArgumentException(\"Parameters may not be null\");\n  }\n  int timeout=params.getConnectionTimeout();\n  SocketFactory socketfactory=getSSLContext().getSocketFactory();\n  Socket socket;\n  if (timeout == 0) {\n    socket=socketfactory.createSocket(host,port,localAddress,localPort);\n  }\n else {\n    socket=socketfactory.createSocket();\n    SocketAddress localaddr=new InetSocketAddress(localAddress,localPort);\n    SocketAddress remoteaddr=new InetSocketAddress(host,port);\n    socket.bind(localaddr);\n    socket.connect(remoteaddr,timeout);\n  }\n  SSLSocket sslSocket=(SSLSocket)socket;\n  sslSocket.setEnabledProtocols(SSL_PROTOCOLS);\n  sslSocket.setEnabledCipherSuites(SSL_CYPHER_SUITES);\n  return socket;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 141,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 191,
        "startColumnNumber" : 6,
        "endLineNumber" : 191,
        "endColumnNumber" : 42
      },
      "nodeContext" : "socket.connect(remoteaddr,timeout);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.net.SocketAddress"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 191,
    "startColumnNumber" : 21,
    "endLineNumber" : 191,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}