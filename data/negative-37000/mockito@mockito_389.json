{
  "id" : 389,
  "expression" : "mock == null",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/main/java/org/mockito/internal/stubbing/StubberImpl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mock == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 38,
      "startColumnNumber" : 12,
      "endLineNumber" : 38,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mock == null) {\n  mockingProgress().reset();\n  throw nullPassedToWhenMethod();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 382,
        "startLineNumber" : 37,
        "startColumnNumber" : 30,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mock == null) {\n    mockingProgress().reset();\n    throw nullPassedToWhenMethod();\n  }\n  if (!isMock(mock)) {\n    mockingProgress().reset();\n    throw notAMockPassedToWhenMethod();\n  }\n  MockUtil.getInvocationContainer(mock).setAnswersForStubbing(answers,strictness);\n  return mock;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 423,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public <T>T when(T mock){\n  if (mock == null) {\n    mockingProgress().reset();\n    throw nullPassedToWhenMethod();\n  }\n  if (!isMock(mock)) {\n    mockingProgress().reset();\n    throw notAMockPassedToWhenMethod();\n  }\n  MockUtil.getInvocationContainer(mock).setAnswersForStubbing(answers,strictness);\n  return mock;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 52,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mock == null) {\n  mockingProgress().reset();\n  throw nullPassedToWhenMethod();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 38,
    "startColumnNumber" : 12,
    "endLineNumber" : 38,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ ]
}