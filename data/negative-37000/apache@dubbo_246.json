{
  "id" : 246,
  "expression" : "helloServiceWithMethod2",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/reference/ReferenceKeyTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "helloServiceWithMethod2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 82,
      "startColumnNumber" : 57,
      "endLineNumber" : 82,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 81
      },
      "nodeContext" : "Assertions.assertEquals(helloServiceWithMethod1,helloServiceWithMethod2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 82
      },
      "nodeContext" : "Assertions.assertEquals(helloServiceWithMethod1,helloServiceWithMethod2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2630,
        "startLineNumber" : 46,
        "startColumnNumber" : 52,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String helloService1=getReferenceKey(\"helloService\");\n  String helloService2=getReferenceKey(\"helloService2\");\n  String helloService3=getReferenceKey(\"helloService3\");\n  String helloService4=getReferenceKey(\"helloService4\");\n  Assertions.assertEquals(\"ReferenceBean:org.apache.dubbo.config.spring.api.HelloService(methods=[{name=sayHello, retries=0, timeout=100}])\",helloService1);\n  Assertions.assertEquals(helloService1,helloService2);\n  Assertions.assertEquals(\"ReferenceBean:org.apache.dubbo.config.spring.api.HelloService(methods=[{arguments=[{callback=true, index=0}], name=sayHello, timeout=100}])\",helloService3);\n  Assertions.assertEquals(helloService3,helloService4);\n  String helloServiceWithArray0=getReferenceKey(\"helloServiceWithArray0\");\n  String helloServiceWithArray1=getReferenceKey(\"helloServiceWithArray1\");\n  String helloServiceWithArray2=getReferenceKey(\"helloServiceWithArray2\");\n  String helloServiceWithMethod1=getReferenceKey(\"helloServiceWithMethod1\");\n  String helloServiceWithMethod2=getReferenceKey(\"helloServiceWithMethod2\");\n  String helloServiceWithArgument1=getReferenceKey(\"helloServiceWithArgument1\");\n  String helloServiceWithArgument2=getReferenceKey(\"helloServiceWithArgument2\");\n  Assertions.assertEquals(\"ReferenceBean:org.apache.dubbo.config.spring.api.HelloService(check=false,filter=[echo],parameters={a=2, b=1})\",helloServiceWithArray0);\n  Assertions.assertNotEquals(helloServiceWithArray0,helloServiceWithArray1);\n  Assertions.assertEquals(\"ReferenceBean:org.apache.dubbo.config.spring.api.HelloService(check=false,filter=[echo],parameters={a=1, b=2})\",helloServiceWithArray1);\n  Assertions.assertEquals(helloServiceWithArray1,helloServiceWithArray2);\n  Assertions.assertEquals(\"ReferenceBean:org.apache.dubbo.config.spring.api.HelloService(check=false,filter=[echo],methods=[{name=sayHello, parameters={c=1, d=2}, timeout=100}],parameters={a=1, b=2})\",helloServiceWithMethod1);\n  Assertions.assertEquals(helloServiceWithMethod1,helloServiceWithMethod2);\n  Assertions.assertEquals(\"ReferenceBean:org.apache.dubbo.config.spring.api.HelloService(check=false,filter=[echo],methods=[{arguments=[{callback=true, type=String}, {type=int}], name=sayHello, timeout=100}],parameters={a=1, b=2})\",helloServiceWithArgument1);\n  Assertions.assertEquals(helloServiceWithArgument1,helloServiceWithArgument2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2688,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testReferenceKey() throws Exception {\n  String helloService1=getReferenceKey(\"helloService\");\n  String helloService2=getReferenceKey(\"helloService2\");\n  String helloService3=getReferenceKey(\"helloService3\");\n  String helloService4=getReferenceKey(\"helloService4\");\n  Assertions.assertEquals(\"ReferenceBean:org.apache.dubbo.config.spring.api.HelloService(methods=[{name=sayHello, retries=0, timeout=100}])\",helloService1);\n  Assertions.assertEquals(helloService1,helloService2);\n  Assertions.assertEquals(\"ReferenceBean:org.apache.dubbo.config.spring.api.HelloService(methods=[{arguments=[{callback=true, index=0}], name=sayHello, timeout=100}])\",helloService3);\n  Assertions.assertEquals(helloService3,helloService4);\n  String helloServiceWithArray0=getReferenceKey(\"helloServiceWithArray0\");\n  String helloServiceWithArray1=getReferenceKey(\"helloServiceWithArray1\");\n  String helloServiceWithArray2=getReferenceKey(\"helloServiceWithArray2\");\n  String helloServiceWithMethod1=getReferenceKey(\"helloServiceWithMethod1\");\n  String helloServiceWithMethod2=getReferenceKey(\"helloServiceWithMethod2\");\n  String helloServiceWithArgument1=getReferenceKey(\"helloServiceWithArgument1\");\n  String helloServiceWithArgument2=getReferenceKey(\"helloServiceWithArgument2\");\n  Assertions.assertEquals(\"ReferenceBean:org.apache.dubbo.config.spring.api.HelloService(check=false,filter=[echo],parameters={a=2, b=1})\",helloServiceWithArray0);\n  Assertions.assertNotEquals(helloServiceWithArray0,helloServiceWithArray1);\n  Assertions.assertEquals(\"ReferenceBean:org.apache.dubbo.config.spring.api.HelloService(check=false,filter=[echo],parameters={a=1, b=2})\",helloServiceWithArray1);\n  Assertions.assertEquals(helloServiceWithArray1,helloServiceWithArray2);\n  Assertions.assertEquals(\"ReferenceBean:org.apache.dubbo.config.spring.api.HelloService(check=false,filter=[echo],methods=[{name=sayHello, parameters={c=1, d=2}, timeout=100}],parameters={a=1, b=2})\",helloServiceWithMethod1);\n  Assertions.assertEquals(helloServiceWithMethod1,helloServiceWithMethod2);\n  Assertions.assertEquals(\"ReferenceBean:org.apache.dubbo.config.spring.api.HelloService(check=false,filter=[echo],methods=[{arguments=[{callback=true, type=String}, {type=int}], name=sayHello, timeout=100}],parameters={a=1, b=2})\",helloServiceWithArgument1);\n  Assertions.assertEquals(helloServiceWithArgument1,helloServiceWithArgument2);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 169,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 82
      },
      "nodeContext" : "Assertions.assertEquals(helloServiceWithMethod1,helloServiceWithMethod2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 82,
    "startColumnNumber" : 57,
    "endLineNumber" : 82,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ ]
}