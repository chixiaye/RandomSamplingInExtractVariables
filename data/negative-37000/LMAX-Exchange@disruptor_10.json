{
  "id" : 10,
  "expression" : "ringBuffer.newBarrier(Util.getSequencesFor(eventProcessor1,eventProcessor2,eventProcessor3))",
  "projectName" : "LMAX-Exchange@disruptor",
  "commitID" : "6d8500d39ac15cc2fdbc3dbf2e3a97fbe425b8fa",
  "filePath" : "/src/test/java/com/lmax/disruptor/SequenceBarrierTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ringBuffer.newBarrier(Util.getSequencesFor(eventProcessor1,eventProcessor2,eventProcessor3))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 94,
      "startLineNumber" : 144,
      "startColumnNumber" : 12,
      "endLineNumber" : 144,
      "endColumnNumber" : 106
    },
    "astNodeNumber" : 9,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 143,
        "startColumnNumber" : 30,
        "endLineNumber" : 144,
        "endColumnNumber" : 106
      },
      "nodeContext" : "sequenceBarrier=ringBuffer.newBarrier(Util.getSequencesFor(eventProcessor1,eventProcessor2,eventProcessor3))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 143,
        "startColumnNumber" : 8,
        "endLineNumber" : 144,
        "endColumnNumber" : 107
      },
      "nodeContext" : "final SequenceBarrier sequenceBarrier=ringBuffer.newBarrier(Util.getSequencesFor(eventProcessor1,eventProcessor2,eventProcessor3));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1643,
        "startLineNumber" : 120,
        "startColumnNumber" : 4,
        "endLineNumber" : 172,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final long expectedNumberMessages=10;\n  fillRingBuffer(expectedNumberMessages);\n  final CountDownLatch latch=new CountDownLatch(3);\n  final Sequence sequence1=new CountDownLatchSequence(8L,latch);\n  final Sequence sequence2=new CountDownLatchSequence(8L,latch);\n  final Sequence sequence3=new CountDownLatchSequence(8L,latch);\n  context.checking(new Expectations(){\n{\n      one(eventProcessor1).getSequence();\n      will(returnValue(sequence1));\n      one(eventProcessor2).getSequence();\n      will(returnValue(sequence2));\n      one(eventProcessor3).getSequence();\n      will(returnValue(sequence3));\n    }\n  }\n);\n  final SequenceBarrier sequenceBarrier=ringBuffer.newBarrier(Util.getSequencesFor(eventProcessor1,eventProcessor2,eventProcessor3));\n  final boolean[] alerted={false};\n  Thread t=new Thread(new Runnable(){\n    public void run(){\n      try {\n        sequenceBarrier.waitFor(expectedNumberMessages - 1);\n      }\n catch (      AlertException e) {\n        alerted[0]=true;\n      }\ncatch (      InterruptedException e) {\n      }\n    }\n  }\n);\n  t.start();\n  latch.await(3,TimeUnit.SECONDS);\n  sequenceBarrier.alert();\n  t.join();\n  assertTrue(\"Thread was not interrupted\",alerted[0]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 195,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1718,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 172,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldInterruptDuringBusySpin() throws Exception {\n  final long expectedNumberMessages=10;\n  fillRingBuffer(expectedNumberMessages);\n  final CountDownLatch latch=new CountDownLatch(3);\n  final Sequence sequence1=new CountDownLatchSequence(8L,latch);\n  final Sequence sequence2=new CountDownLatchSequence(8L,latch);\n  final Sequence sequence3=new CountDownLatchSequence(8L,latch);\n  context.checking(new Expectations(){\n{\n      one(eventProcessor1).getSequence();\n      will(returnValue(sequence1));\n      one(eventProcessor2).getSequence();\n      will(returnValue(sequence2));\n      one(eventProcessor3).getSequence();\n      will(returnValue(sequence3));\n    }\n  }\n);\n  final SequenceBarrier sequenceBarrier=ringBuffer.newBarrier(Util.getSequencesFor(eventProcessor1,eventProcessor2,eventProcessor3));\n  final boolean[] alerted={false};\n  Thread t=new Thread(new Runnable(){\n    public void run(){\n      try {\n        sequenceBarrier.waitFor(expectedNumberMessages - 1);\n      }\n catch (      AlertException e) {\n        alerted[0]=true;\n      }\ncatch (      InterruptedException e) {\n      }\n    }\n  }\n);\n  t.start();\n  latch.await(3,TimeUnit.SECONDS);\n  sequenceBarrier.alert();\n  t.join();\n  assertTrue(\"Thread was not interrupted\",alerted[0]);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 203,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 143,
        "startColumnNumber" : 30,
        "endLineNumber" : 144,
        "endColumnNumber" : 106
      },
      "nodeContext" : "sequenceBarrier=ringBuffer.newBarrier(Util.getSequencesFor(eventProcessor1,eventProcessor2,eventProcessor3))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 7,
    "type" : "com.lmax.disruptor.SequenceBarrier"
  } ],
  "positionList" : [ {
    "charLength" : 94,
    "startLineNumber" : 144,
    "startColumnNumber" : 12,
    "endLineNumber" : 144,
    "endColumnNumber" : 106
  } ],
  "layoutRelationDataList" : [ ]
}