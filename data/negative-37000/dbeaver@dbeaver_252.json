{
  "id" : 252,
  "expression" : "parseItem(isDigit,version.substring(startIndex,i))",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.registry/src/org/jkiss/dbeaver/registry/maven/versioning/ComparableVersion.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "parseItem(isDigit,version.substring(startIndex,i))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 52,
      "startLineNumber" : 327,
      "startColumnNumber" : 29,
      "endLineNumber" : 327,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 8,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 327,
        "startColumnNumber" : 20,
        "endLineNumber" : 327,
        "endColumnNumber" : 82
      },
      "nodeContext" : "list.add(parseItem(isDigit,version.substring(startIndex,i)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 327,
        "startColumnNumber" : 20,
        "endLineNumber" : 327,
        "endColumnNumber" : 83
      },
      "nodeContext" : "list.add(parseItem(isDigit,version.substring(startIndex,i)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 326,
        "startColumnNumber" : 23,
        "endLineNumber" : 328,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  list.add(parseItem(isDigit,version.substring(startIndex,i)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 324,
        "startColumnNumber" : 16,
        "endLineNumber" : 328,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (i == startIndex) {\n  list.add(IntegerItem.ZERO);\n}\n else {\n  list.add(parseItem(isDigit,version.substring(startIndex,i)));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 265,
        "startLineNumber" : 323,
        "startColumnNumber" : 26,
        "endLineNumber" : 330,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (i == startIndex) {\n    list.add(IntegerItem.ZERO);\n  }\n else {\n    list.add(parseItem(isDigit,version.substring(startIndex,i)));\n  }\n  startIndex=i + 1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1341,
        "startLineNumber" : 323,
        "startColumnNumber" : 12,
        "endLineNumber" : 360,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (c == '.') {\n  if (i == startIndex) {\n    list.add(IntegerItem.ZERO);\n  }\n else {\n    list.add(parseItem(isDigit,version.substring(startIndex,i)));\n  }\n  startIndex=i + 1;\n}\n else if (c == '-') {\n  if (i == startIndex) {\n    list.add(IntegerItem.ZERO);\n  }\n else {\n    list.add(parseItem(isDigit,version.substring(startIndex,i)));\n  }\n  startIndex=i + 1;\n  list.add(list=new ListItem());\n  stack.push(list);\n}\n else if (Character.isDigit(c)) {\n  if (!isDigit && i > startIndex) {\n    list.add(new StringItem(version.substring(startIndex,i),true));\n    startIndex=i;\n    list.add(list=new ListItem());\n    stack.push(list);\n  }\n  isDigit=true;\n}\n else {\n  if (isDigit && i > startIndex) {\n    list.add(parseItem(true,version.substring(startIndex,i)));\n    startIndex=i;\n    list.add(list=new ListItem());\n    stack.push(list);\n  }\n  isDigit=false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 177,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1406,
        "startLineNumber" : 320,
        "startColumnNumber" : 51,
        "endLineNumber" : 361,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  char c=version.charAt(i);\n  if (c == '.') {\n    if (i == startIndex) {\n      list.add(IntegerItem.ZERO);\n    }\n else {\n      list.add(parseItem(isDigit,version.substring(startIndex,i)));\n    }\n    startIndex=i + 1;\n  }\n else   if (c == '-') {\n    if (i == startIndex) {\n      list.add(IntegerItem.ZERO);\n    }\n else {\n      list.add(parseItem(isDigit,version.substring(startIndex,i)));\n    }\n    startIndex=i + 1;\n    list.add(list=new ListItem());\n    stack.push(list);\n  }\n else   if (Character.isDigit(c)) {\n    if (!isDigit && i > startIndex) {\n      list.add(new StringItem(version.substring(startIndex,i),true));\n      startIndex=i;\n      list.add(list=new ListItem());\n      stack.push(list);\n    }\n    isDigit=true;\n  }\n else {\n    if (isDigit && i > startIndex) {\n      list.add(parseItem(true,version.substring(startIndex,i)));\n      startIndex=i;\n      list.add(list=new ListItem());\n      stack.push(list);\n    }\n    isDigit=false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 186,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1449,
        "startLineNumber" : 320,
        "startColumnNumber" : 8,
        "endLineNumber" : 361,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < version.length(); i++) {\n  char c=version.charAt(i);\n  if (c == '.') {\n    if (i == startIndex) {\n      list.add(IntegerItem.ZERO);\n    }\n else {\n      list.add(parseItem(isDigit,version.substring(startIndex,i)));\n    }\n    startIndex=i + 1;\n  }\n else   if (c == '-') {\n    if (i == startIndex) {\n      list.add(IntegerItem.ZERO);\n    }\n else {\n      list.add(parseItem(isDigit,version.substring(startIndex,i)));\n    }\n    startIndex=i + 1;\n    list.add(list=new ListItem());\n    stack.push(list);\n  }\n else   if (Character.isDigit(c)) {\n    if (!isDigit && i > startIndex) {\n      list.add(new StringItem(version.substring(startIndex,i),true));\n      startIndex=i;\n      list.add(list=new ListItem());\n      stack.push(list);\n    }\n    isDigit=true;\n  }\n else {\n    if (isDigit && i > startIndex) {\n      list.add(parseItem(true,version.substring(startIndex,i)));\n      startIndex=i;\n      list.add(list=new ListItem());\n      stack.push(list);\n    }\n    isDigit=false;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 199,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2037,
        "startLineNumber" : 304,
        "startColumnNumber" : 46,
        "endLineNumber" : 373,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.value=version;\n  items=new ListItem();\n  version=version.toLowerCase(Locale.ENGLISH);\n  ListItem list=items;\n  Stack<Item> stack=new Stack<>();\n  stack.push(list);\n  boolean isDigit=false;\n  int startIndex=0;\n  for (int i=0; i < version.length(); i++) {\n    char c=version.charAt(i);\n    if (c == '.') {\n      if (i == startIndex) {\n        list.add(IntegerItem.ZERO);\n      }\n else {\n        list.add(parseItem(isDigit,version.substring(startIndex,i)));\n      }\n      startIndex=i + 1;\n    }\n else     if (c == '-') {\n      if (i == startIndex) {\n        list.add(IntegerItem.ZERO);\n      }\n else {\n        list.add(parseItem(isDigit,version.substring(startIndex,i)));\n      }\n      startIndex=i + 1;\n      list.add(list=new ListItem());\n      stack.push(list);\n    }\n else     if (Character.isDigit(c)) {\n      if (!isDigit && i > startIndex) {\n        list.add(new StringItem(version.substring(startIndex,i),true));\n        startIndex=i;\n        list.add(list=new ListItem());\n        stack.push(list);\n      }\n      isDigit=true;\n    }\n else {\n      if (isDigit && i > startIndex) {\n        list.add(parseItem(true,version.substring(startIndex,i)));\n        startIndex=i;\n        list.add(list=new ListItem());\n        stack.push(list);\n      }\n      isDigit=false;\n    }\n  }\n  if (version.length() > startIndex) {\n    list.add(parseItem(isDigit,version.substring(startIndex)));\n  }\n  while (!stack.isEmpty()) {\n    list=(ListItem)stack.pop();\n    list.normalize();\n  }\n  canonical=items.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 297,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2079,
        "startLineNumber" : 304,
        "startColumnNumber" : 4,
        "endLineNumber" : 373,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void parseVersion(String version){\n  this.value=version;\n  items=new ListItem();\n  version=version.toLowerCase(Locale.ENGLISH);\n  ListItem list=items;\n  Stack<Item> stack=new Stack<>();\n  stack.push(list);\n  boolean isDigit=false;\n  int startIndex=0;\n  for (int i=0; i < version.length(); i++) {\n    char c=version.charAt(i);\n    if (c == '.') {\n      if (i == startIndex) {\n        list.add(IntegerItem.ZERO);\n      }\n else {\n        list.add(parseItem(isDigit,version.substring(startIndex,i)));\n      }\n      startIndex=i + 1;\n    }\n else     if (c == '-') {\n      if (i == startIndex) {\n        list.add(IntegerItem.ZERO);\n      }\n else {\n        list.add(parseItem(isDigit,version.substring(startIndex,i)));\n      }\n      startIndex=i + 1;\n      list.add(list=new ListItem());\n      stack.push(list);\n    }\n else     if (Character.isDigit(c)) {\n      if (!isDigit && i > startIndex) {\n        list.add(new StringItem(version.substring(startIndex,i),true));\n        startIndex=i;\n        list.add(list=new ListItem());\n        stack.push(list);\n      }\n      isDigit=true;\n    }\n else {\n      if (isDigit && i > startIndex) {\n        list.add(parseItem(true,version.substring(startIndex,i)));\n        startIndex=i;\n        list.add(list=new ListItem());\n        stack.push(list);\n      }\n      isDigit=false;\n    }\n  }\n  if (version.length() > startIndex) {\n    list.add(parseItem(isDigit,version.substring(startIndex)));\n  }\n  while (!stack.isEmpty()) {\n    list=(ListItem)stack.pop();\n    list.normalize();\n  }\n  canonical=items.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 305,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 327,
        "startColumnNumber" : 20,
        "endLineNumber" : 327,
        "endColumnNumber" : 83
      },
      "nodeContext" : "list.add(parseItem(isDigit,version.substring(startIndex,i)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 6,
    "type" : "org.jkiss.dbeaver.registry.maven.versioning.ComparableVersion.Item"
  }, {
    "nodeContext" : "parseItem(isDigit,version.substring(startIndex,i))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 52,
      "startLineNumber" : 334,
      "startColumnNumber" : 29,
      "endLineNumber" : 334,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 8,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 334,
        "startColumnNumber" : 20,
        "endLineNumber" : 334,
        "endColumnNumber" : 82
      },
      "nodeContext" : "list.add(parseItem(isDigit,version.substring(startIndex,i)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 334,
        "startColumnNumber" : 20,
        "endLineNumber" : 334,
        "endColumnNumber" : 83
      },
      "nodeContext" : "list.add(parseItem(isDigit,version.substring(startIndex,i)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 333,
        "startColumnNumber" : 23,
        "endLineNumber" : 335,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  list.add(parseItem(isDigit,version.substring(startIndex,i)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 331,
        "startColumnNumber" : 16,
        "endLineNumber" : 335,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (i == startIndex) {\n  list.add(IntegerItem.ZERO);\n}\n else {\n  list.add(parseItem(isDigit,version.substring(startIndex,i)));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 349,
        "startLineNumber" : 330,
        "startColumnNumber" : 33,
        "endLineNumber" : 340,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (i == startIndex) {\n    list.add(IntegerItem.ZERO);\n  }\n else {\n    list.add(parseItem(isDigit,version.substring(startIndex,i)));\n  }\n  startIndex=i + 1;\n  list.add(list=new ListItem());\n  stack.push(list);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1056,
        "startLineNumber" : 330,
        "startColumnNumber" : 19,
        "endLineNumber" : 360,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (c == '-') {\n  if (i == startIndex) {\n    list.add(IntegerItem.ZERO);\n  }\n else {\n    list.add(parseItem(isDigit,version.substring(startIndex,i)));\n  }\n  startIndex=i + 1;\n  list.add(list=new ListItem());\n  stack.push(list);\n}\n else if (Character.isDigit(c)) {\n  if (!isDigit && i > startIndex) {\n    list.add(new StringItem(version.substring(startIndex,i),true));\n    startIndex=i;\n    list.add(list=new ListItem());\n    stack.push(list);\n  }\n  isDigit=true;\n}\n else {\n  if (isDigit && i > startIndex) {\n    list.add(parseItem(true,version.substring(startIndex,i)));\n    startIndex=i;\n    list.add(list=new ListItem());\n    stack.push(list);\n  }\n  isDigit=false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 141,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1341,
        "startLineNumber" : 323,
        "startColumnNumber" : 12,
        "endLineNumber" : 360,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (c == '.') {\n  if (i == startIndex) {\n    list.add(IntegerItem.ZERO);\n  }\n else {\n    list.add(parseItem(isDigit,version.substring(startIndex,i)));\n  }\n  startIndex=i + 1;\n}\n else if (c == '-') {\n  if (i == startIndex) {\n    list.add(IntegerItem.ZERO);\n  }\n else {\n    list.add(parseItem(isDigit,version.substring(startIndex,i)));\n  }\n  startIndex=i + 1;\n  list.add(list=new ListItem());\n  stack.push(list);\n}\n else if (Character.isDigit(c)) {\n  if (!isDigit && i > startIndex) {\n    list.add(new StringItem(version.substring(startIndex,i),true));\n    startIndex=i;\n    list.add(list=new ListItem());\n    stack.push(list);\n  }\n  isDigit=true;\n}\n else {\n  if (isDigit && i > startIndex) {\n    list.add(parseItem(true,version.substring(startIndex,i)));\n    startIndex=i;\n    list.add(list=new ListItem());\n    stack.push(list);\n  }\n  isDigit=false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 177,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1406,
        "startLineNumber" : 320,
        "startColumnNumber" : 51,
        "endLineNumber" : 361,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  char c=version.charAt(i);\n  if (c == '.') {\n    if (i == startIndex) {\n      list.add(IntegerItem.ZERO);\n    }\n else {\n      list.add(parseItem(isDigit,version.substring(startIndex,i)));\n    }\n    startIndex=i + 1;\n  }\n else   if (c == '-') {\n    if (i == startIndex) {\n      list.add(IntegerItem.ZERO);\n    }\n else {\n      list.add(parseItem(isDigit,version.substring(startIndex,i)));\n    }\n    startIndex=i + 1;\n    list.add(list=new ListItem());\n    stack.push(list);\n  }\n else   if (Character.isDigit(c)) {\n    if (!isDigit && i > startIndex) {\n      list.add(new StringItem(version.substring(startIndex,i),true));\n      startIndex=i;\n      list.add(list=new ListItem());\n      stack.push(list);\n    }\n    isDigit=true;\n  }\n else {\n    if (isDigit && i > startIndex) {\n      list.add(parseItem(true,version.substring(startIndex,i)));\n      startIndex=i;\n      list.add(list=new ListItem());\n      stack.push(list);\n    }\n    isDigit=false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 186,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1449,
        "startLineNumber" : 320,
        "startColumnNumber" : 8,
        "endLineNumber" : 361,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < version.length(); i++) {\n  char c=version.charAt(i);\n  if (c == '.') {\n    if (i == startIndex) {\n      list.add(IntegerItem.ZERO);\n    }\n else {\n      list.add(parseItem(isDigit,version.substring(startIndex,i)));\n    }\n    startIndex=i + 1;\n  }\n else   if (c == '-') {\n    if (i == startIndex) {\n      list.add(IntegerItem.ZERO);\n    }\n else {\n      list.add(parseItem(isDigit,version.substring(startIndex,i)));\n    }\n    startIndex=i + 1;\n    list.add(list=new ListItem());\n    stack.push(list);\n  }\n else   if (Character.isDigit(c)) {\n    if (!isDigit && i > startIndex) {\n      list.add(new StringItem(version.substring(startIndex,i),true));\n      startIndex=i;\n      list.add(list=new ListItem());\n      stack.push(list);\n    }\n    isDigit=true;\n  }\n else {\n    if (isDigit && i > startIndex) {\n      list.add(parseItem(true,version.substring(startIndex,i)));\n      startIndex=i;\n      list.add(list=new ListItem());\n      stack.push(list);\n    }\n    isDigit=false;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 199,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2037,
        "startLineNumber" : 304,
        "startColumnNumber" : 46,
        "endLineNumber" : 373,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.value=version;\n  items=new ListItem();\n  version=version.toLowerCase(Locale.ENGLISH);\n  ListItem list=items;\n  Stack<Item> stack=new Stack<>();\n  stack.push(list);\n  boolean isDigit=false;\n  int startIndex=0;\n  for (int i=0; i < version.length(); i++) {\n    char c=version.charAt(i);\n    if (c == '.') {\n      if (i == startIndex) {\n        list.add(IntegerItem.ZERO);\n      }\n else {\n        list.add(parseItem(isDigit,version.substring(startIndex,i)));\n      }\n      startIndex=i + 1;\n    }\n else     if (c == '-') {\n      if (i == startIndex) {\n        list.add(IntegerItem.ZERO);\n      }\n else {\n        list.add(parseItem(isDigit,version.substring(startIndex,i)));\n      }\n      startIndex=i + 1;\n      list.add(list=new ListItem());\n      stack.push(list);\n    }\n else     if (Character.isDigit(c)) {\n      if (!isDigit && i > startIndex) {\n        list.add(new StringItem(version.substring(startIndex,i),true));\n        startIndex=i;\n        list.add(list=new ListItem());\n        stack.push(list);\n      }\n      isDigit=true;\n    }\n else {\n      if (isDigit && i > startIndex) {\n        list.add(parseItem(true,version.substring(startIndex,i)));\n        startIndex=i;\n        list.add(list=new ListItem());\n        stack.push(list);\n      }\n      isDigit=false;\n    }\n  }\n  if (version.length() > startIndex) {\n    list.add(parseItem(isDigit,version.substring(startIndex)));\n  }\n  while (!stack.isEmpty()) {\n    list=(ListItem)stack.pop();\n    list.normalize();\n  }\n  canonical=items.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 297,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2079,
        "startLineNumber" : 304,
        "startColumnNumber" : 4,
        "endLineNumber" : 373,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void parseVersion(String version){\n  this.value=version;\n  items=new ListItem();\n  version=version.toLowerCase(Locale.ENGLISH);\n  ListItem list=items;\n  Stack<Item> stack=new Stack<>();\n  stack.push(list);\n  boolean isDigit=false;\n  int startIndex=0;\n  for (int i=0; i < version.length(); i++) {\n    char c=version.charAt(i);\n    if (c == '.') {\n      if (i == startIndex) {\n        list.add(IntegerItem.ZERO);\n      }\n else {\n        list.add(parseItem(isDigit,version.substring(startIndex,i)));\n      }\n      startIndex=i + 1;\n    }\n else     if (c == '-') {\n      if (i == startIndex) {\n        list.add(IntegerItem.ZERO);\n      }\n else {\n        list.add(parseItem(isDigit,version.substring(startIndex,i)));\n      }\n      startIndex=i + 1;\n      list.add(list=new ListItem());\n      stack.push(list);\n    }\n else     if (Character.isDigit(c)) {\n      if (!isDigit && i > startIndex) {\n        list.add(new StringItem(version.substring(startIndex,i),true));\n        startIndex=i;\n        list.add(list=new ListItem());\n        stack.push(list);\n      }\n      isDigit=true;\n    }\n else {\n      if (isDigit && i > startIndex) {\n        list.add(parseItem(true,version.substring(startIndex,i)));\n        startIndex=i;\n        list.add(list=new ListItem());\n        stack.push(list);\n      }\n      isDigit=false;\n    }\n  }\n  if (version.length() > startIndex) {\n    list.add(parseItem(isDigit,version.substring(startIndex)));\n  }\n  while (!stack.isEmpty()) {\n    list=(ListItem)stack.pop();\n    list.normalize();\n  }\n  canonical=items.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 305,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 334,
        "startColumnNumber" : 20,
        "endLineNumber" : 334,
        "endColumnNumber" : 83
      },
      "nodeContext" : "list.add(parseItem(isDigit,version.substring(startIndex,i)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 6,
    "type" : "org.jkiss.dbeaver.registry.maven.versioning.ComparableVersion.Item"
  } ],
  "positionList" : [ {
    "charLength" : 52,
    "startLineNumber" : 327,
    "startColumnNumber" : 29,
    "endLineNumber" : 327,
    "endColumnNumber" : 81
  }, {
    "charLength" : 52,
    "startLineNumber" : 334,
    "startColumnNumber" : 29,
    "endLineNumber" : 334,
    "endColumnNumber" : 81
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  } ]
}