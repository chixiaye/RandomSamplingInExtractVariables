{
  "id" : 104,
  "expression" : "new String(entries.get(2).getData())",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/managed-ledger/src/test/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerErrorsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new String(entries.get(2).getData())",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 488,
      "startColumnNumber" : 21,
      "endLineNumber" : 488,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 488,
        "startColumnNumber" : 8,
        "endLineNumber" : 488,
        "endColumnNumber" : 69
      },
      "nodeContext" : "assertEquals(new String(entries.get(2).getData()),\"entry-3\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 488,
        "startColumnNumber" : 8,
        "endLineNumber" : 488,
        "endColumnNumber" : 70
      },
      "nodeContext" : "assertEquals(new String(entries.get(2).getData()),\"entry-3\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1890,
        "startLineNumber" : 444,
        "startColumnNumber" : 75,
        "endLineNumber" : 490,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ManagedLedgerImpl ledger=(ManagedLedgerImpl)factory.open(\"recoverLongTimeAfterMultipleWriteErrors\");\n  ManagedCursor cursor=ledger.openCursor(\"c1\");\n  bkc.failAfter(0,BKException.Code.BookieHandleNotAvailableException);\n  bkc.failAfter(1,BKException.Code.BookieHandleNotAvailableException);\n  CountDownLatch counter=new CountDownLatch(2);\n  AtomicReference<ManagedLedgerException> ex=new AtomicReference<>();\n  AddEntryCallback cb=new AddEntryCallback(){\n    @Override public void addComplete(    Position position,    ByteBuf entryData,    Object ctx){\n      counter.countDown();\n    }\n    @Override public void addFailed(    ManagedLedgerException exception,    Object ctx){\n      log.warn(\"Error in write\",exception);\n      ex.set(exception);\n      counter.countDown();\n    }\n  }\n;\n  ledger.asyncAddEntry(\"entry-1\".getBytes(),cb,null);\n  ledger.asyncAddEntry(\"entry-2\".getBytes(),cb,null);\n  counter.await();\n  assertNull(ex.get());\n  assertEquals(cursor.getNumberOfEntriesInBacklog(false),2);\n  assertEquals(ledger.getLedgersInfoAsList().size(),1);\n  ledger.addEntry(\"entry-3\".getBytes());\n  List<Entry> entries=cursor.readEntries(10);\n  assertEquals(entries.size(),3);\n  assertEquals(new String(entries.get(0).getData()),\"entry-1\");\n  assertEquals(new String(entries.get(1).getData()),\"entry-2\");\n  assertEquals(new String(entries.get(2).getData()),\"entry-3\");\n  entries.forEach(e -> e.release());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 245,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1971,
        "startLineNumber" : 443,
        "startColumnNumber" : 4,
        "endLineNumber" : 490,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void recoverLongTimeAfterMultipleWriteErrors() throws Exception {\n  ManagedLedgerImpl ledger=(ManagedLedgerImpl)factory.open(\"recoverLongTimeAfterMultipleWriteErrors\");\n  ManagedCursor cursor=ledger.openCursor(\"c1\");\n  bkc.failAfter(0,BKException.Code.BookieHandleNotAvailableException);\n  bkc.failAfter(1,BKException.Code.BookieHandleNotAvailableException);\n  CountDownLatch counter=new CountDownLatch(2);\n  AtomicReference<ManagedLedgerException> ex=new AtomicReference<>();\n  AddEntryCallback cb=new AddEntryCallback(){\n    @Override public void addComplete(    Position position,    ByteBuf entryData,    Object ctx){\n      counter.countDown();\n    }\n    @Override public void addFailed(    ManagedLedgerException exception,    Object ctx){\n      log.warn(\"Error in write\",exception);\n      ex.set(exception);\n      counter.countDown();\n    }\n  }\n;\n  ledger.asyncAddEntry(\"entry-1\".getBytes(),cb,null);\n  ledger.asyncAddEntry(\"entry-2\".getBytes(),cb,null);\n  counter.await();\n  assertNull(ex.get());\n  assertEquals(cursor.getNumberOfEntriesInBacklog(false),2);\n  assertEquals(ledger.getLedgersInfoAsList().size(),1);\n  ledger.addEntry(\"entry-3\".getBytes());\n  List<Entry> entries=cursor.readEntries(10);\n  assertEquals(entries.size(),3);\n  assertEquals(new String(entries.get(0).getData()),\"entry-1\");\n  assertEquals(new String(entries.get(1).getData()),\"entry-2\");\n  assertEquals(new String(entries.get(2).getData()),\"entry-3\");\n  entries.forEach(e -> e.release());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 253,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 488,
        "startColumnNumber" : 8,
        "endLineNumber" : 488,
        "endColumnNumber" : 70
      },
      "nodeContext" : "assertEquals(new String(entries.get(2).getData()),\"entry-3\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 488,
    "startColumnNumber" : 21,
    "endLineNumber" : 488,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}