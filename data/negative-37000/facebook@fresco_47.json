{
  "id" : 47,
  "expression" : "\"file is too large to fit in a byte array: \"",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/fbcore/src/main/java/com/facebook/common/internal/Files.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"file is too large to fit in a byte array: \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 44,
      "startLineNumber" : 44,
      "startColumnNumber" : 10,
      "endLineNumber" : 44,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 44,
        "startColumnNumber" : 10,
        "endLineNumber" : 44,
        "endColumnNumber" : 80
      },
      "nodeContext" : "\"file is too large to fit in a byte array: \" + expectedSize + \" bytes\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 43,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 81
      },
      "nodeContext" : "new OutOfMemoryError(\"file is too large to fit in a byte array: \" + expectedSize + \" bytes\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 43,
        "startColumnNumber" : 6,
        "endLineNumber" : 44,
        "endColumnNumber" : 82
      },
      "nodeContext" : "throw new OutOfMemoryError(\"file is too large to fit in a byte array: \" + expectedSize + \" bytes\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 42,
        "startColumnNumber" : 42,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  throw new OutOfMemoryError(\"file is too large to fit in a byte array: \" + expectedSize + \" bytes\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (expectedSize > Integer.MAX_VALUE) {\n  throw new OutOfMemoryError(\"file is too large to fit in a byte array: \" + expectedSize + \" bytes\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 407,
        "startLineNumber" : 41,
        "startColumnNumber" : 79,
        "endLineNumber" : 52,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (expectedSize > Integer.MAX_VALUE) {\n    throw new OutOfMemoryError(\"file is too large to fit in a byte array: \" + expectedSize + \" bytes\");\n  }\n  return expectedSize == 0 ? ByteStreams.toByteArray(in) : ByteStreams.toByteArray(in,(int)expectedSize);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 749,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 52,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Reads a file of the given expected size from the given input stream, if it will fit into a byte array. This method handles the case where the file size changes between when the size is read and when the contents are read from the stream.\n */\nstatic byte[] readFile(InputStream in,long expectedSize) throws IOException {\n  if (expectedSize > Integer.MAX_VALUE) {\n    throw new OutOfMemoryError(\"file is too large to fit in a byte array: \" + expectedSize + \" bytes\");\n  }\n  return expectedSize == 0 ? ByteStreams.toByteArray(in) : ByteStreams.toByteArray(in,(int)expectedSize);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 48,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 44,
        "startColumnNumber" : 10,
        "endLineNumber" : 44,
        "endColumnNumber" : 80
      },
      "nodeContext" : "\"file is too large to fit in a byte array: \" + expectedSize + \" bytes\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 9,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 44,
    "startLineNumber" : 44,
    "startColumnNumber" : 10,
    "endLineNumber" : 44,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}