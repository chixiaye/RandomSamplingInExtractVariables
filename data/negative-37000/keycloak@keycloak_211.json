{
  "id" : 211,
  "expression" : "theme",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/theme/DefaultThemeManagerTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "theme",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 42,
      "startColumnNumber" : 163,
      "endLineNumber" : 42,
      "endColumnNumber" : 168
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 42,
        "startColumnNumber" : 163,
        "endLineNumber" : 42,
        "endColumnNumber" : 178
      },
      "nodeContext" : "theme.getName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 42,
        "startColumnNumber" : 16,
        "endLineNumber" : 42,
        "endColumnNumber" : 179
      },
      "nodeContext" : "Assert.assertEquals(\"getTheme(...) returns default theme when no matching theme found, but we need \" + THEME_NAME + \" theme deployed.\",THEME_NAME,theme.getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 42,
        "startColumnNumber" : 16,
        "endLineNumber" : 42,
        "endColumnNumber" : 180
      },
      "nodeContext" : "Assert.assertEquals(\"getTheme(...) returns default theme when no matching theme found, but we need \" + THEME_NAME + \" theme deployed.\",THEME_NAME,theme.getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 659,
        "startLineNumber" : 40,
        "startColumnNumber" : 16,
        "endLineNumber" : 46,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Theme theme=session.theme().getTheme(THEME_NAME,Theme.Type.LOGIN);\n  Assert.assertEquals(\"getTheme(...) returns default theme when no matching theme found, but we need \" + THEME_NAME + \" theme deployed.\",THEME_NAME,theme.getName());\n  Assert.assertEquals(\"Keycloak is awesome\",theme.getProperties().getProperty(\"system.property.found\"));\n  Assert.assertEquals(\"${missing_system_property}\",theme.getProperties().getProperty(\"system.property.missing\"));\n  Assert.assertEquals(\"defaultValue\",theme.getProperties().getProperty(\"system.property.missing.with.default\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 746,
        "startLineNumber" : 40,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  Theme theme=session.theme().getTheme(THEME_NAME,Theme.Type.LOGIN);\n  Assert.assertEquals(\"getTheme(...) returns default theme when no matching theme found, but we need \" + THEME_NAME + \" theme deployed.\",THEME_NAME,theme.getName());\n  Assert.assertEquals(\"Keycloak is awesome\",theme.getProperties().getProperty(\"system.property.found\"));\n  Assert.assertEquals(\"${missing_system_property}\",theme.getProperties().getProperty(\"system.property.missing\"));\n  Assert.assertEquals(\"defaultValue\",theme.getProperties().getProperty(\"system.property.missing.with.default\"));\n}\n catch (IOException e) {\n  Assert.fail(e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 76,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 770,
        "startLineNumber" : 39,
        "startColumnNumber" : 46,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    Theme theme=session.theme().getTheme(THEME_NAME,Theme.Type.LOGIN);\n    Assert.assertEquals(\"getTheme(...) returns default theme when no matching theme found, but we need \" + THEME_NAME + \" theme deployed.\",THEME_NAME,theme.getName());\n    Assert.assertEquals(\"Keycloak is awesome\",theme.getProperties().getProperty(\"system.property.found\"));\n    Assert.assertEquals(\"${missing_system_property}\",theme.getProperties().getProperty(\"system.property.missing\"));\n    Assert.assertEquals(\"defaultValue\",theme.getProperties().getProperty(\"system.property.missing.with.default\"));\n  }\n catch (  IOException e) {\n    Assert.fail(e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 781,
        "startLineNumber" : 39,
        "startColumnNumber" : 35,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "session -> {\n  try {\n    Theme theme=session.theme().getTheme(THEME_NAME,Theme.Type.LOGIN);\n    Assert.assertEquals(\"getTheme(...) returns default theme when no matching theme found, but we need \" + THEME_NAME + \" theme deployed.\",THEME_NAME,theme.getName());\n    Assert.assertEquals(\"Keycloak is awesome\",theme.getProperties().getProperty(\"system.property.found\"));\n    Assert.assertEquals(\"${missing_system_property}\",theme.getProperties().getProperty(\"system.property.missing\"));\n    Assert.assertEquals(\"defaultValue\",theme.getProperties().getProperty(\"system.property.missing.with.default\"));\n  }\n catch (  IOException e) {\n    Assert.fail(e.getMessage());\n  }\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 80,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 42,
        "startColumnNumber" : 16,
        "endLineNumber" : 42,
        "endColumnNumber" : 180
      },
      "nodeContext" : "Assert.assertEquals(\"getTheme(...) returns default theme when no matching theme found, but we need \" + THEME_NAME + \" theme deployed.\",THEME_NAME,theme.getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.theme.Theme"
  }, {
    "nodeContext" : "theme",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 43,
      "startColumnNumber" : 59,
      "endLineNumber" : 43,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 43,
        "startColumnNumber" : 59,
        "endLineNumber" : 43,
        "endColumnNumber" : 80
      },
      "nodeContext" : "theme.getProperties()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 43,
        "startColumnNumber" : 59,
        "endLineNumber" : 43,
        "endColumnNumber" : 117
      },
      "nodeContext" : "theme.getProperties().getProperty(\"system.property.found\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 43,
        "startColumnNumber" : 16,
        "endLineNumber" : 43,
        "endColumnNumber" : 118
      },
      "nodeContext" : "Assert.assertEquals(\"Keycloak is awesome\",theme.getProperties().getProperty(\"system.property.found\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 43,
        "startColumnNumber" : 16,
        "endLineNumber" : 43,
        "endColumnNumber" : 119
      },
      "nodeContext" : "Assert.assertEquals(\"Keycloak is awesome\",theme.getProperties().getProperty(\"system.property.found\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 659,
        "startLineNumber" : 40,
        "startColumnNumber" : 16,
        "endLineNumber" : 46,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Theme theme=session.theme().getTheme(THEME_NAME,Theme.Type.LOGIN);\n  Assert.assertEquals(\"getTheme(...) returns default theme when no matching theme found, but we need \" + THEME_NAME + \" theme deployed.\",THEME_NAME,theme.getName());\n  Assert.assertEquals(\"Keycloak is awesome\",theme.getProperties().getProperty(\"system.property.found\"));\n  Assert.assertEquals(\"${missing_system_property}\",theme.getProperties().getProperty(\"system.property.missing\"));\n  Assert.assertEquals(\"defaultValue\",theme.getProperties().getProperty(\"system.property.missing.with.default\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 746,
        "startLineNumber" : 40,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  Theme theme=session.theme().getTheme(THEME_NAME,Theme.Type.LOGIN);\n  Assert.assertEquals(\"getTheme(...) returns default theme when no matching theme found, but we need \" + THEME_NAME + \" theme deployed.\",THEME_NAME,theme.getName());\n  Assert.assertEquals(\"Keycloak is awesome\",theme.getProperties().getProperty(\"system.property.found\"));\n  Assert.assertEquals(\"${missing_system_property}\",theme.getProperties().getProperty(\"system.property.missing\"));\n  Assert.assertEquals(\"defaultValue\",theme.getProperties().getProperty(\"system.property.missing.with.default\"));\n}\n catch (IOException e) {\n  Assert.fail(e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 76,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 770,
        "startLineNumber" : 39,
        "startColumnNumber" : 46,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    Theme theme=session.theme().getTheme(THEME_NAME,Theme.Type.LOGIN);\n    Assert.assertEquals(\"getTheme(...) returns default theme when no matching theme found, but we need \" + THEME_NAME + \" theme deployed.\",THEME_NAME,theme.getName());\n    Assert.assertEquals(\"Keycloak is awesome\",theme.getProperties().getProperty(\"system.property.found\"));\n    Assert.assertEquals(\"${missing_system_property}\",theme.getProperties().getProperty(\"system.property.missing\"));\n    Assert.assertEquals(\"defaultValue\",theme.getProperties().getProperty(\"system.property.missing.with.default\"));\n  }\n catch (  IOException e) {\n    Assert.fail(e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 781,
        "startLineNumber" : 39,
        "startColumnNumber" : 35,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "session -> {\n  try {\n    Theme theme=session.theme().getTheme(THEME_NAME,Theme.Type.LOGIN);\n    Assert.assertEquals(\"getTheme(...) returns default theme when no matching theme found, but we need \" + THEME_NAME + \" theme deployed.\",THEME_NAME,theme.getName());\n    Assert.assertEquals(\"Keycloak is awesome\",theme.getProperties().getProperty(\"system.property.found\"));\n    Assert.assertEquals(\"${missing_system_property}\",theme.getProperties().getProperty(\"system.property.missing\"));\n    Assert.assertEquals(\"defaultValue\",theme.getProperties().getProperty(\"system.property.missing.with.default\"));\n  }\n catch (  IOException e) {\n    Assert.fail(e.getMessage());\n  }\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 80,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 43,
        "startColumnNumber" : 16,
        "endLineNumber" : 43,
        "endColumnNumber" : 119
      },
      "nodeContext" : "Assert.assertEquals(\"Keycloak is awesome\",theme.getProperties().getProperty(\"system.property.found\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.theme.Theme"
  }, {
    "nodeContext" : "theme",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 44,
      "startColumnNumber" : 66,
      "endLineNumber" : 44,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 44,
        "startColumnNumber" : 66,
        "endLineNumber" : 44,
        "endColumnNumber" : 87
      },
      "nodeContext" : "theme.getProperties()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 44,
        "startColumnNumber" : 66,
        "endLineNumber" : 44,
        "endColumnNumber" : 126
      },
      "nodeContext" : "theme.getProperties().getProperty(\"system.property.missing\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 44,
        "startColumnNumber" : 16,
        "endLineNumber" : 44,
        "endColumnNumber" : 127
      },
      "nodeContext" : "Assert.assertEquals(\"${missing_system_property}\",theme.getProperties().getProperty(\"system.property.missing\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 44,
        "startColumnNumber" : 16,
        "endLineNumber" : 44,
        "endColumnNumber" : 128
      },
      "nodeContext" : "Assert.assertEquals(\"${missing_system_property}\",theme.getProperties().getProperty(\"system.property.missing\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 659,
        "startLineNumber" : 40,
        "startColumnNumber" : 16,
        "endLineNumber" : 46,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Theme theme=session.theme().getTheme(THEME_NAME,Theme.Type.LOGIN);\n  Assert.assertEquals(\"getTheme(...) returns default theme when no matching theme found, but we need \" + THEME_NAME + \" theme deployed.\",THEME_NAME,theme.getName());\n  Assert.assertEquals(\"Keycloak is awesome\",theme.getProperties().getProperty(\"system.property.found\"));\n  Assert.assertEquals(\"${missing_system_property}\",theme.getProperties().getProperty(\"system.property.missing\"));\n  Assert.assertEquals(\"defaultValue\",theme.getProperties().getProperty(\"system.property.missing.with.default\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 746,
        "startLineNumber" : 40,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  Theme theme=session.theme().getTheme(THEME_NAME,Theme.Type.LOGIN);\n  Assert.assertEquals(\"getTheme(...) returns default theme when no matching theme found, but we need \" + THEME_NAME + \" theme deployed.\",THEME_NAME,theme.getName());\n  Assert.assertEquals(\"Keycloak is awesome\",theme.getProperties().getProperty(\"system.property.found\"));\n  Assert.assertEquals(\"${missing_system_property}\",theme.getProperties().getProperty(\"system.property.missing\"));\n  Assert.assertEquals(\"defaultValue\",theme.getProperties().getProperty(\"system.property.missing.with.default\"));\n}\n catch (IOException e) {\n  Assert.fail(e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 76,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 770,
        "startLineNumber" : 39,
        "startColumnNumber" : 46,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    Theme theme=session.theme().getTheme(THEME_NAME,Theme.Type.LOGIN);\n    Assert.assertEquals(\"getTheme(...) returns default theme when no matching theme found, but we need \" + THEME_NAME + \" theme deployed.\",THEME_NAME,theme.getName());\n    Assert.assertEquals(\"Keycloak is awesome\",theme.getProperties().getProperty(\"system.property.found\"));\n    Assert.assertEquals(\"${missing_system_property}\",theme.getProperties().getProperty(\"system.property.missing\"));\n    Assert.assertEquals(\"defaultValue\",theme.getProperties().getProperty(\"system.property.missing.with.default\"));\n  }\n catch (  IOException e) {\n    Assert.fail(e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 781,
        "startLineNumber" : 39,
        "startColumnNumber" : 35,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "session -> {\n  try {\n    Theme theme=session.theme().getTheme(THEME_NAME,Theme.Type.LOGIN);\n    Assert.assertEquals(\"getTheme(...) returns default theme when no matching theme found, but we need \" + THEME_NAME + \" theme deployed.\",THEME_NAME,theme.getName());\n    Assert.assertEquals(\"Keycloak is awesome\",theme.getProperties().getProperty(\"system.property.found\"));\n    Assert.assertEquals(\"${missing_system_property}\",theme.getProperties().getProperty(\"system.property.missing\"));\n    Assert.assertEquals(\"defaultValue\",theme.getProperties().getProperty(\"system.property.missing.with.default\"));\n  }\n catch (  IOException e) {\n    Assert.fail(e.getMessage());\n  }\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 80,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 44,
        "startColumnNumber" : 16,
        "endLineNumber" : 44,
        "endColumnNumber" : 128
      },
      "nodeContext" : "Assert.assertEquals(\"${missing_system_property}\",theme.getProperties().getProperty(\"system.property.missing\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.theme.Theme"
  }, {
    "nodeContext" : "theme",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 45,
      "startColumnNumber" : 52,
      "endLineNumber" : 45,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 45,
        "startColumnNumber" : 52,
        "endLineNumber" : 45,
        "endColumnNumber" : 73
      },
      "nodeContext" : "theme.getProperties()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 45,
        "startColumnNumber" : 52,
        "endLineNumber" : 45,
        "endColumnNumber" : 125
      },
      "nodeContext" : "theme.getProperties().getProperty(\"system.property.missing.with.default\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 45,
        "startColumnNumber" : 16,
        "endLineNumber" : 45,
        "endColumnNumber" : 126
      },
      "nodeContext" : "Assert.assertEquals(\"defaultValue\",theme.getProperties().getProperty(\"system.property.missing.with.default\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 45,
        "startColumnNumber" : 16,
        "endLineNumber" : 45,
        "endColumnNumber" : 127
      },
      "nodeContext" : "Assert.assertEquals(\"defaultValue\",theme.getProperties().getProperty(\"system.property.missing.with.default\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 659,
        "startLineNumber" : 40,
        "startColumnNumber" : 16,
        "endLineNumber" : 46,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Theme theme=session.theme().getTheme(THEME_NAME,Theme.Type.LOGIN);\n  Assert.assertEquals(\"getTheme(...) returns default theme when no matching theme found, but we need \" + THEME_NAME + \" theme deployed.\",THEME_NAME,theme.getName());\n  Assert.assertEquals(\"Keycloak is awesome\",theme.getProperties().getProperty(\"system.property.found\"));\n  Assert.assertEquals(\"${missing_system_property}\",theme.getProperties().getProperty(\"system.property.missing\"));\n  Assert.assertEquals(\"defaultValue\",theme.getProperties().getProperty(\"system.property.missing.with.default\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 746,
        "startLineNumber" : 40,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  Theme theme=session.theme().getTheme(THEME_NAME,Theme.Type.LOGIN);\n  Assert.assertEquals(\"getTheme(...) returns default theme when no matching theme found, but we need \" + THEME_NAME + \" theme deployed.\",THEME_NAME,theme.getName());\n  Assert.assertEquals(\"Keycloak is awesome\",theme.getProperties().getProperty(\"system.property.found\"));\n  Assert.assertEquals(\"${missing_system_property}\",theme.getProperties().getProperty(\"system.property.missing\"));\n  Assert.assertEquals(\"defaultValue\",theme.getProperties().getProperty(\"system.property.missing.with.default\"));\n}\n catch (IOException e) {\n  Assert.fail(e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 76,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 770,
        "startLineNumber" : 39,
        "startColumnNumber" : 46,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    Theme theme=session.theme().getTheme(THEME_NAME,Theme.Type.LOGIN);\n    Assert.assertEquals(\"getTheme(...) returns default theme when no matching theme found, but we need \" + THEME_NAME + \" theme deployed.\",THEME_NAME,theme.getName());\n    Assert.assertEquals(\"Keycloak is awesome\",theme.getProperties().getProperty(\"system.property.found\"));\n    Assert.assertEquals(\"${missing_system_property}\",theme.getProperties().getProperty(\"system.property.missing\"));\n    Assert.assertEquals(\"defaultValue\",theme.getProperties().getProperty(\"system.property.missing.with.default\"));\n  }\n catch (  IOException e) {\n    Assert.fail(e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 781,
        "startLineNumber" : 39,
        "startColumnNumber" : 35,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "session -> {\n  try {\n    Theme theme=session.theme().getTheme(THEME_NAME,Theme.Type.LOGIN);\n    Assert.assertEquals(\"getTheme(...) returns default theme when no matching theme found, but we need \" + THEME_NAME + \" theme deployed.\",THEME_NAME,theme.getName());\n    Assert.assertEquals(\"Keycloak is awesome\",theme.getProperties().getProperty(\"system.property.found\"));\n    Assert.assertEquals(\"${missing_system_property}\",theme.getProperties().getProperty(\"system.property.missing\"));\n    Assert.assertEquals(\"defaultValue\",theme.getProperties().getProperty(\"system.property.missing.with.default\"));\n  }\n catch (  IOException e) {\n    Assert.fail(e.getMessage());\n  }\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 80,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 45,
        "startColumnNumber" : 16,
        "endLineNumber" : 45,
        "endColumnNumber" : 127
      },
      "nodeContext" : "Assert.assertEquals(\"defaultValue\",theme.getProperties().getProperty(\"system.property.missing.with.default\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.theme.Theme"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 42,
    "startColumnNumber" : 163,
    "endLineNumber" : 42,
    "endColumnNumber" : 168
  }, {
    "charLength" : 5,
    "startLineNumber" : 43,
    "startColumnNumber" : 59,
    "endLineNumber" : 43,
    "endColumnNumber" : 64
  }, {
    "charLength" : 5,
    "startLineNumber" : 44,
    "startColumnNumber" : 66,
    "endLineNumber" : 44,
    "endColumnNumber" : 71
  }, {
    "charLength" : 5,
    "startLineNumber" : 45,
    "startColumnNumber" : 52,
    "endLineNumber" : 45,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  } ]
}