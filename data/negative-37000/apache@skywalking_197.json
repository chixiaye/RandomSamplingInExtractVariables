{
  "id" : 197,
  "expression" : "this",
  "projectName" : "apache@skywalking",
  "commitID" : "16b51d55baec4f779f312e07081d1397addbcfe9",
  "filePath" : "/test/e2e/e2e-data/src/main/java/org/apache/skywalking/e2e/trace/SpanMatcher.java",
  "occurrences" : 13,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 51,
      "startColumnNumber" : 30,
      "endLineNumber" : 51,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 51,
        "startColumnNumber" : 30,
        "endLineNumber" : 51,
        "endColumnNumber" : 47
      },
      "nodeContext" : "this.getTraceId()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 51,
        "startColumnNumber" : 19,
        "endLineNumber" : 51,
        "endColumnNumber" : 47
      },
      "nodeContext" : "expected=this.getTraceId()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 48
      },
      "nodeContext" : "String expected=this.getTraceId();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 50,
        "startColumnNumber" : 38,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String expected=this.getTraceId();\n  String actual=span.getTraceId();\n  doVerify(expected,actual);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Objects.nonNull(traceId)) {\n  String expected=this.getTraceId();\n  String actual=span.getTraceId();\n  doVerify(expected,actual);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2658,
        "startLineNumber" : 49,
        "startColumnNumber" : 40,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (Objects.nonNull(traceId)) {\n    String expected=this.getTraceId();\n    String actual=span.getTraceId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(segmentId)) {\n    String expected=this.getSegmentId();\n    String actual=span.getSegmentId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(spanId)) {\n    String expected=String.valueOf(this.getSpanId());\n    String actual=String.valueOf(span.getSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(parentSpanId)) {\n    String expected=String.valueOf(this.getParentSpanId());\n    String actual=String.valueOf(span.getParentSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(serviceCode)) {\n    String expected=this.getServiceCode();\n    String actual=span.getServiceCode();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(startTime)) {\n    String expected=String.valueOf(this.getStartTime());\n    String actual=String.valueOf(span.getStartTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endTime)) {\n    String expected=String.valueOf(this.getEndTime());\n    String actual=String.valueOf(span.getEndTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endpointName)) {\n    String expected=this.getEndpointName();\n    String actual=span.getEndpointName();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(type)) {\n    String expected=this.getType();\n    String actual=span.getType();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(peer)) {\n    String expected=this.getPeer();\n    String actual=span.getPeer();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(component)) {\n    String expected=this.getComponent();\n    String actual=span.getComponent();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(isError)) {\n    String expected=Strings.nullToEmpty(String.valueOf(this.getIsError()));\n    String actual=Strings.nullToEmpty(String.valueOf(span.isError()));\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(layer)) {\n    String expected=this.getLayer();\n    String actual=span.getLayer();\n    doVerify(expected,actual);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 388,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2708,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void verify(final Span span){\n  if (Objects.nonNull(traceId)) {\n    String expected=this.getTraceId();\n    String actual=span.getTraceId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(segmentId)) {\n    String expected=this.getSegmentId();\n    String actual=span.getSegmentId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(spanId)) {\n    String expected=String.valueOf(this.getSpanId());\n    String actual=String.valueOf(span.getSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(parentSpanId)) {\n    String expected=String.valueOf(this.getParentSpanId());\n    String actual=String.valueOf(span.getParentSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(serviceCode)) {\n    String expected=this.getServiceCode();\n    String actual=span.getServiceCode();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(startTime)) {\n    String expected=String.valueOf(this.getStartTime());\n    String actual=String.valueOf(span.getStartTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endTime)) {\n    String expected=String.valueOf(this.getEndTime());\n    String actual=String.valueOf(span.getEndTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endpointName)) {\n    String expected=this.getEndpointName();\n    String actual=span.getEndpointName();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(type)) {\n    String expected=this.getType();\n    String actual=span.getType();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(peer)) {\n    String expected=this.getPeer();\n    String actual=span.getPeer();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(component)) {\n    String expected=this.getComponent();\n    String actual=span.getComponent();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(isError)) {\n    String expected=Strings.nullToEmpty(String.valueOf(this.getIsError()));\n    String actual=Strings.nullToEmpty(String.valueOf(span.isError()));\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(layer)) {\n    String expected=this.getLayer();\n    String actual=span.getLayer();\n    doVerify(expected,actual);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 399,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 48
      },
      "nodeContext" : "String expected=this.getTraceId();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.skywalking.e2e.trace.SpanMatcher"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 56,
      "startColumnNumber" : 30,
      "endLineNumber" : 56,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 56,
        "startColumnNumber" : 30,
        "endLineNumber" : 56,
        "endColumnNumber" : 49
      },
      "nodeContext" : "this.getSegmentId()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 56,
        "startColumnNumber" : 19,
        "endLineNumber" : 56,
        "endColumnNumber" : 49
      },
      "nodeContext" : "expected=this.getSegmentId()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 56,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 50
      },
      "nodeContext" : "String expected=this.getSegmentId();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 55,
        "startColumnNumber" : 40,
        "endLineNumber" : 59,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String expected=this.getSegmentId();\n  String actual=span.getSegmentId();\n  doVerify(expected,actual);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Objects.nonNull(segmentId)) {\n  String expected=this.getSegmentId();\n  String actual=span.getSegmentId();\n  doVerify(expected,actual);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2658,
        "startLineNumber" : 49,
        "startColumnNumber" : 40,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (Objects.nonNull(traceId)) {\n    String expected=this.getTraceId();\n    String actual=span.getTraceId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(segmentId)) {\n    String expected=this.getSegmentId();\n    String actual=span.getSegmentId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(spanId)) {\n    String expected=String.valueOf(this.getSpanId());\n    String actual=String.valueOf(span.getSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(parentSpanId)) {\n    String expected=String.valueOf(this.getParentSpanId());\n    String actual=String.valueOf(span.getParentSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(serviceCode)) {\n    String expected=this.getServiceCode();\n    String actual=span.getServiceCode();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(startTime)) {\n    String expected=String.valueOf(this.getStartTime());\n    String actual=String.valueOf(span.getStartTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endTime)) {\n    String expected=String.valueOf(this.getEndTime());\n    String actual=String.valueOf(span.getEndTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endpointName)) {\n    String expected=this.getEndpointName();\n    String actual=span.getEndpointName();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(type)) {\n    String expected=this.getType();\n    String actual=span.getType();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(peer)) {\n    String expected=this.getPeer();\n    String actual=span.getPeer();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(component)) {\n    String expected=this.getComponent();\n    String actual=span.getComponent();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(isError)) {\n    String expected=Strings.nullToEmpty(String.valueOf(this.getIsError()));\n    String actual=Strings.nullToEmpty(String.valueOf(span.isError()));\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(layer)) {\n    String expected=this.getLayer();\n    String actual=span.getLayer();\n    doVerify(expected,actual);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 388,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2708,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void verify(final Span span){\n  if (Objects.nonNull(traceId)) {\n    String expected=this.getTraceId();\n    String actual=span.getTraceId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(segmentId)) {\n    String expected=this.getSegmentId();\n    String actual=span.getSegmentId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(spanId)) {\n    String expected=String.valueOf(this.getSpanId());\n    String actual=String.valueOf(span.getSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(parentSpanId)) {\n    String expected=String.valueOf(this.getParentSpanId());\n    String actual=String.valueOf(span.getParentSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(serviceCode)) {\n    String expected=this.getServiceCode();\n    String actual=span.getServiceCode();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(startTime)) {\n    String expected=String.valueOf(this.getStartTime());\n    String actual=String.valueOf(span.getStartTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endTime)) {\n    String expected=String.valueOf(this.getEndTime());\n    String actual=String.valueOf(span.getEndTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endpointName)) {\n    String expected=this.getEndpointName();\n    String actual=span.getEndpointName();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(type)) {\n    String expected=this.getType();\n    String actual=span.getType();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(peer)) {\n    String expected=this.getPeer();\n    String actual=span.getPeer();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(component)) {\n    String expected=this.getComponent();\n    String actual=span.getComponent();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(isError)) {\n    String expected=Strings.nullToEmpty(String.valueOf(this.getIsError()));\n    String actual=Strings.nullToEmpty(String.valueOf(span.isError()));\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(layer)) {\n    String expected=this.getLayer();\n    String actual=span.getLayer();\n    doVerify(expected,actual);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 399,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 56,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 50
      },
      "nodeContext" : "String expected=this.getSegmentId();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.skywalking.e2e.trace.SpanMatcher"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 61,
      "startColumnNumber" : 45,
      "endLineNumber" : 61,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 61,
        "startColumnNumber" : 45,
        "endLineNumber" : 61,
        "endColumnNumber" : 61
      },
      "nodeContext" : "this.getSpanId()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 61,
        "startColumnNumber" : 30,
        "endLineNumber" : 61,
        "endColumnNumber" : 62
      },
      "nodeContext" : "String.valueOf(this.getSpanId())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 61,
        "startColumnNumber" : 19,
        "endLineNumber" : 61,
        "endColumnNumber" : 62
      },
      "nodeContext" : "expected=String.valueOf(this.getSpanId())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 61,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 63
      },
      "nodeContext" : "String expected=String.valueOf(this.getSpanId());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 60,
        "startColumnNumber" : 37,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String expected=String.valueOf(this.getSpanId());\n  String actual=String.valueOf(span.getSpanId());\n  doVerify(expected,actual);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 206,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Objects.nonNull(spanId)) {\n  String expected=String.valueOf(this.getSpanId());\n  String actual=String.valueOf(span.getSpanId());\n  doVerify(expected,actual);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2658,
        "startLineNumber" : 49,
        "startColumnNumber" : 40,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (Objects.nonNull(traceId)) {\n    String expected=this.getTraceId();\n    String actual=span.getTraceId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(segmentId)) {\n    String expected=this.getSegmentId();\n    String actual=span.getSegmentId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(spanId)) {\n    String expected=String.valueOf(this.getSpanId());\n    String actual=String.valueOf(span.getSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(parentSpanId)) {\n    String expected=String.valueOf(this.getParentSpanId());\n    String actual=String.valueOf(span.getParentSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(serviceCode)) {\n    String expected=this.getServiceCode();\n    String actual=span.getServiceCode();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(startTime)) {\n    String expected=String.valueOf(this.getStartTime());\n    String actual=String.valueOf(span.getStartTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endTime)) {\n    String expected=String.valueOf(this.getEndTime());\n    String actual=String.valueOf(span.getEndTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endpointName)) {\n    String expected=this.getEndpointName();\n    String actual=span.getEndpointName();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(type)) {\n    String expected=this.getType();\n    String actual=span.getType();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(peer)) {\n    String expected=this.getPeer();\n    String actual=span.getPeer();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(component)) {\n    String expected=this.getComponent();\n    String actual=span.getComponent();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(isError)) {\n    String expected=Strings.nullToEmpty(String.valueOf(this.getIsError()));\n    String actual=Strings.nullToEmpty(String.valueOf(span.isError()));\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(layer)) {\n    String expected=this.getLayer();\n    String actual=span.getLayer();\n    doVerify(expected,actual);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 388,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2708,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void verify(final Span span){\n  if (Objects.nonNull(traceId)) {\n    String expected=this.getTraceId();\n    String actual=span.getTraceId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(segmentId)) {\n    String expected=this.getSegmentId();\n    String actual=span.getSegmentId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(spanId)) {\n    String expected=String.valueOf(this.getSpanId());\n    String actual=String.valueOf(span.getSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(parentSpanId)) {\n    String expected=String.valueOf(this.getParentSpanId());\n    String actual=String.valueOf(span.getParentSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(serviceCode)) {\n    String expected=this.getServiceCode();\n    String actual=span.getServiceCode();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(startTime)) {\n    String expected=String.valueOf(this.getStartTime());\n    String actual=String.valueOf(span.getStartTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endTime)) {\n    String expected=String.valueOf(this.getEndTime());\n    String actual=String.valueOf(span.getEndTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endpointName)) {\n    String expected=this.getEndpointName();\n    String actual=span.getEndpointName();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(type)) {\n    String expected=this.getType();\n    String actual=span.getType();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(peer)) {\n    String expected=this.getPeer();\n    String actual=span.getPeer();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(component)) {\n    String expected=this.getComponent();\n    String actual=span.getComponent();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(isError)) {\n    String expected=Strings.nullToEmpty(String.valueOf(this.getIsError()));\n    String actual=Strings.nullToEmpty(String.valueOf(span.isError()));\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(layer)) {\n    String expected=this.getLayer();\n    String actual=span.getLayer();\n    doVerify(expected,actual);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 399,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 61,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 63
      },
      "nodeContext" : "String expected=String.valueOf(this.getSpanId());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.skywalking.e2e.trace.SpanMatcher"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 66,
      "startColumnNumber" : 45,
      "endLineNumber" : 66,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 66,
        "startColumnNumber" : 45,
        "endLineNumber" : 66,
        "endColumnNumber" : 67
      },
      "nodeContext" : "this.getParentSpanId()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 66,
        "startColumnNumber" : 30,
        "endLineNumber" : 66,
        "endColumnNumber" : 68
      },
      "nodeContext" : "String.valueOf(this.getParentSpanId())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 66,
        "startColumnNumber" : 19,
        "endLineNumber" : 66,
        "endColumnNumber" : 68
      },
      "nodeContext" : "expected=String.valueOf(this.getParentSpanId())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 69
      },
      "nodeContext" : "String expected=String.valueOf(this.getParentSpanId());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 65,
        "startColumnNumber" : 43,
        "endLineNumber" : 69,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String expected=String.valueOf(this.getParentSpanId());\n  String actual=String.valueOf(span.getParentSpanId());\n  doVerify(expected,actual);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 224,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Objects.nonNull(parentSpanId)) {\n  String expected=String.valueOf(this.getParentSpanId());\n  String actual=String.valueOf(span.getParentSpanId());\n  doVerify(expected,actual);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2658,
        "startLineNumber" : 49,
        "startColumnNumber" : 40,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (Objects.nonNull(traceId)) {\n    String expected=this.getTraceId();\n    String actual=span.getTraceId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(segmentId)) {\n    String expected=this.getSegmentId();\n    String actual=span.getSegmentId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(spanId)) {\n    String expected=String.valueOf(this.getSpanId());\n    String actual=String.valueOf(span.getSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(parentSpanId)) {\n    String expected=String.valueOf(this.getParentSpanId());\n    String actual=String.valueOf(span.getParentSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(serviceCode)) {\n    String expected=this.getServiceCode();\n    String actual=span.getServiceCode();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(startTime)) {\n    String expected=String.valueOf(this.getStartTime());\n    String actual=String.valueOf(span.getStartTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endTime)) {\n    String expected=String.valueOf(this.getEndTime());\n    String actual=String.valueOf(span.getEndTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endpointName)) {\n    String expected=this.getEndpointName();\n    String actual=span.getEndpointName();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(type)) {\n    String expected=this.getType();\n    String actual=span.getType();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(peer)) {\n    String expected=this.getPeer();\n    String actual=span.getPeer();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(component)) {\n    String expected=this.getComponent();\n    String actual=span.getComponent();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(isError)) {\n    String expected=Strings.nullToEmpty(String.valueOf(this.getIsError()));\n    String actual=Strings.nullToEmpty(String.valueOf(span.isError()));\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(layer)) {\n    String expected=this.getLayer();\n    String actual=span.getLayer();\n    doVerify(expected,actual);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 388,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2708,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void verify(final Span span){\n  if (Objects.nonNull(traceId)) {\n    String expected=this.getTraceId();\n    String actual=span.getTraceId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(segmentId)) {\n    String expected=this.getSegmentId();\n    String actual=span.getSegmentId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(spanId)) {\n    String expected=String.valueOf(this.getSpanId());\n    String actual=String.valueOf(span.getSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(parentSpanId)) {\n    String expected=String.valueOf(this.getParentSpanId());\n    String actual=String.valueOf(span.getParentSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(serviceCode)) {\n    String expected=this.getServiceCode();\n    String actual=span.getServiceCode();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(startTime)) {\n    String expected=String.valueOf(this.getStartTime());\n    String actual=String.valueOf(span.getStartTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endTime)) {\n    String expected=String.valueOf(this.getEndTime());\n    String actual=String.valueOf(span.getEndTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endpointName)) {\n    String expected=this.getEndpointName();\n    String actual=span.getEndpointName();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(type)) {\n    String expected=this.getType();\n    String actual=span.getType();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(peer)) {\n    String expected=this.getPeer();\n    String actual=span.getPeer();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(component)) {\n    String expected=this.getComponent();\n    String actual=span.getComponent();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(isError)) {\n    String expected=Strings.nullToEmpty(String.valueOf(this.getIsError()));\n    String actual=Strings.nullToEmpty(String.valueOf(span.isError()));\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(layer)) {\n    String expected=this.getLayer();\n    String actual=span.getLayer();\n    doVerify(expected,actual);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 399,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 69
      },
      "nodeContext" : "String expected=String.valueOf(this.getParentSpanId());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.skywalking.e2e.trace.SpanMatcher"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 71,
      "startColumnNumber" : 30,
      "endLineNumber" : 71,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 71,
        "startColumnNumber" : 30,
        "endLineNumber" : 71,
        "endColumnNumber" : 51
      },
      "nodeContext" : "this.getServiceCode()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 71,
        "startColumnNumber" : 19,
        "endLineNumber" : 71,
        "endColumnNumber" : 51
      },
      "nodeContext" : "expected=this.getServiceCode()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 52
      },
      "nodeContext" : "String expected=this.getServiceCode();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 155,
        "startLineNumber" : 70,
        "startColumnNumber" : 42,
        "endLineNumber" : 74,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String expected=this.getServiceCode();\n  String actual=span.getServiceCode();\n  doVerify(expected,actual);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Objects.nonNull(serviceCode)) {\n  String expected=this.getServiceCode();\n  String actual=span.getServiceCode();\n  doVerify(expected,actual);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2658,
        "startLineNumber" : 49,
        "startColumnNumber" : 40,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (Objects.nonNull(traceId)) {\n    String expected=this.getTraceId();\n    String actual=span.getTraceId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(segmentId)) {\n    String expected=this.getSegmentId();\n    String actual=span.getSegmentId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(spanId)) {\n    String expected=String.valueOf(this.getSpanId());\n    String actual=String.valueOf(span.getSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(parentSpanId)) {\n    String expected=String.valueOf(this.getParentSpanId());\n    String actual=String.valueOf(span.getParentSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(serviceCode)) {\n    String expected=this.getServiceCode();\n    String actual=span.getServiceCode();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(startTime)) {\n    String expected=String.valueOf(this.getStartTime());\n    String actual=String.valueOf(span.getStartTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endTime)) {\n    String expected=String.valueOf(this.getEndTime());\n    String actual=String.valueOf(span.getEndTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endpointName)) {\n    String expected=this.getEndpointName();\n    String actual=span.getEndpointName();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(type)) {\n    String expected=this.getType();\n    String actual=span.getType();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(peer)) {\n    String expected=this.getPeer();\n    String actual=span.getPeer();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(component)) {\n    String expected=this.getComponent();\n    String actual=span.getComponent();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(isError)) {\n    String expected=Strings.nullToEmpty(String.valueOf(this.getIsError()));\n    String actual=Strings.nullToEmpty(String.valueOf(span.isError()));\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(layer)) {\n    String expected=this.getLayer();\n    String actual=span.getLayer();\n    doVerify(expected,actual);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 388,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2708,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void verify(final Span span){\n  if (Objects.nonNull(traceId)) {\n    String expected=this.getTraceId();\n    String actual=span.getTraceId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(segmentId)) {\n    String expected=this.getSegmentId();\n    String actual=span.getSegmentId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(spanId)) {\n    String expected=String.valueOf(this.getSpanId());\n    String actual=String.valueOf(span.getSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(parentSpanId)) {\n    String expected=String.valueOf(this.getParentSpanId());\n    String actual=String.valueOf(span.getParentSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(serviceCode)) {\n    String expected=this.getServiceCode();\n    String actual=span.getServiceCode();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(startTime)) {\n    String expected=String.valueOf(this.getStartTime());\n    String actual=String.valueOf(span.getStartTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endTime)) {\n    String expected=String.valueOf(this.getEndTime());\n    String actual=String.valueOf(span.getEndTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endpointName)) {\n    String expected=this.getEndpointName();\n    String actual=span.getEndpointName();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(type)) {\n    String expected=this.getType();\n    String actual=span.getType();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(peer)) {\n    String expected=this.getPeer();\n    String actual=span.getPeer();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(component)) {\n    String expected=this.getComponent();\n    String actual=span.getComponent();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(isError)) {\n    String expected=Strings.nullToEmpty(String.valueOf(this.getIsError()));\n    String actual=Strings.nullToEmpty(String.valueOf(span.isError()));\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(layer)) {\n    String expected=this.getLayer();\n    String actual=span.getLayer();\n    doVerify(expected,actual);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 399,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 52
      },
      "nodeContext" : "String expected=this.getServiceCode();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.skywalking.e2e.trace.SpanMatcher"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 76,
      "startColumnNumber" : 45,
      "endLineNumber" : 76,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 76,
        "startColumnNumber" : 45,
        "endLineNumber" : 76,
        "endColumnNumber" : 64
      },
      "nodeContext" : "this.getStartTime()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 76,
        "startColumnNumber" : 30,
        "endLineNumber" : 76,
        "endColumnNumber" : 65
      },
      "nodeContext" : "String.valueOf(this.getStartTime())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 76,
        "startColumnNumber" : 19,
        "endLineNumber" : 76,
        "endColumnNumber" : 65
      },
      "nodeContext" : "expected=String.valueOf(this.getStartTime())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 76,
        "startColumnNumber" : 12,
        "endLineNumber" : 76,
        "endColumnNumber" : 66
      },
      "nodeContext" : "String expected=String.valueOf(this.getStartTime());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 75,
        "startColumnNumber" : 40,
        "endLineNumber" : 79,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String expected=String.valueOf(this.getStartTime());\n  String actual=String.valueOf(span.getStartTime());\n  doVerify(expected,actual);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 215,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Objects.nonNull(startTime)) {\n  String expected=String.valueOf(this.getStartTime());\n  String actual=String.valueOf(span.getStartTime());\n  doVerify(expected,actual);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2658,
        "startLineNumber" : 49,
        "startColumnNumber" : 40,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (Objects.nonNull(traceId)) {\n    String expected=this.getTraceId();\n    String actual=span.getTraceId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(segmentId)) {\n    String expected=this.getSegmentId();\n    String actual=span.getSegmentId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(spanId)) {\n    String expected=String.valueOf(this.getSpanId());\n    String actual=String.valueOf(span.getSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(parentSpanId)) {\n    String expected=String.valueOf(this.getParentSpanId());\n    String actual=String.valueOf(span.getParentSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(serviceCode)) {\n    String expected=this.getServiceCode();\n    String actual=span.getServiceCode();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(startTime)) {\n    String expected=String.valueOf(this.getStartTime());\n    String actual=String.valueOf(span.getStartTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endTime)) {\n    String expected=String.valueOf(this.getEndTime());\n    String actual=String.valueOf(span.getEndTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endpointName)) {\n    String expected=this.getEndpointName();\n    String actual=span.getEndpointName();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(type)) {\n    String expected=this.getType();\n    String actual=span.getType();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(peer)) {\n    String expected=this.getPeer();\n    String actual=span.getPeer();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(component)) {\n    String expected=this.getComponent();\n    String actual=span.getComponent();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(isError)) {\n    String expected=Strings.nullToEmpty(String.valueOf(this.getIsError()));\n    String actual=Strings.nullToEmpty(String.valueOf(span.isError()));\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(layer)) {\n    String expected=this.getLayer();\n    String actual=span.getLayer();\n    doVerify(expected,actual);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 388,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2708,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void verify(final Span span){\n  if (Objects.nonNull(traceId)) {\n    String expected=this.getTraceId();\n    String actual=span.getTraceId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(segmentId)) {\n    String expected=this.getSegmentId();\n    String actual=span.getSegmentId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(spanId)) {\n    String expected=String.valueOf(this.getSpanId());\n    String actual=String.valueOf(span.getSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(parentSpanId)) {\n    String expected=String.valueOf(this.getParentSpanId());\n    String actual=String.valueOf(span.getParentSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(serviceCode)) {\n    String expected=this.getServiceCode();\n    String actual=span.getServiceCode();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(startTime)) {\n    String expected=String.valueOf(this.getStartTime());\n    String actual=String.valueOf(span.getStartTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endTime)) {\n    String expected=String.valueOf(this.getEndTime());\n    String actual=String.valueOf(span.getEndTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endpointName)) {\n    String expected=this.getEndpointName();\n    String actual=span.getEndpointName();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(type)) {\n    String expected=this.getType();\n    String actual=span.getType();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(peer)) {\n    String expected=this.getPeer();\n    String actual=span.getPeer();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(component)) {\n    String expected=this.getComponent();\n    String actual=span.getComponent();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(isError)) {\n    String expected=Strings.nullToEmpty(String.valueOf(this.getIsError()));\n    String actual=Strings.nullToEmpty(String.valueOf(span.isError()));\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(layer)) {\n    String expected=this.getLayer();\n    String actual=span.getLayer();\n    doVerify(expected,actual);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 399,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 76,
        "startColumnNumber" : 12,
        "endLineNumber" : 76,
        "endColumnNumber" : 66
      },
      "nodeContext" : "String expected=String.valueOf(this.getStartTime());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.skywalking.e2e.trace.SpanMatcher"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 81,
      "startColumnNumber" : 45,
      "endLineNumber" : 81,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 81,
        "startColumnNumber" : 45,
        "endLineNumber" : 81,
        "endColumnNumber" : 62
      },
      "nodeContext" : "this.getEndTime()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 81,
        "startColumnNumber" : 30,
        "endLineNumber" : 81,
        "endColumnNumber" : 63
      },
      "nodeContext" : "String.valueOf(this.getEndTime())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 81,
        "startColumnNumber" : 19,
        "endLineNumber" : 81,
        "endColumnNumber" : 63
      },
      "nodeContext" : "expected=String.valueOf(this.getEndTime())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 81,
        "startColumnNumber" : 12,
        "endLineNumber" : 81,
        "endColumnNumber" : 64
      },
      "nodeContext" : "String expected=String.valueOf(this.getEndTime());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 179,
        "startLineNumber" : 80,
        "startColumnNumber" : 38,
        "endLineNumber" : 84,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String expected=String.valueOf(this.getEndTime());\n  String actual=String.valueOf(span.getEndTime());\n  doVerify(expected,actual);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 209,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Objects.nonNull(endTime)) {\n  String expected=String.valueOf(this.getEndTime());\n  String actual=String.valueOf(span.getEndTime());\n  doVerify(expected,actual);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2658,
        "startLineNumber" : 49,
        "startColumnNumber" : 40,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (Objects.nonNull(traceId)) {\n    String expected=this.getTraceId();\n    String actual=span.getTraceId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(segmentId)) {\n    String expected=this.getSegmentId();\n    String actual=span.getSegmentId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(spanId)) {\n    String expected=String.valueOf(this.getSpanId());\n    String actual=String.valueOf(span.getSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(parentSpanId)) {\n    String expected=String.valueOf(this.getParentSpanId());\n    String actual=String.valueOf(span.getParentSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(serviceCode)) {\n    String expected=this.getServiceCode();\n    String actual=span.getServiceCode();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(startTime)) {\n    String expected=String.valueOf(this.getStartTime());\n    String actual=String.valueOf(span.getStartTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endTime)) {\n    String expected=String.valueOf(this.getEndTime());\n    String actual=String.valueOf(span.getEndTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endpointName)) {\n    String expected=this.getEndpointName();\n    String actual=span.getEndpointName();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(type)) {\n    String expected=this.getType();\n    String actual=span.getType();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(peer)) {\n    String expected=this.getPeer();\n    String actual=span.getPeer();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(component)) {\n    String expected=this.getComponent();\n    String actual=span.getComponent();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(isError)) {\n    String expected=Strings.nullToEmpty(String.valueOf(this.getIsError()));\n    String actual=Strings.nullToEmpty(String.valueOf(span.isError()));\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(layer)) {\n    String expected=this.getLayer();\n    String actual=span.getLayer();\n    doVerify(expected,actual);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 388,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2708,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void verify(final Span span){\n  if (Objects.nonNull(traceId)) {\n    String expected=this.getTraceId();\n    String actual=span.getTraceId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(segmentId)) {\n    String expected=this.getSegmentId();\n    String actual=span.getSegmentId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(spanId)) {\n    String expected=String.valueOf(this.getSpanId());\n    String actual=String.valueOf(span.getSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(parentSpanId)) {\n    String expected=String.valueOf(this.getParentSpanId());\n    String actual=String.valueOf(span.getParentSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(serviceCode)) {\n    String expected=this.getServiceCode();\n    String actual=span.getServiceCode();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(startTime)) {\n    String expected=String.valueOf(this.getStartTime());\n    String actual=String.valueOf(span.getStartTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endTime)) {\n    String expected=String.valueOf(this.getEndTime());\n    String actual=String.valueOf(span.getEndTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endpointName)) {\n    String expected=this.getEndpointName();\n    String actual=span.getEndpointName();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(type)) {\n    String expected=this.getType();\n    String actual=span.getType();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(peer)) {\n    String expected=this.getPeer();\n    String actual=span.getPeer();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(component)) {\n    String expected=this.getComponent();\n    String actual=span.getComponent();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(isError)) {\n    String expected=Strings.nullToEmpty(String.valueOf(this.getIsError()));\n    String actual=Strings.nullToEmpty(String.valueOf(span.isError()));\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(layer)) {\n    String expected=this.getLayer();\n    String actual=span.getLayer();\n    doVerify(expected,actual);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 399,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 81,
        "startColumnNumber" : 12,
        "endLineNumber" : 81,
        "endColumnNumber" : 64
      },
      "nodeContext" : "String expected=String.valueOf(this.getEndTime());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.skywalking.e2e.trace.SpanMatcher"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 86,
      "startColumnNumber" : 30,
      "endLineNumber" : 86,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 86,
        "startColumnNumber" : 30,
        "endLineNumber" : 86,
        "endColumnNumber" : 52
      },
      "nodeContext" : "this.getEndpointName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 86,
        "startColumnNumber" : 19,
        "endLineNumber" : 86,
        "endColumnNumber" : 52
      },
      "nodeContext" : "expected=this.getEndpointName()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 86,
        "startColumnNumber" : 12,
        "endLineNumber" : 86,
        "endColumnNumber" : 53
      },
      "nodeContext" : "String expected=this.getEndpointName();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 85,
        "startColumnNumber" : 43,
        "endLineNumber" : 89,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String expected=this.getEndpointName();\n  String actual=span.getEndpointName();\n  doVerify(expected,actual);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 192,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Objects.nonNull(endpointName)) {\n  String expected=this.getEndpointName();\n  String actual=span.getEndpointName();\n  doVerify(expected,actual);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2658,
        "startLineNumber" : 49,
        "startColumnNumber" : 40,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (Objects.nonNull(traceId)) {\n    String expected=this.getTraceId();\n    String actual=span.getTraceId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(segmentId)) {\n    String expected=this.getSegmentId();\n    String actual=span.getSegmentId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(spanId)) {\n    String expected=String.valueOf(this.getSpanId());\n    String actual=String.valueOf(span.getSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(parentSpanId)) {\n    String expected=String.valueOf(this.getParentSpanId());\n    String actual=String.valueOf(span.getParentSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(serviceCode)) {\n    String expected=this.getServiceCode();\n    String actual=span.getServiceCode();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(startTime)) {\n    String expected=String.valueOf(this.getStartTime());\n    String actual=String.valueOf(span.getStartTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endTime)) {\n    String expected=String.valueOf(this.getEndTime());\n    String actual=String.valueOf(span.getEndTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endpointName)) {\n    String expected=this.getEndpointName();\n    String actual=span.getEndpointName();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(type)) {\n    String expected=this.getType();\n    String actual=span.getType();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(peer)) {\n    String expected=this.getPeer();\n    String actual=span.getPeer();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(component)) {\n    String expected=this.getComponent();\n    String actual=span.getComponent();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(isError)) {\n    String expected=Strings.nullToEmpty(String.valueOf(this.getIsError()));\n    String actual=Strings.nullToEmpty(String.valueOf(span.isError()));\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(layer)) {\n    String expected=this.getLayer();\n    String actual=span.getLayer();\n    doVerify(expected,actual);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 388,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2708,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void verify(final Span span){\n  if (Objects.nonNull(traceId)) {\n    String expected=this.getTraceId();\n    String actual=span.getTraceId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(segmentId)) {\n    String expected=this.getSegmentId();\n    String actual=span.getSegmentId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(spanId)) {\n    String expected=String.valueOf(this.getSpanId());\n    String actual=String.valueOf(span.getSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(parentSpanId)) {\n    String expected=String.valueOf(this.getParentSpanId());\n    String actual=String.valueOf(span.getParentSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(serviceCode)) {\n    String expected=this.getServiceCode();\n    String actual=span.getServiceCode();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(startTime)) {\n    String expected=String.valueOf(this.getStartTime());\n    String actual=String.valueOf(span.getStartTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endTime)) {\n    String expected=String.valueOf(this.getEndTime());\n    String actual=String.valueOf(span.getEndTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endpointName)) {\n    String expected=this.getEndpointName();\n    String actual=span.getEndpointName();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(type)) {\n    String expected=this.getType();\n    String actual=span.getType();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(peer)) {\n    String expected=this.getPeer();\n    String actual=span.getPeer();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(component)) {\n    String expected=this.getComponent();\n    String actual=span.getComponent();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(isError)) {\n    String expected=Strings.nullToEmpty(String.valueOf(this.getIsError()));\n    String actual=Strings.nullToEmpty(String.valueOf(span.isError()));\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(layer)) {\n    String expected=this.getLayer();\n    String actual=span.getLayer();\n    doVerify(expected,actual);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 399,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 86,
        "startColumnNumber" : 12,
        "endLineNumber" : 86,
        "endColumnNumber" : 53
      },
      "nodeContext" : "String expected=this.getEndpointName();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.skywalking.e2e.trace.SpanMatcher"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 91,
      "startColumnNumber" : 30,
      "endLineNumber" : 91,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 91,
        "startColumnNumber" : 30,
        "endLineNumber" : 91,
        "endColumnNumber" : 44
      },
      "nodeContext" : "this.getType()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 91,
        "startColumnNumber" : 19,
        "endLineNumber" : 91,
        "endColumnNumber" : 44
      },
      "nodeContext" : "expected=this.getType()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 91,
        "endColumnNumber" : 45
      },
      "nodeContext" : "String expected=this.getType();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 90,
        "startColumnNumber" : 35,
        "endLineNumber" : 94,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String expected=this.getType();\n  String actual=span.getType();\n  doVerify(expected,actual);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Objects.nonNull(type)) {\n  String expected=this.getType();\n  String actual=span.getType();\n  doVerify(expected,actual);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2658,
        "startLineNumber" : 49,
        "startColumnNumber" : 40,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (Objects.nonNull(traceId)) {\n    String expected=this.getTraceId();\n    String actual=span.getTraceId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(segmentId)) {\n    String expected=this.getSegmentId();\n    String actual=span.getSegmentId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(spanId)) {\n    String expected=String.valueOf(this.getSpanId());\n    String actual=String.valueOf(span.getSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(parentSpanId)) {\n    String expected=String.valueOf(this.getParentSpanId());\n    String actual=String.valueOf(span.getParentSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(serviceCode)) {\n    String expected=this.getServiceCode();\n    String actual=span.getServiceCode();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(startTime)) {\n    String expected=String.valueOf(this.getStartTime());\n    String actual=String.valueOf(span.getStartTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endTime)) {\n    String expected=String.valueOf(this.getEndTime());\n    String actual=String.valueOf(span.getEndTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endpointName)) {\n    String expected=this.getEndpointName();\n    String actual=span.getEndpointName();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(type)) {\n    String expected=this.getType();\n    String actual=span.getType();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(peer)) {\n    String expected=this.getPeer();\n    String actual=span.getPeer();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(component)) {\n    String expected=this.getComponent();\n    String actual=span.getComponent();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(isError)) {\n    String expected=Strings.nullToEmpty(String.valueOf(this.getIsError()));\n    String actual=Strings.nullToEmpty(String.valueOf(span.isError()));\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(layer)) {\n    String expected=this.getLayer();\n    String actual=span.getLayer();\n    doVerify(expected,actual);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 388,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2708,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void verify(final Span span){\n  if (Objects.nonNull(traceId)) {\n    String expected=this.getTraceId();\n    String actual=span.getTraceId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(segmentId)) {\n    String expected=this.getSegmentId();\n    String actual=span.getSegmentId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(spanId)) {\n    String expected=String.valueOf(this.getSpanId());\n    String actual=String.valueOf(span.getSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(parentSpanId)) {\n    String expected=String.valueOf(this.getParentSpanId());\n    String actual=String.valueOf(span.getParentSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(serviceCode)) {\n    String expected=this.getServiceCode();\n    String actual=span.getServiceCode();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(startTime)) {\n    String expected=String.valueOf(this.getStartTime());\n    String actual=String.valueOf(span.getStartTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endTime)) {\n    String expected=String.valueOf(this.getEndTime());\n    String actual=String.valueOf(span.getEndTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endpointName)) {\n    String expected=this.getEndpointName();\n    String actual=span.getEndpointName();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(type)) {\n    String expected=this.getType();\n    String actual=span.getType();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(peer)) {\n    String expected=this.getPeer();\n    String actual=span.getPeer();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(component)) {\n    String expected=this.getComponent();\n    String actual=span.getComponent();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(isError)) {\n    String expected=Strings.nullToEmpty(String.valueOf(this.getIsError()));\n    String actual=Strings.nullToEmpty(String.valueOf(span.isError()));\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(layer)) {\n    String expected=this.getLayer();\n    String actual=span.getLayer();\n    doVerify(expected,actual);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 399,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 91,
        "endColumnNumber" : 45
      },
      "nodeContext" : "String expected=this.getType();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.skywalking.e2e.trace.SpanMatcher"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 96,
      "startColumnNumber" : 30,
      "endLineNumber" : 96,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 96,
        "startColumnNumber" : 30,
        "endLineNumber" : 96,
        "endColumnNumber" : 44
      },
      "nodeContext" : "this.getPeer()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 96,
        "startColumnNumber" : 19,
        "endLineNumber" : 96,
        "endColumnNumber" : 44
      },
      "nodeContext" : "expected=this.getPeer()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 96,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 45
      },
      "nodeContext" : "String expected=this.getPeer();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 95,
        "startColumnNumber" : 35,
        "endLineNumber" : 99,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String expected=this.getPeer();\n  String actual=span.getPeer();\n  doVerify(expected,actual);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Objects.nonNull(peer)) {\n  String expected=this.getPeer();\n  String actual=span.getPeer();\n  doVerify(expected,actual);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2658,
        "startLineNumber" : 49,
        "startColumnNumber" : 40,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (Objects.nonNull(traceId)) {\n    String expected=this.getTraceId();\n    String actual=span.getTraceId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(segmentId)) {\n    String expected=this.getSegmentId();\n    String actual=span.getSegmentId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(spanId)) {\n    String expected=String.valueOf(this.getSpanId());\n    String actual=String.valueOf(span.getSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(parentSpanId)) {\n    String expected=String.valueOf(this.getParentSpanId());\n    String actual=String.valueOf(span.getParentSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(serviceCode)) {\n    String expected=this.getServiceCode();\n    String actual=span.getServiceCode();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(startTime)) {\n    String expected=String.valueOf(this.getStartTime());\n    String actual=String.valueOf(span.getStartTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endTime)) {\n    String expected=String.valueOf(this.getEndTime());\n    String actual=String.valueOf(span.getEndTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endpointName)) {\n    String expected=this.getEndpointName();\n    String actual=span.getEndpointName();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(type)) {\n    String expected=this.getType();\n    String actual=span.getType();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(peer)) {\n    String expected=this.getPeer();\n    String actual=span.getPeer();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(component)) {\n    String expected=this.getComponent();\n    String actual=span.getComponent();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(isError)) {\n    String expected=Strings.nullToEmpty(String.valueOf(this.getIsError()));\n    String actual=Strings.nullToEmpty(String.valueOf(span.isError()));\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(layer)) {\n    String expected=this.getLayer();\n    String actual=span.getLayer();\n    doVerify(expected,actual);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 388,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2708,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void verify(final Span span){\n  if (Objects.nonNull(traceId)) {\n    String expected=this.getTraceId();\n    String actual=span.getTraceId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(segmentId)) {\n    String expected=this.getSegmentId();\n    String actual=span.getSegmentId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(spanId)) {\n    String expected=String.valueOf(this.getSpanId());\n    String actual=String.valueOf(span.getSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(parentSpanId)) {\n    String expected=String.valueOf(this.getParentSpanId());\n    String actual=String.valueOf(span.getParentSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(serviceCode)) {\n    String expected=this.getServiceCode();\n    String actual=span.getServiceCode();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(startTime)) {\n    String expected=String.valueOf(this.getStartTime());\n    String actual=String.valueOf(span.getStartTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endTime)) {\n    String expected=String.valueOf(this.getEndTime());\n    String actual=String.valueOf(span.getEndTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endpointName)) {\n    String expected=this.getEndpointName();\n    String actual=span.getEndpointName();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(type)) {\n    String expected=this.getType();\n    String actual=span.getType();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(peer)) {\n    String expected=this.getPeer();\n    String actual=span.getPeer();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(component)) {\n    String expected=this.getComponent();\n    String actual=span.getComponent();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(isError)) {\n    String expected=Strings.nullToEmpty(String.valueOf(this.getIsError()));\n    String actual=Strings.nullToEmpty(String.valueOf(span.isError()));\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(layer)) {\n    String expected=this.getLayer();\n    String actual=span.getLayer();\n    doVerify(expected,actual);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 399,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 96,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 45
      },
      "nodeContext" : "String expected=this.getPeer();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.skywalking.e2e.trace.SpanMatcher"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 101,
      "startColumnNumber" : 30,
      "endLineNumber" : 101,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 101,
        "startColumnNumber" : 30,
        "endLineNumber" : 101,
        "endColumnNumber" : 49
      },
      "nodeContext" : "this.getComponent()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 101,
        "startColumnNumber" : 19,
        "endLineNumber" : 101,
        "endColumnNumber" : 49
      },
      "nodeContext" : "expected=this.getComponent()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 101,
        "startColumnNumber" : 12,
        "endLineNumber" : 101,
        "endColumnNumber" : 50
      },
      "nodeContext" : "String expected=this.getComponent();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 100,
        "startColumnNumber" : 40,
        "endLineNumber" : 104,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String expected=this.getComponent();\n  String actual=span.getComponent();\n  doVerify(expected,actual);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Objects.nonNull(component)) {\n  String expected=this.getComponent();\n  String actual=span.getComponent();\n  doVerify(expected,actual);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2658,
        "startLineNumber" : 49,
        "startColumnNumber" : 40,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (Objects.nonNull(traceId)) {\n    String expected=this.getTraceId();\n    String actual=span.getTraceId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(segmentId)) {\n    String expected=this.getSegmentId();\n    String actual=span.getSegmentId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(spanId)) {\n    String expected=String.valueOf(this.getSpanId());\n    String actual=String.valueOf(span.getSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(parentSpanId)) {\n    String expected=String.valueOf(this.getParentSpanId());\n    String actual=String.valueOf(span.getParentSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(serviceCode)) {\n    String expected=this.getServiceCode();\n    String actual=span.getServiceCode();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(startTime)) {\n    String expected=String.valueOf(this.getStartTime());\n    String actual=String.valueOf(span.getStartTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endTime)) {\n    String expected=String.valueOf(this.getEndTime());\n    String actual=String.valueOf(span.getEndTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endpointName)) {\n    String expected=this.getEndpointName();\n    String actual=span.getEndpointName();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(type)) {\n    String expected=this.getType();\n    String actual=span.getType();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(peer)) {\n    String expected=this.getPeer();\n    String actual=span.getPeer();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(component)) {\n    String expected=this.getComponent();\n    String actual=span.getComponent();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(isError)) {\n    String expected=Strings.nullToEmpty(String.valueOf(this.getIsError()));\n    String actual=Strings.nullToEmpty(String.valueOf(span.isError()));\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(layer)) {\n    String expected=this.getLayer();\n    String actual=span.getLayer();\n    doVerify(expected,actual);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 388,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2708,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void verify(final Span span){\n  if (Objects.nonNull(traceId)) {\n    String expected=this.getTraceId();\n    String actual=span.getTraceId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(segmentId)) {\n    String expected=this.getSegmentId();\n    String actual=span.getSegmentId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(spanId)) {\n    String expected=String.valueOf(this.getSpanId());\n    String actual=String.valueOf(span.getSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(parentSpanId)) {\n    String expected=String.valueOf(this.getParentSpanId());\n    String actual=String.valueOf(span.getParentSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(serviceCode)) {\n    String expected=this.getServiceCode();\n    String actual=span.getServiceCode();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(startTime)) {\n    String expected=String.valueOf(this.getStartTime());\n    String actual=String.valueOf(span.getStartTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endTime)) {\n    String expected=String.valueOf(this.getEndTime());\n    String actual=String.valueOf(span.getEndTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endpointName)) {\n    String expected=this.getEndpointName();\n    String actual=span.getEndpointName();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(type)) {\n    String expected=this.getType();\n    String actual=span.getType();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(peer)) {\n    String expected=this.getPeer();\n    String actual=span.getPeer();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(component)) {\n    String expected=this.getComponent();\n    String actual=span.getComponent();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(isError)) {\n    String expected=Strings.nullToEmpty(String.valueOf(this.getIsError()));\n    String actual=Strings.nullToEmpty(String.valueOf(span.isError()));\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(layer)) {\n    String expected=this.getLayer();\n    String actual=span.getLayer();\n    doVerify(expected,actual);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 399,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 101,
        "startColumnNumber" : 12,
        "endLineNumber" : 101,
        "endColumnNumber" : 50
      },
      "nodeContext" : "String expected=this.getComponent();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.skywalking.e2e.trace.SpanMatcher"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 106,
      "startColumnNumber" : 65,
      "endLineNumber" : 106,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 106,
        "startColumnNumber" : 65,
        "endLineNumber" : 106,
        "endColumnNumber" : 82
      },
      "nodeContext" : "this.getIsError()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 106,
        "startColumnNumber" : 50,
        "endLineNumber" : 106,
        "endColumnNumber" : 83
      },
      "nodeContext" : "String.valueOf(this.getIsError())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 106,
        "startColumnNumber" : 30,
        "endLineNumber" : 106,
        "endColumnNumber" : 84
      },
      "nodeContext" : "Strings.nullToEmpty(String.valueOf(this.getIsError()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 106,
        "endColumnNumber" : 84
      },
      "nodeContext" : "expected=Strings.nullToEmpty(String.valueOf(this.getIsError()))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 106,
        "startColumnNumber" : 12,
        "endLineNumber" : 106,
        "endColumnNumber" : 85
      },
      "nodeContext" : "String expected=Strings.nullToEmpty(String.valueOf(this.getIsError()));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 218,
        "startLineNumber" : 105,
        "startColumnNumber" : 38,
        "endLineNumber" : 109,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String expected=Strings.nullToEmpty(String.valueOf(this.getIsError()));\n  String actual=Strings.nullToEmpty(String.valueOf(span.isError()));\n  doVerify(expected,actual);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 248,
        "startLineNumber" : 105,
        "startColumnNumber" : 8,
        "endLineNumber" : 109,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Objects.nonNull(isError)) {\n  String expected=Strings.nullToEmpty(String.valueOf(this.getIsError()));\n  String actual=Strings.nullToEmpty(String.valueOf(span.isError()));\n  doVerify(expected,actual);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2658,
        "startLineNumber" : 49,
        "startColumnNumber" : 40,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (Objects.nonNull(traceId)) {\n    String expected=this.getTraceId();\n    String actual=span.getTraceId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(segmentId)) {\n    String expected=this.getSegmentId();\n    String actual=span.getSegmentId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(spanId)) {\n    String expected=String.valueOf(this.getSpanId());\n    String actual=String.valueOf(span.getSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(parentSpanId)) {\n    String expected=String.valueOf(this.getParentSpanId());\n    String actual=String.valueOf(span.getParentSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(serviceCode)) {\n    String expected=this.getServiceCode();\n    String actual=span.getServiceCode();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(startTime)) {\n    String expected=String.valueOf(this.getStartTime());\n    String actual=String.valueOf(span.getStartTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endTime)) {\n    String expected=String.valueOf(this.getEndTime());\n    String actual=String.valueOf(span.getEndTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endpointName)) {\n    String expected=this.getEndpointName();\n    String actual=span.getEndpointName();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(type)) {\n    String expected=this.getType();\n    String actual=span.getType();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(peer)) {\n    String expected=this.getPeer();\n    String actual=span.getPeer();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(component)) {\n    String expected=this.getComponent();\n    String actual=span.getComponent();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(isError)) {\n    String expected=Strings.nullToEmpty(String.valueOf(this.getIsError()));\n    String actual=Strings.nullToEmpty(String.valueOf(span.isError()));\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(layer)) {\n    String expected=this.getLayer();\n    String actual=span.getLayer();\n    doVerify(expected,actual);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 388,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2708,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void verify(final Span span){\n  if (Objects.nonNull(traceId)) {\n    String expected=this.getTraceId();\n    String actual=span.getTraceId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(segmentId)) {\n    String expected=this.getSegmentId();\n    String actual=span.getSegmentId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(spanId)) {\n    String expected=String.valueOf(this.getSpanId());\n    String actual=String.valueOf(span.getSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(parentSpanId)) {\n    String expected=String.valueOf(this.getParentSpanId());\n    String actual=String.valueOf(span.getParentSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(serviceCode)) {\n    String expected=this.getServiceCode();\n    String actual=span.getServiceCode();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(startTime)) {\n    String expected=String.valueOf(this.getStartTime());\n    String actual=String.valueOf(span.getStartTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endTime)) {\n    String expected=String.valueOf(this.getEndTime());\n    String actual=String.valueOf(span.getEndTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endpointName)) {\n    String expected=this.getEndpointName();\n    String actual=span.getEndpointName();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(type)) {\n    String expected=this.getType();\n    String actual=span.getType();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(peer)) {\n    String expected=this.getPeer();\n    String actual=span.getPeer();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(component)) {\n    String expected=this.getComponent();\n    String actual=span.getComponent();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(isError)) {\n    String expected=Strings.nullToEmpty(String.valueOf(this.getIsError()));\n    String actual=Strings.nullToEmpty(String.valueOf(span.isError()));\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(layer)) {\n    String expected=this.getLayer();\n    String actual=span.getLayer();\n    doVerify(expected,actual);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 399,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 106,
        "startColumnNumber" : 12,
        "endLineNumber" : 106,
        "endColumnNumber" : 85
      },
      "nodeContext" : "String expected=Strings.nullToEmpty(String.valueOf(this.getIsError()));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "org.apache.skywalking.e2e.trace.SpanMatcher"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 111,
      "startColumnNumber" : 30,
      "endLineNumber" : 111,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 111,
        "startColumnNumber" : 30,
        "endLineNumber" : 111,
        "endColumnNumber" : 45
      },
      "nodeContext" : "this.getLayer()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 111,
        "startColumnNumber" : 19,
        "endLineNumber" : 111,
        "endColumnNumber" : 45
      },
      "nodeContext" : "expected=this.getLayer()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 111,
        "startColumnNumber" : 12,
        "endLineNumber" : 111,
        "endColumnNumber" : 46
      },
      "nodeContext" : "String expected=this.getLayer();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 110,
        "startColumnNumber" : 36,
        "endLineNumber" : 114,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String expected=this.getLayer();\n  String actual=span.getLayer();\n  doVerify(expected,actual);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 171,
        "startLineNumber" : 110,
        "startColumnNumber" : 8,
        "endLineNumber" : 114,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Objects.nonNull(layer)) {\n  String expected=this.getLayer();\n  String actual=span.getLayer();\n  doVerify(expected,actual);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2658,
        "startLineNumber" : 49,
        "startColumnNumber" : 40,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (Objects.nonNull(traceId)) {\n    String expected=this.getTraceId();\n    String actual=span.getTraceId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(segmentId)) {\n    String expected=this.getSegmentId();\n    String actual=span.getSegmentId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(spanId)) {\n    String expected=String.valueOf(this.getSpanId());\n    String actual=String.valueOf(span.getSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(parentSpanId)) {\n    String expected=String.valueOf(this.getParentSpanId());\n    String actual=String.valueOf(span.getParentSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(serviceCode)) {\n    String expected=this.getServiceCode();\n    String actual=span.getServiceCode();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(startTime)) {\n    String expected=String.valueOf(this.getStartTime());\n    String actual=String.valueOf(span.getStartTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endTime)) {\n    String expected=String.valueOf(this.getEndTime());\n    String actual=String.valueOf(span.getEndTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endpointName)) {\n    String expected=this.getEndpointName();\n    String actual=span.getEndpointName();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(type)) {\n    String expected=this.getType();\n    String actual=span.getType();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(peer)) {\n    String expected=this.getPeer();\n    String actual=span.getPeer();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(component)) {\n    String expected=this.getComponent();\n    String actual=span.getComponent();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(isError)) {\n    String expected=Strings.nullToEmpty(String.valueOf(this.getIsError()));\n    String actual=Strings.nullToEmpty(String.valueOf(span.isError()));\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(layer)) {\n    String expected=this.getLayer();\n    String actual=span.getLayer();\n    doVerify(expected,actual);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 388,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2708,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void verify(final Span span){\n  if (Objects.nonNull(traceId)) {\n    String expected=this.getTraceId();\n    String actual=span.getTraceId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(segmentId)) {\n    String expected=this.getSegmentId();\n    String actual=span.getSegmentId();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(spanId)) {\n    String expected=String.valueOf(this.getSpanId());\n    String actual=String.valueOf(span.getSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(parentSpanId)) {\n    String expected=String.valueOf(this.getParentSpanId());\n    String actual=String.valueOf(span.getParentSpanId());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(serviceCode)) {\n    String expected=this.getServiceCode();\n    String actual=span.getServiceCode();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(startTime)) {\n    String expected=String.valueOf(this.getStartTime());\n    String actual=String.valueOf(span.getStartTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endTime)) {\n    String expected=String.valueOf(this.getEndTime());\n    String actual=String.valueOf(span.getEndTime());\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(endpointName)) {\n    String expected=this.getEndpointName();\n    String actual=span.getEndpointName();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(type)) {\n    String expected=this.getType();\n    String actual=span.getType();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(peer)) {\n    String expected=this.getPeer();\n    String actual=span.getPeer();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(component)) {\n    String expected=this.getComponent();\n    String actual=span.getComponent();\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(isError)) {\n    String expected=Strings.nullToEmpty(String.valueOf(this.getIsError()));\n    String actual=Strings.nullToEmpty(String.valueOf(span.isError()));\n    doVerify(expected,actual);\n  }\n  if (Objects.nonNull(layer)) {\n    String expected=this.getLayer();\n    String actual=span.getLayer();\n    doVerify(expected,actual);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 399,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 111,
        "startColumnNumber" : 12,
        "endLineNumber" : 111,
        "endColumnNumber" : 46
      },
      "nodeContext" : "String expected=this.getLayer();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.skywalking.e2e.trace.SpanMatcher"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 51,
    "startColumnNumber" : 30,
    "endLineNumber" : 51,
    "endColumnNumber" : 34
  }, {
    "charLength" : 4,
    "startLineNumber" : 56,
    "startColumnNumber" : 30,
    "endLineNumber" : 56,
    "endColumnNumber" : 34
  }, {
    "charLength" : 4,
    "startLineNumber" : 61,
    "startColumnNumber" : 45,
    "endLineNumber" : 61,
    "endColumnNumber" : 49
  }, {
    "charLength" : 4,
    "startLineNumber" : 66,
    "startColumnNumber" : 45,
    "endLineNumber" : 66,
    "endColumnNumber" : 49
  }, {
    "charLength" : 4,
    "startLineNumber" : 71,
    "startColumnNumber" : 30,
    "endLineNumber" : 71,
    "endColumnNumber" : 34
  }, {
    "charLength" : 4,
    "startLineNumber" : 76,
    "startColumnNumber" : 45,
    "endLineNumber" : 76,
    "endColumnNumber" : 49
  }, {
    "charLength" : 4,
    "startLineNumber" : 81,
    "startColumnNumber" : 45,
    "endLineNumber" : 81,
    "endColumnNumber" : 49
  }, {
    "charLength" : 4,
    "startLineNumber" : 86,
    "startColumnNumber" : 30,
    "endLineNumber" : 86,
    "endColumnNumber" : 34
  }, {
    "charLength" : 4,
    "startLineNumber" : 91,
    "startColumnNumber" : 30,
    "endLineNumber" : 91,
    "endColumnNumber" : 34
  }, {
    "charLength" : 4,
    "startLineNumber" : 96,
    "startColumnNumber" : 30,
    "endLineNumber" : 96,
    "endColumnNumber" : 34
  }, {
    "charLength" : 4,
    "startLineNumber" : 101,
    "startColumnNumber" : 30,
    "endLineNumber" : 101,
    "endColumnNumber" : 34
  }, {
    "charLength" : 4,
    "startLineNumber" : 106,
    "startColumnNumber" : 65,
    "endLineNumber" : 106,
    "endColumnNumber" : 69
  }, {
    "charLength" : 4,
    "startLineNumber" : 111,
    "startColumnNumber" : 30,
    "endLineNumber" : 111,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 12,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 12,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 12,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 10,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 11,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 12,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 12,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 12,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 12,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 10,
    "secondKey" : 12,
    "layout" : 5
  }, {
    "firstKey" : 11,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 8,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 10,
    "layout" : 7
  }, {
    "firstKey" : 11,
    "secondKey" : 12,
    "layout" : 7
  }, {
    "firstKey" : 12,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 12,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 12,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 12,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 12,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 12,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 12,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 12,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 12,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 12,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 12,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 12,
    "secondKey" : 11,
    "layout" : 5
  } ]
}