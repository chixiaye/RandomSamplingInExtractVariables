{
  "id" : 391,
  "expression" : "getCallback3.isDone()",
  "projectName" : "OpenAPITools@openapi-generator",
  "commitID" : "9e1972bb1d3a4f1e3f47c87613f4050feada0146",
  "filePath" : "/samples/client/petstore/java/okhttp-gson/src/test/java/org/openapitools/client/api/PetApiTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getCallback3.isDone()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 267,
      "startColumnNumber" : 19,
      "endLineNumber" : 267,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 267,
        "startColumnNumber" : 8,
        "endLineNumber" : 267,
        "endColumnNumber" : 41
      },
      "nodeContext" : "assertTrue(getCallback3.isDone())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 267,
        "startColumnNumber" : 8,
        "endLineNumber" : 267,
        "endColumnNumber" : 42
      },
      "nodeContext" : "assertTrue(getCallback3.isDone());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2455,
        "startLineNumber" : 228,
        "startColumnNumber" : 69,
        "endLineNumber" : 285,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Pet pet1=createPet();\n  Pet pet2=createPet();\n  final CountDownLatch addLatch=new CountDownLatch(2);\n  final TestApiCallback<Void> addCallback1=new TestApiCallback<Void>(addLatch);\n  final TestApiCallback<Void> addCallback2=new TestApiCallback<Void>(addLatch);\n  api.addPetAsync(pet1,addCallback1);\n  api.addPetAsync(pet2,addCallback2);\n  assertTrue(addLatch.await(10,TimeUnit.SECONDS));\n  assertTrue(addCallback1.isDone());\n  assertTrue(addCallback2.isDone());\n  if (!addCallback1.isSuccess())   throw addCallback1.getException();\n  if (!addCallback2.isSuccess())   throw addCallback2.getException();\n  assertValidProgress(addCallback1.getUploadProgress());\n  assertValidProgress(addCallback2.getUploadProgress());\n  final CountDownLatch getLatch=new CountDownLatch(3);\n  final TestApiCallback<Pet> getCallback1=new TestApiCallback<Pet>(getLatch);\n  final TestApiCallback<Pet> getCallback2=new TestApiCallback<Pet>(getLatch);\n  final TestApiCallback<Pet> getCallback3=new TestApiCallback<Pet>(getLatch);\n  api.getPetByIdAsync(pet1.getId(),getCallback1);\n  api.getPetByIdAsync(pet2.getId(),getCallback2);\n  api.getPetByIdAsync(-10000L,getCallback3);\n  assertTrue(getLatch.await(10,TimeUnit.SECONDS));\n  assertTrue(getCallback1.isDone());\n  assertTrue(getCallback2.isDone());\n  assertTrue(getCallback3.isDone());\n  if (!getCallback1.isSuccess())   throw getCallback1.getException();\n  if (!getCallback2.isSuccess())   throw getCallback2.getException();\n  assertPetMatches(pet1,getCallback1.getResult());\n  assertPetMatches(pet2,getCallback2.getResult());\n  assertValidProgress(getCallback1.getDownloadProgress());\n  assertValidProgress(getCallback2.getDownloadProgress());\n  assertFalse(getCallback3.isSuccess());\n  final ApiException exception=getCallback3.getException();\n  assertNotNull(exception);\n  assertEquals(404,exception.getCode());\n  api.deletePet(pet1.getId(),null);\n  api.deletePet(pet2.getId(),null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 316,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2530,
        "startLineNumber" : 227,
        "startColumnNumber" : 4,
        "endLineNumber" : 285,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCreateAndGetMultiplePetsAsync() throws Exception {\n  Pet pet1=createPet();\n  Pet pet2=createPet();\n  final CountDownLatch addLatch=new CountDownLatch(2);\n  final TestApiCallback<Void> addCallback1=new TestApiCallback<Void>(addLatch);\n  final TestApiCallback<Void> addCallback2=new TestApiCallback<Void>(addLatch);\n  api.addPetAsync(pet1,addCallback1);\n  api.addPetAsync(pet2,addCallback2);\n  assertTrue(addLatch.await(10,TimeUnit.SECONDS));\n  assertTrue(addCallback1.isDone());\n  assertTrue(addCallback2.isDone());\n  if (!addCallback1.isSuccess())   throw addCallback1.getException();\n  if (!addCallback2.isSuccess())   throw addCallback2.getException();\n  assertValidProgress(addCallback1.getUploadProgress());\n  assertValidProgress(addCallback2.getUploadProgress());\n  final CountDownLatch getLatch=new CountDownLatch(3);\n  final TestApiCallback<Pet> getCallback1=new TestApiCallback<Pet>(getLatch);\n  final TestApiCallback<Pet> getCallback2=new TestApiCallback<Pet>(getLatch);\n  final TestApiCallback<Pet> getCallback3=new TestApiCallback<Pet>(getLatch);\n  api.getPetByIdAsync(pet1.getId(),getCallback1);\n  api.getPetByIdAsync(pet2.getId(),getCallback2);\n  api.getPetByIdAsync(-10000L,getCallback3);\n  assertTrue(getLatch.await(10,TimeUnit.SECONDS));\n  assertTrue(getCallback1.isDone());\n  assertTrue(getCallback2.isDone());\n  assertTrue(getCallback3.isDone());\n  if (!getCallback1.isSuccess())   throw getCallback1.getException();\n  if (!getCallback2.isSuccess())   throw getCallback2.getException();\n  assertPetMatches(pet1,getCallback1.getResult());\n  assertPetMatches(pet2,getCallback2.getResult());\n  assertValidProgress(getCallback1.getDownloadProgress());\n  assertValidProgress(getCallback2.getDownloadProgress());\n  assertFalse(getCallback3.isSuccess());\n  final ApiException exception=getCallback3.getException();\n  assertNotNull(exception);\n  assertEquals(404,exception.getCode());\n  api.deletePet(pet1.getId(),null);\n  api.deletePet(pet2.getId(),null);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 324,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 267,
        "startColumnNumber" : 8,
        "endLineNumber" : 267,
        "endColumnNumber" : 42
      },
      "nodeContext" : "assertTrue(getCallback3.isDone());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 267,
    "startColumnNumber" : 19,
    "endLineNumber" : 267,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}