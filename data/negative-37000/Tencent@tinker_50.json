{
  "id" : 50,
  "expression" : "logWriter",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/decoder/DexDiffDecoder.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "logWriter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 119,
      "startColumnNumber" : 12,
      "endLineNumber" : 119,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 119,
        "startColumnNumber" : 12,
        "endLineNumber" : 119,
        "endColumnNumber" : 29
      },
      "nodeContext" : "logWriter != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 121,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (logWriter != null) {\n  this.dexPatcherLoggerBridge=new DexPatcherLoggerBridge(logWriter);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1238,
        "startLineNumber" : 104,
        "startColumnNumber" : 100,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(config);\n  if (metaPath != null) {\n    metaWriter=new InfoWriter(config,config.mTempResultDir + File.separator + metaPath);\n  }\n else {\n    metaWriter=null;\n  }\n  if (logPath != null) {\n    logWriter=new InfoWriter(config,config.mOutFolder + File.separator + logPath);\n  }\n else {\n    logWriter=null;\n  }\n  if (logWriter != null) {\n    this.dexPatcherLoggerBridge=new DexPatcherLoggerBridge(logWriter);\n  }\n  excludedClassModifiedChecker=new ExcludedClassModifiedChecker(config);\n  addedClassDescToDexNameMap=new HashMap<>();\n  deletedClassDescToDexNameMap=new HashMap<>();\n  oldAndNewDexFilePairList=new ArrayList<>();\n  dexNameToRelatedInfoMap=new HashMap<>();\n  loaderClassPatterns=new HashSet<>();\n  for (  String patternStr : config.mDexLoaderPattern) {\n    loaderClassPatterns.add(Pattern.compile(PatternUtils.dotClassNamePatternToDescriptorRegEx(patternStr)));\n  }\n  descOfClassesInApk=new HashSet<>();\n  oldDexFiles=new ArrayList<>();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 143,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1334,
        "startLineNumber" : 104,
        "startColumnNumber" : 4,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public DexDiffDecoder(Configuration config,String metaPath,String logPath) throws IOException {\n  super(config);\n  if (metaPath != null) {\n    metaWriter=new InfoWriter(config,config.mTempResultDir + File.separator + metaPath);\n  }\n else {\n    metaWriter=null;\n  }\n  if (logPath != null) {\n    logWriter=new InfoWriter(config,config.mOutFolder + File.separator + logPath);\n  }\n else {\n    logWriter=null;\n  }\n  if (logWriter != null) {\n    this.dexPatcherLoggerBridge=new DexPatcherLoggerBridge(logWriter);\n  }\n  excludedClassModifiedChecker=new ExcludedClassModifiedChecker(config);\n  addedClassDescToDexNameMap=new HashMap<>();\n  deletedClassDescToDexNameMap=new HashMap<>();\n  oldAndNewDexFilePairList=new ArrayList<>();\n  dexNameToRelatedInfoMap=new HashMap<>();\n  loaderClassPatterns=new HashSet<>();\n  for (  String patternStr : config.mDexLoaderPattern) {\n    loaderClassPatterns.add(Pattern.compile(PatternUtils.dotClassNamePatternToDescriptorRegEx(patternStr)));\n  }\n  descOfClassesInApk=new HashSet<>();\n  oldDexFiles=new ArrayList<>();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 160,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 119,
        "startColumnNumber" : 12,
        "endLineNumber" : 119,
        "endColumnNumber" : 29
      },
      "nodeContext" : "logWriter != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.info.InfoWriter"
  }, {
    "nodeContext" : "logWriter",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 120,
      "startColumnNumber" : 69,
      "endLineNumber" : 120,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 120,
        "startColumnNumber" : 42,
        "endLineNumber" : 120,
        "endColumnNumber" : 79
      },
      "nodeContext" : "new DexPatcherLoggerBridge(logWriter)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 120,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 79
      },
      "nodeContext" : "this.dexPatcherLoggerBridge=new DexPatcherLoggerBridge(logWriter)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 120,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 80
      },
      "nodeContext" : "this.dexPatcherLoggerBridge=new DexPatcherLoggerBridge(logWriter);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 119,
        "startColumnNumber" : 31,
        "endLineNumber" : 121,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  this.dexPatcherLoggerBridge=new DexPatcherLoggerBridge(logWriter);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 121,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (logWriter != null) {\n  this.dexPatcherLoggerBridge=new DexPatcherLoggerBridge(logWriter);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1238,
        "startLineNumber" : 104,
        "startColumnNumber" : 100,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super(config);\n  if (metaPath != null) {\n    metaWriter=new InfoWriter(config,config.mTempResultDir + File.separator + metaPath);\n  }\n else {\n    metaWriter=null;\n  }\n  if (logPath != null) {\n    logWriter=new InfoWriter(config,config.mOutFolder + File.separator + logPath);\n  }\n else {\n    logWriter=null;\n  }\n  if (logWriter != null) {\n    this.dexPatcherLoggerBridge=new DexPatcherLoggerBridge(logWriter);\n  }\n  excludedClassModifiedChecker=new ExcludedClassModifiedChecker(config);\n  addedClassDescToDexNameMap=new HashMap<>();\n  deletedClassDescToDexNameMap=new HashMap<>();\n  oldAndNewDexFilePairList=new ArrayList<>();\n  dexNameToRelatedInfoMap=new HashMap<>();\n  loaderClassPatterns=new HashSet<>();\n  for (  String patternStr : config.mDexLoaderPattern) {\n    loaderClassPatterns.add(Pattern.compile(PatternUtils.dotClassNamePatternToDescriptorRegEx(patternStr)));\n  }\n  descOfClassesInApk=new HashSet<>();\n  oldDexFiles=new ArrayList<>();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 143,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1334,
        "startLineNumber" : 104,
        "startColumnNumber" : 4,
        "endLineNumber" : 144,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public DexDiffDecoder(Configuration config,String metaPath,String logPath) throws IOException {\n  super(config);\n  if (metaPath != null) {\n    metaWriter=new InfoWriter(config,config.mTempResultDir + File.separator + metaPath);\n  }\n else {\n    metaWriter=null;\n  }\n  if (logPath != null) {\n    logWriter=new InfoWriter(config,config.mOutFolder + File.separator + logPath);\n  }\n else {\n    logWriter=null;\n  }\n  if (logWriter != null) {\n    this.dexPatcherLoggerBridge=new DexPatcherLoggerBridge(logWriter);\n  }\n  excludedClassModifiedChecker=new ExcludedClassModifiedChecker(config);\n  addedClassDescToDexNameMap=new HashMap<>();\n  deletedClassDescToDexNameMap=new HashMap<>();\n  oldAndNewDexFilePairList=new ArrayList<>();\n  dexNameToRelatedInfoMap=new HashMap<>();\n  loaderClassPatterns=new HashSet<>();\n  for (  String patternStr : config.mDexLoaderPattern) {\n    loaderClassPatterns.add(Pattern.compile(PatternUtils.dotClassNamePatternToDescriptorRegEx(patternStr)));\n  }\n  descOfClassesInApk=new HashSet<>();\n  oldDexFiles=new ArrayList<>();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 160,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 120,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 80
      },
      "nodeContext" : "this.dexPatcherLoggerBridge=new DexPatcherLoggerBridge(logWriter);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.build.info.InfoWriter"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 119,
    "startColumnNumber" : 12,
    "endLineNumber" : 119,
    "endColumnNumber" : 21
  }, {
    "charLength" : 9,
    "startLineNumber" : 120,
    "startColumnNumber" : 69,
    "endLineNumber" : 120,
    "endColumnNumber" : 78
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}