{
  "id" : 165,
  "expression" : "closeHooks.isEmpty()",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/java/io/vertx/core/impl/ContextImpl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "closeHooks.isEmpty()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 133,
      "startColumnNumber" : 31,
      "endLineNumber" : 133,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 133,
        "startColumnNumber" : 30,
        "endLineNumber" : 133,
        "endColumnNumber" : 51
      },
      "nodeContext" : "!closeHooks.isEmpty()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 133,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 51
      },
      "nodeContext" : "closeHooks != null && !closeHooks.isEmpty()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1158,
        "startLineNumber" : 133,
        "startColumnNumber" : 4,
        "endLineNumber" : 164,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (closeHooks != null && !closeHooks.isEmpty()) {\n  Set<Closeable> copy=new HashSet<>(closeHooks);\n  int num=copy.size();\n  if (num != 0) {\n    AtomicInteger count=new AtomicInteger();\n    AtomicBoolean failed=new AtomicBoolean();\n    for (    Closeable hook : copy) {\n      try {\n        hook.close(ar -> {\n          if (ar.failed()) {\n            if (failed.compareAndSet(false,true)) {\n              completionHandler.handle(Future.failedFuture(ar.cause()));\n            }\n          }\n else {\n            if (count.incrementAndGet() == num) {\n              completionHandler.handle(Future.succeededFuture());\n            }\n          }\n        }\n);\n      }\n catch (      Throwable t) {\n        log.warn(\"Failed to run close hooks\",t);\n      }\n    }\n  }\n else {\n    completionHandler.handle(Future.succeededFuture());\n  }\n}\n else {\n  completionHandler.handle(Future.succeededFuture());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 133,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1406,
        "startLineNumber" : 127,
        "startColumnNumber" : 74,
        "endLineNumber" : 167,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (closeHooksRun) {\n    throw new IllegalStateException(\"Close hooks already run\");\n  }\n  closeHooksRun=true;\n  if (closeHooks != null && !closeHooks.isEmpty()) {\n    Set<Closeable> copy=new HashSet<>(closeHooks);\n    int num=copy.size();\n    if (num != 0) {\n      AtomicInteger count=new AtomicInteger();\n      AtomicBoolean failed=new AtomicBoolean();\n      for (      Closeable hook : copy) {\n        try {\n          hook.close(ar -> {\n            if (ar.failed()) {\n              if (failed.compareAndSet(false,true)) {\n                completionHandler.handle(Future.failedFuture(ar.cause()));\n              }\n            }\n else {\n              if (count.incrementAndGet() == num) {\n                completionHandler.handle(Future.succeededFuture());\n              }\n            }\n          }\n);\n        }\n catch (        Throwable t) {\n          log.warn(\"Failed to run close hooks\",t);\n        }\n      }\n    }\n else {\n      completionHandler.handle(Future.succeededFuture());\n    }\n  }\n else {\n    completionHandler.handle(Future.succeededFuture());\n  }\n  VertxThreadFactory.unsetContext(this);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1478,
        "startLineNumber" : 127,
        "startColumnNumber" : 2,
        "endLineNumber" : 167,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void runCloseHooks(Handler<AsyncResult<Void>> completionHandler){\n  if (closeHooksRun) {\n    throw new IllegalStateException(\"Close hooks already run\");\n  }\n  closeHooksRun=true;\n  if (closeHooks != null && !closeHooks.isEmpty()) {\n    Set<Closeable> copy=new HashSet<>(closeHooks);\n    int num=copy.size();\n    if (num != 0) {\n      AtomicInteger count=new AtomicInteger();\n      AtomicBoolean failed=new AtomicBoolean();\n      for (      Closeable hook : copy) {\n        try {\n          hook.close(ar -> {\n            if (ar.failed()) {\n              if (failed.compareAndSet(false,true)) {\n                completionHandler.handle(Future.failedFuture(ar.cause()));\n              }\n            }\n else {\n              if (count.incrementAndGet() == num) {\n                completionHandler.handle(Future.succeededFuture());\n              }\n            }\n          }\n);\n        }\n catch (        Throwable t) {\n          log.warn(\"Failed to run close hooks\",t);\n        }\n      }\n    }\n else {\n      completionHandler.handle(Future.succeededFuture());\n    }\n  }\n else {\n    completionHandler.handle(Future.succeededFuture());\n  }\n  VertxThreadFactory.unsetContext(this);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 165,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 133,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 51
      },
      "nodeContext" : "closeHooks != null && !closeHooks.isEmpty()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 133,
    "startColumnNumber" : 31,
    "endLineNumber" : 133,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}