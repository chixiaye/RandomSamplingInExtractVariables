{
  "id" : 372,
  "expression" : "i",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/main/java/com/google/devtools/build/lib/vfs/OsPathPolicy.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 107,
      "startColumnNumber" : 27,
      "endLineNumber" : 107,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 107,
        "startColumnNumber" : 27,
        "endLineNumber" : 107,
        "endColumnNumber" : 32
      },
      "nodeContext" : "i < n",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 920,
        "startLineNumber" : 107,
        "startColumnNumber" : 6,
        "endLineNumber" : 134,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=starti; i < n; ++i) {\n  String segment=segments[i];\nswitch (segment) {\ncase \".\":    ++shift;\n  break;\ncase \"..\":if (segmentCount > 0 && !segments[segmentCount - 1].equals(\"..\")) {\n  segmentCount--;\n  shift+=2;\n  break;\n}\n else if (isAbsolute) {\n  ++shift;\n  break;\n}\ndefault:++segmentCount;\nif (shift > 0) {\nsegments[i - shift]=segments[i];\n}\nbreak;\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 80,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1046,
        "startLineNumber" : 103,
        "startColumnNumber" : 86,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int segmentCount=0;\n  int shift=starti;\n  int n=segments.length;\n  for (int i=starti; i < n; ++i) {\n    String segment=segments[i];\nswitch (segment) {\ncase \".\":      ++shift;\n    break;\ncase \"..\":  if (segmentCount > 0 && !segments[segmentCount - 1].equals(\"..\")) {\n    segmentCount--;\n    shift+=2;\n    break;\n  }\n else   if (isAbsolute) {\n    ++shift;\n    break;\n  }\ndefault:++segmentCount;\nif (shift > 0) {\nsegments[i - shift]=segments[i];\n}\nbreak;\n}\n}\nreturn segmentCount;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1296,
        "startLineNumber" : 99,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Normalizes any '.' and '..' in-place in the segment array by shifting other segments to the front. Returns the remaining number of items.\n */\nstatic int removeRelativePaths(String[] segments,int starti,boolean isAbsolute){\n  int segmentCount=0;\n  int shift=starti;\n  int n=segments.length;\n  for (int i=starti; i < n; ++i) {\n    String segment=segments[i];\nswitch (segment) {\ncase \".\":      ++shift;\n    break;\ncase \"..\":  if (segmentCount > 0 && !segments[segmentCount - 1].equals(\"..\")) {\n    segmentCount--;\n    shift+=2;\n    break;\n  }\n else   if (isAbsolute) {\n    ++shift;\n    break;\n  }\ndefault:++segmentCount;\nif (shift > 0) {\nsegments[i - shift]=segments[i];\n}\nbreak;\n}\n}\nreturn segmentCount;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 117,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 107,
        "startColumnNumber" : 27,
        "endLineNumber" : 107,
        "endColumnNumber" : 32
      },
      "nodeContext" : "i < n",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 108,
      "startColumnNumber" : 34,
      "endLineNumber" : 108,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 108,
        "startColumnNumber" : 25,
        "endLineNumber" : 108,
        "endColumnNumber" : 36
      },
      "nodeContext" : "segments[i]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 108,
        "startColumnNumber" : 15,
        "endLineNumber" : 108,
        "endColumnNumber" : 36
      },
      "nodeContext" : "segment=segments[i]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 108,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 37
      },
      "nodeContext" : "String segment=segments[i];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 887,
        "startLineNumber" : 107,
        "startColumnNumber" : 39,
        "endLineNumber" : 134,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  String segment=segments[i];\nswitch (segment) {\ncase \".\":    ++shift;\n  break;\ncase \"..\":if (segmentCount > 0 && !segments[segmentCount - 1].equals(\"..\")) {\n  segmentCount--;\n  shift+=2;\n  break;\n}\n else if (isAbsolute) {\n  ++shift;\n  break;\n}\ndefault:++segmentCount;\nif (shift > 0) {\nsegments[i - shift]=segments[i];\n}\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 920,
        "startLineNumber" : 107,
        "startColumnNumber" : 6,
        "endLineNumber" : 134,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=starti; i < n; ++i) {\n  String segment=segments[i];\nswitch (segment) {\ncase \".\":    ++shift;\n  break;\ncase \"..\":if (segmentCount > 0 && !segments[segmentCount - 1].equals(\"..\")) {\n  segmentCount--;\n  shift+=2;\n  break;\n}\n else if (isAbsolute) {\n  ++shift;\n  break;\n}\ndefault:++segmentCount;\nif (shift > 0) {\nsegments[i - shift]=segments[i];\n}\nbreak;\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 80,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1046,
        "startLineNumber" : 103,
        "startColumnNumber" : 86,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int segmentCount=0;\n  int shift=starti;\n  int n=segments.length;\n  for (int i=starti; i < n; ++i) {\n    String segment=segments[i];\nswitch (segment) {\ncase \".\":      ++shift;\n    break;\ncase \"..\":  if (segmentCount > 0 && !segments[segmentCount - 1].equals(\"..\")) {\n    segmentCount--;\n    shift+=2;\n    break;\n  }\n else   if (isAbsolute) {\n    ++shift;\n    break;\n  }\ndefault:++segmentCount;\nif (shift > 0) {\nsegments[i - shift]=segments[i];\n}\nbreak;\n}\n}\nreturn segmentCount;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1296,
        "startLineNumber" : 99,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Normalizes any '.' and '..' in-place in the segment array by shifting other segments to the front. Returns the remaining number of items.\n */\nstatic int removeRelativePaths(String[] segments,int starti,boolean isAbsolute){\n  int segmentCount=0;\n  int shift=starti;\n  int n=segments.length;\n  for (int i=starti; i < n; ++i) {\n    String segment=segments[i];\nswitch (segment) {\ncase \".\":      ++shift;\n    break;\ncase \"..\":  if (segmentCount > 0 && !segments[segmentCount - 1].equals(\"..\")) {\n    segmentCount--;\n    shift+=2;\n    break;\n  }\n else   if (isAbsolute) {\n    ++shift;\n    break;\n  }\ndefault:++segmentCount;\nif (shift > 0) {\nsegments[i - shift]=segments[i];\n}\nbreak;\n}\n}\nreturn segmentCount;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 117,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 108,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 37
      },
      "nodeContext" : "String segment=segments[i];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 130,
      "startColumnNumber" : 23,
      "endLineNumber" : 130,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,index]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 130,
        "startColumnNumber" : 23,
        "endLineNumber" : 130,
        "endColumnNumber" : 32
      },
      "nodeContext" : "i - shift",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 130,
        "startColumnNumber" : 14,
        "endLineNumber" : 130,
        "endColumnNumber" : 33
      },
      "nodeContext" : "segments[i - shift]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 130,
        "startColumnNumber" : 14,
        "endLineNumber" : 130,
        "endColumnNumber" : 47
      },
      "nodeContext" : "segments[i - shift]=segments[i]",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 130,
        "startColumnNumber" : 14,
        "endLineNumber" : 130,
        "endColumnNumber" : 48
      },
      "nodeContext" : "segments[i - shift]=segments[i];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 129,
        "startColumnNumber" : 27,
        "endLineNumber" : 131,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  segments[i - shift]=segments[i];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 129,
        "startColumnNumber" : 12,
        "endLineNumber" : 131,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (shift > 0) {\n  segments[i - shift]=segments[i];\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 831,
        "startLineNumber" : 109,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "switch (segment) {\ncase \".\":  ++shift;\nbreak;\ncase \"..\":if (segmentCount > 0 && !segments[segmentCount - 1].equals(\"..\")) {\nsegmentCount--;\nshift+=2;\nbreak;\n}\n else if (isAbsolute) {\n++shift;\nbreak;\n}\ndefault:++segmentCount;\nif (shift > 0) {\nsegments[i - shift]=segments[i];\n}\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 60,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 887,
        "startLineNumber" : 107,
        "startColumnNumber" : 39,
        "endLineNumber" : 134,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  String segment=segments[i];\nswitch (segment) {\ncase \".\":    ++shift;\n  break;\ncase \"..\":if (segmentCount > 0 && !segments[segmentCount - 1].equals(\"..\")) {\n  segmentCount--;\n  shift+=2;\n  break;\n}\n else if (isAbsolute) {\n  ++shift;\n  break;\n}\ndefault:++segmentCount;\nif (shift > 0) {\nsegments[i - shift]=segments[i];\n}\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 920,
        "startLineNumber" : 107,
        "startColumnNumber" : 6,
        "endLineNumber" : 134,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=starti; i < n; ++i) {\n  String segment=segments[i];\nswitch (segment) {\ncase \".\":    ++shift;\n  break;\ncase \"..\":if (segmentCount > 0 && !segments[segmentCount - 1].equals(\"..\")) {\n  segmentCount--;\n  shift+=2;\n  break;\n}\n else if (isAbsolute) {\n  ++shift;\n  break;\n}\ndefault:++segmentCount;\nif (shift > 0) {\nsegments[i - shift]=segments[i];\n}\nbreak;\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 80,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1046,
        "startLineNumber" : 103,
        "startColumnNumber" : 86,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int segmentCount=0;\n  int shift=starti;\n  int n=segments.length;\n  for (int i=starti; i < n; ++i) {\n    String segment=segments[i];\nswitch (segment) {\ncase \".\":      ++shift;\n    break;\ncase \"..\":  if (segmentCount > 0 && !segments[segmentCount - 1].equals(\"..\")) {\n    segmentCount--;\n    shift+=2;\n    break;\n  }\n else   if (isAbsolute) {\n    ++shift;\n    break;\n  }\ndefault:++segmentCount;\nif (shift > 0) {\nsegments[i - shift]=segments[i];\n}\nbreak;\n}\n}\nreturn segmentCount;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1296,
        "startLineNumber" : 99,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Normalizes any '.' and '..' in-place in the segment array by shifting other segments to the front. Returns the remaining number of items.\n */\nstatic int removeRelativePaths(String[] segments,int starti,boolean isAbsolute){\n  int segmentCount=0;\n  int shift=starti;\n  int n=segments.length;\n  for (int i=starti; i < n; ++i) {\n    String segment=segments[i];\nswitch (segment) {\ncase \".\":      ++shift;\n    break;\ncase \"..\":  if (segmentCount > 0 && !segments[segmentCount - 1].equals(\"..\")) {\n    segmentCount--;\n    shift+=2;\n    break;\n  }\n else   if (isAbsolute) {\n    ++shift;\n    break;\n  }\ndefault:++segmentCount;\nif (shift > 0) {\nsegments[i - shift]=segments[i];\n}\nbreak;\n}\n}\nreturn segmentCount;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 117,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 130,
        "startColumnNumber" : 14,
        "endLineNumber" : 130,
        "endColumnNumber" : 48
      },
      "nodeContext" : "segments[i - shift]=segments[i];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "i",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 130,
      "startColumnNumber" : 45,
      "endLineNumber" : 130,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 130,
        "startColumnNumber" : 36,
        "endLineNumber" : 130,
        "endColumnNumber" : 47
      },
      "nodeContext" : "segments[i]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 130,
        "startColumnNumber" : 14,
        "endLineNumber" : 130,
        "endColumnNumber" : 47
      },
      "nodeContext" : "segments[i - shift]=segments[i]",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 130,
        "startColumnNumber" : 14,
        "endLineNumber" : 130,
        "endColumnNumber" : 48
      },
      "nodeContext" : "segments[i - shift]=segments[i];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 129,
        "startColumnNumber" : 27,
        "endLineNumber" : 131,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  segments[i - shift]=segments[i];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 129,
        "startColumnNumber" : 12,
        "endLineNumber" : 131,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (shift > 0) {\n  segments[i - shift]=segments[i];\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 831,
        "startLineNumber" : 109,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "switch (segment) {\ncase \".\":  ++shift;\nbreak;\ncase \"..\":if (segmentCount > 0 && !segments[segmentCount - 1].equals(\"..\")) {\nsegmentCount--;\nshift+=2;\nbreak;\n}\n else if (isAbsolute) {\n++shift;\nbreak;\n}\ndefault:++segmentCount;\nif (shift > 0) {\nsegments[i - shift]=segments[i];\n}\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 60,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 887,
        "startLineNumber" : 107,
        "startColumnNumber" : 39,
        "endLineNumber" : 134,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  String segment=segments[i];\nswitch (segment) {\ncase \".\":    ++shift;\n  break;\ncase \"..\":if (segmentCount > 0 && !segments[segmentCount - 1].equals(\"..\")) {\n  segmentCount--;\n  shift+=2;\n  break;\n}\n else if (isAbsolute) {\n  ++shift;\n  break;\n}\ndefault:++segmentCount;\nif (shift > 0) {\nsegments[i - shift]=segments[i];\n}\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 920,
        "startLineNumber" : 107,
        "startColumnNumber" : 6,
        "endLineNumber" : 134,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=starti; i < n; ++i) {\n  String segment=segments[i];\nswitch (segment) {\ncase \".\":    ++shift;\n  break;\ncase \"..\":if (segmentCount > 0 && !segments[segmentCount - 1].equals(\"..\")) {\n  segmentCount--;\n  shift+=2;\n  break;\n}\n else if (isAbsolute) {\n  ++shift;\n  break;\n}\ndefault:++segmentCount;\nif (shift > 0) {\nsegments[i - shift]=segments[i];\n}\nbreak;\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 80,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1046,
        "startLineNumber" : 103,
        "startColumnNumber" : 86,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int segmentCount=0;\n  int shift=starti;\n  int n=segments.length;\n  for (int i=starti; i < n; ++i) {\n    String segment=segments[i];\nswitch (segment) {\ncase \".\":      ++shift;\n    break;\ncase \"..\":  if (segmentCount > 0 && !segments[segmentCount - 1].equals(\"..\")) {\n    segmentCount--;\n    shift+=2;\n    break;\n  }\n else   if (isAbsolute) {\n    ++shift;\n    break;\n  }\ndefault:++segmentCount;\nif (shift > 0) {\nsegments[i - shift]=segments[i];\n}\nbreak;\n}\n}\nreturn segmentCount;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1296,
        "startLineNumber" : 99,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Normalizes any '.' and '..' in-place in the segment array by shifting other segments to the front. Returns the remaining number of items.\n */\nstatic int removeRelativePaths(String[] segments,int starti,boolean isAbsolute){\n  int segmentCount=0;\n  int shift=starti;\n  int n=segments.length;\n  for (int i=starti; i < n; ++i) {\n    String segment=segments[i];\nswitch (segment) {\ncase \".\":      ++shift;\n    break;\ncase \"..\":  if (segmentCount > 0 && !segments[segmentCount - 1].equals(\"..\")) {\n    segmentCount--;\n    shift+=2;\n    break;\n  }\n else   if (isAbsolute) {\n    ++shift;\n    break;\n  }\ndefault:++segmentCount;\nif (shift > 0) {\nsegments[i - shift]=segments[i];\n}\nbreak;\n}\n}\nreturn segmentCount;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 117,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 130,
        "startColumnNumber" : 14,
        "endLineNumber" : 130,
        "endColumnNumber" : 48
      },
      "nodeContext" : "segments[i - shift]=segments[i];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 107,
    "startColumnNumber" : 27,
    "endLineNumber" : 107,
    "endColumnNumber" : 28
  }, {
    "charLength" : 1,
    "startLineNumber" : 108,
    "startColumnNumber" : 34,
    "endLineNumber" : 108,
    "endColumnNumber" : 35
  }, {
    "charLength" : 1,
    "startLineNumber" : 130,
    "startColumnNumber" : 23,
    "endLineNumber" : 130,
    "endColumnNumber" : 24
  }, {
    "charLength" : 1,
    "startLineNumber" : 130,
    "startColumnNumber" : 45,
    "endLineNumber" : 130,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 1
  } ]
}