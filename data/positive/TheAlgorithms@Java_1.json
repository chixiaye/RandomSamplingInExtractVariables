{
  "id" : 1,
  "expression" : "message.length()",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "ciphers/Caesar.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "message.length()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 31,
      "startColumnNumber" : 18,
      "endLineNumber" : 31,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 31,
        "startColumnNumber" : 18,
        "endLineNumber" : 31,
        "endColumnNumber" : 43
      },
      "nodeContext" : "length=message.length()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 44
      },
      "nodeContext" : "final int length=message.length();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 928,
        "startLineNumber" : 24,
        "startColumnNumber" : 59,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String encoded=\"\";\n  while (shift >= 26) {\n    shift-=26;\n  }\n  final int length=message.length();\n  for (int i=0; i < length; i++) {\n    char current=message.charAt(i);\n    if (current >= 'A' && current <= 'Z') {\n      current+=shift;\n      encoded+=(char)(current > 'Z' ? current - 26 : current);\n    }\n else     if (current >= 'a' && current <= 'z') {\n      current+=shift;\n      encoded+=(char)(current > 'z' ? current - 26 : current);\n    }\n else {\n      encoded+=current;\n    }\n  }\n  return encoded;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1188,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Encrypt text by shifting every Latin char by add number shift for ASCII Example : A + 1 -> B\n * @param message\n * @param shift\n * @return Encrypted message\n */\npublic static String encode(String message,int shift){\n  String encoded=\"\";\n  while (shift >= 26) {\n    shift-=26;\n  }\n  final int length=message.length();\n  for (int i=0; i < length; i++) {\n    char current=message.charAt(i);\n    if (current >= 'A' && current <= 'Z') {\n      current+=shift;\n      encoded+=(char)(current > 'Z' ? current - 26 : current);\n    }\n else     if (current >= 'a' && current <= 'z') {\n      current+=shift;\n      encoded+=(char)(current > 'z' ? current - 26 : current);\n    }\n else {\n      encoded+=current;\n    }\n  }\n  return encoded;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 119,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 44
      },
      "nodeContext" : "final int length=message.length();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : null
  }, {
    "nodeContext" : "length",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 32,
      "startColumnNumber" : 28,
      "endLineNumber" : 32,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 32,
        "startColumnNumber" : 24,
        "endLineNumber" : 32,
        "endColumnNumber" : 34
      },
      "nodeContext" : "i < length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 715,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < length; i++) {\n  char current=message.charAt(i);\n  if (current >= 'A' && current <= 'Z') {\n    current+=shift;\n    encoded+=(char)(current > 'Z' ? current - 26 : current);\n  }\n else   if (current >= 'a' && current <= 'z') {\n    current+=shift;\n    encoded+=(char)(current > 'z' ? current - 26 : current);\n  }\n else {\n    encoded+=current;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 79,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 928,
        "startLineNumber" : 24,
        "startColumnNumber" : 59,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String encoded=\"\";\n  while (shift >= 26) {\n    shift-=26;\n  }\n  final int length=message.length();\n  for (int i=0; i < length; i++) {\n    char current=message.charAt(i);\n    if (current >= 'A' && current <= 'Z') {\n      current+=shift;\n      encoded+=(char)(current > 'Z' ? current - 26 : current);\n    }\n else     if (current >= 'a' && current <= 'z') {\n      current+=shift;\n      encoded+=(char)(current > 'z' ? current - 26 : current);\n    }\n else {\n      encoded+=current;\n    }\n  }\n  return encoded;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1188,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Encrypt text by shifting every Latin char by add number shift for ASCII Example : A + 1 -> B\n * @param message\n * @param shift\n * @return Encrypted message\n */\npublic static String encode(String message,int shift){\n  String encoded=\"\";\n  while (shift >= 26) {\n    shift-=26;\n  }\n  final int length=message.length();\n  for (int i=0; i < length; i++) {\n    char current=message.charAt(i);\n    if (current >= 'A' && current <= 'Z') {\n      current+=shift;\n      encoded+=(char)(current > 'Z' ? current - 26 : current);\n    }\n else     if (current >= 'a' && current <= 'z') {\n      current+=shift;\n      encoded+=(char)(current > 'z' ? current - 26 : current);\n    }\n else {\n      encoded+=current;\n    }\n  }\n  return encoded;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 119,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 32,
        "startColumnNumber" : 24,
        "endLineNumber" : 32,
        "endColumnNumber" : 34
      },
      "nodeContext" : "i < length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 31,
    "startColumnNumber" : 18,
    "endLineNumber" : 31,
    "endColumnNumber" : 24
  }, {
    "charLength" : 6,
    "startLineNumber" : 32,
    "startColumnNumber" : 28,
    "endLineNumber" : 32,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}