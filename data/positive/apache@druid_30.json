{
  "id" : 30,
  "expression" : "query.withOverriddenContext(ImmutableMap.of(\"bufferGrouperMaxSize\",4000))",
  "projectName" : "apache@druid",
  "commitID" : "08ab82f55ca856d60dfe1088c1c0393428b0bb6d",
  "filePath" : "benchmarks/src/test/java/org/apache/druid/benchmark/query/GroupByBenchmark.java",
  "occurrences" : 1,
  "expressionList" : [ {
    "nodeContext" : "query.withOverriddenContext(ImmutableMap.of(\"bufferGrouperMaxSize\",4000))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 73,
      "startLineNumber" : 773,
      "startColumnNumber" : 67,
      "endLineNumber" : 773,
      "endColumnNumber" : 140
    },
    "astNodeNumber" : 8,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 773,
        "startColumnNumber" : 52,
        "endLineNumber" : 773,
        "endColumnNumber" : 141
      },
      "nodeContext" : "QueryPlus.wrap(query.withOverriddenContext(ImmutableMap.of(\"bufferGrouperMaxSize\",4000)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 773,
        "startColumnNumber" : 38,
        "endLineNumber" : 773,
        "endColumnNumber" : 172
      },
      "nodeContext" : "theRunner.run(QueryPlus.wrap(query.withOverriddenContext(ImmutableMap.of(\"bufferGrouperMaxSize\",4000))),ResponseContext.createEmpty())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 773,
        "startColumnNumber" : 24,
        "endLineNumber" : 773,
        "endColumnNumber" : 170
      },
      "nodeContext" : "queryResult=theRunner.run(QueryPlus.wrap(query.withOverriddenContext(ImmutableMap.of(\"bufferGrouperMaxSize\",4000))),ResponseContext.createEmpty())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 773,
        "startColumnNumber" : 4,
        "endLineNumber" : 773,
        "endColumnNumber" : 172
      },
      "nodeContext" : "Sequence<ResultRow> queryResult=theRunner.run(QueryPlus.wrap(query.withOverriddenContext(ImmutableMap.of(\"bufferGrouperMaxSize\",4000))),ResponseContext.createEmpty());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 683,
        "startLineNumber" : 761,
        "startColumnNumber" : 2,
        "endLineNumber" : 776,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  QueryToolChest<ResultRow,GroupByQuery> toolChest=factory.getToolchest();\n  QueryRunner<ResultRow> theRunner=new FinalizeResultsQueryRunner<>(toolChest.mergeResults(factory.mergeRunners(state.executorService,makeMultiRunners(state))),(QueryToolChest)toolChest);\n  final GroupByQuery query.withOverriddenContext(ImmutableMap.of(\"bufferGrouperMaxSize\",4000))=query.withOverriddenContext(ImmutableMap.of(\"bufferGrouperMaxSize\",4000));\n  Sequence<ResultRow> queryResult=theRunner.run(QueryPlus.wrap(query.withOverriddenContext(ImmutableMap.of(\"bufferGrouperMaxSize\",4000))),ResponseContext.createEmpty());\n  Yielder<ResultRow> yielder=Yielders.each(queryResult);\n  yielder.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 752,
        "startColumnNumber" : 2,
        "endLineNumber" : 776,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Measure the time to produce the first ResultRow unlike  {@link #queryMultiQueryableIndexWithSpilling} measurestotal query processing time. This measure is useful since the Broker can start merging as soon as the first result is returned.\n */\n@Benchmark @BenchmarkMode(Mode.AverageTime) @OutputTimeUnit(TimeUnit.MICROSECONDS) public void queryMultiQueryableIndexWithSpillingTTFR(Blackhole blackhole,QueryableIndexState state) throws IOException {\n  QueryToolChest<ResultRow,GroupByQuery> toolChest=factory.getToolchest();\n  QueryRunner<ResultRow> theRunner=new FinalizeResultsQueryRunner<>(toolChest.mergeResults(factory.mergeRunners(state.executorService,makeMultiRunners(state))),(QueryToolChest)toolChest);\n  final GroupByQuery query.withOverriddenContext(ImmutableMap.of(\"bufferGrouperMaxSize\",4000))=query.withOverriddenContext(ImmutableMap.of(\"bufferGrouperMaxSize\",4000));\n  Sequence<ResultRow> queryResult=theRunner.run(QueryPlus.wrap(query.withOverriddenContext(ImmutableMap.of(\"bufferGrouperMaxSize\",4000))),ResponseContext.createEmpty());\n  Yielder<ResultRow> yielder=Yielders.each(queryResult);\n  yielder.close();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 9
    } ],
    "tokenLength" : 6,
    "type" : "org.apache.druid.query.groupby.GroupByQuery"
  } ],
  "positionList" : [ {
    "charLength" : 73,
    "startLineNumber" : 773,
    "startColumnNumber" : 67,
    "endLineNumber" : 773,
    "endColumnNumber" : 140
  } ],
  "layoutRelationDataList" : [ ]
}