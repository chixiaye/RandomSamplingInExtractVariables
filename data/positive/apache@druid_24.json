{
  "id" : 24,
  "expression" : "JodaUtils.condenseIntervals(intervals)",
  "projectName" : "apache@druid",
  "commitID" : "0e4750bac208d99f4a07545cc2f401f9bcdc1381",
  "filePath" : "core/src/test/java/org/apache/druid/common/utils/JodaUtilsTest.java",
  "occurrences" : 1,
  "expressionList" : [ {
    "nodeContext" : "JodaUtils.condenseIntervals(intervals)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 38,
      "startLineNumber" : 94,
      "startColumnNumber" : 8,
      "endLineNumber" : 94,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "Assert.assertEquals(expected,JodaUtils.condenseIntervals(intervals))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 6
      },
      "nodeContext" : "Assert.assertEquals(expected,JodaUtils.condenseIntervals(intervals));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 751,
        "startLineNumber" : 70,
        "startColumnNumber" : 2,
        "endLineNumber" : 97,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<Interval> intervals=Arrays.asList(Intervals.of(\"2011-01-01/2011-01-02\"),Intervals.of(\"2011-01-02/2011-01-03\"),Intervals.of(\"2011-02-01/2011-02-05\"),Intervals.of(\"2011-02-01/2011-02-02\"),Intervals.of(\"2011-02-03/2011-02-08\"),Intervals.of(\"2011-03-01/2011-03-02\"),Intervals.of(\"2011-03-03/2011-03-04\"),Intervals.of(\"2011-03-05/2011-03-06\"));\n  List<Interval> expected=Arrays.asList(Intervals.of(\"2011-01-01/2011-01-03\"),Intervals.of(\"2011-02-01/2011-02-08\"),Intervals.of(\"2011-03-01/2011-03-02\"),Intervals.of(\"2011-03-03/2011-03-04\"),Intervals.of(\"2011-03-05/2011-03-06\"));\n  List<Interval> JodaUtils.condenseIntervals(intervals)=JodaUtils.condenseIntervals(intervals);\n  Assert.assertEquals(expected,JodaUtils.condenseIntervals(intervals));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 96,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 798,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 97,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testCondenseIntervalsSimple(){\n  List<Interval> intervals=Arrays.asList(Intervals.of(\"2011-01-01/2011-01-02\"),Intervals.of(\"2011-01-02/2011-01-03\"),Intervals.of(\"2011-02-01/2011-02-05\"),Intervals.of(\"2011-02-01/2011-02-02\"),Intervals.of(\"2011-02-03/2011-02-08\"),Intervals.of(\"2011-03-01/2011-03-02\"),Intervals.of(\"2011-03-03/2011-03-04\"),Intervals.of(\"2011-03-05/2011-03-06\"));\n  List<Interval> expected=Arrays.asList(Intervals.of(\"2011-01-01/2011-01-03\"),Intervals.of(\"2011-02-01/2011-02-08\"),Intervals.of(\"2011-03-01/2011-03-02\"),Intervals.of(\"2011-03-03/2011-03-04\"),Intervals.of(\"2011-03-05/2011-03-06\"));\n  List<Interval> JodaUtils.condenseIntervals(intervals)=JodaUtils.condenseIntervals(intervals);\n  Assert.assertEquals(expected,JodaUtils.condenseIntervals(intervals));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 102,
      "astHeight" : 7
    } ],
    "tokenLength" : 3,
    "type" : "java.util.List<org.apache.druid.common.utils.Interval>"
  } ],
  "positionList" : [ {
    "charLength" : 38,
    "startLineNumber" : 94,
    "startColumnNumber" : 8,
    "endLineNumber" : 94,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}