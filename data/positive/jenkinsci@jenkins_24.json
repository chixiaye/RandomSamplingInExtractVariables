{
  "id" : 24,
  "expression" : "description",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "e4843aef44587051310ce19d33b08f28e2e93004",
  "filePath" : "core/src/main/java/hudson/model/Run.java",
  "occurrences" : 6,
  "expressionList" : [ {
    "nodeContext" : "description",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 700,
      "startColumnNumber" : 12,
      "endLineNumber" : 700,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 700,
        "startColumnNumber" : 12,
        "endLineNumber" : 700,
        "endColumnNumber" : 31
      },
      "nodeContext" : "description == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 700,
        "startColumnNumber" : 12,
        "endLineNumber" : 700,
        "endColumnNumber" : 72
      },
      "nodeContext" : "description == null || description.length() < maxDescrLength",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 700,
        "startColumnNumber" : 8,
        "endLineNumber" : 702,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (description == null || description.length() < maxDescrLength) {\n  return description;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1154,
        "startLineNumber" : 690,
        "startColumnNumber" : 58,
        "endLineNumber" : 741,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (TRUNCATED_DESCRIPTION_LIMIT < 0) {\n    return description;\n  }\n  if (TRUNCATED_DESCRIPTION_LIMIT == 0) {\n    return \"\";\n  }\n  final int maxDescrLength=TRUNCATED_DESCRIPTION_LIMIT;\n  final String description=description;\n  if (description == null || description.length() < maxDescrLength) {\n    return description;\n  }\n  final String ending=\"...\";\n  final int sz=description.length(), maxTruncLength=maxDescrLength - ending.length();\n  boolean inTag=false;\n  int displayChars=0;\n  int lastTruncatablePoint=-1;\n  for (int i=0; i < sz; i++) {\n    char ch=description.charAt(i);\n    if (ch == '<') {\n      inTag=true;\n    }\n else     if (ch == '>') {\n      inTag=false;\n      if (displayChars <= maxTruncLength) {\n        lastTruncatablePoint=i + 1;\n      }\n    }\n    if (!inTag) {\n      displayChars++;\n      if (displayChars <= maxTruncLength && ch == ' ') {\n        lastTruncatablePoint=i;\n      }\n    }\n  }\n  String truncDesc=description;\n  if (lastTruncatablePoint == -1)   lastTruncatablePoint=maxTruncLength;\n  if (displayChars >= maxDescrLength) {\n    truncDesc=truncDesc.substring(0,lastTruncatablePoint) + ending;\n  }\n  return truncDesc;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1624,
        "startLineNumber" : 682,
        "startColumnNumber" : 4,
        "endLineNumber" : 741,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns the length-limited description. The method tries to take HTML tags within the description into account, but it is a best-effort attempt. Also, the method will likely not work properly if a non-HTML  {@link hudson.markup.MarkupFormatter} is used.\n * @return The length-limited description.\n * @deprecated truncated description based on the {@link #TRUNCATED_DESCRIPTION_LIMIT} setting.\n */\n@Deprecated public @CheckForNull String getTruncatedDescription(){\n  if (TRUNCATED_DESCRIPTION_LIMIT < 0) {\n    return description;\n  }\n  if (TRUNCATED_DESCRIPTION_LIMIT == 0) {\n    return \"\";\n  }\n  final int maxDescrLength=TRUNCATED_DESCRIPTION_LIMIT;\n  final String description=description;\n  if (description == null || description.length() < maxDescrLength) {\n    return description;\n  }\n  final String ending=\"...\";\n  final int sz=description.length(), maxTruncLength=maxDescrLength - ending.length();\n  boolean inTag=false;\n  int displayChars=0;\n  int lastTruncatablePoint=-1;\n  for (int i=0; i < sz; i++) {\n    char ch=description.charAt(i);\n    if (ch == '<') {\n      inTag=true;\n    }\n else     if (ch == '>') {\n      inTag=false;\n      if (displayChars <= maxTruncLength) {\n        lastTruncatablePoint=i + 1;\n      }\n    }\n    if (!inTag) {\n      displayChars++;\n      if (displayChars <= maxTruncLength && ch == ' ') {\n        lastTruncatablePoint=i;\n      }\n    }\n  }\n  String truncDesc=description;\n  if (lastTruncatablePoint == -1)   lastTruncatablePoint=maxTruncLength;\n  if (displayChars >= maxDescrLength) {\n    truncDesc=truncDesc.substring(0,lastTruncatablePoint) + ending;\n  }\n  return truncDesc;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 190,
      "astHeight" : 13
    } ],
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "description",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 700,
      "startColumnNumber" : 40,
      "endLineNumber" : 700,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 700,
        "startColumnNumber" : 40,
        "endLineNumber" : 700,
        "endColumnNumber" : 60
      },
      "nodeContext" : "description.length()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 700,
        "startColumnNumber" : 40,
        "endLineNumber" : 700,
        "endColumnNumber" : 77
      },
      "nodeContext" : "description.length() < maxDescrLength",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 700,
        "startColumnNumber" : 12,
        "endLineNumber" : 700,
        "endColumnNumber" : 72
      },
      "nodeContext" : "description == null || description.length() < maxDescrLength",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 700,
        "startColumnNumber" : 8,
        "endLineNumber" : 702,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (description == null || description.length() < maxDescrLength) {\n  return description;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1154,
        "startLineNumber" : 690,
        "startColumnNumber" : 58,
        "endLineNumber" : 741,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (TRUNCATED_DESCRIPTION_LIMIT < 0) {\n    return description;\n  }\n  if (TRUNCATED_DESCRIPTION_LIMIT == 0) {\n    return \"\";\n  }\n  final int maxDescrLength=TRUNCATED_DESCRIPTION_LIMIT;\n  final String description=description;\n  if (description == null || description.length() < maxDescrLength) {\n    return description;\n  }\n  final String ending=\"...\";\n  final int sz=description.length(), maxTruncLength=maxDescrLength - ending.length();\n  boolean inTag=false;\n  int displayChars=0;\n  int lastTruncatablePoint=-1;\n  for (int i=0; i < sz; i++) {\n    char ch=description.charAt(i);\n    if (ch == '<') {\n      inTag=true;\n    }\n else     if (ch == '>') {\n      inTag=false;\n      if (displayChars <= maxTruncLength) {\n        lastTruncatablePoint=i + 1;\n      }\n    }\n    if (!inTag) {\n      displayChars++;\n      if (displayChars <= maxTruncLength && ch == ' ') {\n        lastTruncatablePoint=i;\n      }\n    }\n  }\n  String truncDesc=description;\n  if (lastTruncatablePoint == -1)   lastTruncatablePoint=maxTruncLength;\n  if (displayChars >= maxDescrLength) {\n    truncDesc=truncDesc.substring(0,lastTruncatablePoint) + ending;\n  }\n  return truncDesc;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1624,
        "startLineNumber" : 682,
        "startColumnNumber" : 4,
        "endLineNumber" : 741,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns the length-limited description. The method tries to take HTML tags within the description into account, but it is a best-effort attempt. Also, the method will likely not work properly if a non-HTML  {@link hudson.markup.MarkupFormatter} is used.\n * @return The length-limited description.\n * @deprecated truncated description based on the {@link #TRUNCATED_DESCRIPTION_LIMIT} setting.\n */\n@Deprecated public @CheckForNull String getTruncatedDescription(){\n  if (TRUNCATED_DESCRIPTION_LIMIT < 0) {\n    return description;\n  }\n  if (TRUNCATED_DESCRIPTION_LIMIT == 0) {\n    return \"\";\n  }\n  final int maxDescrLength=TRUNCATED_DESCRIPTION_LIMIT;\n  final String description=description;\n  if (description == null || description.length() < maxDescrLength) {\n    return description;\n  }\n  final String ending=\"...\";\n  final int sz=description.length(), maxTruncLength=maxDescrLength - ending.length();\n  boolean inTag=false;\n  int displayChars=0;\n  int lastTruncatablePoint=-1;\n  for (int i=0; i < sz; i++) {\n    char ch=description.charAt(i);\n    if (ch == '<') {\n      inTag=true;\n    }\n else     if (ch == '>') {\n      inTag=false;\n      if (displayChars <= maxTruncLength) {\n        lastTruncatablePoint=i + 1;\n      }\n    }\n    if (!inTag) {\n      displayChars++;\n      if (displayChars <= maxTruncLength && ch == ' ') {\n        lastTruncatablePoint=i;\n      }\n    }\n  }\n  String truncDesc=description;\n  if (lastTruncatablePoint == -1)   lastTruncatablePoint=maxTruncLength;\n  if (displayChars >= maxDescrLength) {\n    truncDesc=truncDesc.substring(0,lastTruncatablePoint) + ending;\n  }\n  return truncDesc;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 190,
      "astHeight" : 13
    } ],
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "description",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 701,
      "startColumnNumber" : 19,
      "endLineNumber" : 701,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 701,
        "startColumnNumber" : 12,
        "endLineNumber" : 701,
        "endColumnNumber" : 32
      },
      "nodeContext" : "return description;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 700,
        "startColumnNumber" : 84,
        "endLineNumber" : 702,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return description;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 3,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 700,
        "startColumnNumber" : 8,
        "endLineNumber" : 702,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (description == null || description.length() < maxDescrLength) {\n  return description;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1154,
        "startLineNumber" : 690,
        "startColumnNumber" : 58,
        "endLineNumber" : 741,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (TRUNCATED_DESCRIPTION_LIMIT < 0) {\n    return description;\n  }\n  if (TRUNCATED_DESCRIPTION_LIMIT == 0) {\n    return \"\";\n  }\n  final int maxDescrLength=TRUNCATED_DESCRIPTION_LIMIT;\n  final String description=description;\n  if (description == null || description.length() < maxDescrLength) {\n    return description;\n  }\n  final String ending=\"...\";\n  final int sz=description.length(), maxTruncLength=maxDescrLength - ending.length();\n  boolean inTag=false;\n  int displayChars=0;\n  int lastTruncatablePoint=-1;\n  for (int i=0; i < sz; i++) {\n    char ch=description.charAt(i);\n    if (ch == '<') {\n      inTag=true;\n    }\n else     if (ch == '>') {\n      inTag=false;\n      if (displayChars <= maxTruncLength) {\n        lastTruncatablePoint=i + 1;\n      }\n    }\n    if (!inTag) {\n      displayChars++;\n      if (displayChars <= maxTruncLength && ch == ' ') {\n        lastTruncatablePoint=i;\n      }\n    }\n  }\n  String truncDesc=description;\n  if (lastTruncatablePoint == -1)   lastTruncatablePoint=maxTruncLength;\n  if (displayChars >= maxDescrLength) {\n    truncDesc=truncDesc.substring(0,lastTruncatablePoint) + ending;\n  }\n  return truncDesc;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1624,
        "startLineNumber" : 682,
        "startColumnNumber" : 4,
        "endLineNumber" : 741,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns the length-limited description. The method tries to take HTML tags within the description into account, but it is a best-effort attempt. Also, the method will likely not work properly if a non-HTML  {@link hudson.markup.MarkupFormatter} is used.\n * @return The length-limited description.\n * @deprecated truncated description based on the {@link #TRUNCATED_DESCRIPTION_LIMIT} setting.\n */\n@Deprecated public @CheckForNull String getTruncatedDescription(){\n  if (TRUNCATED_DESCRIPTION_LIMIT < 0) {\n    return description;\n  }\n  if (TRUNCATED_DESCRIPTION_LIMIT == 0) {\n    return \"\";\n  }\n  final int maxDescrLength=TRUNCATED_DESCRIPTION_LIMIT;\n  final String description=description;\n  if (description == null || description.length() < maxDescrLength) {\n    return description;\n  }\n  final String ending=\"...\";\n  final int sz=description.length(), maxTruncLength=maxDescrLength - ending.length();\n  boolean inTag=false;\n  int displayChars=0;\n  int lastTruncatablePoint=-1;\n  for (int i=0; i < sz; i++) {\n    char ch=description.charAt(i);\n    if (ch == '<') {\n      inTag=true;\n    }\n else     if (ch == '>') {\n      inTag=false;\n      if (displayChars <= maxTruncLength) {\n        lastTruncatablePoint=i + 1;\n      }\n    }\n    if (!inTag) {\n      displayChars++;\n      if (displayChars <= maxTruncLength && ch == ' ') {\n        lastTruncatablePoint=i;\n      }\n    }\n  }\n  String truncDesc=description;\n  if (lastTruncatablePoint == -1)   lastTruncatablePoint=maxTruncLength;\n  if (displayChars >= maxDescrLength) {\n    truncDesc=truncDesc.substring(0,lastTruncatablePoint) + ending;\n  }\n  return truncDesc;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 190,
      "astHeight" : 13
    } ],
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "description",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 705,
      "startColumnNumber" : 23,
      "endLineNumber" : 705,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 705,
        "startColumnNumber" : 23,
        "endLineNumber" : 705,
        "endColumnNumber" : 43
      },
      "nodeContext" : "description.length()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 705,
        "startColumnNumber" : 18,
        "endLineNumber" : 705,
        "endColumnNumber" : 41
      },
      "nodeContext" : "sz=description.length()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 705,
        "startColumnNumber" : 8,
        "endLineNumber" : 705,
        "endColumnNumber" : 92
      },
      "nodeContext" : "final int sz=description.length(), maxTruncLength=maxDescrLength - ending.length();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1154,
        "startLineNumber" : 690,
        "startColumnNumber" : 58,
        "endLineNumber" : 741,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (TRUNCATED_DESCRIPTION_LIMIT < 0) {\n    return description;\n  }\n  if (TRUNCATED_DESCRIPTION_LIMIT == 0) {\n    return \"\";\n  }\n  final int maxDescrLength=TRUNCATED_DESCRIPTION_LIMIT;\n  final String description=description;\n  if (description == null || description.length() < maxDescrLength) {\n    return description;\n  }\n  final String ending=\"...\";\n  final int sz=description.length(), maxTruncLength=maxDescrLength - ending.length();\n  boolean inTag=false;\n  int displayChars=0;\n  int lastTruncatablePoint=-1;\n  for (int i=0; i < sz; i++) {\n    char ch=description.charAt(i);\n    if (ch == '<') {\n      inTag=true;\n    }\n else     if (ch == '>') {\n      inTag=false;\n      if (displayChars <= maxTruncLength) {\n        lastTruncatablePoint=i + 1;\n      }\n    }\n    if (!inTag) {\n      displayChars++;\n      if (displayChars <= maxTruncLength && ch == ' ') {\n        lastTruncatablePoint=i;\n      }\n    }\n  }\n  String truncDesc=description;\n  if (lastTruncatablePoint == -1)   lastTruncatablePoint=maxTruncLength;\n  if (displayChars >= maxDescrLength) {\n    truncDesc=truncDesc.substring(0,lastTruncatablePoint) + ending;\n  }\n  return truncDesc;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1624,
        "startLineNumber" : 682,
        "startColumnNumber" : 4,
        "endLineNumber" : 741,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns the length-limited description. The method tries to take HTML tags within the description into account, but it is a best-effort attempt. Also, the method will likely not work properly if a non-HTML  {@link hudson.markup.MarkupFormatter} is used.\n * @return The length-limited description.\n * @deprecated truncated description based on the {@link #TRUNCATED_DESCRIPTION_LIMIT} setting.\n */\n@Deprecated public @CheckForNull String getTruncatedDescription(){\n  if (TRUNCATED_DESCRIPTION_LIMIT < 0) {\n    return description;\n  }\n  if (TRUNCATED_DESCRIPTION_LIMIT == 0) {\n    return \"\";\n  }\n  final int maxDescrLength=TRUNCATED_DESCRIPTION_LIMIT;\n  final String description=description;\n  if (description == null || description.length() < maxDescrLength) {\n    return description;\n  }\n  final String ending=\"...\";\n  final int sz=description.length(), maxTruncLength=maxDescrLength - ending.length();\n  boolean inTag=false;\n  int displayChars=0;\n  int lastTruncatablePoint=-1;\n  for (int i=0; i < sz; i++) {\n    char ch=description.charAt(i);\n    if (ch == '<') {\n      inTag=true;\n    }\n else     if (ch == '>') {\n      inTag=false;\n      if (displayChars <= maxTruncLength) {\n        lastTruncatablePoint=i + 1;\n      }\n    }\n    if (!inTag) {\n      displayChars++;\n      if (displayChars <= maxTruncLength && ch == ' ') {\n        lastTruncatablePoint=i;\n      }\n    }\n  }\n  String truncDesc=description;\n  if (lastTruncatablePoint == -1)   lastTruncatablePoint=maxTruncLength;\n  if (displayChars >= maxDescrLength) {\n    truncDesc=truncDesc.substring(0,lastTruncatablePoint) + ending;\n  }\n  return truncDesc;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 190,
      "astHeight" : 13
    } ],
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "description",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 712,
      "startColumnNumber" : 22,
      "endLineNumber" : 712,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 712,
        "startColumnNumber" : 22,
        "endLineNumber" : 712,
        "endColumnNumber" : 43
      },
      "nodeContext" : "description.charAt(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 712,
        "startColumnNumber" : 17,
        "endLineNumber" : 712,
        "endColumnNumber" : 41
      },
      "nodeContext" : "ch=description.charAt(i)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 712,
        "startColumnNumber" : 12,
        "endLineNumber" : 712,
        "endColumnNumber" : 43
      },
      "nodeContext" : "char ch=description.charAt(i);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 335,
        "startLineNumber" : 711,
        "startColumnNumber" : 33,
        "endLineNumber" : 727,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  char ch=description.charAt(i);\n  if (ch == '<') {\n    inTag=true;\n  }\n else   if (ch == '>') {\n    inTag=false;\n    if (displayChars <= maxTruncLength) {\n      lastTruncatablePoint=i + 1;\n    }\n  }\n  if (!inTag) {\n    displayChars++;\n    if (displayChars <= maxTruncLength && ch == ' ') {\n      lastTruncatablePoint=i;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 362,
        "startLineNumber" : 711,
        "startColumnNumber" : 8,
        "endLineNumber" : 727,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < sz; i++) {\n  char ch=description.charAt(i);\n  if (ch == '<') {\n    inTag=true;\n  }\n else   if (ch == '>') {\n    inTag=false;\n    if (displayChars <= maxTruncLength) {\n      lastTruncatablePoint=i + 1;\n    }\n  }\n  if (!inTag) {\n    displayChars++;\n    if (displayChars <= maxTruncLength && ch == ' ') {\n      lastTruncatablePoint=i;\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 69,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1154,
        "startLineNumber" : 690,
        "startColumnNumber" : 58,
        "endLineNumber" : 741,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (TRUNCATED_DESCRIPTION_LIMIT < 0) {\n    return description;\n  }\n  if (TRUNCATED_DESCRIPTION_LIMIT == 0) {\n    return \"\";\n  }\n  final int maxDescrLength=TRUNCATED_DESCRIPTION_LIMIT;\n  final String description=description;\n  if (description == null || description.length() < maxDescrLength) {\n    return description;\n  }\n  final String ending=\"...\";\n  final int sz=description.length(), maxTruncLength=maxDescrLength - ending.length();\n  boolean inTag=false;\n  int displayChars=0;\n  int lastTruncatablePoint=-1;\n  for (int i=0; i < sz; i++) {\n    char ch=description.charAt(i);\n    if (ch == '<') {\n      inTag=true;\n    }\n else     if (ch == '>') {\n      inTag=false;\n      if (displayChars <= maxTruncLength) {\n        lastTruncatablePoint=i + 1;\n      }\n    }\n    if (!inTag) {\n      displayChars++;\n      if (displayChars <= maxTruncLength && ch == ' ') {\n        lastTruncatablePoint=i;\n      }\n    }\n  }\n  String truncDesc=description;\n  if (lastTruncatablePoint == -1)   lastTruncatablePoint=maxTruncLength;\n  if (displayChars >= maxDescrLength) {\n    truncDesc=truncDesc.substring(0,lastTruncatablePoint) + ending;\n  }\n  return truncDesc;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1624,
        "startLineNumber" : 682,
        "startColumnNumber" : 4,
        "endLineNumber" : 741,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns the length-limited description. The method tries to take HTML tags within the description into account, but it is a best-effort attempt. Also, the method will likely not work properly if a non-HTML  {@link hudson.markup.MarkupFormatter} is used.\n * @return The length-limited description.\n * @deprecated truncated description based on the {@link #TRUNCATED_DESCRIPTION_LIMIT} setting.\n */\n@Deprecated public @CheckForNull String getTruncatedDescription(){\n  if (TRUNCATED_DESCRIPTION_LIMIT < 0) {\n    return description;\n  }\n  if (TRUNCATED_DESCRIPTION_LIMIT == 0) {\n    return \"\";\n  }\n  final int maxDescrLength=TRUNCATED_DESCRIPTION_LIMIT;\n  final String description=description;\n  if (description == null || description.length() < maxDescrLength) {\n    return description;\n  }\n  final String ending=\"...\";\n  final int sz=description.length(), maxTruncLength=maxDescrLength - ending.length();\n  boolean inTag=false;\n  int displayChars=0;\n  int lastTruncatablePoint=-1;\n  for (int i=0; i < sz; i++) {\n    char ch=description.charAt(i);\n    if (ch == '<') {\n      inTag=true;\n    }\n else     if (ch == '>') {\n      inTag=false;\n      if (displayChars <= maxTruncLength) {\n        lastTruncatablePoint=i + 1;\n      }\n    }\n    if (!inTag) {\n      displayChars++;\n      if (displayChars <= maxTruncLength && ch == ' ') {\n        lastTruncatablePoint=i;\n      }\n    }\n  }\n  String truncDesc=description;\n  if (lastTruncatablePoint == -1)   lastTruncatablePoint=maxTruncLength;\n  if (displayChars >= maxDescrLength) {\n    truncDesc=truncDesc.substring(0,lastTruncatablePoint) + ending;\n  }\n  return truncDesc;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 190,
      "astHeight" : 13
    } ],
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "description",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 729,
      "startColumnNumber" : 27,
      "endLineNumber" : 729,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 729,
        "startColumnNumber" : 15,
        "endLineNumber" : 729,
        "endColumnNumber" : 36
      },
      "nodeContext" : "truncDesc=description",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 729,
        "startColumnNumber" : 8,
        "endLineNumber" : 729,
        "endColumnNumber" : 38
      },
      "nodeContext" : "String truncDesc=description;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1154,
        "startLineNumber" : 690,
        "startColumnNumber" : 58,
        "endLineNumber" : 741,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (TRUNCATED_DESCRIPTION_LIMIT < 0) {\n    return description;\n  }\n  if (TRUNCATED_DESCRIPTION_LIMIT == 0) {\n    return \"\";\n  }\n  final int maxDescrLength=TRUNCATED_DESCRIPTION_LIMIT;\n  final String description=description;\n  if (description == null || description.length() < maxDescrLength) {\n    return description;\n  }\n  final String ending=\"...\";\n  final int sz=description.length(), maxTruncLength=maxDescrLength - ending.length();\n  boolean inTag=false;\n  int displayChars=0;\n  int lastTruncatablePoint=-1;\n  for (int i=0; i < sz; i++) {\n    char ch=description.charAt(i);\n    if (ch == '<') {\n      inTag=true;\n    }\n else     if (ch == '>') {\n      inTag=false;\n      if (displayChars <= maxTruncLength) {\n        lastTruncatablePoint=i + 1;\n      }\n    }\n    if (!inTag) {\n      displayChars++;\n      if (displayChars <= maxTruncLength && ch == ' ') {\n        lastTruncatablePoint=i;\n      }\n    }\n  }\n  String truncDesc=description;\n  if (lastTruncatablePoint == -1)   lastTruncatablePoint=maxTruncLength;\n  if (displayChars >= maxDescrLength) {\n    truncDesc=truncDesc.substring(0,lastTruncatablePoint) + ending;\n  }\n  return truncDesc;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1624,
        "startLineNumber" : 682,
        "startColumnNumber" : 4,
        "endLineNumber" : 741,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns the length-limited description. The method tries to take HTML tags within the description into account, but it is a best-effort attempt. Also, the method will likely not work properly if a non-HTML  {@link hudson.markup.MarkupFormatter} is used.\n * @return The length-limited description.\n * @deprecated truncated description based on the {@link #TRUNCATED_DESCRIPTION_LIMIT} setting.\n */\n@Deprecated public @CheckForNull String getTruncatedDescription(){\n  if (TRUNCATED_DESCRIPTION_LIMIT < 0) {\n    return description;\n  }\n  if (TRUNCATED_DESCRIPTION_LIMIT == 0) {\n    return \"\";\n  }\n  final int maxDescrLength=TRUNCATED_DESCRIPTION_LIMIT;\n  final String description=description;\n  if (description == null || description.length() < maxDescrLength) {\n    return description;\n  }\n  final String ending=\"...\";\n  final int sz=description.length(), maxTruncLength=maxDescrLength - ending.length();\n  boolean inTag=false;\n  int displayChars=0;\n  int lastTruncatablePoint=-1;\n  for (int i=0; i < sz; i++) {\n    char ch=description.charAt(i);\n    if (ch == '<') {\n      inTag=true;\n    }\n else     if (ch == '>') {\n      inTag=false;\n      if (displayChars <= maxTruncLength) {\n        lastTruncatablePoint=i + 1;\n      }\n    }\n    if (!inTag) {\n      displayChars++;\n      if (displayChars <= maxTruncLength && ch == ' ') {\n        lastTruncatablePoint=i;\n      }\n    }\n  }\n  String truncDesc=description;\n  if (lastTruncatablePoint == -1)   lastTruncatablePoint=maxTruncLength;\n  if (displayChars >= maxDescrLength) {\n    truncDesc=truncDesc.substring(0,lastTruncatablePoint) + ending;\n  }\n  return truncDesc;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 190,
      "astHeight" : 13
    } ],
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 700,
    "startColumnNumber" : 12,
    "endLineNumber" : 700,
    "endColumnNumber" : 23
  }, {
    "charLength" : 11,
    "startLineNumber" : 700,
    "startColumnNumber" : 40,
    "endLineNumber" : 700,
    "endColumnNumber" : 51
  }, {
    "charLength" : 11,
    "startLineNumber" : 701,
    "startColumnNumber" : 19,
    "endLineNumber" : 701,
    "endColumnNumber" : 30
  }, {
    "charLength" : 11,
    "startLineNumber" : 705,
    "startColumnNumber" : 23,
    "endLineNumber" : 705,
    "endColumnNumber" : 34
  }, {
    "charLength" : 11,
    "startLineNumber" : 712,
    "startColumnNumber" : 22,
    "endLineNumber" : 712,
    "endColumnNumber" : 33
  }, {
    "charLength" : 11,
    "startLineNumber" : 729,
    "startColumnNumber" : 27,
    "endLineNumber" : 729,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}