{
  "id" : 47,
  "expression" : "param.toLowerCase()",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "c44a91feea9d6fa6d61acab58463fd0406fe6005",
  "filePath" : "mybatis-plus/src/main/java/com/baomidou/mybatisplus/toolkit/StringUtils.java",
  "occurrences" : 3,
  "expressionList" : [ {
    "nodeContext" : "param.toLowerCase()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 126,
      "startColumnNumber" : 12,
      "endLineNumber" : 126,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 126,
        "startColumnNumber" : 12,
        "endLineNumber" : 126,
        "endColumnNumber" : 40
      },
      "nodeContext" : "param.toLowerCase().length()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 126,
        "startColumnNumber" : 6,
        "endLineNumber" : 126,
        "endColumnNumber" : 38
      },
      "nodeContext" : "len=param.toLowerCase().length()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 126,
        "startColumnNumber" : 2,
        "endLineNumber" : 126,
        "endColumnNumber" : 40
      },
      "nodeContext" : "int len=param.toLowerCase().length();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 455,
        "startLineNumber" : 121,
        "startColumnNumber" : 53,
        "endLineNumber" : 139,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (isEmpty(param)) {\n    return EMPTY;\n  }\n  String param.toLowerCase()=param.toLowerCase();\n  int len=param.toLowerCase().length();\n  StringBuilder sb=new StringBuilder(len);\n  for (int i=0; i < len; i++) {\n    char c=param.toLowerCase().charAt(i);\n    if (c == UNDERLINE) {\n      if (++i < len) {\n        sb.append(Character.toUpperCase(param.toLowerCase().charAt(i)));\n      }\n    }\n else {\n      sb.append(c);\n    }\n  }\n  return sb.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 583,
        "startLineNumber" : 112,
        "startColumnNumber" : 1,
        "endLineNumber" : 139,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * <p> 字符串下划线转驼峰格式 </p>\n * @param param 需要转换的字符串\n * @return 转换好的字符串\n */\npublic static String underlineToCamel(String param){\n  if (isEmpty(param)) {\n    return EMPTY;\n  }\n  String param.toLowerCase()=param.toLowerCase();\n  int len=param.toLowerCase().length();\n  StringBuilder sb=new StringBuilder(len);\n  for (int i=0; i < len; i++) {\n    char c=param.toLowerCase().charAt(i);\n    if (c == UNDERLINE) {\n      if (++i < len) {\n        sb.append(Character.toUpperCase(param.toLowerCase().charAt(i)));\n      }\n    }\n else {\n      sb.append(c);\n    }\n  }\n  return sb.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 13
    } ],
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "param.toLowerCase()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 129,
      "startColumnNumber" : 12,
      "endLineNumber" : 129,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 129,
        "startColumnNumber" : 12,
        "endLineNumber" : 129,
        "endColumnNumber" : 41
      },
      "nodeContext" : "param.toLowerCase().charAt(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 129,
        "startColumnNumber" : 8,
        "endLineNumber" : 129,
        "endColumnNumber" : 39
      },
      "nodeContext" : "c=param.toLowerCase().charAt(i)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 129,
        "startColumnNumber" : 3,
        "endLineNumber" : 129,
        "endColumnNumber" : 41
      },
      "nodeContext" : "char c=param.toLowerCase().charAt(i);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 128,
        "startColumnNumber" : 32,
        "endLineNumber" : 137,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  char c=param.toLowerCase().charAt(i);\n  if (c == UNDERLINE) {\n    if (++i < len) {\n      sb.append(Character.toUpperCase(param.toLowerCase().charAt(i)));\n    }\n  }\n else {\n    sb.append(c);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 228,
        "startLineNumber" : 128,
        "startColumnNumber" : 2,
        "endLineNumber" : 137,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < len; i++) {\n  char c=param.toLowerCase().charAt(i);\n  if (c == UNDERLINE) {\n    if (++i < len) {\n      sb.append(Character.toUpperCase(param.toLowerCase().charAt(i)));\n    }\n  }\n else {\n    sb.append(c);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 50,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 455,
        "startLineNumber" : 121,
        "startColumnNumber" : 53,
        "endLineNumber" : 139,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (isEmpty(param)) {\n    return EMPTY;\n  }\n  String param.toLowerCase()=param.toLowerCase();\n  int len=param.toLowerCase().length();\n  StringBuilder sb=new StringBuilder(len);\n  for (int i=0; i < len; i++) {\n    char c=param.toLowerCase().charAt(i);\n    if (c == UNDERLINE) {\n      if (++i < len) {\n        sb.append(Character.toUpperCase(param.toLowerCase().charAt(i)));\n      }\n    }\n else {\n      sb.append(c);\n    }\n  }\n  return sb.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 583,
        "startLineNumber" : 112,
        "startColumnNumber" : 1,
        "endLineNumber" : 139,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * <p> 字符串下划线转驼峰格式 </p>\n * @param param 需要转换的字符串\n * @return 转换好的字符串\n */\npublic static String underlineToCamel(String param){\n  if (isEmpty(param)) {\n    return EMPTY;\n  }\n  String param.toLowerCase()=param.toLowerCase();\n  int len=param.toLowerCase().length();\n  StringBuilder sb=new StringBuilder(len);\n  for (int i=0; i < len; i++) {\n    char c=param.toLowerCase().charAt(i);\n    if (c == UNDERLINE) {\n      if (++i < len) {\n        sb.append(Character.toUpperCase(param.toLowerCase().charAt(i)));\n      }\n    }\n else {\n      sb.append(c);\n    }\n  }\n  return sb.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 13
    } ],
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "param.toLowerCase()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 132,
      "startColumnNumber" : 37,
      "endLineNumber" : 132,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 132,
        "startColumnNumber" : 37,
        "endLineNumber" : 132,
        "endColumnNumber" : 66
      },
      "nodeContext" : "param.toLowerCase().charAt(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 132,
        "startColumnNumber" : 15,
        "endLineNumber" : 132,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Character.toUpperCase(param.toLowerCase().charAt(i))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 132,
        "startColumnNumber" : 5,
        "endLineNumber" : 132,
        "endColumnNumber" : 68
      },
      "nodeContext" : "sb.append(Character.toUpperCase(param.toLowerCase().charAt(i)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 132,
        "startColumnNumber" : 5,
        "endLineNumber" : 132,
        "endColumnNumber" : 70
      },
      "nodeContext" : "sb.append(Character.toUpperCase(param.toLowerCase().charAt(i)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 131,
        "startColumnNumber" : 19,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  sb.append(Character.toUpperCase(param.toLowerCase().charAt(i)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 131,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (++i < len) {\n  sb.append(Character.toUpperCase(param.toLowerCase().charAt(i)));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 130,
        "startColumnNumber" : 23,
        "endLineNumber" : 134,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (++i < len) {\n    sb.append(Character.toUpperCase(param.toLowerCase().charAt(i)));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 130,
        "startColumnNumber" : 3,
        "endLineNumber" : 136,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (c == UNDERLINE) {\n  if (++i < len) {\n    sb.append(Character.toUpperCase(param.toLowerCase().charAt(i)));\n  }\n}\n else {\n  sb.append(c);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 128,
        "startColumnNumber" : 32,
        "endLineNumber" : 137,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  char c=param.toLowerCase().charAt(i);\n  if (c == UNDERLINE) {\n    if (++i < len) {\n      sb.append(Character.toUpperCase(param.toLowerCase().charAt(i)));\n    }\n  }\n else {\n    sb.append(c);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 228,
        "startLineNumber" : 128,
        "startColumnNumber" : 2,
        "endLineNumber" : 137,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < len; i++) {\n  char c=param.toLowerCase().charAt(i);\n  if (c == UNDERLINE) {\n    if (++i < len) {\n      sb.append(Character.toUpperCase(param.toLowerCase().charAt(i)));\n    }\n  }\n else {\n    sb.append(c);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 50,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 455,
        "startLineNumber" : 121,
        "startColumnNumber" : 53,
        "endLineNumber" : 139,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (isEmpty(param)) {\n    return EMPTY;\n  }\n  String param.toLowerCase()=param.toLowerCase();\n  int len=param.toLowerCase().length();\n  StringBuilder sb=new StringBuilder(len);\n  for (int i=0; i < len; i++) {\n    char c=param.toLowerCase().charAt(i);\n    if (c == UNDERLINE) {\n      if (++i < len) {\n        sb.append(Character.toUpperCase(param.toLowerCase().charAt(i)));\n      }\n    }\n else {\n      sb.append(c);\n    }\n  }\n  return sb.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 583,
        "startLineNumber" : 112,
        "startColumnNumber" : 1,
        "endLineNumber" : 139,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * <p> 字符串下划线转驼峰格式 </p>\n * @param param 需要转换的字符串\n * @return 转换好的字符串\n */\npublic static String underlineToCamel(String param){\n  if (isEmpty(param)) {\n    return EMPTY;\n  }\n  String param.toLowerCase()=param.toLowerCase();\n  int len=param.toLowerCase().length();\n  StringBuilder sb=new StringBuilder(len);\n  for (int i=0; i < len; i++) {\n    char c=param.toLowerCase().charAt(i);\n    if (c == UNDERLINE) {\n      if (++i < len) {\n        sb.append(Character.toUpperCase(param.toLowerCase().charAt(i)));\n      }\n    }\n else {\n      sb.append(c);\n    }\n  }\n  return sb.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 14
    } ],
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 126,
    "startColumnNumber" : 12,
    "endLineNumber" : 126,
    "endColumnNumber" : 31
  }, {
    "charLength" : 19,
    "startLineNumber" : 129,
    "startColumnNumber" : 12,
    "endLineNumber" : 129,
    "endColumnNumber" : 31
  }, {
    "charLength" : 19,
    "startLineNumber" : 132,
    "startColumnNumber" : 37,
    "endLineNumber" : 132,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}