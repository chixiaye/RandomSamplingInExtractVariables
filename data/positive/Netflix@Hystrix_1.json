{
  "id" : 1,
  "expression" : "requestVariableForCache.get(concurrencyStrategy)",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "hystrix-core/src/main/java/com/netflix/hystrix/HystrixRequestCache.java",
  "occurrences" : 2,
  "expressionList" : [ {
    "nodeContext" : "requestVariableForCache.get(concurrencyStrategy)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 48,
      "startLineNumber" : 154,
      "startColumnNumber" : 16,
      "endLineNumber" : 154,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 154,
        "startColumnNumber" : 16,
        "endLineNumber" : 154,
        "endColumnNumber" : 72
      },
      "nodeContext" : "requestVariableForCache.get(concurrencyStrategy) == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 194,
        "startLineNumber" : 154,
        "startColumnNumber" : 12,
        "endLineNumber" : 156,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (requestVariableForCache.get(concurrencyStrategy) == null) {\n  throw new IllegalStateException(\"Request caching is not available. Maybe you need to initialize the HystrixRequestContext?\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 429,
        "startLineNumber" : 152,
        "startColumnNumber" : 25,
        "endLineNumber" : 160,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ConcurrentHashMap<ValueCacheKey,HystrixCachedObservable<?>> requestVariableForCache.get(concurrencyStrategy)=requestVariableForCache.get(concurrencyStrategy);\n  if (requestVariableForCache.get(concurrencyStrategy) == null) {\n    throw new IllegalStateException(\"Request caching is not available. Maybe you need to initialize the HystrixRequestContext?\");\n  }\n  requestVariableForCache.get(concurrencyStrategy).remove(key);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 446,
        "startLineNumber" : 152,
        "startColumnNumber" : 8,
        "endLineNumber" : 160,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (key != null) {\n  ConcurrentHashMap<ValueCacheKey,HystrixCachedObservable<?>> requestVariableForCache.get(concurrencyStrategy)=requestVariableForCache.get(concurrencyStrategy);\n  if (requestVariableForCache.get(concurrencyStrategy) == null) {\n    throw new IllegalStateException(\"Request caching is not available. Maybe you need to initialize the HystrixRequestContext?\");\n  }\n  requestVariableForCache.get(concurrencyStrategy).remove(key);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 514,
        "startLineNumber" : 150,
        "startColumnNumber" : 39,
        "endLineNumber" : 161,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ValueCacheKey key=getRequestCacheKey(cacheKey);\n  if (key != null) {\n    ConcurrentHashMap<ValueCacheKey,HystrixCachedObservable<?>> requestVariableForCache.get(concurrencyStrategy)=requestVariableForCache.get(concurrencyStrategy);\n    if (requestVariableForCache.get(concurrencyStrategy) == null) {\n      throw new IllegalStateException(\"Request caching is not available. Maybe you need to initialize the HystrixRequestContext?\");\n    }\n    requestVariableForCache.get(concurrencyStrategy).remove(key);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 673,
        "startLineNumber" : 144,
        "startColumnNumber" : 4,
        "endLineNumber" : 161,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Clear the cache for a given cacheKey.\n * @param cacheKey key as defined by  {@link HystrixCommand#getCacheKey()}\n */\npublic void clear(String cacheKey){\n  ValueCacheKey key=getRequestCacheKey(cacheKey);\n  if (key != null) {\n    ConcurrentHashMap<ValueCacheKey,HystrixCachedObservable<?>> requestVariableForCache.get(concurrencyStrategy)=requestVariableForCache.get(concurrencyStrategy);\n    if (requestVariableForCache.get(concurrencyStrategy) == null) {\n      throw new IllegalStateException(\"Request caching is not available. Maybe you need to initialize the HystrixRequestContext?\");\n    }\n    requestVariableForCache.get(concurrencyStrategy).remove(key);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 57,
      "astHeight" : 10
    } ],
    "tokenLength" : 3,
    "type" : "java.util.concurrent.ConcurrentHashMap<com.netflix.hystrix.HystrixRequestCache.ValueCacheKey,com.netflix.hystrix.HystrixCachedObservable<?>>"
  }, {
    "nodeContext" : "requestVariableForCache.get(concurrencyStrategy)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 48,
      "startLineNumber" : 159,
      "startColumnNumber" : 12,
      "endLineNumber" : 159,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 159,
        "startColumnNumber" : 12,
        "endLineNumber" : 159,
        "endColumnNumber" : 72
      },
      "nodeContext" : "requestVariableForCache.get(concurrencyStrategy).remove(key)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 159,
        "startColumnNumber" : 12,
        "endLineNumber" : 159,
        "endColumnNumber" : 74
      },
      "nodeContext" : "requestVariableForCache.get(concurrencyStrategy).remove(key);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 429,
        "startLineNumber" : 152,
        "startColumnNumber" : 25,
        "endLineNumber" : 160,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ConcurrentHashMap<ValueCacheKey,HystrixCachedObservable<?>> requestVariableForCache.get(concurrencyStrategy)=requestVariableForCache.get(concurrencyStrategy);\n  if (requestVariableForCache.get(concurrencyStrategy) == null) {\n    throw new IllegalStateException(\"Request caching is not available. Maybe you need to initialize the HystrixRequestContext?\");\n  }\n  requestVariableForCache.get(concurrencyStrategy).remove(key);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 446,
        "startLineNumber" : 152,
        "startColumnNumber" : 8,
        "endLineNumber" : 160,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (key != null) {\n  ConcurrentHashMap<ValueCacheKey,HystrixCachedObservable<?>> requestVariableForCache.get(concurrencyStrategy)=requestVariableForCache.get(concurrencyStrategy);\n  if (requestVariableForCache.get(concurrencyStrategy) == null) {\n    throw new IllegalStateException(\"Request caching is not available. Maybe you need to initialize the HystrixRequestContext?\");\n  }\n  requestVariableForCache.get(concurrencyStrategy).remove(key);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 514,
        "startLineNumber" : 150,
        "startColumnNumber" : 39,
        "endLineNumber" : 161,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ValueCacheKey key=getRequestCacheKey(cacheKey);\n  if (key != null) {\n    ConcurrentHashMap<ValueCacheKey,HystrixCachedObservable<?>> requestVariableForCache.get(concurrencyStrategy)=requestVariableForCache.get(concurrencyStrategy);\n    if (requestVariableForCache.get(concurrencyStrategy) == null) {\n      throw new IllegalStateException(\"Request caching is not available. Maybe you need to initialize the HystrixRequestContext?\");\n    }\n    requestVariableForCache.get(concurrencyStrategy).remove(key);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 673,
        "startLineNumber" : 144,
        "startColumnNumber" : 4,
        "endLineNumber" : 161,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Clear the cache for a given cacheKey.\n * @param cacheKey key as defined by  {@link HystrixCommand#getCacheKey()}\n */\npublic void clear(String cacheKey){\n  ValueCacheKey key=getRequestCacheKey(cacheKey);\n  if (key != null) {\n    ConcurrentHashMap<ValueCacheKey,HystrixCachedObservable<?>> requestVariableForCache.get(concurrencyStrategy)=requestVariableForCache.get(concurrencyStrategy);\n    if (requestVariableForCache.get(concurrencyStrategy) == null) {\n      throw new IllegalStateException(\"Request caching is not available. Maybe you need to initialize the HystrixRequestContext?\");\n    }\n    requestVariableForCache.get(concurrencyStrategy).remove(key);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 57,
      "astHeight" : 10
    } ],
    "tokenLength" : 3,
    "type" : "java.util.concurrent.ConcurrentHashMap<com.netflix.hystrix.HystrixRequestCache.ValueCacheKey,com.netflix.hystrix.HystrixCachedObservable<?>>"
  } ],
  "positionList" : [ {
    "charLength" : 48,
    "startLineNumber" : 154,
    "startColumnNumber" : 16,
    "endLineNumber" : 154,
    "endColumnNumber" : 64
  }, {
    "charLength" : 48,
    "startLineNumber" : 159,
    "startColumnNumber" : 12,
    "endLineNumber" : 159,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}