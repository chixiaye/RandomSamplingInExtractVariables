{
  "id" : 57,
  "expression" : "(int)(photoW / scaleFactor)",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "f92df091ef298aa909f08b4ee2f6ed67c4416309",
  "filePath" : "TMessagesProj/src/main/java/org/telegram/messenger/FileLoader.java",
  "occurrences" : 2,
  "expressionList" : [ {
    "nodeContext" : "(int)(photoW / scaleFactor)",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 1110,
      "startColumnNumber" : 22,
      "endLineNumber" : 1110,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 1110,
        "startColumnNumber" : 22,
        "endLineNumber" : 1110,
        "endColumnNumber" : 54
      },
      "nodeContext" : "(int)(photoW / scaleFactor) == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 1110,
        "startColumnNumber" : 12,
        "endLineNumber" : 1110,
        "endColumnNumber" : 54
      },
      "nodeContext" : "h == 0 || (int)(photoW / scaleFactor) == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 1110,
        "startColumnNumber" : 8,
        "endLineNumber" : 1112,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (h == 0 || (int)(photoW / scaleFactor) == 0) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1865,
        "startLineNumber" : 1098,
        "startColumnNumber" : 128,
        "endLineNumber" : 1150,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (bitmap == null) {\n    return null;\n  }\n  float photoW=bitmap.getWidth();\n  float photoH=bitmap.getHeight();\n  if (photoW == 0 || photoH == 0) {\n    return null;\n  }\n  float scaleFactor=Math.max(photoW / maxWidth,photoH / maxHeight);\n  int (int)(photoW / scaleFactor)=(int)(photoW / scaleFactor);\n  int h=(int)(photoH / scaleFactor);\n  if (h == 0 || (int)(photoW / scaleFactor) == 0) {\n    return null;\n  }\n  Bitmap scaledBitmap=Bitmap.createScaledBitmap(bitmap,h,(int)(photoW / scaleFactor),true);\n  TLRPC.TL_fileLocation location=ne(int)(photoW / scaleFactor) TLRPC.TL_fileLocation();\n  location.volume_id=Integer.MIN_VALUE;\n  location.dc_id=Integer.MIN_VALUE;\n  location.local_id=UserConfig.lastLocalId;\n  UserConfig.lastLocalId--;\n  TLRPC.PhotoSize size;\n  if (!cache) {\n    size=ne(int)(photoW / scaleFactor) TLRPC.TL_photoSize();\n  }\n else {\n    size=ne(int)(photoW / scaleFactor) TLRPC.TL_photoCachedSize();\n  }\n  size.location=location;\n  size.(int)(photoW / scaleFactor)=(int)(photoW / scaleFactor);\n  size.h=(int)(photoH / scaleFactor);\n  try {\n    if (!cache) {\n      String fileName=location.volume_id + \"_\" + location.local_id+ \".jpg\";\n      final File cacheFile=ne(int)(photoW / scaleFactor) File(AndroidUtilities.getCacheDir(),fileName);\n      FileOutputStream stream=ne(int)(photoW / scaleFactor) FileOutputStream(cacheFile);\n      scaledBitmap.compress(Bitmap.CompressFormat.JPEG,quality,stream);\n      size.size=(int)stream.getChannel().size();\n    }\n else {\n      ByteArrayOutputStream stream=ne(int)(photoW / scaleFactor) ByteArrayOutputStream();\n      scaledBitmap.compress(Bitmap.CompressFormat.JPEG,quality,stream);\n      size.bytes=stream.toByteArray();\n      size.size=size.bytes.length;\n    }\n    if (scaledBitmap != bitmap) {\n      scaledBitmap.recycle();\n    }\n    return size;\n  }\n catch (  Exception e) {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 313,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1984,
        "startLineNumber" : 1098,
        "startColumnNumber" : 4,
        "endLineNumber" : 1150,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static TLRPC.PhotoSize scaleAndSaveImage(Bitmap bitmap,float maxWidth,float maxHeight,int quality,boolean cache){\n  if (bitmap == null) {\n    return null;\n  }\n  float photoW=bitmap.getWidth();\n  float photoH=bitmap.getHeight();\n  if (photoW == 0 || photoH == 0) {\n    return null;\n  }\n  float scaleFactor=Math.max(photoW / maxWidth,photoH / maxHeight);\n  int (int)(photoW / scaleFactor)=(int)(photoW / scaleFactor);\n  int h=(int)(photoH / scaleFactor);\n  if (h == 0 || (int)(photoW / scaleFactor) == 0) {\n    return null;\n  }\n  Bitmap scaledBitmap=Bitmap.createScaledBitmap(bitmap,h,(int)(photoW / scaleFactor),true);\n  TLRPC.TL_fileLocation location=ne(int)(photoW / scaleFactor) TLRPC.TL_fileLocation();\n  location.volume_id=Integer.MIN_VALUE;\n  location.dc_id=Integer.MIN_VALUE;\n  location.local_id=UserConfig.lastLocalId;\n  UserConfig.lastLocalId--;\n  TLRPC.PhotoSize size;\n  if (!cache) {\n    size=ne(int)(photoW / scaleFactor) TLRPC.TL_photoSize();\n  }\n else {\n    size=ne(int)(photoW / scaleFactor) TLRPC.TL_photoCachedSize();\n  }\n  size.location=location;\n  size.(int)(photoW / scaleFactor)=(int)(photoW / scaleFactor);\n  size.h=(int)(photoH / scaleFactor);\n  try {\n    if (!cache) {\n      String fileName=location.volume_id + \"_\" + location.local_id+ \".jpg\";\n      final File cacheFile=ne(int)(photoW / scaleFactor) File(AndroidUtilities.getCacheDir(),fileName);\n      FileOutputStream stream=ne(int)(photoW / scaleFactor) FileOutputStream(cacheFile);\n      scaledBitmap.compress(Bitmap.CompressFormat.JPEG,quality,stream);\n      size.size=(int)stream.getChannel().size();\n    }\n else {\n      ByteArrayOutputStream stream=ne(int)(photoW / scaleFactor) ByteArrayOutputStream();\n      scaledBitmap.compress(Bitmap.CompressFormat.JPEG,quality,stream);\n      size.bytes=stream.toByteArray();\n      size.size=size.bytes.length;\n    }\n    if (scaledBitmap != bitmap) {\n      scaledBitmap.recycle();\n    }\n    return size;\n  }\n catch (  Exception e) {\n    return null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 337,
      "astHeight" : 12
    } ],
    "tokenLength" : 3,
    "type" : "int"
  }, {
    "nodeContext" : "(int)(photoW / scaleFactor)",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 1114,
      "startColumnNumber" : 67,
      "endLineNumber" : 1114,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 1114,
        "startColumnNumber" : 30,
        "endLineNumber" : 1114,
        "endColumnNumber" : 98
      },
      "nodeContext" : "Bitmap.createScaledBitmap(bitmap,h,(int)(photoW / scaleFactor),true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 1114,
        "startColumnNumber" : 15,
        "endLineNumber" : 1114,
        "endColumnNumber" : 96
      },
      "nodeContext" : "scaledBitmap=Bitmap.createScaledBitmap(bitmap,h,(int)(photoW / scaleFactor),true)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 1114,
        "startColumnNumber" : 8,
        "endLineNumber" : 1114,
        "endColumnNumber" : 98
      },
      "nodeContext" : "Bitmap scaledBitmap=Bitmap.createScaledBitmap(bitmap,h,(int)(photoW / scaleFactor),true);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1865,
        "startLineNumber" : 1098,
        "startColumnNumber" : 128,
        "endLineNumber" : 1150,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (bitmap == null) {\n    return null;\n  }\n  float photoW=bitmap.getWidth();\n  float photoH=bitmap.getHeight();\n  if (photoW == 0 || photoH == 0) {\n    return null;\n  }\n  float scaleFactor=Math.max(photoW / maxWidth,photoH / maxHeight);\n  int (int)(photoW / scaleFactor)=(int)(photoW / scaleFactor);\n  int h=(int)(photoH / scaleFactor);\n  if (h == 0 || (int)(photoW / scaleFactor) == 0) {\n    return null;\n  }\n  Bitmap scaledBitmap=Bitmap.createScaledBitmap(bitmap,h,(int)(photoW / scaleFactor),true);\n  TLRPC.TL_fileLocation location=ne(int)(photoW / scaleFactor) TLRPC.TL_fileLocation();\n  location.volume_id=Integer.MIN_VALUE;\n  location.dc_id=Integer.MIN_VALUE;\n  location.local_id=UserConfig.lastLocalId;\n  UserConfig.lastLocalId--;\n  TLRPC.PhotoSize size;\n  if (!cache) {\n    size=ne(int)(photoW / scaleFactor) TLRPC.TL_photoSize();\n  }\n else {\n    size=ne(int)(photoW / scaleFactor) TLRPC.TL_photoCachedSize();\n  }\n  size.location=location;\n  size.(int)(photoW / scaleFactor)=(int)(photoW / scaleFactor);\n  size.h=(int)(photoH / scaleFactor);\n  try {\n    if (!cache) {\n      String fileName=location.volume_id + \"_\" + location.local_id+ \".jpg\";\n      final File cacheFile=ne(int)(photoW / scaleFactor) File(AndroidUtilities.getCacheDir(),fileName);\n      FileOutputStream stream=ne(int)(photoW / scaleFactor) FileOutputStream(cacheFile);\n      scaledBitmap.compress(Bitmap.CompressFormat.JPEG,quality,stream);\n      size.size=(int)stream.getChannel().size();\n    }\n else {\n      ByteArrayOutputStream stream=ne(int)(photoW / scaleFactor) ByteArrayOutputStream();\n      scaledBitmap.compress(Bitmap.CompressFormat.JPEG,quality,stream);\n      size.bytes=stream.toByteArray();\n      size.size=size.bytes.length;\n    }\n    if (scaledBitmap != bitmap) {\n      scaledBitmap.recycle();\n    }\n    return size;\n  }\n catch (  Exception e) {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 313,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1984,
        "startLineNumber" : 1098,
        "startColumnNumber" : 4,
        "endLineNumber" : 1150,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static TLRPC.PhotoSize scaleAndSaveImage(Bitmap bitmap,float maxWidth,float maxHeight,int quality,boolean cache){\n  if (bitmap == null) {\n    return null;\n  }\n  float photoW=bitmap.getWidth();\n  float photoH=bitmap.getHeight();\n  if (photoW == 0 || photoH == 0) {\n    return null;\n  }\n  float scaleFactor=Math.max(photoW / maxWidth,photoH / maxHeight);\n  int (int)(photoW / scaleFactor)=(int)(photoW / scaleFactor);\n  int h=(int)(photoH / scaleFactor);\n  if (h == 0 || (int)(photoW / scaleFactor) == 0) {\n    return null;\n  }\n  Bitmap scaledBitmap=Bitmap.createScaledBitmap(bitmap,h,(int)(photoW / scaleFactor),true);\n  TLRPC.TL_fileLocation location=ne(int)(photoW / scaleFactor) TLRPC.TL_fileLocation();\n  location.volume_id=Integer.MIN_VALUE;\n  location.dc_id=Integer.MIN_VALUE;\n  location.local_id=UserConfig.lastLocalId;\n  UserConfig.lastLocalId--;\n  TLRPC.PhotoSize size;\n  if (!cache) {\n    size=ne(int)(photoW / scaleFactor) TLRPC.TL_photoSize();\n  }\n else {\n    size=ne(int)(photoW / scaleFactor) TLRPC.TL_photoCachedSize();\n  }\n  size.location=location;\n  size.(int)(photoW / scaleFactor)=(int)(photoW / scaleFactor);\n  size.h=(int)(photoH / scaleFactor);\n  try {\n    if (!cache) {\n      String fileName=location.volume_id + \"_\" + location.local_id+ \".jpg\";\n      final File cacheFile=ne(int)(photoW / scaleFactor) File(AndroidUtilities.getCacheDir(),fileName);\n      FileOutputStream stream=ne(int)(photoW / scaleFactor) FileOutputStream(cacheFile);\n      scaledBitmap.compress(Bitmap.CompressFormat.JPEG,quality,stream);\n      size.size=(int)stream.getChannel().size();\n    }\n else {\n      ByteArrayOutputStream stream=ne(int)(photoW / scaleFactor) ByteArrayOutputStream();\n      scaledBitmap.compress(Bitmap.CompressFormat.JPEG,quality,stream);\n      size.bytes=stream.toByteArray();\n      size.size=size.bytes.length;\n    }\n    if (scaledBitmap != bitmap) {\n      scaledBitmap.recycle();\n    }\n    return size;\n  }\n catch (  Exception e) {\n    return null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 337,
      "astHeight" : 12
    } ],
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 1110,
    "startColumnNumber" : 22,
    "endLineNumber" : 1110,
    "endColumnNumber" : 49
  }, {
    "charLength" : 27,
    "startLineNumber" : 1114,
    "startColumnNumber" : 67,
    "endLineNumber" : 1114,
    "endColumnNumber" : 94
  } ],
  "layoutRelationDataList" : [ ]
}