{
  "id" : 31,
  "expression" : "TopicNameUtils.distinctTopics(topics)",
  "projectName" : "apache@flink",
  "commitID" : "a195f729ba4d1ffe657d82888b26ab9db9121ab8",
  "filePath" : "flink-connectors/flink-connector-pulsar/src/main/java/org/apache/flink/connector/pulsar/source/PulsarSourceBuilder.java",
  "occurrences" : 1,
  "expressionList" : [ {
    "nodeContext" : "TopicNameUtils.distinctTopics(topics)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 200,
      "startColumnNumber" : 66,
      "endLineNumber" : 200,
      "endColumnNumber" : 103
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 200,
        "startColumnNumber" : 26,
        "endLineNumber" : 200,
        "endColumnNumber" : 104
      },
      "nodeContext" : "PulsarSubscriber.getTopicListSubscriber(TopicNameUtils.distinctTopics(topics))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 200,
        "startColumnNumber" : 8,
        "endLineNumber" : 200,
        "endColumnNumber" : 102
      },
      "nodeContext" : "this.subscriber=PulsarSubscriber.getTopicListSubscriber(TopicNameUtils.distinctTopics(topics))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 200,
        "startColumnNumber" : 8,
        "endLineNumber" : 200,
        "endColumnNumber" : 104
      },
      "nodeContext" : "this.subscriber=PulsarSubscriber.getTopicListSubscriber(TopicNameUtils.distinctTopics(topics));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 268,
        "startLineNumber" : 197,
        "startColumnNumber" : 67,
        "endLineNumber" : 202,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ensureSubscriberIsNull(\"topics\");\n  List<String> TopicNameUtils.distinctTopics(topics)=TopicNameUtils.TopicNameUtils.distinctTopics(topics)(topics);\n  this.subscriber=PulsarSubscriber.getTopicListSubscriber(TopicNameUtils.distinctTopics(topics));\n  return this;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 752,
        "startLineNumber" : 188,
        "startColumnNumber" : 4,
        "endLineNumber" : 202,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Set a pulsar topic list for flink source. Some topic may not exist currently, consuming this non-existed topic wouldn't throw any exception. But the best solution is just consuming by using a topic regex. You can set topics once either with  {@link #setTopics} or {@link #setTopicPattern} in this builder.\n * @param topics The topic list you would like to consume message.\n * @return this PulsarSourceBuilder.\n */\npublic PulsarSourceBuilder<OUT> setTopics(List<String> topics){\n  ensureSubscriberIsNull(\"topics\");\n  List<String> TopicNameUtils.distinctTopics(topics)=TopicNameUtils.TopicNameUtils.distinctTopics(topics)(topics);\n  this.subscriber=PulsarSubscriber.getTopicListSubscriber(TopicNameUtils.distinctTopics(topics));\n  return this;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 47,
      "astHeight" : 7
    } ],
    "tokenLength" : 3,
    "type" : "java.util.List<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 200,
    "startColumnNumber" : 66,
    "endLineNumber" : 200,
    "endColumnNumber" : 103
  } ],
  "layoutRelationDataList" : [ ]
}