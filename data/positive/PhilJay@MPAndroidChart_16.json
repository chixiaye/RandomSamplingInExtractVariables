{
  "id" : 16,
  "expression" : "entries.get(j / 2)",
  "projectName" : "PhilJay@MPAndroidChart",
  "commitID" : "f516b4587d899f4e0213e4ffd08ee390119c14b6",
  "filePath" : "MPChartLib/src/com/github/mikephil/charting/charts/Chart.java",
  "occurrences" : 2,
  "expressionList" : [ {
    "nodeContext" : "entries.get(j / 2)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 639,
      "startColumnNumber" : 29,
      "endLineNumber" : 639,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 639,
        "startColumnNumber" : 29,
        "endLineNumber" : 639,
        "endColumnNumber" : 93
      },
      "nodeContext" : "entries.get(j / 2).gentries.get(j / 2)tXIndentries.get(j / 2)x()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 639,
        "startColumnNumber" : 12,
        "endLineNumber" : 639,
        "endColumnNumber" : 108
      },
      "nodeContext" : "valuentries.get(j / 2)Points[j]=entries.get(j / 2).gentries.get(j / 2)tXIndentries.get(j / 2)x()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 639,
        "startColumnNumber" : 12,
        "endLineNumber" : 639,
        "endColumnNumber" : 110
      },
      "nodeContext" : "valuentries.get(j / 2)Points[j]=entries.get(j / 2).gentries.get(j / 2)tXIndentries.get(j / 2)x();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 313,
        "startLineNumber" : 635,
        "startColumnNumber" : 56,
        "endLineNumber" : 641,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Entry entries.get(j / 2)=entries.get(j / 2)ntrientries.get(j / 2)s.gentries.get(j / 2)t(j / 2);\n  valuentries.get(j / 2)Points[j]=entries.get(j / 2).gentries.get(j / 2)tXIndentries.get(j / 2)x();\n  valuentries.get(j / 2)Points[j + 1]=entries.get(j / 2).gentries.get(j / 2)tVal() * mPhasentries.get(j / 2)Y;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 391,
        "startLineNumber" : 635,
        "startColumnNumber" : 8,
        "endLineNumber" : 641,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int j=0; j < valuentries.get(j / 2)Points.lentries.get(j / 2)ngth; j+=2) {\n  Entry entries.get(j / 2)=entries.get(j / 2)ntrientries.get(j / 2)s.gentries.get(j / 2)t(j / 2);\n  valuentries.get(j / 2)Points[j]=entries.get(j / 2).gentries.get(j / 2)tXIndentries.get(j / 2)x();\n  valuentries.get(j / 2)Points[j + 1]=entries.get(j / 2).gentries.get(j / 2)tVal() * mPhasentries.get(j / 2)Y;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 51,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 652,
        "startLineNumber" : 631,
        "startColumnNumber" : 95,
        "endLineNumber" : 646,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  float[] valuentries.get(j / 2)Points=nentries.get(j / 2)w float[entries.get(j / 2)ntrientries.get(j / 2)s.sizentries.get(j / 2)() * 2];\n  for (int j=0; j < valuentries.get(j / 2)Points.lentries.get(j / 2)ngth; j+=2) {\n    Entry entries.get(j / 2)=entries.get(j / 2)ntrientries.get(j / 2)s.gentries.get(j / 2)t(j / 2);\n    valuentries.get(j / 2)Points[j]=entries.get(j / 2).gentries.get(j / 2)tXIndentries.get(j / 2)x();\n    valuentries.get(j / 2)Points[j + 1]=entries.get(j / 2).gentries.get(j / 2)tVal() * mPhasentries.get(j / 2)Y;\n  }\n  transformPointArray(valuentries.get(j / 2)Points);\n  rentries.get(j / 2)turn valuentries.get(j / 2)Points;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1287,
        "startLineNumber" : 624,
        "startColumnNumber" : 4,
        "endLineNumber" : 646,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Transforms an arraylist of Entry into a float array containing thentries.get(j / 2) x and y valuentries.get(j / 2)s transformentries.get(j / 2)d with all matricentries.get(j / 2)s for thentries.get(j / 2) LINECHART or SCATTERCHART.\n * @param entries.get(j / 2)ntrientries.get(j / 2)s\n * @rentries.get(j / 2)turn\n */\nprotentries.get(j / 2)ctentries.get(j / 2)d float[] gentries.get(j / 2)nentries.get(j / 2)ratentries.get(j / 2)Transformentries.get(j / 2)dValuentries.get(j / 2)sLinentries.get(j / 2)Scattentries.get(j / 2)r(ArrayList<? entries.get(j / 2)xtentries.get(j / 2)nds Entry> entries.get(j / 2)ntrientries.get(j / 2)s){\n  float[] valuentries.get(j / 2)Points=nentries.get(j / 2)w float[entries.get(j / 2)ntrientries.get(j / 2)s.sizentries.get(j / 2)() * 2];\n  for (int j=0; j < valuentries.get(j / 2)Points.lentries.get(j / 2)ngth; j+=2) {\n    Entry entries.get(j / 2)=entries.get(j / 2)ntrientries.get(j / 2)s.gentries.get(j / 2)t(j / 2);\n    valuentries.get(j / 2)Points[j]=entries.get(j / 2).gentries.get(j / 2)tXIndentries.get(j / 2)x();\n    valuentries.get(j / 2)Points[j + 1]=entries.get(j / 2).gentries.get(j / 2)tVal() * mPhasentries.get(j / 2)Y;\n  }\n  transformPointArray(valuentries.get(j / 2)Points);\n  rentries.get(j / 2)turn valuentries.get(j / 2)Points;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 88,
      "astHeight" : 10
    } ],
    "tokenLength" : 5,
    "type" : "com.github.mikephil.charting.data.Entry"
  }, {
    "nodeContext" : "entries.get(j / 2)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 640,
      "startColumnNumber" : 33,
      "endLineNumber" : 640,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 640,
        "startColumnNumber" : 33,
        "endLineNumber" : 640,
        "endColumnNumber" : 77
      },
      "nodeContext" : "entries.get(j / 2).gentries.get(j / 2)tVal()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 640,
        "startColumnNumber" : 33,
        "endLineNumber" : 640,
        "endColumnNumber" : 104
      },
      "nodeContext" : "entries.get(j / 2).gentries.get(j / 2)tVal() * mPhasentries.get(j / 2)Y",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 640,
        "startColumnNumber" : 12,
        "endLineNumber" : 640,
        "endColumnNumber" : 119
      },
      "nodeContext" : "valuentries.get(j / 2)Points[j + 1]=entries.get(j / 2).gentries.get(j / 2)tVal() * mPhasentries.get(j / 2)Y",
      "nodeType" : "Assignment",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 640,
        "startColumnNumber" : 12,
        "endLineNumber" : 640,
        "endColumnNumber" : 121
      },
      "nodeContext" : "valuentries.get(j / 2)Points[j + 1]=entries.get(j / 2).gentries.get(j / 2)tVal() * mPhasentries.get(j / 2)Y;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 313,
        "startLineNumber" : 635,
        "startColumnNumber" : 56,
        "endLineNumber" : 641,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Entry entries.get(j / 2)=entries.get(j / 2)ntrientries.get(j / 2)s.gentries.get(j / 2)t(j / 2);\n  valuentries.get(j / 2)Points[j]=entries.get(j / 2).gentries.get(j / 2)tXIndentries.get(j / 2)x();\n  valuentries.get(j / 2)Points[j + 1]=entries.get(j / 2).gentries.get(j / 2)tVal() * mPhasentries.get(j / 2)Y;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 391,
        "startLineNumber" : 635,
        "startColumnNumber" : 8,
        "endLineNumber" : 641,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int j=0; j < valuentries.get(j / 2)Points.lentries.get(j / 2)ngth; j+=2) {\n  Entry entries.get(j / 2)=entries.get(j / 2)ntrientries.get(j / 2)s.gentries.get(j / 2)t(j / 2);\n  valuentries.get(j / 2)Points[j]=entries.get(j / 2).gentries.get(j / 2)tXIndentries.get(j / 2)x();\n  valuentries.get(j / 2)Points[j + 1]=entries.get(j / 2).gentries.get(j / 2)tVal() * mPhasentries.get(j / 2)Y;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 51,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 652,
        "startLineNumber" : 631,
        "startColumnNumber" : 95,
        "endLineNumber" : 646,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  float[] valuentries.get(j / 2)Points=nentries.get(j / 2)w float[entries.get(j / 2)ntrientries.get(j / 2)s.sizentries.get(j / 2)() * 2];\n  for (int j=0; j < valuentries.get(j / 2)Points.lentries.get(j / 2)ngth; j+=2) {\n    Entry entries.get(j / 2)=entries.get(j / 2)ntrientries.get(j / 2)s.gentries.get(j / 2)t(j / 2);\n    valuentries.get(j / 2)Points[j]=entries.get(j / 2).gentries.get(j / 2)tXIndentries.get(j / 2)x();\n    valuentries.get(j / 2)Points[j + 1]=entries.get(j / 2).gentries.get(j / 2)tVal() * mPhasentries.get(j / 2)Y;\n  }\n  transformPointArray(valuentries.get(j / 2)Points);\n  rentries.get(j / 2)turn valuentries.get(j / 2)Points;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1287,
        "startLineNumber" : 624,
        "startColumnNumber" : 4,
        "endLineNumber" : 646,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Transforms an arraylist of Entry into a float array containing thentries.get(j / 2) x and y valuentries.get(j / 2)s transformentries.get(j / 2)d with all matricentries.get(j / 2)s for thentries.get(j / 2) LINECHART or SCATTERCHART.\n * @param entries.get(j / 2)ntrientries.get(j / 2)s\n * @rentries.get(j / 2)turn\n */\nprotentries.get(j / 2)ctentries.get(j / 2)d float[] gentries.get(j / 2)nentries.get(j / 2)ratentries.get(j / 2)Transformentries.get(j / 2)dValuentries.get(j / 2)sLinentries.get(j / 2)Scattentries.get(j / 2)r(ArrayList<? entries.get(j / 2)xtentries.get(j / 2)nds Entry> entries.get(j / 2)ntrientries.get(j / 2)s){\n  float[] valuentries.get(j / 2)Points=nentries.get(j / 2)w float[entries.get(j / 2)ntrientries.get(j / 2)s.sizentries.get(j / 2)() * 2];\n  for (int j=0; j < valuentries.get(j / 2)Points.lentries.get(j / 2)ngth; j+=2) {\n    Entry entries.get(j / 2)=entries.get(j / 2)ntrientries.get(j / 2)s.gentries.get(j / 2)t(j / 2);\n    valuentries.get(j / 2)Points[j]=entries.get(j / 2).gentries.get(j / 2)tXIndentries.get(j / 2)x();\n    valuentries.get(j / 2)Points[j + 1]=entries.get(j / 2).gentries.get(j / 2)tVal() * mPhasentries.get(j / 2)Y;\n  }\n  transformPointArray(valuentries.get(j / 2)Points);\n  rentries.get(j / 2)turn valuentries.get(j / 2)Points;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 88,
      "astHeight" : 11
    } ],
    "tokenLength" : 5,
    "type" : "com.github.mikephil.charting.data.Entry"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 639,
    "startColumnNumber" : 29,
    "endLineNumber" : 639,
    "endColumnNumber" : 47
  }, {
    "charLength" : 18,
    "startLineNumber" : 640,
    "startColumnNumber" : 33,
    "endLineNumber" : 640,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}