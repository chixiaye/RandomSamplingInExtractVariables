{
  "id" : 6,
  "expression" : "IpPortBasedClient.getClientId(subscriber.getAddrStr(),true)",
  "projectName" : "alibaba@nacos",
  "commitID" : "ac73e7395ebf04141d94d7608551b2efa5e82de1",
  "filePath" : "naming/src/main/java/com/alibaba/nacos/naming/core/InstanceOperatorClientImpl.java",
  "occurrences" : 2,
  "expressionList" : [ {
    "nodeContext" : "IpPortBasedClient.getClientId(subscriber.getAddrStr(),true)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 59,
      "startLineNumber" : 165,
      "startColumnNumber" : 39,
      "endLineNumber" : 165,
      "endColumnNumber" : 98
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 165,
        "startColumnNumber" : 12,
        "endLineNumber" : 165,
        "endColumnNumber" : 104
      },
      "nodeContext" : "createIpPortClientIfAbsent(IpPortBasedClient.getClientId(subscriber.getAddrStr(),true),true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 165,
        "startColumnNumber" : 12,
        "endLineNumber" : 165,
        "endColumnNumber" : 106
      },
      "nodeContext" : "createIpPortClientIfAbsent(IpPortBasedClient.getClientId(subscriber.getAddrStr(),true),true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 353,
        "startLineNumber" : 163,
        "startColumnNumber" : 32,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String IpPortBasedClient.getClientId(subscriber.getAddrStr(),true)=IpPortBasedClient.getClientId(subscriber.getAddrStr(),true);\n  createIpPortClientIfAbsent(IpPortBasedClient.getClientId(subscriber.getAddrStr(),true),true);\n  clientOperationService.subscribeService(service,subscriber,IpPortBasedClient.getClientId(subscriber.getAddrStr(),true));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 377,
        "startLineNumber" : 163,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (null != subscriber) {\n  String IpPortBasedClient.getClientId(subscriber.getAddrStr(),true)=IpPortBasedClient.getClientId(subscriber.getAddrStr(),true);\n  createIpPortClientIfAbsent(IpPortBasedClient.getClientId(subscriber.getAddrStr(),true),true);\n  clientOperationService.subscribeService(service,subscriber,IpPortBasedClient.getClientId(subscriber.getAddrStr(),true));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 700,
        "startLineNumber" : 161,
        "startColumnNumber" : 32,
        "endLineNumber" : 173,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Service service=getService(namespaceId,serviceName,true);\n  if (null != subscriber) {\n    String IpPortBasedClient.getClientId(subscriber.getAddrStr(),true)=IpPortBasedClient.getClientId(subscriber.getAddrStr(),true);\n    createIpPortClientIfAbsent(IpPortBasedClient.getClientId(subscriber.getAddrStr(),true),true);\n    clientOperationService.subscribeService(service,subscriber,IpPortBasedClient.getClientId(subscriber.getAddrStr(),true));\n  }\n  ServiceInfo serviceInfo=serviceStorage.getData(service);\n  ServiceInfo result=ServiceUtil.selectInstances(serviceInfo,cluster,healthOnly,true);\n  result.setName(NamingUtils.getGroupedName(result.getName(),result.getGroupName()));\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 82,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 836,
        "startLineNumber" : 159,
        "startColumnNumber" : 4,
        "endLineNumber" : 173,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public ServiceInfo listInstance(String namespaceId,String serviceName,Subscriber subscriber,String cluster,boolean healthOnly){\n  Service service=getService(namespaceId,serviceName,true);\n  if (null != subscriber) {\n    String IpPortBasedClient.getClientId(subscriber.getAddrStr(),true)=IpPortBasedClient.getClientId(subscriber.getAddrStr(),true);\n    createIpPortClientIfAbsent(IpPortBasedClient.getClientId(subscriber.getAddrStr(),true),true);\n    clientOperationService.subscribeService(service,subscriber,IpPortBasedClient.getClientId(subscriber.getAddrStr(),true));\n  }\n  ServiceInfo serviceInfo=serviceStorage.getData(service);\n  ServiceInfo result=ServiceUtil.selectInstances(serviceInfo,cluster,healthOnly,true);\n  result.setName(NamingUtils.getGroupedName(result.getName(),result.getGroupName()));\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 9
    } ],
    "tokenLength" : 5,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "IpPortBasedClient.getClientId(subscriber.getAddrStr(),true)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 59,
      "startLineNumber" : 166,
      "startColumnNumber" : 73,
      "endLineNumber" : 166,
      "endColumnNumber" : 132
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 166,
        "startColumnNumber" : 12,
        "endLineNumber" : 166,
        "endColumnNumber" : 131
      },
      "nodeContext" : "clientOperationService.subscribeService(service,subscriber,IpPortBasedClient.getClientId(subscriber.getAddrStr(),true))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 166,
        "startColumnNumber" : 12,
        "endLineNumber" : 166,
        "endColumnNumber" : 133
      },
      "nodeContext" : "clientOperationService.subscribeService(service,subscriber,IpPortBasedClient.getClientId(subscriber.getAddrStr(),true));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 353,
        "startLineNumber" : 163,
        "startColumnNumber" : 32,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String IpPortBasedClient.getClientId(subscriber.getAddrStr(),true)=IpPortBasedClient.getClientId(subscriber.getAddrStr(),true);\n  createIpPortClientIfAbsent(IpPortBasedClient.getClientId(subscriber.getAddrStr(),true),true);\n  clientOperationService.subscribeService(service,subscriber,IpPortBasedClient.getClientId(subscriber.getAddrStr(),true));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 377,
        "startLineNumber" : 163,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (null != subscriber) {\n  String IpPortBasedClient.getClientId(subscriber.getAddrStr(),true)=IpPortBasedClient.getClientId(subscriber.getAddrStr(),true);\n  createIpPortClientIfAbsent(IpPortBasedClient.getClientId(subscriber.getAddrStr(),true),true);\n  clientOperationService.subscribeService(service,subscriber,IpPortBasedClient.getClientId(subscriber.getAddrStr(),true));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 700,
        "startLineNumber" : 161,
        "startColumnNumber" : 32,
        "endLineNumber" : 173,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Service service=getService(namespaceId,serviceName,true);\n  if (null != subscriber) {\n    String IpPortBasedClient.getClientId(subscriber.getAddrStr(),true)=IpPortBasedClient.getClientId(subscriber.getAddrStr(),true);\n    createIpPortClientIfAbsent(IpPortBasedClient.getClientId(subscriber.getAddrStr(),true),true);\n    clientOperationService.subscribeService(service,subscriber,IpPortBasedClient.getClientId(subscriber.getAddrStr(),true));\n  }\n  ServiceInfo serviceInfo=serviceStorage.getData(service);\n  ServiceInfo result=ServiceUtil.selectInstances(serviceInfo,cluster,healthOnly,true);\n  result.setName(NamingUtils.getGroupedName(result.getName(),result.getGroupName()));\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 82,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 836,
        "startLineNumber" : 159,
        "startColumnNumber" : 4,
        "endLineNumber" : 173,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public ServiceInfo listInstance(String namespaceId,String serviceName,Subscriber subscriber,String cluster,boolean healthOnly){\n  Service service=getService(namespaceId,serviceName,true);\n  if (null != subscriber) {\n    String IpPortBasedClient.getClientId(subscriber.getAddrStr(),true)=IpPortBasedClient.getClientId(subscriber.getAddrStr(),true);\n    createIpPortClientIfAbsent(IpPortBasedClient.getClientId(subscriber.getAddrStr(),true),true);\n    clientOperationService.subscribeService(service,subscriber,IpPortBasedClient.getClientId(subscriber.getAddrStr(),true));\n  }\n  ServiceInfo serviceInfo=serviceStorage.getData(service);\n  ServiceInfo result=ServiceUtil.selectInstances(serviceInfo,cluster,healthOnly,true);\n  result.setName(NamingUtils.getGroupedName(result.getName(),result.getGroupName()));\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 9
    } ],
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 59,
    "startLineNumber" : 165,
    "startColumnNumber" : 39,
    "endLineNumber" : 165,
    "endColumnNumber" : 98
  }, {
    "charLength" : 59,
    "startLineNumber" : 166,
    "startColumnNumber" : 73,
    "endLineNumber" : 166,
    "endColumnNumber" : 132
  } ],
  "layoutRelationDataList" : [ ]
}