{
  "id" : 9,
  "expression" : "loadStart + i",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "f5a6d6136263c94116503944341ae3b516783280",
  "filePath" : "paging/lib/src/main/java/org/signal/paging/FixedSizePagingController.java",
  "occurrences" : 2,
  "expressionList" : [ {
    "nodeContext" : "loadStart + i",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 116,
      "startColumnNumber" : 20,
      "endLineNumber" : 116,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 116,
        "startColumnNumber" : 8,
        "endLineNumber" : 116,
        "endColumnNumber" : 39
      },
      "nodeContext" : "updated.set(loadStart + i,item)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 116,
        "startColumnNumber" : 8,
        "endLineNumber" : 116,
        "endColumnNumber" : 41
      },
      "nodeContext" : "updated.set(loadStart + i,item);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 161,
        "startLineNumber" : 112,
        "startColumnNumber" : 92,
        "endLineNumber" : 118,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  int loadStart + i=loadStart + i;\n  Data item=loaded.get(i);\n  updated.set(loadStart + i,item);\n  keyToPosition.put(dataSource.getKey(item),loadStart + i);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 242,
        "startLineNumber" : 112,
        "startColumnNumber" : 6,
        "endLineNumber" : 118,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=0, len=Math.min(loaded.size(),data.size() - loadStart); i < len; i++) {\n  int loadStart + i=loadStart + i;\n  Data item=loaded.get(i);\n  updated.set(loadStart + i,item);\n  keyToPosition.put(dataSource.getKey(item),loadStart + i);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 58,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 675,
        "startLineNumber" : 97,
        "startColumnNumber" : 33,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (invalidated) {\n    Log.w(TAG,buildLog(aroundIndex,\"Invalidated! At beginning of load task.\"));\n    return;\n  }\n  List<Data> loaded=dataSource.load(loadStart,loadEnd - loadStart,() -> invalidated);\n  if (invalidated) {\n    Log.w(TAG,buildLog(aroundIndex,\"Invalidated! Just after data was loaded.\"));\n    return;\n  }\n  List<Data> updated=new CompressedList<>(data);\n  for (int i=0, len=Math.min(loaded.size(),data.size() - loadStart); i < len; i++) {\n    int loadStart + i=loadStart + i;\n    Data item=loaded.get(i);\n    updated.set(loadStart + i,item);\n    keyToPosition.put(dataSource.getKey(item),loadStart + i);\n  }\n  data=updated;\n  liveData.postValue(updated);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 681,
        "startLineNumber" : 97,
        "startColumnNumber" : 27,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "() -> {\n  if (invalidated) {\n    Log.w(TAG,buildLog(aroundIndex,\"Invalidated! At beginning of load task.\"));\n    return;\n  }\n  List<Data> loaded=dataSource.load(loadStart,loadEnd - loadStart,() -> invalidated);\n  if (invalidated) {\n    Log.w(TAG,buildLog(aroundIndex,\"Invalidated! Just after data was loaded.\"));\n    return;\n  }\n  List<Data> updated=new CompressedList<>(data);\n  for (int i=0, len=Math.min(loaded.size(),data.size() - loadStart); i < len; i++) {\n    int loadStart + i=loadStart + i;\n    Data item=loaded.get(i);\n    updated.set(loadStart + i,item);\n    keyToPosition.put(dataSource.getKey(item),loadStart + i);\n  }\n  data=updated;\n  liveData.postValue(updated);\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 125,
      "astHeight" : 9
    } ],
    "tokenLength" : 3,
    "type" : "int"
  }, {
    "nodeContext" : "loadStart + i",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 117,
      "startColumnNumber" : 51,
      "endLineNumber" : 117,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 117,
        "startColumnNumber" : 8,
        "endLineNumber" : 117,
        "endColumnNumber" : 64
      },
      "nodeContext" : "keyToPosition.put(dataSource.getKey(item),loadStart + i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 117,
        "startColumnNumber" : 8,
        "endLineNumber" : 117,
        "endColumnNumber" : 66
      },
      "nodeContext" : "keyToPosition.put(dataSource.getKey(item),loadStart + i);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 161,
        "startLineNumber" : 112,
        "startColumnNumber" : 92,
        "endLineNumber" : 118,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  int loadStart + i=loadStart + i;\n  Data item=loaded.get(i);\n  updated.set(loadStart + i,item);\n  keyToPosition.put(dataSource.getKey(item),loadStart + i);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 242,
        "startLineNumber" : 112,
        "startColumnNumber" : 6,
        "endLineNumber" : 118,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=0, len=Math.min(loaded.size(),data.size() - loadStart); i < len; i++) {\n  int loadStart + i=loadStart + i;\n  Data item=loaded.get(i);\n  updated.set(loadStart + i,item);\n  keyToPosition.put(dataSource.getKey(item),loadStart + i);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 58,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 675,
        "startLineNumber" : 97,
        "startColumnNumber" : 33,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (invalidated) {\n    Log.w(TAG,buildLog(aroundIndex,\"Invalidated! At beginning of load task.\"));\n    return;\n  }\n  List<Data> loaded=dataSource.load(loadStart,loadEnd - loadStart,() -> invalidated);\n  if (invalidated) {\n    Log.w(TAG,buildLog(aroundIndex,\"Invalidated! Just after data was loaded.\"));\n    return;\n  }\n  List<Data> updated=new CompressedList<>(data);\n  for (int i=0, len=Math.min(loaded.size(),data.size() - loadStart); i < len; i++) {\n    int loadStart + i=loadStart + i;\n    Data item=loaded.get(i);\n    updated.set(loadStart + i,item);\n    keyToPosition.put(dataSource.getKey(item),loadStart + i);\n  }\n  data=updated;\n  liveData.postValue(updated);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 681,
        "startLineNumber" : 97,
        "startColumnNumber" : 27,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "() -> {\n  if (invalidated) {\n    Log.w(TAG,buildLog(aroundIndex,\"Invalidated! At beginning of load task.\"));\n    return;\n  }\n  List<Data> loaded=dataSource.load(loadStart,loadEnd - loadStart,() -> invalidated);\n  if (invalidated) {\n    Log.w(TAG,buildLog(aroundIndex,\"Invalidated! Just after data was loaded.\"));\n    return;\n  }\n  List<Data> updated=new CompressedList<>(data);\n  for (int i=0, len=Math.min(loaded.size(),data.size() - loadStart); i < len; i++) {\n    int loadStart + i=loadStart + i;\n    Data item=loaded.get(i);\n    updated.set(loadStart + i,item);\n    keyToPosition.put(dataSource.getKey(item),loadStart + i);\n  }\n  data=updated;\n  liveData.postValue(updated);\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 125,
      "astHeight" : 9
    } ],
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 116,
    "startColumnNumber" : 20,
    "endLineNumber" : 116,
    "endColumnNumber" : 33
  }, {
    "charLength" : 13,
    "startLineNumber" : 117,
    "startColumnNumber" : 51,
    "endLineNumber" : 117,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ ]
}