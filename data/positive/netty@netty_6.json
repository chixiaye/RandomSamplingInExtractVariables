{
  "id" : 6,
  "expression" : "readString(\"userid\",in)",
  "projectName" : "netty@netty",
  "commitID" : "d9afd999ffee8daee0a832098b138ac1da185642",
  "filePath" : "codec-socks/src/main/java/io/netty/handler/codec/socksx/v4/Socks4ServerDecoder.java",
  "occurrences" : 2,
  "expressionList" : [ {
    "nodeContext" : "readString(\"userid\",in)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 75,
      "startColumnNumber" : 20,
      "endLineNumber" : 75,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 75,
        "startColumnNumber" : 20,
        "endLineNumber" : 75,
        "endColumnNumber" : 51
      },
      "nodeContext" : "readString(\"userid\",in) == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 75,
        "startColumnNumber" : 16,
        "endLineNumber" : 77,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (readString(\"userid\",in) == null) {\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 201,
        "startLineNumber" : 73,
        "startColumnNumber" : 30,
        "endLineNumber" : 80,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String readString(\"userid\",in)=readString(\"userreadString(\"userid\",in)\",in);\n  if (readString(\"userid\",in) == null) {\n    return;\n  }\n  userId=readString(\"userid\",in);\n  state=State.READ_DOMAIN;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1156,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 13
      },
      "nodeContext" : "switch (state) {\ncase START:{\n    if (in.readableBytes() < 8) {\n      return;\n    }\n    final int version=in.readUnsignedByte();\n    if (version != SocksVersion.SOCKS4a.byteValue()) {\n      throw new DecoderException(\"unsupported protocol version: \" + version);\n    }\n    type=Socks4CommandType.valueOf(in.readByte());\n    dstPort=in.readUnsignedShort();\n    dstAddr=NetUtil.intToIpAddress(in.readInt());\n    state=State.READ_USERID;\n  }\ncase READ_USERID:{\n  String readString(\"userid\",in)=readString(\"userreadString(\"userid\",in)\",in);\n  if (readString(\"userid\",in) == null) {\n    return;\n  }\n  userId=readString(\"userid\",in);\n  state=State.READ_DOMAIN;\n}\ncase READ_DOMAIN:{\nif (!\"0.0.0.0\".equals(dstAddr) && dstAddr.startsWith(\"0.0.0.\")) {\n  String addr=readString(\"dstAddr\",in);\n  if (addr == null) {\n    return;\n  }\n  dstAddr=addr;\n}\nctx.fireChannelRead(new DefaultSocks4CommandRequest(type,dstAddr,dstPort,userId));\nstate=State.SUCCESS;\n}\ncase SUCCESS:{\nint readableBytes=actualReadableBytes();\nif (readableBytes > 0) {\nctx.fireChannelRead(in.readRetainedSlice(readableBytes));\n}\nbreak;\n}\ncase FAILURE:{\nin.skipBytes(actualReadableBytes());\nbreak;\n}\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 182,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1218,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\nswitch (state) {\ncase START:{\n      if (in.readableBytes() < 8) {\n        return;\n      }\n      final int version=in.readUnsignedByte();\n      if (version != SocksVersion.SOCKS4a.byteValue()) {\n        throw new DecoderException(\"unsupported protocol version: \" + version);\n      }\n      type=Socks4CommandType.valueOf(in.readByte());\n      dstPort=in.readUnsignedShort();\n      dstAddr=NetUtil.intToIpAddress(in.readInt());\n      state=State.READ_USERID;\n    }\ncase READ_USERID:{\n    String readString(\"userid\",in)=readString(\"userreadString(\"userid\",in)\",in);\n    if (readString(\"userid\",in) == null) {\n      return;\n    }\n    userId=readString(\"userid\",in);\n    state=State.READ_DOMAIN;\n  }\ncase READ_DOMAIN:{\n  if (!\"0.0.0.0\".equals(dstAddr) && dstAddr.startsWith(\"0.0.0.\")) {\n    String addr=readString(\"dstAddr\",in);\n    if (addr == null) {\n      return;\n    }\n    dstAddr=addr;\n  }\n  ctx.fireChannelRead(new DefaultSocks4CommandRequest(type,dstAddr,dstPort,userId));\n  state=State.SUCCESS;\n}\ncase SUCCESS:{\nint readableBytes=actualReadableBytes();\nif (readableBytes > 0) {\n  ctx.fireChannelRead(in.readRetainedSlice(readableBytes));\n}\nbreak;\n}\ncase FAILURE:{\nin.skipBytes(actualReadableBytes());\nbreak;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 183,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1260,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\nswitch (state) {\ncase START:{\n      if (in.readableBytes() < 8) {\n        return;\n      }\n      final int version=in.readUnsignedByte();\n      if (version != SocksVersion.SOCKS4a.byteValue()) {\n        throw new DecoderException(\"unsupported protocol version: \" + version);\n      }\n      type=Socks4CommandType.valueOf(in.readByte());\n      dstPort=in.readUnsignedShort();\n      dstAddr=NetUtil.intToIpAddress(in.readInt());\n      state=State.READ_USERID;\n    }\ncase READ_USERID:{\n    String readString(\"userid\",in)=readString(\"userreadString(\"userid\",in)\",in);\n    if (readString(\"userid\",in) == null) {\n      return;\n    }\n    userId=readString(\"userid\",in);\n    state=State.READ_DOMAIN;\n  }\ncase READ_DOMAIN:{\n  if (!\"0.0.0.0\".equals(dstAddr) && dstAddr.startsWith(\"0.0.0.\")) {\n    String addr=readString(\"dstAddr\",in);\n    if (addr == null) {\n      return;\n    }\n    dstAddr=addr;\n  }\n  ctx.fireChannelRead(new DefaultSocks4CommandRequest(type,dstAddr,dstPort,userId));\n  state=State.SUCCESS;\n}\ncase SUCCESS:{\nint readableBytes=actualReadableBytes();\nif (readableBytes > 0) {\n  ctx.fireChannelRead(in.readRetainedSlice(readableBytes));\n}\nbreak;\n}\ncase FAILURE:{\nin.skipBytes(actualReadableBytes());\nbreak;\n}\n}\n}\n catch (Exception e) {\nfail(ctx,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 195,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1334,
        "startLineNumber" : 56,
        "startColumnNumber" : 82,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\nswitch (state) {\ncase START:{\n        if (in.readableBytes() < 8) {\n          return;\n        }\n        final int version=in.readUnsignedByte();\n        if (version != SocksVersion.SOCKS4a.byteValue()) {\n          throw new DecoderException(\"unsupported protocol version: \" + version);\n        }\n        type=Socks4CommandType.valueOf(in.readByte());\n        dstPort=in.readUnsignedShort();\n        dstAddr=NetUtil.intToIpAddress(in.readInt());\n        state=State.READ_USERID;\n      }\ncase READ_USERID:{\n      String readString(\"userid\",in)=readString(\"userreadString(\"userid\",in)\",in);\n      if (readString(\"userid\",in) == null) {\n        return;\n      }\n      userId=readString(\"userid\",in);\n      state=State.READ_DOMAIN;\n    }\ncase READ_DOMAIN:{\n    if (!\"0.0.0.0\".equals(dstAddr) && dstAddr.startsWith(\"0.0.0.\")) {\n      String addr=readString(\"dstAddr\",in);\n      if (addr == null) {\n        return;\n      }\n      dstAddr=addr;\n    }\n    ctx.fireChannelRead(new DefaultSocks4CommandRequest(type,dstAddr,dstPort,userId));\n    state=State.SUCCESS;\n  }\ncase SUCCESS:{\n  int readableBytes=actualReadableBytes();\n  if (readableBytes > 0) {\n    ctx.fireChannelRead(in.readRetainedSlice(readableBytes));\n  }\n  break;\n}\ncase FAILURE:{\nin.skipBytes(actualReadableBytes());\nbreak;\n}\n}\n}\n catch (Exception e) {\nfail(ctx,e);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 196,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1463,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@OverrreadString(\"userid\",in)e protected voreadString(\"userid\",in) decode(ChannelHandlerContext ctx,ByteBuf in) throws Exception {\n  try {\nswitch (state) {\ncase START:{\n        if (in.readableBytes() < 8) {\n          return;\n        }\n        final int version=in.readUnsignedByte();\n        if (version != SocksVersion.SOCKS4a.byteValue()) {\n          throw new DecoderException(\"unsupported protocol version: \" + version);\n        }\n        type=Socks4CommandType.valueOf(in.readByte());\n        dstPort=in.readUnsignedShort();\n        dstAddr=NetUtil.intToIpAddress(in.readInt());\n        state=State.READ_USERID;\n      }\ncase READ_USERID:{\n      String readString(\"userid\",in)=readString(\"userreadString(\"userid\",in)\",in);\n      if (readString(\"userid\",in) == null) {\n        return;\n      }\n      userId=readString(\"userid\",in);\n      state=State.READ_DOMAIN;\n    }\ncase READ_DOMAIN:{\n    if (!\"0.0.0.0\".equals(dstAddr) && dstAddr.startsWith(\"0.0.0.\")) {\n      String addr=readString(\"dstAddr\",in);\n      if (addr == null) {\n        return;\n      }\n      dstAddr=addr;\n    }\n    ctx.fireChannelRead(new DefaultSocks4CommandRequest(type,dstAddr,dstPort,userId));\n    state=State.SUCCESS;\n  }\ncase SUCCESS:{\n  int readableBytes=actualReadableBytes();\n  if (readableBytes > 0) {\n    ctx.fireChannelRead(in.readRetainedSlice(readableBytes));\n  }\n  break;\n}\ncase FAILURE:{\nin.skipBytes(actualReadableBytes());\nbreak;\n}\n}\n}\n catch (Exception e) {\nfail(ctx,e);\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 212,
      "astHeight" : 12
    } ],
    "tokenLength" : 3,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "readString(\"userid\",in)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 78,
      "startColumnNumber" : 25,
      "endLineNumber" : 78,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 78,
        "startColumnNumber" : 16,
        "endLineNumber" : 78,
        "endColumnNumber" : 46
      },
      "nodeContext" : "userId=readString(\"userid\",in)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 78,
        "startColumnNumber" : 16,
        "endLineNumber" : 78,
        "endColumnNumber" : 48
      },
      "nodeContext" : "userId=readString(\"userid\",in);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 201,
        "startLineNumber" : 73,
        "startColumnNumber" : 30,
        "endLineNumber" : 80,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String readString(\"userid\",in)=readString(\"userreadString(\"userid\",in)\",in);\n  if (readString(\"userid\",in) == null) {\n    return;\n  }\n  userId=readString(\"userid\",in);\n  state=State.READ_DOMAIN;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1156,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 13
      },
      "nodeContext" : "switch (state) {\ncase START:{\n    if (in.readableBytes() < 8) {\n      return;\n    }\n    final int version=in.readUnsignedByte();\n    if (version != SocksVersion.SOCKS4a.byteValue()) {\n      throw new DecoderException(\"unsupported protocol version: \" + version);\n    }\n    type=Socks4CommandType.valueOf(in.readByte());\n    dstPort=in.readUnsignedShort();\n    dstAddr=NetUtil.intToIpAddress(in.readInt());\n    state=State.READ_USERID;\n  }\ncase READ_USERID:{\n  String readString(\"userid\",in)=readString(\"userreadString(\"userid\",in)\",in);\n  if (readString(\"userid\",in) == null) {\n    return;\n  }\n  userId=readString(\"userid\",in);\n  state=State.READ_DOMAIN;\n}\ncase READ_DOMAIN:{\nif (!\"0.0.0.0\".equals(dstAddr) && dstAddr.startsWith(\"0.0.0.\")) {\n  String addr=readString(\"dstAddr\",in);\n  if (addr == null) {\n    return;\n  }\n  dstAddr=addr;\n}\nctx.fireChannelRead(new DefaultSocks4CommandRequest(type,dstAddr,dstPort,userId));\nstate=State.SUCCESS;\n}\ncase SUCCESS:{\nint readableBytes=actualReadableBytes();\nif (readableBytes > 0) {\nctx.fireChannelRead(in.readRetainedSlice(readableBytes));\n}\nbreak;\n}\ncase FAILURE:{\nin.skipBytes(actualReadableBytes());\nbreak;\n}\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 182,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1218,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\nswitch (state) {\ncase START:{\n      if (in.readableBytes() < 8) {\n        return;\n      }\n      final int version=in.readUnsignedByte();\n      if (version != SocksVersion.SOCKS4a.byteValue()) {\n        throw new DecoderException(\"unsupported protocol version: \" + version);\n      }\n      type=Socks4CommandType.valueOf(in.readByte());\n      dstPort=in.readUnsignedShort();\n      dstAddr=NetUtil.intToIpAddress(in.readInt());\n      state=State.READ_USERID;\n    }\ncase READ_USERID:{\n    String readString(\"userid\",in)=readString(\"userreadString(\"userid\",in)\",in);\n    if (readString(\"userid\",in) == null) {\n      return;\n    }\n    userId=readString(\"userid\",in);\n    state=State.READ_DOMAIN;\n  }\ncase READ_DOMAIN:{\n  if (!\"0.0.0.0\".equals(dstAddr) && dstAddr.startsWith(\"0.0.0.\")) {\n    String addr=readString(\"dstAddr\",in);\n    if (addr == null) {\n      return;\n    }\n    dstAddr=addr;\n  }\n  ctx.fireChannelRead(new DefaultSocks4CommandRequest(type,dstAddr,dstPort,userId));\n  state=State.SUCCESS;\n}\ncase SUCCESS:{\nint readableBytes=actualReadableBytes();\nif (readableBytes > 0) {\n  ctx.fireChannelRead(in.readRetainedSlice(readableBytes));\n}\nbreak;\n}\ncase FAILURE:{\nin.skipBytes(actualReadableBytes());\nbreak;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 183,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1260,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\nswitch (state) {\ncase START:{\n      if (in.readableBytes() < 8) {\n        return;\n      }\n      final int version=in.readUnsignedByte();\n      if (version != SocksVersion.SOCKS4a.byteValue()) {\n        throw new DecoderException(\"unsupported protocol version: \" + version);\n      }\n      type=Socks4CommandType.valueOf(in.readByte());\n      dstPort=in.readUnsignedShort();\n      dstAddr=NetUtil.intToIpAddress(in.readInt());\n      state=State.READ_USERID;\n    }\ncase READ_USERID:{\n    String readString(\"userid\",in)=readString(\"userreadString(\"userid\",in)\",in);\n    if (readString(\"userid\",in) == null) {\n      return;\n    }\n    userId=readString(\"userid\",in);\n    state=State.READ_DOMAIN;\n  }\ncase READ_DOMAIN:{\n  if (!\"0.0.0.0\".equals(dstAddr) && dstAddr.startsWith(\"0.0.0.\")) {\n    String addr=readString(\"dstAddr\",in);\n    if (addr == null) {\n      return;\n    }\n    dstAddr=addr;\n  }\n  ctx.fireChannelRead(new DefaultSocks4CommandRequest(type,dstAddr,dstPort,userId));\n  state=State.SUCCESS;\n}\ncase SUCCESS:{\nint readableBytes=actualReadableBytes();\nif (readableBytes > 0) {\n  ctx.fireChannelRead(in.readRetainedSlice(readableBytes));\n}\nbreak;\n}\ncase FAILURE:{\nin.skipBytes(actualReadableBytes());\nbreak;\n}\n}\n}\n catch (Exception e) {\nfail(ctx,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 195,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1334,
        "startLineNumber" : 56,
        "startColumnNumber" : 82,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\nswitch (state) {\ncase START:{\n        if (in.readableBytes() < 8) {\n          return;\n        }\n        final int version=in.readUnsignedByte();\n        if (version != SocksVersion.SOCKS4a.byteValue()) {\n          throw new DecoderException(\"unsupported protocol version: \" + version);\n        }\n        type=Socks4CommandType.valueOf(in.readByte());\n        dstPort=in.readUnsignedShort();\n        dstAddr=NetUtil.intToIpAddress(in.readInt());\n        state=State.READ_USERID;\n      }\ncase READ_USERID:{\n      String readString(\"userid\",in)=readString(\"userreadString(\"userid\",in)\",in);\n      if (readString(\"userid\",in) == null) {\n        return;\n      }\n      userId=readString(\"userid\",in);\n      state=State.READ_DOMAIN;\n    }\ncase READ_DOMAIN:{\n    if (!\"0.0.0.0\".equals(dstAddr) && dstAddr.startsWith(\"0.0.0.\")) {\n      String addr=readString(\"dstAddr\",in);\n      if (addr == null) {\n        return;\n      }\n      dstAddr=addr;\n    }\n    ctx.fireChannelRead(new DefaultSocks4CommandRequest(type,dstAddr,dstPort,userId));\n    state=State.SUCCESS;\n  }\ncase SUCCESS:{\n  int readableBytes=actualReadableBytes();\n  if (readableBytes > 0) {\n    ctx.fireChannelRead(in.readRetainedSlice(readableBytes));\n  }\n  break;\n}\ncase FAILURE:{\nin.skipBytes(actualReadableBytes());\nbreak;\n}\n}\n}\n catch (Exception e) {\nfail(ctx,e);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 196,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1463,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@OverrreadString(\"userid\",in)e protected voreadString(\"userid\",in) decode(ChannelHandlerContext ctx,ByteBuf in) throws Exception {\n  try {\nswitch (state) {\ncase START:{\n        if (in.readableBytes() < 8) {\n          return;\n        }\n        final int version=in.readUnsignedByte();\n        if (version != SocksVersion.SOCKS4a.byteValue()) {\n          throw new DecoderException(\"unsupported protocol version: \" + version);\n        }\n        type=Socks4CommandType.valueOf(in.readByte());\n        dstPort=in.readUnsignedShort();\n        dstAddr=NetUtil.intToIpAddress(in.readInt());\n        state=State.READ_USERID;\n      }\ncase READ_USERID:{\n      String readString(\"userid\",in)=readString(\"userreadString(\"userid\",in)\",in);\n      if (readString(\"userid\",in) == null) {\n        return;\n      }\n      userId=readString(\"userid\",in);\n      state=State.READ_DOMAIN;\n    }\ncase READ_DOMAIN:{\n    if (!\"0.0.0.0\".equals(dstAddr) && dstAddr.startsWith(\"0.0.0.\")) {\n      String addr=readString(\"dstAddr\",in);\n      if (addr == null) {\n        return;\n      }\n      dstAddr=addr;\n    }\n    ctx.fireChannelRead(new DefaultSocks4CommandRequest(type,dstAddr,dstPort,userId));\n    state=State.SUCCESS;\n  }\ncase SUCCESS:{\n  int readableBytes=actualReadableBytes();\n  if (readableBytes > 0) {\n    ctx.fireChannelRead(in.readRetainedSlice(readableBytes));\n  }\n  break;\n}\ncase FAILURE:{\nin.skipBytes(actualReadableBytes());\nbreak;\n}\n}\n}\n catch (Exception e) {\nfail(ctx,e);\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 212,
      "astHeight" : 12
    } ],
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 75,
    "startColumnNumber" : 20,
    "endLineNumber" : 75,
    "endColumnNumber" : 43
  }, {
    "charLength" : 23,
    "startLineNumber" : 78,
    "startColumnNumber" : 25,
    "endLineNumber" : 78,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}