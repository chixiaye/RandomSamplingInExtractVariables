{
  "id" : 10,
  "expression" : "curveData.getVertex()",
  "projectName" : "airbnb@lottie-android",
  "commitID" : "83955b7842feda5183511acc0928b6f2652bbe53",
  "filePath" : "lottie/src/main/java/com/airbnb/lottie/MiscUtils.java",
  "occurrences" : 5,
  "expressionList" : [ {
    "nodeContext" : "curveData.getVertex()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 22,
      "startColumnNumber" : 21,
      "endLineNumber" : 22,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 22,
        "startColumnNumber" : 10,
        "endLineNumber" : 22,
        "endColumnNumber" : 43
      },
      "nodeContext" : "cp2.equals(curveData.getVertex())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 22,
        "startColumnNumber" : 6,
        "endLineNumber" : 31,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (cp2.equals(curveData.getVertex())) {\n  outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x + 0.01f,curveData.getVertex().y + 0.01f);\n}\n else {\n  outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x,curveData.getVertex().y);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 464,
        "startLineNumber" : 16,
        "startColumnNumber" : 59,
        "endLineNumber" : 33,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CubicCurveData curveData=shapeData.getCurves().get(i);\n  PointF cp1=curveData.getControlPoint1();\n  PointF cp2=curveData.getControlPoint2();\n  PointF curveData.getVertex()=curveData.getVertex();\n  if (cp2.equals(curveData.getVertex())) {\n    outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x + 0.01f,curveData.getVertex().y + 0.01f);\n  }\n else {\n    outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x,curveData.getVertex().y);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 517,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < shapeData.getCurves().size(); i++) {\n  CubicCurveData curveData=shapeData.getCurves().get(i);\n  PointF cp1=curveData.getControlPoint1();\n  PointF cp2=curveData.getControlPoint2();\n  PointF curveData.getVertex()=curveData.getVertex();\n  if (cp2.equals(curveData.getVertex())) {\n    outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x + 0.01f,curveData.getVertex().y + 0.01f);\n  }\n else {\n    outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x,curveData.getVertex().y);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 108,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 717,
        "startLineNumber" : 12,
        "startColumnNumber" : 65,
        "endLineNumber" : 37,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  outPath.reset();\n  PointF initialPoint=shapeData.getInitialPoint();\n  outPath.moveTo(initialPoint.x,initialPoint.y);\n  for (int i=0; i < shapeData.getCurves().size(); i++) {\n    CubicCurveData curveData=shapeData.getCurves().get(i);\n    PointF cp1=curveData.getControlPoint1();\n    PointF cp2=curveData.getControlPoint2();\n    PointF curveData.getVertex()=curveData.getVertex();\n    if (cp2.equals(curveData.getVertex())) {\n      outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x + 0.01f,curveData.getVertex().y + 0.01f);\n    }\n else {\n      outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x,curveData.getVertex().y);\n    }\n  }\n  if (shapeData.isClosed()) {\n    outPath.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 140,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 778,
        "startLineNumber" : 12,
        "startColumnNumber" : 2,
        "endLineNumber" : 37,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static void getPathFromData(ShapeData shapeData,Path outPath){\n  outPath.reset();\n  PointF initialPoint=shapeData.getInitialPoint();\n  outPath.moveTo(initialPoint.x,initialPoint.y);\n  for (int i=0; i < shapeData.getCurves().size(); i++) {\n    CubicCurveData curveData=shapeData.getCurves().get(i);\n    PointF cp1=curveData.getControlPoint1();\n    PointF cp2=curveData.getControlPoint2();\n    PointF curveData.getVertex()=curveData.getVertex();\n    if (cp2.equals(curveData.getVertex())) {\n      outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x + 0.01f,curveData.getVertex().y + 0.01f);\n    }\n else {\n      outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x,curveData.getVertex().y);\n    }\n  }\n  if (shapeData.isClosed()) {\n    outPath.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 11
    } ],
    "tokenLength" : 2,
    "type" : "com.airbnb.lottie.PointF"
  }, {
    "nodeContext" : "curveData.getVertex()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 28,
      "startColumnNumber" : 52,
      "endLineNumber" : 28,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 28,
        "startColumnNumber" : 52,
        "endLineNumber" : 28,
        "endColumnNumber" : 75
      },
      "nodeContext" : "curveData.getVertex().x",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 28,
        "startColumnNumber" : 52,
        "endLineNumber" : 28,
        "endColumnNumber" : 83
      },
      "nodeContext" : "curveData.getVertex().x + 0.01f",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 112
      },
      "nodeContext" : "outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x + 0.01f,curveData.getVertex().y + 0.01f)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 27,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 114
      },
      "nodeContext" : "outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x + 0.01f,curveData.getVertex().y + 0.01f);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 22,
        "startColumnNumber" : 30,
        "endLineNumber" : 29,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x + 0.01f,curveData.getVertex().y + 0.01f);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 22,
        "startColumnNumber" : 6,
        "endLineNumber" : 31,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (cp2.equals(curveData.getVertex())) {\n  outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x + 0.01f,curveData.getVertex().y + 0.01f);\n}\n else {\n  outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x,curveData.getVertex().y);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 464,
        "startLineNumber" : 16,
        "startColumnNumber" : 59,
        "endLineNumber" : 33,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CubicCurveData curveData=shapeData.getCurves().get(i);\n  PointF cp1=curveData.getControlPoint1();\n  PointF cp2=curveData.getControlPoint2();\n  PointF curveData.getVertex()=curveData.getVertex();\n  if (cp2.equals(curveData.getVertex())) {\n    outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x + 0.01f,curveData.getVertex().y + 0.01f);\n  }\n else {\n    outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x,curveData.getVertex().y);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 517,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < shapeData.getCurves().size(); i++) {\n  CubicCurveData curveData=shapeData.getCurves().get(i);\n  PointF cp1=curveData.getControlPoint1();\n  PointF cp2=curveData.getControlPoint2();\n  PointF curveData.getVertex()=curveData.getVertex();\n  if (cp2.equals(curveData.getVertex())) {\n    outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x + 0.01f,curveData.getVertex().y + 0.01f);\n  }\n else {\n    outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x,curveData.getVertex().y);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 108,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 717,
        "startLineNumber" : 12,
        "startColumnNumber" : 65,
        "endLineNumber" : 37,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  outPath.reset();\n  PointF initialPoint=shapeData.getInitialPoint();\n  outPath.moveTo(initialPoint.x,initialPoint.y);\n  for (int i=0; i < shapeData.getCurves().size(); i++) {\n    CubicCurveData curveData=shapeData.getCurves().get(i);\n    PointF cp1=curveData.getControlPoint1();\n    PointF cp2=curveData.getControlPoint2();\n    PointF curveData.getVertex()=curveData.getVertex();\n    if (cp2.equals(curveData.getVertex())) {\n      outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x + 0.01f,curveData.getVertex().y + 0.01f);\n    }\n else {\n      outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x,curveData.getVertex().y);\n    }\n  }\n  if (shapeData.isClosed()) {\n    outPath.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 140,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 778,
        "startLineNumber" : 12,
        "startColumnNumber" : 2,
        "endLineNumber" : 37,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static void getPathFromData(ShapeData shapeData,Path outPath){\n  outPath.reset();\n  PointF initialPoint=shapeData.getInitialPoint();\n  outPath.moveTo(initialPoint.x,initialPoint.y);\n  for (int i=0; i < shapeData.getCurves().size(); i++) {\n    CubicCurveData curveData=shapeData.getCurves().get(i);\n    PointF cp1=curveData.getControlPoint1();\n    PointF cp2=curveData.getControlPoint2();\n    PointF curveData.getVertex()=curveData.getVertex();\n    if (cp2.equals(curveData.getVertex())) {\n      outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x + 0.01f,curveData.getVertex().y + 0.01f);\n    }\n else {\n      outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x,curveData.getVertex().y);\n    }\n  }\n  if (shapeData.isClosed()) {\n    outPath.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 12
    } ],
    "tokenLength" : 2,
    "type" : null
  }, {
    "nodeContext" : "curveData.getVertex()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 28,
      "startColumnNumber" : 70,
      "endLineNumber" : 28,
      "endColumnNumber" : 91
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 28,
        "startColumnNumber" : 70,
        "endLineNumber" : 28,
        "endColumnNumber" : 93
      },
      "nodeContext" : "curveData.getVertex().y",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 28,
        "startColumnNumber" : 70,
        "endLineNumber" : 28,
        "endColumnNumber" : 101
      },
      "nodeContext" : "curveData.getVertex().y + 0.01f",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 112
      },
      "nodeContext" : "outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x + 0.01f,curveData.getVertex().y + 0.01f)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 27,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 114
      },
      "nodeContext" : "outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x + 0.01f,curveData.getVertex().y + 0.01f);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 22,
        "startColumnNumber" : 30,
        "endLineNumber" : 29,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x + 0.01f,curveData.getVertex().y + 0.01f);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 22,
        "startColumnNumber" : 6,
        "endLineNumber" : 31,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (cp2.equals(curveData.getVertex())) {\n  outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x + 0.01f,curveData.getVertex().y + 0.01f);\n}\n else {\n  outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x,curveData.getVertex().y);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 464,
        "startLineNumber" : 16,
        "startColumnNumber" : 59,
        "endLineNumber" : 33,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CubicCurveData curveData=shapeData.getCurves().get(i);\n  PointF cp1=curveData.getControlPoint1();\n  PointF cp2=curveData.getControlPoint2();\n  PointF curveData.getVertex()=curveData.getVertex();\n  if (cp2.equals(curveData.getVertex())) {\n    outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x + 0.01f,curveData.getVertex().y + 0.01f);\n  }\n else {\n    outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x,curveData.getVertex().y);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 517,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < shapeData.getCurves().size(); i++) {\n  CubicCurveData curveData=shapeData.getCurves().get(i);\n  PointF cp1=curveData.getControlPoint1();\n  PointF cp2=curveData.getControlPoint2();\n  PointF curveData.getVertex()=curveData.getVertex();\n  if (cp2.equals(curveData.getVertex())) {\n    outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x + 0.01f,curveData.getVertex().y + 0.01f);\n  }\n else {\n    outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x,curveData.getVertex().y);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 108,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 717,
        "startLineNumber" : 12,
        "startColumnNumber" : 65,
        "endLineNumber" : 37,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  outPath.reset();\n  PointF initialPoint=shapeData.getInitialPoint();\n  outPath.moveTo(initialPoint.x,initialPoint.y);\n  for (int i=0; i < shapeData.getCurves().size(); i++) {\n    CubicCurveData curveData=shapeData.getCurves().get(i);\n    PointF cp1=curveData.getControlPoint1();\n    PointF cp2=curveData.getControlPoint2();\n    PointF curveData.getVertex()=curveData.getVertex();\n    if (cp2.equals(curveData.getVertex())) {\n      outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x + 0.01f,curveData.getVertex().y + 0.01f);\n    }\n else {\n      outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x,curveData.getVertex().y);\n    }\n  }\n  if (shapeData.isClosed()) {\n    outPath.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 140,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 778,
        "startLineNumber" : 12,
        "startColumnNumber" : 2,
        "endLineNumber" : 37,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static void getPathFromData(ShapeData shapeData,Path outPath){\n  outPath.reset();\n  PointF initialPoint=shapeData.getInitialPoint();\n  outPath.moveTo(initialPoint.x,initialPoint.y);\n  for (int i=0; i < shapeData.getCurves().size(); i++) {\n    CubicCurveData curveData=shapeData.getCurves().get(i);\n    PointF cp1=curveData.getControlPoint1();\n    PointF cp2=curveData.getControlPoint2();\n    PointF curveData.getVertex()=curveData.getVertex();\n    if (cp2.equals(curveData.getVertex())) {\n      outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x + 0.01f,curveData.getVertex().y + 0.01f);\n    }\n else {\n      outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x,curveData.getVertex().y);\n    }\n  }\n  if (shapeData.isClosed()) {\n    outPath.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 12
    } ],
    "tokenLength" : 2,
    "type" : null
  }, {
    "nodeContext" : "curveData.getVertex()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 30,
      "startColumnNumber" : 52,
      "endLineNumber" : 30,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 30,
        "startColumnNumber" : 52,
        "endLineNumber" : 30,
        "endColumnNumber" : 75
      },
      "nodeContext" : "curveData.getVertex().x",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 96
      },
      "nodeContext" : "outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x,curveData.getVertex().y)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 98
      },
      "nodeContext" : "outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x,curveData.getVertex().y);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 24,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 29,
        "startColumnNumber" : 13,
        "endLineNumber" : 31,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x,curveData.getVertex().y);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 22,
        "startColumnNumber" : 6,
        "endLineNumber" : 31,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (cp2.equals(curveData.getVertex())) {\n  outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x + 0.01f,curveData.getVertex().y + 0.01f);\n}\n else {\n  outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x,curveData.getVertex().y);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 464,
        "startLineNumber" : 16,
        "startColumnNumber" : 59,
        "endLineNumber" : 33,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CubicCurveData curveData=shapeData.getCurves().get(i);\n  PointF cp1=curveData.getControlPoint1();\n  PointF cp2=curveData.getControlPoint2();\n  PointF curveData.getVertex()=curveData.getVertex();\n  if (cp2.equals(curveData.getVertex())) {\n    outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x + 0.01f,curveData.getVertex().y + 0.01f);\n  }\n else {\n    outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x,curveData.getVertex().y);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 517,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < shapeData.getCurves().size(); i++) {\n  CubicCurveData curveData=shapeData.getCurves().get(i);\n  PointF cp1=curveData.getControlPoint1();\n  PointF cp2=curveData.getControlPoint2();\n  PointF curveData.getVertex()=curveData.getVertex();\n  if (cp2.equals(curveData.getVertex())) {\n    outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x + 0.01f,curveData.getVertex().y + 0.01f);\n  }\n else {\n    outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x,curveData.getVertex().y);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 108,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 717,
        "startLineNumber" : 12,
        "startColumnNumber" : 65,
        "endLineNumber" : 37,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  outPath.reset();\n  PointF initialPoint=shapeData.getInitialPoint();\n  outPath.moveTo(initialPoint.x,initialPoint.y);\n  for (int i=0; i < shapeData.getCurves().size(); i++) {\n    CubicCurveData curveData=shapeData.getCurves().get(i);\n    PointF cp1=curveData.getControlPoint1();\n    PointF cp2=curveData.getControlPoint2();\n    PointF curveData.getVertex()=curveData.getVertex();\n    if (cp2.equals(curveData.getVertex())) {\n      outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x + 0.01f,curveData.getVertex().y + 0.01f);\n    }\n else {\n      outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x,curveData.getVertex().y);\n    }\n  }\n  if (shapeData.isClosed()) {\n    outPath.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 140,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 778,
        "startLineNumber" : 12,
        "startColumnNumber" : 2,
        "endLineNumber" : 37,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static void getPathFromData(ShapeData shapeData,Path outPath){\n  outPath.reset();\n  PointF initialPoint=shapeData.getInitialPoint();\n  outPath.moveTo(initialPoint.x,initialPoint.y);\n  for (int i=0; i < shapeData.getCurves().size(); i++) {\n    CubicCurveData curveData=shapeData.getCurves().get(i);\n    PointF cp1=curveData.getControlPoint1();\n    PointF cp2=curveData.getControlPoint2();\n    PointF curveData.getVertex()=curveData.getVertex();\n    if (cp2.equals(curveData.getVertex())) {\n      outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x + 0.01f,curveData.getVertex().y + 0.01f);\n    }\n else {\n      outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x,curveData.getVertex().y);\n    }\n  }\n  if (shapeData.isClosed()) {\n    outPath.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 11
    } ],
    "tokenLength" : 2,
    "type" : null
  }, {
    "nodeContext" : "curveData.getVertex()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 30,
      "startColumnNumber" : 62,
      "endLineNumber" : 30,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 30,
        "startColumnNumber" : 62,
        "endLineNumber" : 30,
        "endColumnNumber" : 85
      },
      "nodeContext" : "curveData.getVertex().y",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 96
      },
      "nodeContext" : "outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x,curveData.getVertex().y)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 98
      },
      "nodeContext" : "outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x,curveData.getVertex().y);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 24,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 29,
        "startColumnNumber" : 13,
        "endLineNumber" : 31,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x,curveData.getVertex().y);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 22,
        "startColumnNumber" : 6,
        "endLineNumber" : 31,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (cp2.equals(curveData.getVertex())) {\n  outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x + 0.01f,curveData.getVertex().y + 0.01f);\n}\n else {\n  outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x,curveData.getVertex().y);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 464,
        "startLineNumber" : 16,
        "startColumnNumber" : 59,
        "endLineNumber" : 33,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CubicCurveData curveData=shapeData.getCurves().get(i);\n  PointF cp1=curveData.getControlPoint1();\n  PointF cp2=curveData.getControlPoint2();\n  PointF curveData.getVertex()=curveData.getVertex();\n  if (cp2.equals(curveData.getVertex())) {\n    outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x + 0.01f,curveData.getVertex().y + 0.01f);\n  }\n else {\n    outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x,curveData.getVertex().y);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 517,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < shapeData.getCurves().size(); i++) {\n  CubicCurveData curveData=shapeData.getCurves().get(i);\n  PointF cp1=curveData.getControlPoint1();\n  PointF cp2=curveData.getControlPoint2();\n  PointF curveData.getVertex()=curveData.getVertex();\n  if (cp2.equals(curveData.getVertex())) {\n    outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x + 0.01f,curveData.getVertex().y + 0.01f);\n  }\n else {\n    outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x,curveData.getVertex().y);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 108,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 717,
        "startLineNumber" : 12,
        "startColumnNumber" : 65,
        "endLineNumber" : 37,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  outPath.reset();\n  PointF initialPoint=shapeData.getInitialPoint();\n  outPath.moveTo(initialPoint.x,initialPoint.y);\n  for (int i=0; i < shapeData.getCurves().size(); i++) {\n    CubicCurveData curveData=shapeData.getCurves().get(i);\n    PointF cp1=curveData.getControlPoint1();\n    PointF cp2=curveData.getControlPoint2();\n    PointF curveData.getVertex()=curveData.getVertex();\n    if (cp2.equals(curveData.getVertex())) {\n      outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x + 0.01f,curveData.getVertex().y + 0.01f);\n    }\n else {\n      outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x,curveData.getVertex().y);\n    }\n  }\n  if (shapeData.isClosed()) {\n    outPath.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 140,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 778,
        "startLineNumber" : 12,
        "startColumnNumber" : 2,
        "endLineNumber" : 37,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static void getPathFromData(ShapeData shapeData,Path outPath){\n  outPath.reset();\n  PointF initialPoint=shapeData.getInitialPoint();\n  outPath.moveTo(initialPoint.x,initialPoint.y);\n  for (int i=0; i < shapeData.getCurves().size(); i++) {\n    CubicCurveData curveData=shapeData.getCurves().get(i);\n    PointF cp1=curveData.getControlPoint1();\n    PointF cp2=curveData.getControlPoint2();\n    PointF curveData.getVertex()=curveData.getVertex();\n    if (cp2.equals(curveData.getVertex())) {\n      outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x + 0.01f,curveData.getVertex().y + 0.01f);\n    }\n else {\n      outPath.cubicTo(cp1.x,cp1.y,cp2.x,cp2.y,curveData.getVertex().x,curveData.getVertex().y);\n    }\n  }\n  if (shapeData.isClosed()) {\n    outPath.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 11
    } ],
    "tokenLength" : 2,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 22,
    "startColumnNumber" : 21,
    "endLineNumber" : 22,
    "endColumnNumber" : 42
  }, {
    "charLength" : 21,
    "startLineNumber" : 28,
    "startColumnNumber" : 52,
    "endLineNumber" : 28,
    "endColumnNumber" : 73
  }, {
    "charLength" : 21,
    "startLineNumber" : 28,
    "startColumnNumber" : 70,
    "endLineNumber" : 28,
    "endColumnNumber" : 91
  }, {
    "charLength" : 21,
    "startLineNumber" : 30,
    "startColumnNumber" : 52,
    "endLineNumber" : 30,
    "endColumnNumber" : 73
  }, {
    "charLength" : 21,
    "startLineNumber" : 30,
    "startColumnNumber" : 62,
    "endLineNumber" : 30,
    "endColumnNumber" : 83
  } ],
  "layoutRelationDataList" : [ ]
}