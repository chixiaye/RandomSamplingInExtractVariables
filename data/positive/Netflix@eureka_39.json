{
  "id" : 39,
  "expression" : "\"Discovery-PeerNodeClient-\" + hostname",
  "projectName" : "Netflix@eureka",
  "commitID" : "22bc1adac3dcb2b896e853ba0febf2a649755e57",
  "filePath" : "eureka-core/src/main/java/com/netflix/eureka/cluster/PeerEurekaNode.java",
  "occurrences" : 1,
  "expressionList" : [ {
    "nodeContext" : "\"Discovery-PeerNodeClient-\" + hostname",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 38,
      "startLineNumber" : 110,
      "startColumnNumber" : 73,
      "endLineNumber" : 110,
      "endColumnNumber" : 111
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 278,
        "startLineNumber" : 110,
        "startColumnNumber" : 35,
        "endLineNumber" : 115,
        "endColumnNumber" : 77
      },
      "nodeContext" : "EurekaJerseyClient.createJerseyClient(\"Discovery-PeerNodeClient-\" + hostname,config.getPeerNodeConnectTimeoutMs(),config.getPeerNodeReadTimeoutMs(),config.getPeerNodeTotalConnections(),config.getPeerNodeTotalConnectionsPerHost(),config.getPeerNodeConnectionIdleTimeoutSeconds())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 291,
        "startLineNumber" : 110,
        "startColumnNumber" : 20,
        "endLineNumber" : 115,
        "endColumnNumber" : 77
      },
      "nodeContext" : "jerseyClient=EurekaJerseyClient.createJerseyClient(\"Discovery-PeerNodeClient-\" + hostname,config.getPeerNodeConnectTimeoutMs(),config.getPeerNodeReadTimeoutMs(),config.getPeerNodeTotalConnections(),config.getPeerNodeTotalConnectionsPerHost(),config.getPeerNodeConnectionIdleTimeoutSeconds())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 23,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 293,
        "startLineNumber" : 110,
        "startColumnNumber" : 20,
        "endLineNumber" : 115,
        "endColumnNumber" : 78
      },
      "nodeContext" : "jerseyClient=EurekaJerseyClient.createJerseyClient(\"Discovery-PeerNodeClient-\" + hostname,config.getPeerNodeConnectTimeoutMs(),config.getPeerNodeReadTimeoutMs(),config.getPeerNodeTotalConnections(),config.getPeerNodeTotalConnectionsPerHost(),config.getPeerNodeConnectionIdleTimeoutSeconds());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 24,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 575,
        "startLineNumber" : 102,
        "startColumnNumber" : 20,
        "endLineNumber" : 117,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  String hostname;\n  try {\n    hostname=new URL(serviceUrl).getHost();\n  }\n catch (  MalformedURLException e) {\n    hostname=serviceUrl;\n  }\n  String \"Discovery-PeerNodeClient-\" + hostname=\"Discovery-PeerNodeClient-\" + hostname;\n  jerseyClient=EurekaJerseyClient.createJerseyClient(\"Discovery-PeerNodeClient-\" + hostname,config.getPeerNodeConnectTimeoutMs(),config.getPeerNodeReadTimeoutMs(),config.getPeerNodeTotalConnections(),config.getPeerNodeTotalConnectionsPerHost(),config.getPeerNodeConnectionIdleTimeoutSeconds());\n  jerseyApacheClient=jerseyClient.getClient();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 677,
        "startLineNumber" : 102,
        "startColumnNumber" : 16,
        "endLineNumber" : 120,
        "endColumnNumber" : 17
      },
      "nodeContext" : "try {\n  String hostname;\n  try {\n    hostname=new URL(serviceUrl).getHost();\n  }\n catch (  MalformedURLException e) {\n    hostname=serviceUrl;\n  }\n  String \"Discovery-PeerNodeClient-\" + hostname=\"Discovery-PeerNodeClient-\" + hostname;\n  jerseyClient=EurekaJerseyClient.createJerseyClient(\"Discovery-PeerNodeClient-\" + hostname,config.getPeerNodeConnectTimeoutMs(),config.getPeerNodeReadTimeoutMs(),config.getPeerNodeTotalConnections(),config.getPeerNodeTotalConnectionsPerHost(),config.getPeerNodeConnectionIdleTimeoutSeconds());\n  jerseyApacheClient=jerseyClient.getClient();\n}\n catch (Throwable e) {\n  throw new RuntimeException(\"Cannot Create new Replica Node :\" + name);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 79,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 711,
        "startLineNumber" : 101,
        "startColumnNumber" : 44,
        "endLineNumber" : 121,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  try {\n    String hostname;\n    try {\n      hostname=new URL(serviceUrl).getHost();\n    }\n catch (    MalformedURLException e) {\n      hostname=serviceUrl;\n    }\n    String \"Discovery-PeerNodeClient-\" + hostname=\"Discovery-PeerNodeClient-\" + hostname;\n    jerseyClient=EurekaJerseyClient.createJerseyClient(\"Discovery-PeerNodeClient-\" + hostname,config.getPeerNodeConnectTimeoutMs(),config.getPeerNodeReadTimeoutMs(),config.getPeerNodeTotalConnections(),config.getPeerNodeTotalConnectionsPerHost(),config.getPeerNodeConnectionIdleTimeoutSeconds());\n    jerseyApacheClient=jerseyClient.getClient();\n  }\n catch (  Throwable e) {\n    throw new RuntimeException(\"Cannot Create new Replica Node :\" + name);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 743,
        "startLineNumber" : 101,
        "startColumnNumber" : 12,
        "endLineNumber" : 121,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (jerseyApacheClient == null) {\n  try {\n    String hostname;\n    try {\n      hostname=new URL(serviceUrl).getHost();\n    }\n catch (    MalformedURLException e) {\n      hostname=serviceUrl;\n    }\n    String \"Discovery-PeerNodeClient-\" + hostname=\"Discovery-PeerNodeClient-\" + hostname;\n    jerseyClient=EurekaJerseyClient.createJerseyClient(\"Discovery-PeerNodeClient-\" + hostname,config.getPeerNodeConnectTimeoutMs(),config.getPeerNodeReadTimeoutMs(),config.getPeerNodeTotalConnections(),config.getPeerNodeTotalConnectionsPerHost(),config.getPeerNodeConnectionIdleTimeoutSeconds());\n    jerseyApacheClient=jerseyClient.getClient();\n  }\n catch (  Throwable e) {\n    throw new RuntimeException(\"Cannot Create new Replica Node :\" + name);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 84,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 781,
        "startLineNumber" : 99,
        "startColumnNumber" : 39,
        "endLineNumber" : 122,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (jerseyApacheClient == null) {\n    try {\n      String hostname;\n      try {\n        hostname=new URL(serviceUrl).getHost();\n      }\n catch (      MalformedURLException e) {\n        hostname=serviceUrl;\n      }\n      String \"Discovery-PeerNodeClient-\" + hostname=\"Discovery-PeerNodeClient-\" + hostname;\n      jerseyClient=EurekaJerseyClient.createJerseyClient(\"Discovery-PeerNodeClient-\" + hostname,config.getPeerNodeConnectTimeoutMs(),config.getPeerNodeReadTimeoutMs(),config.getPeerNodeTotalConnections(),config.getPeerNodeTotalConnectionsPerHost(),config.getPeerNodeConnectionIdleTimeoutSeconds());\n      jerseyApacheClient=jerseyClient.getClient();\n    }\n catch (    Throwable e) {\n      throw new RuntimeException(\"Cannot Create new Replica Node :\" + name);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 812,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 9
      },
      "nodeContext" : "synchronized (this.serviceUrl) {\n  if (jerseyApacheClient == null) {\n    try {\n      String hostname;\n      try {\n        hostname=new URL(serviceUrl).getHost();\n      }\n catch (      MalformedURLException e) {\n        hostname=serviceUrl;\n      }\n      String \"Discovery-PeerNodeClient-\" + hostname=\"Discovery-PeerNodeClient-\" + hostname;\n      jerseyClient=EurekaJerseyClient.createJerseyClient(\"Discovery-PeerNodeClient-\" + hostname,config.getPeerNodeConnectTimeoutMs(),config.getPeerNodeReadTimeoutMs(),config.getPeerNodeTotalConnections(),config.getPeerNodeTotalConnectionsPerHost(),config.getPeerNodeConnectionIdleTimeoutSeconds());\n      jerseyApacheClient=jerseyClient.getClient();\n    }\n catch (    Throwable e) {\n      throw new RuntimeException(\"Cannot Create new Replica Node :\" + name);\n    }\n  }\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 89,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1558,
        "startLineNumber" : 90,
        "startColumnNumber" : 45,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.serviceUrl=serviceUrl.intern();\n  this.name=getClass().getSimpleName() + \": \" + serviceUrl+ \"apps/: \";\n  this.heartBeatBatcher=getBatcher(serviceUrl,Action.Heartbeat.name());\n  this.statusBatcher=getBatcher(serviceUrl,Action.StatusUpdate.name());\n  this.asgStatusBatcher=getBatcher(serviceUrl,\"ASG_\" + Action.StatusUpdate.name());\n  this.registerBatcher=getBatcher(serviceUrl,Action.Register.name());\n  this.cancelBatcher=getBatcher(serviceUrl,Action.Cancel.name());\nsynchronized (this.serviceUrl) {\n    if (jerseyApacheClient == null) {\n      try {\n        String hostname;\n        try {\n          hostname=new URL(serviceUrl).getHost();\n        }\n catch (        MalformedURLException e) {\n          hostname=serviceUrl;\n        }\n        String \"Discovery-PeerNodeClient-\" + hostname=\"Discovery-PeerNodeClient-\" + hostname;\n        jerseyClient=EurekaJerseyClient.createJerseyClient(\"Discovery-PeerNodeClient-\" + hostname,config.getPeerNodeConnectTimeoutMs(),config.getPeerNodeReadTimeoutMs(),config.getPeerNodeTotalConnections(),config.getPeerNodeTotalConnectionsPerHost(),config.getPeerNodeConnectionIdleTimeoutSeconds());\n        jerseyApacheClient=jerseyClient.getClient();\n      }\n catch (      Throwable e) {\n        throw new RuntimeException(\"Cannot Create new Replica Node :\" + name);\n      }\n    }\n  }\n  try {\n    String serviceUrlHost=new URL(serviceUrl).getHost();\n    Monitors.registerObject(serviceUrlHost,this);\n  }\n catch (  Throwable e) {\n    logger.error(\"Cannot register monitors for Peer eureka node :\" + serviceUrl,e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 211,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1598,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public PeerEurekaNode(String serviceUrl){\n  this.serviceUrl=serviceUrl.intern();\n  this.name=getClass().getSimpleName() + \": \" + serviceUrl+ \"apps/: \";\n  this.heartBeatBatcher=getBatcher(serviceUrl,Action.Heartbeat.name());\n  this.statusBatcher=getBatcher(serviceUrl,Action.StatusUpdate.name());\n  this.asgStatusBatcher=getBatcher(serviceUrl,\"ASG_\" + Action.StatusUpdate.name());\n  this.registerBatcher=getBatcher(serviceUrl,Action.Register.name());\n  this.cancelBatcher=getBatcher(serviceUrl,Action.Cancel.name());\nsynchronized (this.serviceUrl) {\n    if (jerseyApacheClient == null) {\n      try {\n        String hostname;\n        try {\n          hostname=new URL(serviceUrl).getHost();\n        }\n catch (        MalformedURLException e) {\n          hostname=serviceUrl;\n        }\n        String \"Discovery-PeerNodeClient-\" + hostname=\"Discovery-PeerNodeClient-\" + hostname;\n        jerseyClient=EurekaJerseyClient.createJerseyClient(\"Discovery-PeerNodeClient-\" + hostname,config.getPeerNodeConnectTimeoutMs(),config.getPeerNodeReadTimeoutMs(),config.getPeerNodeTotalConnections(),config.getPeerNodeTotalConnectionsPerHost(),config.getPeerNodeConnectionIdleTimeoutSeconds());\n        jerseyApacheClient=jerseyClient.getClient();\n      }\n catch (      Throwable e) {\n        throw new RuntimeException(\"Cannot Create new Replica Node :\" + name);\n      }\n    }\n  }\n  try {\n    String serviceUrlHost=new URL(serviceUrl).getHost();\n    Monitors.registerObject(serviceUrlHost,this);\n  }\n catch (  Throwable e) {\n    logger.error(\"Cannot register monitors for Peer eureka node :\" + serviceUrl,e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 218,
      "astHeight" : 16
    } ],
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 38,
    "startLineNumber" : 110,
    "startColumnNumber" : 73,
    "endLineNumber" : 110,
    "endColumnNumber" : 111
  } ],
  "layoutRelationDataList" : [ ]
}