{
  "id" : 32,
  "expression" : "cachedFile.getFileName().toString()",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "50ad775a54876e393d027d194603991aa0407876",
  "filePath" : "jib-core/src/main/java/com/google/cloud/tools/jib/builder/BuildTarballAndLoadDockerStep.java",
  "occurrences" : 2,
  "expressionList" : [ {
    "nodeContext" : "cachedFile.getFileName().toString()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 93,
      "startColumnNumber" : 73,
      "endLineNumber" : 93,
      "endColumnNumber" : 108
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 93,
        "startColumnNumber" : 32,
        "endLineNumber" : 93,
        "endColumnNumber" : 108
      },
      "nodeContext" : "new TarArchiveEntry(cachedFile.toFile(),cachedFile.getFileName().toString())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 93,
        "startColumnNumber" : 6,
        "endLineNumber" : 93,
        "endColumnNumber" : 109
      },
      "nodeContext" : "tarStreamBuilder.addEntry(new TarArchiveEntry(cachedFile.toFile(),cachedFile.getFileName().toString()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 93,
        "startColumnNumber" : 6,
        "endLineNumber" : 93,
        "endColumnNumber" : 111
      },
      "nodeContext" : "tarStreamBuilder.addEntry(new TarArchiveEntry(cachedFile.toFile(),cachedFile.getFileName().toString()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 320,
        "startLineNumber" : 89,
        "startColumnNumber" : 42,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Path cachedFile=((CachedLayer)layer).getContentFile();\n  String cachedFile.getFileName().toString()=cachedFile.getFileName().toString();\n  tarStreamBuilder.addEntry(new TarArchiveEntry(cachedFile.toFile(),cachedFile.getFileName().toString()));\n  manifestTemplate.addLayerFile(cachedFile.getFileName().toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (Layer layer : image.getLayers()) {\n  Path cachedFile=((CachedLayer)layer).getContentFile();\n  String cachedFile.getFileName().toString()=cachedFile.getFileName().toString();\n  tarStreamBuilder.addEntry(new TarArchiveEntry(cachedFile.toFile(),cachedFile.getFileName().toString()));\n  manifestTemplate.addLayerFile(cachedFile.getFileName().toString());\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 51,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1103,
        "startLineNumber" : 83,
        "startColumnNumber" : 99,
        "endLineNumber" : 112,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Image image=NonBlockingFutures.get(NonBlockingFutures.get(buildImageFutureFuture));\n  TarStreamBuilder tarStreamBuilder=new TarStreamBuilder();\n  DockerLoadManifestTemplate manifestTemplate=new DockerLoadManifestTemplate();\n  for (  Layer layer : image.getLayers()) {\n    Path cachedFile=((CachedLayer)layer).getContentFile();\n    String cachedFile.getFileName().toString()=cachedFile.getFileName().toString();\n    tarStreamBuilder.addEntry(new TarArchiveEntry(cachedFile.toFile(),cachedFile.getFileName().toString()));\n    manifestTemplate.addLayerFile(cachedFile.getFileName().toString());\n  }\n  Blob containerConfigurationBlob=new ImageToJsonTranslator(image).getContainerConfigurationBlob();\n  tarStreamBuilder.addEntry(Blobs.writeToString(containerConfigurationBlob),\"config.json\");\n  manifestTemplate.setRepoTags(buildConfiguration.getTargetImageReference().toStringWithTag());\n  tarStreamBuilder.addEntry(Blobs.writeToString(JsonTemplateMapper.toBlob(manifestTemplate)),\"manifest.json\");\n  new Command(\"docker\",\"load\").run(Blobs.writeToByteArray(tarStreamBuilder.toBlob()));\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1402,
        "startLineNumber" : 76,
        "startColumnNumber" : 2,
        "endLineNumber" : 112,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Depends on  {@code pullBaseImageLayerFuturesFuture.get()} and (@codebuildImageFutureFuture.get()}. <p>TODO: Refactor into testable components\n */\nprivate Void afterPushBaseImageLayerFuturesFuture() throws ExecutionException, InterruptedException, IOException, LayerPropertyNotFoundException {\n  Image image=NonBlockingFutures.get(NonBlockingFutures.get(buildImageFutureFuture));\n  TarStreamBuilder tarStreamBuilder=new TarStreamBuilder();\n  DockerLoadManifestTemplate manifestTemplate=new DockerLoadManifestTemplate();\n  for (  Layer layer : image.getLayers()) {\n    Path cachedFile=((CachedLayer)layer).getContentFile();\n    String cachedFile.getFileName().toString()=cachedFile.getFileName().toString();\n    tarStreamBuilder.addEntry(new TarArchiveEntry(cachedFile.toFile(),cachedFile.getFileName().toString()));\n    manifestTemplate.addLayerFile(cachedFile.getFileName().toString());\n  }\n  Blob containerConfigurationBlob=new ImageToJsonTranslator(image).getContainerConfigurationBlob();\n  tarStreamBuilder.addEntry(Blobs.writeToString(containerConfigurationBlob),\"config.json\");\n  manifestTemplate.setRepoTags(buildConfiguration.getTargetImageReference().toStringWithTag());\n  tarStreamBuilder.addEntry(Blobs.writeToString(JsonTemplateMapper.toBlob(manifestTemplate)),\"manifest.json\");\n  new Command(\"docker\",\"load\").run(Blobs.writeToByteArray(tarStreamBuilder.toBlob()));\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 11
    } ],
    "tokenLength" : 3,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "cachedFile.getFileName().toString()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 94,
      "startColumnNumber" : 36,
      "endLineNumber" : 94,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 94,
        "startColumnNumber" : 6,
        "endLineNumber" : 94,
        "endColumnNumber" : 72
      },
      "nodeContext" : "manifestTemplate.addLayerFile(cachedFile.getFileName().toString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 94,
        "startColumnNumber" : 6,
        "endLineNumber" : 94,
        "endColumnNumber" : 74
      },
      "nodeContext" : "manifestTemplate.addLayerFile(cachedFile.getFileName().toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 320,
        "startLineNumber" : 89,
        "startColumnNumber" : 42,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Path cachedFile=((CachedLayer)layer).getContentFile();\n  String cachedFile.getFileName().toString()=cachedFile.getFileName().toString();\n  tarStreamBuilder.addEntry(new TarArchiveEntry(cachedFile.toFile(),cachedFile.getFileName().toString()));\n  manifestTemplate.addLayerFile(cachedFile.getFileName().toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (Layer layer : image.getLayers()) {\n  Path cachedFile=((CachedLayer)layer).getContentFile();\n  String cachedFile.getFileName().toString()=cachedFile.getFileName().toString();\n  tarStreamBuilder.addEntry(new TarArchiveEntry(cachedFile.toFile(),cachedFile.getFileName().toString()));\n  manifestTemplate.addLayerFile(cachedFile.getFileName().toString());\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 51,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1103,
        "startLineNumber" : 83,
        "startColumnNumber" : 99,
        "endLineNumber" : 112,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Image image=NonBlockingFutures.get(NonBlockingFutures.get(buildImageFutureFuture));\n  TarStreamBuilder tarStreamBuilder=new TarStreamBuilder();\n  DockerLoadManifestTemplate manifestTemplate=new DockerLoadManifestTemplate();\n  for (  Layer layer : image.getLayers()) {\n    Path cachedFile=((CachedLayer)layer).getContentFile();\n    String cachedFile.getFileName().toString()=cachedFile.getFileName().toString();\n    tarStreamBuilder.addEntry(new TarArchiveEntry(cachedFile.toFile(),cachedFile.getFileName().toString()));\n    manifestTemplate.addLayerFile(cachedFile.getFileName().toString());\n  }\n  Blob containerConfigurationBlob=new ImageToJsonTranslator(image).getContainerConfigurationBlob();\n  tarStreamBuilder.addEntry(Blobs.writeToString(containerConfigurationBlob),\"config.json\");\n  manifestTemplate.setRepoTags(buildConfiguration.getTargetImageReference().toStringWithTag());\n  tarStreamBuilder.addEntry(Blobs.writeToString(JsonTemplateMapper.toBlob(manifestTemplate)),\"manifest.json\");\n  new Command(\"docker\",\"load\").run(Blobs.writeToByteArray(tarStreamBuilder.toBlob()));\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1402,
        "startLineNumber" : 76,
        "startColumnNumber" : 2,
        "endLineNumber" : 112,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Depends on  {@code pullBaseImageLayerFuturesFuture.get()} and (@codebuildImageFutureFuture.get()}. <p>TODO: Refactor into testable components\n */\nprivate Void afterPushBaseImageLayerFuturesFuture() throws ExecutionException, InterruptedException, IOException, LayerPropertyNotFoundException {\n  Image image=NonBlockingFutures.get(NonBlockingFutures.get(buildImageFutureFuture));\n  TarStreamBuilder tarStreamBuilder=new TarStreamBuilder();\n  DockerLoadManifestTemplate manifestTemplate=new DockerLoadManifestTemplate();\n  for (  Layer layer : image.getLayers()) {\n    Path cachedFile=((CachedLayer)layer).getContentFile();\n    String cachedFile.getFileName().toString()=cachedFile.getFileName().toString();\n    tarStreamBuilder.addEntry(new TarArchiveEntry(cachedFile.toFile(),cachedFile.getFileName().toString()));\n    manifestTemplate.addLayerFile(cachedFile.getFileName().toString());\n  }\n  Blob containerConfigurationBlob=new ImageToJsonTranslator(image).getContainerConfigurationBlob();\n  tarStreamBuilder.addEntry(Blobs.writeToString(containerConfigurationBlob),\"config.json\");\n  manifestTemplate.setRepoTags(buildConfiguration.getTargetImageReference().toStringWithTag());\n  tarStreamBuilder.addEntry(Blobs.writeToString(JsonTemplateMapper.toBlob(manifestTemplate)),\"manifest.json\");\n  new Command(\"docker\",\"load\").run(Blobs.writeToByteArray(tarStreamBuilder.toBlob()));\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 11
    } ],
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 93,
    "startColumnNumber" : 73,
    "endLineNumber" : 93,
    "endColumnNumber" : 108
  }, {
    "charLength" : 35,
    "startLineNumber" : 94,
    "startColumnNumber" : 36,
    "endLineNumber" : 94,
    "endColumnNumber" : 71
  } ],
  "layoutRelationDataList" : [ ]
}