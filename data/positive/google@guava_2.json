{
  "id" : 2,
  "expression" : "(RegularImmutableMap<K,V>)EMPTY",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "android/guava/src/com/google/common/collect/RegularImmutableMap.java",
  "occurrences" : 1,
  "expressionList" : [ {
    "nodeContext" : "(RegularImmutableMap<K,V>)EMPTY",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 105,
      "startColumnNumber" : 13,
      "endLineNumber" : 105,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 105,
        "startColumnNumber" : 6,
        "endLineNumber" : 105,
        "endColumnNumber" : 46
      },
      "nodeContext" : "return (RegularImmutableMap<K,V>)EMPTY;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 102,
        "startColumnNumber" : 16,
        "endLineNumber" : 106,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  @SuppressWarnings(\"unchecked\") RegularImmutableMap<K,V> (RegularImmutableMap<K,V>)EMPTY=(RegularImmutableMap<K,V>)EMPTY;\n  return (RegularImmutableMap<K,V>)EMPTY;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 385,
        "startLineNumber" : 102,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (n == 0) {\n  @SuppressWarnings(\"unchecked\") RegularImmutableMap<K,V> (RegularImmutableMap<K,V>)EMPTY=(RegularImmutableMap<K,V>)EMPTY;\n  return (RegularImmutableMap<K,V>)EMPTY;\n}\n else if (n == 1) {\n  checkEntryNotNull(requireNonNull(alternatingKeysAndValues[0]),requireNonNull(alternatingKeysAndValues[1]));\n  return new RegularImmutableMap<K,V>(null,alternatingKeysAndValues,1);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 67,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1222,
        "startLineNumber" : 101,
        "startColumnNumber" : 91,
        "endLineNumber" : 135,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (n == 0) {\n    @SuppressWarnings(\"unchecked\") RegularImmutableMap<K,V> (RegularImmutableMap<K,V>)EMPTY=(RegularImmutableMap<K,V>)EMPTY;\n    return (RegularImmutableMap<K,V>)EMPTY;\n  }\n else   if (n == 1) {\n    checkEntryNotNull(requireNonNull(alternatingKeysAndValues[0]),requireNonNull(alternatingKeysAndValues[1]));\n    return new RegularImmutableMap<K,V>(null,alternatingKeysAndValues,1);\n  }\n  checkPositionIndex(n,alternatingKeysAndValues.length >> 1);\n  int tableSize=ImmutableSet.chooseTableSize(n);\n  Object hashTablePlus=createHashTable(alternatingKeysAndValues,n,tableSize,0);\n  Object hashTable;\n  if (hashTablePlus instanceof Object[]) {\n    Object[] hashTableAndSizeAndDuplicate=(Object[])hashTablePlus;\n    Builder.DuplicateKey duplicateKey=(Builder.DuplicateKey)hashTableAndSizeAndDuplicate[2];\n    if (builder == null) {\n      throw duplicateKey.exception();\n    }\n    builder.duplicateKey=duplicateKey;\n    hashTable=hashTableAndSizeAndDuplicate[0];\n    n=(Integer)hashTableAndSizeAndDuplicate[1];\n    alternatingKeysAndValues=Arrays.copyOf(alternatingKeysAndValues,n * 2);\n  }\n else {\n    hashTable=hashTablePlus;\n  }\n  return new RegularImmutableMap<K,V>(hashTable,alternatingKeysAndValues,n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 194,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1347,
        "startLineNumber" : 100,
        "startColumnNumber" : 2,
        "endLineNumber" : 135,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static <K,V>RegularImmutableMap<K,V> create(int n,@Nullable Object[] alternatingKeysAndValues,@Nullable Builder<K,V> builder){\n  if (n == 0) {\n    @SuppressWarnings(\"unchecked\") RegularImmutableMap<K,V> (RegularImmutableMap<K,V>)EMPTY=(RegularImmutableMap<K,V>)EMPTY;\n    return (RegularImmutableMap<K,V>)EMPTY;\n  }\n else   if (n == 1) {\n    checkEntryNotNull(requireNonNull(alternatingKeysAndValues[0]),requireNonNull(alternatingKeysAndValues[1]));\n    return new RegularImmutableMap<K,V>(null,alternatingKeysAndValues,1);\n  }\n  checkPositionIndex(n,alternatingKeysAndValues.length >> 1);\n  int tableSize=ImmutableSet.chooseTableSize(n);\n  Object hashTablePlus=createHashTable(alternatingKeysAndValues,n,tableSize,0);\n  Object hashTable;\n  if (hashTablePlus instanceof Object[]) {\n    Object[] hashTableAndSizeAndDuplicate=(Object[])hashTablePlus;\n    Builder.DuplicateKey duplicateKey=(Builder.DuplicateKey)hashTableAndSizeAndDuplicate[2];\n    if (builder == null) {\n      throw duplicateKey.exception();\n    }\n    builder.duplicateKey=duplicateKey;\n    hashTable=hashTableAndSizeAndDuplicate[0];\n    n=(Integer)hashTableAndSizeAndDuplicate[1];\n    alternatingKeysAndValues=Arrays.copyOf(alternatingKeysAndValues,n * 2);\n  }\n else {\n    hashTable=hashTablePlus;\n  }\n  return new RegularImmutableMap<K,V>(hashTable,alternatingKeysAndValues,n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 230,
      "astHeight" : 10
    } ],
    "tokenLength" : 3,
    "type" : "com.google.common.collect.RegularImmutableMap<K,V>"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 105,
    "startColumnNumber" : 13,
    "endLineNumber" : 105,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}