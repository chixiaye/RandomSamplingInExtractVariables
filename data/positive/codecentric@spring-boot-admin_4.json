{
  "id" : 4,
  "expression" : "Application.create(\"AppName\").withHealthUrl(\"http://localhost:8080/health\").withManagementUrl(\"http://localhost:8080/mgmt\").withServiceUrl(\"http://localhost:8080\").build()",
  "projectName" : "codecentric@spring-boot-admin",
  "commitID" : "eb8b970912e957aafc8106a6b7165d0fc53840f4",
  "filePath" : "spring-boot-admin-starter-client/src/test/java/de/codecentric/boot/admin/registration/ApplicationRegistratorTest.java",
  "occurrences" : 1,
  "expressionList" : [ {
    "nodeContext" : "Application.create(\"AppName\").withHealthUrl(\"http://localhost:8080/health\").withManagementUrl(\"http://localhost:8080/mgmt\").withServiceUrl(\"http://localhost:8080\").build()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 171,
      "startLineNumber" : 84,
      "startColumnNumber" : 21,
      "endLineNumber" : 84,
      "endColumnNumber" : 192
    },
    "astNodeNumber" : 15,
    "astHeight" : 6,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 201
      },
      "nodeContext" : "new HttpEntity<>(Application.create(\"AppName\").withHealthUrl(\"http://localhost:8080/health\").withManagementUrl(\"http://localhost:8080/mgmt\").withServiceUrl(\"http://localhost:8080\").build(),headers)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 278,
        "startLineNumber" : 83,
        "startColumnNumber" : 2,
        "endLineNumber" : 84,
        "endColumnNumber" : 57
      },
      "nodeContext" : "verify(restTemplate).postForEntity(\"http://sba:8080/api/applications\",new HttpEntity<>(Application.create(\"AppName\").withHealthUrl(\"http://localhost:8080/health\").withManagementUrl(\"http://localhost:8080/mgmt\").withServiceUrl(\"http://localhost:8080\").build(),headers),Map.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 280,
        "startLineNumber" : 83,
        "startColumnNumber" : 2,
        "endLineNumber" : 84,
        "endColumnNumber" : 58
      },
      "nodeContext" : "verify(restTemplate).postForEntity(\"http://sba:8080/api/applications\",new HttpEntity<>(Application.create(\"AppName\").withHealthUrl(\"http://localhost:8080/health\").withManagementUrl(\"http://localhost:8080/mgmt\").withServiceUrl(\"http://localhost:8080\").build(),headers),Map.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 30,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 874,
        "startLineNumber" : 72,
        "startColumnNumber" : 35,
        "endLineNumber" : 85,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  when(restTemplate.postForEntity(isA(String.class),isA(HttpEntity.class),eq(Map.class))).thenReturn(new ResponseEntity<>(Collections.singletonMap(\"id\",\"-id-\"),HttpStatus.CREATED));\n  assertThat(registrator.register()).isTrue();\n  Application Application.create(\"AppName\").withHealthUrl(\"http://localhost:8080/health\").withManagementUrl(\"http://localhost:8080/mgmt\").withServiceUrl(\"http://localhost:8080\").build()=Application.create(\"AppName\").withHealthUrl(\"http://localhost:8080/health\").withManagementUrl(\"http://localhost:8080/mgmt\").withServiceUrl(\"http://localhost:8080\").build();\n  verify(restTemplate).postForEntity(\"http://sba:8080/api/applications\",new HttpEntity<>(Application.create(\"AppName\").withHealthUrl(\"http://localhost:8080/health\").withManagementUrl(\"http://localhost:8080/mgmt\").withServiceUrl(\"http://localhost:8080\").build(),headers),Map.class);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 943,
        "startLineNumber" : 70,
        "startColumnNumber" : 1,
        "endLineNumber" : 85,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@SuppressWarnings(\"rawtypes\") @Test public void register_successful(){\n  when(restTemplate.postForEntity(isA(String.class),isA(HttpEntity.class),eq(Map.class))).thenReturn(new ResponseEntity<>(Collections.singletonMap(\"id\",\"-id-\"),HttpStatus.CREATED));\n  assertThat(registrator.register()).isTrue();\n  Application Application.create(\"AppName\").withHealthUrl(\"http://localhost:8080/health\").withManagementUrl(\"http://localhost:8080/mgmt\").withServiceUrl(\"http://localhost:8080\").build()=Application.create(\"AppName\").withHealthUrl(\"http://localhost:8080/health\").withManagementUrl(\"http://localhost:8080/mgmt\").withServiceUrl(\"http://localhost:8080\").build();\n  verify(restTemplate).postForEntity(\"http://sba:8080/api/applications\",new HttpEntity<>(Application.create(\"AppName\").withHealthUrl(\"http://localhost:8080/health\").withManagementUrl(\"http://localhost:8080/mgmt\").withServiceUrl(\"http://localhost:8080\").build(),headers),Map.class);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 103,
      "astHeight" : 11
    } ],
    "tokenLength" : 16,
    "type" : "de.codecentric.boot.admin.client.registration.Application"
  } ],
  "positionList" : [ {
    "charLength" : 171,
    "startLineNumber" : 84,
    "startColumnNumber" : 21,
    "endLineNumber" : 84,
    "endColumnNumber" : 192
  } ],
  "layoutRelationDataList" : [ ]
}