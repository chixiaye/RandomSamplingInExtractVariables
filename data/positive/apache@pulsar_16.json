{
  "id" : 16,
  "expression" : "interpretByteArray(displayHex,Base64.getDecoder().decode(msg))",
  "projectName" : "apache@pulsar",
  "commitID" : "5980ce060e5d08aea9a83659a68d64ed5673cf4e",
  "filePath" : "pulsar-client-tools/src/main/java/org/apache/pulsar/client/cli/CmdConsume.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "interpretByteArray(displayHex,Base64.getDecoder().decode(msg))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 427,
      "startColumnNumber" : 31,
      "endLineNumber" : 427,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 427,
        "startColumnNumber" : 31,
        "endLineNumber" : 427,
        "endColumnNumber" : 103
      },
      "nodeContext" : "output=interpretByteArray(displayHex,Base64.getDecoder().decode(msg))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 427,
        "startColumnNumber" : 24,
        "endLineNumber" : 427,
        "endColumnNumber" : 104
      },
      "nodeContext" : "String output=interpretByteArray(displayHex,Base64.getDecoder().decode(msg));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 426,
        "startColumnNumber" : 24,
        "endLineNumber" : 429,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  String output=interpretByteArray(displayHex,Base64.getDecoder().decode(msg));\n  System.out.println(output);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 293,
        "startLineNumber" : 426,
        "startColumnNumber" : 20,
        "endLineNumber" : 431,
        "endColumnNumber" : 21
      },
      "nodeContext" : "try {\n  String output=interpretByteArray(displayHex,Base64.getDecoder().decode(msg));\n  System.out.println(output);\n}\n catch (Exception e) {\n  System.out.println(msg);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 36,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 379,
        "startLineNumber" : 425,
        "startColumnNumber" : 23,
        "endLineNumber" : 433,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  try {\n    String output=interpretByteArray(displayHex,Base64.getDecoder().decode(msg));\n    System.out.println(output);\n  }\n catch (  Exception e) {\n    System.out.println(msg);\n  }\n  numMessagesConsumed+=1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 506,
        "startLineNumber" : 423,
        "startColumnNumber" : 16,
        "endLineNumber" : 433,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (msg == null) {\n  LOG.debug(\"No message to consume after waiting for 5 seconds.\");\n}\n else {\n  try {\n    String output=interpretByteArray(displayHex,Base64.getDecoder().decode(msg));\n    System.out.println(output);\n  }\n catch (  Exception e) {\n    System.out.println(msg);\n  }\n  numMessagesConsumed+=1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 51,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 708,
        "startLineNumber" : 418,
        "startColumnNumber" : 102,
        "endLineNumber" : 434,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (limiter != null) {\n    limiter.acquire();\n  }\n  String msg=consumerSocket.receive(5,TimeUnit.SECONDS);\n  if (msg == null) {\n    LOG.debug(\"No message to consume after waiting for 5 seconds.\");\n  }\n else {\n    try {\n      String output=interpretByteArray(displayHex,Base64.getDecoder().decode(msg));\n      System.out.println(output);\n    }\n catch (    Exception e) {\n      System.out.println(msg);\n    }\n    numMessagesConsumed+=1;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 798,
        "startLineNumber" : 418,
        "startColumnNumber" : 12,
        "endLineNumber" : 434,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (this.numMessagesToConsume == 0 || numMessagesConsumed < this.numMessagesToConsume) {\n  if (limiter != null) {\n    limiter.acquire();\n  }\n  String msg=consumerSocket.receive(5,TimeUnit.SECONDS);\n  if (msg == null) {\n    LOG.debug(\"No message to consume after waiting for 5 seconds.\");\n  }\n else {\n    try {\n      String output=interpretByteArray(displayHex,Base64.getDecoder().decode(msg));\n      System.out.println(output);\n    }\n catch (    Exception e) {\n      System.out.println(msg);\n    }\n    numMessagesConsumed+=1;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 85,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 986,
        "startLineNumber" : 416,
        "startColumnNumber" : 12,
        "endLineNumber" : 436,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RateLimiter limiter=(this.consumeRate > 0) ? RateLimiter.create(this.consumeRate) : null;\n  while (this.numMessagesToConsume == 0 || numMessagesConsumed < this.numMessagesToConsume) {\n    if (limiter != null) {\n      limiter.acquire();\n    }\n    String msg=consumerSocket.receive(5,TimeUnit.SECONDS);\n    if (msg == null) {\n      LOG.debug(\"No message to consume after waiting for 5 seconds.\");\n    }\n else {\n      try {\n        String output=interpretByteArray(displayHex,Base64.getDecoder().decode(msg));\n        System.out.println(output);\n      }\n catch (      Exception e) {\n        System.out.println(msg);\n      }\n      numMessagesConsumed+=1;\n    }\n  }\n  consumerSocket.awaitClose(2,TimeUnit.SECONDS);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1250,
        "startLineNumber" : 416,
        "startColumnNumber" : 8,
        "endLineNumber" : 442,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  RateLimiter limiter=(this.consumeRate > 0) ? RateLimiter.create(this.consumeRate) : null;\n  while (this.numMessagesToConsume == 0 || numMessagesConsumed < this.numMessagesToConsume) {\n    if (limiter != null) {\n      limiter.acquire();\n    }\n    String msg=consumerSocket.receive(5,TimeUnit.SECONDS);\n    if (msg == null) {\n      LOG.debug(\"No message to consume after waiting for 5 seconds.\");\n    }\n else {\n      try {\n        String output=interpretByteArray(displayHex,Base64.getDecoder().decode(msg));\n        System.out.println(output);\n      }\n catch (      Exception e) {\n        System.out.println(msg);\n      }\n      numMessagesConsumed+=1;\n    }\n  }\n  consumerSocket.awaitClose(2,TimeUnit.SECONDS);\n}\n catch (Exception e) {\n  LOG.error(\"Error while consuming messages\");\n  LOG.error(e.getMessage(),e);\n  returnCode=-1;\n}\n finally {\n  LOG.info(\"{} messages successfully consumed\",numMessagesConsumed);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 145,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3420,
        "startLineNumber" : 367,
        "startColumnNumber" : 51,
        "endLineNumber" : 445,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int numMessagesConsumed=0;\n  int returnCode=0;\n  TopicName topicName=TopicName.get(topic);\n  String wsTopic=String.format(\"%s/%s/\" + (StringUtils.isEmpty(topicName.getCluster()) ? \"\" : topicName.getCluster() + \"/\") + \"%s/%s/%s?subscriptionType=%s&subscriptionMode=%s\",topicName.getDomain(),topicName.getTenant(),topicName.getNamespacePortion(),topicName.getLocalName(),subscriptionName,subscriptionType.toString(),subscriptionMode.toString());\n  String consumerBaseUri=serviceURL + (serviceURL.endsWith(\"/\") ? \"\" : \"/\") + \"ws/consumer/\"+ wsTopic;\n  URI consumerUri=URI.create(consumerBaseUri);\n  WebSocketClient produceClient=new WebSocketClient(new SslContextFactory(true));\n  ClientUpgradeRequest produceRequest=new ClientUpgradeRequest();\n  try {\n    if (authentication != null) {\n      authentication.start();\n      AuthenticationDataProvider authData=authentication.getAuthData();\n      if (authData.hasDataForHttp()) {\n        for (        Map.Entry<String,String> kv : authData.getHttpHeaders()) {\n          produceRequest.setHeader(kv.getKey(),kv.getValue());\n        }\n      }\n    }\n  }\n catch (  Exception e) {\n    LOG.error(\"Authentication plugin error: \" + e.getMessage());\n    return -1;\n  }\n  CompletableFuture<Void> connected=new CompletableFuture<>();\n  ConsumerSocket consumerSocket=new ConsumerSocket(connected);\n  try {\n    produceClient.start();\n  }\n catch (  Exception e) {\n    LOG.error(\"Failed to start websocket-client\",e);\n    return -1;\n  }\n  try {\n    LOG.info(\"Trying to create websocket session..{}\",consumerUri);\n    produceClient.connect(consumerSocket,consumerUri,produceRequest);\n    connected.get();\n  }\n catch (  Exception e) {\n    LOG.error(\"Failed to create web-socket session\",e);\n    return -1;\n  }\n  try {\n    RateLimiter limiter=(this.consumeRate > 0) ? RateLimiter.create(this.consumeRate) : null;\n    while (this.numMessagesToConsume == 0 || numMessagesConsumed < this.numMessagesToConsume) {\n      if (limiter != null) {\n        limiter.acquire();\n      }\n      String msg=consumerSocket.receive(5,TimeUnit.SECONDS);\n      if (msg == null) {\n        LOG.debug(\"No message to consume after waiting for 5 seconds.\");\n      }\n else {\n        try {\n          String output=interpretByteArray(displayHex,Base64.getDecoder().decode(msg));\n          System.out.println(output);\n        }\n catch (        Exception e) {\n          System.out.println(msg);\n        }\n        numMessagesConsumed+=1;\n      }\n    }\n    consumerSocket.awaitClose(2,TimeUnit.SECONDS);\n  }\n catch (  Exception e) {\n    LOG.error(\"Error while consuming messages\");\n    LOG.error(e.getMessage(),e);\n    returnCode=-1;\n  }\n finally {\n    LOG.info(\"{} messages successfully consumed\",numMessagesConsumed);\n  }\n  return returnCode;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 401,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3504,
        "startLineNumber" : 366,
        "startColumnNumber" : 4,
        "endLineNumber" : 445,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"deprecation\") private int consumeFromWebSocket(String topic){\n  int numMessagesConsumed=0;\n  int returnCode=0;\n  TopicName topicName=TopicName.get(topic);\n  String wsTopic=String.format(\"%s/%s/\" + (StringUtils.isEmpty(topicName.getCluster()) ? \"\" : topicName.getCluster() + \"/\") + \"%s/%s/%s?subscriptionType=%s&subscriptionMode=%s\",topicName.getDomain(),topicName.getTenant(),topicName.getNamespacePortion(),topicName.getLocalName(),subscriptionName,subscriptionType.toString(),subscriptionMode.toString());\n  String consumerBaseUri=serviceURL + (serviceURL.endsWith(\"/\") ? \"\" : \"/\") + \"ws/consumer/\"+ wsTopic;\n  URI consumerUri=URI.create(consumerBaseUri);\n  WebSocketClient produceClient=new WebSocketClient(new SslContextFactory(true));\n  ClientUpgradeRequest produceRequest=new ClientUpgradeRequest();\n  try {\n    if (authentication != null) {\n      authentication.start();\n      AuthenticationDataProvider authData=authentication.getAuthData();\n      if (authData.hasDataForHttp()) {\n        for (        Map.Entry<String,String> kv : authData.getHttpHeaders()) {\n          produceRequest.setHeader(kv.getKey(),kv.getValue());\n        }\n      }\n    }\n  }\n catch (  Exception e) {\n    LOG.error(\"Authentication plugin error: \" + e.getMessage());\n    return -1;\n  }\n  CompletableFuture<Void> connected=new CompletableFuture<>();\n  ConsumerSocket consumerSocket=new ConsumerSocket(connected);\n  try {\n    produceClient.start();\n  }\n catch (  Exception e) {\n    LOG.error(\"Failed to start websocket-client\",e);\n    return -1;\n  }\n  try {\n    LOG.info(\"Trying to create websocket session..{}\",consumerUri);\n    produceClient.connect(consumerSocket,consumerUri,produceRequest);\n    connected.get();\n  }\n catch (  Exception e) {\n    LOG.error(\"Failed to create web-socket session\",e);\n    return -1;\n  }\n  try {\n    RateLimiter limiter=(this.consumeRate > 0) ? RateLimiter.create(this.consumeRate) : null;\n    while (this.numMessagesToConsume == 0 || numMessagesConsumed < this.numMessagesToConsume) {\n      if (limiter != null) {\n        limiter.acquire();\n      }\n      String msg=consumerSocket.receive(5,TimeUnit.SECONDS);\n      if (msg == null) {\n        LOG.debug(\"No message to consume after waiting for 5 seconds.\");\n      }\n else {\n        try {\n          String output=interpretByteArray(displayHex,Base64.getDecoder().decode(msg));\n          System.out.println(output);\n        }\n catch (        Exception e) {\n          System.out.println(msg);\n        }\n        numMessagesConsumed+=1;\n      }\n    }\n    consumerSocket.awaitClose(2,TimeUnit.SECONDS);\n  }\n catch (  Exception e) {\n    LOG.error(\"Error while consuming messages\");\n    LOG.error(e.getMessage(),e);\n    returnCode=-1;\n  }\n finally {\n    LOG.info(\"{} messages successfully consumed\",numMessagesConsumed);\n  }\n  return returnCode;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 412,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 427,
        "startColumnNumber" : 24,
        "endLineNumber" : 427,
        "endColumnNumber" : 104
      },
      "nodeContext" : "String output=interpretByteArray(displayHex,Base64.getDecoder().decode(msg));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 6,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "output",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 428,
      "startColumnNumber" : 43,
      "endLineNumber" : 428,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 428,
        "startColumnNumber" : 24,
        "endLineNumber" : 428,
        "endColumnNumber" : 50
      },
      "nodeContext" : "System.out.println(output)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 428,
        "startColumnNumber" : 24,
        "endLineNumber" : 428,
        "endColumnNumber" : 51
      },
      "nodeContext" : "System.out.println(output);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 426,
        "startColumnNumber" : 24,
        "endLineNumber" : 429,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  String output=interpretByteArray(displayHex,Base64.getDecoder().decode(msg));\n  System.out.println(output);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 293,
        "startLineNumber" : 426,
        "startColumnNumber" : 20,
        "endLineNumber" : 431,
        "endColumnNumber" : 21
      },
      "nodeContext" : "try {\n  String output=interpretByteArray(displayHex,Base64.getDecoder().decode(msg));\n  System.out.println(output);\n}\n catch (Exception e) {\n  System.out.println(msg);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 36,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 379,
        "startLineNumber" : 425,
        "startColumnNumber" : 23,
        "endLineNumber" : 433,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  try {\n    String output=interpretByteArray(displayHex,Base64.getDecoder().decode(msg));\n    System.out.println(output);\n  }\n catch (  Exception e) {\n    System.out.println(msg);\n  }\n  numMessagesConsumed+=1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 506,
        "startLineNumber" : 423,
        "startColumnNumber" : 16,
        "endLineNumber" : 433,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (msg == null) {\n  LOG.debug(\"No message to consume after waiting for 5 seconds.\");\n}\n else {\n  try {\n    String output=interpretByteArray(displayHex,Base64.getDecoder().decode(msg));\n    System.out.println(output);\n  }\n catch (  Exception e) {\n    System.out.println(msg);\n  }\n  numMessagesConsumed+=1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 51,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 708,
        "startLineNumber" : 418,
        "startColumnNumber" : 102,
        "endLineNumber" : 434,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (limiter != null) {\n    limiter.acquire();\n  }\n  String msg=consumerSocket.receive(5,TimeUnit.SECONDS);\n  if (msg == null) {\n    LOG.debug(\"No message to consume after waiting for 5 seconds.\");\n  }\n else {\n    try {\n      String output=interpretByteArray(displayHex,Base64.getDecoder().decode(msg));\n      System.out.println(output);\n    }\n catch (    Exception e) {\n      System.out.println(msg);\n    }\n    numMessagesConsumed+=1;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 798,
        "startLineNumber" : 418,
        "startColumnNumber" : 12,
        "endLineNumber" : 434,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (this.numMessagesToConsume == 0 || numMessagesConsumed < this.numMessagesToConsume) {\n  if (limiter != null) {\n    limiter.acquire();\n  }\n  String msg=consumerSocket.receive(5,TimeUnit.SECONDS);\n  if (msg == null) {\n    LOG.debug(\"No message to consume after waiting for 5 seconds.\");\n  }\n else {\n    try {\n      String output=interpretByteArray(displayHex,Base64.getDecoder().decode(msg));\n      System.out.println(output);\n    }\n catch (    Exception e) {\n      System.out.println(msg);\n    }\n    numMessagesConsumed+=1;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 85,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 986,
        "startLineNumber" : 416,
        "startColumnNumber" : 12,
        "endLineNumber" : 436,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RateLimiter limiter=(this.consumeRate > 0) ? RateLimiter.create(this.consumeRate) : null;\n  while (this.numMessagesToConsume == 0 || numMessagesConsumed < this.numMessagesToConsume) {\n    if (limiter != null) {\n      limiter.acquire();\n    }\n    String msg=consumerSocket.receive(5,TimeUnit.SECONDS);\n    if (msg == null) {\n      LOG.debug(\"No message to consume after waiting for 5 seconds.\");\n    }\n else {\n      try {\n        String output=interpretByteArray(displayHex,Base64.getDecoder().decode(msg));\n        System.out.println(output);\n      }\n catch (      Exception e) {\n        System.out.println(msg);\n      }\n      numMessagesConsumed+=1;\n    }\n  }\n  consumerSocket.awaitClose(2,TimeUnit.SECONDS);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1250,
        "startLineNumber" : 416,
        "startColumnNumber" : 8,
        "endLineNumber" : 442,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  RateLimiter limiter=(this.consumeRate > 0) ? RateLimiter.create(this.consumeRate) : null;\n  while (this.numMessagesToConsume == 0 || numMessagesConsumed < this.numMessagesToConsume) {\n    if (limiter != null) {\n      limiter.acquire();\n    }\n    String msg=consumerSocket.receive(5,TimeUnit.SECONDS);\n    if (msg == null) {\n      LOG.debug(\"No message to consume after waiting for 5 seconds.\");\n    }\n else {\n      try {\n        String output=interpretByteArray(displayHex,Base64.getDecoder().decode(msg));\n        System.out.println(output);\n      }\n catch (      Exception e) {\n        System.out.println(msg);\n      }\n      numMessagesConsumed+=1;\n    }\n  }\n  consumerSocket.awaitClose(2,TimeUnit.SECONDS);\n}\n catch (Exception e) {\n  LOG.error(\"Error while consuming messages\");\n  LOG.error(e.getMessage(),e);\n  returnCode=-1;\n}\n finally {\n  LOG.info(\"{} messages successfully consumed\",numMessagesConsumed);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 145,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3420,
        "startLineNumber" : 367,
        "startColumnNumber" : 51,
        "endLineNumber" : 445,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int numMessagesConsumed=0;\n  int returnCode=0;\n  TopicName topicName=TopicName.get(topic);\n  String wsTopic=String.format(\"%s/%s/\" + (StringUtils.isEmpty(topicName.getCluster()) ? \"\" : topicName.getCluster() + \"/\") + \"%s/%s/%s?subscriptionType=%s&subscriptionMode=%s\",topicName.getDomain(),topicName.getTenant(),topicName.getNamespacePortion(),topicName.getLocalName(),subscriptionName,subscriptionType.toString(),subscriptionMode.toString());\n  String consumerBaseUri=serviceURL + (serviceURL.endsWith(\"/\") ? \"\" : \"/\") + \"ws/consumer/\"+ wsTopic;\n  URI consumerUri=URI.create(consumerBaseUri);\n  WebSocketClient produceClient=new WebSocketClient(new SslContextFactory(true));\n  ClientUpgradeRequest produceRequest=new ClientUpgradeRequest();\n  try {\n    if (authentication != null) {\n      authentication.start();\n      AuthenticationDataProvider authData=authentication.getAuthData();\n      if (authData.hasDataForHttp()) {\n        for (        Map.Entry<String,String> kv : authData.getHttpHeaders()) {\n          produceRequest.setHeader(kv.getKey(),kv.getValue());\n        }\n      }\n    }\n  }\n catch (  Exception e) {\n    LOG.error(\"Authentication plugin error: \" + e.getMessage());\n    return -1;\n  }\n  CompletableFuture<Void> connected=new CompletableFuture<>();\n  ConsumerSocket consumerSocket=new ConsumerSocket(connected);\n  try {\n    produceClient.start();\n  }\n catch (  Exception e) {\n    LOG.error(\"Failed to start websocket-client\",e);\n    return -1;\n  }\n  try {\n    LOG.info(\"Trying to create websocket session..{}\",consumerUri);\n    produceClient.connect(consumerSocket,consumerUri,produceRequest);\n    connected.get();\n  }\n catch (  Exception e) {\n    LOG.error(\"Failed to create web-socket session\",e);\n    return -1;\n  }\n  try {\n    RateLimiter limiter=(this.consumeRate > 0) ? RateLimiter.create(this.consumeRate) : null;\n    while (this.numMessagesToConsume == 0 || numMessagesConsumed < this.numMessagesToConsume) {\n      if (limiter != null) {\n        limiter.acquire();\n      }\n      String msg=consumerSocket.receive(5,TimeUnit.SECONDS);\n      if (msg == null) {\n        LOG.debug(\"No message to consume after waiting for 5 seconds.\");\n      }\n else {\n        try {\n          String output=interpretByteArray(displayHex,Base64.getDecoder().decode(msg));\n          System.out.println(output);\n        }\n catch (        Exception e) {\n          System.out.println(msg);\n        }\n        numMessagesConsumed+=1;\n      }\n    }\n    consumerSocket.awaitClose(2,TimeUnit.SECONDS);\n  }\n catch (  Exception e) {\n    LOG.error(\"Error while consuming messages\");\n    LOG.error(e.getMessage(),e);\n    returnCode=-1;\n  }\n finally {\n    LOG.info(\"{} messages successfully consumed\",numMessagesConsumed);\n  }\n  return returnCode;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 401,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3504,
        "startLineNumber" : 366,
        "startColumnNumber" : 4,
        "endLineNumber" : 445,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"deprecation\") private int consumeFromWebSocket(String topic){\n  int numMessagesConsumed=0;\n  int returnCode=0;\n  TopicName topicName=TopicName.get(topic);\n  String wsTopic=String.format(\"%s/%s/\" + (StringUtils.isEmpty(topicName.getCluster()) ? \"\" : topicName.getCluster() + \"/\") + \"%s/%s/%s?subscriptionType=%s&subscriptionMode=%s\",topicName.getDomain(),topicName.getTenant(),topicName.getNamespacePortion(),topicName.getLocalName(),subscriptionName,subscriptionType.toString(),subscriptionMode.toString());\n  String consumerBaseUri=serviceURL + (serviceURL.endsWith(\"/\") ? \"\" : \"/\") + \"ws/consumer/\"+ wsTopic;\n  URI consumerUri=URI.create(consumerBaseUri);\n  WebSocketClient produceClient=new WebSocketClient(new SslContextFactory(true));\n  ClientUpgradeRequest produceRequest=new ClientUpgradeRequest();\n  try {\n    if (authentication != null) {\n      authentication.start();\n      AuthenticationDataProvider authData=authentication.getAuthData();\n      if (authData.hasDataForHttp()) {\n        for (        Map.Entry<String,String> kv : authData.getHttpHeaders()) {\n          produceRequest.setHeader(kv.getKey(),kv.getValue());\n        }\n      }\n    }\n  }\n catch (  Exception e) {\n    LOG.error(\"Authentication plugin error: \" + e.getMessage());\n    return -1;\n  }\n  CompletableFuture<Void> connected=new CompletableFuture<>();\n  ConsumerSocket consumerSocket=new ConsumerSocket(connected);\n  try {\n    produceClient.start();\n  }\n catch (  Exception e) {\n    LOG.error(\"Failed to start websocket-client\",e);\n    return -1;\n  }\n  try {\n    LOG.info(\"Trying to create websocket session..{}\",consumerUri);\n    produceClient.connect(consumerSocket,consumerUri,produceRequest);\n    connected.get();\n  }\n catch (  Exception e) {\n    LOG.error(\"Failed to create web-socket session\",e);\n    return -1;\n  }\n  try {\n    RateLimiter limiter=(this.consumeRate > 0) ? RateLimiter.create(this.consumeRate) : null;\n    while (this.numMessagesToConsume == 0 || numMessagesConsumed < this.numMessagesToConsume) {\n      if (limiter != null) {\n        limiter.acquire();\n      }\n      String msg=consumerSocket.receive(5,TimeUnit.SECONDS);\n      if (msg == null) {\n        LOG.debug(\"No message to consume after waiting for 5 seconds.\");\n      }\n else {\n        try {\n          String output=interpretByteArray(displayHex,Base64.getDecoder().decode(msg));\n          System.out.println(output);\n        }\n catch (        Exception e) {\n          System.out.println(msg);\n        }\n        numMessagesConsumed+=1;\n      }\n    }\n    consumerSocket.awaitClose(2,TimeUnit.SECONDS);\n  }\n catch (  Exception e) {\n    LOG.error(\"Error while consuming messages\");\n    LOG.error(e.getMessage(),e);\n    returnCode=-1;\n  }\n finally {\n    LOG.info(\"{} messages successfully consumed\",numMessagesConsumed);\n  }\n  return returnCode;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 412,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 428,
        "startColumnNumber" : 24,
        "endLineNumber" : 428,
        "endColumnNumber" : 51
      },
      "nodeContext" : "System.out.println(output);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 427,
    "startColumnNumber" : 31,
    "endLineNumber" : 427,
    "endColumnNumber" : 37
  }, {
    "charLength" : 6,
    "startLineNumber" : 428,
    "startColumnNumber" : 43,
    "endLineNumber" : 428,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}