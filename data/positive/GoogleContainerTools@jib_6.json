{
  "id" : 6,
  "expression" : "ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build()",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a516426b2072bd7a96747eb50322f25e856edc51",
  "filePath" : "jib-core/src/test/java/com/google/cloud/tools/jib/configuration/BuildConfigurationTest.java",
  "occurrences" : 1,
  "expressionList" : [ {
    "nodeContext" : "ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 120,
      "startLineNumber" : 164,
      "startColumnNumber" : 41,
      "endLineNumber" : 164,
      "endColumnNumber" : 161
    },
    "astNodeNumber" : 11,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 259,
        "startLineNumber" : 162,
        "startColumnNumber" : 8,
        "endLineNumber" : 164,
        "endColumnNumber" : 66
      },
      "nodeContext" : "BuildConfiguration.builder(Mockito.mock(BuildLogger.class)).setBaseImageConfiguration(baseImageConfiguration).setTargetImageConfiguration(ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 267,
        "startLineNumber" : 162,
        "startColumnNumber" : 8,
        "endLineNumber" : 165,
        "endColumnNumber" : 20
      },
      "nodeContext" : "BuildConfiguration.builder(Mockito.mock(BuildLogger.class)).setBaseImageConfiguration(baseImageConfiguration).setTargetImageConfiguration(ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build()).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 27,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 286,
        "startLineNumber" : 161,
        "startColumnNumber" : 23,
        "endLineNumber" : 165,
        "endColumnNumber" : 20
      },
      "nodeContext" : "buildConfiguration=BuildConfiguration.builder(Mockito.mock(BuildLogger.class)).setBaseImageConfiguration(baseImageConfiguration).setTargetImageConfiguration(ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build()).build()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 29,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 307,
        "startLineNumber" : 161,
        "startColumnNumber" : 4,
        "endLineNumber" : 165,
        "endColumnNumber" : 21
      },
      "nodeContext" : "BuildConfiguration buildConfiguration=BuildConfiguration.builder(Mockito.mock(BuildLogger.class)).setBaseImageConfiguration(baseImageConfiguration).setTargetImageConfiguration(ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build()).build();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 32,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1901,
        "startLineNumber" : 142,
        "startColumnNumber" : 36,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String expectedBaseImageServerUrl=\"someserver\";\n  String expectedBaseImageName=\"baseimage\";\n  String expectedBaseImageTag=\"baseimagetag\";\n  String expectedTargetServerUrl=\"someotherserver\";\n  String expectedTargetImageName=\"targetimage\";\n  String expectedTargetTag=\"targettag\";\n  ImageConfiguration baseImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedBaseImageServerUrl,expectedBaseImageName,expectedBaseImageTag)).build();\n  ImageConfiguration ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build()=ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build();\n  BuildConfiguration buildConfiguration=BuildConfiguration.builder(Mockito.mock(BuildLogger.class)).setBaseImageConfiguration(baseImageConfiguration).setTargetImageConfiguration(ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build()).build();\n  Assert.assertNull(buildConfiguration.getBaseImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownBaseRegistryCredentials());\n  Assert.assertNull(buildConfiguration.getTargetImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownTargetRegistryCredentials());\n  Assert.assertEquals(V22ManifestTemplate.class,buildConfiguration.getTargetFormat());\n  Assert.assertNull(buildConfiguration.getApplicationLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getBaseImageLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getContainerConfiguration());\n  Assert.assertEquals(buildConfiguration.getTargetFormat(),V22ManifestTemplate.class);\n  Assert.assertFalse(buildConfiguration.getAllowInsecureRegistries());\n  Assert.assertEquals(Collections.emptyList(),buildConfiguration.getLayerConfigurations());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 187,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1940,
        "startLineNumber" : 141,
        "startColumnNumber" : 2,
        "endLineNumber" : 178,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testBuilder_default(){\n  String expectedBaseImageServerUrl=\"someserver\";\n  String expectedBaseImageName=\"baseimage\";\n  String expectedBaseImageTag=\"baseimagetag\";\n  String expectedTargetServerUrl=\"someotherserver\";\n  String expectedTargetImageName=\"targetimage\";\n  String expectedTargetTag=\"targettag\";\n  ImageConfiguration baseImageConfiguration=ImageConfiguration.builder(ImageReference.of(expectedBaseImageServerUrl,expectedBaseImageName,expectedBaseImageTag)).build();\n  ImageConfiguration ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build()=ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build();\n  BuildConfiguration buildConfiguration=BuildConfiguration.builder(Mockito.mock(BuildLogger.class)).setBaseImageConfiguration(baseImageConfiguration).setTargetImageConfiguration(ImageConfiguration.builder(ImageReference.of(expectedTargetServerUrl,expectedTargetImageName,expectedTargetTag)).build()).build();\n  Assert.assertNull(buildConfiguration.getBaseImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownBaseRegistryCredentials());\n  Assert.assertNull(buildConfiguration.getTargetImageCredentialHelperName());\n  Assert.assertNull(buildConfiguration.getKnownTargetRegistryCredentials());\n  Assert.assertEquals(V22ManifestTemplate.class,buildConfiguration.getTargetFormat());\n  Assert.assertNull(buildConfiguration.getApplicationLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getBaseImageLayersCacheConfiguration());\n  Assert.assertNull(buildConfiguration.getContainerConfiguration());\n  Assert.assertEquals(buildConfiguration.getTargetFormat(),V22ManifestTemplate.class);\n  Assert.assertFalse(buildConfiguration.getAllowInsecureRegistries());\n  Assert.assertEquals(Collections.emptyList(),buildConfiguration.getLayerConfigurations());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 193,
      "astHeight" : 12
    } ],
    "tokenLength" : 8,
    "type" : "com.google.cloud.tools.jib.configuration.ImageConfiguration"
  } ],
  "positionList" : [ {
    "charLength" : 120,
    "startLineNumber" : 164,
    "startColumnNumber" : 41,
    "endLineNumber" : 164,
    "endColumnNumber" : 161
  } ],
  "layoutRelationDataList" : [ ]
}