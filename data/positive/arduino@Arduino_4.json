{
  "id" : 4,
  "expression" : "entry.getKey()",
  "projectName" : "arduino@Arduino",
  "commitID" : "5dd49352df51c06963546d825f5ffdecb2e373e9",
  "filePath" : "arduino-core/src/processing/app/debug/LegacyTargetPlatform.java",
  "occurrences" : 4,
  "expressionList" : [ {
    "nodeContext" : "entry.getKey()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 166,
      "startColumnNumber" : 31,
      "endLineNumber" : 166,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 166,
        "startColumnNumber" : 31,
        "endLineNumber" : 166,
        "endColumnNumber" : 58
      },
      "nodeContext" : "entry.getKey().split(\"\\\\.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 166,
        "startColumnNumber" : 15,
        "endLineNumber" : 166,
        "endColumnNumber" : 62
      },
      "nodeContext" : "entry.getKey()Parts=entry.getKey().split(\"\\\\.\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 166,
        "startColumnNumber" : 6,
        "endLineNumber" : 166,
        "endColumnNumber" : 64
      },
      "nodeContext" : "String[] entry.getKey()Parts=entry.getKey().split(\"\\\\.\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 684,
        "startLineNumber" : 164,
        "startColumnNumber" : 66,
        "endLineNumber" : 173,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String entry.getKey()=entry.getKey();\n  String[] entry.getKey()Parts=entry.getKey().split(\"\\\\.\");\n  String entry.getKey()FirstLevel=entry.getKey()Parts[0];\n  String entry.getKey()SecondLevel=entry.getKey()Parts[0] + \".\" + entry.getKey()Parts[1];\n  if (!preferences.subTree(entry.getKey()FirstLevel).isEmpty() && !preferences.subTree(entry.getKey()SecondLevel).isEmpty() && !preferences.containsKey(entry.getKey())) {\n    System.err.println(I18n.format(_(\"Warning: platform.txt from core '{0}' misses property {1}, automatically set to {2}. Consider upgrading this core.\"),platformName,entry.getKey(),entry.getValue()));\n    preferences.put(entry.getKey(),entry.getValue());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 745,
        "startLineNumber" : 164,
        "startColumnNumber" : 4,
        "endLineNumber" : 173,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (Map.Entry<String,String> entry : addedProps.entrySet()) {\n  String entry.getKey()=entry.getKey();\n  String[] entry.getKey()Parts=entry.getKey().split(\"\\\\.\");\n  String entry.getKey()FirstLevel=entry.getKey()Parts[0];\n  String entry.getKey()SecondLevel=entry.getKey()Parts[0] + \".\" + entry.getKey()Parts[1];\n  if (!preferences.subTree(entry.getKey()FirstLevel).isEmpty() && !preferences.subTree(entry.getKey()SecondLevel).isEmpty() && !preferences.containsKey(entry.getKey())) {\n    System.err.println(I18n.format(_(\"Warning: platform.txt from core '{0}' misses property {1}, automatically set to {2}. Consider upgrading this core.\"),platformName,entry.getKey(),entry.getValue()));\n    preferences.put(entry.getKey(),entry.getValue());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 105,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1869,
        "startLineNumber" : 143,
        "startColumnNumber" : 79,
        "endLineNumber" : 174,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  File platformRewrite=new File(BaseNoGui.getHardwareFolder(),\"platform.keys.rewrite.txt\");\n  PreferencesMap platformRewriteProps=new PreferencesMap(platformRewrite);\n  PreferencesMap oldProps=platformRewriteProps.subTree(\"old\");\n  PreferencesMap newProps=platformRewriteProps.subTree(\"new\");\n  String platformName=preferences.get(\"name\");\n  if (platformName == null) {\n    platformName=folder.getAbsolutePath();\n  }\n  for (  Map.Entry<String,String> entry : oldProps.entrySet()) {\n    String preferencesKey=entry.getKey().substring(entry.getKey().indexOf(\".\") + 1);\n    if (preferences.containsKey(preferencesKey) && entry.getValue().equals(preferences.get(preferencesKey))) {\n      System.err.println(I18n.format(_(\"Warning: platform.txt from core '{0}' contains deprecated {1}, automatically converted to {2}. Consider upgrading this core.\"),platformName,preferencesKey + \"=\" + entry.getValue(),preferencesKey + \"=\" + newProps.get(entry.getKey())));\n      preferences.put(preferencesKey,newProps.get(entry.getKey()));\n    }\n  }\n  PreferencesMap addedProps=platformRewriteProps.subTree(\"added\");\n  for (  Map.Entry<String,String> entry : addedProps.entrySet()) {\n    String entry.getKey()=entry.getKey();\n    String[] entry.getKey()Parts=entry.getKey().split(\"\\\\.\");\n    String entry.getKey()FirstLevel=entry.getKey()Parts[0];\n    String entry.getKey()SecondLevel=entry.getKey()Parts[0] + \".\" + entry.getKey()Parts[1];\n    if (!preferences.subTree(entry.getKey()FirstLevel).isEmpty() && !preferences.subTree(entry.getKey()SecondLevel).isEmpty() && !preferences.containsKey(entry.getKey())) {\n      System.err.println(I18n.format(_(\"Warning: platform.txt from core '{0}' misses property {1}, automatically set to {2}. Consider upgrading this core.\"),platformName,entry.getKey(),entry.getValue()));\n      preferences.put(entry.getKey(),entry.getValue());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 263,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1946,
        "startLineNumber" : 143,
        "startColumnNumber" : 2,
        "endLineNumber" : 174,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void rewriteKeysOfOldPlatformsTxtAndWarnAboutIt() throws IOException {\n  File platformRewrite=new File(BaseNoGui.getHardwareFolder(),\"platform.keys.rewrite.txt\");\n  PreferencesMap platformRewriteProps=new PreferencesMap(platformRewrite);\n  PreferencesMap oldProps=platformRewriteProps.subTree(\"old\");\n  PreferencesMap newProps=platformRewriteProps.subTree(\"new\");\n  String platformName=preferences.get(\"name\");\n  if (platformName == null) {\n    platformName=folder.getAbsolutePath();\n  }\n  for (  Map.Entry<String,String> entry : oldProps.entrySet()) {\n    String preferencesKey=entry.getKey().substring(entry.getKey().indexOf(\".\") + 1);\n    if (preferences.containsKey(preferencesKey) && entry.getValue().equals(preferences.get(preferencesKey))) {\n      System.err.println(I18n.format(_(\"Warning: platform.txt from core '{0}' contains deprecated {1}, automatically converted to {2}. Consider upgrading this core.\"),platformName,preferencesKey + \"=\" + entry.getValue(),preferencesKey + \"=\" + newProps.get(entry.getKey())));\n      preferences.put(preferencesKey,newProps.get(entry.getKey()));\n    }\n  }\n  PreferencesMap addedProps=platformRewriteProps.subTree(\"added\");\n  for (  Map.Entry<String,String> entry : addedProps.entrySet()) {\n    String entry.getKey()=entry.getKey();\n    String[] entry.getKey()Parts=entry.getKey().split(\"\\\\.\");\n    String entry.getKey()FirstLevel=entry.getKey()Parts[0];\n    String entry.getKey()SecondLevel=entry.getKey()Parts[0] + \".\" + entry.getKey()Parts[1];\n    if (!preferences.subTree(entry.getKey()FirstLevel).isEmpty() && !preferences.subTree(entry.getKey()SecondLevel).isEmpty() && !preferences.containsKey(entry.getKey())) {\n      System.err.println(I18n.format(_(\"Warning: platform.txt from core '{0}' misses property {1}, automatically set to {2}. Consider upgrading this core.\"),platformName,entry.getKey(),entry.getValue()));\n      preferences.put(entry.getKey(),entry.getValue());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 269,
      "astHeight" : 13
    } ],
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "entry.getKey()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 169,
      "startColumnNumber" : 144,
      "endLineNumber" : 169,
      "endColumnNumber" : 158
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 169,
        "startColumnNumber" : 120,
        "endLineNumber" : 169,
        "endColumnNumber" : 159
      },
      "nodeContext" : "preferences.containsKey(entry.getKey())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 169,
        "startColumnNumber" : 119,
        "endLineNumber" : 169,
        "endColumnNumber" : 159
      },
      "nodeContext" : "!preferences.containsKey(entry.getKey())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 161,
        "startLineNumber" : 169,
        "startColumnNumber" : 10,
        "endLineNumber" : 169,
        "endColumnNumber" : 171
      },
      "nodeContext" : "!preferences.subTree(entry.getKey()FirstLevel).isEmpty() && !preferences.subTree(entry.getKey()SecondLevel).isEmpty() && !preferences.containsKey(entry.getKey())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 424,
        "startLineNumber" : 169,
        "startColumnNumber" : 6,
        "endLineNumber" : 172,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (!preferences.subTree(entry.getKey()FirstLevel).isEmpty() && !preferences.subTree(entry.getKey()SecondLevel).isEmpty() && !preferences.containsKey(entry.getKey())) {\n  System.err.println(I18n.format(_(\"Warning: platform.txt from core '{0}' misses property {1}, automatically set to {2}. Consider upgrading this core.\"),platformName,entry.getKey(),entry.getValue()));\n  preferences.put(entry.getKey(),entry.getValue());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 684,
        "startLineNumber" : 164,
        "startColumnNumber" : 66,
        "endLineNumber" : 173,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String entry.getKey()=entry.getKey();\n  String[] entry.getKey()Parts=entry.getKey().split(\"\\\\.\");\n  String entry.getKey()FirstLevel=entry.getKey()Parts[0];\n  String entry.getKey()SecondLevel=entry.getKey()Parts[0] + \".\" + entry.getKey()Parts[1];\n  if (!preferences.subTree(entry.getKey()FirstLevel).isEmpty() && !preferences.subTree(entry.getKey()SecondLevel).isEmpty() && !preferences.containsKey(entry.getKey())) {\n    System.err.println(I18n.format(_(\"Warning: platform.txt from core '{0}' misses property {1}, automatically set to {2}. Consider upgrading this core.\"),platformName,entry.getKey(),entry.getValue()));\n    preferences.put(entry.getKey(),entry.getValue());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 745,
        "startLineNumber" : 164,
        "startColumnNumber" : 4,
        "endLineNumber" : 173,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (Map.Entry<String,String> entry : addedProps.entrySet()) {\n  String entry.getKey()=entry.getKey();\n  String[] entry.getKey()Parts=entry.getKey().split(\"\\\\.\");\n  String entry.getKey()FirstLevel=entry.getKey()Parts[0];\n  String entry.getKey()SecondLevel=entry.getKey()Parts[0] + \".\" + entry.getKey()Parts[1];\n  if (!preferences.subTree(entry.getKey()FirstLevel).isEmpty() && !preferences.subTree(entry.getKey()SecondLevel).isEmpty() && !preferences.containsKey(entry.getKey())) {\n    System.err.println(I18n.format(_(\"Warning: platform.txt from core '{0}' misses property {1}, automatically set to {2}. Consider upgrading this core.\"),platformName,entry.getKey(),entry.getValue()));\n    preferences.put(entry.getKey(),entry.getValue());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 105,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1869,
        "startLineNumber" : 143,
        "startColumnNumber" : 79,
        "endLineNumber" : 174,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  File platformRewrite=new File(BaseNoGui.getHardwareFolder(),\"platform.keys.rewrite.txt\");\n  PreferencesMap platformRewriteProps=new PreferencesMap(platformRewrite);\n  PreferencesMap oldProps=platformRewriteProps.subTree(\"old\");\n  PreferencesMap newProps=platformRewriteProps.subTree(\"new\");\n  String platformName=preferences.get(\"name\");\n  if (platformName == null) {\n    platformName=folder.getAbsolutePath();\n  }\n  for (  Map.Entry<String,String> entry : oldProps.entrySet()) {\n    String preferencesKey=entry.getKey().substring(entry.getKey().indexOf(\".\") + 1);\n    if (preferences.containsKey(preferencesKey) && entry.getValue().equals(preferences.get(preferencesKey))) {\n      System.err.println(I18n.format(_(\"Warning: platform.txt from core '{0}' contains deprecated {1}, automatically converted to {2}. Consider upgrading this core.\"),platformName,preferencesKey + \"=\" + entry.getValue(),preferencesKey + \"=\" + newProps.get(entry.getKey())));\n      preferences.put(preferencesKey,newProps.get(entry.getKey()));\n    }\n  }\n  PreferencesMap addedProps=platformRewriteProps.subTree(\"added\");\n  for (  Map.Entry<String,String> entry : addedProps.entrySet()) {\n    String entry.getKey()=entry.getKey();\n    String[] entry.getKey()Parts=entry.getKey().split(\"\\\\.\");\n    String entry.getKey()FirstLevel=entry.getKey()Parts[0];\n    String entry.getKey()SecondLevel=entry.getKey()Parts[0] + \".\" + entry.getKey()Parts[1];\n    if (!preferences.subTree(entry.getKey()FirstLevel).isEmpty() && !preferences.subTree(entry.getKey()SecondLevel).isEmpty() && !preferences.containsKey(entry.getKey())) {\n      System.err.println(I18n.format(_(\"Warning: platform.txt from core '{0}' misses property {1}, automatically set to {2}. Consider upgrading this core.\"),platformName,entry.getKey(),entry.getValue()));\n      preferences.put(entry.getKey(),entry.getValue());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 263,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1946,
        "startLineNumber" : 143,
        "startColumnNumber" : 2,
        "endLineNumber" : 174,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void rewriteKeysOfOldPlatformsTxtAndWarnAboutIt() throws IOException {\n  File platformRewrite=new File(BaseNoGui.getHardwareFolder(),\"platform.keys.rewrite.txt\");\n  PreferencesMap platformRewriteProps=new PreferencesMap(platformRewrite);\n  PreferencesMap oldProps=platformRewriteProps.subTree(\"old\");\n  PreferencesMap newProps=platformRewriteProps.subTree(\"new\");\n  String platformName=preferences.get(\"name\");\n  if (platformName == null) {\n    platformName=folder.getAbsolutePath();\n  }\n  for (  Map.Entry<String,String> entry : oldProps.entrySet()) {\n    String preferencesKey=entry.getKey().substring(entry.getKey().indexOf(\".\") + 1);\n    if (preferences.containsKey(preferencesKey) && entry.getValue().equals(preferences.get(preferencesKey))) {\n      System.err.println(I18n.format(_(\"Warning: platform.txt from core '{0}' contains deprecated {1}, automatically converted to {2}. Consider upgrading this core.\"),platformName,preferencesKey + \"=\" + entry.getValue(),preferencesKey + \"=\" + newProps.get(entry.getKey())));\n      preferences.put(preferencesKey,newProps.get(entry.getKey()));\n    }\n  }\n  PreferencesMap addedProps=platformRewriteProps.subTree(\"added\");\n  for (  Map.Entry<String,String> entry : addedProps.entrySet()) {\n    String entry.getKey()=entry.getKey();\n    String[] entry.getKey()Parts=entry.getKey().split(\"\\\\.\");\n    String entry.getKey()FirstLevel=entry.getKey()Parts[0];\n    String entry.getKey()SecondLevel=entry.getKey()Parts[0] + \".\" + entry.getKey()Parts[1];\n    if (!preferences.subTree(entry.getKey()FirstLevel).isEmpty() && !preferences.subTree(entry.getKey()SecondLevel).isEmpty() && !preferences.containsKey(entry.getKey())) {\n      System.err.println(I18n.format(_(\"Warning: platform.txt from core '{0}' misses property {1}, automatically set to {2}. Consider upgrading this core.\"),platformName,entry.getKey(),entry.getValue()));\n      preferences.put(entry.getKey(),entry.getValue());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 269,
      "astHeight" : 13
    } ],
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "entry.getKey()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 170,
      "startColumnNumber" : 174,
      "endLineNumber" : 170,
      "endColumnNumber" : 188
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 170,
        "startColumnNumber" : 27,
        "endLineNumber" : 170,
        "endColumnNumber" : 204
      },
      "nodeContext" : "I18n.format(_(\"Warning: platform.txt from core '{0}' misses property {1}, automatically set to {2}. Consider upgrading this core.\"),platformName,entry.getKey(),entry.getValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 170,
        "startColumnNumber" : 8,
        "endLineNumber" : 170,
        "endColumnNumber" : 205
      },
      "nodeContext" : "System.err.println(I18n.format(_(\"Warning: platform.txt from core '{0}' misses property {1}, automatically set to {2}. Consider upgrading this core.\"),platformName,entry.getKey(),entry.getValue()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 170,
        "startColumnNumber" : 8,
        "endLineNumber" : 170,
        "endColumnNumber" : 207
      },
      "nodeContext" : "System.err.println(I18n.format(_(\"Warning: platform.txt from core '{0}' misses property {1}, automatically set to {2}. Consider upgrading this core.\"),platformName,entry.getKey(),entry.getValue()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 257,
        "startLineNumber" : 169,
        "startColumnNumber" : 155,
        "endLineNumber" : 172,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  System.err.println(I18n.format(_(\"Warning: platform.txt from core '{0}' misses property {1}, automatically set to {2}. Consider upgrading this core.\"),platformName,entry.getKey(),entry.getValue()));\n  preferences.put(entry.getKey(),entry.getValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 424,
        "startLineNumber" : 169,
        "startColumnNumber" : 6,
        "endLineNumber" : 172,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (!preferences.subTree(entry.getKey()FirstLevel).isEmpty() && !preferences.subTree(entry.getKey()SecondLevel).isEmpty() && !preferences.containsKey(entry.getKey())) {\n  System.err.println(I18n.format(_(\"Warning: platform.txt from core '{0}' misses property {1}, automatically set to {2}. Consider upgrading this core.\"),platformName,entry.getKey(),entry.getValue()));\n  preferences.put(entry.getKey(),entry.getValue());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 684,
        "startLineNumber" : 164,
        "startColumnNumber" : 66,
        "endLineNumber" : 173,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String entry.getKey()=entry.getKey();\n  String[] entry.getKey()Parts=entry.getKey().split(\"\\\\.\");\n  String entry.getKey()FirstLevel=entry.getKey()Parts[0];\n  String entry.getKey()SecondLevel=entry.getKey()Parts[0] + \".\" + entry.getKey()Parts[1];\n  if (!preferences.subTree(entry.getKey()FirstLevel).isEmpty() && !preferences.subTree(entry.getKey()SecondLevel).isEmpty() && !preferences.containsKey(entry.getKey())) {\n    System.err.println(I18n.format(_(\"Warning: platform.txt from core '{0}' misses property {1}, automatically set to {2}. Consider upgrading this core.\"),platformName,entry.getKey(),entry.getValue()));\n    preferences.put(entry.getKey(),entry.getValue());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 745,
        "startLineNumber" : 164,
        "startColumnNumber" : 4,
        "endLineNumber" : 173,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (Map.Entry<String,String> entry : addedProps.entrySet()) {\n  String entry.getKey()=entry.getKey();\n  String[] entry.getKey()Parts=entry.getKey().split(\"\\\\.\");\n  String entry.getKey()FirstLevel=entry.getKey()Parts[0];\n  String entry.getKey()SecondLevel=entry.getKey()Parts[0] + \".\" + entry.getKey()Parts[1];\n  if (!preferences.subTree(entry.getKey()FirstLevel).isEmpty() && !preferences.subTree(entry.getKey()SecondLevel).isEmpty() && !preferences.containsKey(entry.getKey())) {\n    System.err.println(I18n.format(_(\"Warning: platform.txt from core '{0}' misses property {1}, automatically set to {2}. Consider upgrading this core.\"),platformName,entry.getKey(),entry.getValue()));\n    preferences.put(entry.getKey(),entry.getValue());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 105,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1869,
        "startLineNumber" : 143,
        "startColumnNumber" : 79,
        "endLineNumber" : 174,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  File platformRewrite=new File(BaseNoGui.getHardwareFolder(),\"platform.keys.rewrite.txt\");\n  PreferencesMap platformRewriteProps=new PreferencesMap(platformRewrite);\n  PreferencesMap oldProps=platformRewriteProps.subTree(\"old\");\n  PreferencesMap newProps=platformRewriteProps.subTree(\"new\");\n  String platformName=preferences.get(\"name\");\n  if (platformName == null) {\n    platformName=folder.getAbsolutePath();\n  }\n  for (  Map.Entry<String,String> entry : oldProps.entrySet()) {\n    String preferencesKey=entry.getKey().substring(entry.getKey().indexOf(\".\") + 1);\n    if (preferences.containsKey(preferencesKey) && entry.getValue().equals(preferences.get(preferencesKey))) {\n      System.err.println(I18n.format(_(\"Warning: platform.txt from core '{0}' contains deprecated {1}, automatically converted to {2}. Consider upgrading this core.\"),platformName,preferencesKey + \"=\" + entry.getValue(),preferencesKey + \"=\" + newProps.get(entry.getKey())));\n      preferences.put(preferencesKey,newProps.get(entry.getKey()));\n    }\n  }\n  PreferencesMap addedProps=platformRewriteProps.subTree(\"added\");\n  for (  Map.Entry<String,String> entry : addedProps.entrySet()) {\n    String entry.getKey()=entry.getKey();\n    String[] entry.getKey()Parts=entry.getKey().split(\"\\\\.\");\n    String entry.getKey()FirstLevel=entry.getKey()Parts[0];\n    String entry.getKey()SecondLevel=entry.getKey()Parts[0] + \".\" + entry.getKey()Parts[1];\n    if (!preferences.subTree(entry.getKey()FirstLevel).isEmpty() && !preferences.subTree(entry.getKey()SecondLevel).isEmpty() && !preferences.containsKey(entry.getKey())) {\n      System.err.println(I18n.format(_(\"Warning: platform.txt from core '{0}' misses property {1}, automatically set to {2}. Consider upgrading this core.\"),platformName,entry.getKey(),entry.getValue()));\n      preferences.put(entry.getKey(),entry.getValue());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 263,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1946,
        "startLineNumber" : 143,
        "startColumnNumber" : 2,
        "endLineNumber" : 174,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void rewriteKeysOfOldPlatformsTxtAndWarnAboutIt() throws IOException {\n  File platformRewrite=new File(BaseNoGui.getHardwareFolder(),\"platform.keys.rewrite.txt\");\n  PreferencesMap platformRewriteProps=new PreferencesMap(platformRewrite);\n  PreferencesMap oldProps=platformRewriteProps.subTree(\"old\");\n  PreferencesMap newProps=platformRewriteProps.subTree(\"new\");\n  String platformName=preferences.get(\"name\");\n  if (platformName == null) {\n    platformName=folder.getAbsolutePath();\n  }\n  for (  Map.Entry<String,String> entry : oldProps.entrySet()) {\n    String preferencesKey=entry.getKey().substring(entry.getKey().indexOf(\".\") + 1);\n    if (preferences.containsKey(preferencesKey) && entry.getValue().equals(preferences.get(preferencesKey))) {\n      System.err.println(I18n.format(_(\"Warning: platform.txt from core '{0}' contains deprecated {1}, automatically converted to {2}. Consider upgrading this core.\"),platformName,preferencesKey + \"=\" + entry.getValue(),preferencesKey + \"=\" + newProps.get(entry.getKey())));\n      preferences.put(preferencesKey,newProps.get(entry.getKey()));\n    }\n  }\n  PreferencesMap addedProps=platformRewriteProps.subTree(\"added\");\n  for (  Map.Entry<String,String> entry : addedProps.entrySet()) {\n    String entry.getKey()=entry.getKey();\n    String[] entry.getKey()Parts=entry.getKey().split(\"\\\\.\");\n    String entry.getKey()FirstLevel=entry.getKey()Parts[0];\n    String entry.getKey()SecondLevel=entry.getKey()Parts[0] + \".\" + entry.getKey()Parts[1];\n    if (!preferences.subTree(entry.getKey()FirstLevel).isEmpty() && !preferences.subTree(entry.getKey()SecondLevel).isEmpty() && !preferences.containsKey(entry.getKey())) {\n      System.err.println(I18n.format(_(\"Warning: platform.txt from core '{0}' misses property {1}, automatically set to {2}. Consider upgrading this core.\"),platformName,entry.getKey(),entry.getValue()));\n      preferences.put(entry.getKey(),entry.getValue());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 269,
      "astHeight" : 13
    } ],
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "entry.getKey()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 171,
      "startColumnNumber" : 24,
      "endLineNumber" : 171,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 171,
        "startColumnNumber" : 8,
        "endLineNumber" : 171,
        "endColumnNumber" : 56
      },
      "nodeContext" : "preferences.put(entry.getKey(),entry.getValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 171,
        "startColumnNumber" : 8,
        "endLineNumber" : 171,
        "endColumnNumber" : 58
      },
      "nodeContext" : "preferences.put(entry.getKey(),entry.getValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 257,
        "startLineNumber" : 169,
        "startColumnNumber" : 155,
        "endLineNumber" : 172,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  System.err.println(I18n.format(_(\"Warning: platform.txt from core '{0}' misses property {1}, automatically set to {2}. Consider upgrading this core.\"),platformName,entry.getKey(),entry.getValue()));\n  preferences.put(entry.getKey(),entry.getValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 424,
        "startLineNumber" : 169,
        "startColumnNumber" : 6,
        "endLineNumber" : 172,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (!preferences.subTree(entry.getKey()FirstLevel).isEmpty() && !preferences.subTree(entry.getKey()SecondLevel).isEmpty() && !preferences.containsKey(entry.getKey())) {\n  System.err.println(I18n.format(_(\"Warning: platform.txt from core '{0}' misses property {1}, automatically set to {2}. Consider upgrading this core.\"),platformName,entry.getKey(),entry.getValue()));\n  preferences.put(entry.getKey(),entry.getValue());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 684,
        "startLineNumber" : 164,
        "startColumnNumber" : 66,
        "endLineNumber" : 173,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String entry.getKey()=entry.getKey();\n  String[] entry.getKey()Parts=entry.getKey().split(\"\\\\.\");\n  String entry.getKey()FirstLevel=entry.getKey()Parts[0];\n  String entry.getKey()SecondLevel=entry.getKey()Parts[0] + \".\" + entry.getKey()Parts[1];\n  if (!preferences.subTree(entry.getKey()FirstLevel).isEmpty() && !preferences.subTree(entry.getKey()SecondLevel).isEmpty() && !preferences.containsKey(entry.getKey())) {\n    System.err.println(I18n.format(_(\"Warning: platform.txt from core '{0}' misses property {1}, automatically set to {2}. Consider upgrading this core.\"),platformName,entry.getKey(),entry.getValue()));\n    preferences.put(entry.getKey(),entry.getValue());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 745,
        "startLineNumber" : 164,
        "startColumnNumber" : 4,
        "endLineNumber" : 173,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (Map.Entry<String,String> entry : addedProps.entrySet()) {\n  String entry.getKey()=entry.getKey();\n  String[] entry.getKey()Parts=entry.getKey().split(\"\\\\.\");\n  String entry.getKey()FirstLevel=entry.getKey()Parts[0];\n  String entry.getKey()SecondLevel=entry.getKey()Parts[0] + \".\" + entry.getKey()Parts[1];\n  if (!preferences.subTree(entry.getKey()FirstLevel).isEmpty() && !preferences.subTree(entry.getKey()SecondLevel).isEmpty() && !preferences.containsKey(entry.getKey())) {\n    System.err.println(I18n.format(_(\"Warning: platform.txt from core '{0}' misses property {1}, automatically set to {2}. Consider upgrading this core.\"),platformName,entry.getKey(),entry.getValue()));\n    preferences.put(entry.getKey(),entry.getValue());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 105,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1869,
        "startLineNumber" : 143,
        "startColumnNumber" : 79,
        "endLineNumber" : 174,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  File platformRewrite=new File(BaseNoGui.getHardwareFolder(),\"platform.keys.rewrite.txt\");\n  PreferencesMap platformRewriteProps=new PreferencesMap(platformRewrite);\n  PreferencesMap oldProps=platformRewriteProps.subTree(\"old\");\n  PreferencesMap newProps=platformRewriteProps.subTree(\"new\");\n  String platformName=preferences.get(\"name\");\n  if (platformName == null) {\n    platformName=folder.getAbsolutePath();\n  }\n  for (  Map.Entry<String,String> entry : oldProps.entrySet()) {\n    String preferencesKey=entry.getKey().substring(entry.getKey().indexOf(\".\") + 1);\n    if (preferences.containsKey(preferencesKey) && entry.getValue().equals(preferences.get(preferencesKey))) {\n      System.err.println(I18n.format(_(\"Warning: platform.txt from core '{0}' contains deprecated {1}, automatically converted to {2}. Consider upgrading this core.\"),platformName,preferencesKey + \"=\" + entry.getValue(),preferencesKey + \"=\" + newProps.get(entry.getKey())));\n      preferences.put(preferencesKey,newProps.get(entry.getKey()));\n    }\n  }\n  PreferencesMap addedProps=platformRewriteProps.subTree(\"added\");\n  for (  Map.Entry<String,String> entry : addedProps.entrySet()) {\n    String entry.getKey()=entry.getKey();\n    String[] entry.getKey()Parts=entry.getKey().split(\"\\\\.\");\n    String entry.getKey()FirstLevel=entry.getKey()Parts[0];\n    String entry.getKey()SecondLevel=entry.getKey()Parts[0] + \".\" + entry.getKey()Parts[1];\n    if (!preferences.subTree(entry.getKey()FirstLevel).isEmpty() && !preferences.subTree(entry.getKey()SecondLevel).isEmpty() && !preferences.containsKey(entry.getKey())) {\n      System.err.println(I18n.format(_(\"Warning: platform.txt from core '{0}' misses property {1}, automatically set to {2}. Consider upgrading this core.\"),platformName,entry.getKey(),entry.getValue()));\n      preferences.put(entry.getKey(),entry.getValue());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 263,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1946,
        "startLineNumber" : 143,
        "startColumnNumber" : 2,
        "endLineNumber" : 174,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void rewriteKeysOfOldPlatformsTxtAndWarnAboutIt() throws IOException {\n  File platformRewrite=new File(BaseNoGui.getHardwareFolder(),\"platform.keys.rewrite.txt\");\n  PreferencesMap platformRewriteProps=new PreferencesMap(platformRewrite);\n  PreferencesMap oldProps=platformRewriteProps.subTree(\"old\");\n  PreferencesMap newProps=platformRewriteProps.subTree(\"new\");\n  String platformName=preferences.get(\"name\");\n  if (platformName == null) {\n    platformName=folder.getAbsolutePath();\n  }\n  for (  Map.Entry<String,String> entry : oldProps.entrySet()) {\n    String preferencesKey=entry.getKey().substring(entry.getKey().indexOf(\".\") + 1);\n    if (preferences.containsKey(preferencesKey) && entry.getValue().equals(preferences.get(preferencesKey))) {\n      System.err.println(I18n.format(_(\"Warning: platform.txt from core '{0}' contains deprecated {1}, automatically converted to {2}. Consider upgrading this core.\"),platformName,preferencesKey + \"=\" + entry.getValue(),preferencesKey + \"=\" + newProps.get(entry.getKey())));\n      preferences.put(preferencesKey,newProps.get(entry.getKey()));\n    }\n  }\n  PreferencesMap addedProps=platformRewriteProps.subTree(\"added\");\n  for (  Map.Entry<String,String> entry : addedProps.entrySet()) {\n    String entry.getKey()=entry.getKey();\n    String[] entry.getKey()Parts=entry.getKey().split(\"\\\\.\");\n    String entry.getKey()FirstLevel=entry.getKey()Parts[0];\n    String entry.getKey()SecondLevel=entry.getKey()Parts[0] + \".\" + entry.getKey()Parts[1];\n    if (!preferences.subTree(entry.getKey()FirstLevel).isEmpty() && !preferences.subTree(entry.getKey()SecondLevel).isEmpty() && !preferences.containsKey(entry.getKey())) {\n      System.err.println(I18n.format(_(\"Warning: platform.txt from core '{0}' misses property {1}, automatically set to {2}. Consider upgrading this core.\"),platformName,entry.getKey(),entry.getValue()));\n      preferences.put(entry.getKey(),entry.getValue());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 269,
      "astHeight" : 13
    } ],
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 166,
    "startColumnNumber" : 31,
    "endLineNumber" : 166,
    "endColumnNumber" : 45
  }, {
    "charLength" : 14,
    "startLineNumber" : 169,
    "startColumnNumber" : 144,
    "endLineNumber" : 169,
    "endColumnNumber" : 158
  }, {
    "charLength" : 14,
    "startLineNumber" : 170,
    "startColumnNumber" : 174,
    "endLineNumber" : 170,
    "endColumnNumber" : 188
  }, {
    "charLength" : 14,
    "startLineNumber" : 171,
    "startColumnNumber" : 24,
    "endLineNumber" : 171,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}