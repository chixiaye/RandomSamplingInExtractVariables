{
  "id" : 43,
  "expression" : "items.get(i)",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "2423a17b5c3e5917a1960ffea8f5ecb11ac373a6",
  "filePath" : "src/main/java/rx/observers/TestObserver.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 1,
  "expressionList" : [ {
    "nodeContext" : "items.get(i)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 120,
      "startColumnNumber" : 14,
      "endLineNumber" : 120,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 120,
        "startColumnNumber" : 14,
        "endLineNumber" : 120,
        "endColumnNumber" : 37
      },
      "nodeContext" : "expected=items.get(i)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 120,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 38
      },
      "nodeContext" : "T expected=items.get(i);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 731,
        "startLineNumber" : 119,
        "startColumnNumber" : 47,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  T expected=items.get(i);\n  T actual=onNextEvents.get(i);\n  if (expected == null) {\n    if (actual != null) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ actual+ \"]\");\n    }\n  }\n else   if (!expected.equals(actual)) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 770,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < items.size(); i++) {\n  T expected=items.get(i);\n  T actual=onNextEvents.get(i);\n  if (expected == null) {\n    if (actual != null) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ actual+ \"]\");\n    }\n  }\n else   if (!expected.equals(actual)) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 89,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 992,
        "startLineNumber" : 114,
        "startColumnNumber" : 52,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (onNextEvents.size() != items.size()) {\n    throw new AssertionError(\"Number of items does not match. Provided: \" + items.size() + \"  Actual: \"+ onNextEvents.size());\n  }\n  for (int i=0; i < items.size(); i++) {\n    T expected=items.get(i);\n    T actual=onNextEvents.get(i);\n    if (expected == null) {\n      if (actual != null) {\n        throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ actual+ \"]\");\n      }\n    }\n else     if (!expected.equals(actual)) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1350,
        "startLineNumber" : 106,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Assert that a particular sequence of items was received in order.\n * @param items the sequence of items expected to have been observed\n * @throws AssertionError if the sequence of items observed does not exactly match  {@code items}\n */\npublic void assertReceivedOnNext(List<T> items){\n  if (onNextEvents.size() != items.size()) {\n    throw new AssertionError(\"Number of items does not match. Provided: \" + items.size() + \"  Actual: \"+ onNextEvents.size());\n  }\n  for (int i=0; i < items.size(); i++) {\n    T expected=items.get(i);\n    T actual=onNextEvents.get(i);\n    if (expected == null) {\n      if (actual != null) {\n        throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ actual+ \"]\");\n      }\n    }\n else     if (!expected.equals(actual)) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 120,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 38
      },
      "nodeContext" : "T expected=items.get(i);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "T"
  }, {
    "nodeContext" : "expected",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 122,
      "startColumnNumber" : 16,
      "endLineNumber" : 122,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 122,
        "startColumnNumber" : 16,
        "endLineNumber" : 122,
        "endColumnNumber" : 32
      },
      "nodeContext" : "expected == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 620,
        "startLineNumber" : 122,
        "startColumnNumber" : 12,
        "endLineNumber" : 132,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (expected == null) {\n  if (actual != null) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ actual+ \"]\");\n  }\n}\n else if (!expected.equals(actual)) {\n  throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 731,
        "startLineNumber" : 119,
        "startColumnNumber" : 47,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  T expected=items.get(i);\n  T actual=onNextEvents.get(i);\n  if (expected == null) {\n    if (actual != null) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ actual+ \"]\");\n    }\n  }\n else   if (!expected.equals(actual)) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 770,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < items.size(); i++) {\n  T expected=items.get(i);\n  T actual=onNextEvents.get(i);\n  if (expected == null) {\n    if (actual != null) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ actual+ \"]\");\n    }\n  }\n else   if (!expected.equals(actual)) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 89,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 992,
        "startLineNumber" : 114,
        "startColumnNumber" : 52,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (onNextEvents.size() != items.size()) {\n    throw new AssertionError(\"Number of items does not match. Provided: \" + items.size() + \"  Actual: \"+ onNextEvents.size());\n  }\n  for (int i=0; i < items.size(); i++) {\n    T expected=items.get(i);\n    T actual=onNextEvents.get(i);\n    if (expected == null) {\n      if (actual != null) {\n        throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ actual+ \"]\");\n      }\n    }\n else     if (!expected.equals(actual)) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1350,
        "startLineNumber" : 106,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Assert that a particular sequence of items was received in order.\n * @param items the sequence of items expected to have been observed\n * @throws AssertionError if the sequence of items observed does not exactly match  {@code items}\n */\npublic void assertReceivedOnNext(List<T> items){\n  if (onNextEvents.size() != items.size()) {\n    throw new AssertionError(\"Number of items does not match. Provided: \" + items.size() + \"  Actual: \"+ onNextEvents.size());\n  }\n  for (int i=0; i < items.size(); i++) {\n    T expected=items.get(i);\n    T actual=onNextEvents.get(i);\n    if (expected == null) {\n      if (actual != null) {\n        throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ actual+ \"]\");\n      }\n    }\n else     if (!expected.equals(actual)) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 122,
        "startColumnNumber" : 16,
        "endLineNumber" : 122,
        "endColumnNumber" : 32
      },
      "nodeContext" : "expected == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "T"
  }, {
    "nodeContext" : "expected",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 127,
      "startColumnNumber" : 24,
      "endLineNumber" : 127,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 127,
        "startColumnNumber" : 24,
        "endLineNumber" : 127,
        "endColumnNumber" : 47
      },
      "nodeContext" : "expected.equals(actual)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 127,
        "startColumnNumber" : 23,
        "endLineNumber" : 127,
        "endColumnNumber" : 47
      },
      "nodeContext" : "!expected.equals(actual)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 350,
        "startLineNumber" : 127,
        "startColumnNumber" : 19,
        "endLineNumber" : 132,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!expected.equals(actual)) {\n  throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 620,
        "startLineNumber" : 122,
        "startColumnNumber" : 12,
        "endLineNumber" : 132,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (expected == null) {\n  if (actual != null) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ actual+ \"]\");\n  }\n}\n else if (!expected.equals(actual)) {\n  throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 731,
        "startLineNumber" : 119,
        "startColumnNumber" : 47,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  T expected=items.get(i);\n  T actual=onNextEvents.get(i);\n  if (expected == null) {\n    if (actual != null) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ actual+ \"]\");\n    }\n  }\n else   if (!expected.equals(actual)) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 770,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < items.size(); i++) {\n  T expected=items.get(i);\n  T actual=onNextEvents.get(i);\n  if (expected == null) {\n    if (actual != null) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ actual+ \"]\");\n    }\n  }\n else   if (!expected.equals(actual)) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 89,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 992,
        "startLineNumber" : 114,
        "startColumnNumber" : 52,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (onNextEvents.size() != items.size()) {\n    throw new AssertionError(\"Number of items does not match. Provided: \" + items.size() + \"  Actual: \"+ onNextEvents.size());\n  }\n  for (int i=0; i < items.size(); i++) {\n    T expected=items.get(i);\n    T actual=onNextEvents.get(i);\n    if (expected == null) {\n      if (actual != null) {\n        throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ actual+ \"]\");\n      }\n    }\n else     if (!expected.equals(actual)) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1350,
        "startLineNumber" : 106,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Assert that a particular sequence of items was received in order.\n * @param items the sequence of items expected to have been observed\n * @throws AssertionError if the sequence of items observed does not exactly match  {@code items}\n */\npublic void assertReceivedOnNext(List<T> items){\n  if (onNextEvents.size() != items.size()) {\n    throw new AssertionError(\"Number of items does not match. Provided: \" + items.size() + \"  Actual: \"+ onNextEvents.size());\n  }\n  for (int i=0; i < items.size(); i++) {\n    T expected=items.get(i);\n    T actual=onNextEvents.get(i);\n    if (expected == null) {\n      if (actual != null) {\n        throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ actual+ \"]\");\n      }\n    }\n else     if (!expected.equals(actual)) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 127,
        "startColumnNumber" : 23,
        "endLineNumber" : 127,
        "endColumnNumber" : 47
      },
      "nodeContext" : "!expected.equals(actual)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "T"
  }, {
    "nodeContext" : "expected",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 129,
      "startColumnNumber" : 48,
      "endLineNumber" : 129,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 257,
        "startLineNumber" : 128,
        "startColumnNumber" : 41,
        "endLineNumber" : 130,
        "endColumnNumber" : 127
      },
      "nodeContext" : "\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 277,
        "startLineNumber" : 128,
        "startColumnNumber" : 22,
        "endLineNumber" : 130,
        "endColumnNumber" : 128
      },
      "nodeContext" : "new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 29,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 284,
        "startLineNumber" : 128,
        "startColumnNumber" : 16,
        "endLineNumber" : 130,
        "endColumnNumber" : 129
      },
      "nodeContext" : "throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 320,
        "startLineNumber" : 127,
        "startColumnNumber" : 49,
        "endLineNumber" : 132,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 350,
        "startLineNumber" : 127,
        "startColumnNumber" : 19,
        "endLineNumber" : 132,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!expected.equals(actual)) {\n  throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 620,
        "startLineNumber" : 122,
        "startColumnNumber" : 12,
        "endLineNumber" : 132,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (expected == null) {\n  if (actual != null) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ actual+ \"]\");\n  }\n}\n else if (!expected.equals(actual)) {\n  throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 731,
        "startLineNumber" : 119,
        "startColumnNumber" : 47,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  T expected=items.get(i);\n  T actual=onNextEvents.get(i);\n  if (expected == null) {\n    if (actual != null) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ actual+ \"]\");\n    }\n  }\n else   if (!expected.equals(actual)) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 770,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < items.size(); i++) {\n  T expected=items.get(i);\n  T actual=onNextEvents.get(i);\n  if (expected == null) {\n    if (actual != null) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ actual+ \"]\");\n    }\n  }\n else   if (!expected.equals(actual)) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 89,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 992,
        "startLineNumber" : 114,
        "startColumnNumber" : 52,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (onNextEvents.size() != items.size()) {\n    throw new AssertionError(\"Number of items does not match. Provided: \" + items.size() + \"  Actual: \"+ onNextEvents.size());\n  }\n  for (int i=0; i < items.size(); i++) {\n    T expected=items.get(i);\n    T actual=onNextEvents.get(i);\n    if (expected == null) {\n      if (actual != null) {\n        throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ actual+ \"]\");\n      }\n    }\n else     if (!expected.equals(actual)) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1350,
        "startLineNumber" : 106,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Assert that a particular sequence of items was received in order.\n * @param items the sequence of items expected to have been observed\n * @throws AssertionError if the sequence of items observed does not exactly match  {@code items}\n */\npublic void assertReceivedOnNext(List<T> items){\n  if (onNextEvents.size() != items.size()) {\n    throw new AssertionError(\"Number of items does not match. Provided: \" + items.size() + \"  Actual: \"+ onNextEvents.size());\n  }\n  for (int i=0; i < items.size(); i++) {\n    T expected=items.get(i);\n    T actual=onNextEvents.get(i);\n    if (expected == null) {\n      if (actual != null) {\n        throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ actual+ \"]\");\n      }\n    }\n else     if (!expected.equals(actual)) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 257,
        "startLineNumber" : 128,
        "startColumnNumber" : 41,
        "endLineNumber" : 130,
        "endColumnNumber" : 127
      },
      "nodeContext" : "\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 26,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "T"
  }, {
    "nodeContext" : "expected",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 129,
      "startColumnNumber" : 67,
      "endLineNumber" : 129,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 129,
        "startColumnNumber" : 67,
        "endLineNumber" : 129,
        "endColumnNumber" : 86
      },
      "nodeContext" : "expected.getClass()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 129,
        "startColumnNumber" : 67,
        "endLineNumber" : 129,
        "endColumnNumber" : 102
      },
      "nodeContext" : "expected.getClass().getSimpleName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 257,
        "startLineNumber" : 128,
        "startColumnNumber" : 41,
        "endLineNumber" : 130,
        "endColumnNumber" : 127
      },
      "nodeContext" : "\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 277,
        "startLineNumber" : 128,
        "startColumnNumber" : 22,
        "endLineNumber" : 130,
        "endColumnNumber" : 128
      },
      "nodeContext" : "new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 29,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 284,
        "startLineNumber" : 128,
        "startColumnNumber" : 16,
        "endLineNumber" : 130,
        "endColumnNumber" : 129
      },
      "nodeContext" : "throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 320,
        "startLineNumber" : 127,
        "startColumnNumber" : 49,
        "endLineNumber" : 132,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 350,
        "startLineNumber" : 127,
        "startColumnNumber" : 19,
        "endLineNumber" : 132,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!expected.equals(actual)) {\n  throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 620,
        "startLineNumber" : 122,
        "startColumnNumber" : 12,
        "endLineNumber" : 132,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (expected == null) {\n  if (actual != null) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ actual+ \"]\");\n  }\n}\n else if (!expected.equals(actual)) {\n  throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 731,
        "startLineNumber" : 119,
        "startColumnNumber" : 47,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  T expected=items.get(i);\n  T actual=onNextEvents.get(i);\n  if (expected == null) {\n    if (actual != null) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ actual+ \"]\");\n    }\n  }\n else   if (!expected.equals(actual)) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 770,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < items.size(); i++) {\n  T expected=items.get(i);\n  T actual=onNextEvents.get(i);\n  if (expected == null) {\n    if (actual != null) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ actual+ \"]\");\n    }\n  }\n else   if (!expected.equals(actual)) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 89,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 992,
        "startLineNumber" : 114,
        "startColumnNumber" : 52,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (onNextEvents.size() != items.size()) {\n    throw new AssertionError(\"Number of items does not match. Provided: \" + items.size() + \"  Actual: \"+ onNextEvents.size());\n  }\n  for (int i=0; i < items.size(); i++) {\n    T expected=items.get(i);\n    T actual=onNextEvents.get(i);\n    if (expected == null) {\n      if (actual != null) {\n        throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ actual+ \"]\");\n      }\n    }\n else     if (!expected.equals(actual)) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1350,
        "startLineNumber" : 106,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Assert that a particular sequence of items was received in order.\n * @param items the sequence of items expected to have been observed\n * @throws AssertionError if the sequence of items observed does not exactly match  {@code items}\n */\npublic void assertReceivedOnNext(List<T> items){\n  if (onNextEvents.size() != items.size()) {\n    throw new AssertionError(\"Number of items does not match. Provided: \" + items.size() + \"  Actual: \"+ onNextEvents.size());\n  }\n  for (int i=0; i < items.size(); i++) {\n    T expected=items.get(i);\n    T actual=onNextEvents.get(i);\n    if (expected == null) {\n      if (actual != null) {\n        throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ actual+ \"]\");\n      }\n    }\n else     if (!expected.equals(actual)) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ actual+ \"] (\"+ (actual != null ? actual.getClass().getSimpleName() : \"null\")+ \")\");\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 129,
        "startColumnNumber" : 67,
        "endLineNumber" : 129,
        "endColumnNumber" : 102
      },
      "nodeContext" : "expected.getClass().getSimpleName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "T"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 120,
    "startColumnNumber" : 14,
    "endLineNumber" : 120,
    "endColumnNumber" : 22
  }, {
    "charLength" : 8,
    "startLineNumber" : 122,
    "startColumnNumber" : 16,
    "endLineNumber" : 122,
    "endColumnNumber" : 24
  }, {
    "charLength" : 8,
    "startLineNumber" : 127,
    "startColumnNumber" : 24,
    "endLineNumber" : 127,
    "endColumnNumber" : 32
  }, {
    "charLength" : 8,
    "startLineNumber" : 129,
    "startColumnNumber" : 48,
    "endLineNumber" : 129,
    "endColumnNumber" : 56
  }, {
    "charLength" : 8,
    "startLineNumber" : 129,
    "startColumnNumber" : 67,
    "endLineNumber" : 129,
    "endColumnNumber" : 75
  } ],
  "layoutRelationDataList" : [ ]
}