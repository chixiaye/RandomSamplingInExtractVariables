{
  "id" : 9,
  "expression" : "Math.round(pitch * 100.0f) / 100.0f",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "38c79bbc11c3c1e81fdfdb03ba8e98cac34d1041",
  "filePath" : "app/src/main/java/org/schabi/newpipe/player/BasePlayer.java",
  "occurrences" : 2,
  "expressionList" : [ {
    "nodeContext" : "Math.round(pitch * 100.0f) / 100.0f",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 1485,
      "startColumnNumber" : 58,
      "endLineNumber" : 1485,
      "endColumnNumber" : 93
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 1485,
        "startColumnNumber" : 8,
        "endLineNumber" : 1485,
        "endColumnNumber" : 105
      },
      "nodeContext" : "savePlaybackParametersToPreferences(roundedSpeed,Math.round(pitch * 100.0f) / 100.0f,skipSilence)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 1485,
        "startColumnNumber" : 8,
        "endLineNumber" : 1485,
        "endColumnNumber" : 107
      },
      "nodeContext" : "savePlaybackParametersToPreferences(roundedSpeed,Math.round(pitch * 100.0f) / 100.0f,skipSilence);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 383,
        "startLineNumber" : 1481,
        "startColumnNumber" : 65,
        "endLineNumber" : 1488,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final float roundedSpeed=Math.round(speed * 100.0f) / 100.0f;\n  final float Math.round(pitch * 100.0f) / 100.0f=Math.round(pitch * 100.0f) / 100.0f;\n  savePlaybackParametersToPreferences(roundedSpeed,Math.round(pitch * 100.0f) / 100.0f,skipSilence);\n  simpleExoPlayer.setPlaybackParameters(new PlaybackParameters(roundedSpeed,Math.round(pitch * 100.0f) / 100.0f,skipSilence));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 864,
        "startLineNumber" : 1473,
        "startColumnNumber" : 4,
        "endLineNumber" : 1488,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Sets the playback parameters of the player, and also saves them to shared preferences. Speed and pitch are rounded up to 2 decimal places before being used or saved.\n * @param speed the playback speed, will be rounded to up to 2 decimal places\n * @param pitch the playback pitch, will be rounded to up to 2 decimal places\n * @param skipSilence skip silence during playback\n */\npublic void setPlaybackParameters(final float speed,final float pitch,final boolean skipSilence){\n  final float roundedSpeed=Math.round(speed * 100.0f) / 100.0f;\n  final float Math.round(pitch * 100.0f) / 100.0f=Math.round(pitch * 100.0f) / 100.0f;\n  savePlaybackParametersToPreferences(roundedSpeed,Math.round(pitch * 100.0f) / 100.0f,skipSilence);\n  simpleExoPlayer.setPlaybackParameters(new PlaybackParameters(roundedSpeed,Math.round(pitch * 100.0f) / 100.0f,skipSilence));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 67,
      "astHeight" : 8
    } ],
    "tokenLength" : 9,
    "type" : "float"
  }, {
    "nodeContext" : "Math.round(pitch * 100.0f) / 100.0f",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 1487,
      "startColumnNumber" : 53,
      "endLineNumber" : 1487,
      "endColumnNumber" : 88
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 1487,
        "startColumnNumber" : 16,
        "endLineNumber" : 1487,
        "endColumnNumber" : 100
      },
      "nodeContext" : "new PlaybackParameters(roundedSpeed,Math.round(pitch * 100.0f) / 100.0f,skipSilence)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 1486,
        "startColumnNumber" : 8,
        "endLineNumber" : 1487,
        "endColumnNumber" : 80
      },
      "nodeContext" : "simpleExoPlayer.setPlaybackParameters(new PlaybackParameters(roundedSpeed,Math.round(pitch * 100.0f) / 100.0f,skipSilence))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 1486,
        "startColumnNumber" : 8,
        "endLineNumber" : 1487,
        "endColumnNumber" : 81
      },
      "nodeContext" : "simpleExoPlayer.setPlaybackParameters(new PlaybackParameters(roundedSpeed,Math.round(pitch * 100.0f) / 100.0f,skipSilence));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 383,
        "startLineNumber" : 1481,
        "startColumnNumber" : 65,
        "endLineNumber" : 1488,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final float roundedSpeed=Math.round(speed * 100.0f) / 100.0f;\n  final float Math.round(pitch * 100.0f) / 100.0f=Math.round(pitch * 100.0f) / 100.0f;\n  savePlaybackParametersToPreferences(roundedSpeed,Math.round(pitch * 100.0f) / 100.0f,skipSilence);\n  simpleExoPlayer.setPlaybackParameters(new PlaybackParameters(roundedSpeed,Math.round(pitch * 100.0f) / 100.0f,skipSilence));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 864,
        "startLineNumber" : 1473,
        "startColumnNumber" : 4,
        "endLineNumber" : 1488,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Sets the playback parameters of the player, and also saves them to shared preferences. Speed and pitch are rounded up to 2 decimal places before being used or saved.\n * @param speed the playback speed, will be rounded to up to 2 decimal places\n * @param pitch the playback pitch, will be rounded to up to 2 decimal places\n * @param skipSilence skip silence during playback\n */\npublic void setPlaybackParameters(final float speed,final float pitch,final boolean skipSilence){\n  final float roundedSpeed=Math.round(speed * 100.0f) / 100.0f;\n  final float Math.round(pitch * 100.0f) / 100.0f=Math.round(pitch * 100.0f) / 100.0f;\n  savePlaybackParametersToPreferences(roundedSpeed,Math.round(pitch * 100.0f) / 100.0f,skipSilence);\n  simpleExoPlayer.setPlaybackParameters(new PlaybackParameters(roundedSpeed,Math.round(pitch * 100.0f) / 100.0f,skipSilence));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 67,
      "astHeight" : 9
    } ],
    "tokenLength" : 9,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 1485,
    "startColumnNumber" : 58,
    "endLineNumber" : 1485,
    "endColumnNumber" : 93
  }, {
    "charLength" : 35,
    "startLineNumber" : 1487,
    "startColumnNumber" : 53,
    "endLineNumber" : 1487,
    "endColumnNumber" : 88
  } ],
  "layoutRelationDataList" : [ ]
}