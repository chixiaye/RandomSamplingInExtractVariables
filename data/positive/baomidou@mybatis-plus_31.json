{
  "id" : 31,
  "expression" : "properties.getProperty(\"versionHandler\")",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "929f51022bbd8885d09831dd9f560f6779a2498e",
  "filePath" : "mybatis-plus/src/main/java/com/baomidou/mybatisplus/plugins/OptimisticLockerInterceptor.java",
  "occurrences" : 2,
  "expressionList" : [ {
    "nodeContext" : "properties.getProperty(\"versionHandler\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 40,
      "startLineNumber" : 178,
      "startColumnNumber" : 29,
      "endLineNumber" : 178,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 178,
        "startColumnNumber" : 6,
        "endLineNumber" : 178,
        "endColumnNumber" : 70
      },
      "nodeContext" : "StringUtils.isNotEmpty(properties.getProperty(\"versionHandler\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 284,
        "startLineNumber" : 178,
        "startColumnNumber" : 2,
        "endLineNumber" : 184,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (StringUtils.isNotEmpty(properties.getProperty(\"versionHandler\"))) {\n  try {\n    versionHandler=(VersionHandler)Class.forName(properties.getProperty(\"versionHandler\")).newInstance();\n  }\n catch (  Exception e) {\n    throw ExceptionFactory.wrapException(\"乐观锁插件自定义处理器注入失败\",e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 396,
        "startLineNumber" : 176,
        "startColumnNumber" : 50,
        "endLineNumber" : 185,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String properties.getProperty(\"versionHandler\")=properties.getProperty(\"versionHandler\");\n  if (StringUtils.isNotEmpty(properties.getProperty(\"versionHandler\"))) {\n    try {\n      versionHandler=(VersionHandler)Class.forName(properties.getProperty(\"versionHandler\")).newInstance();\n    }\n catch (    Exception e) {\n      throw ExceptionFactory.wrapException(\"乐观锁插件自定义处理器注入失败\",e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 444,
        "startLineNumber" : 176,
        "startColumnNumber" : 1,
        "endLineNumber" : 185,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public void setProperties(Properties properties){\n  String properties.getProperty(\"versionHandler\")=properties.getProperty(\"versionHandler\");\n  if (StringUtils.isNotEmpty(properties.getProperty(\"versionHandler\"))) {\n    try {\n      versionHandler=(VersionHandler)Class.forName(properties.getProperty(\"versionHandler\")).newInstance();\n    }\n catch (    Exception e) {\n      throw ExceptionFactory.wrapException(\"乐观锁插件自定义处理器注入失败\",e);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 53,
      "astHeight" : 12
    } ],
    "tokenLength" : 3,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "properties.getProperty(\"versionHandler\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 40,
      "startLineNumber" : 180,
      "startColumnNumber" : 52,
      "endLineNumber" : 180,
      "endColumnNumber" : 92
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 180,
        "startColumnNumber" : 38,
        "endLineNumber" : 180,
        "endColumnNumber" : 93
      },
      "nodeContext" : "Class.forName(properties.getProperty(\"versionHandler\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 180,
        "startColumnNumber" : 38,
        "endLineNumber" : 180,
        "endColumnNumber" : 107
      },
      "nodeContext" : "Class.forName(properties.getProperty(\"versionHandler\")).newInstance()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 180,
        "startColumnNumber" : 21,
        "endLineNumber" : 180,
        "endColumnNumber" : 106
      },
      "nodeContext" : "(VersionHandler)Class.forName(properties.getProperty(\"versionHandler\")).newInstance()",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 180,
        "startColumnNumber" : 4,
        "endLineNumber" : 180,
        "endColumnNumber" : 104
      },
      "nodeContext" : "versionHandler=(VersionHandler)Class.forName(properties.getProperty(\"versionHandler\")).newInstance()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 180,
        "startColumnNumber" : 4,
        "endLineNumber" : 180,
        "endColumnNumber" : 106
      },
      "nodeContext" : "versionHandler=(VersionHandler)Class.forName(properties.getProperty(\"versionHandler\")).newInstance();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 179,
        "startColumnNumber" : 7,
        "endLineNumber" : 181,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  versionHandler=(VersionHandler)Class.forName(properties.getProperty(\"versionHandler\")).newInstance();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 179,
        "startColumnNumber" : 3,
        "endLineNumber" : 183,
        "endColumnNumber" : 4
      },
      "nodeContext" : "try {\n  versionHandler=(VersionHandler)Class.forName(properties.getProperty(\"versionHandler\")).newInstance();\n}\n catch (Exception e) {\n  throw ExceptionFactory.wrapException(\"乐观锁插件自定义处理器注入失败\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 29,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 214,
        "startLineNumber" : 178,
        "startColumnNumber" : 51,
        "endLineNumber" : 184,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    versionHandler=(VersionHandler)Class.forName(properties.getProperty(\"versionHandler\")).newInstance();\n  }\n catch (  Exception e) {\n    throw ExceptionFactory.wrapException(\"乐观锁插件自定义处理器注入失败\",e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 284,
        "startLineNumber" : 178,
        "startColumnNumber" : 2,
        "endLineNumber" : 184,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (StringUtils.isNotEmpty(properties.getProperty(\"versionHandler\"))) {\n  try {\n    versionHandler=(VersionHandler)Class.forName(properties.getProperty(\"versionHandler\")).newInstance();\n  }\n catch (  Exception e) {\n    throw ExceptionFactory.wrapException(\"乐观锁插件自定义处理器注入失败\",e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 396,
        "startLineNumber" : 176,
        "startColumnNumber" : 50,
        "endLineNumber" : 185,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String properties.getProperty(\"versionHandler\")=properties.getProperty(\"versionHandler\");\n  if (StringUtils.isNotEmpty(properties.getProperty(\"versionHandler\"))) {\n    try {\n      versionHandler=(VersionHandler)Class.forName(properties.getProperty(\"versionHandler\")).newInstance();\n    }\n catch (    Exception e) {\n      throw ExceptionFactory.wrapException(\"乐观锁插件自定义处理器注入失败\",e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 444,
        "startLineNumber" : 176,
        "startColumnNumber" : 1,
        "endLineNumber" : 185,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public void setProperties(Properties properties){\n  String properties.getProperty(\"versionHandler\")=properties.getProperty(\"versionHandler\");\n  if (StringUtils.isNotEmpty(properties.getProperty(\"versionHandler\"))) {\n    try {\n      versionHandler=(VersionHandler)Class.forName(properties.getProperty(\"versionHandler\")).newInstance();\n    }\n catch (    Exception e) {\n      throw ExceptionFactory.wrapException(\"乐观锁插件自定义处理器注入失败\",e);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 53,
      "astHeight" : 13
    } ],
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 40,
    "startLineNumber" : 178,
    "startColumnNumber" : 29,
    "endLineNumber" : 178,
    "endColumnNumber" : 69
  }, {
    "charLength" : 40,
    "startLineNumber" : 180,
    "startColumnNumber" : 52,
    "endLineNumber" : 180,
    "endColumnNumber" : 92
  } ],
  "layoutRelationDataList" : [ ]
}