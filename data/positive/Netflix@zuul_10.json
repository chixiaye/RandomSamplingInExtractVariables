{
  "id" : 10,
  "expression" : "HttpHeaderNames.get(header.getKey())",
  "projectName" : "Netflix@zuul",
  "commitID" : "39fedc6a81576f7447fb70372024ec78f20e3077",
  "filePath" : "zuul-servletapi/src/main/java/com/netflix/zuul/ribbon/RibbonOrigin.java",
  "occurrences" : 2,
  "expressionList" : [ {
    "nodeContext" : "HttpHeaderNames.get(header.getKey())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 202,
      "startColumnNumber" : 49,
      "endLineNumber" : 202,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 202,
        "startColumnNumber" : 16,
        "endLineNumber" : 202,
        "endColumnNumber" : 86
      },
      "nodeContext" : "ProxyUtils.isValidResponseHeader(HttpHeaderNames.get(header.getKey()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 202,
        "startColumnNumber" : 12,
        "endLineNumber" : 204,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (ProxyUtils.isValidResponseHeader(HttpHeaderNames.get(header.getKey()))) {\n  respMsg.getHeaders().add(HttpHeaderNames.get(header.getKey()),header.getValue());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 262,
        "startLineNumber" : 200,
        "startColumnNumber" : 93,
        "endLineNumber" : 205,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HeaderName HttpHeaderNames.get(header.getKey())=HttpHeaderNames.get(header.getKey());\n  if (ProxyUtils.isValidResponseHeader(HttpHeaderNames.get(header.getKey()))) {\n    respMsg.getHeaders().add(HttpHeaderNames.get(header.getKey()),header.getValue());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 346,
        "startLineNumber" : 200,
        "startColumnNumber" : 8,
        "endLineNumber" : 205,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Map.Entry<String,String> header : ribbonResp.getHttpHeaders().getAllHeaders()) {\n  HeaderName HttpHeaderNames.get(header.getKey())=HttpHeaderNames.get(header.getKey());\n  if (ProxyUtils.isValidResponseHeader(HttpHeaderNames.get(header.getKey()))) {\n    respMsg.getHeaders().add(HttpHeaderNames.get(header.getKey()),header.getValue());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 50,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 733,
        "startLineNumber" : 196,
        "startColumnNumber" : 4,
        "endLineNumber" : 217,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HttpResponseMessage respMsg=new HttpResponseMessageImpl(request.getContext(),request,500);\n  respMsg.setStatus(ribbonResp.getStatus());\n  for (  Map.Entry<String,String> header : ribbonResp.getHttpHeaders().getAllHeaders()) {\n    HeaderName HttpHeaderNames.get(header.getKey())=HttpHeaderNames.get(header.getKey());\n    if (ProxyUtils.isValidResponseHeader(HttpHeaderNames.get(header.getKey()))) {\n      respMsg.getHeaders().add(HttpHeaderNames.get(header.getKey()),header.getValue());\n    }\n  }\n  respMsg.storeInboundResponse();\n  if (ribbonResp.hasEntity()) {\n    Observable<ByteBuf> responseBodyObs=ByteBufUtils.fromInputStream(ribbonResp.getInputStream());\n    respMsg.setBodyStream(responseBodyObs);\n  }\n  return respMsg;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 840,
        "startLineNumber" : 195,
        "startColumnNumber" : 4,
        "endLineNumber" : 217,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected HttpResponseMessage createHttpResponseMessage(HttpResponse ribbonResp,HttpRequestMessage request){\n  HttpResponseMessage respMsg=new HttpResponseMessageImpl(request.getContext(),request,500);\n  respMsg.setStatus(ribbonResp.getStatus());\n  for (  Map.Entry<String,String> header : ribbonResp.getHttpHeaders().getAllHeaders()) {\n    HeaderName HttpHeaderNames.get(header.getKey())=HttpHeaderNames.get(header.getKey());\n    if (ProxyUtils.isValidResponseHeader(HttpHeaderNames.get(header.getKey()))) {\n      respMsg.getHeaders().add(HttpHeaderNames.get(header.getKey()),header.getValue());\n    }\n  }\n  respMsg.storeInboundResponse();\n  if (ribbonResp.hasEntity()) {\n    Observable<ByteBuf> responseBodyObs=ByteBufUtils.fromInputStream(ribbonResp.getInputStream());\n    respMsg.setBodyStream(responseBodyObs);\n  }\n  return respMsg;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 114,
      "astHeight" : 10
    } ],
    "tokenLength" : 4,
    "type" : "com.netflix.zuul.message.HeaderName"
  }, {
    "nodeContext" : "HttpHeaderNames.get(header.getKey())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 203,
      "startColumnNumber" : 41,
      "endLineNumber" : 203,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 203,
        "startColumnNumber" : 16,
        "endLineNumber" : 203,
        "endColumnNumber" : 96
      },
      "nodeContext" : "respMsg.getHeaders().add(HttpHeaderNames.get(header.getKey()),header.getValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 203,
        "startColumnNumber" : 16,
        "endLineNumber" : 203,
        "endColumnNumber" : 98
      },
      "nodeContext" : "respMsg.getHeaders().add(HttpHeaderNames.get(header.getKey()),header.getValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 202,
        "startColumnNumber" : 62,
        "endLineNumber" : 204,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  respMsg.getHeaders().add(HttpHeaderNames.get(header.getKey()),header.getValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 202,
        "startColumnNumber" : 12,
        "endLineNumber" : 204,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (ProxyUtils.isValidResponseHeader(HttpHeaderNames.get(header.getKey()))) {\n  respMsg.getHeaders().add(HttpHeaderNames.get(header.getKey()),header.getValue());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 262,
        "startLineNumber" : 200,
        "startColumnNumber" : 93,
        "endLineNumber" : 205,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HeaderName HttpHeaderNames.get(header.getKey())=HttpHeaderNames.get(header.getKey());\n  if (ProxyUtils.isValidResponseHeader(HttpHeaderNames.get(header.getKey()))) {\n    respMsg.getHeaders().add(HttpHeaderNames.get(header.getKey()),header.getValue());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 346,
        "startLineNumber" : 200,
        "startColumnNumber" : 8,
        "endLineNumber" : 205,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Map.Entry<String,String> header : ribbonResp.getHttpHeaders().getAllHeaders()) {\n  HeaderName HttpHeaderNames.get(header.getKey())=HttpHeaderNames.get(header.getKey());\n  if (ProxyUtils.isValidResponseHeader(HttpHeaderNames.get(header.getKey()))) {\n    respMsg.getHeaders().add(HttpHeaderNames.get(header.getKey()),header.getValue());\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 50,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 733,
        "startLineNumber" : 196,
        "startColumnNumber" : 4,
        "endLineNumber" : 217,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HttpResponseMessage respMsg=new HttpResponseMessageImpl(request.getContext(),request,500);\n  respMsg.setStatus(ribbonResp.getStatus());\n  for (  Map.Entry<String,String> header : ribbonResp.getHttpHeaders().getAllHeaders()) {\n    HeaderName HttpHeaderNames.get(header.getKey())=HttpHeaderNames.get(header.getKey());\n    if (ProxyUtils.isValidResponseHeader(HttpHeaderNames.get(header.getKey()))) {\n      respMsg.getHeaders().add(HttpHeaderNames.get(header.getKey()),header.getValue());\n    }\n  }\n  respMsg.storeInboundResponse();\n  if (ribbonResp.hasEntity()) {\n    Observable<ByteBuf> responseBodyObs=ByteBufUtils.fromInputStream(ribbonResp.getInputStream());\n    respMsg.setBodyStream(responseBodyObs);\n  }\n  return respMsg;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 840,
        "startLineNumber" : 195,
        "startColumnNumber" : 4,
        "endLineNumber" : 217,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected HttpResponseMessage createHttpResponseMessage(HttpResponse ribbonResp,HttpRequestMessage request){\n  HttpResponseMessage respMsg=new HttpResponseMessageImpl(request.getContext(),request,500);\n  respMsg.setStatus(ribbonResp.getStatus());\n  for (  Map.Entry<String,String> header : ribbonResp.getHttpHeaders().getAllHeaders()) {\n    HeaderName HttpHeaderNames.get(header.getKey())=HttpHeaderNames.get(header.getKey());\n    if (ProxyUtils.isValidResponseHeader(HttpHeaderNames.get(header.getKey()))) {\n      respMsg.getHeaders().add(HttpHeaderNames.get(header.getKey()),header.getValue());\n    }\n  }\n  respMsg.storeInboundResponse();\n  if (ribbonResp.hasEntity()) {\n    Observable<ByteBuf> responseBodyObs=ByteBufUtils.fromInputStream(ribbonResp.getInputStream());\n    respMsg.setBodyStream(responseBodyObs);\n  }\n  return respMsg;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 114,
      "astHeight" : 11
    } ],
    "tokenLength" : 4,
    "type" : "com.netflix.zuul.message.HeaderName"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 202,
    "startColumnNumber" : 49,
    "endLineNumber" : 202,
    "endColumnNumber" : 85
  }, {
    "charLength" : 36,
    "startLineNumber" : 203,
    "startColumnNumber" : 41,
    "endLineNumber" : 203,
    "endColumnNumber" : 77
  } ],
  "layoutRelationDataList" : [ ]
}