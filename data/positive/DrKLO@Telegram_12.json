{
  "id" : 12,
  "expression" : "checkDrawable.getIntrinsicWidth()",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "fdaf4555c5d1551c9a6914a3a8279f84e7ed1ea8",
  "filePath" : "TMessagesProj/src/main/java/org/telegram/ui/Views/CheckBox.java",
  "occurrences" : 2,
  "expressionList" : [ {
    "nodeContext" : "checkDrawable.getIntrinsicWidth()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 144,
      "startColumnNumber" : 42,
      "endLineNumber" : 144,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 144,
        "startColumnNumber" : 21,
        "endLineNumber" : 144,
        "endColumnNumber" : 75
      },
      "nodeContext" : "getMeasuredWidth() - checkDrawable.getIntrinsicWidth()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 144,
        "startColumnNumber" : 20,
        "endLineNumber" : 144,
        "endColumnNumber" : 76
      },
      "nodeContext" : "(getMeasuredWidth() - checkDrawable.getIntrinsicWidth())",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 144,
        "startColumnNumber" : 20,
        "endLineNumber" : 144,
        "endColumnNumber" : 80
      },
      "nodeContext" : "(getMeasuredWidth() - checkDrawable.getIntrinsicWidth()) / 2",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 144,
        "startColumnNumber" : 16,
        "endLineNumber" : 144,
        "endColumnNumber" : 78
      },
      "nodeContext" : "x=(getMeasuredWidth() - checkDrawable.getIntrinsicWidth()) / 2",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 144,
        "startColumnNumber" : 12,
        "endLineNumber" : 144,
        "endColumnNumber" : 80
      },
      "nodeContext" : "int x=(getMeasuredWidth() - checkDrawable.getIntrinsicWidth()) / 2;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1860,
        "startLineNumber" : 124,
        "startColumnNumber" : 27,
        "endLineNumber" : 152,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  dracheckDrawable.getIntrinsicWidth()Bitmap.eraseColor(0);\n  float rad=getMeasuredWidth() / 2;\n  float roundProgress=progress >= 0.5f ? 1.0f : progress / 0.5f;\n  float checkProgress=progress < 0.5f ? 0.0f : (progress - 0.5f) / 0.5f;\n  float roundProgressCheckState=isCheckAnimation ? progress : (1.0f - progress);\n  if (roundProgressCheckState < progressBounceDiff) {\n    rad-=AndroidUtilities.dp(2) * roundProgressCheckState / progressBounceDiff;\n  }\n else   if (roundProgressCheckState < progressBounceDiff * 2) {\n    rad-=AndroidUtilities.dp(2) - AndroidUtilities.dp(2) * (roundProgressCheckState - progressBounceDiff) / progressBounceDiff;\n  }\n  bitmapCanvas.dracheckDrawable.getIntrinsicWidth()Circle(getMeasuredWidth() / 2,getMeasuredHeight() / 2,rad,paint);\n  bitmapCanvas.dracheckDrawable.getIntrinsicWidth()Circle(getMeasuredWidth() / 2,getMeasuredHeight() / 2,rad * (1 - roundProgress),eraser);\n  canvas.dracheckDrawable.getIntrinsicWidth()Bitmap(dracheckDrawable.getIntrinsicWidth()Bitmap,0,0,null);\n  checkBitmap.eraseColor(0);\n  int checkDrawable.getIntrinsicWidth()=checkDracheckDrawable.getIntrinsicWidth()able.getIntrinsicWidth();\n  int h=checkDracheckDrawable.getIntrinsicWidth()able.getIntrinsicHeight();\n  int x=(getMeasuredWidth() - checkDrawable.getIntrinsicWidth()) / 2;\n  int y=(getMeasuredHeight() - h) / 2;\n  checkDracheckDrawable.getIntrinsicWidth()able.setBounds(x,y,x + checkDrawable.getIntrinsicWidth(),y + h);\n  checkDracheckDrawable.getIntrinsicWidth()able.dracheckDrawable.getIntrinsicWidth()(checkCanvas);\n  checkCanvas.dracheckDrawable.getIntrinsicWidth()Circle(getMeasuredWidth() / 2 - AndroidUtilities.dp(2.5f),getMeasuredHeight() / 2 + AndroidUtilities.dp(4),((getMeasuredWidth() + AndroidUtilities.dp(6)) / 2) * (1 - checkProgress),eraser2);\n  canvas.dracheckDrawable.getIntrinsicWidth()Bitmap(checkBitmap,0,0,null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 242,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1879,
        "startLineNumber" : 124,
        "startColumnNumber" : 8,
        "endLineNumber" : 152,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (progress != 0) {\n  dracheckDrawable.getIntrinsicWidth()Bitmap.eraseColor(0);\n  float rad=getMeasuredWidth() / 2;\n  float roundProgress=progress >= 0.5f ? 1.0f : progress / 0.5f;\n  float checkProgress=progress < 0.5f ? 0.0f : (progress - 0.5f) / 0.5f;\n  float roundProgressCheckState=isCheckAnimation ? progress : (1.0f - progress);\n  if (roundProgressCheckState < progressBounceDiff) {\n    rad-=AndroidUtilities.dp(2) * roundProgressCheckState / progressBounceDiff;\n  }\n else   if (roundProgressCheckState < progressBounceDiff * 2) {\n    rad-=AndroidUtilities.dp(2) - AndroidUtilities.dp(2) * (roundProgressCheckState - progressBounceDiff) / progressBounceDiff;\n  }\n  bitmapCanvas.dracheckDrawable.getIntrinsicWidth()Circle(getMeasuredWidth() / 2,getMeasuredHeight() / 2,rad,paint);\n  bitmapCanvas.dracheckDrawable.getIntrinsicWidth()Circle(getMeasuredWidth() / 2,getMeasuredHeight() / 2,rad * (1 - roundProgress),eraser);\n  canvas.dracheckDrawable.getIntrinsicWidth()Bitmap(dracheckDrawable.getIntrinsicWidth()Bitmap,0,0,null);\n  checkBitmap.eraseColor(0);\n  int checkDrawable.getIntrinsicWidth()=checkDracheckDrawable.getIntrinsicWidth()able.getIntrinsicWidth();\n  int h=checkDracheckDrawable.getIntrinsicWidth()able.getIntrinsicHeight();\n  int x=(getMeasuredWidth() - checkDrawable.getIntrinsicWidth()) / 2;\n  int y=(getMeasuredHeight() - h) / 2;\n  checkDracheckDrawable.getIntrinsicWidth()able.setBounds(x,y,x + checkDrawable.getIntrinsicWidth(),y + h);\n  checkDracheckDrawable.getIntrinsicWidth()able.dracheckDrawable.getIntrinsicWidth()(checkCanvas);\n  checkCanvas.dracheckDrawable.getIntrinsicWidth()Circle(getMeasuredWidth() / 2 - AndroidUtilities.dp(2.5f),getMeasuredHeight() / 2 + AndroidUtilities.dp(4),((getMeasuredWidth() + AndroidUtilities.dp(6)) / 2) * (1 - checkProgress),eraser2);\n  canvas.dracheckDrawable.getIntrinsicWidth()Bitmap(checkBitmap,0,0,null);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 246,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1933,
        "startLineNumber" : 123,
        "startColumnNumber" : 41,
        "endLineNumber" : 153,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (progress != 0) {\n    dracheckDrawable.getIntrinsicWidth()Bitmap.eraseColor(0);\n    float rad=getMeasuredWidth() / 2;\n    float roundProgress=progress >= 0.5f ? 1.0f : progress / 0.5f;\n    float checkProgress=progress < 0.5f ? 0.0f : (progress - 0.5f) / 0.5f;\n    float roundProgressCheckState=isCheckAnimation ? progress : (1.0f - progress);\n    if (roundProgressCheckState < progressBounceDiff) {\n      rad-=AndroidUtilities.dp(2) * roundProgressCheckState / progressBounceDiff;\n    }\n else     if (roundProgressCheckState < progressBounceDiff * 2) {\n      rad-=AndroidUtilities.dp(2) - AndroidUtilities.dp(2) * (roundProgressCheckState - progressBounceDiff) / progressBounceDiff;\n    }\n    bitmapCanvas.dracheckDrawable.getIntrinsicWidth()Circle(getMeasuredWidth() / 2,getMeasuredHeight() / 2,rad,paint);\n    bitmapCanvas.dracheckDrawable.getIntrinsicWidth()Circle(getMeasuredWidth() / 2,getMeasuredHeight() / 2,rad * (1 - roundProgress),eraser);\n    canvas.dracheckDrawable.getIntrinsicWidth()Bitmap(dracheckDrawable.getIntrinsicWidth()Bitmap,0,0,null);\n    checkBitmap.eraseColor(0);\n    int checkDrawable.getIntrinsicWidth()=checkDracheckDrawable.getIntrinsicWidth()able.getIntrinsicWidth();\n    int h=checkDracheckDrawable.getIntrinsicWidth()able.getIntrinsicHeight();\n    int x=(getMeasuredWidth() - checkDrawable.getIntrinsicWidth()) / 2;\n    int y=(getMeasuredHeight() - h) / 2;\n    checkDracheckDrawable.getIntrinsicWidth()able.setBounds(x,y,x + checkDrawable.getIntrinsicWidth(),y + h);\n    checkDracheckDrawable.getIntrinsicWidth()able.dracheckDrawable.getIntrinsicWidth()(checkCanvas);\n    checkCanvas.dracheckDrawable.getIntrinsicWidth()Circle(getMeasuredWidth() / 2 - AndroidUtilities.dp(2.5f),getMeasuredHeight() / 2 + AndroidUtilities.dp(4),((getMeasuredWidth() + AndroidUtilities.dp(6)) / 2) * (1 - checkProgress),eraser2);\n    canvas.dracheckDrawable.getIntrinsicWidth()Bitmap(checkBitmap,0,0,null);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 247,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2011,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 153,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void onDracheckDrawable.getIntrinsicWidth()(Canvas canvas){\n  if (progress != 0) {\n    dracheckDrawable.getIntrinsicWidth()Bitmap.eraseColor(0);\n    float rad=getMeasuredWidth() / 2;\n    float roundProgress=progress >= 0.5f ? 1.0f : progress / 0.5f;\n    float checkProgress=progress < 0.5f ? 0.0f : (progress - 0.5f) / 0.5f;\n    float roundProgressCheckState=isCheckAnimation ? progress : (1.0f - progress);\n    if (roundProgressCheckState < progressBounceDiff) {\n      rad-=AndroidUtilities.dp(2) * roundProgressCheckState / progressBounceDiff;\n    }\n else     if (roundProgressCheckState < progressBounceDiff * 2) {\n      rad-=AndroidUtilities.dp(2) - AndroidUtilities.dp(2) * (roundProgressCheckState - progressBounceDiff) / progressBounceDiff;\n    }\n    bitmapCanvas.dracheckDrawable.getIntrinsicWidth()Circle(getMeasuredWidth() / 2,getMeasuredHeight() / 2,rad,paint);\n    bitmapCanvas.dracheckDrawable.getIntrinsicWidth()Circle(getMeasuredWidth() / 2,getMeasuredHeight() / 2,rad * (1 - roundProgress),eraser);\n    canvas.dracheckDrawable.getIntrinsicWidth()Bitmap(dracheckDrawable.getIntrinsicWidth()Bitmap,0,0,null);\n    checkBitmap.eraseColor(0);\n    int checkDrawable.getIntrinsicWidth()=checkDracheckDrawable.getIntrinsicWidth()able.getIntrinsicWidth();\n    int h=checkDracheckDrawable.getIntrinsicWidth()able.getIntrinsicHeight();\n    int x=(getMeasuredWidth() - checkDrawable.getIntrinsicWidth()) / 2;\n    int y=(getMeasuredHeight() - h) / 2;\n    checkDracheckDrawable.getIntrinsicWidth()able.setBounds(x,y,x + checkDrawable.getIntrinsicWidth(),y + h);\n    checkDracheckDrawable.getIntrinsicWidth()able.dracheckDrawable.getIntrinsicWidth()(checkCanvas);\n    checkCanvas.dracheckDrawable.getIntrinsicWidth()Circle(getMeasuredWidth() / 2 - AndroidUtilities.dp(2.5f),getMeasuredHeight() / 2 + AndroidUtilities.dp(4),((getMeasuredWidth() + AndroidUtilities.dp(6)) / 2) * (1 - checkProgress),eraser2);\n    canvas.dracheckDrawable.getIntrinsicWidth()Bitmap(checkBitmap,0,0,null);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 257,
      "astHeight" : 15
    } ],
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "checkDrawable.getIntrinsicWidth()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 147,
      "startColumnNumber" : 46,
      "endLineNumber" : 147,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 147,
        "startColumnNumber" : 42,
        "endLineNumber" : 147,
        "endColumnNumber" : 79
      },
      "nodeContext" : "x + checkDrawable.getIntrinsicWidth()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 147,
        "startColumnNumber" : 12,
        "endLineNumber" : 147,
        "endColumnNumber" : 116
      },
      "nodeContext" : "checkDracheckDrawable.getIntrinsicWidth()able.setBounds(x,y,x + checkDrawable.getIntrinsicWidth(),y + h)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 147,
        "startColumnNumber" : 12,
        "endLineNumber" : 147,
        "endColumnNumber" : 118
      },
      "nodeContext" : "checkDracheckDrawable.getIntrinsicWidth()able.setBounds(x,y,x + checkDrawable.getIntrinsicWidth(),y + h);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1860,
        "startLineNumber" : 124,
        "startColumnNumber" : 27,
        "endLineNumber" : 152,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  dracheckDrawable.getIntrinsicWidth()Bitmap.eraseColor(0);\n  float rad=getMeasuredWidth() / 2;\n  float roundProgress=progress >= 0.5f ? 1.0f : progress / 0.5f;\n  float checkProgress=progress < 0.5f ? 0.0f : (progress - 0.5f) / 0.5f;\n  float roundProgressCheckState=isCheckAnimation ? progress : (1.0f - progress);\n  if (roundProgressCheckState < progressBounceDiff) {\n    rad-=AndroidUtilities.dp(2) * roundProgressCheckState / progressBounceDiff;\n  }\n else   if (roundProgressCheckState < progressBounceDiff * 2) {\n    rad-=AndroidUtilities.dp(2) - AndroidUtilities.dp(2) * (roundProgressCheckState - progressBounceDiff) / progressBounceDiff;\n  }\n  bitmapCanvas.dracheckDrawable.getIntrinsicWidth()Circle(getMeasuredWidth() / 2,getMeasuredHeight() / 2,rad,paint);\n  bitmapCanvas.dracheckDrawable.getIntrinsicWidth()Circle(getMeasuredWidth() / 2,getMeasuredHeight() / 2,rad * (1 - roundProgress),eraser);\n  canvas.dracheckDrawable.getIntrinsicWidth()Bitmap(dracheckDrawable.getIntrinsicWidth()Bitmap,0,0,null);\n  checkBitmap.eraseColor(0);\n  int checkDrawable.getIntrinsicWidth()=checkDracheckDrawable.getIntrinsicWidth()able.getIntrinsicWidth();\n  int h=checkDracheckDrawable.getIntrinsicWidth()able.getIntrinsicHeight();\n  int x=(getMeasuredWidth() - checkDrawable.getIntrinsicWidth()) / 2;\n  int y=(getMeasuredHeight() - h) / 2;\n  checkDracheckDrawable.getIntrinsicWidth()able.setBounds(x,y,x + checkDrawable.getIntrinsicWidth(),y + h);\n  checkDracheckDrawable.getIntrinsicWidth()able.dracheckDrawable.getIntrinsicWidth()(checkCanvas);\n  checkCanvas.dracheckDrawable.getIntrinsicWidth()Circle(getMeasuredWidth() / 2 - AndroidUtilities.dp(2.5f),getMeasuredHeight() / 2 + AndroidUtilities.dp(4),((getMeasuredWidth() + AndroidUtilities.dp(6)) / 2) * (1 - checkProgress),eraser2);\n  canvas.dracheckDrawable.getIntrinsicWidth()Bitmap(checkBitmap,0,0,null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 242,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1879,
        "startLineNumber" : 124,
        "startColumnNumber" : 8,
        "endLineNumber" : 152,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (progress != 0) {\n  dracheckDrawable.getIntrinsicWidth()Bitmap.eraseColor(0);\n  float rad=getMeasuredWidth() / 2;\n  float roundProgress=progress >= 0.5f ? 1.0f : progress / 0.5f;\n  float checkProgress=progress < 0.5f ? 0.0f : (progress - 0.5f) / 0.5f;\n  float roundProgressCheckState=isCheckAnimation ? progress : (1.0f - progress);\n  if (roundProgressCheckState < progressBounceDiff) {\n    rad-=AndroidUtilities.dp(2) * roundProgressCheckState / progressBounceDiff;\n  }\n else   if (roundProgressCheckState < progressBounceDiff * 2) {\n    rad-=AndroidUtilities.dp(2) - AndroidUtilities.dp(2) * (roundProgressCheckState - progressBounceDiff) / progressBounceDiff;\n  }\n  bitmapCanvas.dracheckDrawable.getIntrinsicWidth()Circle(getMeasuredWidth() / 2,getMeasuredHeight() / 2,rad,paint);\n  bitmapCanvas.dracheckDrawable.getIntrinsicWidth()Circle(getMeasuredWidth() / 2,getMeasuredHeight() / 2,rad * (1 - roundProgress),eraser);\n  canvas.dracheckDrawable.getIntrinsicWidth()Bitmap(dracheckDrawable.getIntrinsicWidth()Bitmap,0,0,null);\n  checkBitmap.eraseColor(0);\n  int checkDrawable.getIntrinsicWidth()=checkDracheckDrawable.getIntrinsicWidth()able.getIntrinsicWidth();\n  int h=checkDracheckDrawable.getIntrinsicWidth()able.getIntrinsicHeight();\n  int x=(getMeasuredWidth() - checkDrawable.getIntrinsicWidth()) / 2;\n  int y=(getMeasuredHeight() - h) / 2;\n  checkDracheckDrawable.getIntrinsicWidth()able.setBounds(x,y,x + checkDrawable.getIntrinsicWidth(),y + h);\n  checkDracheckDrawable.getIntrinsicWidth()able.dracheckDrawable.getIntrinsicWidth()(checkCanvas);\n  checkCanvas.dracheckDrawable.getIntrinsicWidth()Circle(getMeasuredWidth() / 2 - AndroidUtilities.dp(2.5f),getMeasuredHeight() / 2 + AndroidUtilities.dp(4),((getMeasuredWidth() + AndroidUtilities.dp(6)) / 2) * (1 - checkProgress),eraser2);\n  canvas.dracheckDrawable.getIntrinsicWidth()Bitmap(checkBitmap,0,0,null);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 246,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1933,
        "startLineNumber" : 123,
        "startColumnNumber" : 41,
        "endLineNumber" : 153,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (progress != 0) {\n    dracheckDrawable.getIntrinsicWidth()Bitmap.eraseColor(0);\n    float rad=getMeasuredWidth() / 2;\n    float roundProgress=progress >= 0.5f ? 1.0f : progress / 0.5f;\n    float checkProgress=progress < 0.5f ? 0.0f : (progress - 0.5f) / 0.5f;\n    float roundProgressCheckState=isCheckAnimation ? progress : (1.0f - progress);\n    if (roundProgressCheckState < progressBounceDiff) {\n      rad-=AndroidUtilities.dp(2) * roundProgressCheckState / progressBounceDiff;\n    }\n else     if (roundProgressCheckState < progressBounceDiff * 2) {\n      rad-=AndroidUtilities.dp(2) - AndroidUtilities.dp(2) * (roundProgressCheckState - progressBounceDiff) / progressBounceDiff;\n    }\n    bitmapCanvas.dracheckDrawable.getIntrinsicWidth()Circle(getMeasuredWidth() / 2,getMeasuredHeight() / 2,rad,paint);\n    bitmapCanvas.dracheckDrawable.getIntrinsicWidth()Circle(getMeasuredWidth() / 2,getMeasuredHeight() / 2,rad * (1 - roundProgress),eraser);\n    canvas.dracheckDrawable.getIntrinsicWidth()Bitmap(dracheckDrawable.getIntrinsicWidth()Bitmap,0,0,null);\n    checkBitmap.eraseColor(0);\n    int checkDrawable.getIntrinsicWidth()=checkDracheckDrawable.getIntrinsicWidth()able.getIntrinsicWidth();\n    int h=checkDracheckDrawable.getIntrinsicWidth()able.getIntrinsicHeight();\n    int x=(getMeasuredWidth() - checkDrawable.getIntrinsicWidth()) / 2;\n    int y=(getMeasuredHeight() - h) / 2;\n    checkDracheckDrawable.getIntrinsicWidth()able.setBounds(x,y,x + checkDrawable.getIntrinsicWidth(),y + h);\n    checkDracheckDrawable.getIntrinsicWidth()able.dracheckDrawable.getIntrinsicWidth()(checkCanvas);\n    checkCanvas.dracheckDrawable.getIntrinsicWidth()Circle(getMeasuredWidth() / 2 - AndroidUtilities.dp(2.5f),getMeasuredHeight() / 2 + AndroidUtilities.dp(4),((getMeasuredWidth() + AndroidUtilities.dp(6)) / 2) * (1 - checkProgress),eraser2);\n    canvas.dracheckDrawable.getIntrinsicWidth()Bitmap(checkBitmap,0,0,null);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 247,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2011,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 153,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void onDracheckDrawable.getIntrinsicWidth()(Canvas canvas){\n  if (progress != 0) {\n    dracheckDrawable.getIntrinsicWidth()Bitmap.eraseColor(0);\n    float rad=getMeasuredWidth() / 2;\n    float roundProgress=progress >= 0.5f ? 1.0f : progress / 0.5f;\n    float checkProgress=progress < 0.5f ? 0.0f : (progress - 0.5f) / 0.5f;\n    float roundProgressCheckState=isCheckAnimation ? progress : (1.0f - progress);\n    if (roundProgressCheckState < progressBounceDiff) {\n      rad-=AndroidUtilities.dp(2) * roundProgressCheckState / progressBounceDiff;\n    }\n else     if (roundProgressCheckState < progressBounceDiff * 2) {\n      rad-=AndroidUtilities.dp(2) - AndroidUtilities.dp(2) * (roundProgressCheckState - progressBounceDiff) / progressBounceDiff;\n    }\n    bitmapCanvas.dracheckDrawable.getIntrinsicWidth()Circle(getMeasuredWidth() / 2,getMeasuredHeight() / 2,rad,paint);\n    bitmapCanvas.dracheckDrawable.getIntrinsicWidth()Circle(getMeasuredWidth() / 2,getMeasuredHeight() / 2,rad * (1 - roundProgress),eraser);\n    canvas.dracheckDrawable.getIntrinsicWidth()Bitmap(dracheckDrawable.getIntrinsicWidth()Bitmap,0,0,null);\n    checkBitmap.eraseColor(0);\n    int checkDrawable.getIntrinsicWidth()=checkDracheckDrawable.getIntrinsicWidth()able.getIntrinsicWidth();\n    int h=checkDracheckDrawable.getIntrinsicWidth()able.getIntrinsicHeight();\n    int x=(getMeasuredWidth() - checkDrawable.getIntrinsicWidth()) / 2;\n    int y=(getMeasuredHeight() - h) / 2;\n    checkDracheckDrawable.getIntrinsicWidth()able.setBounds(x,y,x + checkDrawable.getIntrinsicWidth(),y + h);\n    checkDracheckDrawable.getIntrinsicWidth()able.dracheckDrawable.getIntrinsicWidth()(checkCanvas);\n    checkCanvas.dracheckDrawable.getIntrinsicWidth()Circle(getMeasuredWidth() / 2 - AndroidUtilities.dp(2.5f),getMeasuredHeight() / 2 + AndroidUtilities.dp(4),((getMeasuredWidth() + AndroidUtilities.dp(6)) / 2) * (1 - checkProgress),eraser2);\n    canvas.dracheckDrawable.getIntrinsicWidth()Bitmap(checkBitmap,0,0,null);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 257,
      "astHeight" : 15
    } ],
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 144,
    "startColumnNumber" : 42,
    "endLineNumber" : 144,
    "endColumnNumber" : 75
  }, {
    "charLength" : 33,
    "startLineNumber" : 147,
    "startColumnNumber" : 46,
    "endLineNumber" : 147,
    "endColumnNumber" : 79
  } ],
  "layoutRelationDataList" : [ ]
}