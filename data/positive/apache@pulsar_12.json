{
  "id" : 12,
  "expression" : "(MessageImpl)messages.get(0)",
  "projectName" : "apache@pulsar",
  "commitID" : "ea628541950a2cd02746ef0cfce02528b7824fed",
  "filePath" : "pulsar-broker/src/test/java/org/apache/pulsar/broker/service/BrokerEntryMetadataE2ETest.java",
  "occurrences" : 5,
  "expressionList" : [ {
    "nodeContext" : "(MessageImpl)messages.get(0)",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 123,
      "startColumnNumber" : 28,
      "endLineNumber" : 123,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 123,
        "startColumnNumber" : 28,
        "endLineNumber" : 123,
        "endColumnNumber" : 66
      },
      "nodeContext" : "(MessageImpl)messages.get(0).getData()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 123,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Assert.assertEquals((MessageImpl)messages.get(0).getData(),\"hello\".getBytes())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 123,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 88
      },
      "nodeContext" : "Assert.assertEquals((MessageImpl)messages.get(0).getData(),\"hello\".getBytes());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1255,
        "startLineNumber" : 101,
        "startColumnNumber" : 51,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String topic=newTopicName();\n  final String subscription=\"my-sub\";\n  final long eventTime=200;\n  final long deliverAtTime=300;\n  @Cleanup Producer<byte[]> producer=pulsarClient.newProducer().topic(topic).create();\n  long sendTime=System.currentTimeMillis();\n  producer.newMessage().eventTime(eventTime).deliverAt(deliverAtTime).value(\"hello\".getBytes()).send();\n  admin.topics().createSubscription(topic,subscription,MessageId.earliest);\n  final List<Message<byte[]>> (MessageImpl)messages.get(0)s=admin.topics().peekMessages(topic,subscription,1);\n  Assert.assertEquals((MessageImpl)messages.get(0)s.size(),1);\n  MessageImpl (MessageImpl)messages.get(0)=(MessageImpl)(MessageImpl)messages.get(0)s.get(0);\n  Assert.assertEquals((MessageImpl)messages.get(0).getData(),\"hello\".getBytes());\n  Assert.assertEquals((MessageImpl)messages.get(0).getEventTime(),eventTime);\n  Assert.assertEquals((MessageImpl)messages.get(0).getDeliverAtTime(),deliverAtTime);\n  Assert.assertTrue((MessageImpl)messages.get(0).getPublishTime() >= sendTime);\n  BrokerEntryMetadata entryMetadata=(MessageImpl)messages.get(0).getBrokerEntryMetadata();\n  Assert.assertEquals(entryMetadata.getIndex(),0);\n  Assert.assertTrue(entryMetadata.getBrokerTimestamp() >= sendTime);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 189,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1323,
        "startLineNumber" : 100,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test(timeOut=20000) public void testPeekMessage() throws Exception {\n  final String topic=newTopicName();\n  final String subscription=\"my-sub\";\n  final long eventTime=200;\n  final long deliverAtTime=300;\n  @Cleanup Producer<byte[]> producer=pulsarClient.newProducer().topic(topic).create();\n  long sendTime=System.currentTimeMillis();\n  producer.newMessage().eventTime(eventTime).deliverAt(deliverAtTime).value(\"hello\".getBytes()).send();\n  admin.topics().createSubscription(topic,subscription,MessageId.earliest);\n  final List<Message<byte[]>> (MessageImpl)messages.get(0)s=admin.topics().peekMessages(topic,subscription,1);\n  Assert.assertEquals((MessageImpl)messages.get(0)s.size(),1);\n  MessageImpl (MessageImpl)messages.get(0)=(MessageImpl)(MessageImpl)messages.get(0)s.get(0);\n  Assert.assertEquals((MessageImpl)messages.get(0).getData(),\"hello\".getBytes());\n  Assert.assertEquals((MessageImpl)messages.get(0).getEventTime(),eventTime);\n  Assert.assertEquals((MessageImpl)messages.get(0).getDeliverAtTime(),deliverAtTime);\n  Assert.assertTrue((MessageImpl)messages.get(0).getPublishTime() >= sendTime);\n  BrokerEntryMetadata entryMetadata=(MessageImpl)messages.get(0).getBrokerEntryMetadata();\n  Assert.assertEquals(entryMetadata.getIndex(),0);\n  Assert.assertTrue(entryMetadata.getBrokerTimestamp() >= sendTime);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 200,
      "astHeight" : 9
    } ],
    "tokenLength" : 4,
    "type" : "org.apache.pulsar.client.impl.MessageImpl"
  }, {
    "nodeContext" : "(MessageImpl)messages.get(0)",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 124,
      "startColumnNumber" : 28,
      "endLineNumber" : 124,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 124,
        "startColumnNumber" : 28,
        "endLineNumber" : 124,
        "endColumnNumber" : 71
      },
      "nodeContext" : "(MessageImpl)messages.get(0).getEventTime()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 124,
        "startColumnNumber" : 8,
        "endLineNumber" : 124,
        "endColumnNumber" : 82
      },
      "nodeContext" : "Assert.assertEquals((MessageImpl)messages.get(0).getEventTime(),eventTime)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 124,
        "startColumnNumber" : 8,
        "endLineNumber" : 124,
        "endColumnNumber" : 84
      },
      "nodeContext" : "Assert.assertEquals((MessageImpl)messages.get(0).getEventTime(),eventTime);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1255,
        "startLineNumber" : 101,
        "startColumnNumber" : 51,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String topic=newTopicName();\n  final String subscription=\"my-sub\";\n  final long eventTime=200;\n  final long deliverAtTime=300;\n  @Cleanup Producer<byte[]> producer=pulsarClient.newProducer().topic(topic).create();\n  long sendTime=System.currentTimeMillis();\n  producer.newMessage().eventTime(eventTime).deliverAt(deliverAtTime).value(\"hello\".getBytes()).send();\n  admin.topics().createSubscription(topic,subscription,MessageId.earliest);\n  final List<Message<byte[]>> (MessageImpl)messages.get(0)s=admin.topics().peekMessages(topic,subscription,1);\n  Assert.assertEquals((MessageImpl)messages.get(0)s.size(),1);\n  MessageImpl (MessageImpl)messages.get(0)=(MessageImpl)(MessageImpl)messages.get(0)s.get(0);\n  Assert.assertEquals((MessageImpl)messages.get(0).getData(),\"hello\".getBytes());\n  Assert.assertEquals((MessageImpl)messages.get(0).getEventTime(),eventTime);\n  Assert.assertEquals((MessageImpl)messages.get(0).getDeliverAtTime(),deliverAtTime);\n  Assert.assertTrue((MessageImpl)messages.get(0).getPublishTime() >= sendTime);\n  BrokerEntryMetadata entryMetadata=(MessageImpl)messages.get(0).getBrokerEntryMetadata();\n  Assert.assertEquals(entryMetadata.getIndex(),0);\n  Assert.assertTrue(entryMetadata.getBrokerTimestamp() >= sendTime);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 189,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1323,
        "startLineNumber" : 100,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test(timeOut=20000) public void testPeekMessage() throws Exception {\n  final String topic=newTopicName();\n  final String subscription=\"my-sub\";\n  final long eventTime=200;\n  final long deliverAtTime=300;\n  @Cleanup Producer<byte[]> producer=pulsarClient.newProducer().topic(topic).create();\n  long sendTime=System.currentTimeMillis();\n  producer.newMessage().eventTime(eventTime).deliverAt(deliverAtTime).value(\"hello\".getBytes()).send();\n  admin.topics().createSubscription(topic,subscription,MessageId.earliest);\n  final List<Message<byte[]>> (MessageImpl)messages.get(0)s=admin.topics().peekMessages(topic,subscription,1);\n  Assert.assertEquals((MessageImpl)messages.get(0)s.size(),1);\n  MessageImpl (MessageImpl)messages.get(0)=(MessageImpl)(MessageImpl)messages.get(0)s.get(0);\n  Assert.assertEquals((MessageImpl)messages.get(0).getData(),\"hello\".getBytes());\n  Assert.assertEquals((MessageImpl)messages.get(0).getEventTime(),eventTime);\n  Assert.assertEquals((MessageImpl)messages.get(0).getDeliverAtTime(),deliverAtTime);\n  Assert.assertTrue((MessageImpl)messages.get(0).getPublishTime() >= sendTime);\n  BrokerEntryMetadata entryMetadata=(MessageImpl)messages.get(0).getBrokerEntryMetadata();\n  Assert.assertEquals(entryMetadata.getIndex(),0);\n  Assert.assertTrue(entryMetadata.getBrokerTimestamp() >= sendTime);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 200,
      "astHeight" : 9
    } ],
    "tokenLength" : 4,
    "type" : "org.apache.pulsar.client.impl.MessageImpl"
  }, {
    "nodeContext" : "(MessageImpl)messages.get(0)",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 125,
      "startColumnNumber" : 28,
      "endLineNumber" : 125,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 125,
        "startColumnNumber" : 28,
        "endLineNumber" : 125,
        "endColumnNumber" : 75
      },
      "nodeContext" : "(MessageImpl)messages.get(0).getDeliverAtTime()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 90
      },
      "nodeContext" : "Assert.assertEquals((MessageImpl)messages.get(0).getDeliverAtTime(),deliverAtTime)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 92
      },
      "nodeContext" : "Assert.assertEquals((MessageImpl)messages.get(0).getDeliverAtTime(),deliverAtTime);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1255,
        "startLineNumber" : 101,
        "startColumnNumber" : 51,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String topic=newTopicName();\n  final String subscription=\"my-sub\";\n  final long eventTime=200;\n  final long deliverAtTime=300;\n  @Cleanup Producer<byte[]> producer=pulsarClient.newProducer().topic(topic).create();\n  long sendTime=System.currentTimeMillis();\n  producer.newMessage().eventTime(eventTime).deliverAt(deliverAtTime).value(\"hello\".getBytes()).send();\n  admin.topics().createSubscription(topic,subscription,MessageId.earliest);\n  final List<Message<byte[]>> (MessageImpl)messages.get(0)s=admin.topics().peekMessages(topic,subscription,1);\n  Assert.assertEquals((MessageImpl)messages.get(0)s.size(),1);\n  MessageImpl (MessageImpl)messages.get(0)=(MessageImpl)(MessageImpl)messages.get(0)s.get(0);\n  Assert.assertEquals((MessageImpl)messages.get(0).getData(),\"hello\".getBytes());\n  Assert.assertEquals((MessageImpl)messages.get(0).getEventTime(),eventTime);\n  Assert.assertEquals((MessageImpl)messages.get(0).getDeliverAtTime(),deliverAtTime);\n  Assert.assertTrue((MessageImpl)messages.get(0).getPublishTime() >= sendTime);\n  BrokerEntryMetadata entryMetadata=(MessageImpl)messages.get(0).getBrokerEntryMetadata();\n  Assert.assertEquals(entryMetadata.getIndex(),0);\n  Assert.assertTrue(entryMetadata.getBrokerTimestamp() >= sendTime);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 189,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1323,
        "startLineNumber" : 100,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test(timeOut=20000) public void testPeekMessage() throws Exception {\n  final String topic=newTopicName();\n  final String subscription=\"my-sub\";\n  final long eventTime=200;\n  final long deliverAtTime=300;\n  @Cleanup Producer<byte[]> producer=pulsarClient.newProducer().topic(topic).create();\n  long sendTime=System.currentTimeMillis();\n  producer.newMessage().eventTime(eventTime).deliverAt(deliverAtTime).value(\"hello\".getBytes()).send();\n  admin.topics().createSubscription(topic,subscription,MessageId.earliest);\n  final List<Message<byte[]>> (MessageImpl)messages.get(0)s=admin.topics().peekMessages(topic,subscription,1);\n  Assert.assertEquals((MessageImpl)messages.get(0)s.size(),1);\n  MessageImpl (MessageImpl)messages.get(0)=(MessageImpl)(MessageImpl)messages.get(0)s.get(0);\n  Assert.assertEquals((MessageImpl)messages.get(0).getData(),\"hello\".getBytes());\n  Assert.assertEquals((MessageImpl)messages.get(0).getEventTime(),eventTime);\n  Assert.assertEquals((MessageImpl)messages.get(0).getDeliverAtTime(),deliverAtTime);\n  Assert.assertTrue((MessageImpl)messages.get(0).getPublishTime() >= sendTime);\n  BrokerEntryMetadata entryMetadata=(MessageImpl)messages.get(0).getBrokerEntryMetadata();\n  Assert.assertEquals(entryMetadata.getIndex(),0);\n  Assert.assertTrue(entryMetadata.getBrokerTimestamp() >= sendTime);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 200,
      "astHeight" : 9
    } ],
    "tokenLength" : 4,
    "type" : "org.apache.pulsar.client.impl.MessageImpl"
  }, {
    "nodeContext" : "(MessageImpl)messages.get(0)",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 126,
      "startColumnNumber" : 26,
      "endLineNumber" : 126,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 126,
        "startColumnNumber" : 26,
        "endLineNumber" : 126,
        "endColumnNumber" : 71
      },
      "nodeContext" : "(MessageImpl)messages.get(0).getPublishTime()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 126,
        "startColumnNumber" : 26,
        "endLineNumber" : 126,
        "endColumnNumber" : 83
      },
      "nodeContext" : "(MessageImpl)messages.get(0).getPublishTime() >= sendTime",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 126,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 84
      },
      "nodeContext" : "Assert.assertTrue((MessageImpl)messages.get(0).getPublishTime() >= sendTime)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 126,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Assert.assertTrue((MessageImpl)messages.get(0).getPublishTime() >= sendTime);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1255,
        "startLineNumber" : 101,
        "startColumnNumber" : 51,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String topic=newTopicName();\n  final String subscription=\"my-sub\";\n  final long eventTime=200;\n  final long deliverAtTime=300;\n  @Cleanup Producer<byte[]> producer=pulsarClient.newProducer().topic(topic).create();\n  long sendTime=System.currentTimeMillis();\n  producer.newMessage().eventTime(eventTime).deliverAt(deliverAtTime).value(\"hello\".getBytes()).send();\n  admin.topics().createSubscription(topic,subscription,MessageId.earliest);\n  final List<Message<byte[]>> (MessageImpl)messages.get(0)s=admin.topics().peekMessages(topic,subscription,1);\n  Assert.assertEquals((MessageImpl)messages.get(0)s.size(),1);\n  MessageImpl (MessageImpl)messages.get(0)=(MessageImpl)(MessageImpl)messages.get(0)s.get(0);\n  Assert.assertEquals((MessageImpl)messages.get(0).getData(),\"hello\".getBytes());\n  Assert.assertEquals((MessageImpl)messages.get(0).getEventTime(),eventTime);\n  Assert.assertEquals((MessageImpl)messages.get(0).getDeliverAtTime(),deliverAtTime);\n  Assert.assertTrue((MessageImpl)messages.get(0).getPublishTime() >= sendTime);\n  BrokerEntryMetadata entryMetadata=(MessageImpl)messages.get(0).getBrokerEntryMetadata();\n  Assert.assertEquals(entryMetadata.getIndex(),0);\n  Assert.assertTrue(entryMetadata.getBrokerTimestamp() >= sendTime);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 189,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1323,
        "startLineNumber" : 100,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test(timeOut=20000) public void testPeekMessage() throws Exception {\n  final String topic=newTopicName();\n  final String subscription=\"my-sub\";\n  final long eventTime=200;\n  final long deliverAtTime=300;\n  @Cleanup Producer<byte[]> producer=pulsarClient.newProducer().topic(topic).create();\n  long sendTime=System.currentTimeMillis();\n  producer.newMessage().eventTime(eventTime).deliverAt(deliverAtTime).value(\"hello\".getBytes()).send();\n  admin.topics().createSubscription(topic,subscription,MessageId.earliest);\n  final List<Message<byte[]>> (MessageImpl)messages.get(0)s=admin.topics().peekMessages(topic,subscription,1);\n  Assert.assertEquals((MessageImpl)messages.get(0)s.size(),1);\n  MessageImpl (MessageImpl)messages.get(0)=(MessageImpl)(MessageImpl)messages.get(0)s.get(0);\n  Assert.assertEquals((MessageImpl)messages.get(0).getData(),\"hello\".getBytes());\n  Assert.assertEquals((MessageImpl)messages.get(0).getEventTime(),eventTime);\n  Assert.assertEquals((MessageImpl)messages.get(0).getDeliverAtTime(),deliverAtTime);\n  Assert.assertTrue((MessageImpl)messages.get(0).getPublishTime() >= sendTime);\n  BrokerEntryMetadata entryMetadata=(MessageImpl)messages.get(0).getBrokerEntryMetadata();\n  Assert.assertEquals(entryMetadata.getIndex(),0);\n  Assert.assertTrue(entryMetadata.getBrokerTimestamp() >= sendTime);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 200,
      "astHeight" : 9
    } ],
    "tokenLength" : 4,
    "type" : "org.apache.pulsar.client.impl.MessageImpl"
  }, {
    "nodeContext" : "(MessageImpl)messages.get(0)",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 128,
      "startColumnNumber" : 44,
      "endLineNumber" : 128,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 128,
        "startColumnNumber" : 44,
        "endLineNumber" : 128,
        "endColumnNumber" : 97
      },
      "nodeContext" : "(MessageImpl)messages.get(0).getBrokerEntryMetadata()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 128,
        "startColumnNumber" : 28,
        "endLineNumber" : 128,
        "endColumnNumber" : 95
      },
      "nodeContext" : "entryMetadata=(MessageImpl)messages.get(0).getBrokerEntryMetadata()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 97
      },
      "nodeContext" : "BrokerEntryMetadata entryMetadata=(MessageImpl)messages.get(0).getBrokerEntryMetadata();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1255,
        "startLineNumber" : 101,
        "startColumnNumber" : 51,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String topic=newTopicName();\n  final String subscription=\"my-sub\";\n  final long eventTime=200;\n  final long deliverAtTime=300;\n  @Cleanup Producer<byte[]> producer=pulsarClient.newProducer().topic(topic).create();\n  long sendTime=System.currentTimeMillis();\n  producer.newMessage().eventTime(eventTime).deliverAt(deliverAtTime).value(\"hello\".getBytes()).send();\n  admin.topics().createSubscription(topic,subscription,MessageId.earliest);\n  final List<Message<byte[]>> (MessageImpl)messages.get(0)s=admin.topics().peekMessages(topic,subscription,1);\n  Assert.assertEquals((MessageImpl)messages.get(0)s.size(),1);\n  MessageImpl (MessageImpl)messages.get(0)=(MessageImpl)(MessageImpl)messages.get(0)s.get(0);\n  Assert.assertEquals((MessageImpl)messages.get(0).getData(),\"hello\".getBytes());\n  Assert.assertEquals((MessageImpl)messages.get(0).getEventTime(),eventTime);\n  Assert.assertEquals((MessageImpl)messages.get(0).getDeliverAtTime(),deliverAtTime);\n  Assert.assertTrue((MessageImpl)messages.get(0).getPublishTime() >= sendTime);\n  BrokerEntryMetadata entryMetadata=(MessageImpl)messages.get(0).getBrokerEntryMetadata();\n  Assert.assertEquals(entryMetadata.getIndex(),0);\n  Assert.assertTrue(entryMetadata.getBrokerTimestamp() >= sendTime);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 189,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1323,
        "startLineNumber" : 100,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test(timeOut=20000) public void testPeekMessage() throws Exception {\n  final String topic=newTopicName();\n  final String subscription=\"my-sub\";\n  final long eventTime=200;\n  final long deliverAtTime=300;\n  @Cleanup Producer<byte[]> producer=pulsarClient.newProducer().topic(topic).create();\n  long sendTime=System.currentTimeMillis();\n  producer.newMessage().eventTime(eventTime).deliverAt(deliverAtTime).value(\"hello\".getBytes()).send();\n  admin.topics().createSubscription(topic,subscription,MessageId.earliest);\n  final List<Message<byte[]>> (MessageImpl)messages.get(0)s=admin.topics().peekMessages(topic,subscription,1);\n  Assert.assertEquals((MessageImpl)messages.get(0)s.size(),1);\n  MessageImpl (MessageImpl)messages.get(0)=(MessageImpl)(MessageImpl)messages.get(0)s.get(0);\n  Assert.assertEquals((MessageImpl)messages.get(0).getData(),\"hello\".getBytes());\n  Assert.assertEquals((MessageImpl)messages.get(0).getEventTime(),eventTime);\n  Assert.assertEquals((MessageImpl)messages.get(0).getDeliverAtTime(),deliverAtTime);\n  Assert.assertTrue((MessageImpl)messages.get(0).getPublishTime() >= sendTime);\n  BrokerEntryMetadata entryMetadata=(MessageImpl)messages.get(0).getBrokerEntryMetadata();\n  Assert.assertEquals(entryMetadata.getIndex(),0);\n  Assert.assertTrue(entryMetadata.getBrokerTimestamp() >= sendTime);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 200,
      "astHeight" : 9
    } ],
    "tokenLength" : 4,
    "type" : "org.apache.pulsar.client.impl.MessageImpl"
  } ],
  "positionList" : [ {
    "charLength" : 28,
    "startLineNumber" : 123,
    "startColumnNumber" : 28,
    "endLineNumber" : 123,
    "endColumnNumber" : 56
  }, {
    "charLength" : 28,
    "startLineNumber" : 124,
    "startColumnNumber" : 28,
    "endLineNumber" : 124,
    "endColumnNumber" : 56
  }, {
    "charLength" : 28,
    "startLineNumber" : 125,
    "startColumnNumber" : 28,
    "endLineNumber" : 125,
    "endColumnNumber" : 56
  }, {
    "charLength" : 28,
    "startLineNumber" : 126,
    "startColumnNumber" : 26,
    "endLineNumber" : 126,
    "endColumnNumber" : 54
  }, {
    "charLength" : 28,
    "startLineNumber" : 128,
    "startColumnNumber" : 44,
    "endLineNumber" : 128,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ ]
}