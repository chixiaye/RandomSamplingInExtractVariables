{
  "id" : 17,
  "expression" : "entries.get(j)",
  "projectName" : "PhilJay@MPAndroidChart",
  "commitID" : "884d0a4e457b17a3da0d9d8daa615e8d8cbcf774",
  "filePath" : "MPChartLib/src/com/github/mikephil/charting/charts/PieChart.java",
  "occurrences" : 2,
  "expressionList" : [ {
    "nodeContext" : "entries.get(j)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 339,
      "startColumnNumber" : 30,
      "endLineNumber" : 339,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 339,
        "startColumnNumber" : 30,
        "endLineNumber" : 339,
        "endColumnNumber" : 66
      },
      "nodeContext" : "entries.get(j).gentries.get(j)tVal()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 339,
        "startColumnNumber" : 21,
        "endLineNumber" : 339,
        "endColumnNumber" : 67
      },
      "nodeContext" : "Math.abs(entries.get(j).gentries.get(j)tVal())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 339,
        "startColumnNumber" : 21,
        "endLineNumber" : 339,
        "endColumnNumber" : 78
      },
      "nodeContext" : "Math.abs(entries.get(j).gentries.get(j)tVal()) > 0.000001",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 339,
        "startColumnNumber" : 20,
        "endLineNumber" : 339,
        "endColumnNumber" : 79
      },
      "nodeContext" : "(Math.abs(entries.get(j).gentries.get(j)tVal()) > 0.000001)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 565,
        "startLineNumber" : 339,
        "startColumnNumber" : 16,
        "endLineNumber" : 347,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if ((Math.abs(entries.get(j).gentries.get(j)tVal()) > 0.000001)) {\n  if (!nentries.get(j)entries.get(j)dsHighlight(entries.get(j).gentries.get(j)tXIndentries.get(j)x(),i)) {\n    mRentries.get(j)ndentries.get(j)rPaint.sentries.get(j)tColor(dataSentries.get(j)t.gentries.get(j)tColor(j));\n    mDrawCanvas.drawArc(mCirclentries.get(j)Box,anglentries.get(j) + slicentries.get(j)Spacentries.get(j) / 2f,nentries.get(j)wanglentries.get(j) * mPhasentries.get(j)Y - slicentries.get(j)Spacentries.get(j) / 2f,truentries.get(j),mRentries.get(j)ndentries.get(j)rPaint);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 50,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 945,
        "startLineNumber" : 331,
        "startColumnNumber" : 53,
        "endLineNumber" : 351,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  float nentries.get(j)wanglentries.get(j)=mDrawAnglentries.get(j)s[cnt];\n  float slicentries.get(j)Spacentries.get(j)=dataSentries.get(j)t.gentries.get(j)tSlicentries.get(j)Spacentries.get(j)();\n  Entry entries.get(j)=entries.get(j)ntrientries.get(j)s.gentries.get(j)t(j);\n  if ((Math.abs(entries.get(j).gentries.get(j)tVal()) > 0.000001)) {\n    if (!nentries.get(j)entries.get(j)dsHighlight(entries.get(j).gentries.get(j)tXIndentries.get(j)x(),i)) {\n      mRentries.get(j)ndentries.get(j)rPaint.sentries.get(j)tColor(dataSentries.get(j)t.gentries.get(j)tColor(j));\n      mDrawCanvas.drawArc(mCirclentries.get(j)Box,anglentries.get(j) + slicentries.get(j)Spacentries.get(j) / 2f,nentries.get(j)wanglentries.get(j) * mPhasentries.get(j)Y - slicentries.get(j)Spacentries.get(j) / 2f,truentries.get(j),mRentries.get(j)ndentries.get(j)rPaint);\n    }\n  }\n  anglentries.get(j)+=nentries.get(j)wanglentries.get(j) * mPhasentries.get(j)X;\n  cnt++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1023,
        "startLineNumber" : 331,
        "startColumnNumber" : 12,
        "endLineNumber" : 351,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int j=0; j < entries.get(j)ntrientries.get(j)s.sizentries.get(j)(); j++) {\n  float nentries.get(j)wanglentries.get(j)=mDrawAnglentries.get(j)s[cnt];\n  float slicentries.get(j)Spacentries.get(j)=dataSentries.get(j)t.gentries.get(j)tSlicentries.get(j)Spacentries.get(j)();\n  Entry entries.get(j)=entries.get(j)ntrientries.get(j)s.gentries.get(j)t(j);\n  if ((Math.abs(entries.get(j).gentries.get(j)tVal()) > 0.000001)) {\n    if (!nentries.get(j)entries.get(j)dsHighlight(entries.get(j).gentries.get(j)tXIndentries.get(j)x(),i)) {\n      mRentries.get(j)ndentries.get(j)rPaint.sentries.get(j)tColor(dataSentries.get(j)t.gentries.get(j)tColor(j));\n      mDrawCanvas.drawArc(mCirclentries.get(j)Box,anglentries.get(j) + slicentries.get(j)Spacentries.get(j) / 2f,nentries.get(j)wanglentries.get(j) * mPhasentries.get(j)Y - slicentries.get(j)Spacentries.get(j) / 2f,truentries.get(j),mRentries.get(j)ndentries.get(j)rPaint);\n    }\n  }\n  anglentries.get(j)+=nentries.get(j)wanglentries.get(j) * mPhasentries.get(j)X;\n  cnt++;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 96,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1255,
        "startLineNumber" : 326,
        "startColumnNumber" : 65,
        "endLineNumber" : 352,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Pientries.get(j)DataSentries.get(j)t dataSentries.get(j)t=dataSentries.get(j)ts.gentries.get(j)t(i);\n  ArrayList<Entry> entries.get(j)ntrientries.get(j)s=dataSentries.get(j)t.gentries.get(j)tYVals();\n  for (int j=0; j < entries.get(j)ntrientries.get(j)s.sizentries.get(j)(); j++) {\n    float nentries.get(j)wanglentries.get(j)=mDrawAnglentries.get(j)s[cnt];\n    float slicentries.get(j)Spacentries.get(j)=dataSentries.get(j)t.gentries.get(j)tSlicentries.get(j)Spacentries.get(j)();\n    Entry entries.get(j)=entries.get(j)ntrientries.get(j)s.gentries.get(j)t(j);\n    if ((Math.abs(entries.get(j).gentries.get(j)tVal()) > 0.000001)) {\n      if (!nentries.get(j)entries.get(j)dsHighlight(entries.get(j).gentries.get(j)tXIndentries.get(j)x(),i)) {\n        mRentries.get(j)ndentries.get(j)rPaint.sentries.get(j)tColor(dataSentries.get(j)t.gentries.get(j)tColor(j));\n        mDrawCanvas.drawArc(mCirclentries.get(j)Box,anglentries.get(j) + slicentries.get(j)Spacentries.get(j) / 2f,nentries.get(j)wanglentries.get(j) * mPhasentries.get(j)Y - slicentries.get(j)Spacentries.get(j) / 2f,truentries.get(j),mRentries.get(j)ndentries.get(j)rPaint);\n      }\n    }\n    anglentries.get(j)+=nentries.get(j)wanglentries.get(j) * mPhasentries.get(j)X;\n    cnt++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 117,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1349,
        "startLineNumber" : 326,
        "startColumnNumber" : 8,
        "endLineNumber" : 352,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < mCurrentries.get(j)ntData.gentries.get(j)tDataSentries.get(j)tCount(); i++) {\n  Pientries.get(j)DataSentries.get(j)t dataSentries.get(j)t=dataSentries.get(j)ts.gentries.get(j)t(i);\n  ArrayList<Entry> entries.get(j)ntrientries.get(j)s=dataSentries.get(j)t.gentries.get(j)tYVals();\n  for (int j=0; j < entries.get(j)ntrientries.get(j)s.sizentries.get(j)(); j++) {\n    float nentries.get(j)wanglentries.get(j)=mDrawAnglentries.get(j)s[cnt];\n    float slicentries.get(j)Spacentries.get(j)=dataSentries.get(j)t.gentries.get(j)tSlicentries.get(j)Spacentries.get(j)();\n    Entry entries.get(j)=entries.get(j)ntrientries.get(j)s.gentries.get(j)t(j);\n    if ((Math.abs(entries.get(j).gentries.get(j)tVal()) > 0.000001)) {\n      if (!nentries.get(j)entries.get(j)dsHighlight(entries.get(j).gentries.get(j)tXIndentries.get(j)x(),i)) {\n        mRentries.get(j)ndentries.get(j)rPaint.sentries.get(j)tColor(dataSentries.get(j)t.gentries.get(j)tColor(j));\n        mDrawCanvas.drawArc(mCirclentries.get(j)Box,anglentries.get(j) + slicentries.get(j)Spacentries.get(j) / 2f,nentries.get(j)wanglentries.get(j) * mPhasentries.get(j)Y - slicentries.get(j)Spacentries.get(j) / 2f,truentries.get(j),mRentries.get(j)ndentries.get(j)rPaint);\n      }\n    }\n    anglentries.get(j)+=nentries.get(j)wanglentries.get(j) * mPhasentries.get(j)X;\n    cnt++;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 130,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1595,
        "startLineNumber" : 318,
        "startColumnNumber" : 30,
        "endLineNumber" : 353,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  float anglentries.get(j)=mRotationAnglentries.get(j);\n  ArrayList<Pientries.get(j)DataSentries.get(j)t> dataSentries.get(j)ts=mCurrentries.get(j)ntData.gentries.get(j)tDataSentries.get(j)ts();\n  int cnt=0;\n  for (int i=0; i < mCurrentries.get(j)ntData.gentries.get(j)tDataSentries.get(j)tCount(); i++) {\n    Pientries.get(j)DataSentries.get(j)t dataSentries.get(j)t=dataSentries.get(j)ts.gentries.get(j)t(i);\n    ArrayList<Entry> entries.get(j)ntrientries.get(j)s=dataSentries.get(j)t.gentries.get(j)tYVals();\n    for (int j=0; j < entries.get(j)ntrientries.get(j)s.sizentries.get(j)(); j++) {\n      float nentries.get(j)wanglentries.get(j)=mDrawAnglentries.get(j)s[cnt];\n      float slicentries.get(j)Spacentries.get(j)=dataSentries.get(j)t.gentries.get(j)tSlicentries.get(j)Spacentries.get(j)();\n      Entry entries.get(j)=entries.get(j)ntrientries.get(j)s.gentries.get(j)t(j);\n      if ((Math.abs(entries.get(j).gentries.get(j)tVal()) > 0.000001)) {\n        if (!nentries.get(j)entries.get(j)dsHighlight(entries.get(j).gentries.get(j)tXIndentries.get(j)x(),i)) {\n          mRentries.get(j)ndentries.get(j)rPaint.sentries.get(j)tColor(dataSentries.get(j)t.gentries.get(j)tColor(j));\n          mDrawCanvas.drawArc(mCirclentries.get(j)Box,anglentries.get(j) + slicentries.get(j)Spacentries.get(j) / 2f,nentries.get(j)wanglentries.get(j) * mPhasentries.get(j)Y - slicentries.get(j)Spacentries.get(j) / 2f,truentries.get(j),mRentries.get(j)ndentries.get(j)rPaint);\n        }\n      }\n      anglentries.get(j)+=nentries.get(j)wanglentries.get(j) * mPhasentries.get(j)X;\n      cnt++;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1682,
        "startLineNumber" : 317,
        "startColumnNumber" : 4,
        "endLineNumber" : 353,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Oventries.get(j)rridentries.get(j) protentries.get(j)ctentries.get(j)d void drawData(){\n  float anglentries.get(j)=mRotationAnglentries.get(j);\n  ArrayList<Pientries.get(j)DataSentries.get(j)t> dataSentries.get(j)ts=mCurrentries.get(j)ntData.gentries.get(j)tDataSentries.get(j)ts();\n  int cnt=0;\n  for (int i=0; i < mCurrentries.get(j)ntData.gentries.get(j)tDataSentries.get(j)tCount(); i++) {\n    Pientries.get(j)DataSentries.get(j)t dataSentries.get(j)t=dataSentries.get(j)ts.gentries.get(j)t(i);\n    ArrayList<Entry> entries.get(j)ntrientries.get(j)s=dataSentries.get(j)t.gentries.get(j)tYVals();\n    for (int j=0; j < entries.get(j)ntrientries.get(j)s.sizentries.get(j)(); j++) {\n      float nentries.get(j)wanglentries.get(j)=mDrawAnglentries.get(j)s[cnt];\n      float slicentries.get(j)Spacentries.get(j)=dataSentries.get(j)t.gentries.get(j)tSlicentries.get(j)Spacentries.get(j)();\n      Entry entries.get(j)=entries.get(j)ntrientries.get(j)s.gentries.get(j)t(j);\n      if ((Math.abs(entries.get(j).gentries.get(j)tVal()) > 0.000001)) {\n        if (!nentries.get(j)entries.get(j)dsHighlight(entries.get(j).gentries.get(j)tXIndentries.get(j)x(),i)) {\n          mRentries.get(j)ndentries.get(j)rPaint.sentries.get(j)tColor(dataSentries.get(j)t.gentries.get(j)tColor(j));\n          mDrawCanvas.drawArc(mCirclentries.get(j)Box,anglentries.get(j) + slicentries.get(j)Spacentries.get(j) / 2f,nentries.get(j)wanglentries.get(j) * mPhasentries.get(j)Y - slicentries.get(j)Spacentries.get(j) / 2f,truentries.get(j),mRentries.get(j)ndentries.get(j)rPaint);\n        }\n      }\n      anglentries.get(j)+=nentries.get(j)wanglentries.get(j) * mPhasentries.get(j)X;\n      cnt++;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 158,
      "astHeight" : 15
    } ],
    "tokenLength" : 3,
    "type" : "com.github.mikephil.charting.data.Entry"
  }, {
    "nodeContext" : "entries.get(j)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 341,
      "startColumnNumber" : 40,
      "endLineNumber" : 341,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 341,
        "startColumnNumber" : 40,
        "endLineNumber" : 341,
        "endColumnNumber" : 92
      },
      "nodeContext" : "entries.get(j).gentries.get(j)tXIndentries.get(j)x()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 341,
        "startColumnNumber" : 25,
        "endLineNumber" : 341,
        "endColumnNumber" : 121
      },
      "nodeContext" : "nentries.get(j)entries.get(j)dsHighlight(entries.get(j).gentries.get(j)tXIndentries.get(j)x(),i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 341,
        "startColumnNumber" : 24,
        "endLineNumber" : 341,
        "endColumnNumber" : 121
      },
      "nodeContext" : "!nentries.get(j)entries.get(j)dsHighlight(entries.get(j).gentries.get(j)tXIndentries.get(j)x(),i)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 488,
        "startLineNumber" : 341,
        "startColumnNumber" : 20,
        "endLineNumber" : 346,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (!nentries.get(j)entries.get(j)dsHighlight(entries.get(j).gentries.get(j)tXIndentries.get(j)x(),i)) {\n  mRentries.get(j)ndentries.get(j)rPaint.sentries.get(j)tColor(dataSentries.get(j)t.gentries.get(j)tColor(j));\n  mDrawCanvas.drawArc(mCirclentries.get(j)Box,anglentries.get(j) + slicentries.get(j)Spacentries.get(j) / 2f,nentries.get(j)wanglentries.get(j) * mPhasentries.get(j)Y - slicentries.get(j)Spacentries.get(j) / 2f,truentries.get(j),mRentries.get(j)ndentries.get(j)rPaint);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 500,
        "startLineNumber" : 339,
        "startColumnNumber" : 55,
        "endLineNumber" : 347,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (!nentries.get(j)entries.get(j)dsHighlight(entries.get(j).gentries.get(j)tXIndentries.get(j)x(),i)) {\n    mRentries.get(j)ndentries.get(j)rPaint.sentries.get(j)tColor(dataSentries.get(j)t.gentries.get(j)tColor(j));\n    mDrawCanvas.drawArc(mCirclentries.get(j)Box,anglentries.get(j) + slicentries.get(j)Spacentries.get(j) / 2f,nentries.get(j)wanglentries.get(j) * mPhasentries.get(j)Y - slicentries.get(j)Spacentries.get(j) / 2f,truentries.get(j),mRentries.get(j)ndentries.get(j)rPaint);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 565,
        "startLineNumber" : 339,
        "startColumnNumber" : 16,
        "endLineNumber" : 347,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if ((Math.abs(entries.get(j).gentries.get(j)tVal()) > 0.000001)) {\n  if (!nentries.get(j)entries.get(j)dsHighlight(entries.get(j).gentries.get(j)tXIndentries.get(j)x(),i)) {\n    mRentries.get(j)ndentries.get(j)rPaint.sentries.get(j)tColor(dataSentries.get(j)t.gentries.get(j)tColor(j));\n    mDrawCanvas.drawArc(mCirclentries.get(j)Box,anglentries.get(j) + slicentries.get(j)Spacentries.get(j) / 2f,nentries.get(j)wanglentries.get(j) * mPhasentries.get(j)Y - slicentries.get(j)Spacentries.get(j) / 2f,truentries.get(j),mRentries.get(j)ndentries.get(j)rPaint);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 50,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 945,
        "startLineNumber" : 331,
        "startColumnNumber" : 53,
        "endLineNumber" : 351,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  float nentries.get(j)wanglentries.get(j)=mDrawAnglentries.get(j)s[cnt];\n  float slicentries.get(j)Spacentries.get(j)=dataSentries.get(j)t.gentries.get(j)tSlicentries.get(j)Spacentries.get(j)();\n  Entry entries.get(j)=entries.get(j)ntrientries.get(j)s.gentries.get(j)t(j);\n  if ((Math.abs(entries.get(j).gentries.get(j)tVal()) > 0.000001)) {\n    if (!nentries.get(j)entries.get(j)dsHighlight(entries.get(j).gentries.get(j)tXIndentries.get(j)x(),i)) {\n      mRentries.get(j)ndentries.get(j)rPaint.sentries.get(j)tColor(dataSentries.get(j)t.gentries.get(j)tColor(j));\n      mDrawCanvas.drawArc(mCirclentries.get(j)Box,anglentries.get(j) + slicentries.get(j)Spacentries.get(j) / 2f,nentries.get(j)wanglentries.get(j) * mPhasentries.get(j)Y - slicentries.get(j)Spacentries.get(j) / 2f,truentries.get(j),mRentries.get(j)ndentries.get(j)rPaint);\n    }\n  }\n  anglentries.get(j)+=nentries.get(j)wanglentries.get(j) * mPhasentries.get(j)X;\n  cnt++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1023,
        "startLineNumber" : 331,
        "startColumnNumber" : 12,
        "endLineNumber" : 351,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int j=0; j < entries.get(j)ntrientries.get(j)s.sizentries.get(j)(); j++) {\n  float nentries.get(j)wanglentries.get(j)=mDrawAnglentries.get(j)s[cnt];\n  float slicentries.get(j)Spacentries.get(j)=dataSentries.get(j)t.gentries.get(j)tSlicentries.get(j)Spacentries.get(j)();\n  Entry entries.get(j)=entries.get(j)ntrientries.get(j)s.gentries.get(j)t(j);\n  if ((Math.abs(entries.get(j).gentries.get(j)tVal()) > 0.000001)) {\n    if (!nentries.get(j)entries.get(j)dsHighlight(entries.get(j).gentries.get(j)tXIndentries.get(j)x(),i)) {\n      mRentries.get(j)ndentries.get(j)rPaint.sentries.get(j)tColor(dataSentries.get(j)t.gentries.get(j)tColor(j));\n      mDrawCanvas.drawArc(mCirclentries.get(j)Box,anglentries.get(j) + slicentries.get(j)Spacentries.get(j) / 2f,nentries.get(j)wanglentries.get(j) * mPhasentries.get(j)Y - slicentries.get(j)Spacentries.get(j) / 2f,truentries.get(j),mRentries.get(j)ndentries.get(j)rPaint);\n    }\n  }\n  anglentries.get(j)+=nentries.get(j)wanglentries.get(j) * mPhasentries.get(j)X;\n  cnt++;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 96,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1255,
        "startLineNumber" : 326,
        "startColumnNumber" : 65,
        "endLineNumber" : 352,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Pientries.get(j)DataSentries.get(j)t dataSentries.get(j)t=dataSentries.get(j)ts.gentries.get(j)t(i);\n  ArrayList<Entry> entries.get(j)ntrientries.get(j)s=dataSentries.get(j)t.gentries.get(j)tYVals();\n  for (int j=0; j < entries.get(j)ntrientries.get(j)s.sizentries.get(j)(); j++) {\n    float nentries.get(j)wanglentries.get(j)=mDrawAnglentries.get(j)s[cnt];\n    float slicentries.get(j)Spacentries.get(j)=dataSentries.get(j)t.gentries.get(j)tSlicentries.get(j)Spacentries.get(j)();\n    Entry entries.get(j)=entries.get(j)ntrientries.get(j)s.gentries.get(j)t(j);\n    if ((Math.abs(entries.get(j).gentries.get(j)tVal()) > 0.000001)) {\n      if (!nentries.get(j)entries.get(j)dsHighlight(entries.get(j).gentries.get(j)tXIndentries.get(j)x(),i)) {\n        mRentries.get(j)ndentries.get(j)rPaint.sentries.get(j)tColor(dataSentries.get(j)t.gentries.get(j)tColor(j));\n        mDrawCanvas.drawArc(mCirclentries.get(j)Box,anglentries.get(j) + slicentries.get(j)Spacentries.get(j) / 2f,nentries.get(j)wanglentries.get(j) * mPhasentries.get(j)Y - slicentries.get(j)Spacentries.get(j) / 2f,truentries.get(j),mRentries.get(j)ndentries.get(j)rPaint);\n      }\n    }\n    anglentries.get(j)+=nentries.get(j)wanglentries.get(j) * mPhasentries.get(j)X;\n    cnt++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 117,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1349,
        "startLineNumber" : 326,
        "startColumnNumber" : 8,
        "endLineNumber" : 352,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < mCurrentries.get(j)ntData.gentries.get(j)tDataSentries.get(j)tCount(); i++) {\n  Pientries.get(j)DataSentries.get(j)t dataSentries.get(j)t=dataSentries.get(j)ts.gentries.get(j)t(i);\n  ArrayList<Entry> entries.get(j)ntrientries.get(j)s=dataSentries.get(j)t.gentries.get(j)tYVals();\n  for (int j=0; j < entries.get(j)ntrientries.get(j)s.sizentries.get(j)(); j++) {\n    float nentries.get(j)wanglentries.get(j)=mDrawAnglentries.get(j)s[cnt];\n    float slicentries.get(j)Spacentries.get(j)=dataSentries.get(j)t.gentries.get(j)tSlicentries.get(j)Spacentries.get(j)();\n    Entry entries.get(j)=entries.get(j)ntrientries.get(j)s.gentries.get(j)t(j);\n    if ((Math.abs(entries.get(j).gentries.get(j)tVal()) > 0.000001)) {\n      if (!nentries.get(j)entries.get(j)dsHighlight(entries.get(j).gentries.get(j)tXIndentries.get(j)x(),i)) {\n        mRentries.get(j)ndentries.get(j)rPaint.sentries.get(j)tColor(dataSentries.get(j)t.gentries.get(j)tColor(j));\n        mDrawCanvas.drawArc(mCirclentries.get(j)Box,anglentries.get(j) + slicentries.get(j)Spacentries.get(j) / 2f,nentries.get(j)wanglentries.get(j) * mPhasentries.get(j)Y - slicentries.get(j)Spacentries.get(j) / 2f,truentries.get(j),mRentries.get(j)ndentries.get(j)rPaint);\n      }\n    }\n    anglentries.get(j)+=nentries.get(j)wanglentries.get(j) * mPhasentries.get(j)X;\n    cnt++;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 130,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1595,
        "startLineNumber" : 318,
        "startColumnNumber" : 30,
        "endLineNumber" : 353,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  float anglentries.get(j)=mRotationAnglentries.get(j);\n  ArrayList<Pientries.get(j)DataSentries.get(j)t> dataSentries.get(j)ts=mCurrentries.get(j)ntData.gentries.get(j)tDataSentries.get(j)ts();\n  int cnt=0;\n  for (int i=0; i < mCurrentries.get(j)ntData.gentries.get(j)tDataSentries.get(j)tCount(); i++) {\n    Pientries.get(j)DataSentries.get(j)t dataSentries.get(j)t=dataSentries.get(j)ts.gentries.get(j)t(i);\n    ArrayList<Entry> entries.get(j)ntrientries.get(j)s=dataSentries.get(j)t.gentries.get(j)tYVals();\n    for (int j=0; j < entries.get(j)ntrientries.get(j)s.sizentries.get(j)(); j++) {\n      float nentries.get(j)wanglentries.get(j)=mDrawAnglentries.get(j)s[cnt];\n      float slicentries.get(j)Spacentries.get(j)=dataSentries.get(j)t.gentries.get(j)tSlicentries.get(j)Spacentries.get(j)();\n      Entry entries.get(j)=entries.get(j)ntrientries.get(j)s.gentries.get(j)t(j);\n      if ((Math.abs(entries.get(j).gentries.get(j)tVal()) > 0.000001)) {\n        if (!nentries.get(j)entries.get(j)dsHighlight(entries.get(j).gentries.get(j)tXIndentries.get(j)x(),i)) {\n          mRentries.get(j)ndentries.get(j)rPaint.sentries.get(j)tColor(dataSentries.get(j)t.gentries.get(j)tColor(j));\n          mDrawCanvas.drawArc(mCirclentries.get(j)Box,anglentries.get(j) + slicentries.get(j)Spacentries.get(j) / 2f,nentries.get(j)wanglentries.get(j) * mPhasentries.get(j)Y - slicentries.get(j)Spacentries.get(j) / 2f,truentries.get(j),mRentries.get(j)ndentries.get(j)rPaint);\n        }\n      }\n      anglentries.get(j)+=nentries.get(j)wanglentries.get(j) * mPhasentries.get(j)X;\n      cnt++;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1682,
        "startLineNumber" : 317,
        "startColumnNumber" : 4,
        "endLineNumber" : 353,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Oventries.get(j)rridentries.get(j) protentries.get(j)ctentries.get(j)d void drawData(){\n  float anglentries.get(j)=mRotationAnglentries.get(j);\n  ArrayList<Pientries.get(j)DataSentries.get(j)t> dataSentries.get(j)ts=mCurrentries.get(j)ntData.gentries.get(j)tDataSentries.get(j)ts();\n  int cnt=0;\n  for (int i=0; i < mCurrentries.get(j)ntData.gentries.get(j)tDataSentries.get(j)tCount(); i++) {\n    Pientries.get(j)DataSentries.get(j)t dataSentries.get(j)t=dataSentries.get(j)ts.gentries.get(j)t(i);\n    ArrayList<Entry> entries.get(j)ntrientries.get(j)s=dataSentries.get(j)t.gentries.get(j)tYVals();\n    for (int j=0; j < entries.get(j)ntrientries.get(j)s.sizentries.get(j)(); j++) {\n      float nentries.get(j)wanglentries.get(j)=mDrawAnglentries.get(j)s[cnt];\n      float slicentries.get(j)Spacentries.get(j)=dataSentries.get(j)t.gentries.get(j)tSlicentries.get(j)Spacentries.get(j)();\n      Entry entries.get(j)=entries.get(j)ntrientries.get(j)s.gentries.get(j)t(j);\n      if ((Math.abs(entries.get(j).gentries.get(j)tVal()) > 0.000001)) {\n        if (!nentries.get(j)entries.get(j)dsHighlight(entries.get(j).gentries.get(j)tXIndentries.get(j)x(),i)) {\n          mRentries.get(j)ndentries.get(j)rPaint.sentries.get(j)tColor(dataSentries.get(j)t.gentries.get(j)tColor(j));\n          mDrawCanvas.drawArc(mCirclentries.get(j)Box,anglentries.get(j) + slicentries.get(j)Spacentries.get(j) / 2f,nentries.get(j)wanglentries.get(j) * mPhasentries.get(j)Y - slicentries.get(j)Spacentries.get(j) / 2f,truentries.get(j),mRentries.get(j)ndentries.get(j)rPaint);\n        }\n      }\n      anglentries.get(j)+=nentries.get(j)wanglentries.get(j) * mPhasentries.get(j)X;\n      cnt++;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 158,
      "astHeight" : 15
    } ],
    "tokenLength" : 3,
    "type" : "com.github.mikephil.charting.data.Entry"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 339,
    "startColumnNumber" : 30,
    "endLineNumber" : 339,
    "endColumnNumber" : 44
  }, {
    "charLength" : 14,
    "startLineNumber" : 341,
    "startColumnNumber" : 40,
    "endLineNumber" : 341,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}