{
  "id" : 16,
  "expression" : "edge.capacity - edge.flow",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "0e291a44878a996bfc511cc71641b2e7bb842735",
  "filePath" : "com/williamfiset/algorithms/graphtheory/networkflow/FordFulkersonDfsSolverAdjacencyList.java",
  "occurrences" : 2,
  "expressionList" : [ {
    "nodeContext" : "edge.capacity - edge.flow",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 65,
      "startColumnNumber" : 10,
      "endLineNumber" : 65,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 65,
        "startColumnNumber" : 10,
        "endLineNumber" : 65,
        "endColumnNumber" : 39
      },
      "nodeContext" : "edge.capacity - edge.flow > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 65,
        "startColumnNumber" : 10,
        "endLineNumber" : 65,
        "endColumnNumber" : 75
      },
      "nodeContext" : "edge.capacity - edge.flow > 0 && visited[edge.to] != visitedToken",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 275,
        "startLineNumber" : 65,
        "startColumnNumber" : 6,
        "endLineNumber" : 77,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (edge.capacity - edge.flow > 0 && visited[edge.to] != visitedToken) {\n  long bottleNeck=dfs(edge.to,min(flow,edge.capacity - edge.flow));\n  if (bottleNeck > 0) {\n    Edge res=edge.residual;\n    edge.flow+=bottleNeck;\n    res.flow-=bottleNeck;\n    return bottleNeck;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 59,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 385,
        "startLineNumber" : 63,
        "startColumnNumber" : 28,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final long edge.capacity - edge.flow=edge.edge.capacity - edge.flowacity - edge.flow;\n  if (edge.capacity - edge.flow > 0 && visited[edge.to] != visitedToken) {\n    long bottleNeck=dfs(edge.to,min(flow,edge.capacity - edge.flow));\n    if (bottleNeck > 0) {\n      Edge res=edge.residual;\n      edge.flow+=bottleNeck;\n      res.flow-=bottleNeck;\n      return bottleNeck;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 409,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (Edge edge : edges) {\n  final long edge.capacity - edge.flow=edge.edge.capacity - edge.flowacity - edge.flow;\n  if (edge.capacity - edge.flow > 0 && visited[edge.to] != visitedToken) {\n    long bottleNeck=dfs(edge.to,min(flow,edge.capacity - edge.flow));\n    if (bottleNeck > 0) {\n      Edge res=edge.residual;\n      edge.flow+=bottleNeck;\n      res.flow-=bottleNeck;\n      return bottleNeck;\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 78,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 549,
        "startLineNumber" : 56,
        "startColumnNumber" : 40,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (node == t)   return flow;\n  List<Edge> edges=graph.get(node);\n  visited[node]=visitedToken;\n  for (  Edge edge : edges) {\n    final long edge.capacity - edge.flow=edge.edge.capacity - edge.flowacity - edge.flow;\n    if (edge.capacity - edge.flow > 0 && visited[edge.to] != visitedToken) {\n      long bottleNeck=dfs(edge.to,min(flow,edge.capacity - edge.flow));\n      if (bottleNeck > 0) {\n        Edge res=edge.residual;\n        edge.flow+=bottleNeck;\n        res.flow-=bottleNeck;\n        return bottleNeck;\n      }\n    }\n  }\n  return 0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 585,
        "startLineNumber" : 56,
        "startColumnNumber" : 2,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private long dfs(int node,long flow){\n  if (node == t)   return flow;\n  List<Edge> edges=graph.get(node);\n  visited[node]=visitedToken;\n  for (  Edge edge : edges) {\n    final long edge.capacity - edge.flow=edge.edge.capacity - edge.flowacity - edge.flow;\n    if (edge.capacity - edge.flow > 0 && visited[edge.to] != visitedToken) {\n      long bottleNeck=dfs(edge.to,min(flow,edge.capacity - edge.flow));\n      if (bottleNeck > 0) {\n        Edge res=edge.residual;\n        edge.flow+=bottleNeck;\n        res.flow-=bottleNeck;\n        return bottleNeck;\n      }\n    }\n  }\n  return 0;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 115,
      "astHeight" : 12
    } ],
    "tokenLength" : 5,
    "type" : "long"
  }, {
    "nodeContext" : "edge.capacity - edge.flow",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 67,
      "startColumnNumber" : 49,
      "endLineNumber" : 67,
      "endColumnNumber" : 74
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 67,
        "startColumnNumber" : 39,
        "endLineNumber" : 67,
        "endColumnNumber" : 74
      },
      "nodeContext" : "min(flow,edge.capacity - edge.flow)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 67,
        "startColumnNumber" : 26,
        "endLineNumber" : 67,
        "endColumnNumber" : 74
      },
      "nodeContext" : "dfs(edge.to,min(flow,edge.capacity - edge.flow))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 67,
        "startColumnNumber" : 13,
        "endLineNumber" : 67,
        "endColumnNumber" : 72
      },
      "nodeContext" : "bottleNeck=dfs(edge.to,min(flow,edge.capacity - edge.flow))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 74
      },
      "nodeContext" : "long bottleNeck=dfs(edge.to,min(flow,edge.capacity - edge.flow));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 65,
        "startColumnNumber" : 55,
        "endLineNumber" : 77,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  long bottleNeck=dfs(edge.to,min(flow,edge.capacity - edge.flow));\n  if (bottleNeck > 0) {\n    Edge res=edge.residual;\n    edge.flow+=bottleNeck;\n    res.flow-=bottleNeck;\n    return bottleNeck;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 275,
        "startLineNumber" : 65,
        "startColumnNumber" : 6,
        "endLineNumber" : 77,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (edge.capacity - edge.flow > 0 && visited[edge.to] != visitedToken) {\n  long bottleNeck=dfs(edge.to,min(flow,edge.capacity - edge.flow));\n  if (bottleNeck > 0) {\n    Edge res=edge.residual;\n    edge.flow+=bottleNeck;\n    res.flow-=bottleNeck;\n    return bottleNeck;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 59,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 385,
        "startLineNumber" : 63,
        "startColumnNumber" : 28,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final long edge.capacity - edge.flow=edge.edge.capacity - edge.flowacity - edge.flow;\n  if (edge.capacity - edge.flow > 0 && visited[edge.to] != visitedToken) {\n    long bottleNeck=dfs(edge.to,min(flow,edge.capacity - edge.flow));\n    if (bottleNeck > 0) {\n      Edge res=edge.residual;\n      edge.flow+=bottleNeck;\n      res.flow-=bottleNeck;\n      return bottleNeck;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 409,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (Edge edge : edges) {\n  final long edge.capacity - edge.flow=edge.edge.capacity - edge.flowacity - edge.flow;\n  if (edge.capacity - edge.flow > 0 && visited[edge.to] != visitedToken) {\n    long bottleNeck=dfs(edge.to,min(flow,edge.capacity - edge.flow));\n    if (bottleNeck > 0) {\n      Edge res=edge.residual;\n      edge.flow+=bottleNeck;\n      res.flow-=bottleNeck;\n      return bottleNeck;\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 78,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 549,
        "startLineNumber" : 56,
        "startColumnNumber" : 40,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (node == t)   return flow;\n  List<Edge> edges=graph.get(node);\n  visited[node]=visitedToken;\n  for (  Edge edge : edges) {\n    final long edge.capacity - edge.flow=edge.edge.capacity - edge.flowacity - edge.flow;\n    if (edge.capacity - edge.flow > 0 && visited[edge.to] != visitedToken) {\n      long bottleNeck=dfs(edge.to,min(flow,edge.capacity - edge.flow));\n      if (bottleNeck > 0) {\n        Edge res=edge.residual;\n        edge.flow+=bottleNeck;\n        res.flow-=bottleNeck;\n        return bottleNeck;\n      }\n    }\n  }\n  return 0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 585,
        "startLineNumber" : 56,
        "startColumnNumber" : 2,
        "endLineNumber" : 80,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private long dfs(int node,long flow){\n  if (node == t)   return flow;\n  List<Edge> edges=graph.get(node);\n  visited[node]=visitedToken;\n  for (  Edge edge : edges) {\n    final long edge.capacity - edge.flow=edge.edge.capacity - edge.flowacity - edge.flow;\n    if (edge.capacity - edge.flow > 0 && visited[edge.to] != visitedToken) {\n      long bottleNeck=dfs(edge.to,min(flow,edge.capacity - edge.flow));\n      if (bottleNeck > 0) {\n        Edge res=edge.residual;\n        edge.flow+=bottleNeck;\n        res.flow-=bottleNeck;\n        return bottleNeck;\n      }\n    }\n  }\n  return 0;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 115,
      "astHeight" : 13
    } ],
    "tokenLength" : 5,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 65,
    "startColumnNumber" : 10,
    "endLineNumber" : 65,
    "endColumnNumber" : 35
  }, {
    "charLength" : 25,
    "startLineNumber" : 67,
    "startColumnNumber" : 49,
    "endLineNumber" : 67,
    "endColumnNumber" : 74
  } ],
  "layoutRelationDataList" : [ ]
}