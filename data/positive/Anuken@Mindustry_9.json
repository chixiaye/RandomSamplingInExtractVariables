{
  "id" : 9,
  "expression" : "item().charge * stack().amount * 160f",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a13d51e09a612eb1fc713f3e02a766ebe41cae36",
  "filePath" : "core/src/mindustry/entities/comp/UnitComp.java",
  "occurrences" : 1,
  "expressionList" : [ {
    "nodeContext" : "item().charge * stack().amount * 160f",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 417,
      "startColumnNumber" : 71,
      "endLineNumber" : 417,
      "endColumnNumber" : 108
    },
    "astNodeNumber" : 10,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 417,
        "startColumnNumber" : 12,
        "endLineNumber" : 417,
        "endColumnNumber" : 177
      },
      "nodeContext" : "Damage.dynamicExplosion(x,y,flammability,explosiveness,item().charge * stack().amount * 160f,bounds() / 2f,state.rules.damageExplosions,item().flammability > 1,team)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 33,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 417,
        "startColumnNumber" : 12,
        "endLineNumber" : 417,
        "endColumnNumber" : 179
      },
      "nodeContext" : "Damage.dynamicExplosion(x,y,flammability,explosiveness,item().charge * stack().amount * 160f,bounds() / 2f,state.rules.damageExplosions,item().flammability > 1,team);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 34,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 173,
        "startLineNumber" : 416,
        "startColumnNumber" : 26,
        "endLineNumber" : 418,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Damage.dynamicExplosion(x,y,flammability,explosiveness,item().charge * stack().amount * 160f,bounds() / 2f,state.rules.damageExplosions,item().flammability > 1,team);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 193,
        "startLineNumber" : 416,
        "startColumnNumber" : 8,
        "endLineNumber" : 418,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!spawnedByCore) {\n  Damage.dynamicExplosion(x,y,flammability,explosiveness,item().charge * stack().amount * 160f,bounds() / 2f,state.rules.damageExplosions,item().flammability > 1,team);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1231,
        "startLineNumber" : 409,
        "startColumnNumber" : 25,
        "endLineNumber" : 449,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!isAdded())   return;\n  float explosiveness=2f + item().explosiveness * stack().amount * 1.53f;\n  float flammability=item().flammability * stack().amount / 1.9f;\n  float item().charge * stack().amount * 160f=item().charge * stack().amount * 160f;\n  if (!spawnedByCore) {\n    Damage.dynamicExplosion(x,y,flammability,explosiveness,item().charge * stack().amount * 160f,bounds() / 2f,state.rules.damageExplosions,item().flammability > 1,team);\n  }\n  float shake=hitSize / 3f;\n  Effect.scorch(x,y,(int)(hitSize / 5));\n  Fx.explosion.at(this);\n  Effect.shake(shake,shake,this);\n  type.deathSound.at(this);\n  Events.fire(new UnitDestroyEvent(self()));\n  if (explosiveness > 7f && (isLocal() || wasPlayer)) {\n    Events.fire(Trigger.suicideBomb);\n  }\n  if (type.flying && !spawnedByCore) {\n    Damage.damage(team,x,y,Mathf.pow(hitSize,0.94f) * 1.25f,Mathf.pow(hitSize,0.75f) * type.crashDamageMultiplier * 5f,true,false,true);\n  }\n  if (!headless) {\n    for (int i=0; i < type.wreckRegions.length; i++) {\n      if (type.wreckRegions[i].found()) {\n        float range=type.hitSize / 4f;\n        Tmp.v1.rnd(range);\n        Effect.decal(type.wreckRegions[i],x + Tmp.v1.x,y + Tmp.v1.y,rotation - 90);\n      }\n    }\n  }\n  remove();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 265,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1330,
        "startLineNumber" : 408,
        "startColumnNumber" : 4,
        "endLineNumber" : 449,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Actually destroys the unit, removing it and creating explosions. \n */\npublic void destroy(){\n  if (!isAdded())   return;\n  float explosiveness=2f + item().explosiveness * stack().amount * 1.53f;\n  float flammability=item().flammability * stack().amount / 1.9f;\n  float item().charge * stack().amount * 160f=item().charge * stack().amount * 160f;\n  if (!spawnedByCore) {\n    Damage.dynamicExplosion(x,y,flammability,explosiveness,item().charge * stack().amount * 160f,bounds() / 2f,state.rules.damageExplosions,item().flammability > 1,team);\n  }\n  float shake=hitSize / 3f;\n  Effect.scorch(x,y,(int)(hitSize / 5));\n  Fx.explosion.at(this);\n  Effect.shake(shake,shake,this);\n  type.deathSound.at(this);\n  Events.fire(new UnitDestroyEvent(self()));\n  if (explosiveness > 7f && (isLocal() || wasPlayer)) {\n    Events.fire(Trigger.suicideBomb);\n  }\n  if (type.flying && !spawnedByCore) {\n    Damage.damage(team,x,y,Mathf.pow(hitSize,0.94f) * 1.25f,Mathf.pow(hitSize,0.75f) * type.crashDamageMultiplier * 5f,true,false,true);\n  }\n  if (!headless) {\n    for (int i=0; i < type.wreckRegions.length; i++) {\n      if (type.wreckRegions[i].found()) {\n        float range=type.hitSize / 4f;\n        Tmp.v1.rnd(range);\n        Effect.decal(type.wreckRegions[i],x + Tmp.v1.x,y + Tmp.v1.y,rotation - 90);\n      }\n    }\n  }\n  remove();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 270,
      "astHeight" : 14
    } ],
    "tokenLength" : 7,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 417,
    "startColumnNumber" : 71,
    "endLineNumber" : 417,
    "endColumnNumber" : 108
  } ],
  "layoutRelationDataList" : [ ]
}