{
  "id" : 37,
  "expression" : "buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry)",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "23306a36bb8f0585427e2399eb3ee6fba109a019",
  "filePath" : "jib-core/src/main/java/com/google/cloud/tools/jib/builder/RetrieveRegistryCredentialsStep.java",
  "occurrences" : 2,
  "expressionList" : [ {
    "nodeContext" : "buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 78,
      "startLineNumber" : 86,
      "startColumnNumber" : 10,
      "endLineNumber" : 86,
      "endColumnNumber" : 88
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 86,
        "startColumnNumber" : 10,
        "endLineNumber" : 86,
        "endColumnNumber" : 96
      },
      "nodeContext" : "buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry) != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 287,
        "startLineNumber" : 86,
        "startColumnNumber" : 6,
        "endLineNumber" : 89,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry) != null) {\n  logGotCredentialsFrom(buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry));\n  return buildConfiguration.getKnownRegistryCredentials().getAuthorization(registry);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1843,
        "startLineNumber" : 74,
        "startColumnNumber" : 81,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (  String credentialHelperSuffix : buildConfiguration.getCredentialHelperNames()) {\n    Authorization authorization=retrieveFromCredentialHelper(credentialHelperSuffix);\n    if (authorization != null) {\n      return authorization;\n    }\n  }\n  String buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry)=buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry);\n  if (buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry) != null) {\n    logGotCredentialsFrom(buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry));\n    return buildConfiguration.getKnownRegistryCredentials().getAuthorization(registry);\n  }\n  Authorization dockerConfigAuthorization=dockerConfigCredentialRetriever.retrieve();\n  if (dockerConfigAuthorization != null) {\n    buildConfiguration.getBuildLogger().info(\"Using credentials from Docker config for \" + registry);\n    return dockerConfigAuthorization;\n  }\n  for (  String registrySuffix : COMMON_CREDENTIAL_HELPERS.keySet()) {\n    if (registry.endsWith(registrySuffix)) {\n      try {\n        String commonCredentialHelper=COMMON_CREDENTIAL_HELPERS.get(registrySuffix);\n        if (commonCredentialHelper == null) {\n          throw new IllegalStateException(\"No COMMON_CREDENTIAL_HELPERS should be null\");\n        }\n        Authorization authorization=retrieveFromCredentialHelper(commonCredentialHelper);\n        if (authorization != null) {\n          return authorization;\n        }\n      }\n catch (      NonexistentDockerCredentialHelperException ex) {\n        if (ex.getMessage() != null) {\n          buildConfiguration.getBuildLogger().warn(ex.getMessage());\n        }\n      }\n    }\n  }\n  buildConfiguration.getBuildLogger().info(\"No credentials could be retrieved for registry \" + registry);\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 165,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1976,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (Timer ignored=new Timer(buildConfiguration.getBuildLogger(),String.format(DESCRIPTION,buildConfiguration.getTargetRegistry()))){\n  for (  String credentialHelperSuffix : buildConfiguration.getCredentialHelperNames()) {\n    Authorization authorization=retrieveFromCredentialHelper(credentialHelperSuffix);\n    if (authorization != null) {\n      return authorization;\n    }\n  }\n  String buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry)=buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry);\n  if (buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry) != null) {\n    logGotCredentialsFrom(buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry));\n    return buildConfiguration.getKnownRegistryCredentials().getAuthorization(registry);\n  }\n  Authorization dockerConfigAuthorization=dockerConfigCredentialRetriever.retrieve();\n  if (dockerConfigAuthorization != null) {\n    buildConfiguration.getBuildLogger().info(\"Using credentials from Docker config for \" + registry);\n    return dockerConfigAuthorization;\n  }\n  for (  String registrySuffix : COMMON_CREDENTIAL_HELPERS.keySet()) {\n    if (registry.endsWith(registrySuffix)) {\n      try {\n        String commonCredentialHelper=COMMON_CREDENTIAL_HELPERS.get(registrySuffix);\n        if (commonCredentialHelper == null) {\n          throw new IllegalStateException(\"No COMMON_CREDENTIAL_HELPERS should be null\");\n        }\n        Authorization authorization=retrieveFromCredentialHelper(commonCredentialHelper);\n        if (authorization != null) {\n          return authorization;\n        }\n      }\n catch (      NonexistentDockerCredentialHelperException ex) {\n        if (ex.getMessage() != null) {\n          buildConfiguration.getBuildLogger().warn(ex.getMessage());\n        }\n      }\n    }\n  }\n  buildConfiguration.getBuildLogger().info(\"No credentials could be retrieved for registry \" + registry);\n  return null;\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 184,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2062,
        "startLineNumber" : 70,
        "startColumnNumber" : 93,
        "endLineNumber" : 132,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try (Timer ignored=new Timer(buildConfiguration.getBuildLogger(),String.format(DESCRIPTION,buildConfiguration.getTargetRegistry()))){\n    for (    String credentialHelperSuffix : buildConfiguration.getCredentialHelperNames()) {\n      Authorization authorization=retrieveFromCredentialHelper(credentialHelperSuffix);\n      if (authorization != null) {\n        return authorization;\n      }\n    }\n    String buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry)=buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry);\n    if (buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry) != null) {\n      logGotCredentialsFrom(buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry));\n      return buildConfiguration.getKnownRegistryCredentials().getAuthorization(registry);\n    }\n    Authorization dockerConfigAuthorization=dockerConfigCredentialRetriever.retrieve();\n    if (dockerConfigAuthorization != null) {\n      buildConfiguration.getBuildLogger().info(\"Using credentials from Docker config for \" + registry);\n      return dockerConfigAuthorization;\n    }\n    for (    String registrySuffix : COMMON_CREDENTIAL_HELPERS.keySet()) {\n      if (registry.endsWith(registrySuffix)) {\n        try {\n          String commonCredentialHelper=COMMON_CREDENTIAL_HELPERS.get(registrySuffix);\n          if (commonCredentialHelper == null) {\n            throw new IllegalStateException(\"No COMMON_CREDENTIAL_HELPERS should be null\");\n          }\n          Authorization authorization=retrieveFromCredentialHelper(commonCredentialHelper);\n          if (authorization != null) {\n            return authorization;\n          }\n        }\n catch (        NonexistentDockerCredentialHelperException ex) {\n          if (ex.getMessage() != null) {\n            buildConfiguration.getBuildLogger().warn(ex.getMessage());\n          }\n        }\n      }\n    }\n    buildConfiguration.getBuildLogger().info(\"No credentials could be retrieved for registry \" + registry);\n    return null;\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 185,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2173,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 132,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override @Nullable public Authorization call() throws IOException, NonexistentDockerCredentialHelperException {\n  try (Timer ignored=new Timer(buildConfiguration.getBuildLogger(),String.format(DESCRIPTION,buildConfiguration.getTargetRegistry()))){\n    for (    String credentialHelperSuffix : buildConfiguration.getCredentialHelperNames()) {\n      Authorization authorization=retrieveFromCredentialHelper(credentialHelperSuffix);\n      if (authorization != null) {\n        return authorization;\n      }\n    }\n    String buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry)=buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry);\n    if (buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry) != null) {\n      logGotCredentialsFrom(buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry));\n      return buildConfiguration.getKnownRegistryCredentials().getAuthorization(registry);\n    }\n    Authorization dockerConfigAuthorization=dockerConfigCredentialRetriever.retrieve();\n    if (dockerConfigAuthorization != null) {\n      buildConfiguration.getBuildLogger().info(\"Using credentials from Docker config for \" + registry);\n      return dockerConfigAuthorization;\n    }\n    for (    String registrySuffix : COMMON_CREDENTIAL_HELPERS.keySet()) {\n      if (registry.endsWith(registrySuffix)) {\n        try {\n          String commonCredentialHelper=COMMON_CREDENTIAL_HELPERS.get(registrySuffix);\n          if (commonCredentialHelper == null) {\n            throw new IllegalStateException(\"No COMMON_CREDENTIAL_HELPERS should be null\");\n          }\n          Authorization authorization=retrieveFromCredentialHelper(commonCredentialHelper);\n          if (authorization != null) {\n            return authorization;\n          }\n        }\n catch (        NonexistentDockerCredentialHelperException ex) {\n          if (ex.getMessage() != null) {\n            buildConfiguration.getBuildLogger().warn(ex.getMessage());\n          }\n        }\n      }\n    }\n    buildConfiguration.getBuildLogger().info(\"No credentials could be retrieved for registry \" + registry);\n    return null;\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 198,
      "astHeight" : 17
    } ],
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 78,
      "startLineNumber" : 87,
      "startColumnNumber" : 30,
      "endLineNumber" : 87,
      "endColumnNumber" : 108
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 109
      },
      "nodeContext" : "logGotCredentialsFrom(buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 111
      },
      "nodeContext" : "logGotCredentialsFrom(buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 195,
        "startLineNumber" : 86,
        "startColumnNumber" : 36,
        "endLineNumber" : 89,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  logGotCredentialsFrom(buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry));\n  return buildConfiguration.getKnownRegistryCredentials().getAuthorization(registry);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 287,
        "startLineNumber" : 86,
        "startColumnNumber" : 6,
        "endLineNumber" : 89,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry) != null) {\n  logGotCredentialsFrom(buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry));\n  return buildConfiguration.getKnownRegistryCredentials().getAuthorization(registry);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1843,
        "startLineNumber" : 74,
        "startColumnNumber" : 81,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (  String credentialHelperSuffix : buildConfiguration.getCredentialHelperNames()) {\n    Authorization authorization=retrieveFromCredentialHelper(credentialHelperSuffix);\n    if (authorization != null) {\n      return authorization;\n    }\n  }\n  String buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry)=buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry);\n  if (buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry) != null) {\n    logGotCredentialsFrom(buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry));\n    return buildConfiguration.getKnownRegistryCredentials().getAuthorization(registry);\n  }\n  Authorization dockerConfigAuthorization=dockerConfigCredentialRetriever.retrieve();\n  if (dockerConfigAuthorization != null) {\n    buildConfiguration.getBuildLogger().info(\"Using credentials from Docker config for \" + registry);\n    return dockerConfigAuthorization;\n  }\n  for (  String registrySuffix : COMMON_CREDENTIAL_HELPERS.keySet()) {\n    if (registry.endsWith(registrySuffix)) {\n      try {\n        String commonCredentialHelper=COMMON_CREDENTIAL_HELPERS.get(registrySuffix);\n        if (commonCredentialHelper == null) {\n          throw new IllegalStateException(\"No COMMON_CREDENTIAL_HELPERS should be null\");\n        }\n        Authorization authorization=retrieveFromCredentialHelper(commonCredentialHelper);\n        if (authorization != null) {\n          return authorization;\n        }\n      }\n catch (      NonexistentDockerCredentialHelperException ex) {\n        if (ex.getMessage() != null) {\n          buildConfiguration.getBuildLogger().warn(ex.getMessage());\n        }\n      }\n    }\n  }\n  buildConfiguration.getBuildLogger().info(\"No credentials could be retrieved for registry \" + registry);\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 165,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1976,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (Timer ignored=new Timer(buildConfiguration.getBuildLogger(),String.format(DESCRIPTION,buildConfiguration.getTargetRegistry()))){\n  for (  String credentialHelperSuffix : buildConfiguration.getCredentialHelperNames()) {\n    Authorization authorization=retrieveFromCredentialHelper(credentialHelperSuffix);\n    if (authorization != null) {\n      return authorization;\n    }\n  }\n  String buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry)=buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry);\n  if (buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry) != null) {\n    logGotCredentialsFrom(buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry));\n    return buildConfiguration.getKnownRegistryCredentials().getAuthorization(registry);\n  }\n  Authorization dockerConfigAuthorization=dockerConfigCredentialRetriever.retrieve();\n  if (dockerConfigAuthorization != null) {\n    buildConfiguration.getBuildLogger().info(\"Using credentials from Docker config for \" + registry);\n    return dockerConfigAuthorization;\n  }\n  for (  String registrySuffix : COMMON_CREDENTIAL_HELPERS.keySet()) {\n    if (registry.endsWith(registrySuffix)) {\n      try {\n        String commonCredentialHelper=COMMON_CREDENTIAL_HELPERS.get(registrySuffix);\n        if (commonCredentialHelper == null) {\n          throw new IllegalStateException(\"No COMMON_CREDENTIAL_HELPERS should be null\");\n        }\n        Authorization authorization=retrieveFromCredentialHelper(commonCredentialHelper);\n        if (authorization != null) {\n          return authorization;\n        }\n      }\n catch (      NonexistentDockerCredentialHelperException ex) {\n        if (ex.getMessage() != null) {\n          buildConfiguration.getBuildLogger().warn(ex.getMessage());\n        }\n      }\n    }\n  }\n  buildConfiguration.getBuildLogger().info(\"No credentials could be retrieved for registry \" + registry);\n  return null;\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 184,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2062,
        "startLineNumber" : 70,
        "startColumnNumber" : 93,
        "endLineNumber" : 132,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try (Timer ignored=new Timer(buildConfiguration.getBuildLogger(),String.format(DESCRIPTION,buildConfiguration.getTargetRegistry()))){\n    for (    String credentialHelperSuffix : buildConfiguration.getCredentialHelperNames()) {\n      Authorization authorization=retrieveFromCredentialHelper(credentialHelperSuffix);\n      if (authorization != null) {\n        return authorization;\n      }\n    }\n    String buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry)=buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry);\n    if (buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry) != null) {\n      logGotCredentialsFrom(buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry));\n      return buildConfiguration.getKnownRegistryCredentials().getAuthorization(registry);\n    }\n    Authorization dockerConfigAuthorization=dockerConfigCredentialRetriever.retrieve();\n    if (dockerConfigAuthorization != null) {\n      buildConfiguration.getBuildLogger().info(\"Using credentials from Docker config for \" + registry);\n      return dockerConfigAuthorization;\n    }\n    for (    String registrySuffix : COMMON_CREDENTIAL_HELPERS.keySet()) {\n      if (registry.endsWith(registrySuffix)) {\n        try {\n          String commonCredentialHelper=COMMON_CREDENTIAL_HELPERS.get(registrySuffix);\n          if (commonCredentialHelper == null) {\n            throw new IllegalStateException(\"No COMMON_CREDENTIAL_HELPERS should be null\");\n          }\n          Authorization authorization=retrieveFromCredentialHelper(commonCredentialHelper);\n          if (authorization != null) {\n            return authorization;\n          }\n        }\n catch (        NonexistentDockerCredentialHelperException ex) {\n          if (ex.getMessage() != null) {\n            buildConfiguration.getBuildLogger().warn(ex.getMessage());\n          }\n        }\n      }\n    }\n    buildConfiguration.getBuildLogger().info(\"No credentials could be retrieved for registry \" + registry);\n    return null;\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 185,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2173,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 132,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override @Nullable public Authorization call() throws IOException, NonexistentDockerCredentialHelperException {\n  try (Timer ignored=new Timer(buildConfiguration.getBuildLogger(),String.format(DESCRIPTION,buildConfiguration.getTargetRegistry()))){\n    for (    String credentialHelperSuffix : buildConfiguration.getCredentialHelperNames()) {\n      Authorization authorization=retrieveFromCredentialHelper(credentialHelperSuffix);\n      if (authorization != null) {\n        return authorization;\n      }\n    }\n    String buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry)=buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry);\n    if (buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry) != null) {\n      logGotCredentialsFrom(buildConfiguration.getKnownRegistryCredentials().getCredentialSource(registry));\n      return buildConfiguration.getKnownRegistryCredentials().getAuthorization(registry);\n    }\n    Authorization dockerConfigAuthorization=dockerConfigCredentialRetriever.retrieve();\n    if (dockerConfigAuthorization != null) {\n      buildConfiguration.getBuildLogger().info(\"Using credentials from Docker config for \" + registry);\n      return dockerConfigAuthorization;\n    }\n    for (    String registrySuffix : COMMON_CREDENTIAL_HELPERS.keySet()) {\n      if (registry.endsWith(registrySuffix)) {\n        try {\n          String commonCredentialHelper=COMMON_CREDENTIAL_HELPERS.get(registrySuffix);\n          if (commonCredentialHelper == null) {\n            throw new IllegalStateException(\"No COMMON_CREDENTIAL_HELPERS should be null\");\n          }\n          Authorization authorization=retrieveFromCredentialHelper(commonCredentialHelper);\n          if (authorization != null) {\n            return authorization;\n          }\n        }\n catch (        NonexistentDockerCredentialHelperException ex) {\n          if (ex.getMessage() != null) {\n            buildConfiguration.getBuildLogger().warn(ex.getMessage());\n          }\n        }\n      }\n    }\n    buildConfiguration.getBuildLogger().info(\"No credentials could be retrieved for registry \" + registry);\n    return null;\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 198,
      "astHeight" : 17
    } ],
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 78,
    "startLineNumber" : 86,
    "startColumnNumber" : 10,
    "endLineNumber" : 86,
    "endColumnNumber" : 88
  }, {
    "charLength" : 78,
    "startLineNumber" : 87,
    "startColumnNumber" : 30,
    "endLineNumber" : 87,
    "endColumnNumber" : 108
  } ],
  "layoutRelationDataList" : [ ]
}