{
  "id" : 3,
  "expression" : "new SearchRequest().indices(\"blog\").types(\"article\").source(builder)",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "persistence-modules/spring-data-elasticsearch/src/test/java/com/baeldung/spring/data/es/ElasticSearchQueryManualTest.java",
  "occurrences" : 1,
  "expressionList" : [ {
    "nodeContext" : "new SearchRequest().indices(\"blog\").types(\"article\").source(builder)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 68,
      "startLineNumber" : 178,
      "startColumnNumber" : 54,
      "endLineNumber" : 178,
      "endColumnNumber" : 122
    },
    "astNodeNumber" : 12,
    "astHeight" : 6,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 178,
        "startColumnNumber" : 40,
        "endLineNumber" : 178,
        "endColumnNumber" : 146
      },
      "nodeContext" : "client.search(new SearchRequest().indices(\"blog\").types(\"article\").source(builder),RequestOptions.DEFAULT)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 178,
        "startColumnNumber" : 29,
        "endLineNumber" : 178,
        "endColumnNumber" : 144
      },
      "nodeContext" : "response=client.search(new SearchRequest().indices(\"blog\").types(\"article\").source(builder),RequestOptions.DEFAULT)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 178,
        "startColumnNumber" : 8,
        "endLineNumber" : 178,
        "endColumnNumber" : 146
      },
      "nodeContext" : "final SearchResponse response=client.search(new SearchRequest().indices(\"blog\").types(\"article\").source(builder),RequestOptions.DEFAULT);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 891,
        "startLineNumber" : 168,
        "startColumnNumber" : 119,
        "endLineNumber" : 187,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final TermsAggregationBuilder aggregation=AggregationBuilders.terms(\"top_tags\").field(\"tags\").order(BucketOrder.count(false));\n  final SearchSourceBuilder builder=new SearchSourceBuilder().aggregation(aggregation);\n  final SearchRequest new SearchRequest().indices(\"blog\").types(\"article\").source(builder)=new SearchRequest().indices(\"blog\").types(\"article\").source(builder);\n  final SearchResponse response=client.search(new SearchRequest().indices(\"blog\").types(\"article\").source(builder),RequestOptions.DEFAULT);\n  final Map<String,Aggregation> results=response.getAggregations().asMap();\n  final ParsedStringTerms topTags=(ParsedStringTerms)results.get(\"top_tags\");\n  final List<String> keys=topTags.getBuckets().stream().map(MultiBucketsAggregation.Bucket::getKeyAsString).collect(toList());\n  assertEquals(asList(\"elasticsearch\",\"spring data\",\"search engines\",\"tutorial\"),keys);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1012,
        "startLineNumber" : 167,
        "startColumnNumber" : 4,
        "endLineNumber" : 187,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenNotAnalyzedQuery_whenMakeAggregationOnTermCount_thenEachTermCountsIndividually() throws Exception {\n  final TermsAggregationBuilder aggregation=AggregationBuilders.terms(\"top_tags\").field(\"tags\").order(BucketOrder.count(false));\n  final SearchSourceBuilder builder=new SearchSourceBuilder().aggregation(aggregation);\n  final SearchRequest new SearchRequest().indices(\"blog\").types(\"article\").source(builder)=new SearchRequest().indices(\"blog\").types(\"article\").source(builder);\n  final SearchResponse response=client.search(new SearchRequest().indices(\"blog\").types(\"article\").source(builder),RequestOptions.DEFAULT);\n  final Map<String,Aggregation> results=response.getAggregations().asMap();\n  final ParsedStringTerms topTags=(ParsedStringTerms)results.get(\"top_tags\");\n  final List<String> keys=topTags.getBuckets().stream().map(MultiBucketsAggregation.Bucket::getKeyAsString).collect(toList());\n  assertEquals(asList(\"elasticsearch\",\"spring data\",\"search engines\",\"tutorial\"),keys);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 11
    } ],
    "tokenLength" : 7,
    "type" : "com.baeldung.spring.data.es.SearchRequest"
  } ],
  "positionList" : [ {
    "charLength" : 68,
    "startLineNumber" : 178,
    "startColumnNumber" : 54,
    "endLineNumber" : 178,
    "endColumnNumber" : 122
  } ],
  "layoutRelationDataList" : [ ]
}