{
  "id" : 8,
  "expression" : "convertAcls(acl)",
  "projectName" : "apache@zookeeper",
  "commitID" : "0bc7d41e3f15f02c81d63cc8fcf0f373ee867327",
  "filePath" : "src/java/main/org/apache/zookeeper/server/DataTree.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "convertAcls(acl)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 283,
      "startColumnNumber" : 17,
      "endLineNumber" : 283,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 283,
        "startColumnNumber" : 17,
        "endLineNumber" : 283,
        "endColumnNumber" : 43
      },
      "nodeContext" : "longval=convertAcls(acl)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 283,
        "startColumnNumber" : 12,
        "endLineNumber" : 283,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Long longval=convertAcls(acl);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 832,
        "startLineNumber" : 276,
        "startColumnNumber" : 30,
        "endLineNumber" : 297,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (parent.children.contains(childName)) {\n    throw new KeeperException.NodeExistsException();\n  }\n  int cver=parent.stat.getCversion();\n  cver++;\n  parent.stat.setCversion(cver);\n  Long longval=convertAcls(acl);\n  DataNode child=new DataNode(parent,data,longval,stat);\n  parent.children.add(childName);\n  nodes.put(path,child);\n  if (ephemeralOwner != 0) {\n    HashSet<String> list=ephemerals.get(ephemeralOwner);\n    if (list == null) {\n      list=new HashSet<String>();\n      ephemerals.put(ephemeralOwner,list);\n    }\nsynchronized (list) {\n      list.add(path);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 854,
        "startLineNumber" : 276,
        "startColumnNumber" : 8,
        "endLineNumber" : 297,
        "endColumnNumber" : 9
      },
      "nodeContext" : "synchronized (parent) {\n  if (parent.children.contains(childName)) {\n    throw new KeeperException.NodeExistsException();\n  }\n  int cver=parent.stat.getCversion();\n  cver++;\n  parent.stat.setCversion(cver);\n  Long longval=convertAcls(acl);\n  DataNode child=new DataNode(parent,data,longval,stat);\n  parent.children.add(childName);\n  nodes.put(path,child);\n  if (ephemeralOwner != 0) {\n    HashSet<String> list=ephemerals.get(ephemeralOwner);\n    if (list == null) {\n      list=new HashSet<String>();\n      ephemerals.put(ephemeralOwner,list);\n    }\nsynchronized (list) {\n      list.add(path);\n    }\n  }\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 114,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1650,
        "startLineNumber" : 260,
        "startColumnNumber" : 84,
        "endLineNumber" : 301,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int lastSlash=path.lastIndexOf('/');\n  String parentName=path.substring(0,lastSlash);\n  String childName=path.substring(lastSlash + 1);\n  StatPersisted stat=new StatPersisted();\n  stat.setCtime(time);\n  stat.setMtime(time);\n  stat.setCzxid(zxid);\n  stat.setMzxid(zxid);\n  stat.setVersion(0);\n  stat.setAversion(0);\n  stat.setEphemeralOwner(ephemeralOwner);\n  DataNode parent=nodes.get(parentName);\n  if (parent == null) {\n    throw new KeeperException.NoNodeException();\n  }\nsynchronized (parent) {\n    if (parent.children.contains(childName)) {\n      throw new KeeperException.NodeExistsException();\n    }\n    int cver=parent.stat.getCversion();\n    cver++;\n    parent.stat.setCversion(cver);\n    Long longval=convertAcls(acl);\n    DataNode child=new DataNode(parent,data,longval,stat);\n    parent.children.add(childName);\n    nodes.put(path,child);\n    if (ephemeralOwner != 0) {\n      HashSet<String> list=ephemerals.get(ephemeralOwner);\n      if (list == null) {\n        list=new HashSet<String>();\n        ephemerals.put(ephemeralOwner,list);\n      }\nsynchronized (list) {\n        list.add(path);\n      }\n    }\n  }\n  dataWatches.triggerWatch(path,Event.EventType.NodeCreated);\n  childWatches.triggerWatch(parentName.equals(\"\") ? \"/\" : parentName,Event.EventType.NodeChildrenChanged);\n  return path;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 235,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2195,
        "startLineNumber" : 246,
        "startColumnNumber" : 4,
        "endLineNumber" : 301,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @param path\n * @param data\n * @param acl\n * @param ephemeralOwner the session id that owns this node. -1 indicates this is not an ephemeral node.\n * @param zxid\n * @param time\n * @return the patch of the created node\n * @throws KeeperException\n */\npublic String createNode(String path,byte data[],List<ACL> acl,long ephemeralOwner,long zxid,long time) throws KeeperException.NoNodeException, KeeperException.NodeExistsException {\n  int lastSlash=path.lastIndexOf('/');\n  String parentName=path.substring(0,lastSlash);\n  String childName=path.substring(lastSlash + 1);\n  StatPersisted stat=new StatPersisted();\n  stat.setCtime(time);\n  stat.setMtime(time);\n  stat.setCzxid(zxid);\n  stat.setMzxid(zxid);\n  stat.setVersion(0);\n  stat.setAversion(0);\n  stat.setEphemeralOwner(ephemeralOwner);\n  DataNode parent=nodes.get(parentName);\n  if (parent == null) {\n    throw new KeeperException.NoNodeException();\n  }\nsynchronized (parent) {\n    if (parent.children.contains(childName)) {\n      throw new KeeperException.NodeExistsException();\n    }\n    int cver=parent.stat.getCversion();\n    cver++;\n    parent.stat.setCversion(cver);\n    Long longval=convertAcls(acl);\n    DataNode child=new DataNode(parent,data,longval,stat);\n    parent.children.add(childName);\n    nodes.put(path,child);\n    if (ephemeralOwner != 0) {\n      HashSet<String> list=ephemerals.get(ephemeralOwner);\n      if (list == null) {\n        list=new HashSet<String>();\n        ephemerals.put(ephemeralOwner,list);\n      }\nsynchronized (list) {\n        list.add(path);\n      }\n    }\n  }\n  dataWatches.triggerWatch(path,Event.EventType.NodeCreated);\n  childWatches.triggerWatch(parentName.equals(\"\") ? \"/\" : parentName,Event.EventType.NodeChildrenChanged);\n  return path;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 273,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 283,
        "startColumnNumber" : 12,
        "endLineNumber" : 283,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Long longval=convertAcls(acl);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : null
  }, {
    "nodeContext" : "longval",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 284,
      "startColumnNumber" : 56,
      "endLineNumber" : 284,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 284,
        "startColumnNumber" : 29,
        "endLineNumber" : 284,
        "endColumnNumber" : 70
      },
      "nodeContext" : "new DataNode(parent,data,longval,stat)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 284,
        "startColumnNumber" : 21,
        "endLineNumber" : 284,
        "endColumnNumber" : 70
      },
      "nodeContext" : "child=new DataNode(parent,data,longval,stat)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 284,
        "startColumnNumber" : 12,
        "endLineNumber" : 284,
        "endColumnNumber" : 71
      },
      "nodeContext" : "DataNode child=new DataNode(parent,data,longval,stat);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 832,
        "startLineNumber" : 276,
        "startColumnNumber" : 30,
        "endLineNumber" : 297,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (parent.children.contains(childName)) {\n    throw new KeeperException.NodeExistsException();\n  }\n  int cver=parent.stat.getCversion();\n  cver++;\n  parent.stat.setCversion(cver);\n  Long longval=convertAcls(acl);\n  DataNode child=new DataNode(parent,data,longval,stat);\n  parent.children.add(childName);\n  nodes.put(path,child);\n  if (ephemeralOwner != 0) {\n    HashSet<String> list=ephemerals.get(ephemeralOwner);\n    if (list == null) {\n      list=new HashSet<String>();\n      ephemerals.put(ephemeralOwner,list);\n    }\nsynchronized (list) {\n      list.add(path);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 854,
        "startLineNumber" : 276,
        "startColumnNumber" : 8,
        "endLineNumber" : 297,
        "endColumnNumber" : 9
      },
      "nodeContext" : "synchronized (parent) {\n  if (parent.children.contains(childName)) {\n    throw new KeeperException.NodeExistsException();\n  }\n  int cver=parent.stat.getCversion();\n  cver++;\n  parent.stat.setCversion(cver);\n  Long longval=convertAcls(acl);\n  DataNode child=new DataNode(parent,data,longval,stat);\n  parent.children.add(childName);\n  nodes.put(path,child);\n  if (ephemeralOwner != 0) {\n    HashSet<String> list=ephemerals.get(ephemeralOwner);\n    if (list == null) {\n      list=new HashSet<String>();\n      ephemerals.put(ephemeralOwner,list);\n    }\nsynchronized (list) {\n      list.add(path);\n    }\n  }\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 114,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1650,
        "startLineNumber" : 260,
        "startColumnNumber" : 84,
        "endLineNumber" : 301,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int lastSlash=path.lastIndexOf('/');\n  String parentName=path.substring(0,lastSlash);\n  String childName=path.substring(lastSlash + 1);\n  StatPersisted stat=new StatPersisted();\n  stat.setCtime(time);\n  stat.setMtime(time);\n  stat.setCzxid(zxid);\n  stat.setMzxid(zxid);\n  stat.setVersion(0);\n  stat.setAversion(0);\n  stat.setEphemeralOwner(ephemeralOwner);\n  DataNode parent=nodes.get(parentName);\n  if (parent == null) {\n    throw new KeeperException.NoNodeException();\n  }\nsynchronized (parent) {\n    if (parent.children.contains(childName)) {\n      throw new KeeperException.NodeExistsException();\n    }\n    int cver=parent.stat.getCversion();\n    cver++;\n    parent.stat.setCversion(cver);\n    Long longval=convertAcls(acl);\n    DataNode child=new DataNode(parent,data,longval,stat);\n    parent.children.add(childName);\n    nodes.put(path,child);\n    if (ephemeralOwner != 0) {\n      HashSet<String> list=ephemerals.get(ephemeralOwner);\n      if (list == null) {\n        list=new HashSet<String>();\n        ephemerals.put(ephemeralOwner,list);\n      }\nsynchronized (list) {\n        list.add(path);\n      }\n    }\n  }\n  dataWatches.triggerWatch(path,Event.EventType.NodeCreated);\n  childWatches.triggerWatch(parentName.equals(\"\") ? \"/\" : parentName,Event.EventType.NodeChildrenChanged);\n  return path;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 235,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2195,
        "startLineNumber" : 246,
        "startColumnNumber" : 4,
        "endLineNumber" : 301,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @param path\n * @param data\n * @param acl\n * @param ephemeralOwner the session id that owns this node. -1 indicates this is not an ephemeral node.\n * @param zxid\n * @param time\n * @return the patch of the created node\n * @throws KeeperException\n */\npublic String createNode(String path,byte data[],List<ACL> acl,long ephemeralOwner,long zxid,long time) throws KeeperException.NoNodeException, KeeperException.NodeExistsException {\n  int lastSlash=path.lastIndexOf('/');\n  String parentName=path.substring(0,lastSlash);\n  String childName=path.substring(lastSlash + 1);\n  StatPersisted stat=new StatPersisted();\n  stat.setCtime(time);\n  stat.setMtime(time);\n  stat.setCzxid(zxid);\n  stat.setMzxid(zxid);\n  stat.setVersion(0);\n  stat.setAversion(0);\n  stat.setEphemeralOwner(ephemeralOwner);\n  DataNode parent=nodes.get(parentName);\n  if (parent == null) {\n    throw new KeeperException.NoNodeException();\n  }\nsynchronized (parent) {\n    if (parent.children.contains(childName)) {\n      throw new KeeperException.NodeExistsException();\n    }\n    int cver=parent.stat.getCversion();\n    cver++;\n    parent.stat.setCversion(cver);\n    Long longval=convertAcls(acl);\n    DataNode child=new DataNode(parent,data,longval,stat);\n    parent.children.add(childName);\n    nodes.put(path,child);\n    if (ephemeralOwner != 0) {\n      HashSet<String> list=ephemerals.get(ephemeralOwner);\n      if (list == null) {\n        list=new HashSet<String>();\n        ephemerals.put(ephemeralOwner,list);\n      }\nsynchronized (list) {\n        list.add(path);\n      }\n    }\n  }\n  dataWatches.triggerWatch(path,Event.EventType.NodeCreated);\n  childWatches.triggerWatch(parentName.equals(\"\") ? \"/\" : parentName,Event.EventType.NodeChildrenChanged);\n  return path;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 273,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 284,
        "startColumnNumber" : 12,
        "endLineNumber" : 284,
        "endColumnNumber" : 71
      },
      "nodeContext" : "DataNode child=new DataNode(parent,data,longval,stat);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Long"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 283,
    "startColumnNumber" : 17,
    "endLineNumber" : 283,
    "endColumnNumber" : 24
  }, {
    "charLength" : 7,
    "startLineNumber" : 284,
    "startColumnNumber" : 56,
    "endLineNumber" : 284,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ]
}