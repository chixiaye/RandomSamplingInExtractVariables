{
  "id" : 3,
  "expression" : "transformation.audioMimeType == null ? checkNotNull(inputFormat).sampleMimeType : transformation.audioMimeType",
  "projectName" : "google@ExoPlayer",
  "commitID" : "a42d9f36b12033eb7accc3c08dbb365c66800e6f",
  "filePath" : "library/transformer/src/main/java/com/google/android/exoplayer2/transformer/TransformerAudioRenderer.java",
  "occurrences" : 1,
  "expressionList" : [ {
    "nodeContext" : "transformation.audioMimeType == null ? checkNotNull(inputFormat).sampleMimeType : transformation.audioMimeType",
    "nodeType" : "ConditionalExpression",
    "nodePosition" : {
      "charLength" : 110,
      "startLineNumber" : 361,
      "startColumnNumber" : 37,
      "endLineNumber" : 361,
      "endColumnNumber" : 147
    },
    "astNodeNumber" : 14,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 360,
        "startColumnNumber" : 14,
        "endLineNumber" : 361,
        "endColumnNumber" : 51
      },
      "nodeContext" : "new Format.Builder().setSampleMimeType(transformation.audioMimeType == null ? checkNotNull(inputFormat).sampleMimeType : transformation.audioMimeType)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 194,
        "startLineNumber" : 360,
        "startColumnNumber" : 14,
        "endLineNumber" : 362,
        "endColumnNumber" : 62
      },
      "nodeContext" : "new Format.Builder().setSampleMimeType(transformation.audioMimeType == null ? checkNotNull(inputFormat).sampleMimeType : transformation.audioMimeType).setSampleRate(outputAudioFormat.sampleRate)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 242,
        "startLineNumber" : 360,
        "startColumnNumber" : 14,
        "endLineNumber" : 363,
        "endColumnNumber" : 66
      },
      "nodeContext" : "new Format.Builder().setSampleMimeType(transformation.audioMimeType == null ? checkNotNull(inputFormat).sampleMimeType : transformation.audioMimeType).setSampleRate(outputAudioFormat.sampleRate).setChannelCount(outputAudioFormat.channelCount)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 285,
        "startLineNumber" : 360,
        "startColumnNumber" : 14,
        "endLineNumber" : 364,
        "endColumnNumber" : 61
      },
      "nodeContext" : "new Format.Builder().setSampleMimeType(transformation.audioMimeType == null ? checkNotNull(inputFormat).sampleMimeType : transformation.audioMimeType).setSampleRate(outputAudioFormat.sampleRate).setChannelCount(outputAudioFormat.channelCount).setAverageBitrate(DEFAULT_ENCODER_BITRATE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 34,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 293,
        "startLineNumber" : 360,
        "startColumnNumber" : 14,
        "endLineNumber" : 365,
        "endColumnNumber" : 26
      },
      "nodeContext" : "new Format.Builder().setSampleMimeType(transformation.audioMimeType == null ? checkNotNull(inputFormat).sampleMimeType : transformation.audioMimeType).setSampleRate(outputAudioFormat.sampleRate).setChannelCount(outputAudioFormat.channelCount).setAverageBitrate(DEFAULT_ENCODER_BITRATE).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 36,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 342,
        "startLineNumber" : 359,
        "startColumnNumber" : 10,
        "endLineNumber" : 365,
        "endColumnNumber" : 27
      },
      "nodeContext" : "MediaCodecAdapterWrapper.createForAudioEncoding(new Format.Builder().setSampleMimeType(transformation.audioMimeType == null ? checkNotNull(inputFormat).sampleMimeType : transformation.audioMimeType).setSampleRate(outputAudioFormat.sampleRate).setChannelCount(outputAudioFormat.channelCount).setAverageBitrate(DEFAULT_ENCODER_BITRATE).build())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 39,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 350,
        "startLineNumber" : 358,
        "startColumnNumber" : 6,
        "endLineNumber" : 365,
        "endColumnNumber" : 27
      },
      "nodeContext" : "encoder=MediaCodecAdapterWrapper.createForAudioEncoding(new Format.Builder().setSampleMimeType(transformation.audioMimeType == null ? checkNotNull(inputFormat).sampleMimeType : transformation.audioMimeType).setSampleRate(outputAudioFormat.sampleRate).setChannelCount(outputAudioFormat.channelCount).setAverageBitrate(DEFAULT_ENCODER_BITRATE).build())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 41,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 352,
        "startLineNumber" : 358,
        "startColumnNumber" : 6,
        "endLineNumber" : 365,
        "endColumnNumber" : 28
      },
      "nodeContext" : "encoder=MediaCodecAdapterWrapper.createForAudioEncoding(new Format.Builder().setSampleMimeType(transformation.audioMimeType == null ? checkNotNull(inputFormat).sampleMimeType : transformation.audioMimeType).setSampleRate(outputAudioFormat.sampleRate).setChannelCount(outputAudioFormat.channelCount).setAverageBitrate(DEFAULT_ENCODER_BITRATE).build());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 42,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 357,
        "startColumnNumber" : 8,
        "endLineNumber" : 366,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  encoder=MediaCodecAdapterWrapper.createForAudioEncoding(new Format.Builder().setSampleMimeType(transformation.audioMimeType == null ? checkNotNull(inputFormat).sampleMimeType : transformation.audioMimeType).setSampleRate(outputAudioFormat.sampleRate).setChannelCount(outputAudioFormat.channelCount).setAverageBitrate(DEFAULT_ENCODER_BITRATE).build());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 466,
        "startLineNumber" : 357,
        "startColumnNumber" : 4,
        "endLineNumber" : 369,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  encoder=MediaCodecAdapterWrapper.createForAudioEncoding(new Format.Builder().setSampleMimeType(transformation.audioMimeType == null ? checkNotNull(inputFormat).sampleMimeType : transformation.audioMimeType).setSampleRate(outputAudioFormat.sampleRate).setChannelCount(outputAudioFormat.channelCount).setAverageBitrate(DEFAULT_ENCODER_BITRATE).build());\n}\n catch (IOException e) {\n  throw createRendererException(e,PlaybackException.ERROR_CODE_UNSPECIFIED);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 57,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1679,
        "startLineNumber" : 330,
        "startColumnNumber" : 90,
        "endLineNumber" : 372,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (encoder != null) {\n    return true;\n  }\n  MediaCodecAdapterWrapper decoder=checkNotNull(this.decoder);\n  @Nullable Format decoderOutputFormat=decoder.getOutputFormat();\n  if (decoderOutputFormat == null) {\n    return false;\n  }\n  AudioFormat outputAudioFormat=new AudioFormat(decoderOutputFormat.sampleRate,decoderOutputFormat.channelCount,decoderOutputFormat.pcmEncoding);\n  if (transformation.flattenForSlowMotion) {\n    try {\n      outputAudioFormat=sonicAudioProcessor.configure(outputAudioFormat);\n      flushSonicAndSetSpeed(currentSpeed);\n    }\n catch (    AudioProcessor.UnhandledAudioFormatException e) {\n      throw createRendererException(e,PlaybackException.ERROR_CODE_UNSPECIFIED);\n    }\n  }\n  String transformation.audioMimeType == null ? checkNotNull(inputFormat).sampleMimeType : transformation.audioMimeType=transformation.transformation.audioMimeType == null ? checkNotNull(inputFormat).sampleMimeType : transformation.audioMimeType == null ? checkNotNull(inputFormat).sampleMimeType : transformation.transformation.audioMimeType == null ? checkNotNull(inputFormat).sampleMimeType : transformation.audioMimeType;\n  try {\n    encoder=MediaCodecAdapterWrapper.createForAudioEncoding(new Format.Builder().setSampleMimeType(transformation.audioMimeType == null ? checkNotNull(inputFormat).sampleMimeType : transformation.audioMimeType).setSampleRate(outputAudioFormat.sampleRate).setChannelCount(outputAudioFormat.channelCount).setAverageBitrate(DEFAULT_ENCODER_BITRATE).build());\n  }\n catch (  IOException e) {\n    throw createRendererException(e,PlaybackException.ERROR_CODE_UNSPECIFIED);\n  }\n  encoderInputAudioFormat=outputAudioFormat;\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1934,
        "startLineNumber" : 326,
        "startColumnNumber" : 2,
        "endLineNumber" : 372,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Attempts to configure the  {@link #encoder} and Sonic (if applicable), if they have not beenconfigured yet, and returns whether they have been configured.\n */\nprivate boolean ensureEncoderAndAudioProcessingConfigured() throws ExoPlaybackException {\n  if (encoder != null) {\n    return true;\n  }\n  MediaCodecAdapterWrapper decoder=checkNotNull(this.decoder);\n  @Nullable Format decoderOutputFormat=decoder.getOutputFormat();\n  if (decoderOutputFormat == null) {\n    return false;\n  }\n  AudioFormat outputAudioFormat=new AudioFormat(decoderOutputFormat.sampleRate,decoderOutputFormat.channelCount,decoderOutputFormat.pcmEncoding);\n  if (transformation.flattenForSlowMotion) {\n    try {\n      outputAudioFormat=sonicAudioProcessor.configure(outputAudioFormat);\n      flushSonicAndSetSpeed(currentSpeed);\n    }\n catch (    AudioProcessor.UnhandledAudioFormatException e) {\n      throw createRendererException(e,PlaybackException.ERROR_CODE_UNSPECIFIED);\n    }\n  }\n  String transformation.audioMimeType == null ? checkNotNull(inputFormat).sampleMimeType : transformation.audioMimeType=transformation.transformation.audioMimeType == null ? checkNotNull(inputFormat).sampleMimeType : transformation.audioMimeType == null ? checkNotNull(inputFormat).sampleMimeType : transformation.transformation.audioMimeType == null ? checkNotNull(inputFormat).sampleMimeType : transformation.audioMimeType;\n  try {\n    encoder=MediaCodecAdapterWrapper.createForAudioEncoding(new Format.Builder().setSampleMimeType(transformation.audioMimeType == null ? checkNotNull(inputFormat).sampleMimeType : transformation.audioMimeType).setSampleRate(outputAudioFormat.sampleRate).setChannelCount(outputAudioFormat.channelCount).setAverageBitrate(DEFAULT_ENCODER_BITRATE).build());\n  }\n catch (  IOException e) {\n    throw createRendererException(e,PlaybackException.ERROR_CODE_UNSPECIFIED);\n  }\n  encoderInputAudioFormat=outputAudioFormat;\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 174,
      "astHeight" : 16
    } ],
    "tokenLength" : 9,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 110,
    "startLineNumber" : 361,
    "startColumnNumber" : 37,
    "endLineNumber" : 361,
    "endColumnNumber" : 147
  } ],
  "layoutRelationDataList" : [ ]
}