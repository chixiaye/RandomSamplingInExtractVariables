{
  "id" : 4,
  "expression" : "createCountAggregatorFactory(name,plannerContext,rowSignature,virtualColumnRegistry,rexBuilder,aggregateCall,project)",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "sql/src/main/java/org/apache/druid/sql/calcite/aggregation/builtin/CountSqlAggregator.java",
  "occurrences" : 1,
  "expressionList" : [ {
    "nodeContext" : "createCountAggregatorFactory(name,plannerContext,rowSignature,virtualColumnRegistry,rexBuilder,aggregateCall,project)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 117,
      "startLineNumber" : 147,
      "startColumnNumber" : 32,
      "endLineNumber" : 147,
      "endColumnNumber" : 149
    },
    "astNodeNumber" : 9,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 147,
        "startColumnNumber" : 13,
        "endLineNumber" : 147,
        "endColumnNumber" : 150
      },
      "nodeContext" : "Aggregation.create(createCountAggregatorFactory(name,plannerContext,rowSignature,virtualColumnRegistry,rexBuilder,aggregateCall,project))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 147,
        "startColumnNumber" : 6,
        "endLineNumber" : 147,
        "endColumnNumber" : 152
      },
      "nodeContext" : "return Aggregation.create(createCountAggregatorFactory(name,plannerContext,rowSignature,virtualColumnRegistry,rexBuilder,aggregateCall,project));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 409,
        "startLineNumber" : 134,
        "startColumnNumber" : 11,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  AggregatorFactory createCountAggregatorFactory(name,plannerContext,rowSignature,virtualColumnRegistry,rexBuilder,aggregateCall,project)=createCountAggregatorFactory(name,plannerContext,rowSignature,virtualColumnRegistry,rexBuilder,aggregateCall,project);\n  return Aggregation.create(createCountAggregatorFactory(name,plannerContext,rowSignature,virtualColumnRegistry,rexBuilder,aggregateCall,project));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 743,
        "startLineNumber" : 120,
        "startColumnNumber" : 11,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (aggregateCall.isDistinct()) {\n  if (plannerContext.getPlannerConfig().isUseApproximateCountDistinct()) {\n    return APPROX_COUNT_DISTINCT.toDruidAggregation(plannerContext,rowSignature,virtualColumnRegistry,rexBuilder,name,aggregateCall,project,existingAggregations,finalizeAggregations);\n  }\n else {\n    return null;\n  }\n}\n else {\n  AggregatorFactory createCountAggregatorFactory(name,plannerContext,rowSignature,virtualColumnRegistry,rexBuilder,aggregateCall,project)=createCountAggregatorFactory(name,plannerContext,rowSignature,virtualColumnRegistry,rexBuilder,aggregateCall,project);\n  return Aggregation.create(createCountAggregatorFactory(name,plannerContext,rowSignature,virtualColumnRegistry,rexBuilder,aggregateCall,project));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 56,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 836,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (args.isEmpty()) {\n  return Aggregation.create(new CountAggregatorFactory(name));\n}\n else if (aggregateCall.isDistinct()) {\n  if (plannerContext.getPlannerConfig().isUseApproximateCountDistinct()) {\n    return APPROX_COUNT_DISTINCT.toDruidAggregation(plannerContext,rowSignature,virtualColumnRegistry,rexBuilder,name,aggregateCall,project,existingAggregations,finalizeAggregations);\n  }\n else {\n    return null;\n  }\n}\n else {\n  AggregatorFactory createCountAggregatorFactory(name,plannerContext,rowSignature,virtualColumnRegistry,rexBuilder,aggregateCall,project)=createCountAggregatorFactory(name,plannerContext,rowSignature,virtualColumnRegistry,rexBuilder,aggregateCall,project);\n  return Aggregation.create(createCountAggregatorFactory(name,plannerContext,rowSignature,virtualColumnRegistry,rexBuilder,aggregateCall,project));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 69,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1041,
        "startLineNumber" : 105,
        "startColumnNumber" : 2,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final List<DruidExpression> args=Aggregations.getArgumentsForSimpleAggregator(plannerContext,rowSignature,aggregateCall,project);\n  if (args == null) {\n    return null;\n  }\n  if (args.isEmpty()) {\n    return Aggregation.create(new CountAggregatorFactory(name));\n  }\n else   if (aggregateCall.isDistinct()) {\n    if (plannerContext.getPlannerConfig().isUseApproximateCountDistinct()) {\n      return APPROX_COUNT_DISTINCT.toDruidAggregation(plannerContext,rowSignature,virtualColumnRegistry,rexBuilder,name,aggregateCall,project,existingAggregations,finalizeAggregations);\n    }\n else {\n      return null;\n    }\n  }\n else {\n    AggregatorFactory createCountAggregatorFactory(name,plannerContext,rowSignature,virtualColumnRegistry,rexBuilder,aggregateCall,project)=createCountAggregatorFactory(name,plannerContext,rowSignature,virtualColumnRegistry,rexBuilder,aggregateCall,project);\n    return Aggregation.create(createCountAggregatorFactory(name,plannerContext,rowSignature,virtualColumnRegistry,rexBuilder,aggregateCall,project));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1399,
        "startLineNumber" : 92,
        "startColumnNumber" : 2,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Nullable @Override public Aggregation toDruidAggregation(final PlannerContext plannerContext,final RowSignature rowSignature,final VirtualColumnRegistry virtualColumnRegistry,final RexBuilder rexBuilder,final String name,final AggregateCall aggregateCall,final Project project,final List<Aggregation> existingAggregations,final boolean finalizeAggregations){\n  final List<DruidExpression> args=Aggregations.getArgumentsForSimpleAggregator(plannerContext,rowSignature,aggregateCall,project);\n  if (args == null) {\n    return null;\n  }\n  if (args.isEmpty()) {\n    return Aggregation.create(new CountAggregatorFactory(name));\n  }\n else   if (aggregateCall.isDistinct()) {\n    if (plannerContext.getPlannerConfig().isUseApproximateCountDistinct()) {\n      return APPROX_COUNT_DISTINCT.toDruidAggregation(plannerContext,rowSignature,virtualColumnRegistry,rexBuilder,name,aggregateCall,project,existingAggregations,finalizeAggregations);\n    }\n else {\n      return null;\n    }\n  }\n else {\n    AggregatorFactory createCountAggregatorFactory(name,plannerContext,rowSignature,virtualColumnRegistry,rexBuilder,aggregateCall,project)=createCountAggregatorFactory(name,plannerContext,rowSignature,virtualColumnRegistry,rexBuilder,aggregateCall,project);\n    return Aggregation.create(createCountAggregatorFactory(name,plannerContext,rowSignature,virtualColumnRegistry,rexBuilder,aggregateCall,project));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 10
    } ],
    "tokenLength" : 8,
    "type" : "org.apache.druid.query.aggregation.AggregatorFactory"
  } ],
  "positionList" : [ {
    "charLength" : 117,
    "startLineNumber" : 147,
    "startColumnNumber" : 32,
    "endLineNumber" : 147,
    "endColumnNumber" : 149
  } ],
  "layoutRelationDataList" : [ ]
}