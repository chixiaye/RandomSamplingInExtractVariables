{
  "id" : 42,
  "expression" : "onNextEvents.get(i)",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "2423a17b5c3e5917a1960ffea8f5ecb11ac373a6",
  "filePath" : "src/main/java/rx/observers/TestObserver.java",
  "occurrences" : 6,
  "expressionList" : [ {
    "nodeContext" : "onNextEvents.get(i)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 124,
      "startColumnNumber" : 20,
      "endLineNumber" : 124,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 124,
        "startColumnNumber" : 20,
        "endLineNumber" : 124,
        "endColumnNumber" : 47
      },
      "nodeContext" : "onNextEvents.get(i) != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 124,
        "startColumnNumber" : 16,
        "endLineNumber" : 126,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (onNextEvents.get(i) != null) {\n  throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 122,
        "startColumnNumber" : 34,
        "endLineNumber" : 127,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (onNextEvents.get(i) != null) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 504,
        "startLineNumber" : 122,
        "startColumnNumber" : 12,
        "endLineNumber" : 132,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (expected == null) {\n  if (onNextEvents.get(i) != null) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n  }\n}\n else if (!expected.equals(onNextEvents.get(i))) {\n  throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 60,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 596,
        "startLineNumber" : 119,
        "startColumnNumber" : 47,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  T expected=items.get(i);\n  T onNextEvents.get(i)=onNextEvents.get(i);\n  if (expected == null) {\n    if (onNextEvents.get(i) != null) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n    }\n  }\n else   if (!expected.equals(onNextEvents.get(i))) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 633,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < items.size(); i++) {\n  T expected=items.get(i);\n  T onNextEvents.get(i)=onNextEvents.get(i);\n  if (expected == null) {\n    if (onNextEvents.get(i) != null) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n    }\n  }\n else   if (!expected.equals(onNextEvents.get(i))) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 92,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 837,
        "startLineNumber" : 114,
        "startColumnNumber" : 52,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (onNextEvents.size() != items.size()) {\n    throw new AssertionError(\"Number of items does not match. Provided: \" + items.size() + \"  Actual: \"+ onNextEvents.size());\n  }\n  for (int i=0; i < items.size(); i++) {\n    T expected=items.get(i);\n    T onNextEvents.get(i)=onNextEvents.get(i);\n    if (expected == null) {\n      if (onNextEvents.get(i) != null) {\n        throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n      }\n    }\n else     if (!expected.equals(onNextEvents.get(i))) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1129,
        "startLineNumber" : 106,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Assert that a particular sequence of items was received in order.\n * @param items the sequence of items expected to have been observed\n * @throws AssertionError if the sequence of items observed does not exactly match  {@code items}\n */\npublic void assertReceivedOnNext(List<T> items){\n  if (onNextEvents.size() != items.size()) {\n    throw new AssertionError(\"Number of items does not match. Provided: \" + items.size() + \"  Actual: \"+ onNextEvents.size());\n  }\n  for (int i=0; i < items.size(); i++) {\n    T expected=items.get(i);\n    T onNextEvents.get(i)=onNextEvents.get(i);\n    if (expected == null) {\n      if (onNextEvents.get(i) != null) {\n        throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n      }\n    }\n else     if (!expected.equals(onNextEvents.get(i))) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 15
    } ],
    "tokenLength" : 3,
    "type" : "T"
  }, {
    "nodeContext" : "onNextEvents.get(i)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 125,
      "startColumnNumber" : 108,
      "endLineNumber" : 125,
      "endColumnNumber" : 127
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 125,
        "startColumnNumber" : 45,
        "endLineNumber" : 125,
        "endColumnNumber" : 131
      },
      "nodeContext" : "\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 125,
        "startColumnNumber" : 26,
        "endLineNumber" : 125,
        "endColumnNumber" : 132
      },
      "nodeContext" : "new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 125,
        "startColumnNumber" : 20,
        "endLineNumber" : 125,
        "endColumnNumber" : 134
      },
      "nodeContext" : "throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 124,
        "startColumnNumber" : 36,
        "endLineNumber" : 126,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 124,
        "startColumnNumber" : 16,
        "endLineNumber" : 126,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (onNextEvents.get(i) != null) {\n  throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 122,
        "startColumnNumber" : 34,
        "endLineNumber" : 127,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (onNextEvents.get(i) != null) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 504,
        "startLineNumber" : 122,
        "startColumnNumber" : 12,
        "endLineNumber" : 132,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (expected == null) {\n  if (onNextEvents.get(i) != null) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n  }\n}\n else if (!expected.equals(onNextEvents.get(i))) {\n  throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 60,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 596,
        "startLineNumber" : 119,
        "startColumnNumber" : 47,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  T expected=items.get(i);\n  T onNextEvents.get(i)=onNextEvents.get(i);\n  if (expected == null) {\n    if (onNextEvents.get(i) != null) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n    }\n  }\n else   if (!expected.equals(onNextEvents.get(i))) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 633,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < items.size(); i++) {\n  T expected=items.get(i);\n  T onNextEvents.get(i)=onNextEvents.get(i);\n  if (expected == null) {\n    if (onNextEvents.get(i) != null) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n    }\n  }\n else   if (!expected.equals(onNextEvents.get(i))) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 92,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 837,
        "startLineNumber" : 114,
        "startColumnNumber" : 52,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (onNextEvents.size() != items.size()) {\n    throw new AssertionError(\"Number of items does not match. Provided: \" + items.size() + \"  Actual: \"+ onNextEvents.size());\n  }\n  for (int i=0; i < items.size(); i++) {\n    T expected=items.get(i);\n    T onNextEvents.get(i)=onNextEvents.get(i);\n    if (expected == null) {\n      if (onNextEvents.get(i) != null) {\n        throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n      }\n    }\n else     if (!expected.equals(onNextEvents.get(i))) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1129,
        "startLineNumber" : 106,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Assert that a particular sequence of items was received in order.\n * @param items the sequence of items expected to have been observed\n * @throws AssertionError if the sequence of items observed does not exactly match  {@code items}\n */\npublic void assertReceivedOnNext(List<T> items){\n  if (onNextEvents.size() != items.size()) {\n    throw new AssertionError(\"Number of items does not match. Provided: \" + items.size() + \"  Actual: \"+ onNextEvents.size());\n  }\n  for (int i=0; i < items.size(); i++) {\n    T expected=items.get(i);\n    T onNextEvents.get(i)=onNextEvents.get(i);\n    if (expected == null) {\n      if (onNextEvents.get(i) != null) {\n        throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n      }\n    }\n else     if (!expected.equals(onNextEvents.get(i))) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 15
    } ],
    "tokenLength" : 3,
    "type" : "T"
  }, {
    "nodeContext" : "onNextEvents.get(i)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 127,
      "startColumnNumber" : 40,
      "endLineNumber" : 127,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 127,
        "startColumnNumber" : 24,
        "endLineNumber" : 127,
        "endColumnNumber" : 60
      },
      "nodeContext" : "expected.equals(onNextEvents.get(i))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 127,
        "startColumnNumber" : 23,
        "endLineNumber" : 127,
        "endColumnNumber" : 60
      },
      "nodeContext" : "!expected.equals(onNextEvents.get(i))",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 313,
        "startLineNumber" : 127,
        "startColumnNumber" : 19,
        "endLineNumber" : 132,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!expected.equals(onNextEvents.get(i))) {\n  throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 504,
        "startLineNumber" : 122,
        "startColumnNumber" : 12,
        "endLineNumber" : 132,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (expected == null) {\n  if (onNextEvents.get(i) != null) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n  }\n}\n else if (!expected.equals(onNextEvents.get(i))) {\n  throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 60,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 596,
        "startLineNumber" : 119,
        "startColumnNumber" : 47,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  T expected=items.get(i);\n  T onNextEvents.get(i)=onNextEvents.get(i);\n  if (expected == null) {\n    if (onNextEvents.get(i) != null) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n    }\n  }\n else   if (!expected.equals(onNextEvents.get(i))) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 633,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < items.size(); i++) {\n  T expected=items.get(i);\n  T onNextEvents.get(i)=onNextEvents.get(i);\n  if (expected == null) {\n    if (onNextEvents.get(i) != null) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n    }\n  }\n else   if (!expected.equals(onNextEvents.get(i))) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 92,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 837,
        "startLineNumber" : 114,
        "startColumnNumber" : 52,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (onNextEvents.size() != items.size()) {\n    throw new AssertionError(\"Number of items does not match. Provided: \" + items.size() + \"  Actual: \"+ onNextEvents.size());\n  }\n  for (int i=0; i < items.size(); i++) {\n    T expected=items.get(i);\n    T onNextEvents.get(i)=onNextEvents.get(i);\n    if (expected == null) {\n      if (onNextEvents.get(i) != null) {\n        throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n      }\n    }\n else     if (!expected.equals(onNextEvents.get(i))) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1129,
        "startLineNumber" : 106,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Assert that a particular sequence of items was received in order.\n * @param items the sequence of items expected to have been observed\n * @throws AssertionError if the sequence of items observed does not exactly match  {@code items}\n */\npublic void assertReceivedOnNext(List<T> items){\n  if (onNextEvents.size() != items.size()) {\n    throw new AssertionError(\"Number of items does not match. Provided: \" + items.size() + \"  Actual: \"+ onNextEvents.size());\n  }\n  for (int i=0; i < items.size(); i++) {\n    T expected=items.get(i);\n    T onNextEvents.get(i)=onNextEvents.get(i);\n    if (expected == null) {\n      if (onNextEvents.get(i) != null) {\n        throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n      }\n    }\n else     if (!expected.equals(onNextEvents.get(i))) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 15
    } ],
    "tokenLength" : 3,
    "type" : "T"
  }, {
    "nodeContext" : "onNextEvents.get(i)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 130,
      "startColumnNumber" : 43,
      "endLineNumber" : 130,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 128,
        "startColumnNumber" : 41,
        "endLineNumber" : 130,
        "endColumnNumber" : 127
      },
      "nodeContext" : "\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 29,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 256,
        "startLineNumber" : 128,
        "startColumnNumber" : 22,
        "endLineNumber" : 130,
        "endColumnNumber" : 128
      },
      "nodeContext" : "new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 264,
        "startLineNumber" : 128,
        "startColumnNumber" : 16,
        "endLineNumber" : 130,
        "endColumnNumber" : 129
      },
      "nodeContext" : "throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 33,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 270,
        "startLineNumber" : 127,
        "startColumnNumber" : 49,
        "endLineNumber" : 132,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 313,
        "startLineNumber" : 127,
        "startColumnNumber" : 19,
        "endLineNumber" : 132,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!expected.equals(onNextEvents.get(i))) {\n  throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 504,
        "startLineNumber" : 122,
        "startColumnNumber" : 12,
        "endLineNumber" : 132,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (expected == null) {\n  if (onNextEvents.get(i) != null) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n  }\n}\n else if (!expected.equals(onNextEvents.get(i))) {\n  throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 60,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 596,
        "startLineNumber" : 119,
        "startColumnNumber" : 47,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  T expected=items.get(i);\n  T onNextEvents.get(i)=onNextEvents.get(i);\n  if (expected == null) {\n    if (onNextEvents.get(i) != null) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n    }\n  }\n else   if (!expected.equals(onNextEvents.get(i))) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 633,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < items.size(); i++) {\n  T expected=items.get(i);\n  T onNextEvents.get(i)=onNextEvents.get(i);\n  if (expected == null) {\n    if (onNextEvents.get(i) != null) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n    }\n  }\n else   if (!expected.equals(onNextEvents.get(i))) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 92,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 837,
        "startLineNumber" : 114,
        "startColumnNumber" : 52,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (onNextEvents.size() != items.size()) {\n    throw new AssertionError(\"Number of items does not match. Provided: \" + items.size() + \"  Actual: \"+ onNextEvents.size());\n  }\n  for (int i=0; i < items.size(); i++) {\n    T expected=items.get(i);\n    T onNextEvents.get(i)=onNextEvents.get(i);\n    if (expected == null) {\n      if (onNextEvents.get(i) != null) {\n        throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n      }\n    }\n else     if (!expected.equals(onNextEvents.get(i))) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1129,
        "startLineNumber" : 106,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Assert that a particular sequence of items was received in order.\n * @param items the sequence of items expected to have been observed\n * @throws AssertionError if the sequence of items observed does not exactly match  {@code items}\n */\npublic void assertReceivedOnNext(List<T> items){\n  if (onNextEvents.size() != items.size()) {\n    throw new AssertionError(\"Number of items does not match. Provided: \" + items.size() + \"  Actual: \"+ onNextEvents.size());\n  }\n  for (int i=0; i < items.size(); i++) {\n    T expected=items.get(i);\n    T onNextEvents.get(i)=onNextEvents.get(i);\n    if (expected == null) {\n      if (onNextEvents.get(i) != null) {\n        throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n      }\n    }\n else     if (!expected.equals(onNextEvents.get(i))) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 15
    } ],
    "tokenLength" : 3,
    "type" : "T"
  }, {
    "nodeContext" : "onNextEvents.get(i)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 130,
      "startColumnNumber" : 61,
      "endLineNumber" : 130,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 130,
        "startColumnNumber" : 61,
        "endLineNumber" : 130,
        "endColumnNumber" : 88
      },
      "nodeContext" : "onNextEvents.get(i) != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 130,
        "startColumnNumber" : 61,
        "endLineNumber" : 130,
        "endColumnNumber" : 146
      },
      "nodeContext" : "onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\"",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 130,
        "startColumnNumber" : 60,
        "endLineNumber" : 130,
        "endColumnNumber" : 147
      },
      "nodeContext" : "(onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 128,
        "startColumnNumber" : 41,
        "endLineNumber" : 130,
        "endColumnNumber" : 127
      },
      "nodeContext" : "\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 29,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 256,
        "startLineNumber" : 128,
        "startColumnNumber" : 22,
        "endLineNumber" : 130,
        "endColumnNumber" : 128
      },
      "nodeContext" : "new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 264,
        "startLineNumber" : 128,
        "startColumnNumber" : 16,
        "endLineNumber" : 130,
        "endColumnNumber" : 129
      },
      "nodeContext" : "throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 33,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 270,
        "startLineNumber" : 127,
        "startColumnNumber" : 49,
        "endLineNumber" : 132,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 313,
        "startLineNumber" : 127,
        "startColumnNumber" : 19,
        "endLineNumber" : 132,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!expected.equals(onNextEvents.get(i))) {\n  throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 504,
        "startLineNumber" : 122,
        "startColumnNumber" : 12,
        "endLineNumber" : 132,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (expected == null) {\n  if (onNextEvents.get(i) != null) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n  }\n}\n else if (!expected.equals(onNextEvents.get(i))) {\n  throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 60,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 596,
        "startLineNumber" : 119,
        "startColumnNumber" : 47,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  T expected=items.get(i);\n  T onNextEvents.get(i)=onNextEvents.get(i);\n  if (expected == null) {\n    if (onNextEvents.get(i) != null) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n    }\n  }\n else   if (!expected.equals(onNextEvents.get(i))) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 633,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < items.size(); i++) {\n  T expected=items.get(i);\n  T onNextEvents.get(i)=onNextEvents.get(i);\n  if (expected == null) {\n    if (onNextEvents.get(i) != null) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n    }\n  }\n else   if (!expected.equals(onNextEvents.get(i))) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 92,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 837,
        "startLineNumber" : 114,
        "startColumnNumber" : 52,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (onNextEvents.size() != items.size()) {\n    throw new AssertionError(\"Number of items does not match. Provided: \" + items.size() + \"  Actual: \"+ onNextEvents.size());\n  }\n  for (int i=0; i < items.size(); i++) {\n    T expected=items.get(i);\n    T onNextEvents.get(i)=onNextEvents.get(i);\n    if (expected == null) {\n      if (onNextEvents.get(i) != null) {\n        throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n      }\n    }\n else     if (!expected.equals(onNextEvents.get(i))) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1129,
        "startLineNumber" : 106,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Assert that a particular sequence of items was received in order.\n * @param items the sequence of items expected to have been observed\n * @throws AssertionError if the sequence of items observed does not exactly match  {@code items}\n */\npublic void assertReceivedOnNext(List<T> items){\n  if (onNextEvents.size() != items.size()) {\n    throw new AssertionError(\"Number of items does not match. Provided: \" + items.size() + \"  Actual: \"+ onNextEvents.size());\n  }\n  for (int i=0; i < items.size(); i++) {\n    T expected=items.get(i);\n    T onNextEvents.get(i)=onNextEvents.get(i);\n    if (expected == null) {\n      if (onNextEvents.get(i) != null) {\n        throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n      }\n    }\n else     if (!expected.equals(onNextEvents.get(i))) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 15
    } ],
    "tokenLength" : 3,
    "type" : "T"
  }, {
    "nodeContext" : "onNextEvents.get(i)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 130,
      "startColumnNumber" : 78,
      "endLineNumber" : 130,
      "endColumnNumber" : 97
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 130,
        "startColumnNumber" : 78,
        "endLineNumber" : 130,
        "endColumnNumber" : 108
      },
      "nodeContext" : "onNextEvents.get(i).getClass()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,thenExpression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 130,
        "startColumnNumber" : 78,
        "endLineNumber" : 130,
        "endColumnNumber" : 124
      },
      "nodeContext" : "onNextEvents.get(i).getClass().getSimpleName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 130,
        "startColumnNumber" : 61,
        "endLineNumber" : 130,
        "endColumnNumber" : 146
      },
      "nodeContext" : "onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\"",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 130,
        "startColumnNumber" : 60,
        "endLineNumber" : 130,
        "endColumnNumber" : 147
      },
      "nodeContext" : "(onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 128,
        "startColumnNumber" : 41,
        "endLineNumber" : 130,
        "endColumnNumber" : 127
      },
      "nodeContext" : "\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 29,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 256,
        "startLineNumber" : 128,
        "startColumnNumber" : 22,
        "endLineNumber" : 130,
        "endColumnNumber" : 128
      },
      "nodeContext" : "new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 264,
        "startLineNumber" : 128,
        "startColumnNumber" : 16,
        "endLineNumber" : 130,
        "endColumnNumber" : 129
      },
      "nodeContext" : "throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 33,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 270,
        "startLineNumber" : 127,
        "startColumnNumber" : 49,
        "endLineNumber" : 132,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 313,
        "startLineNumber" : 127,
        "startColumnNumber" : 19,
        "endLineNumber" : 132,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!expected.equals(onNextEvents.get(i))) {\n  throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 504,
        "startLineNumber" : 122,
        "startColumnNumber" : 12,
        "endLineNumber" : 132,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (expected == null) {\n  if (onNextEvents.get(i) != null) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n  }\n}\n else if (!expected.equals(onNextEvents.get(i))) {\n  throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 60,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 596,
        "startLineNumber" : 119,
        "startColumnNumber" : 47,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  T expected=items.get(i);\n  T onNextEvents.get(i)=onNextEvents.get(i);\n  if (expected == null) {\n    if (onNextEvents.get(i) != null) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n    }\n  }\n else   if (!expected.equals(onNextEvents.get(i))) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 633,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < items.size(); i++) {\n  T expected=items.get(i);\n  T onNextEvents.get(i)=onNextEvents.get(i);\n  if (expected == null) {\n    if (onNextEvents.get(i) != null) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n    }\n  }\n else   if (!expected.equals(onNextEvents.get(i))) {\n    throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 92,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 837,
        "startLineNumber" : 114,
        "startColumnNumber" : 52,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (onNextEvents.size() != items.size()) {\n    throw new AssertionError(\"Number of items does not match. Provided: \" + items.size() + \"  Actual: \"+ onNextEvents.size());\n  }\n  for (int i=0; i < items.size(); i++) {\n    T expected=items.get(i);\n    T onNextEvents.get(i)=onNextEvents.get(i);\n    if (expected == null) {\n      if (onNextEvents.get(i) != null) {\n        throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n      }\n    }\n else     if (!expected.equals(onNextEvents.get(i))) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1129,
        "startLineNumber" : 106,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Assert that a particular sequence of items was received in order.\n * @param items the sequence of items expected to have been observed\n * @throws AssertionError if the sequence of items observed does not exactly match  {@code items}\n */\npublic void assertReceivedOnNext(List<T> items){\n  if (onNextEvents.size() != items.size()) {\n    throw new AssertionError(\"Number of items does not match. Provided: \" + items.size() + \"  Actual: \"+ onNextEvents.size());\n  }\n  for (int i=0; i < items.size(); i++) {\n    T expected=items.get(i);\n    T onNextEvents.get(i)=onNextEvents.get(i);\n    if (expected == null) {\n      if (onNextEvents.get(i) != null) {\n        throw new AssertionError(\"Value at index: \" + i + \" expected to be [null] but was: [\"+ onNextEvents.get(i)+ \"]\");\n      }\n    }\n else     if (!expected.equals(onNextEvents.get(i))) {\n      throw new AssertionError(\"Value at index: \" + i + \" expected to be [\"+ expected+ \"] (\"+ expected.getClass().getSimpleName()+ \") but was: [\"+ onNextEvents.get(i)+ \"] (\"+ (onNextEvents.get(i) != null ? onNextEvents.get(i).getClass().getSimpleName() : \"null\")+ \")\");\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 16
    } ],
    "tokenLength" : 3,
    "type" : "T"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 124,
    "startColumnNumber" : 20,
    "endLineNumber" : 124,
    "endColumnNumber" : 39
  }, {
    "charLength" : 19,
    "startLineNumber" : 125,
    "startColumnNumber" : 108,
    "endLineNumber" : 125,
    "endColumnNumber" : 127
  }, {
    "charLength" : 19,
    "startLineNumber" : 127,
    "startColumnNumber" : 40,
    "endLineNumber" : 127,
    "endColumnNumber" : 59
  }, {
    "charLength" : 19,
    "startLineNumber" : 130,
    "startColumnNumber" : 43,
    "endLineNumber" : 130,
    "endColumnNumber" : 62
  }, {
    "charLength" : 19,
    "startLineNumber" : 130,
    "startColumnNumber" : 61,
    "endLineNumber" : 130,
    "endColumnNumber" : 80
  }, {
    "charLength" : 19,
    "startLineNumber" : 130,
    "startColumnNumber" : 78,
    "endLineNumber" : 130,
    "endColumnNumber" : 97
  } ],
  "layoutRelationDataList" : [ ]
}