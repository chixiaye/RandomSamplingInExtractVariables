{
  "id" : 92,
  "expression" : "end - start + 1",
  "projectName" : "libgdx@libgdx",
  "commitID" : "0912b5e8e7e596893a920f77c8b392b0f448e4de",
  "filePath" : "gdx/src/com/badlogic/gdx/utils/BooleanArray.java",
  "occurrences" : 4,
  "expressionList" : [ {
    "nodeContext" : "end - start + 1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 181,
      "startColumnNumber" : 47,
      "endLineNumber" : 181,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 181,
        "startColumnNumber" : 43,
        "endLineNumber" : 181,
        "endColumnNumber" : 62
      },
      "nodeContext" : "n - end - start + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 181,
        "startColumnNumber" : 31,
        "endLineNumber" : 181,
        "endColumnNumber" : 60
      },
      "nodeContext" : "lastIndex=n - end - start + 1",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 181,
        "startColumnNumber" : 2,
        "endLineNumber" : 181,
        "endColumnNumber" : 70
      },
      "nodeContext" : "int end - start + 1=end - start + 1, lastIndex=n - end - start + 1;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 531,
        "startLineNumber" : 177,
        "startColumnNumber" : 46,
        "endLineNumber" : 189,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int n=size;\n  if (end >= n)   throw new IndexOutOfBoundsException(\"end can't be >= size: \" + end + \" >= \"+ size);\n  if (start > end)   throw new IndexOutOfBoundsException(\"start can't be > end: \" + start + \" > \"+ end);\n  int end - start + 1=end - start + 1, lastIndex=n - end - start + 1;\n  if (ordered)   System.arraycopy(items,start + end - start + 1,items,start,n - (start + end - start + 1));\n else {\n    int i=Math.max(lastIndex,end + 1);\n    System.arraycopy(items,i,items,start,n - i);\n  }\n  size=n - end - start + 1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 646,
        "startLineNumber" : 176,
        "startColumnNumber" : 1,
        "endLineNumber" : 189,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Removes the items between the specified indices, inclusive. \n */\npublic void removeRange(int start,int end){\n  int n=size;\n  if (end >= n)   throw new IndexOutOfBoundsException(\"end can't be >= size: \" + end + \" >= \"+ size);\n  if (start > end)   throw new IndexOutOfBoundsException(\"start can't be > end: \" + start + \" > \"+ end);\n  int end - start + 1=end - start + 1, lastIndex=n - end - start + 1;\n  if (ordered)   System.arraycopy(items,start + end - start + 1,items,start,n - (start + end - start + 1));\n else {\n    int i=Math.max(lastIndex,end + 1);\n    System.arraycopy(items,i,items,start,n - i);\n  }\n  size=n - end - start + 1;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 9
    } ],
    "tokenLength" : 5,
    "type" : "int"
  }, {
    "nodeContext" : "end - start + 1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 183,
      "startColumnNumber" : 35,
      "endLineNumber" : 183,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 183,
        "startColumnNumber" : 27,
        "endLineNumber" : 183,
        "endColumnNumber" : 50
      },
      "nodeContext" : "start + end - start + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 183,
        "startColumnNumber" : 3,
        "endLineNumber" : 183,
        "endColumnNumber" : 92
      },
      "nodeContext" : "System.arraycopy(items,start + end - start + 1,items,start,n - (start + end - start + 1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 183,
        "startColumnNumber" : 3,
        "endLineNumber" : 183,
        "endColumnNumber" : 94
      },
      "nodeContext" : "System.arraycopy(items,start + end - start + 1,items,start,n - (start + end - start + 1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 182,
        "startColumnNumber" : 2,
        "endLineNumber" : 187,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (ordered) System.arraycopy(items,start + end - start + 1,items,start,n - (start + end - start + 1));\n else {\n  int i=Math.max(lastIndex,end + 1);\n  System.arraycopy(items,i,items,start,n - i);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 531,
        "startLineNumber" : 177,
        "startColumnNumber" : 46,
        "endLineNumber" : 189,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int n=size;\n  if (end >= n)   throw new IndexOutOfBoundsException(\"end can't be >= size: \" + end + \" >= \"+ size);\n  if (start > end)   throw new IndexOutOfBoundsException(\"start can't be > end: \" + start + \" > \"+ end);\n  int end - start + 1=end - start + 1, lastIndex=n - end - start + 1;\n  if (ordered)   System.arraycopy(items,start + end - start + 1,items,start,n - (start + end - start + 1));\n else {\n    int i=Math.max(lastIndex,end + 1);\n    System.arraycopy(items,i,items,start,n - i);\n  }\n  size=n - end - start + 1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 646,
        "startLineNumber" : 176,
        "startColumnNumber" : 1,
        "endLineNumber" : 189,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Removes the items between the specified indices, inclusive. \n */\npublic void removeRange(int start,int end){\n  int n=size;\n  if (end >= n)   throw new IndexOutOfBoundsException(\"end can't be >= size: \" + end + \" >= \"+ size);\n  if (start > end)   throw new IndexOutOfBoundsException(\"start can't be > end: \" + start + \" > \"+ end);\n  int end - start + 1=end - start + 1, lastIndex=n - end - start + 1;\n  if (ordered)   System.arraycopy(items,start + end - start + 1,items,start,n - (start + end - start + 1));\n else {\n    int i=Math.max(lastIndex,end + 1);\n    System.arraycopy(items,i,items,start,n - i);\n  }\n  size=n - end - start + 1;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 9
    } ],
    "tokenLength" : 5,
    "type" : "int"
  }, {
    "nodeContext" : "end - start + 1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 183,
      "startColumnNumber" : 69,
      "endLineNumber" : 183,
      "endColumnNumber" : 84
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 183,
        "startColumnNumber" : 61,
        "endLineNumber" : 183,
        "endColumnNumber" : 84
      },
      "nodeContext" : "start + end - start + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 183,
        "startColumnNumber" : 60,
        "endLineNumber" : 183,
        "endColumnNumber" : 85
      },
      "nodeContext" : "(start + end - start + 1)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 183,
        "startColumnNumber" : 56,
        "endLineNumber" : 183,
        "endColumnNumber" : 85
      },
      "nodeContext" : "n - (start + end - start + 1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 183,
        "startColumnNumber" : 3,
        "endLineNumber" : 183,
        "endColumnNumber" : 92
      },
      "nodeContext" : "System.arraycopy(items,start + end - start + 1,items,start,n - (start + end - start + 1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 183,
        "startColumnNumber" : 3,
        "endLineNumber" : 183,
        "endColumnNumber" : 94
      },
      "nodeContext" : "System.arraycopy(items,start + end - start + 1,items,start,n - (start + end - start + 1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 182,
        "startColumnNumber" : 2,
        "endLineNumber" : 187,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (ordered) System.arraycopy(items,start + end - start + 1,items,start,n - (start + end - start + 1));\n else {\n  int i=Math.max(lastIndex,end + 1);\n  System.arraycopy(items,i,items,start,n - i);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 531,
        "startLineNumber" : 177,
        "startColumnNumber" : 46,
        "endLineNumber" : 189,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int n=size;\n  if (end >= n)   throw new IndexOutOfBoundsException(\"end can't be >= size: \" + end + \" >= \"+ size);\n  if (start > end)   throw new IndexOutOfBoundsException(\"start can't be > end: \" + start + \" > \"+ end);\n  int end - start + 1=end - start + 1, lastIndex=n - end - start + 1;\n  if (ordered)   System.arraycopy(items,start + end - start + 1,items,start,n - (start + end - start + 1));\n else {\n    int i=Math.max(lastIndex,end + 1);\n    System.arraycopy(items,i,items,start,n - i);\n  }\n  size=n - end - start + 1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 646,
        "startLineNumber" : 176,
        "startColumnNumber" : 1,
        "endLineNumber" : 189,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Removes the items between the specified indices, inclusive. \n */\npublic void removeRange(int start,int end){\n  int n=size;\n  if (end >= n)   throw new IndexOutOfBoundsException(\"end can't be >= size: \" + end + \" >= \"+ size);\n  if (start > end)   throw new IndexOutOfBoundsException(\"start can't be > end: \" + start + \" > \"+ end);\n  int end - start + 1=end - start + 1, lastIndex=n - end - start + 1;\n  if (ordered)   System.arraycopy(items,start + end - start + 1,items,start,n - (start + end - start + 1));\n else {\n    int i=Math.max(lastIndex,end + 1);\n    System.arraycopy(items,i,items,start,n - i);\n  }\n  size=n - end - start + 1;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 11
    } ],
    "tokenLength" : 5,
    "type" : "int"
  }, {
    "nodeContext" : "end - start + 1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 188,
      "startColumnNumber" : 13,
      "endLineNumber" : 188,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 188,
        "startColumnNumber" : 9,
        "endLineNumber" : 188,
        "endColumnNumber" : 28
      },
      "nodeContext" : "n - end - start + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 188,
        "startColumnNumber" : 2,
        "endLineNumber" : 188,
        "endColumnNumber" : 26
      },
      "nodeContext" : "size=n - end - start + 1",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 188,
        "startColumnNumber" : 2,
        "endLineNumber" : 188,
        "endColumnNumber" : 28
      },
      "nodeContext" : "size=n - end - start + 1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 531,
        "startLineNumber" : 177,
        "startColumnNumber" : 46,
        "endLineNumber" : 189,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int n=size;\n  if (end >= n)   throw new IndexOutOfBoundsException(\"end can't be >= size: \" + end + \" >= \"+ size);\n  if (start > end)   throw new IndexOutOfBoundsException(\"start can't be > end: \" + start + \" > \"+ end);\n  int end - start + 1=end - start + 1, lastIndex=n - end - start + 1;\n  if (ordered)   System.arraycopy(items,start + end - start + 1,items,start,n - (start + end - start + 1));\n else {\n    int i=Math.max(lastIndex,end + 1);\n    System.arraycopy(items,i,items,start,n - i);\n  }\n  size=n - end - start + 1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 646,
        "startLineNumber" : 176,
        "startColumnNumber" : 1,
        "endLineNumber" : 189,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Removes the items between the specified indices, inclusive. \n */\npublic void removeRange(int start,int end){\n  int n=size;\n  if (end >= n)   throw new IndexOutOfBoundsException(\"end can't be >= size: \" + end + \" >= \"+ size);\n  if (start > end)   throw new IndexOutOfBoundsException(\"start can't be > end: \" + start + \" > \"+ end);\n  int end - start + 1=end - start + 1, lastIndex=n - end - start + 1;\n  if (ordered)   System.arraycopy(items,start + end - start + 1,items,start,n - (start + end - start + 1));\n else {\n    int i=Math.max(lastIndex,end + 1);\n    System.arraycopy(items,i,items,start,n - i);\n  }\n  size=n - end - start + 1;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 9
    } ],
    "tokenLength" : 5,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 181,
    "startColumnNumber" : 47,
    "endLineNumber" : 181,
    "endColumnNumber" : 62
  }, {
    "charLength" : 15,
    "startLineNumber" : 183,
    "startColumnNumber" : 35,
    "endLineNumber" : 183,
    "endColumnNumber" : 50
  }, {
    "charLength" : 15,
    "startLineNumber" : 183,
    "startColumnNumber" : 69,
    "endLineNumber" : 183,
    "endColumnNumber" : 84
  }, {
    "charLength" : 15,
    "startLineNumber" : 188,
    "startColumnNumber" : 13,
    "endLineNumber" : 188,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ ]
}