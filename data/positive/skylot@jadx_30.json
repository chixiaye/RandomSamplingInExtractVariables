{
  "id" : 30,
  "expression" : "var.getTypeInfo()",
  "projectName" : "skylot@jadx",
  "commitID" : "87c123142245f5f787238f169ec46bb95502b5e9",
  "filePath" : "jadx-core/src/main/java/jadx/core/dex/visitors/typeinference/TypeInferenceVisitor.java",
  "occurrences" : 2,
  "expressionList" : [ {
    "nodeContext" : "var.getTypeInfo()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 59,
      "startColumnNumber" : 18,
      "endLineNumber" : 59,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 59,
        "startColumnNumber" : 18,
        "endLineNumber" : 59,
        "endColumnNumber" : 45
      },
      "nodeContext" : "var.getTypeInfo().getType()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 59,
        "startColumnNumber" : 11,
        "endLineNumber" : 59,
        "endColumnNumber" : 43
      },
      "nodeContext" : "type=var.getTypeInfo().getType()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 59,
        "startColumnNumber" : 3,
        "endLineNumber" : 59,
        "endColumnNumber" : 45
      },
      "nodeContext" : "ArgType type=var.getTypeInfo().getType();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 333,
        "startLineNumber" : 57,
        "startColumnNumber" : 32,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TypeInfo var.getTypeInfo()=var.getTypeInfo();\n  ArgType type=var.getTypeInfo().getType();\n  if (type != null && !type.isTypeKnown()) {\n    boolean changed=tryAllTypes(var,type);\n    if (!changed) {\n      mth.addComment(\"JADX WARNING: type inference failed for: \" + var + \", bounds: \"+ var.getTypeInfo().getBounds());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 340,
        "startLineNumber" : 57,
        "startColumnNumber" : 25,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "var -> {\n  TypeInfo var.getTypeInfo()=var.getTypeInfo();\n  ArgType type=var.getTypeInfo().getType();\n  if (type != null && !type.isTypeKnown()) {\n    boolean changed=tryAllTypes(var,type);\n    if (!changed) {\n      mth.addComment(\"JADX WARNING: type inference failed for: \" + var + \", bounds: \"+ var.getTypeInfo().getBounds());\n    }\n  }\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 55,
      "astHeight" : 11
    } ],
    "tokenLength" : 2,
    "type" : "jadx.core.dex.visitors.typeinference.TypeInfo"
  }, {
    "nodeContext" : "var.getTypeInfo()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 63,
      "startColumnNumber" : 87,
      "endLineNumber" : 63,
      "endColumnNumber" : 104
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 63,
        "startColumnNumber" : 87,
        "endLineNumber" : 63,
        "endColumnNumber" : 116
      },
      "nodeContext" : "var.getTypeInfo().getBounds()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 63,
        "startColumnNumber" : 20,
        "endLineNumber" : 63,
        "endColumnNumber" : 115
      },
      "nodeContext" : "\"JADX WARNING: type inference failed for: \" + var + \", bounds: \"+ var.getTypeInfo().getBounds()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 63,
        "startColumnNumber" : 5,
        "endLineNumber" : 63,
        "endColumnNumber" : 116
      },
      "nodeContext" : "mth.addComment(\"JADX WARNING: type inference failed for: \" + var + \", bounds: \"+ var.getTypeInfo().getBounds())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 63,
        "startColumnNumber" : 5,
        "endLineNumber" : 63,
        "endColumnNumber" : 118
      },
      "nodeContext" : "mth.addComment(\"JADX WARNING: type inference failed for: \" + var + \", bounds: \"+ var.getTypeInfo().getBounds());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 62,
        "startColumnNumber" : 18,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  mth.addComment(\"JADX WARNING: type inference failed for: \" + var + \", bounds: \"+ var.getTypeInfo().getBounds());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!changed) {\n  mth.addComment(\"JADX WARNING: type inference failed for: \" + var + \", bounds: \"+ var.getTypeInfo().getBounds());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 60,
        "startColumnNumber" : 44,
        "endLineNumber" : 65,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  boolean changed=tryAllTypes(var,type);\n  if (!changed) {\n    mth.addComment(\"JADX WARNING: type inference failed for: \" + var + \", bounds: \"+ var.getTypeInfo().getBounds());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 225,
        "startLineNumber" : 60,
        "startColumnNumber" : 3,
        "endLineNumber" : 65,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (type != null && !type.isTypeKnown()) {\n  boolean changed=tryAllTypes(var,type);\n  if (!changed) {\n    mth.addComment(\"JADX WARNING: type inference failed for: \" + var + \", bounds: \"+ var.getTypeInfo().getBounds());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 333,
        "startLineNumber" : 57,
        "startColumnNumber" : 32,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TypeInfo var.getTypeInfo()=var.getTypeInfo();\n  ArgType type=var.getTypeInfo().getType();\n  if (type != null && !type.isTypeKnown()) {\n    boolean changed=tryAllTypes(var,type);\n    if (!changed) {\n      mth.addComment(\"JADX WARNING: type inference failed for: \" + var + \", bounds: \"+ var.getTypeInfo().getBounds());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 340,
        "startLineNumber" : 57,
        "startColumnNumber" : 25,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "var -> {\n  TypeInfo var.getTypeInfo()=var.getTypeInfo();\n  ArgType type=var.getTypeInfo().getType();\n  if (type != null && !type.isTypeKnown()) {\n    boolean changed=tryAllTypes(var,type);\n    if (!changed) {\n      mth.addComment(\"JADX WARNING: type inference failed for: \" + var + \", bounds: \"+ var.getTypeInfo().getBounds());\n    }\n  }\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 55,
      "astHeight" : 12
    } ],
    "tokenLength" : 2,
    "type" : "jadx.core.dex.visitors.typeinference.TypeInfo"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 59,
    "startColumnNumber" : 18,
    "endLineNumber" : 59,
    "endColumnNumber" : 35
  }, {
    "charLength" : 17,
    "startLineNumber" : 63,
    "startColumnNumber" : 87,
    "endLineNumber" : 63,
    "endColumnNumber" : 104
  } ],
  "layoutRelationDataList" : [ ]
}