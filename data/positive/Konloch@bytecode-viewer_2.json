{
  "id" : 2,
  "expression" : "CommandLineInput.parseCommandLine(BytecodeViewer.launchArgs)",
  "projectName" : "Konloch@bytecode-viewer",
  "commitID" : "9ab8ec7f8c061fb1d9b1db3e901034d162a211ff",
  "filePath" : "src/main/java/the/bytecode/club/bytecodeviewer/util/BootCheck.java",
  "occurrences" : 1,
  "expressionList" : [ {
    "nodeContext" : "CommandLineInput.parseCommandLine(BytecodeViewer.launchArgs)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 60,
      "startLineNumber" : 128,
      "startColumnNumber" : 7,
      "endLineNumber" : 128,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 128,
        "startColumnNumber" : 7,
        "endLineNumber" : 128,
        "endColumnNumber" : 91
      },
      "nodeContext" : "CommandLineInput.parseCommandLine(BytecodeViewer.launchArgs) == CommandLineInput.GUI",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 223,
        "startLineNumber" : 128,
        "startColumnNumber" : 3,
        "endLineNumber" : 133,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (CommandLineInput.parseCommandLine(BytecodeViewer.launchArgs) == CommandLineInput.GUI) BytecodeViewer.boot(false);\n else {\n  BytecodeViewer.boot(true);\n  CommandLineInput.executeCommandLine(BytecodeViewer.launchArgs);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1952,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 134,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  File libsDir=Boot.libsDir();\n  File[] listFiles=libsDir.listFiles();\n  if (listFiles == null || listFiles.length <= 0) {\n    BytecodeViewer.showMessage(\"Github is loading extremely slow, BCV needs to download libraries from github in order\" + nl + \"to work, please try adjusting your network settings or manually downloading these libraries\"+ nl+ \"if this error persists.\");\n    return;\n  }\n  Boot.setState(\"Bytecode Viewer Boot Screen (OFFLINE MODE) - Unable to connect to github, force booting...\");\n  System.out.println(\"Unable to connect to github, force booting...\");\n  List<String> libsFileList=new ArrayList<>();\n  for (  File f : listFiles)   libsFileList.add(f.getAbsolutePath());\n  ILoader<?> loader=Boot.findLoader();\n  for (  String s : libsFileList) {\n    if (s.endsWith(\".jar\")) {\n      File f=new File(s);\n      if (f.exists()) {\n        Boot.setState(\"Bytecode Viewer Boot Screen (OFFLINE MODE) - Force Loading Library \" + f.getName());\n        System.out.println(\"Force loading library \" + f.getName());\n        try {\n          ExternalResource res=new EmptyExternalResource<>(f.toURI().toURL());\n          loader.bind(res);\n          System.out.println(\"Successfully loaded \" + f.getName());\n        }\n catch (        Exception e) {\n          e.printStackTrace();\n          f.delete();\n          JOptionPane.showMessageDialog(null,\"Error, Library \" + f.getName() + \" is corrupt, please restart to re-download it.\",\"Error\",JOptionPane.ERROR_MESSAGE);\n        }\n      }\n    }\n  }\n  Boot.checkEnjarify();\n  Boot.checkKrakatau();\n  Boot.globalstop=false;\n  Boot.hide();\n  int CommandLineInput.parseCommandLine(BytecodeViewer.launchArgs)=CommandLineInput.parseCommandLine(BytecodeViewer.launchArgs);\n  if (CommandLineInput.parseCommandLine(BytecodeViewer.launchArgs) == CommandLineInput.GUI)   BytecodeViewer.boot(false);\n else {\n    BytecodeViewer.boot(true);\n    CommandLineInput.executeCommandLine(BytecodeViewer.launchArgs);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 253,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1998,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 134,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (!Boot.completedboot && !Boot.downloading) {\n  File libsDir=Boot.libsDir();\n  File[] listFiles=libsDir.listFiles();\n  if (listFiles == null || listFiles.length <= 0) {\n    BytecodeViewer.showMessage(\"Github is loading extremely slow, BCV needs to download libraries from github in order\" + nl + \"to work, please try adjusting your network settings or manually downloading these libraries\"+ nl+ \"if this error persists.\");\n    return;\n  }\n  Boot.setState(\"Bytecode Viewer Boot Screen (OFFLINE MODE) - Unable to connect to github, force booting...\");\n  System.out.println(\"Unable to connect to github, force booting...\");\n  List<String> libsFileList=new ArrayList<>();\n  for (  File f : listFiles)   libsFileList.add(f.getAbsolutePath());\n  ILoader<?> loader=Boot.findLoader();\n  for (  String s : libsFileList) {\n    if (s.endsWith(\".jar\")) {\n      File f=new File(s);\n      if (f.exists()) {\n        Boot.setState(\"Bytecode Viewer Boot Screen (OFFLINE MODE) - Force Loading Library \" + f.getName());\n        System.out.println(\"Force loading library \" + f.getName());\n        try {\n          ExternalResource res=new EmptyExternalResource<>(f.toURI().toURL());\n          loader.bind(res);\n          System.out.println(\"Successfully loaded \" + f.getName());\n        }\n catch (        Exception e) {\n          e.printStackTrace();\n          f.delete();\n          JOptionPane.showMessageDialog(null,\"Error, Library \" + f.getName() + \" is corrupt, please restart to re-download it.\",\"Error\",JOptionPane.ERROR_MESSAGE);\n        }\n      }\n    }\n  }\n  Boot.checkEnjarify();\n  Boot.checkKrakatau();\n  Boot.globalstop=false;\n  Boot.hide();\n  int CommandLineInput.parseCommandLine(BytecodeViewer.launchArgs)=CommandLineInput.parseCommandLine(BytecodeViewer.launchArgs);\n  if (CommandLineInput.parseCommandLine(BytecodeViewer.launchArgs) == CommandLineInput.GUI)   BytecodeViewer.boot(false);\n else {\n    BytecodeViewer.boot(true);\n    CommandLineInput.executeCommandLine(BytecodeViewer.launchArgs);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 263,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2092,
        "startLineNumber" : 67,
        "startColumnNumber" : 1,
        "endLineNumber" : 135,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (!Boot.completedboot && !Boot.downloading) {\n    File libsDir=Boot.libsDir();\n    File[] listFiles=libsDir.listFiles();\n    if (listFiles == null || listFiles.length <= 0) {\n      BytecodeViewer.showMessage(\"Github is loading extremely slow, BCV needs to download libraries from github in order\" + nl + \"to work, please try adjusting your network settings or manually downloading these libraries\"+ nl+ \"if this error persists.\");\n      return;\n    }\n    Boot.setState(\"Bytecode Viewer Boot Screen (OFFLINE MODE) - Unable to connect to github, force booting...\");\n    System.out.println(\"Unable to connect to github, force booting...\");\n    List<String> libsFileList=new ArrayList<>();\n    for (    File f : listFiles)     libsFileList.add(f.getAbsolutePath());\n    ILoader<?> loader=Boot.findLoader();\n    for (    String s : libsFileList) {\n      if (s.endsWith(\".jar\")) {\n        File f=new File(s);\n        if (f.exists()) {\n          Boot.setState(\"Bytecode Viewer Boot Screen (OFFLINE MODE) - Force Loading Library \" + f.getName());\n          System.out.println(\"Force loading library \" + f.getName());\n          try {\n            ExternalResource res=new EmptyExternalResource<>(f.toURI().toURL());\n            loader.bind(res);\n            System.out.println(\"Successfully loaded \" + f.getName());\n          }\n catch (          Exception e) {\n            e.printStackTrace();\n            f.delete();\n            JOptionPane.showMessageDialog(null,\"Error, Library \" + f.getName() + \" is corrupt, please restart to re-download it.\",\"Error\",JOptionPane.ERROR_MESSAGE);\n          }\n        }\n      }\n    }\n    Boot.checkEnjarify();\n    Boot.checkKrakatau();\n    Boot.globalstop=false;\n    Boot.hide();\n    int CommandLineInput.parseCommandLine(BytecodeViewer.launchArgs)=CommandLineInput.parseCommandLine(BytecodeViewer.launchArgs);\n    if (CommandLineInput.parseCommandLine(BytecodeViewer.launchArgs) == CommandLineInput.GUI)     BytecodeViewer.boot(false);\n else {\n      BytecodeViewer.boot(true);\n      CommandLineInput.executeCommandLine(BytecodeViewer.launchArgs);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 264,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2171,
        "startLineNumber" : 65,
        "startColumnNumber" : 1,
        "endLineNumber" : 135,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@SuppressWarnings({\"rawtypes\",\"unchecked\"}) public void failSafeLoadLibraries(){\n  if (!Boot.completedboot && !Boot.downloading) {\n    File libsDir=Boot.libsDir();\n    File[] listFiles=libsDir.listFiles();\n    if (listFiles == null || listFiles.length <= 0) {\n      BytecodeViewer.showMessage(\"Github is loading extremely slow, BCV needs to download libraries from github in order\" + nl + \"to work, please try adjusting your network settings or manually downloading these libraries\"+ nl+ \"if this error persists.\");\n      return;\n    }\n    Boot.setState(\"Bytecode Viewer Boot Screen (OFFLINE MODE) - Unable to connect to github, force booting...\");\n    System.out.println(\"Unable to connect to github, force booting...\");\n    List<String> libsFileList=new ArrayList<>();\n    for (    File f : listFiles)     libsFileList.add(f.getAbsolutePath());\n    ILoader<?> loader=Boot.findLoader();\n    for (    String s : libsFileList) {\n      if (s.endsWith(\".jar\")) {\n        File f=new File(s);\n        if (f.exists()) {\n          Boot.setState(\"Bytecode Viewer Boot Screen (OFFLINE MODE) - Force Loading Library \" + f.getName());\n          System.out.println(\"Force loading library \" + f.getName());\n          try {\n            ExternalResource res=new EmptyExternalResource<>(f.toURI().toURL());\n            loader.bind(res);\n            System.out.println(\"Successfully loaded \" + f.getName());\n          }\n catch (          Exception e) {\n            e.printStackTrace();\n            f.delete();\n            JOptionPane.showMessageDialog(null,\"Error, Library \" + f.getName() + \" is corrupt, please restart to re-download it.\",\"Error\",JOptionPane.ERROR_MESSAGE);\n          }\n        }\n      }\n    }\n    Boot.checkEnjarify();\n    Boot.checkKrakatau();\n    Boot.globalstop=false;\n    Boot.hide();\n    int CommandLineInput.parseCommandLine(BytecodeViewer.launchArgs)=CommandLineInput.parseCommandLine(BytecodeViewer.launchArgs);\n    if (CommandLineInput.parseCommandLine(BytecodeViewer.launchArgs) == CommandLineInput.GUI)     BytecodeViewer.boot(false);\n else {\n      BytecodeViewer.boot(true);\n      CommandLineInput.executeCommandLine(BytecodeViewer.launchArgs);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 273,
      "astHeight" : 18
    } ],
    "tokenLength" : 4,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 60,
    "startLineNumber" : 128,
    "startColumnNumber" : 7,
    "endLineNumber" : 128,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}