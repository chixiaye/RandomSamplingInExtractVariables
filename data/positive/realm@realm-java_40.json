{
  "id" : 40,
  "expression" : "syncConfig.getUser()",
  "projectName" : "realm@realm-java",
  "commitID" : "5d388ea9d7d238babc5d6f9a57682802df58a198",
  "filePath" : "realm/realm-library/src/objectServer/java/io/realm/internal/SyncObjectServerFacade.java",
  "occurrences" : 5,
  "expressionList" : [ {
    "nodeContext" : "syncConfig.getUser()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 93,
      "startColumnNumber" : 17,
      "endLineNumber" : 93,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 93,
        "startColumnNumber" : 17,
        "endLineNumber" : 93,
        "endColumnNumber" : 47
      },
      "nodeContext" : "syncConfig.getUser().isValid()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 93,
        "startColumnNumber" : 16,
        "endLineNumber" : 93,
        "endColumnNumber" : 47
      },
      "nodeContext" : "!syncConfig.getUser().isValid()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 93,
        "startColumnNumber" : 12,
        "endLineNumber" : 102,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!syncConfig.getUser().isValid()) {\n  if (syncConfig.getUser().getAccessToken() == null) {\n    throw new IllegalStateException(\"The SyncUser is already logged out and can not use the provided configuration to open a Realm.\");\n  }\n else {\n    RealmLog.warn(\"Can not use the provided configuration to open a Realm, the SyncUser is no longer valid.\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 914,
        "startLineNumber" : 89,
        "startColumnNumber" : 49,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  SyncConfiguration syncConfig=(SyncConfiguration)config;\n  SyncUser syncConfig.getUser()=syncConfig.getUser();\n  if (!syncConfig.getUser().isValid()) {\n    if (syncConfig.getUser().getAccessToken() == null) {\n      throw new IllegalStateException(\"The SyncUser is already logged out and can not use the provided configuration to open a Realm.\");\n    }\n else {\n      RealmLog.warn(\"Can not use the provided configuration to open a Realm, the SyncUser is no longer valid.\");\n    }\n  }\n  String rosServerUrl=syncConfig.getServerUrl().toString();\n  String rosUserIdentity=syncConfig.getUser().getIdentity();\n  String syncRealmAuthUrl=syncConfig.getUser().getAuthenticationUrl().toString();\n  String rosSerializedUser=syncConfig.getUser().toJson();\n  return new Object[]{rosUserIdentity,rosServerUrl,syncRealmAuthUrl,rosSerializedUser,syncConfig.syncClientValidateSsl(),syncConfig.getServerCertificateFilePath()};\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 989,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (config instanceof SyncConfiguration) {\n  SyncConfiguration syncConfig=(SyncConfiguration)config;\n  SyncUser syncConfig.getUser()=syncConfig.getUser();\n  if (!syncConfig.getUser().isValid()) {\n    if (syncConfig.getUser().getAccessToken() == null) {\n      throw new IllegalStateException(\"The SyncUser is already logged out and can not use the provided configuration to open a Realm.\");\n    }\n else {\n      RealmLog.warn(\"Can not use the provided configuration to open a Realm, the SyncUser is no longer valid.\");\n    }\n  }\n  String rosServerUrl=syncConfig.getServerUrl().toString();\n  String rosUserIdentity=syncConfig.getUser().getIdentity();\n  String syncRealmAuthUrl=syncConfig.getUser().getAuthenticationUrl().toString();\n  String rosSerializedUser=syncConfig.getUser().toJson();\n  return new Object[]{rosUserIdentity,rosServerUrl,syncRealmAuthUrl,rosSerializedUser,syncConfig.syncClientValidateSsl(),syncConfig.getServerCertificateFilePath()};\n}\n else {\n  return new Object[6];\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 110,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1029,
        "startLineNumber" : 88,
        "startColumnNumber" : 67,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (config instanceof SyncConfiguration) {\n    SyncConfiguration syncConfig=(SyncConfiguration)config;\n    SyncUser syncConfig.getUser()=syncConfig.getUser();\n    if (!syncConfig.getUser().isValid()) {\n      if (syncConfig.getUser().getAccessToken() == null) {\n        throw new IllegalStateException(\"The SyncUser is already logged out and can not use the provided configuration to open a Realm.\");\n      }\n else {\n        RealmLog.warn(\"Can not use the provided configuration to open a Realm, the SyncUser is no longer valid.\");\n      }\n    }\n    String rosServerUrl=syncConfig.getServerUrl().toString();\n    String rosUserIdentity=syncConfig.getUser().getIdentity();\n    String syncRealmAuthUrl=syncConfig.getUser().getAuthenticationUrl().toString();\n    String rosSerializedUser=syncConfig.getUser().toJson();\n    return new Object[]{rosUserIdentity,rosServerUrl,syncRealmAuthUrl,rosSerializedUser,syncConfig.syncClientValidateSsl(),syncConfig.getServerCertificateFilePath()};\n  }\n else {\n    return new Object[6];\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1101,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Object[] getUserAndServerUrl(RealmConfiguration config){\n  if (config instanceof SyncConfiguration) {\n    SyncConfiguration syncConfig=(SyncConfiguration)config;\n    SyncUser syncConfig.getUser()=syncConfig.getUser();\n    if (!syncConfig.getUser().isValid()) {\n      if (syncConfig.getUser().getAccessToken() == null) {\n        throw new IllegalStateException(\"The SyncUser is already logged out and can not use the provided configuration to open a Realm.\");\n      }\n else {\n        RealmLog.warn(\"Can not use the provided configuration to open a Realm, the SyncUser is no longer valid.\");\n      }\n    }\n    String rosServerUrl=syncConfig.getServerUrl().toString();\n    String rosUserIdentity=syncConfig.getUser().getIdentity();\n    String syncRealmAuthUrl=syncConfig.getUser().getAuthenticationUrl().toString();\n    String rosSerializedUser=syncConfig.getUser().toJson();\n    return new Object[]{rosUserIdentity,rosServerUrl,syncRealmAuthUrl,rosSerializedUser,syncConfig.syncClientValidateSsl(),syncConfig.getServerCertificateFilePath()};\n  }\n else {\n    return new Object[6];\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 12
    } ],
    "tokenLength" : 2,
    "type" : "io.realm.SyncUser"
  }, {
    "nodeContext" : "syncConfig.getUser()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 94,
      "startColumnNumber" : 20,
      "endLineNumber" : 94,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 94,
        "startColumnNumber" : 20,
        "endLineNumber" : 94,
        "endColumnNumber" : 57
      },
      "nodeContext" : "syncConfig.getUser().getAccessToken()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 94,
        "startColumnNumber" : 20,
        "endLineNumber" : 94,
        "endColumnNumber" : 65
      },
      "nodeContext" : "syncConfig.getUser().getAccessToken() == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 307,
        "startLineNumber" : 94,
        "startColumnNumber" : 16,
        "endLineNumber" : 101,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (syncConfig.getUser().getAccessToken() == null) {\n  throw new IllegalStateException(\"The SyncUser is already logged out and can not use the provided configuration to open a Realm.\");\n}\n else {\n  RealmLog.warn(\"Can not use the provided configuration to open a Realm, the SyncUser is no longer valid.\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 321,
        "startLineNumber" : 93,
        "startColumnNumber" : 33,
        "endLineNumber" : 102,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (syncConfig.getUser().getAccessToken() == null) {\n    throw new IllegalStateException(\"The SyncUser is already logged out and can not use the provided configuration to open a Realm.\");\n  }\n else {\n    RealmLog.warn(\"Can not use the provided configuration to open a Realm, the SyncUser is no longer valid.\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 93,
        "startColumnNumber" : 12,
        "endLineNumber" : 102,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!syncConfig.getUser().isValid()) {\n  if (syncConfig.getUser().getAccessToken() == null) {\n    throw new IllegalStateException(\"The SyncUser is already logged out and can not use the provided configuration to open a Realm.\");\n  }\n else {\n    RealmLog.warn(\"Can not use the provided configuration to open a Realm, the SyncUser is no longer valid.\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 914,
        "startLineNumber" : 89,
        "startColumnNumber" : 49,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  SyncConfiguration syncConfig=(SyncConfiguration)config;\n  SyncUser syncConfig.getUser()=syncConfig.getUser();\n  if (!syncConfig.getUser().isValid()) {\n    if (syncConfig.getUser().getAccessToken() == null) {\n      throw new IllegalStateException(\"The SyncUser is already logged out and can not use the provided configuration to open a Realm.\");\n    }\n else {\n      RealmLog.warn(\"Can not use the provided configuration to open a Realm, the SyncUser is no longer valid.\");\n    }\n  }\n  String rosServerUrl=syncConfig.getServerUrl().toString();\n  String rosUserIdentity=syncConfig.getUser().getIdentity();\n  String syncRealmAuthUrl=syncConfig.getUser().getAuthenticationUrl().toString();\n  String rosSerializedUser=syncConfig.getUser().toJson();\n  return new Object[]{rosUserIdentity,rosServerUrl,syncRealmAuthUrl,rosSerializedUser,syncConfig.syncClientValidateSsl(),syncConfig.getServerCertificateFilePath()};\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 989,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (config instanceof SyncConfiguration) {\n  SyncConfiguration syncConfig=(SyncConfiguration)config;\n  SyncUser syncConfig.getUser()=syncConfig.getUser();\n  if (!syncConfig.getUser().isValid()) {\n    if (syncConfig.getUser().getAccessToken() == null) {\n      throw new IllegalStateException(\"The SyncUser is already logged out and can not use the provided configuration to open a Realm.\");\n    }\n else {\n      RealmLog.warn(\"Can not use the provided configuration to open a Realm, the SyncUser is no longer valid.\");\n    }\n  }\n  String rosServerUrl=syncConfig.getServerUrl().toString();\n  String rosUserIdentity=syncConfig.getUser().getIdentity();\n  String syncRealmAuthUrl=syncConfig.getUser().getAuthenticationUrl().toString();\n  String rosSerializedUser=syncConfig.getUser().toJson();\n  return new Object[]{rosUserIdentity,rosServerUrl,syncRealmAuthUrl,rosSerializedUser,syncConfig.syncClientValidateSsl(),syncConfig.getServerCertificateFilePath()};\n}\n else {\n  return new Object[6];\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 110,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1029,
        "startLineNumber" : 88,
        "startColumnNumber" : 67,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (config instanceof SyncConfiguration) {\n    SyncConfiguration syncConfig=(SyncConfiguration)config;\n    SyncUser syncConfig.getUser()=syncConfig.getUser();\n    if (!syncConfig.getUser().isValid()) {\n      if (syncConfig.getUser().getAccessToken() == null) {\n        throw new IllegalStateException(\"The SyncUser is already logged out and can not use the provided configuration to open a Realm.\");\n      }\n else {\n        RealmLog.warn(\"Can not use the provided configuration to open a Realm, the SyncUser is no longer valid.\");\n      }\n    }\n    String rosServerUrl=syncConfig.getServerUrl().toString();\n    String rosUserIdentity=syncConfig.getUser().getIdentity();\n    String syncRealmAuthUrl=syncConfig.getUser().getAuthenticationUrl().toString();\n    String rosSerializedUser=syncConfig.getUser().toJson();\n    return new Object[]{rosUserIdentity,rosServerUrl,syncRealmAuthUrl,rosSerializedUser,syncConfig.syncClientValidateSsl(),syncConfig.getServerCertificateFilePath()};\n  }\n else {\n    return new Object[6];\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1101,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Object[] getUserAndServerUrl(RealmConfiguration config){\n  if (config instanceof SyncConfiguration) {\n    SyncConfiguration syncConfig=(SyncConfiguration)config;\n    SyncUser syncConfig.getUser()=syncConfig.getUser();\n    if (!syncConfig.getUser().isValid()) {\n      if (syncConfig.getUser().getAccessToken() == null) {\n        throw new IllegalStateException(\"The SyncUser is already logged out and can not use the provided configuration to open a Realm.\");\n      }\n else {\n        RealmLog.warn(\"Can not use the provided configuration to open a Realm, the SyncUser is no longer valid.\");\n      }\n    }\n    String rosServerUrl=syncConfig.getServerUrl().toString();\n    String rosUserIdentity=syncConfig.getUser().getIdentity();\n    String syncRealmAuthUrl=syncConfig.getUser().getAuthenticationUrl().toString();\n    String rosSerializedUser=syncConfig.getUser().toJson();\n    return new Object[]{rosUserIdentity,rosServerUrl,syncRealmAuthUrl,rosSerializedUser,syncConfig.syncClientValidateSsl(),syncConfig.getServerCertificateFilePath()};\n  }\n else {\n    return new Object[6];\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 12
    } ],
    "tokenLength" : 2,
    "type" : "io.realm.SyncUser"
  }, {
    "nodeContext" : "syncConfig.getUser()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 104,
      "startColumnNumber" : 37,
      "endLineNumber" : 104,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 104,
        "startColumnNumber" : 37,
        "endLineNumber" : 104,
        "endColumnNumber" : 71
      },
      "nodeContext" : "syncConfig.getUser().getIdentity()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 104,
        "startColumnNumber" : 19,
        "endLineNumber" : 104,
        "endColumnNumber" : 69
      },
      "nodeContext" : "rosUserIdentity=syncConfig.getUser().getIdentity()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 104,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 71
      },
      "nodeContext" : "String rosUserIdentity=syncConfig.getUser().getIdentity();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 914,
        "startLineNumber" : 89,
        "startColumnNumber" : 49,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  SyncConfiguration syncConfig=(SyncConfiguration)config;\n  SyncUser syncConfig.getUser()=syncConfig.getUser();\n  if (!syncConfig.getUser().isValid()) {\n    if (syncConfig.getUser().getAccessToken() == null) {\n      throw new IllegalStateException(\"The SyncUser is already logged out and can not use the provided configuration to open a Realm.\");\n    }\n else {\n      RealmLog.warn(\"Can not use the provided configuration to open a Realm, the SyncUser is no longer valid.\");\n    }\n  }\n  String rosServerUrl=syncConfig.getServerUrl().toString();\n  String rosUserIdentity=syncConfig.getUser().getIdentity();\n  String syncRealmAuthUrl=syncConfig.getUser().getAuthenticationUrl().toString();\n  String rosSerializedUser=syncConfig.getUser().toJson();\n  return new Object[]{rosUserIdentity,rosServerUrl,syncRealmAuthUrl,rosSerializedUser,syncConfig.syncClientValidateSsl(),syncConfig.getServerCertificateFilePath()};\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 989,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (config instanceof SyncConfiguration) {\n  SyncConfiguration syncConfig=(SyncConfiguration)config;\n  SyncUser syncConfig.getUser()=syncConfig.getUser();\n  if (!syncConfig.getUser().isValid()) {\n    if (syncConfig.getUser().getAccessToken() == null) {\n      throw new IllegalStateException(\"The SyncUser is already logged out and can not use the provided configuration to open a Realm.\");\n    }\n else {\n      RealmLog.warn(\"Can not use the provided configuration to open a Realm, the SyncUser is no longer valid.\");\n    }\n  }\n  String rosServerUrl=syncConfig.getServerUrl().toString();\n  String rosUserIdentity=syncConfig.getUser().getIdentity();\n  String syncRealmAuthUrl=syncConfig.getUser().getAuthenticationUrl().toString();\n  String rosSerializedUser=syncConfig.getUser().toJson();\n  return new Object[]{rosUserIdentity,rosServerUrl,syncRealmAuthUrl,rosSerializedUser,syncConfig.syncClientValidateSsl(),syncConfig.getServerCertificateFilePath()};\n}\n else {\n  return new Object[6];\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 110,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1029,
        "startLineNumber" : 88,
        "startColumnNumber" : 67,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (config instanceof SyncConfiguration) {\n    SyncConfiguration syncConfig=(SyncConfiguration)config;\n    SyncUser syncConfig.getUser()=syncConfig.getUser();\n    if (!syncConfig.getUser().isValid()) {\n      if (syncConfig.getUser().getAccessToken() == null) {\n        throw new IllegalStateException(\"The SyncUser is already logged out and can not use the provided configuration to open a Realm.\");\n      }\n else {\n        RealmLog.warn(\"Can not use the provided configuration to open a Realm, the SyncUser is no longer valid.\");\n      }\n    }\n    String rosServerUrl=syncConfig.getServerUrl().toString();\n    String rosUserIdentity=syncConfig.getUser().getIdentity();\n    String syncRealmAuthUrl=syncConfig.getUser().getAuthenticationUrl().toString();\n    String rosSerializedUser=syncConfig.getUser().toJson();\n    return new Object[]{rosUserIdentity,rosServerUrl,syncRealmAuthUrl,rosSerializedUser,syncConfig.syncClientValidateSsl(),syncConfig.getServerCertificateFilePath()};\n  }\n else {\n    return new Object[6];\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1101,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Object[] getUserAndServerUrl(RealmConfiguration config){\n  if (config instanceof SyncConfiguration) {\n    SyncConfiguration syncConfig=(SyncConfiguration)config;\n    SyncUser syncConfig.getUser()=syncConfig.getUser();\n    if (!syncConfig.getUser().isValid()) {\n      if (syncConfig.getUser().getAccessToken() == null) {\n        throw new IllegalStateException(\"The SyncUser is already logged out and can not use the provided configuration to open a Realm.\");\n      }\n else {\n        RealmLog.warn(\"Can not use the provided configuration to open a Realm, the SyncUser is no longer valid.\");\n      }\n    }\n    String rosServerUrl=syncConfig.getServerUrl().toString();\n    String rosUserIdentity=syncConfig.getUser().getIdentity();\n    String syncRealmAuthUrl=syncConfig.getUser().getAuthenticationUrl().toString();\n    String rosSerializedUser=syncConfig.getUser().toJson();\n    return new Object[]{rosUserIdentity,rosServerUrl,syncRealmAuthUrl,rosSerializedUser,syncConfig.syncClientValidateSsl(),syncConfig.getServerCertificateFilePath()};\n  }\n else {\n    return new Object[6];\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 12
    } ],
    "tokenLength" : 2,
    "type" : "io.realm.SyncUser"
  }, {
    "nodeContext" : "syncConfig.getUser()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 105,
      "startColumnNumber" : 38,
      "endLineNumber" : 105,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 105,
        "startColumnNumber" : 38,
        "endLineNumber" : 105,
        "endColumnNumber" : 81
      },
      "nodeContext" : "syncConfig.getUser().getAuthenticationUrl()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 105,
        "startColumnNumber" : 38,
        "endLineNumber" : 105,
        "endColumnNumber" : 92
      },
      "nodeContext" : "syncConfig.getUser().getAuthenticationUrl().toString()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 105,
        "startColumnNumber" : 19,
        "endLineNumber" : 105,
        "endColumnNumber" : 90
      },
      "nodeContext" : "syncRealmAuthUrl=syncConfig.getUser().getAuthenticationUrl().toString()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 105,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 92
      },
      "nodeContext" : "String syncRealmAuthUrl=syncConfig.getUser().getAuthenticationUrl().toString();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 914,
        "startLineNumber" : 89,
        "startColumnNumber" : 49,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  SyncConfiguration syncConfig=(SyncConfiguration)config;\n  SyncUser syncConfig.getUser()=syncConfig.getUser();\n  if (!syncConfig.getUser().isValid()) {\n    if (syncConfig.getUser().getAccessToken() == null) {\n      throw new IllegalStateException(\"The SyncUser is already logged out and can not use the provided configuration to open a Realm.\");\n    }\n else {\n      RealmLog.warn(\"Can not use the provided configuration to open a Realm, the SyncUser is no longer valid.\");\n    }\n  }\n  String rosServerUrl=syncConfig.getServerUrl().toString();\n  String rosUserIdentity=syncConfig.getUser().getIdentity();\n  String syncRealmAuthUrl=syncConfig.getUser().getAuthenticationUrl().toString();\n  String rosSerializedUser=syncConfig.getUser().toJson();\n  return new Object[]{rosUserIdentity,rosServerUrl,syncRealmAuthUrl,rosSerializedUser,syncConfig.syncClientValidateSsl(),syncConfig.getServerCertificateFilePath()};\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 989,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (config instanceof SyncConfiguration) {\n  SyncConfiguration syncConfig=(SyncConfiguration)config;\n  SyncUser syncConfig.getUser()=syncConfig.getUser();\n  if (!syncConfig.getUser().isValid()) {\n    if (syncConfig.getUser().getAccessToken() == null) {\n      throw new IllegalStateException(\"The SyncUser is already logged out and can not use the provided configuration to open a Realm.\");\n    }\n else {\n      RealmLog.warn(\"Can not use the provided configuration to open a Realm, the SyncUser is no longer valid.\");\n    }\n  }\n  String rosServerUrl=syncConfig.getServerUrl().toString();\n  String rosUserIdentity=syncConfig.getUser().getIdentity();\n  String syncRealmAuthUrl=syncConfig.getUser().getAuthenticationUrl().toString();\n  String rosSerializedUser=syncConfig.getUser().toJson();\n  return new Object[]{rosUserIdentity,rosServerUrl,syncRealmAuthUrl,rosSerializedUser,syncConfig.syncClientValidateSsl(),syncConfig.getServerCertificateFilePath()};\n}\n else {\n  return new Object[6];\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 110,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1029,
        "startLineNumber" : 88,
        "startColumnNumber" : 67,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (config instanceof SyncConfiguration) {\n    SyncConfiguration syncConfig=(SyncConfiguration)config;\n    SyncUser syncConfig.getUser()=syncConfig.getUser();\n    if (!syncConfig.getUser().isValid()) {\n      if (syncConfig.getUser().getAccessToken() == null) {\n        throw new IllegalStateException(\"The SyncUser is already logged out and can not use the provided configuration to open a Realm.\");\n      }\n else {\n        RealmLog.warn(\"Can not use the provided configuration to open a Realm, the SyncUser is no longer valid.\");\n      }\n    }\n    String rosServerUrl=syncConfig.getServerUrl().toString();\n    String rosUserIdentity=syncConfig.getUser().getIdentity();\n    String syncRealmAuthUrl=syncConfig.getUser().getAuthenticationUrl().toString();\n    String rosSerializedUser=syncConfig.getUser().toJson();\n    return new Object[]{rosUserIdentity,rosServerUrl,syncRealmAuthUrl,rosSerializedUser,syncConfig.syncClientValidateSsl(),syncConfig.getServerCertificateFilePath()};\n  }\n else {\n    return new Object[6];\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1101,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Object[] getUserAndServerUrl(RealmConfiguration config){\n  if (config instanceof SyncConfiguration) {\n    SyncConfiguration syncConfig=(SyncConfiguration)config;\n    SyncUser syncConfig.getUser()=syncConfig.getUser();\n    if (!syncConfig.getUser().isValid()) {\n      if (syncConfig.getUser().getAccessToken() == null) {\n        throw new IllegalStateException(\"The SyncUser is already logged out and can not use the provided configuration to open a Realm.\");\n      }\n else {\n        RealmLog.warn(\"Can not use the provided configuration to open a Realm, the SyncUser is no longer valid.\");\n      }\n    }\n    String rosServerUrl=syncConfig.getServerUrl().toString();\n    String rosUserIdentity=syncConfig.getUser().getIdentity();\n    String syncRealmAuthUrl=syncConfig.getUser().getAuthenticationUrl().toString();\n    String rosSerializedUser=syncConfig.getUser().toJson();\n    return new Object[]{rosUserIdentity,rosServerUrl,syncRealmAuthUrl,rosSerializedUser,syncConfig.syncClientValidateSsl(),syncConfig.getServerCertificateFilePath()};\n  }\n else {\n    return new Object[6];\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 12
    } ],
    "tokenLength" : 2,
    "type" : "io.realm.SyncUser"
  }, {
    "nodeContext" : "syncConfig.getUser()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 106,
      "startColumnNumber" : 39,
      "endLineNumber" : 106,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 106,
        "startColumnNumber" : 39,
        "endLineNumber" : 106,
        "endColumnNumber" : 68
      },
      "nodeContext" : "syncConfig.getUser().toJson()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 106,
        "startColumnNumber" : 19,
        "endLineNumber" : 106,
        "endColumnNumber" : 66
      },
      "nodeContext" : "rosSerializedUser=syncConfig.getUser().toJson()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 106,
        "startColumnNumber" : 12,
        "endLineNumber" : 106,
        "endColumnNumber" : 68
      },
      "nodeContext" : "String rosSerializedUser=syncConfig.getUser().toJson();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 914,
        "startLineNumber" : 89,
        "startColumnNumber" : 49,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  SyncConfiguration syncConfig=(SyncConfiguration)config;\n  SyncUser syncConfig.getUser()=syncConfig.getUser();\n  if (!syncConfig.getUser().isValid()) {\n    if (syncConfig.getUser().getAccessToken() == null) {\n      throw new IllegalStateException(\"The SyncUser is already logged out and can not use the provided configuration to open a Realm.\");\n    }\n else {\n      RealmLog.warn(\"Can not use the provided configuration to open a Realm, the SyncUser is no longer valid.\");\n    }\n  }\n  String rosServerUrl=syncConfig.getServerUrl().toString();\n  String rosUserIdentity=syncConfig.getUser().getIdentity();\n  String syncRealmAuthUrl=syncConfig.getUser().getAuthenticationUrl().toString();\n  String rosSerializedUser=syncConfig.getUser().toJson();\n  return new Object[]{rosUserIdentity,rosServerUrl,syncRealmAuthUrl,rosSerializedUser,syncConfig.syncClientValidateSsl(),syncConfig.getServerCertificateFilePath()};\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 989,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (config instanceof SyncConfiguration) {\n  SyncConfiguration syncConfig=(SyncConfiguration)config;\n  SyncUser syncConfig.getUser()=syncConfig.getUser();\n  if (!syncConfig.getUser().isValid()) {\n    if (syncConfig.getUser().getAccessToken() == null) {\n      throw new IllegalStateException(\"The SyncUser is already logged out and can not use the provided configuration to open a Realm.\");\n    }\n else {\n      RealmLog.warn(\"Can not use the provided configuration to open a Realm, the SyncUser is no longer valid.\");\n    }\n  }\n  String rosServerUrl=syncConfig.getServerUrl().toString();\n  String rosUserIdentity=syncConfig.getUser().getIdentity();\n  String syncRealmAuthUrl=syncConfig.getUser().getAuthenticationUrl().toString();\n  String rosSerializedUser=syncConfig.getUser().toJson();\n  return new Object[]{rosUserIdentity,rosServerUrl,syncRealmAuthUrl,rosSerializedUser,syncConfig.syncClientValidateSsl(),syncConfig.getServerCertificateFilePath()};\n}\n else {\n  return new Object[6];\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 110,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1029,
        "startLineNumber" : 88,
        "startColumnNumber" : 67,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (config instanceof SyncConfiguration) {\n    SyncConfiguration syncConfig=(SyncConfiguration)config;\n    SyncUser syncConfig.getUser()=syncConfig.getUser();\n    if (!syncConfig.getUser().isValid()) {\n      if (syncConfig.getUser().getAccessToken() == null) {\n        throw new IllegalStateException(\"The SyncUser is already logged out and can not use the provided configuration to open a Realm.\");\n      }\n else {\n        RealmLog.warn(\"Can not use the provided configuration to open a Realm, the SyncUser is no longer valid.\");\n      }\n    }\n    String rosServerUrl=syncConfig.getServerUrl().toString();\n    String rosUserIdentity=syncConfig.getUser().getIdentity();\n    String syncRealmAuthUrl=syncConfig.getUser().getAuthenticationUrl().toString();\n    String rosSerializedUser=syncConfig.getUser().toJson();\n    return new Object[]{rosUserIdentity,rosServerUrl,syncRealmAuthUrl,rosSerializedUser,syncConfig.syncClientValidateSsl(),syncConfig.getServerCertificateFilePath()};\n  }\n else {\n    return new Object[6];\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1101,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Object[] getUserAndServerUrl(RealmConfiguration config){\n  if (config instanceof SyncConfiguration) {\n    SyncConfiguration syncConfig=(SyncConfiguration)config;\n    SyncUser syncConfig.getUser()=syncConfig.getUser();\n    if (!syncConfig.getUser().isValid()) {\n      if (syncConfig.getUser().getAccessToken() == null) {\n        throw new IllegalStateException(\"The SyncUser is already logged out and can not use the provided configuration to open a Realm.\");\n      }\n else {\n        RealmLog.warn(\"Can not use the provided configuration to open a Realm, the SyncUser is no longer valid.\");\n      }\n    }\n    String rosServerUrl=syncConfig.getServerUrl().toString();\n    String rosUserIdentity=syncConfig.getUser().getIdentity();\n    String syncRealmAuthUrl=syncConfig.getUser().getAuthenticationUrl().toString();\n    String rosSerializedUser=syncConfig.getUser().toJson();\n    return new Object[]{rosUserIdentity,rosServerUrl,syncRealmAuthUrl,rosSerializedUser,syncConfig.syncClientValidateSsl(),syncConfig.getServerCertificateFilePath()};\n  }\n else {\n    return new Object[6];\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 12
    } ],
    "tokenLength" : 2,
    "type" : "io.realm.SyncUser"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 93,
    "startColumnNumber" : 17,
    "endLineNumber" : 93,
    "endColumnNumber" : 37
  }, {
    "charLength" : 20,
    "startLineNumber" : 94,
    "startColumnNumber" : 20,
    "endLineNumber" : 94,
    "endColumnNumber" : 40
  }, {
    "charLength" : 20,
    "startLineNumber" : 104,
    "startColumnNumber" : 37,
    "endLineNumber" : 104,
    "endColumnNumber" : 57
  }, {
    "charLength" : 20,
    "startLineNumber" : 105,
    "startColumnNumber" : 38,
    "endLineNumber" : 105,
    "endColumnNumber" : 58
  }, {
    "charLength" : 20,
    "startLineNumber" : 106,
    "startColumnNumber" : 39,
    "endLineNumber" : 106,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ ]
}