{
  "id" : 14,
  "expression" : "sequenceBatch.getSize()",
  "projectName" : "LMAX-Exchange@disruptor",
  "commitID" : "f8866cc1dd11dfd01aa7bb8fec0735d7d9cffc10",
  "filePath" : "code/src/main/com/lmax/disruptor/RingBuffer.java",
  "occurrences" : 3,
  "expressionList" : [ {
    "nodeContext" : "sequenceBatch.getSize()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 144,
      "startColumnNumber" : 12,
      "endLineNumber" : 144,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 144,
        "startColumnNumber" : 12,
        "endLineNumber" : 144,
        "endColumnNumber" : 51
      },
      "nodeContext" : "sequenceBatch.getSize() > events.length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 144,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (sequenceBatch.getSize() > events.length) {\n  final String msg=\"Batch size \" + sequenceBatch.getSize() + \" is greater than buffer size of \"+ events.length;\n  throw new IllegalArgumentException(msg);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 483,
        "startLineNumber" : 142,
        "startColumnNumber" : 4,
        "endLineNumber" : 154,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int sequenceBatch.getSize()=sequenceBatch.getSize();\n  if (sequenceBatch.getSize() > events.length) {\n    final String msg=\"Batch size \" + sequenceBatch.getSize() + \" is greater than buffer size of \"+ events.length;\n    throw new IllegalArgumentException(msg);\n  }\n  final long sequence=claimStrategy.incrementAndGet(sequenceBatch.getSize());\n  sequenceBatch.setEnd(sequence);\n  claimStrategy.ensureSequencesAreInRange(sequence,sequencesToTrack);\n  return sequenceBatch;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 566,
        "startLineNumber" : 140,
        "startColumnNumber" : 4,
        "endLineNumber" : 154,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public SequenceBatch nextSequenceBatch(final SequenceBatch sequenceBatch){\n  final int sequenceBatch.getSize()=sequenceBatch.getSize();\n  if (sequenceBatch.getSize() > events.length) {\n    final String msg=\"Batch size \" + sequenceBatch.getSize() + \" is greater than buffer size of \"+ events.length;\n    throw new IllegalArgumentException(msg);\n  }\n  final long sequence=claimStrategy.incrementAndGet(sequenceBatch.getSize());\n  sequenceBatch.setEnd(sequence);\n  claimStrategy.ensureSequencesAreInRange(sequence,sequencesToTrack);\n  return sequenceBatch;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 70,
      "astHeight" : 9
    } ],
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "sequenceBatch.getSize()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 146,
      "startColumnNumber" : 47,
      "endLineNumber" : 146,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 146,
        "startColumnNumber" : 31,
        "endLineNumber" : 146,
        "endColumnNumber" : 122
      },
      "nodeContext" : "\"Batch size \" + sequenceBatch.getSize() + \" is greater than buffer size of \"+ events.length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 146,
        "startColumnNumber" : 25,
        "endLineNumber" : 146,
        "endColumnNumber" : 120
      },
      "nodeContext" : "msg=\"Batch size \" + sequenceBatch.getSize() + \" is greater than buffer size of \"+ events.length",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 146,
        "startColumnNumber" : 12,
        "endLineNumber" : 146,
        "endColumnNumber" : 122
      },
      "nodeContext" : "final String msg=\"Batch size \" + sequenceBatch.getSize() + \" is greater than buffer size of \"+ events.length;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 145,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final String msg=\"Batch size \" + sequenceBatch.getSize() + \" is greater than buffer size of \"+ events.length;\n  throw new IllegalArgumentException(msg);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 144,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (sequenceBatch.getSize() > events.length) {\n  final String msg=\"Batch size \" + sequenceBatch.getSize() + \" is greater than buffer size of \"+ events.length;\n  throw new IllegalArgumentException(msg);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 483,
        "startLineNumber" : 142,
        "startColumnNumber" : 4,
        "endLineNumber" : 154,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int sequenceBatch.getSize()=sequenceBatch.getSize();\n  if (sequenceBatch.getSize() > events.length) {\n    final String msg=\"Batch size \" + sequenceBatch.getSize() + \" is greater than buffer size of \"+ events.length;\n    throw new IllegalArgumentException(msg);\n  }\n  final long sequence=claimStrategy.incrementAndGet(sequenceBatch.getSize());\n  sequenceBatch.setEnd(sequence);\n  claimStrategy.ensureSequencesAreInRange(sequence,sequencesToTrack);\n  return sequenceBatch;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 566,
        "startLineNumber" : 140,
        "startColumnNumber" : 4,
        "endLineNumber" : 154,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public SequenceBatch nextSequenceBatch(final SequenceBatch sequenceBatch){\n  final int sequenceBatch.getSize()=sequenceBatch.getSize();\n  if (sequenceBatch.getSize() > events.length) {\n    final String msg=\"Batch size \" + sequenceBatch.getSize() + \" is greater than buffer size of \"+ events.length;\n    throw new IllegalArgumentException(msg);\n  }\n  final long sequence=claimStrategy.incrementAndGet(sequenceBatch.getSize());\n  sequenceBatch.setEnd(sequence);\n  claimStrategy.ensureSequencesAreInRange(sequence,sequencesToTrack);\n  return sequenceBatch;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 70,
      "astHeight" : 9
    } ],
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "sequenceBatch.getSize()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 150,
      "startColumnNumber" : 60,
      "endLineNumber" : 150,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 150,
        "startColumnNumber" : 30,
        "endLineNumber" : 150,
        "endColumnNumber" : 84
      },
      "nodeContext" : "claimStrategy.incrementAndGet(sequenceBatch.getSize())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 150,
        "startColumnNumber" : 19,
        "endLineNumber" : 150,
        "endColumnNumber" : 82
      },
      "nodeContext" : "sequence=claimStrategy.incrementAndGet(sequenceBatch.getSize())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 150,
        "startColumnNumber" : 8,
        "endLineNumber" : 150,
        "endColumnNumber" : 84
      },
      "nodeContext" : "final long sequence=claimStrategy.incrementAndGet(sequenceBatch.getSize());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 483,
        "startLineNumber" : 142,
        "startColumnNumber" : 4,
        "endLineNumber" : 154,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int sequenceBatch.getSize()=sequenceBatch.getSize();\n  if (sequenceBatch.getSize() > events.length) {\n    final String msg=\"Batch size \" + sequenceBatch.getSize() + \" is greater than buffer size of \"+ events.length;\n    throw new IllegalArgumentException(msg);\n  }\n  final long sequence=claimStrategy.incrementAndGet(sequenceBatch.getSize());\n  sequenceBatch.setEnd(sequence);\n  claimStrategy.ensureSequencesAreInRange(sequence,sequencesToTrack);\n  return sequenceBatch;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 566,
        "startLineNumber" : 140,
        "startColumnNumber" : 4,
        "endLineNumber" : 154,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public SequenceBatch nextSequenceBatch(final SequenceBatch sequenceBatch){\n  final int sequenceBatch.getSize()=sequenceBatch.getSize();\n  if (sequenceBatch.getSize() > events.length) {\n    final String msg=\"Batch size \" + sequenceBatch.getSize() + \" is greater than buffer size of \"+ events.length;\n    throw new IllegalArgumentException(msg);\n  }\n  final long sequence=claimStrategy.incrementAndGet(sequenceBatch.getSize());\n  sequenceBatch.setEnd(sequence);\n  claimStrategy.ensureSequencesAreInRange(sequence,sequencesToTrack);\n  return sequenceBatch;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 70,
      "astHeight" : 9
    } ],
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 144,
    "startColumnNumber" : 12,
    "endLineNumber" : 144,
    "endColumnNumber" : 35
  }, {
    "charLength" : 23,
    "startLineNumber" : 146,
    "startColumnNumber" : 47,
    "endLineNumber" : 146,
    "endColumnNumber" : 70
  }, {
    "charLength" : 23,
    "startLineNumber" : 150,
    "startColumnNumber" : 60,
    "endLineNumber" : 150,
    "endColumnNumber" : 83
  } ],
  "layoutRelationDataList" : [ ]
}