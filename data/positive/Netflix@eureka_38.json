{
  "id" : 38,
  "expression" : "InstanceStatus.STARTING",
  "projectName" : "Netflix@eureka",
  "commitID" : "c3164d48451a4a7290cc39e279169e748fa7a2b7",
  "filePath" : "eureka-client/src/main/java/com/netflix/appinfo/ApplicationInfoManager.java",
  "occurrences" : 2,
  "expressionList" : [ {
    "nodeContext" : "InstanceStatus.STARTING",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 98,
      "startColumnNumber" : 69,
      "endLineNumber" : 98,
      "endColumnNumber" : 92
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 98,
        "startColumnNumber" : 28,
        "endLineNumber" : 98,
        "endColumnNumber" : 92
      },
      "nodeContext" : "\"Setting initial instance status as: \" + InstanceStatus.STARTING",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 98,
        "startColumnNumber" : 16,
        "endLineNumber" : 98,
        "endColumnNumber" : 93
      },
      "nodeContext" : "logger.info(\"Setting initial instance status as: \" + InstanceStatus.STARTING)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 98,
        "startColumnNumber" : 16,
        "endLineNumber" : 98,
        "endColumnNumber" : 95
      },
      "nodeContext" : "logger.info(\"Setting initial instance status as: \" + InstanceStatus.STARTING);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 96,
        "startColumnNumber" : 49,
        "endLineNumber" : 100,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  InstanceStatus InstanceStatus.STARTING=InstanceStatus.STARTING;\n  logger.info(\"Setting initial instance status as: \" + InstanceStatus.STARTING);\n  builder.setStatus(InstanceStatus.STARTING);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 468,
        "startLineNumber" : 96,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!config.isInstanceEnabledOnit()) {\n  InstanceStatus InstanceStatus.STARTING=InstanceStatus.STARTING;\n  logger.info(\"Setting initial instance status as: \" + InstanceStatus.STARTING);\n  builder.setStatus(InstanceStatus.STARTING);\n}\n else {\n  logger.info(\"Setting initial instance status as: \" + InstanceStatus.UP + \". This may be too early for the instance to advertise itself as available. \"+ \"You would instead want to control this via a healthcheck handler.\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1822,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 116,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  this.config=config;\n  LeaseInfo.Builder leaseInfoBuilder=LeaseInfo.Builder.newBuilder().setRenewalIntervalInSecs(config.getLeaseRenewalIntervalInSeconds()).setDurationInSecs(config.getLeaseExpirationDurationInSeconds());\n  InstanceInfo.Builder builder=InstanceInfo.Builder.newBuilder();\n  builder.setNamespace(config.getNamespace()).setAppName(config.getAppname()).setDataCenterInfo(config.getDataCenterInfo()).setIPAddr(config.getIpAddress()).setHostName(config.getHostName(false)).setPort(config.getNonSecurePort()).enablePort(PortType.UNSECURE,config.isNonSecurePortEnabled()).setSecurePort(config.getSecurePort()).enablePort(PortType.SECURE,config.getSecurePortEnabled()).setVIPAddress(config.getVirtualHostName()).setSecureVIPAddress(config.getSecureVirtualHostName()).setHomePageUrl(config.getHomePageUrlPath(),config.getHomePageUrl()).setStatusPageUrl(config.getStatusPageUrlPath(),config.getStatusPageUrl()).setHealthCheckUrls(config.getHealthCheckUrlPath(),config.getHealthCheckUrl(),config.getSecureHealthCheckUrl()).setASGName(config.getASGName());\n  if (!config.isInstanceEnabledOnit()) {\n    InstanceStatus InstanceStatus.STARTING=InstanceStatus.STARTING;\n    logger.info(\"Setting initial instance status as: \" + InstanceStatus.STARTING);\n    builder.setStatus(InstanceStatus.STARTING);\n  }\n else {\n    logger.info(\"Setting initial instance status as: \" + InstanceStatus.UP + \". This may be too early for the instance to advertise itself as available. \"+ \"You would instead want to control this via a healthcheck handler.\");\n  }\n  for (  Map.Entry<String,String> mapEntry : config.getMetadataMap().entrySet()) {\n    String key=mapEntry.getKey();\n    String value=mapEntry.getValue();\n    builder.add(key,value);\n  }\n  instanceInfo=builder.build();\n  instanceInfo.setLeaseInfo(leaseInfoBuilder.build());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 230,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1930,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 119,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  this.config=config;\n  LeaseInfo.Builder leaseInfoBuilder=LeaseInfo.Builder.newBuilder().setRenewalIntervalInSecs(config.getLeaseRenewalIntervalInSeconds()).setDurationInSecs(config.getLeaseExpirationDurationInSeconds());\n  InstanceInfo.Builder builder=InstanceInfo.Builder.newBuilder();\n  builder.setNamespace(config.getNamespace()).setAppName(config.getAppname()).setDataCenterInfo(config.getDataCenterInfo()).setIPAddr(config.getIpAddress()).setHostName(config.getHostName(false)).setPort(config.getNonSecurePort()).enablePort(PortType.UNSECURE,config.isNonSecurePortEnabled()).setSecurePort(config.getSecurePort()).enablePort(PortType.SECURE,config.getSecurePortEnabled()).setVIPAddress(config.getVirtualHostName()).setSecureVIPAddress(config.getSecureVirtualHostName()).setHomePageUrl(config.getHomePageUrlPath(),config.getHomePageUrl()).setStatusPageUrl(config.getStatusPageUrlPath(),config.getStatusPageUrl()).setHealthCheckUrls(config.getHealthCheckUrlPath(),config.getHealthCheckUrl(),config.getSecureHealthCheckUrl()).setASGName(config.getASGName());\n  if (!config.isInstanceEnabledOnit()) {\n    InstanceStatus InstanceStatus.STARTING=InstanceStatus.STARTING;\n    logger.info(\"Setting initial instance status as: \" + InstanceStatus.STARTING);\n    builder.setStatus(InstanceStatus.STARTING);\n  }\n else {\n    logger.info(\"Setting initial instance status as: \" + InstanceStatus.UP + \". This may be too early for the instance to advertise itself as available. \"+ \"You would instead want to control this via a healthcheck handler.\");\n  }\n  for (  Map.Entry<String,String> mapEntry : config.getMetadataMap().entrySet()) {\n    String key=mapEntry.getKey();\n    String value=mapEntry.getValue();\n    builder.add(key,value);\n  }\n  instanceInfo=builder.build();\n  instanceInfo.setLeaseInfo(leaseInfoBuilder.build());\n}\n catch (Throwable e) {\n  throw new RuntimeException(\"Failed to initialize ApplicationInfoManager\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 243,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1982,
        "startLineNumber" : 58,
        "startColumnNumber" : 59,
        "endLineNumber" : 120,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    this.config=config;\n    LeaseInfo.Builder leaseInfoBuilder=LeaseInfo.Builder.newBuilder().setRenewalIntervalInSecs(config.getLeaseRenewalIntervalInSeconds()).setDurationInSecs(config.getLeaseExpirationDurationInSeconds());\n    InstanceInfo.Builder builder=InstanceInfo.Builder.newBuilder();\n    builder.setNamespace(config.getNamespace()).setAppName(config.getAppname()).setDataCenterInfo(config.getDataCenterInfo()).setIPAddr(config.getIpAddress()).setHostName(config.getHostName(false)).setPort(config.getNonSecurePort()).enablePort(PortType.UNSECURE,config.isNonSecurePortEnabled()).setSecurePort(config.getSecurePort()).enablePort(PortType.SECURE,config.getSecurePortEnabled()).setVIPAddress(config.getVirtualHostName()).setSecureVIPAddress(config.getSecureVirtualHostName()).setHomePageUrl(config.getHomePageUrlPath(),config.getHomePageUrl()).setStatusPageUrl(config.getStatusPageUrlPath(),config.getStatusPageUrl()).setHealthCheckUrls(config.getHealthCheckUrlPath(),config.getHealthCheckUrl(),config.getSecureHealthCheckUrl()).setASGName(config.getASGName());\n    if (!config.isInstanceEnabledOnit()) {\n      InstanceStatus InstanceStatus.STARTING=InstanceStatus.STARTING;\n      logger.info(\"Setting initial instance status as: \" + InstanceStatus.STARTING);\n      builder.setStatus(InstanceStatus.STARTING);\n    }\n else {\n      logger.info(\"Setting initial instance status as: \" + InstanceStatus.UP + \". This may be too early for the instance to advertise itself as available. \"+ \"You would instead want to control this via a healthcheck handler.\");\n    }\n    for (    Map.Entry<String,String> mapEntry : config.getMetadataMap().entrySet()) {\n      String key=mapEntry.getKey();\n      String value=mapEntry.getValue();\n      builder.add(key,value);\n    }\n    instanceInfo=builder.build();\n    instanceInfo.setLeaseInfo(leaseInfoBuilder.build());\n  }\n catch (  Throwable e) {\n    throw new RuntimeException(\"Failed to initialize ApplicationInfoManager\",e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 244,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2036,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 120,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void initComponent(EurekaInstanceConfig config){\n  try {\n    this.config=config;\n    LeaseInfo.Builder leaseInfoBuilder=LeaseInfo.Builder.newBuilder().setRenewalIntervalInSecs(config.getLeaseRenewalIntervalInSeconds()).setDurationInSecs(config.getLeaseExpirationDurationInSeconds());\n    InstanceInfo.Builder builder=InstanceInfo.Builder.newBuilder();\n    builder.setNamespace(config.getNamespace()).setAppName(config.getAppname()).setDataCenterInfo(config.getDataCenterInfo()).setIPAddr(config.getIpAddress()).setHostName(config.getHostName(false)).setPort(config.getNonSecurePort()).enablePort(PortType.UNSECURE,config.isNonSecurePortEnabled()).setSecurePort(config.getSecurePort()).enablePort(PortType.SECURE,config.getSecurePortEnabled()).setVIPAddress(config.getVirtualHostName()).setSecureVIPAddress(config.getSecureVirtualHostName()).setHomePageUrl(config.getHomePageUrlPath(),config.getHomePageUrl()).setStatusPageUrl(config.getStatusPageUrlPath(),config.getStatusPageUrl()).setHealthCheckUrls(config.getHealthCheckUrlPath(),config.getHealthCheckUrl(),config.getSecureHealthCheckUrl()).setASGName(config.getASGName());\n    if (!config.isInstanceEnabledOnit()) {\n      InstanceStatus InstanceStatus.STARTING=InstanceStatus.STARTING;\n      logger.info(\"Setting initial instance status as: \" + InstanceStatus.STARTING);\n      builder.setStatus(InstanceStatus.STARTING);\n    }\n else {\n      logger.info(\"Setting initial instance status as: \" + InstanceStatus.UP + \". This may be too early for the instance to advertise itself as available. \"+ \"You would instead want to control this via a healthcheck handler.\");\n    }\n    for (    Map.Entry<String,String> mapEntry : config.getMetadataMap().entrySet()) {\n      String key=mapEntry.getKey();\n      String value=mapEntry.getValue();\n      builder.add(key,value);\n    }\n    instanceInfo=builder.build();\n    instanceInfo.setLeaseInfo(leaseInfoBuilder.build());\n  }\n catch (  Throwable e) {\n    throw new RuntimeException(\"Failed to initialize ApplicationInfoManager\",e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 252,
      "astHeight" : 22
    } ],
    "tokenLength" : 2,
    "type" : "com.netflix.appinfo.InstanceInfo.InstanceStatus"
  }, {
    "nodeContext" : "InstanceStatus.STARTING",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 99,
      "startColumnNumber" : 34,
      "endLineNumber" : 99,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 99,
        "startColumnNumber" : 16,
        "endLineNumber" : 99,
        "endColumnNumber" : 58
      },
      "nodeContext" : "builder.setStatus(InstanceStatus.STARTING)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 99,
        "startColumnNumber" : 16,
        "endLineNumber" : 99,
        "endColumnNumber" : 60
      },
      "nodeContext" : "builder.setStatus(InstanceStatus.STARTING);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 96,
        "startColumnNumber" : 49,
        "endLineNumber" : 100,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  InstanceStatus InstanceStatus.STARTING=InstanceStatus.STARTING;\n  logger.info(\"Setting initial instance status as: \" + InstanceStatus.STARTING);\n  builder.setStatus(InstanceStatus.STARTING);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 468,
        "startLineNumber" : 96,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!config.isInstanceEnabledOnit()) {\n  InstanceStatus InstanceStatus.STARTING=InstanceStatus.STARTING;\n  logger.info(\"Setting initial instance status as: \" + InstanceStatus.STARTING);\n  builder.setStatus(InstanceStatus.STARTING);\n}\n else {\n  logger.info(\"Setting initial instance status as: \" + InstanceStatus.UP + \". This may be too early for the instance to advertise itself as available. \"+ \"You would instead want to control this via a healthcheck handler.\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1822,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 116,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  this.config=config;\n  LeaseInfo.Builder leaseInfoBuilder=LeaseInfo.Builder.newBuilder().setRenewalIntervalInSecs(config.getLeaseRenewalIntervalInSeconds()).setDurationInSecs(config.getLeaseExpirationDurationInSeconds());\n  InstanceInfo.Builder builder=InstanceInfo.Builder.newBuilder();\n  builder.setNamespace(config.getNamespace()).setAppName(config.getAppname()).setDataCenterInfo(config.getDataCenterInfo()).setIPAddr(config.getIpAddress()).setHostName(config.getHostName(false)).setPort(config.getNonSecurePort()).enablePort(PortType.UNSECURE,config.isNonSecurePortEnabled()).setSecurePort(config.getSecurePort()).enablePort(PortType.SECURE,config.getSecurePortEnabled()).setVIPAddress(config.getVirtualHostName()).setSecureVIPAddress(config.getSecureVirtualHostName()).setHomePageUrl(config.getHomePageUrlPath(),config.getHomePageUrl()).setStatusPageUrl(config.getStatusPageUrlPath(),config.getStatusPageUrl()).setHealthCheckUrls(config.getHealthCheckUrlPath(),config.getHealthCheckUrl(),config.getSecureHealthCheckUrl()).setASGName(config.getASGName());\n  if (!config.isInstanceEnabledOnit()) {\n    InstanceStatus InstanceStatus.STARTING=InstanceStatus.STARTING;\n    logger.info(\"Setting initial instance status as: \" + InstanceStatus.STARTING);\n    builder.setStatus(InstanceStatus.STARTING);\n  }\n else {\n    logger.info(\"Setting initial instance status as: \" + InstanceStatus.UP + \". This may be too early for the instance to advertise itself as available. \"+ \"You would instead want to control this via a healthcheck handler.\");\n  }\n  for (  Map.Entry<String,String> mapEntry : config.getMetadataMap().entrySet()) {\n    String key=mapEntry.getKey();\n    String value=mapEntry.getValue();\n    builder.add(key,value);\n  }\n  instanceInfo=builder.build();\n  instanceInfo.setLeaseInfo(leaseInfoBuilder.build());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 230,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1930,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 119,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  this.config=config;\n  LeaseInfo.Builder leaseInfoBuilder=LeaseInfo.Builder.newBuilder().setRenewalIntervalInSecs(config.getLeaseRenewalIntervalInSeconds()).setDurationInSecs(config.getLeaseExpirationDurationInSeconds());\n  InstanceInfo.Builder builder=InstanceInfo.Builder.newBuilder();\n  builder.setNamespace(config.getNamespace()).setAppName(config.getAppname()).setDataCenterInfo(config.getDataCenterInfo()).setIPAddr(config.getIpAddress()).setHostName(config.getHostName(false)).setPort(config.getNonSecurePort()).enablePort(PortType.UNSECURE,config.isNonSecurePortEnabled()).setSecurePort(config.getSecurePort()).enablePort(PortType.SECURE,config.getSecurePortEnabled()).setVIPAddress(config.getVirtualHostName()).setSecureVIPAddress(config.getSecureVirtualHostName()).setHomePageUrl(config.getHomePageUrlPath(),config.getHomePageUrl()).setStatusPageUrl(config.getStatusPageUrlPath(),config.getStatusPageUrl()).setHealthCheckUrls(config.getHealthCheckUrlPath(),config.getHealthCheckUrl(),config.getSecureHealthCheckUrl()).setASGName(config.getASGName());\n  if (!config.isInstanceEnabledOnit()) {\n    InstanceStatus InstanceStatus.STARTING=InstanceStatus.STARTING;\n    logger.info(\"Setting initial instance status as: \" + InstanceStatus.STARTING);\n    builder.setStatus(InstanceStatus.STARTING);\n  }\n else {\n    logger.info(\"Setting initial instance status as: \" + InstanceStatus.UP + \". This may be too early for the instance to advertise itself as available. \"+ \"You would instead want to control this via a healthcheck handler.\");\n  }\n  for (  Map.Entry<String,String> mapEntry : config.getMetadataMap().entrySet()) {\n    String key=mapEntry.getKey();\n    String value=mapEntry.getValue();\n    builder.add(key,value);\n  }\n  instanceInfo=builder.build();\n  instanceInfo.setLeaseInfo(leaseInfoBuilder.build());\n}\n catch (Throwable e) {\n  throw new RuntimeException(\"Failed to initialize ApplicationInfoManager\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 243,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1982,
        "startLineNumber" : 58,
        "startColumnNumber" : 59,
        "endLineNumber" : 120,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    this.config=config;\n    LeaseInfo.Builder leaseInfoBuilder=LeaseInfo.Builder.newBuilder().setRenewalIntervalInSecs(config.getLeaseRenewalIntervalInSeconds()).setDurationInSecs(config.getLeaseExpirationDurationInSeconds());\n    InstanceInfo.Builder builder=InstanceInfo.Builder.newBuilder();\n    builder.setNamespace(config.getNamespace()).setAppName(config.getAppname()).setDataCenterInfo(config.getDataCenterInfo()).setIPAddr(config.getIpAddress()).setHostName(config.getHostName(false)).setPort(config.getNonSecurePort()).enablePort(PortType.UNSECURE,config.isNonSecurePortEnabled()).setSecurePort(config.getSecurePort()).enablePort(PortType.SECURE,config.getSecurePortEnabled()).setVIPAddress(config.getVirtualHostName()).setSecureVIPAddress(config.getSecureVirtualHostName()).setHomePageUrl(config.getHomePageUrlPath(),config.getHomePageUrl()).setStatusPageUrl(config.getStatusPageUrlPath(),config.getStatusPageUrl()).setHealthCheckUrls(config.getHealthCheckUrlPath(),config.getHealthCheckUrl(),config.getSecureHealthCheckUrl()).setASGName(config.getASGName());\n    if (!config.isInstanceEnabledOnit()) {\n      InstanceStatus InstanceStatus.STARTING=InstanceStatus.STARTING;\n      logger.info(\"Setting initial instance status as: \" + InstanceStatus.STARTING);\n      builder.setStatus(InstanceStatus.STARTING);\n    }\n else {\n      logger.info(\"Setting initial instance status as: \" + InstanceStatus.UP + \". This may be too early for the instance to advertise itself as available. \"+ \"You would instead want to control this via a healthcheck handler.\");\n    }\n    for (    Map.Entry<String,String> mapEntry : config.getMetadataMap().entrySet()) {\n      String key=mapEntry.getKey();\n      String value=mapEntry.getValue();\n      builder.add(key,value);\n    }\n    instanceInfo=builder.build();\n    instanceInfo.setLeaseInfo(leaseInfoBuilder.build());\n  }\n catch (  Throwable e) {\n    throw new RuntimeException(\"Failed to initialize ApplicationInfoManager\",e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 244,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2036,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 120,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void initComponent(EurekaInstanceConfig config){\n  try {\n    this.config=config;\n    LeaseInfo.Builder leaseInfoBuilder=LeaseInfo.Builder.newBuilder().setRenewalIntervalInSecs(config.getLeaseRenewalIntervalInSeconds()).setDurationInSecs(config.getLeaseExpirationDurationInSeconds());\n    InstanceInfo.Builder builder=InstanceInfo.Builder.newBuilder();\n    builder.setNamespace(config.getNamespace()).setAppName(config.getAppname()).setDataCenterInfo(config.getDataCenterInfo()).setIPAddr(config.getIpAddress()).setHostName(config.getHostName(false)).setPort(config.getNonSecurePort()).enablePort(PortType.UNSECURE,config.isNonSecurePortEnabled()).setSecurePort(config.getSecurePort()).enablePort(PortType.SECURE,config.getSecurePortEnabled()).setVIPAddress(config.getVirtualHostName()).setSecureVIPAddress(config.getSecureVirtualHostName()).setHomePageUrl(config.getHomePageUrlPath(),config.getHomePageUrl()).setStatusPageUrl(config.getStatusPageUrlPath(),config.getStatusPageUrl()).setHealthCheckUrls(config.getHealthCheckUrlPath(),config.getHealthCheckUrl(),config.getSecureHealthCheckUrl()).setASGName(config.getASGName());\n    if (!config.isInstanceEnabledOnit()) {\n      InstanceStatus InstanceStatus.STARTING=InstanceStatus.STARTING;\n      logger.info(\"Setting initial instance status as: \" + InstanceStatus.STARTING);\n      builder.setStatus(InstanceStatus.STARTING);\n    }\n else {\n      logger.info(\"Setting initial instance status as: \" + InstanceStatus.UP + \". This may be too early for the instance to advertise itself as available. \"+ \"You would instead want to control this via a healthcheck handler.\");\n    }\n    for (    Map.Entry<String,String> mapEntry : config.getMetadataMap().entrySet()) {\n      String key=mapEntry.getKey();\n      String value=mapEntry.getValue();\n      builder.add(key,value);\n    }\n    instanceInfo=builder.build();\n    instanceInfo.setLeaseInfo(leaseInfoBuilder.build());\n  }\n catch (  Throwable e) {\n    throw new RuntimeException(\"Failed to initialize ApplicationInfoManager\",e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 252,
      "astHeight" : 22
    } ],
    "tokenLength" : 2,
    "type" : "com.netflix.appinfo.InstanceInfo.InstanceStatus"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 98,
    "startColumnNumber" : 69,
    "endLineNumber" : 98,
    "endColumnNumber" : 92
  }, {
    "charLength" : 23,
    "startLineNumber" : 99,
    "startColumnNumber" : 34,
    "endLineNumber" : 99,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}