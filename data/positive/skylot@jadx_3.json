{
  "id" : 3,
  "expression" : "getParamName(annCls,e.getKey())",
  "projectName" : "skylot@jadx",
  "commitID" : "29d3ce15a8a2dcf2e5cb5c383d20a90a910d672e",
  "filePath" : "jadx-core/src/main/java/jadx/core/codegen/AnnotationGen.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 1,
  "expressionList" : [ {
    "nodeContext" : "getParamName(annCls,e.getKey())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 89,
      "startColumnNumber" : 11,
      "endLineNumber" : 89,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 89,
        "startColumnNumber" : 11,
        "endLineNumber" : 89,
        "endColumnNumber" : 55
      },
      "nodeContext" : "paramName=getParamName(annCls,e.getKey())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 56
      },
      "nodeContext" : "String paramName=getParamName(annCls,e.getKey());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 87,
        "startColumnNumber" : 87,
        "endLineNumber" : 100,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  Entry<String,Object> e=it.next();\n  String paramName=getParamName(annCls,e.getKey());\n  if (paramName.equals(\"value\") && vl.size() == 1) {\n  }\n else {\n    code.add(paramName);\n    code.add(\" = \");\n  }\n  encodeValue(code,e.getValue());\n  if (it.hasNext()) {\n    code.add(\", \");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 450,
        "startLineNumber" : 87,
        "startColumnNumber" : 3,
        "endLineNumber" : 100,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (Iterator<Entry<String,Object>> it=vl.entrySet().iterator(); it.hasNext(); ) {\n  Entry<String,Object> e=it.next();\n  String paramName=getParamName(annCls,e.getKey());\n  if (paramName.equals(\"value\") && vl.size() == 1) {\n  }\n else {\n    code.add(paramName);\n    code.add(\" = \");\n  }\n  encodeValue(code,e.getValue());\n  if (it.hasNext()) {\n    code.add(\", \");\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 87,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 495,
        "startLineNumber" : 85,
        "startColumnNumber" : 21,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  code.add('(');\n  for (Iterator<Entry<String,Object>> it=vl.entrySet().iterator(); it.hasNext(); ) {\n    Entry<String,Object> e=it.next();\n    String paramName=getParamName(annCls,e.getKey());\n    if (paramName.equals(\"value\") && vl.size() == 1) {\n    }\n else {\n      code.add(paramName);\n      code.add(\" = \");\n    }\n    encodeValue(code,e.getValue());\n    if (it.hasNext()) {\n      code.add(\", \");\n    }\n  }\n  code.add(')');\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 514,
        "startLineNumber" : 85,
        "startColumnNumber" : 2,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (!vl.isEmpty()) {\n  code.add('(');\n  for (Iterator<Entry<String,Object>> it=vl.entrySet().iterator(); it.hasNext(); ) {\n    Entry<String,Object> e=it.next();\n    String paramName=getParamName(annCls,e.getKey());\n    if (paramName.equals(\"value\") && vl.size() == 1) {\n    }\n else {\n      code.add(paramName);\n      code.add(\" = \");\n    }\n    encodeValue(code,e.getValue());\n    if (it.hasNext()) {\n      code.add(\", \");\n    }\n  }\n  code.add(')');\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 103,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 754,
        "startLineNumber" : 75,
        "startColumnNumber" : 62,
        "endLineNumber" : 103,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  code.add('@');\n  ClassNode annCls=cls.dex().resolveClass(a.getType());\n  if (annCls != null) {\n    classGen.useClass(code,annCls);\n  }\n else {\n    classGen.useType(code,a.getType());\n  }\n  Map<String,Object> vl=a.getValues();\n  if (!vl.isEmpty()) {\n    code.add('(');\n    for (Iterator<Entry<String,Object>> it=vl.entrySet().iterator(); it.hasNext(); ) {\n      Entry<String,Object> e=it.next();\n      String paramName=getParamName(annCls,e.getKey());\n      if (paramName.equals(\"value\") && vl.size() == 1) {\n      }\n else {\n        code.add(paramName);\n        code.add(\" = \");\n      }\n      encodeValue(code,e.getValue());\n      if (it.hasNext()) {\n        code.add(\", \");\n      }\n    }\n    code.add(')');\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 155,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 815,
        "startLineNumber" : 75,
        "startColumnNumber" : 1,
        "endLineNumber" : 103,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private void formatAnnotation(CodeWriter code,Annotation a){\n  code.add('@');\n  ClassNode annCls=cls.dex().resolveClass(a.getType());\n  if (annCls != null) {\n    classGen.useClass(code,annCls);\n  }\n else {\n    classGen.useType(code,a.getType());\n  }\n  Map<String,Object> vl=a.getValues();\n  if (!vl.isEmpty()) {\n    code.add('(');\n    for (Iterator<Entry<String,Object>> it=vl.entrySet().iterator(); it.hasNext(); ) {\n      Entry<String,Object> e=it.next();\n      String paramName=getParamName(annCls,e.getKey());\n      if (paramName.equals(\"value\") && vl.size() == 1) {\n      }\n else {\n        code.add(paramName);\n        code.add(\" = \");\n      }\n      encodeValue(code,e.getValue());\n      if (it.hasNext()) {\n        code.add(\", \");\n      }\n    }\n    code.add(')');\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 167,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 56
      },
      "nodeContext" : "String paramName=getParamName(annCls,e.getKey());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "paramName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 90,
      "startColumnNumber" : 8,
      "endLineNumber" : 90,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 33
      },
      "nodeContext" : "paramName.equals(\"value\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 51
      },
      "nodeContext" : "paramName.equals(\"value\") && vl.size() == 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (paramName.equals(\"value\") && vl.size() == 1) {\n}\n else {\n  code.add(paramName);\n  code.add(\" = \");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 87,
        "startColumnNumber" : 87,
        "endLineNumber" : 100,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  Entry<String,Object> e=it.next();\n  String paramName=getParamName(annCls,e.getKey());\n  if (paramName.equals(\"value\") && vl.size() == 1) {\n  }\n else {\n    code.add(paramName);\n    code.add(\" = \");\n  }\n  encodeValue(code,e.getValue());\n  if (it.hasNext()) {\n    code.add(\", \");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 450,
        "startLineNumber" : 87,
        "startColumnNumber" : 3,
        "endLineNumber" : 100,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (Iterator<Entry<String,Object>> it=vl.entrySet().iterator(); it.hasNext(); ) {\n  Entry<String,Object> e=it.next();\n  String paramName=getParamName(annCls,e.getKey());\n  if (paramName.equals(\"value\") && vl.size() == 1) {\n  }\n else {\n    code.add(paramName);\n    code.add(\" = \");\n  }\n  encodeValue(code,e.getValue());\n  if (it.hasNext()) {\n    code.add(\", \");\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 87,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 495,
        "startLineNumber" : 85,
        "startColumnNumber" : 21,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  code.add('(');\n  for (Iterator<Entry<String,Object>> it=vl.entrySet().iterator(); it.hasNext(); ) {\n    Entry<String,Object> e=it.next();\n    String paramName=getParamName(annCls,e.getKey());\n    if (paramName.equals(\"value\") && vl.size() == 1) {\n    }\n else {\n      code.add(paramName);\n      code.add(\" = \");\n    }\n    encodeValue(code,e.getValue());\n    if (it.hasNext()) {\n      code.add(\", \");\n    }\n  }\n  code.add(')');\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 514,
        "startLineNumber" : 85,
        "startColumnNumber" : 2,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (!vl.isEmpty()) {\n  code.add('(');\n  for (Iterator<Entry<String,Object>> it=vl.entrySet().iterator(); it.hasNext(); ) {\n    Entry<String,Object> e=it.next();\n    String paramName=getParamName(annCls,e.getKey());\n    if (paramName.equals(\"value\") && vl.size() == 1) {\n    }\n else {\n      code.add(paramName);\n      code.add(\" = \");\n    }\n    encodeValue(code,e.getValue());\n    if (it.hasNext()) {\n      code.add(\", \");\n    }\n  }\n  code.add(')');\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 103,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 754,
        "startLineNumber" : 75,
        "startColumnNumber" : 62,
        "endLineNumber" : 103,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  code.add('@');\n  ClassNode annCls=cls.dex().resolveClass(a.getType());\n  if (annCls != null) {\n    classGen.useClass(code,annCls);\n  }\n else {\n    classGen.useType(code,a.getType());\n  }\n  Map<String,Object> vl=a.getValues();\n  if (!vl.isEmpty()) {\n    code.add('(');\n    for (Iterator<Entry<String,Object>> it=vl.entrySet().iterator(); it.hasNext(); ) {\n      Entry<String,Object> e=it.next();\n      String paramName=getParamName(annCls,e.getKey());\n      if (paramName.equals(\"value\") && vl.size() == 1) {\n      }\n else {\n        code.add(paramName);\n        code.add(\" = \");\n      }\n      encodeValue(code,e.getValue());\n      if (it.hasNext()) {\n        code.add(\", \");\n      }\n    }\n    code.add(')');\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 155,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 815,
        "startLineNumber" : 75,
        "startColumnNumber" : 1,
        "endLineNumber" : 103,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private void formatAnnotation(CodeWriter code,Annotation a){\n  code.add('@');\n  ClassNode annCls=cls.dex().resolveClass(a.getType());\n  if (annCls != null) {\n    classGen.useClass(code,annCls);\n  }\n else {\n    classGen.useType(code,a.getType());\n  }\n  Map<String,Object> vl=a.getValues();\n  if (!vl.isEmpty()) {\n    code.add('(');\n    for (Iterator<Entry<String,Object>> it=vl.entrySet().iterator(); it.hasNext(); ) {\n      Entry<String,Object> e=it.next();\n      String paramName=getParamName(annCls,e.getKey());\n      if (paramName.equals(\"value\") && vl.size() == 1) {\n      }\n else {\n        code.add(paramName);\n        code.add(\" = \");\n      }\n      encodeValue(code,e.getValue());\n      if (it.hasNext()) {\n        code.add(\", \");\n      }\n    }\n    code.add(')');\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 167,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 51
      },
      "nodeContext" : "paramName.equals(\"value\") && vl.size() == 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "paramName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 93,
      "startColumnNumber" : 14,
      "endLineNumber" : 93,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 93,
        "startColumnNumber" : 5,
        "endLineNumber" : 93,
        "endColumnNumber" : 24
      },
      "nodeContext" : "code.add(paramName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 93,
        "startColumnNumber" : 5,
        "endLineNumber" : 93,
        "endColumnNumber" : 25
      },
      "nodeContext" : "code.add(paramName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 92,
        "startColumnNumber" : 11,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  code.add(paramName);\n  code.add(\" = \");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (paramName.equals(\"value\") && vl.size() == 1) {\n}\n else {\n  code.add(paramName);\n  code.add(\" = \");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 87,
        "startColumnNumber" : 87,
        "endLineNumber" : 100,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  Entry<String,Object> e=it.next();\n  String paramName=getParamName(annCls,e.getKey());\n  if (paramName.equals(\"value\") && vl.size() == 1) {\n  }\n else {\n    code.add(paramName);\n    code.add(\" = \");\n  }\n  encodeValue(code,e.getValue());\n  if (it.hasNext()) {\n    code.add(\", \");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 450,
        "startLineNumber" : 87,
        "startColumnNumber" : 3,
        "endLineNumber" : 100,
        "endColumnNumber" : 4
      },
      "nodeContext" : "for (Iterator<Entry<String,Object>> it=vl.entrySet().iterator(); it.hasNext(); ) {\n  Entry<String,Object> e=it.next();\n  String paramName=getParamName(annCls,e.getKey());\n  if (paramName.equals(\"value\") && vl.size() == 1) {\n  }\n else {\n    code.add(paramName);\n    code.add(\" = \");\n  }\n  encodeValue(code,e.getValue());\n  if (it.hasNext()) {\n    code.add(\", \");\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 87,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 495,
        "startLineNumber" : 85,
        "startColumnNumber" : 21,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  code.add('(');\n  for (Iterator<Entry<String,Object>> it=vl.entrySet().iterator(); it.hasNext(); ) {\n    Entry<String,Object> e=it.next();\n    String paramName=getParamName(annCls,e.getKey());\n    if (paramName.equals(\"value\") && vl.size() == 1) {\n    }\n else {\n      code.add(paramName);\n      code.add(\" = \");\n    }\n    encodeValue(code,e.getValue());\n    if (it.hasNext()) {\n      code.add(\", \");\n    }\n  }\n  code.add(')');\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 514,
        "startLineNumber" : 85,
        "startColumnNumber" : 2,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (!vl.isEmpty()) {\n  code.add('(');\n  for (Iterator<Entry<String,Object>> it=vl.entrySet().iterator(); it.hasNext(); ) {\n    Entry<String,Object> e=it.next();\n    String paramName=getParamName(annCls,e.getKey());\n    if (paramName.equals(\"value\") && vl.size() == 1) {\n    }\n else {\n      code.add(paramName);\n      code.add(\" = \");\n    }\n    encodeValue(code,e.getValue());\n    if (it.hasNext()) {\n      code.add(\", \");\n    }\n  }\n  code.add(')');\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 103,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 754,
        "startLineNumber" : 75,
        "startColumnNumber" : 62,
        "endLineNumber" : 103,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  code.add('@');\n  ClassNode annCls=cls.dex().resolveClass(a.getType());\n  if (annCls != null) {\n    classGen.useClass(code,annCls);\n  }\n else {\n    classGen.useType(code,a.getType());\n  }\n  Map<String,Object> vl=a.getValues();\n  if (!vl.isEmpty()) {\n    code.add('(');\n    for (Iterator<Entry<String,Object>> it=vl.entrySet().iterator(); it.hasNext(); ) {\n      Entry<String,Object> e=it.next();\n      String paramName=getParamName(annCls,e.getKey());\n      if (paramName.equals(\"value\") && vl.size() == 1) {\n      }\n else {\n        code.add(paramName);\n        code.add(\" = \");\n      }\n      encodeValue(code,e.getValue());\n      if (it.hasNext()) {\n        code.add(\", \");\n      }\n    }\n    code.add(')');\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 155,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 815,
        "startLineNumber" : 75,
        "startColumnNumber" : 1,
        "endLineNumber" : 103,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private void formatAnnotation(CodeWriter code,Annotation a){\n  code.add('@');\n  ClassNode annCls=cls.dex().resolveClass(a.getType());\n  if (annCls != null) {\n    classGen.useClass(code,annCls);\n  }\n else {\n    classGen.useType(code,a.getType());\n  }\n  Map<String,Object> vl=a.getValues();\n  if (!vl.isEmpty()) {\n    code.add('(');\n    for (Iterator<Entry<String,Object>> it=vl.entrySet().iterator(); it.hasNext(); ) {\n      Entry<String,Object> e=it.next();\n      String paramName=getParamName(annCls,e.getKey());\n      if (paramName.equals(\"value\") && vl.size() == 1) {\n      }\n else {\n        code.add(paramName);\n        code.add(\" = \");\n      }\n      encodeValue(code,e.getValue());\n      if (it.hasNext()) {\n        code.add(\", \");\n      }\n    }\n    code.add(')');\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 167,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 93,
        "startColumnNumber" : 5,
        "endLineNumber" : 93,
        "endColumnNumber" : 25
      },
      "nodeContext" : "code.add(paramName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 89,
    "startColumnNumber" : 11,
    "endLineNumber" : 89,
    "endColumnNumber" : 20
  }, {
    "charLength" : 9,
    "startLineNumber" : 90,
    "startColumnNumber" : 8,
    "endLineNumber" : 90,
    "endColumnNumber" : 17
  }, {
    "charLength" : 9,
    "startLineNumber" : 93,
    "startColumnNumber" : 14,
    "endLineNumber" : 93,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ ]
}