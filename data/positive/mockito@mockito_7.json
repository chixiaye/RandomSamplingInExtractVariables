{
  "id" : 7,
  "expression" : "invocation.getArgument(i)",
  "projectName" : "mockito@mockito",
  "commitID" : "b5e9400b01f8bfbda436c79ce5f857b3dc613657",
  "filePath" : "src/main/java/org/mockito/internal/stubbing/defaultanswers/RetrieveGenericsForDefaultAnswers.java",
  "occurrences" : 2,
  "expressionList" : [ {
    "nodeContext" : "invocation.getArgument(i)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 119,
      "startColumnNumber" : 20,
      "endLineNumber" : 119,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 119,
        "startColumnNumber" : 20,
        "endLineNumber" : 119,
        "endColumnNumber" : 53
      },
      "nodeContext" : "invocation.getArgument(i) == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 119,
        "startColumnNumber" : 16,
        "endLineNumber" : 121,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (invocation.getArgument(i) == null) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 116,
        "startColumnNumber" : 44,
        "endLineNumber" : 124,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Object invocation.getArgument(i)=invocation.getArgument(i);\n  if (invocation.getArgument(i) == null) {\n    return null;\n  }\n  return invocation.getArgument(i).getClass();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 209,
        "startLineNumber" : 116,
        "startColumnNumber" : 12,
        "endLineNumber" : 124,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (returnType.equals(argType)) {\n  Object invocation.getArgument(i)=invocation.getArgument(i);\n  if (invocation.getArgument(i) == null) {\n    return null;\n  }\n  return invocation.getArgument(i).getClass();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 472,
        "startLineNumber" : 114,
        "startColumnNumber" : 56,
        "endLineNumber" : 131,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Type argType=parameterTypes[i];\n  if (returnType.equals(argType)) {\n    Object invocation.getArgument(i)=invocation.getArgument(i);\n    if (invocation.getArgument(i) == null) {\n      return null;\n    }\n    return invocation.getArgument(i).getClass();\n  }\n  if (argType instanceof GenericArrayType) {\n    argType=((GenericArrayType)argType).getGenericComponentType();\n    if (returnType.equals(argType)) {\n      return invocation.getArgument(i).getClass();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 518,
        "startLineNumber" : 114,
        "startColumnNumber" : 8,
        "endLineNumber" : 131,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < parameterTypes.length; i++) {\n  Type argType=parameterTypes[i];\n  if (returnType.equals(argType)) {\n    Object invocation.getArgument(i)=invocation.getArgument(i);\n    if (invocation.getArgument(i) == null) {\n      return null;\n    }\n    return invocation.getArgument(i).getClass();\n  }\n  if (argType instanceof GenericArrayType) {\n    argType=((GenericArrayType)argType).getGenericComponentType();\n    if (returnType.equals(argType)) {\n      return invocation.getArgument(i).getClass();\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 80,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 650,
        "startLineNumber" : 112,
        "startColumnNumber" : 125,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Type[] parameterTypes=invocation.getMethod().getGenericParameterTypes();\n  for (int i=0; i < parameterTypes.length; i++) {\n    Type argType=parameterTypes[i];\n    if (returnType.equals(argType)) {\n      Object invocation.getArgument(i)=invocation.getArgument(i);\n      if (invocation.getArgument(i) == null) {\n        return null;\n      }\n      return invocation.getArgument(i).getClass();\n    }\n    if (argType instanceof GenericArrayType) {\n      argType=((GenericArrayType)argType).getGenericComponentType();\n      if (returnType.equals(argType)) {\n        return invocation.getArgument(i).getClass();\n      }\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 96,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1033,
        "startLineNumber" : 105,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Find a return type using generic invocation.getArgument(i)s provided by the calling method.\n * @param invocation the current invocation\n * @param returnType the expected return type\n * @return the return type or null if the return type cannot be found\n */\nprivate static Class<?> findTypeFromGenericInArguments(final InvocationOnMock invocation,final TypeVariable returnType){\n  final Type[] parameterTypes=invocation.getMethod().getGenericParameterTypes();\n  for (int i=0; i < parameterTypes.length; i++) {\n    Type argType=parameterTypes[i];\n    if (returnType.equals(argType)) {\n      Object invocation.getArgument(i)=invocation.getArgument(i);\n      if (invocation.getArgument(i) == null) {\n        return null;\n      }\n      return invocation.getArgument(i).getClass();\n    }\n    if (argType instanceof GenericArrayType) {\n      argType=((GenericArrayType)argType).getGenericComponentType();\n      if (returnType.equals(argType)) {\n        return invocation.getArgument(i).getClass();\n      }\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 115,
      "astHeight" : 13
    } ],
    "tokenLength" : 3,
    "type" : "java.lang.Object"
  }, {
    "nodeContext" : "invocation.getArgument(i)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 123,
      "startColumnNumber" : 23,
      "endLineNumber" : 123,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 123,
        "startColumnNumber" : 23,
        "endLineNumber" : 123,
        "endColumnNumber" : 59
      },
      "nodeContext" : "invocation.getArgument(i).getClass()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 123,
        "startColumnNumber" : 16,
        "endLineNumber" : 123,
        "endColumnNumber" : 61
      },
      "nodeContext" : "return invocation.getArgument(i).getClass();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 116,
        "startColumnNumber" : 44,
        "endLineNumber" : 124,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Object invocation.getArgument(i)=invocation.getArgument(i);\n  if (invocation.getArgument(i) == null) {\n    return null;\n  }\n  return invocation.getArgument(i).getClass();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 209,
        "startLineNumber" : 116,
        "startColumnNumber" : 12,
        "endLineNumber" : 124,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (returnType.equals(argType)) {\n  Object invocation.getArgument(i)=invocation.getArgument(i);\n  if (invocation.getArgument(i) == null) {\n    return null;\n  }\n  return invocation.getArgument(i).getClass();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 472,
        "startLineNumber" : 114,
        "startColumnNumber" : 56,
        "endLineNumber" : 131,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Type argType=parameterTypes[i];\n  if (returnType.equals(argType)) {\n    Object invocation.getArgument(i)=invocation.getArgument(i);\n    if (invocation.getArgument(i) == null) {\n      return null;\n    }\n    return invocation.getArgument(i).getClass();\n  }\n  if (argType instanceof GenericArrayType) {\n    argType=((GenericArrayType)argType).getGenericComponentType();\n    if (returnType.equals(argType)) {\n      return invocation.getArgument(i).getClass();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 518,
        "startLineNumber" : 114,
        "startColumnNumber" : 8,
        "endLineNumber" : 131,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < parameterTypes.length; i++) {\n  Type argType=parameterTypes[i];\n  if (returnType.equals(argType)) {\n    Object invocation.getArgument(i)=invocation.getArgument(i);\n    if (invocation.getArgument(i) == null) {\n      return null;\n    }\n    return invocation.getArgument(i).getClass();\n  }\n  if (argType instanceof GenericArrayType) {\n    argType=((GenericArrayType)argType).getGenericComponentType();\n    if (returnType.equals(argType)) {\n      return invocation.getArgument(i).getClass();\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 80,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 650,
        "startLineNumber" : 112,
        "startColumnNumber" : 125,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Type[] parameterTypes=invocation.getMethod().getGenericParameterTypes();\n  for (int i=0; i < parameterTypes.length; i++) {\n    Type argType=parameterTypes[i];\n    if (returnType.equals(argType)) {\n      Object invocation.getArgument(i)=invocation.getArgument(i);\n      if (invocation.getArgument(i) == null) {\n        return null;\n      }\n      return invocation.getArgument(i).getClass();\n    }\n    if (argType instanceof GenericArrayType) {\n      argType=((GenericArrayType)argType).getGenericComponentType();\n      if (returnType.equals(argType)) {\n        return invocation.getArgument(i).getClass();\n      }\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 96,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1033,
        "startLineNumber" : 105,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Find a return type using generic invocation.getArgument(i)s provided by the calling method.\n * @param invocation the current invocation\n * @param returnType the expected return type\n * @return the return type or null if the return type cannot be found\n */\nprivate static Class<?> findTypeFromGenericInArguments(final InvocationOnMock invocation,final TypeVariable returnType){\n  final Type[] parameterTypes=invocation.getMethod().getGenericParameterTypes();\n  for (int i=0; i < parameterTypes.length; i++) {\n    Type argType=parameterTypes[i];\n    if (returnType.equals(argType)) {\n      Object invocation.getArgument(i)=invocation.getArgument(i);\n      if (invocation.getArgument(i) == null) {\n        return null;\n      }\n      return invocation.getArgument(i).getClass();\n    }\n    if (argType instanceof GenericArrayType) {\n      argType=((GenericArrayType)argType).getGenericComponentType();\n      if (returnType.equals(argType)) {\n        return invocation.getArgument(i).getClass();\n      }\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 115,
      "astHeight" : 13
    } ],
    "tokenLength" : 3,
    "type" : "java.lang.Object"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 119,
    "startColumnNumber" : 20,
    "endLineNumber" : 119,
    "endColumnNumber" : 45
  }, {
    "charLength" : 25,
    "startLineNumber" : 123,
    "startColumnNumber" : 23,
    "endLineNumber" : 123,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}