{
  "id" : 19,
  "expression" : "cachedService.getName()",
  "projectName" : "iluwatar@java-design-patterns",
  "commitID" : "cd2a2e7711133d25af19337b3b3078a92225a204",
  "filePath" : "service-locator/src/main/java/com/iluwatar/servicelocator/ServiceCache.java",
  "occurrences" : 1,
  "expressionList" : [ {
    "nodeContext" : "cachedService.getName()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 60,
      "startColumnNumber" : 73,
      "endLineNumber" : 60,
      "endColumnNumber" : 96
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 60,
        "startColumnNumber" : 6,
        "endLineNumber" : 60,
        "endColumnNumber" : 99
      },
      "nodeContext" : "LOGGER.info(\"(cache call) Fetched service {}({}) from cache... !\",cachedService.getName(),id)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 60,
        "startColumnNumber" : 6,
        "endLineNumber" : 60,
        "endColumnNumber" : 101
      },
      "nodeContext" : "LOGGER.info(\"(cache call) Fetched service {}({}) from cache... !\",cachedService.getName(),id);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 263,
        "startLineNumber" : 56,
        "startColumnNumber" : 47,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  var cachedService=serviceCache.get(serviceName);\n  var cachedService.getName()=cachedService.getName();\n  var id=cachedService.getId();\n  LOGGER.info(\"(cache call) Fetched service {}({}) from cache... !\",cachedService.getName(),id);\n  return cachedService;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 306,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (serviceCache.containsKey(serviceName)) {\n  var cachedService=serviceCache.get(serviceName);\n  var cachedService.getName()=cachedService.getName();\n  var id=cachedService.getId();\n  LOGGER.info(\"(cache call) Fetched service {}({}) from cache... !\",cachedService.getName(),id);\n  return cachedService;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 42,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 339,
        "startLineNumber" : 55,
        "startColumnNumber" : 48,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (serviceCache.containsKey(serviceName)) {\n    var cachedService=serviceCache.get(serviceName);\n    var cachedService.getName()=cachedService.getName();\n    var id=cachedService.getId();\n    LOGGER.info(\"(cache call) Fetched service {}({}) from cache... !\",cachedService.getName(),id);\n    return cachedService;\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 551,
        "startLineNumber" : 49,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Get the service from the cache. null if no service is found matching the cachedService.getName()\n * @param serviceName a string\n * @return {@link Service}\n */\npublic Service getService(String serviceName){\n  if (serviceCache.containsKey(serviceName)) {\n    var cachedService=serviceCache.get(serviceName);\n    var cachedService.getName()=cachedService.getName();\n    var id=cachedService.getId();\n    LOGGER.info(\"(cache call) Fetched service {}({}) from cache... !\",cachedService.getName(),id);\n    return cachedService;\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 55,
      "astHeight" : 8
    } ],
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 60,
    "startColumnNumber" : 73,
    "endLineNumber" : 60,
    "endColumnNumber" : 96
  } ],
  "layoutRelationDataList" : [ ]
}