{
  "id" : 17,
  "expression" : "\" Time：\" + timing + \" ms\" + \" - ID：\" + ms.getId() + \"\\n Execute SQL：\" + formatSql + \"\\n\"",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "e28ea755442e8730859aeca1c5ce05ba22b67fd8",
  "filePath" : "mybatis-plus/src/main/java/com/baomidou/mybatisplus/plugins/PerformanceInterceptor.java",
  "occurrences" : 3,
  "expressionList" : [ {
    "nodeContext" : "\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\"",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 83,
      "startLineNumber" : 102,
      "startColumnNumber" : 29,
      "endLineNumber" : 102,
      "endColumnNumber" : 112
    },
    "astNodeNumber" : 11,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 102,
        "startColumnNumber" : 16,
        "endLineNumber" : 102,
        "endColumnNumber" : 113
      },
      "nodeContext" : "logger.error(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 102,
        "startColumnNumber" : 16,
        "endLineNumber" : 102,
        "endColumnNumber" : 115
      },
      "nodeContext" : "logger.error(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 101,
        "startColumnNumber" : 50,
        "endLineNumber" : 103,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  logger.error(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 254,
        "startLineNumber" : 101,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (maxTime >= 1 && timing > maxTime) {\n  logger.error(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n}\n else {\n  logger.debug(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 268,
        "startLineNumber" : 100,
        "startColumnNumber" : 33,
        "endLineNumber" : 106,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (maxTime >= 1 && timing > maxTime) {\n    logger.error(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n  }\n else {\n    logger.debug(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 552,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (this.isWriteInLog()) {\n  if (maxTime >= 1 && timing > maxTime) {\n    logger.error(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n  }\n else {\n    logger.debug(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n  }\n}\n else {\n  System.err.println(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n  if (maxTime >= 1 && timing > maxTime) {\n    throw new MybatisPlusException(\" The SQL execution time is too large, please optimize ! \");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1793,
        "startLineNumber" : 71,
        "startColumnNumber" : 68,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Statement statement;\n  Object firstArg=invocation.getArgs()[0];\n  if (Proxy.isProxyClass(firstArg.getClass())) {\n    statement=(Statement)SystemMetaObject.forObject(firstArg).getValue(\"h.statement\");\n  }\n else {\n    statement=(Statement)firstArg;\n  }\n  try {\n    statement.getClass().getDeclaredField(\"stmt\");\n    statement=(Statement)SystemMetaObject.forObject(statement).getValue(\"stmt.statement\");\n  }\n catch (  Exception e) {\n  }\n  String originalSql=statement.toString();\n  int index=originalSql.indexOf(':');\n  String sql=originalSql;\n  if (index > 0) {\n    sql=originalSql.substring(index + 1,originalSql.length());\n  }\n  long start=SystemClock.now();\n  Object result=invocation.proceed();\n  long end=SystemClock.now();\n  long timing=end - start;\n  String formatSql=SqlUtils.sqlFormat(sql,format);\n  Object target=PluginUtils.realTarget(invocation.getTarget());\n  MetaObject metaObject=SystemMetaObject.forObject(target);\n  MappedStatement ms=(MappedStatement)metaObject.getValue(\"delegate.mappedStatement\");\n  String \" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\"=\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\";\n  if (this.isWriteInLog()) {\n    if (maxTime >= 1 && timing > maxTime) {\n      logger.error(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n    }\n else {\n      logger.debug(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n    }\n  }\n else {\n    System.err.println(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n    if (maxTime >= 1 && timing > maxTime) {\n      throw new MybatisPlusException(\" The SQL execution time is too large, please optimize ! \");\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 258,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1857,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public Object intercept(Invocation invocation) throws Throwable {\n  Statement statement;\n  Object firstArg=invocation.getArgs()[0];\n  if (Proxy.isProxyClass(firstArg.getClass())) {\n    statement=(Statement)SystemMetaObject.forObject(firstArg).getValue(\"h.statement\");\n  }\n else {\n    statement=(Statement)firstArg;\n  }\n  try {\n    statement.getClass().getDeclaredField(\"stmt\");\n    statement=(Statement)SystemMetaObject.forObject(statement).getValue(\"stmt.statement\");\n  }\n catch (  Exception e) {\n  }\n  String originalSql=statement.toString();\n  int index=originalSql.indexOf(':');\n  String sql=originalSql;\n  if (index > 0) {\n    sql=originalSql.substring(index + 1,originalSql.length());\n  }\n  long start=SystemClock.now();\n  Object result=invocation.proceed();\n  long end=SystemClock.now();\n  long timing=end - start;\n  String formatSql=SqlUtils.sqlFormat(sql,format);\n  Object target=PluginUtils.realTarget(invocation.getTarget());\n  MetaObject metaObject=SystemMetaObject.forObject(target);\n  MappedStatement ms=(MappedStatement)metaObject.getValue(\"delegate.mappedStatement\");\n  String \" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\"=\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\";\n  if (this.isWriteInLog()) {\n    if (maxTime >= 1 && timing > maxTime) {\n      logger.error(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n    }\n else {\n      logger.debug(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n    }\n  }\n else {\n    System.err.println(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n    if (maxTime >= 1 && timing > maxTime) {\n      throw new MybatisPlusException(\" The SQL execution time is too large, please optimize ! \");\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 269,
      "astHeight" : 11
    } ],
    "tokenLength" : 18,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\"",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 83,
      "startLineNumber" : 104,
      "startColumnNumber" : 29,
      "endLineNumber" : 104,
      "endColumnNumber" : 112
    },
    "astNodeNumber" : 11,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 104,
        "startColumnNumber" : 16,
        "endLineNumber" : 104,
        "endColumnNumber" : 113
      },
      "nodeContext" : "logger.debug(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 104,
        "startColumnNumber" : 16,
        "endLineNumber" : 104,
        "endColumnNumber" : 115
      },
      "nodeContext" : "logger.debug(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 103,
        "startColumnNumber" : 19,
        "endLineNumber" : 105,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  logger.debug(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 254,
        "startLineNumber" : 101,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (maxTime >= 1 && timing > maxTime) {\n  logger.error(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n}\n else {\n  logger.debug(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 268,
        "startLineNumber" : 100,
        "startColumnNumber" : 33,
        "endLineNumber" : 106,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (maxTime >= 1 && timing > maxTime) {\n    logger.error(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n  }\n else {\n    logger.debug(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 552,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (this.isWriteInLog()) {\n  if (maxTime >= 1 && timing > maxTime) {\n    logger.error(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n  }\n else {\n    logger.debug(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n  }\n}\n else {\n  System.err.println(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n  if (maxTime >= 1 && timing > maxTime) {\n    throw new MybatisPlusException(\" The SQL execution time is too large, please optimize ! \");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1793,
        "startLineNumber" : 71,
        "startColumnNumber" : 68,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Statement statement;\n  Object firstArg=invocation.getArgs()[0];\n  if (Proxy.isProxyClass(firstArg.getClass())) {\n    statement=(Statement)SystemMetaObject.forObject(firstArg).getValue(\"h.statement\");\n  }\n else {\n    statement=(Statement)firstArg;\n  }\n  try {\n    statement.getClass().getDeclaredField(\"stmt\");\n    statement=(Statement)SystemMetaObject.forObject(statement).getValue(\"stmt.statement\");\n  }\n catch (  Exception e) {\n  }\n  String originalSql=statement.toString();\n  int index=originalSql.indexOf(':');\n  String sql=originalSql;\n  if (index > 0) {\n    sql=originalSql.substring(index + 1,originalSql.length());\n  }\n  long start=SystemClock.now();\n  Object result=invocation.proceed();\n  long end=SystemClock.now();\n  long timing=end - start;\n  String formatSql=SqlUtils.sqlFormat(sql,format);\n  Object target=PluginUtils.realTarget(invocation.getTarget());\n  MetaObject metaObject=SystemMetaObject.forObject(target);\n  MappedStatement ms=(MappedStatement)metaObject.getValue(\"delegate.mappedStatement\");\n  String \" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\"=\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\";\n  if (this.isWriteInLog()) {\n    if (maxTime >= 1 && timing > maxTime) {\n      logger.error(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n    }\n else {\n      logger.debug(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n    }\n  }\n else {\n    System.err.println(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n    if (maxTime >= 1 && timing > maxTime) {\n      throw new MybatisPlusException(\" The SQL execution time is too large, please optimize ! \");\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 258,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1857,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public Object intercept(Invocation invocation) throws Throwable {\n  Statement statement;\n  Object firstArg=invocation.getArgs()[0];\n  if (Proxy.isProxyClass(firstArg.getClass())) {\n    statement=(Statement)SystemMetaObject.forObject(firstArg).getValue(\"h.statement\");\n  }\n else {\n    statement=(Statement)firstArg;\n  }\n  try {\n    statement.getClass().getDeclaredField(\"stmt\");\n    statement=(Statement)SystemMetaObject.forObject(statement).getValue(\"stmt.statement\");\n  }\n catch (  Exception e) {\n  }\n  String originalSql=statement.toString();\n  int index=originalSql.indexOf(':');\n  String sql=originalSql;\n  if (index > 0) {\n    sql=originalSql.substring(index + 1,originalSql.length());\n  }\n  long start=SystemClock.now();\n  Object result=invocation.proceed();\n  long end=SystemClock.now();\n  long timing=end - start;\n  String formatSql=SqlUtils.sqlFormat(sql,format);\n  Object target=PluginUtils.realTarget(invocation.getTarget());\n  MetaObject metaObject=SystemMetaObject.forObject(target);\n  MappedStatement ms=(MappedStatement)metaObject.getValue(\"delegate.mappedStatement\");\n  String \" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\"=\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\";\n  if (this.isWriteInLog()) {\n    if (maxTime >= 1 && timing > maxTime) {\n      logger.error(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n    }\n else {\n      logger.debug(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n    }\n  }\n else {\n    System.err.println(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n    if (maxTime >= 1 && timing > maxTime) {\n      throw new MybatisPlusException(\" The SQL execution time is too large, please optimize ! \");\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 269,
      "astHeight" : 11
    } ],
    "tokenLength" : 18,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\"",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 83,
      "startLineNumber" : 107,
      "startColumnNumber" : 31,
      "endLineNumber" : 107,
      "endColumnNumber" : 114
    },
    "astNodeNumber" : 11,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 107,
        "startColumnNumber" : 12,
        "endLineNumber" : 107,
        "endColumnNumber" : 115
      },
      "nodeContext" : "System.err.println(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 107,
        "startColumnNumber" : 12,
        "endLineNumber" : 107,
        "endColumnNumber" : 117
      },
      "nodeContext" : "System.err.println(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 106,
        "startColumnNumber" : 15,
        "endLineNumber" : 111,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  System.err.println(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n  if (maxTime >= 1 && timing > maxTime) {\n    throw new MybatisPlusException(\" The SQL execution time is too large, please optimize ! \");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 552,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (this.isWriteInLog()) {\n  if (maxTime >= 1 && timing > maxTime) {\n    logger.error(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n  }\n else {\n    logger.debug(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n  }\n}\n else {\n  System.err.println(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n  if (maxTime >= 1 && timing > maxTime) {\n    throw new MybatisPlusException(\" The SQL execution time is too large, please optimize ! \");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1793,
        "startLineNumber" : 71,
        "startColumnNumber" : 68,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Statement statement;\n  Object firstArg=invocation.getArgs()[0];\n  if (Proxy.isProxyClass(firstArg.getClass())) {\n    statement=(Statement)SystemMetaObject.forObject(firstArg).getValue(\"h.statement\");\n  }\n else {\n    statement=(Statement)firstArg;\n  }\n  try {\n    statement.getClass().getDeclaredField(\"stmt\");\n    statement=(Statement)SystemMetaObject.forObject(statement).getValue(\"stmt.statement\");\n  }\n catch (  Exception e) {\n  }\n  String originalSql=statement.toString();\n  int index=originalSql.indexOf(':');\n  String sql=originalSql;\n  if (index > 0) {\n    sql=originalSql.substring(index + 1,originalSql.length());\n  }\n  long start=SystemClock.now();\n  Object result=invocation.proceed();\n  long end=SystemClock.now();\n  long timing=end - start;\n  String formatSql=SqlUtils.sqlFormat(sql,format);\n  Object target=PluginUtils.realTarget(invocation.getTarget());\n  MetaObject metaObject=SystemMetaObject.forObject(target);\n  MappedStatement ms=(MappedStatement)metaObject.getValue(\"delegate.mappedStatement\");\n  String \" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\"=\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\";\n  if (this.isWriteInLog()) {\n    if (maxTime >= 1 && timing > maxTime) {\n      logger.error(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n    }\n else {\n      logger.debug(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n    }\n  }\n else {\n    System.err.println(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n    if (maxTime >= 1 && timing > maxTime) {\n      throw new MybatisPlusException(\" The SQL execution time is too large, please optimize ! \");\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 258,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1857,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public Object intercept(Invocation invocation) throws Throwable {\n  Statement statement;\n  Object firstArg=invocation.getArgs()[0];\n  if (Proxy.isProxyClass(firstArg.getClass())) {\n    statement=(Statement)SystemMetaObject.forObject(firstArg).getValue(\"h.statement\");\n  }\n else {\n    statement=(Statement)firstArg;\n  }\n  try {\n    statement.getClass().getDeclaredField(\"stmt\");\n    statement=(Statement)SystemMetaObject.forObject(statement).getValue(\"stmt.statement\");\n  }\n catch (  Exception e) {\n  }\n  String originalSql=statement.toString();\n  int index=originalSql.indexOf(':');\n  String sql=originalSql;\n  if (index > 0) {\n    sql=originalSql.substring(index + 1,originalSql.length());\n  }\n  long start=SystemClock.now();\n  Object result=invocation.proceed();\n  long end=SystemClock.now();\n  long timing=end - start;\n  String formatSql=SqlUtils.sqlFormat(sql,format);\n  Object target=PluginUtils.realTarget(invocation.getTarget());\n  MetaObject metaObject=SystemMetaObject.forObject(target);\n  MappedStatement ms=(MappedStatement)metaObject.getValue(\"delegate.mappedStatement\");\n  String \" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\"=\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\";\n  if (this.isWriteInLog()) {\n    if (maxTime >= 1 && timing > maxTime) {\n      logger.error(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n    }\n else {\n      logger.debug(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n    }\n  }\n else {\n    System.err.println(\" Time：\" + timing + \" ms\"+ \" - ID：\"+ ms.getId()+ \"\\n Execute SQL：\"+ formatSql+ \"\\n\");\n    if (maxTime >= 1 && timing > maxTime) {\n      throw new MybatisPlusException(\" The SQL execution time is too large, please optimize ! \");\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 269,
      "astHeight" : 10
    } ],
    "tokenLength" : 18,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 83,
    "startLineNumber" : 102,
    "startColumnNumber" : 29,
    "endLineNumber" : 102,
    "endColumnNumber" : 112
  }, {
    "charLength" : 83,
    "startLineNumber" : 104,
    "startColumnNumber" : 29,
    "endLineNumber" : 104,
    "endColumnNumber" : 112
  }, {
    "charLength" : 83,
    "startLineNumber" : 107,
    "startColumnNumber" : 31,
    "endLineNumber" : 107,
    "endColumnNumber" : 114
  } ],
  "layoutRelationDataList" : [ ]
}